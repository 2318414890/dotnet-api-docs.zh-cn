<Type Name="RequestBringIntoViewEventHandler" FullName="System.Windows.RequestBringIntoViewEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cda95cbf8cf82761ed796773cf82db1b1779f599" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30675391" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void RequestBringIntoViewEventHandler(object sender, RequestBringIntoViewEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RequestBringIntoViewEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RequestBringIntoViewEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RequestBringIntoViewEventHandler(sender As Object, e As RequestBringIntoViewEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RequestBringIntoViewEventHandler(System::Object ^ sender, RequestBringIntoViewEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.RequestBringIntoViewEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">事件处理程序附加到的对象。</param>
    <param name="e">事件数据。</param>
    <summary>表示将处理 <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> 路由事件的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 处理此事件通常是仅完成的支持的可滚动区域，或通过其他有意设置其呈现大小小于组合元素中所需大小的其子元素内容，并且仅由有意处理完成事件后它在元素树向上路由，并且已达到提供滚动区域支持的第一个父级。 处理方式是通常需要为用户控件的滚动区域的现有实现是<xref:System.Windows.Controls.ScrollViewer>。 如果派生自<xref:System.Windows.Controls.ScrollViewer>，你可以注册的类处理程序<xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>和补充的事件的基的类处理。 你还应考虑使用或类处理的类定义<xref:System.Windows.Controls.ScrollViewer.ScrollChanged>事件而不是<xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>。 或者，如果您创建不是派生自一个完全自定义类<xref:System.Windows.Controls.ScrollViewer>，仍然可以将项目添加类处理通过调用<xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=nameWithType>中的类实例化。  有关类处理的详细信息，请参阅[标记作为 Handled，和类处理的路由事件](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)。  
  
 内容元素可能会导致该事件引发由内容主机 (通过调用<xref:System.Windows.FrameworkContentElement.BringIntoView%2A>和引发<xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>来自内容主机)。 同样，你可以在其中请求要使用的帮助器方法放入视图的逻辑树元素<xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType>。  
  
 A<xref:System.Windows.Controls.ListBox>实现相关但不同的方法<xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.RequestBringIntoViewEventArgs" />
    <altmember cref="P:System.Windows.UIElement.ClipToBounds" />
    <altmember cref="T:System.Windows.Controls.Primitives.ScrollBar" />
    <altmember cref="T:System.Windows.Controls.ScrollViewer" />
    <altmember cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
    <altmember cref="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)" />
  </Docs>
</Type>