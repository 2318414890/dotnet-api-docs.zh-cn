<Type Name="BaseCompatibilityPreferences" FullName="System.Windows.BaseCompatibilityPreferences">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="582b28c3284697d2c05d226b98595dcd4db169e7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36461864" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class BaseCompatibilityPreferences" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed BaseCompatibilityPreferences extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.BaseCompatibilityPreferences" />
  <TypeSignature Language="VB.NET" Value="Public Class BaseCompatibilityPreferences" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseCompatibilityPreferences abstract sealed" />
  <TypeSignature Language="F#" Value="type BaseCompatibilityPreferences = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>包含指定应用程序相对于新的 WPF 功能（在 WindowsBase 程序集中）应如何运行的属性。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="FlowDispatcherSynchronizationContextPriority">
      <MemberSignature Language="C#" Value="public static bool FlowDispatcherSynchronizationContextPriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool FlowDispatcherSynchronizationContextPriority" />
      <MemberSignature Language="DocId" Value="P:System.Windows.BaseCompatibilityPreferences.FlowDispatcherSynchronizationContextPriority" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property FlowDispatcherSynchronizationContextPriority As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool FlowDispatcherSynchronizationContextPriority { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FlowDispatcherSynchronizationContextPriority : bool with get, set" Usage="System.Windows.BaseCompatibilityPreferences.FlowDispatcherSynchronizationContextPriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个指示信息是否有关 <see cref="P:System.Windows.Threading.DispatcherOperation.Priority" /> 保存为 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> 值。</summary>
        <value>
          <see langword="true" /> ，如果 <see cref="P:System.Windows.Threading.DispatcherOperation.Priority" /> 有关的信息保存到 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />；否则， <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性的默认值取决于哪个版本的 WPF，你的应用程序作为目标。  如果你的应用面向 WPF 4.0 或更早版本，默认是`false`。  如果你的应用面向 WPF 4.5，则默认将`true`。  如果此属性用于更改 WPF 的行为，则必须在应用程序的生存期，如从应用程序继承的类的构造函数中的早期更改属性的值。  读取的值后，无法再次更改。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleDispatcherRequestProcessingFailure">
      <MemberSignature Language="C#" Value="public static System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions HandleDispatcherRequestProcessingFailure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.BaseCompatibilityPreferences/HandleDispatcherRequestProcessingFailureOptions HandleDispatcherRequestProcessingFailure" />
      <MemberSignature Language="DocId" Value="P:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailure" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property HandleDispatcherRequestProcessingFailure As BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::BaseCompatibilityPreferences::HandleDispatcherRequestProcessingFailureOptions HandleDispatcherRequestProcessingFailure { System::Windows::BaseCompatibilityPreferences::HandleDispatcherRequestProcessingFailureOptions get(); void set(System::Windows::BaseCompatibilityPreferences::HandleDispatcherRequestProcessingFailureOptions value); };" />
      <MemberSignature Language="F#" Value="member this.HandleDispatcherRequestProcessingFailure : System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions with get, set" Usage="System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.BaseCompatibilityPreferences+HandleDispatcherRequestProcessingFailureOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>定义调度程序如何应对请求处理时遇到的失败。</summary>
        <value>定义调度程序如何应对失败的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
Windows Presentation Foundation 调度程序对请求处理通过设置到其自身的计时器或发布消息时遇到的失败做出反应。 如果这些操作失败，因为基础的操作系统资源已用尽，调度程序停止响应。 通常情况下，将邮件投递速度之快超乎调度程序可以处理这些应用程序或通过使调度程序的消息泵被导致此失败。 若要帮助诊断调度程序的响应的原因，你可以控制调度程序如何响应通过设置此属性的这些故障。

可以随时更改此属性的值。 如果从多个线程进行了更改，则值是由最后一个设置编写器 （"上次编写者赢"行为）。

]]></format>
        </remarks>
        <altmember cref="T:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions" />
      </Docs>
    </Member>
    <Member MemberName="InlineDispatcherSynchronizationContextSend">
      <MemberSignature Language="C#" Value="public static bool InlineDispatcherSynchronizationContextSend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool InlineDispatcherSynchronizationContextSend" />
      <MemberSignature Language="DocId" Value="P:System.Windows.BaseCompatibilityPreferences.InlineDispatcherSynchronizationContextSend" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property InlineDispatcherSynchronizationContextSend As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool InlineDispatcherSynchronizationContextSend { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.InlineDispatcherSynchronizationContextSend : bool with get, set" Usage="System.Windows.BaseCompatibilityPreferences.InlineDispatcherSynchronizationContextSend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，此值指示是 <see cref="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /> 方法将委托置于调度程序队列之上，还是直接调用委托。</summary>
        <value>
          <see langword="true" />如果<see cref="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" />方法将委托置于调度程序队列之上，还是直接调用委托，否则<see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性的默认值取决于哪个版本的 WPF，你的应用程序作为目标。  如果你的应用面向 WPF 4.0 或更早版本，默认是`false`。  如果你的应用面向 WPF 4.5，则默认将`true`。  如果此属性用于更改 WPF 的行为，则必须在应用程序的生存期，如从应用程序继承的类的构造函数中的早期更改属性的值。  读取的值后，无法再次更改。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReuseDispatcherSynchronizationContextInstance">
      <MemberSignature Language="C#" Value="public static bool ReuseDispatcherSynchronizationContextInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ReuseDispatcherSynchronizationContextInstance" />
      <MemberSignature Language="DocId" Value="P:System.Windows.BaseCompatibilityPreferences.ReuseDispatcherSynchronizationContextInstance" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ReuseDispatcherSynchronizationContextInstance As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool ReuseDispatcherSynchronizationContextInstance { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReuseDispatcherSynchronizationContextInstance : bool with get, set" Usage="System.Windows.BaseCompatibilityPreferences.ReuseDispatcherSynchronizationContextInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示单个 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> 是否用于多个调度程序操作。</summary>
        <value>如果单个 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> 为多个计划程序操作，是真实的；否则 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性的默认值取决于哪个版本的 WPF，你的应用程序作为目标。  如果你的应用面向 WPF 4.0 或更早版本，默认是`true`。  如果你的应用面向 WPF 4.5，则默认将`false`。  如果此属性用于更改 WPF 的行为，则必须在应用程序的生存期，如从应用程序继承的类的构造函数中的早期更改属性的值。  读取的值后，无法再次更改。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>