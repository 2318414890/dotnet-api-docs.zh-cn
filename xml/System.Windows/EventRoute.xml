<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EventRoute.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59525f3beca110230ccc72de0151ebde05f618040.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9525f3beca110230ccc72de0151ebde05f618040</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.EventRoute">
          <source>Represents the container for the route to be followed by a routed event.</source>
          <target state="translated">表示路由事件将遵循的路由的容器。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.EventRoute">
          <source>This class corresponds to a valid <ph id="ph1">&lt;xref:System.Windows.RoutedEvent&gt;</ph>, and contains an ordered list of target object and handler list pairs that refer to the event route for that event.</source>
          <target state="translated">此类对应于一个有效<ph id="ph1">&lt;xref:System.Windows.RoutedEvent&gt;</ph>，并包含目标对象和处理程序的列表对该事件的事件路由到引用的排序的列表。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.EventRoute">
          <source><ph id="ph1">&lt;xref:System.Windows.EventRoute&gt;</ph> supports adding new entries to the list and also allows for the handlers in the list to be invoked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.EventRoute&gt;</ph> 支持将新条目添加到列表，还允许列表中的处理程序调用。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.EventRoute">
          <source>Most normal operations for adding handlers for <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> events do not require working with this class (for instance, use <ph id="ph2">&lt;xref:System.Windows.EventManager&gt;</ph> methods to add class handling, or query for existing handlers of an event).</source>
          <target state="translated">用于添加处理程序的最正常操作<ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>事件不需要使用此类 (例如，使用<ph id="ph2">&lt;xref:System.Windows.EventManager&gt;</ph>方法来添加类处理或查询现有的事件的处理程序)。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.EventRoute">
          <source>This class is mainly for use when elements have particular knowledge about child elements or parent elements that make it practical to either add elements to or remove elements from the default calculated event route.</source>
          <target state="translated">当元素具有特定知识有关子元素或使其实际将元素添加到或从默认计算的事件路由中移除元素的父元素时，此类是主要用于使用。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Windows.EventRoute.#ctor(System.Windows.RoutedEvent)">
          <source>The non-NULL event identifier to be associated with this event route.</source>
          <target state="translated">将与此事件路由关联的非 NULL 事件标识符。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.EventRoute.#ctor(System.Windows.RoutedEvent)">
          <source>Initializes an instance of the <ph id="ph1">&lt;see cref="T:System.Windows.EventRoute" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.EventRoute" /&gt;</ph> 类的实例。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.EventRoute.Add(System.Object,System.Delegate,System.Boolean)">
          <source>Specifies the target object of which the handler is to be added to the route.</source>
          <target state="translated">指定目标对象，该目标对象的处理程序将添加到路由。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.EventRoute.Add(System.Object,System.Delegate,System.Boolean)">
          <source>Specifies the handler to be added to the route.</source>
          <target state="translated">指定要添加到路由的处理程序。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.EventRoute.Add(System.Object,System.Delegate,System.Boolean)">
          <source>Indicates whether or not the listener detects events that have already been handled.</source>
          <target state="translated">指示侦听器是否侦测已处理的事件。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.EventRoute.Add(System.Object,System.Delegate,System.Boolean)">
          <source>Adds the specified handler for the specified target to the route.</source>
          <target state="translated">将指定目标的指定处理程序添加到路由。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventRoute.Add(System.Object,System.Delegate,System.Boolean)">
          <source>It is not an error to add a handler for a particular target instance twice.</source>
          <target state="translated">它不是错误两次添加的处理程序的特定目标实例。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventRoute.Add(System.Object,System.Delegate,System.Boolean)">
          <source>In such a case, the handler will be called twice.</source>
          <target state="translated">在这种情况下，将两次调用处理程序。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.EventRoute.PeekBranchNode">
          <source>Returns the top-most element on the event route stack at which two logical trees diverge.</source>
          <target state="translated">返回两个逻辑树分叉处的事件路由堆栈上的最顶层元素。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.EventRoute.PeekBranchNode">
          <source>The top-most element on the event route stack at which two logical trees diverge.</source>
          <target state="translated">两个逻辑树分叉处的事件路由堆栈上的最顶层元素。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.EventRoute.PeekBranchSource">
          <source>Returns the source for the top-most element on the event route stack at which two logical trees diverge.</source>
          <target state="translated">返回两个逻辑树分叉处的事件路由堆栈上最顶层元素的源。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.EventRoute.PeekBranchSource">
          <source>The source for the top-most element on the event route stack at which two logical trees diverge.</source>
          <target state="translated">两个逻辑树分叉处的事件路由堆栈上最顶层元素的源。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.EventRoute.PopBranchNode">
          <source>Returns the top-most node on the event route stack at which two logical trees diverge.</source>
          <target state="translated">返回两个逻辑树分叉处的事件路由堆栈上的最顶层节点。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.EventRoute.PopBranchNode">
          <source>The top-most node on the event route stack at which two logical trees diverge.</source>
          <target state="translated">两个逻辑树分叉处的事件路由堆栈上的最顶层节点。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.EventRoute.PushBranchNode(System.Object,System.Object)">
          <source>The top-most element on the event route stack at which two logical trees diverge.</source>
          <target state="translated">两个逻辑树分叉处的事件路由堆栈上的最顶层元素。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.EventRoute.PushBranchNode(System.Object,System.Object)">
          <source>The source for the top-most element on the event route stack at which two logical trees diverge.</source>
          <target state="translated">两个逻辑树分叉处的事件路由堆栈上最顶层元素的源。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.EventRoute.PushBranchNode(System.Object,System.Object)">
          <source>Adds the top-most node to the event route stack at which two logical trees diverge.</source>
          <target state="translated">向两个逻辑树分叉处的事件路由堆栈添加最顶层节点。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>