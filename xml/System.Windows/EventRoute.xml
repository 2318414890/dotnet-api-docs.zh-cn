<Type Name="EventRoute" FullName="System.Windows.EventRoute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9525f3beca110230ccc72de0151ebde05f618040" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EventRoute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventRoute extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.EventRoute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventRoute" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventRoute sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="948da-101">表示路由事件将遵循的路由的容器。</span>
      <span class="sxs-lookup">
        <span data-stu-id="948da-101">Represents the container for the route to be followed by a routed event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="948da-102">此类对应于一个有效<xref:System.Windows.RoutedEvent>，并包含目标对象和处理程序的列表对该事件的事件路由到引用的排序的列表。</span><span class="sxs-lookup"><span data-stu-id="948da-102">This class corresponds to a valid <xref:System.Windows.RoutedEvent>, and contains an ordered list of target object and handler list pairs that refer to the event route for that event.</span></span> <span data-ttu-id="948da-103"><xref:System.Windows.EventRoute> 支持将新条目添加到列表，还允许列表中的处理程序调用。</span><span class="sxs-lookup"><span data-stu-id="948da-103"><xref:System.Windows.EventRoute> supports adding new entries to the list and also allows for the handlers in the list to be invoked.</span></span>  
  
 <span data-ttu-id="948da-104">用于添加处理程序的最正常操作[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]事件不需要使用此类 (例如，使用<xref:System.Windows.EventManager>方法来添加类处理或查询现有的事件的处理程序)。</span><span class="sxs-lookup"><span data-stu-id="948da-104">Most normal operations for adding handlers for [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] events do not require working with this class (for instance, use <xref:System.Windows.EventManager> methods to add class handling, or query for existing handlers of an event).</span></span> <span data-ttu-id="948da-105">当元素具有特定知识有关子元素或使其实际将元素添加到或从默认计算的事件路由中移除元素的父元素时，此类是主要用于使用。</span><span class="sxs-lookup"><span data-stu-id="948da-105">This class is mainly for use when elements have particular knowledge about child elements or parent elements that make it practical to either add elements to or remove elements from the default calculated event route.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventRoute (System.Windows.RoutedEvent routedEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.RoutedEvent routedEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.#ctor(System.Windows.RoutedEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventRoute(System::Windows::RoutedEvent ^ routedEvent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <span data-ttu-id="948da-106">将与此事件路由关联的非 NULL 事件标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="948da-106">The non-NULL event identifier to be associated with this event route.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="948da-107">初始化 <see cref="T:System.Windows.EventRoute" /> 类的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="948da-107">Initializes an instance of the <see cref="T:System.Windows.EventRoute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (object target, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(object target, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.Add(System.Object,System.Delegate,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (target As Object, handler As Delegate, handledEventsToo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Object ^ target, Delegate ^ handler, bool handledEventsToo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="948da-108">指定目标对象，该目标对象的处理程序将添加到路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="948da-108">Specifies the target object of which the handler is to be added to the route.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="948da-109">指定要添加到路由的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="948da-109">Specifies the handler to be added to the route.</span>
          </span>
        </param>
        <param name="handledEventsToo">
          <span data-ttu-id="948da-110">指示侦听器是否侦测已处理的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="948da-110">Indicates whether or not the listener detects events that have already been handled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="948da-111">将指定目标的指定处理程序添加到路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="948da-111">Adds the specified handler for the specified target to the route.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="948da-112">它不是错误两次添加的处理程序的特定目标实例。</span><span class="sxs-lookup"><span data-stu-id="948da-112">It is not an error to add a handler for a particular target instance twice.</span></span> <span data-ttu-id="948da-113">在这种情况下，将两次调用处理程序。</span><span class="sxs-lookup"><span data-stu-id="948da-113">In such a case, the handler will be called twice.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekBranchNode">
      <MemberSignature Language="C#" Value="public object PeekBranchNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object PeekBranchNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.PeekBranchNode" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekBranchNode () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ PeekBranchNode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="948da-114">返回两个逻辑树分叉处的事件路由堆栈上的最顶层元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="948da-114">Returns the top-most element on the event route stack at which two logical trees diverge.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="948da-115">两个逻辑树分叉处的事件路由堆栈上的最顶层元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="948da-115">The top-most element on the event route stack at which two logical trees diverge.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekBranchSource">
      <MemberSignature Language="C#" Value="public object PeekBranchSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object PeekBranchSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.PeekBranchSource" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekBranchSource () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ PeekBranchSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="948da-116">返回两个逻辑树分叉处的事件路由堆栈上最顶层元素的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="948da-116">Returns the source for the top-most element on the event route stack at which two logical trees diverge.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="948da-117">两个逻辑树分叉处的事件路由堆栈上最顶层元素的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="948da-117">The source for the top-most element on the event route stack at which two logical trees diverge.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopBranchNode">
      <MemberSignature Language="C#" Value="public object PopBranchNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object PopBranchNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.PopBranchNode" />
      <MemberSignature Language="VB.NET" Value="Public Function PopBranchNode () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ PopBranchNode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="948da-118">返回两个逻辑树分叉处的事件路由堆栈上的最顶层节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="948da-118">Returns the top-most node on the event route stack at which two logical trees diverge.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="948da-119">两个逻辑树分叉处的事件路由堆栈上的最顶层节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="948da-119">The top-most node on the event route stack at which two logical trees diverge.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PushBranchNode">
      <MemberSignature Language="C#" Value="public void PushBranchNode (object node, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PushBranchNode(object node, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.PushBranchNode(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PushBranchNode (node As Object, source As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PushBranchNode(System::Object ^ node, System::Object ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Object" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="948da-120">两个逻辑树分叉处的事件路由堆栈上的最顶层元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="948da-120">The top-most element on the event route stack at which two logical trees diverge.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="948da-121">两个逻辑树分叉处的事件路由堆栈上最顶层元素的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="948da-121">The source for the top-most element on the event route stack at which two logical trees diverge.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="948da-122">向两个逻辑树分叉处的事件路由堆栈添加最顶层节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="948da-122">Adds the top-most node to the event route stack at which two logical trees diverge.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>