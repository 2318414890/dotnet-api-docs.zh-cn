<Type Name="ResourceKey" FullName="System.Windows.ResourceKey">
  <TypeSignature Language="C#" Value="public abstract class ResourceKey : System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ResourceKey extends System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ResourceKey" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ResourceKey&#xA;Inherits MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceKey abstract : System::Windows::Markup::MarkupExtension" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.MarkupExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Windows.ResourceKey))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3de1b-101">为各种资源键提供抽象基类。</span><span class="sxs-lookup"><span data-stu-id="3de1b-101">Provides an abstract base class for various resource keys.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3de1b-102">此类提供任何功能，只将提供资源组件中的简单密钥检测一个公共基类。</span><span class="sxs-lookup"><span data-stu-id="3de1b-102">This class provides no functionality except to supply a common base class for simple key detection in resource components.</span></span>  
  
 <span data-ttu-id="3de1b-103">资源键是字符串或类型的实例。</span><span class="sxs-lookup"><span data-stu-id="3de1b-103">Resource keys are either strings or instances of a type.</span></span> <span data-ttu-id="3de1b-104">此类密钥值根据其他对象的值，其中中传递的对象确保生成的资源键的唯一性的类提供支持。</span><span class="sxs-lookup"><span data-stu-id="3de1b-104">This class provides support for classes that base key values on other object values, where the objects passed in assure uniqueness of the generated resource keys.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResourceKey ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ResourceKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ResourceKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3de1b-105">初始化从 <see cref="T:System.Windows.ResourceKey" /> 派生的类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3de1b-105">Initializes a new instance of a class derived from <see cref="T:System.Windows.ResourceKey" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3de1b-106">请注意，这是一个抽象基类的受保护构造函数。</span><span class="sxs-lookup"><span data-stu-id="3de1b-106">Note that this is the protected constructor of an abstract base class.</span></span> <span data-ttu-id="3de1b-107">它可以仅从派生类调用。</span><span class="sxs-lookup"><span data-stu-id="3de1b-107">It can be called only from derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ResourceKey.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3de1b-108">获取一个程序集对象，该对象指示要在哪个程序集的字典中查找与此键关联的值。</span><span class="sxs-lookup"><span data-stu-id="3de1b-108">Gets an assembly object that indicates which assembly's dictionary to look in for the value associated with this key.</span></span></summary>
        <value><span data-ttu-id="3de1b-109">以反射类形式检索的程序集。</span><span class="sxs-lookup"><span data-stu-id="3de1b-109">The retrieved assembly, as a reflection class.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public override object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ResourceKey.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="3de1b-110">提供所需值的服务实现。</span><span class="sxs-lookup"><span data-stu-id="3de1b-110">A service implementation that provides the desired value.</span></span></param>
        <summary><span data-ttu-id="3de1b-111">返回此 <see cref="T:System.Windows.ResourceKey" />。</span><span class="sxs-lookup"><span data-stu-id="3de1b-111">Returns this <see cref="T:System.Windows.ResourceKey" />.</span></span> <span data-ttu-id="3de1b-112">此类的实例通常用作字典中的键。</span><span class="sxs-lookup"><span data-stu-id="3de1b-112">Instances of this class are typically used as a key in a dictionary.</span></span></summary>
        <returns><span data-ttu-id="3de1b-113">调用此方法始终返回实例本身。</span><span class="sxs-lookup"><span data-stu-id="3de1b-113">Calling this method always returns the instance itself.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>