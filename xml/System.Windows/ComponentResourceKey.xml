<Type Name="ComponentResourceKey" FullName="System.Windows.ComponentResourceKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f2ed30bb35b5407ec7068de830578e9c4f1b96b0" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37550461" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ComponentResourceKey : System.Windows.ResourceKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComponentResourceKey extends System.Windows.ResourceKey" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ComponentResourceKey" />
  <TypeSignature Language="VB.NET" Value="Public Class ComponentResourceKey&#xA;Inherits ResourceKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentResourceKey : System::Windows::ResourceKey" />
  <TypeSignature Language="F#" Value="type ComponentResourceKey = class&#xA;    inherit ResourceKey" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.ResourceKey</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.ComponentResourceKeyConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1d2b6-101">定义或引用基于外部程序集中的类名以及一个附加标识符的资源键。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1d2b6-101">Defines or references resource keys based on class names in external assemblies, as well as an additional identifier.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d2b6-102">有关[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]信息，请参阅[ComponentResourceKey 标记扩展](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)。</span><span class="sxs-lookup"><span data-stu-id="1d2b6-102">For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).</span></span>  
  
 <span data-ttu-id="1d2b6-103">此类实现可用于创建基于中程序集以及一个标识符类型的键的对象类型。</span><span class="sxs-lookup"><span data-stu-id="1d2b6-103">This class implements an object type that is useful for creating keys that are based on types in assemblies plus an identifier.</span></span> <span data-ttu-id="1d2b6-104">因为定义或引用类型，不需要请求的特定<xref:System.Windows.ResourceDictionary>，并且多个资源组可以存在于程序集，每个不同的类型及其<xref:System.Windows.ComponentResourceKey>。</span><span class="sxs-lookup"><span data-stu-id="1d2b6-104">Because you define or reference the type, you do not need to request a specific <xref:System.Windows.ResourceDictionary>, and more than one set of resources can exist in the assembly, each differentiated by the type of their <xref:System.Windows.ComponentResourceKey>.</span></span>  
  
 <span data-ttu-id="1d2b6-105">有两种方法来定义<xref:System.Windows.ComponentResourceKey>。</span><span class="sxs-lookup"><span data-stu-id="1d2b6-105">There are two ways to define a <xref:System.Windows.ComponentResourceKey>.</span></span>  
  
 <span data-ttu-id="1d2b6-106">如果您希望易于访问的键，可以控制类的代码，将返回定义的静态属性<xref:System.Windows.ComponentResourceKey>，使用构造<xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>存在于外部资源程序集，和一个<xref:System.Windows.ComponentResourceKey.ResourceId%2A>。</span><span class="sxs-lookup"><span data-stu-id="1d2b6-106">If you want an easily accessible key, you can define a static property on your control class code that returns a <xref:System.Windows.ComponentResourceKey>, constructed with a <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> that exists in the external resource assembly, and a <xref:System.Windows.ComponentResourceKey.ResourceId%2A>.</span></span> <span data-ttu-id="1d2b6-107">密钥可以用于通过交换原始外部资源程序集的一个自定义程序集中定义控件的备用默认样式。</span><span class="sxs-lookup"><span data-stu-id="1d2b6-107">The key can be used for defining alternate default styles for controls in an assembly, by swapping the original external resource assembly for a custom one.</span></span> <span data-ttu-id="1d2b6-108">此外可以定义更大的控件样式或模板来公开自定义入口点中命名的资源部分。</span><span class="sxs-lookup"><span data-stu-id="1d2b6-108">You can also define a named resource part within a larger control style or template to expose a customization entry point.</span></span> <span data-ttu-id="1d2b6-109">这是要为您的控件定义的主题资源字典的情况特别有用。</span><span class="sxs-lookup"><span data-stu-id="1d2b6-109">This is particularly useful if you are defining a theme resource dictionary for your control.</span></span>  
  
 <span data-ttu-id="1d2b6-110">此外可以使用[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [ComponentResourceKey 标记扩展](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)详细语法直接来创建密钥的松散实例。</span><span class="sxs-lookup"><span data-stu-id="1d2b6-110">You can also use the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) in verbose syntax directly to create a loose instance of the key.</span></span> <span data-ttu-id="1d2b6-111">这是你想要以声明专用资源变得难于发现自定义的其他程序集的情况下很有用。</span><span class="sxs-lookup"><span data-stu-id="1d2b6-111">This is useful if you want to declare private resources from other assemblies that are less discoverable to customize.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1d2b6-112">初始化 <see cref="T:System.Windows.ComponentResourceKey" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d2b6-112">Initializes a new instance of the <see cref="T:System.Windows.ComponentResourceKey" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentResourceKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentResourceKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1d2b6-113">初始化 <see cref="T:System.Windows.ComponentResourceKey" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d2b6-113">Initializes a new instance of the <see cref="T:System.Windows.ComponentResourceKey" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d2b6-114">默认构造函数通常不使用，因为<xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>值和<xref:System.Windows.ComponentResourceKey.ResourceId%2A>值所需的正确初始化。</span><span class="sxs-lookup"><span data-stu-id="1d2b6-114">The default constructor is not generally used, because a <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> value and <xref:System.Windows.ComponentResourceKey.ResourceId%2A> value are required for proper initialization.</span></span> <span data-ttu-id="1d2b6-115">默认构造函数存在主要是为了支持[ComponentResourceKey 标记扩展](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)命名的参数形式的 XAML 用法。</span><span class="sxs-lookup"><span data-stu-id="1d2b6-115">The default constructor exists primarily to support [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) XAML usage in named parameter form.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentResourceKey (Type typeInTargetAssembly, object resourceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type typeInTargetAssembly, object resourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeInTargetAssembly As Type, resourceId As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentResourceKey(Type ^ typeInTargetAssembly, System::Object ^ resourceId);" />
      <MemberSignature Language="F#" Value="new System.Windows.ComponentResourceKey : Type * obj -&gt; System.Windows.ComponentResourceKey" Usage="new System.Windows.ComponentResourceKey (typeInTargetAssembly, resourceId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeInTargetAssembly" Type="System.Type" />
        <Parameter Name="resourceId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeInTargetAssembly">
          <span data-ttu-id="1d2b6-116">定义资源键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d2b6-116">The type that defines the resource key.</span>
          </span>
        </param>
        <param name="resourceId">
          <span data-ttu-id="1d2b6-117">一个唯一标识符，用于将此 <see cref="T:System.Windows.ComponentResourceKey" /> 和其他与 <c>typeInTargetAssembly</c> 类型关联的键区分开。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d2b6-117">A unique identifier to differentiate this <see cref="T:System.Windows.ComponentResourceKey" /> from others associated with the <c>typeInTargetAssembly</c> type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d2b6-118">初始化 <see cref="T:System.Windows.ComponentResourceKey" /> 类的新实例，并指定用于定义键的 <see cref="T:System.Type" /> 以及用作附加资源标识符的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d2b6-118">Initializes a new instance of a <see cref="T:System.Windows.ComponentResourceKey" /> , specifying the <see cref="T:System.Type" /> that defines the key, and an object to use as an additional resource identifier.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d2b6-119">此构造函数存在两个方案，其中最重要的第一个方案：</span><span class="sxs-lookup"><span data-stu-id="1d2b6-119">This constructor exist for two scenarios, with the first scenario being the most important:</span></span>  
  
-   <span data-ttu-id="1d2b6-120">支持创建<xref:System.Windows.ComponentResourceKey>然后作为自定义控件类的公共静态字段。</span><span class="sxs-lookup"><span data-stu-id="1d2b6-120">Supports creating a <xref:System.Windows.ComponentResourceKey> that is then exposed as a public static field on a custom control class.</span></span> <span data-ttu-id="1d2b6-121">这样可以简化对其自己定义的资源通过模板中的控件的访问`{x:Static}`模板属性值的用法。</span><span class="sxs-lookup"><span data-stu-id="1d2b6-121">This simplifies a control's access to its own defined resources in the template through `{x:Static}` usages for template property values.</span></span>  
  
-   <span data-ttu-id="1d2b6-122">支持[ComponentResourceKey 标记扩展](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)位置参数在表单中，这是一种方法可用于引用组件资源的第三方的 XAML 用法。</span><span class="sxs-lookup"><span data-stu-id="1d2b6-122">Supports [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) XAML usage in positional parameter form, which is one technique available for third parties that reference a component resource.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d2b6-123">下面的示例创建<xref:System.Windows.ComponentResourceKey>然后作为控件类提供样式自定义入口点的静态密钥。</span><span class="sxs-lookup"><span data-stu-id="1d2b6-123">The following example creates a <xref:System.Windows.ComponentResourceKey> that is then exposed as a static key of a control class to provide a style customization entry point.</span></span>  
  
 [!code-csharp[CorePseudocode#CRKCode](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#crkcode)]
 [!code-vb[CorePseudocode#CRKCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#crkcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : System.Reflection.Assembly" Usage="System.Windows.ComponentResourceKey.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d2b6-124">获取程序集对象，该对象指示要在哪个程序集的字典中查找与此键关联的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d2b6-124">Gets the assembly object that indicates which assembly's dictionary to look in for the value associated with this key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1d2b6-125">以反射类形式检索的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d2b6-125">The retrieved assembly, as a reflection class.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="componentResourceKey.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="1d2b6-126">要与当前 <see cref="T:System.Windows.ComponentResourceKey" /> 进行比较的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d2b6-126">Object to compare with the current <see cref="T:System.Windows.ComponentResourceKey" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d2b6-127">确定提供的对象是否等于当前 <see cref="T:System.Windows.ComponentResourceKey" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d2b6-127">Determines whether the provided object is equal to the current <see cref="T:System.Windows.ComponentResourceKey" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d2b6-128">如果对象相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d2b6-128">
              <see langword="true" /> if the objects are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d2b6-129">两个键是否相等，如果二者都提供所有其立即可设置的属性相同的值 (<xref:System.Windows.ComponentResourceKey.ResourceId%2A>， <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>)。</span><span class="sxs-lookup"><span data-stu-id="1d2b6-129">Two keys are equal if they both have the same values for all their immediate settable properties (<xref:System.Windows.ComponentResourceKey.ResourceId%2A>, <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="componentResourceKey.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1d2b6-130">返回此 <see cref="T:System.Windows.ComponentResourceKey" /> 的哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d2b6-130">Returns a hash code for this <see cref="T:System.Windows.ComponentResourceKey" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d2b6-131">带符号的 32 位整数值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d2b6-131">A signed 32-bit integer value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceId">
      <MemberSignature Language="C#" Value="public object ResourceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ResourceId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.ResourceId" />
      <MemberSignature Language="VB.NET" Value="Public Property ResourceId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ResourceId { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResourceId : obj with get, set" Usage="System.Windows.ComponentResourceKey.ResourceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d2b6-132">获取或设置一个唯一标识符，以便将此键与该类型的其他关联键区分开。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d2b6-132">Gets or sets a unique identifier to differentiate this key from others associated with this type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1d2b6-133">一个唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d2b6-133">A unique identifier.</span>
          </span>
          <span data-ttu-id="1d2b6-134">这通常是一个字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d2b6-134">Typically this is a string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d2b6-135">有关[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]信息，请参阅[ComponentResourceKey 标记扩展](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)。</span><span class="sxs-lookup"><span data-stu-id="1d2b6-135">For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).</span></span>  
  
 <span data-ttu-id="1d2b6-136">通常情况下，为使用的字符串<xref:System.Windows.ComponentResourceKey.ResourceId%2A>值符合[XamlName 语法](~/docs/framework/xaml-services/xamlname-grammar.md)。</span><span class="sxs-lookup"><span data-stu-id="1d2b6-136">Typically, the string used for a <xref:System.Windows.ComponentResourceKey.ResourceId%2A> value conforms to the [XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md).</span></span>  
  
## Examples  
 <span data-ttu-id="1d2b6-137">下面的示例演示如何使用<xref:System.Windows.ComponentResourceKey.ResourceId%2A>来区分此密钥从与此类型的其他关联。</span><span class="sxs-lookup"><span data-stu-id="1d2b6-137">The following example shows how to use the <xref:System.Windows.ComponentResourceKey.ResourceId%2A> to differentiate this key from others associated with this type.</span></span>  
  
 [!code-xaml[ColorPicker_snip#SliderStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_snip/CSharp/ColorPickerLib/Themes/generic.xaml#sliderstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="componentResourceKey.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1d2b6-138">获取 <see cref="T:System.Windows.ComponentResourceKey" /> 的字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d2b6-138">Gets the string representation of a <see cref="T:System.Windows.ComponentResourceKey" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d2b6-139">字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d2b6-139">The string representation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInTargetAssembly">
      <MemberSignature Language="C#" Value="public Type TypeInTargetAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TypeInTargetAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.TypeInTargetAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeInTargetAssembly As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TypeInTargetAssembly { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeInTargetAssembly : Type with get, set" Usage="System.Windows.ComponentResourceKey.TypeInTargetAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d2b6-140">获取或设置定义资源键的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d2b6-140">Gets or sets the <see cref="T:System.Type" /> that defines the resource key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1d2b6-141">定义资源键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d2b6-141">The type that defines the resource key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d2b6-142">有关[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]信息，请参阅[ComponentResourceKey 标记扩展](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)。</span><span class="sxs-lookup"><span data-stu-id="1d2b6-142">For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).</span></span>  
  
 <span data-ttu-id="1d2b6-143"><xref:System.Windows.ComponentResourceKey>自定义组件使用元素来定义用于访问从外部程序集，基于目标包含类型的程序集的资源键。</span><span class="sxs-lookup"><span data-stu-id="1d2b6-143">The <xref:System.Windows.ComponentResourceKey> element is used by custom components to define keys for resources that are accessed from external assemblies, based on targeting an assembly that contains the type.</span></span> <span data-ttu-id="1d2b6-144">自定义组件通常定义新类型必须是在程序集中资源所在的位置。</span><span class="sxs-lookup"><span data-stu-id="1d2b6-144">Custom components often define new types which must be in the assembly where the resource is located.</span></span> <span data-ttu-id="1d2b6-145">通常这些类型具有任何其他实现，这些类型仅存在才能符合要求的查找要求<xref:System.Windows.ComponentResourceKey>。</span><span class="sxs-lookup"><span data-stu-id="1d2b6-145">Generally these types have no other implementation, the types only exist in order to satisfy the lookup requirements of a <xref:System.Windows.ComponentResourceKey>.</span></span>  
  
## Examples  
 <span data-ttu-id="1d2b6-146">下面的示例演示如何定义<xref:System.Windows.ComponentResourceKey>包括<xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>并<xref:System.Windows.ComponentResourceKey.ResourceId%2A>使用[ComponentResourceKey 标记扩展](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)。</span><span class="sxs-lookup"><span data-stu-id="1d2b6-146">The following example shows how to define a <xref:System.Windows.ComponentResourceKey> including <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> and <xref:System.Windows.ComponentResourceKey.ResourceId%2A> using the [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).</span></span> <span data-ttu-id="1d2b6-147">此资源可放在外部程序集和访问的请求使用了类似的资源的密钥用法<xref:System.Windows.ComponentResourceKey>请求中。</span><span class="sxs-lookup"><span data-stu-id="1d2b6-147">This resource can then be placed in an external assembly and accessed by a key usage that requests the resource using an analogous <xref:System.Windows.ComponentResourceKey> in the request.</span></span>  
  
 [!code-xaml[ColorPicker_snip#SliderStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_snip/CSharp/ColorPickerLib/Themes/generic.xaml#sliderstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>