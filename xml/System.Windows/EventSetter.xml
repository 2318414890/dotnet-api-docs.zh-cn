<Type Name="EventSetter" FullName="System.Windows.EventSetter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3ca0f6f05aeef76ac7f1b6be3c0213acf12a8623" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30676721" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventSetter : System.Windows.SetterBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventSetter extends System.Windows.SetterBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.EventSetter" />
  <TypeSignature Language="VB.NET" Value="Public Class EventSetter&#xA;Inherits SetterBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventSetter : System::Windows::SetterBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.SetterBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3f2ad-101">以某种样式表示事件资源库。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3f2ad-101">Represents an event setter in a style.</span>
      </span>
      <span data-ttu-id="3f2ad-102">事件资源库可调用指定的事件处理程序来响应事件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3f2ad-102">Event setters invoke the specified event handlers in response to events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f2ad-103">事件资源库可调用以响应路由事件，将应用于引用的所有元素的指定的事件处理程序<xref:System.Windows.Style>无需你将实例处理程序附加到每个单独的元素。</span><span class="sxs-lookup"><span data-stu-id="3f2ad-103">Event setters invoke the specified event handlers in response to routed events, which apply to all elements that reference the <xref:System.Windows.Style> rather than requiring you to attach instance handlers to each individual element.</span></span> <span data-ttu-id="3f2ad-104">仅<xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType>支持<xref:System.Windows.EventSetter>对象。</span><span class="sxs-lookup"><span data-stu-id="3f2ad-104">Only <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> support <xref:System.Windows.EventSetter> objects.</span></span>  
  
 <span data-ttu-id="3f2ad-105">您可以仅声明是路由的事件的事件的事件资源库。</span><span class="sxs-lookup"><span data-stu-id="3f2ad-105">You can only declare event setters for events that are routed events.</span></span> <span data-ttu-id="3f2ad-106">冒泡事件，或隧道事件，您可以声明为具有直接路由策略，路由事件的事件资源库。</span><span class="sxs-lookup"><span data-stu-id="3f2ad-106">You can declare event setters for routed events with a direct routing strategy, bubbling events, or tunneling events.</span></span>  
  
 <span data-ttu-id="3f2ad-107">实例<xref:System.Windows.EventSetter>类通常通过创建[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]，如在样式中的对象元素定义通过[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="3f2ad-107">Instances of the <xref:System.Windows.EventSetter> class are usually created through [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], as an object element within a style defined through [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span> <span data-ttu-id="3f2ad-108"><xref:System.Windows.EventSetter>还可能从代码实例化。</span><span class="sxs-lookup"><span data-stu-id="3f2ad-108">An <xref:System.Windows.EventSetter> might also be instantiated from code.</span></span>  
  
 <span data-ttu-id="3f2ad-109">事件资源库不能在主题资源字典中包含的样式。</span><span class="sxs-lookup"><span data-stu-id="3f2ad-109">Event setters cannot be used in a style that is contained in a theme resource dictionary.</span></span> <span data-ttu-id="3f2ad-110">这是因为在运行时的主题资源字典通常是松散[!INCLUDE[TLA#tla_baml](~/includes/tlasharptla-baml-md.md)]文件，并且没有任何作用域定义伴随定义处理程序的代码隐藏可以在其中存在。</span><span class="sxs-lookup"><span data-stu-id="3f2ad-110">This is because a theme resource dictionary at run time is often loose [!INCLUDE[TLA#tla_baml](~/includes/tlasharptla-baml-md.md)] files, and does not have any scope defined where accompanying code-behind that defines the handlers can exist.</span></span>  
  
 <span data-ttu-id="3f2ad-111">后任何类事件的处理程序，并且还会在任何实例处理程序调用处理程序附加到事件资源库。</span><span class="sxs-lookup"><span data-stu-id="3f2ad-111">Handlers attached through event setters are invoked after any class handlers for an event, and also after any instance handlers.</span></span> <span data-ttu-id="3f2ad-112">因此，如果处理程序类或实例处理程序将标记事件在其自变量中进行处理，然后声明事件资源库不调用处理程序，除非专门设置事件 setter <xref:System.Windows.EventSetter.HandledEventsToo%2A> `true`。</span><span class="sxs-lookup"><span data-stu-id="3f2ad-112">As a result, if a class handler or instance handler marks an event handled in its arguments, then the handler declared by an event setter is not invoked, unless the event setter specifically sets <xref:System.Windows.EventSetter.HandledEventsToo%2A> `true`.</span></span>  
  
 <span data-ttu-id="3f2ad-113">事件资源库还可能来自<xref:System.Windows.Style.BasedOn%2A>样式。</span><span class="sxs-lookup"><span data-stu-id="3f2ad-113">Event setters may also come from <xref:System.Windows.Style.BasedOn%2A> styles.</span></span> <span data-ttu-id="3f2ad-114">为指定的样式从事件库处理程序<xref:System.Windows.Style.BasedOn%2A>将后立即样式的处理程序调用。</span><span class="sxs-lookup"><span data-stu-id="3f2ad-114">The event setter handlers from the style specified as <xref:System.Windows.Style.BasedOn%2A> will be invoked after the handlers on the immediate style.</span></span>  
  
 <span data-ttu-id="3f2ad-115">请注意，只有<xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType>支持<xref:System.Windows.EventSetter>对象。</span><span class="sxs-lookup"><span data-stu-id="3f2ad-115">Note that only <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> supports <xref:System.Windows.EventSetter> objects.</span></span> <span data-ttu-id="3f2ad-116">触发器 (<xref:System.Windows.TriggerBase>和派生类) 不支持<xref:System.Windows.EventSetter>。</span><span class="sxs-lookup"><span data-stu-id="3f2ad-116">Triggers (<xref:System.Windows.TriggerBase> and derived classes) do not support <xref:System.Windows.EventSetter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f2ad-117">下面的示例建立单个<xref:System.Windows.EventSetter>页级样式中。</span><span class="sxs-lookup"><span data-stu-id="3f2ad-117">The following example establishes a single <xref:System.Windows.EventSetter> within a page-level style.</span></span>  
  
 [!code-xaml[EventOvwSupport#XAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml#xaml2)]  
  
 <span data-ttu-id="3f2ad-118">下面演示的示例事件处理程序：</span><span class="sxs-lookup"><span data-stu-id="3f2ad-118">The following shows the example event handlers:</span></span>  
  
 [!code-csharp[EventOvwSupport#EventSetterRef](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml.cs#eventsetterref)]
 [!code-vb[EventOvwSupport#EventSetterRef](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EventOvwSupport/visualbasic/page2.xaml.vb#eventsetterref)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.RoutedEventArgs.Handled" />
    <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3f2ad-119">初始化 <see cref="T:System.Windows.EventSetter" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f2ad-119">Initializes a new instance of the <see cref="T:System.Windows.EventSetter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventSetter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSetter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f2ad-120">初始化 <see cref="T:System.Windows.EventSetter" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f2ad-120">Initializes a new instance of the <see cref="T:System.Windows.EventSetter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSetter (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventSetter.#ctor(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSetter(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <span data-ttu-id="3f2ad-121">
            <see cref="T:System.Windows.EventSetter" /> 响应的特定路由事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f2ad-121">The particular routed event that the <see cref="T:System.Windows.EventSetter" /> responds to.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="3f2ad-122">要在此资源库中分配的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f2ad-122">The handler to assign in this setter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f2ad-123">使用提供的事件和处理程序参数初始化 <see cref="T:System.Windows.EventSetter" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f2ad-123">Initializes a new instance of the <see cref="T:System.Windows.EventSetter" /> class, using the provided event and handler parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f2ad-124">如果通常使用该签名你可以创建<xref:System.Windows.EventSetter>在代码中，或在代码隐藏以创建<xref:System.Windows.EventSetter>，增强了使用现有样式之前。</span><span class="sxs-lookup"><span data-stu-id="3f2ad-124">This signature is typically used if you creating an <xref:System.Windows.EventSetter> in code, or in code-behind to create an <xref:System.Windows.EventSetter> that augments an existing style prior to use.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Event">
      <MemberSignature Language="C#" Value="public System.Windows.RoutedEvent Event { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.RoutedEvent Event" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventSetter.Event" />
      <MemberSignature Language="VB.NET" Value="Public Property Event As RoutedEvent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::RoutedEvent ^ Event { System::Windows::RoutedEvent ^ get(); void set(System::Windows::RoutedEvent ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f2ad-125">获取或设置此 <see cref="T:System.Windows.EventSetter" /> 响应的特定路由事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f2ad-125">Gets or sets the particular routed event that this <see cref="T:System.Windows.EventSetter" /> responds to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f2ad-126">路由事件的标识符字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f2ad-126">The identifier field of the routed event.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f2ad-127">无法设置此属性一次样式包含<xref:System.Windows.EventSetter>正在使用，因此被密封。</span><span class="sxs-lookup"><span data-stu-id="3f2ad-127">You cannot set this property once the style containing the <xref:System.Windows.EventSetter> is in use and thus is sealed.</span></span> <span data-ttu-id="3f2ad-128">如果在代码中设置此属性没有样式是否正在使用的可能性，请检查的值<xref:System.Windows.SetterBase.IsSealed%2A>属性<xref:System.Windows.EventSetter>实例之前尝试设置<xref:System.Windows.EventSetter.Event%2A>。</span><span class="sxs-lookup"><span data-stu-id="3f2ad-128">If you set this property in code and there is the possibility that the style is in use, check the value of the <xref:System.Windows.SetterBase.IsSealed%2A> property on the <xref:System.Windows.EventSetter> instance before you attempt to set <xref:System.Windows.EventSetter.Event%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f2ad-129">下面的示例设置<xref:System.Windows.EventSetter.Event%2A>作为的一部分的属性<xref:System.Windows.EventSetter>标记样式。</span><span class="sxs-lookup"><span data-stu-id="3f2ad-129">The following example sets the <xref:System.Windows.EventSetter.Event%2A> property as part of an <xref:System.Windows.EventSetter> in a markup style.</span></span>  
  
 [!code-xaml[EventOvwSupport#XAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml#xaml2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3f2ad-130">尝试对密封 <see cref="T:System.Windows.EventSetter" /> 设置此属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f2ad-130">Attempted to set this property on a sealed <see cref="T:System.Windows.EventSetter" /> .</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.RoutedEventArgs.Handled" />
        <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="HandledEventsToo">
      <MemberSignature Language="C#" Value="public bool HandledEventsToo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandledEventsToo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventSetter.HandledEventsToo" />
      <MemberSignature Language="VB.NET" Value="Public Property HandledEventsToo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HandledEventsToo { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f2ad-131">获取或设置一个值，该值确定是否仍然应调用分配给资源库的处理程序，即使事件在其事件数据中被标记为已处理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f2ad-131">Gets or sets a value that determines whether the handler assigned to the setter should still be invoked, even if the event is marked handled in its event data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f2ad-132">如果仍然应调用处理程序，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f2ad-132">
              <see langword="true" /> if the handler should still be invoked; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3f2ad-133">设置<xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A>特征的如何将调用事件处理程序必须始终执行在代码中，没有办法可以指定的一般原则符合<xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A>时分配定义事件处理程序实例直接到名为中的事件[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]属性语法。</span><span class="sxs-lookup"><span data-stu-id="3f2ad-133">Setting the <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> characteristics of how an event's handlers will be invoked must always be performed in code, in keeping with the general principle that there is no way to specify <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> when assigning defined event handlers for instances directly to named events in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute syntax.</span></span> <span data-ttu-id="3f2ad-134">虽然设置此值[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]不会生成任何编译时错误，生成[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]时使用的样式，将产生运行时异常。</span><span class="sxs-lookup"><span data-stu-id="3f2ad-134">Although setting this value in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] does not generate any compile-time errors, the resulting [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] will produce a run-time exception when the style is used.</span></span>  
  
<a name="xamlTextUsage_HandledEventsToo"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="3f2ad-135">XAML 文本用法</span><span class="sxs-lookup"><span data-stu-id="3f2ad-135">XAML Text Usage</span></span>  
 <span data-ttu-id="3f2ad-136">此属性不应在[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="3f2ad-136">This property should not be used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span> <span data-ttu-id="3f2ad-137">请参阅“备注”。</span><span class="sxs-lookup"><span data-stu-id="3f2ad-137">See Remarks.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.RoutedEventArgs.Handled" />
        <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Handler">
      <MemberSignature Language="C#" Value="public Delegate Handler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Delegate Handler" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventSetter.Handler" />
      <MemberSignature Language="VB.NET" Value="Public Property Handler As Delegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Delegate ^ Handler { Delegate ^ get(); void set(Delegate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.EventSetterHandlerConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f2ad-138">获取或设置对资源库中路由事件的处理程序的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f2ad-138">Gets or sets the reference to a handler for a routed event in the setter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f2ad-139">对此 <see cref="T:System.Windows.EventSetter" /> 所附加处理程序的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f2ad-139">Reference to the handler that is attached by this <see cref="T:System.Windows.EventSetter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3f2ad-140">下面的示例设置<xref:System.Windows.EventSetter.Handler%2A>作为的一部分的属性<xref:System.Windows.EventSetter>标记样式。</span><span class="sxs-lookup"><span data-stu-id="3f2ad-140">The following example sets the <xref:System.Windows.EventSetter.Handler%2A> property as part of a <xref:System.Windows.EventSetter> in a markup style.</span></span>  
  
 [!code-xaml[EventOvwSupport#XAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml#xaml2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.RoutedEvent.HandlerType" />
        <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
  </Members>
</Type>