<Type Name="TemplateContent" FullName="System.Windows.TemplateContent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="57bfdcd5753cd9421996f4ccc51836015991b912" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48757758" /></Metadata><TypeSignature Language="C#" Value="public class TemplateContent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TemplateContent extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.TemplateContent" />
  <TypeSignature Language="VB.NET" Value="Public Class TemplateContent" />
  <TypeSignature Language="C++ CLI" Value="public ref class TemplateContent" />
  <TypeSignature Language="F#" Value="type TemplateContent = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.XamlDeferLoad(typeof(System.Windows.TemplateContentLoader), typeof(System.Windows.FrameworkElement))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>实现录制和播放逻辑，模板在与 XAML 读取器和编写器交互时将使用该逻辑推迟内容。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此类在.NET Framework 4.5 测试版中的公共 API。 它提供的属性值<xref:System.Windows.FrameworkTemplate.Template%2A>。 其构造函数是内部。 实例化途径的不同，但却比较复杂。 实例化模板依赖于<xref:System.Windows.TemplateContentLoader>，这要求<xref:System.Xaml.XamlReader>表示延迟的读取器实例和一个<xref:System.Xaml.IXamlObjectWriterFactory>服务。 这两个这些注意事项是通常仅与那些不使用的是默认 XAML 的 WPF 处理行为，包括推迟的内容处理的模板作为它的基础结构的一部分，并且不需要的典型的 WPF 应用程序若要访问前面提到的 Api 的作者。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>