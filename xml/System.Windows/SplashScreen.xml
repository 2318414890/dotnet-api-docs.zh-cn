<Type Name="SplashScreen" FullName="System.Windows.SplashScreen">
  <Metadata><Meta Name="ms.openlocfilehash" Value="de955d9f67c9b319b7970088f09d5dab6fe2a7fb" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51879772" /></Metadata><TypeSignature Language="C#" Value="public class SplashScreen" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SplashScreen extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.SplashScreen" />
  <TypeSignature Language="VB.NET" Value="Public Class SplashScreen" />
  <TypeSignature Language="C++ CLI" Value="public ref class SplashScreen" />
  <TypeSignature Language="F#" Value="type SplashScreen = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="76c7d-101">为 Windows Presentation Foundation (WPF) 应用程序提供启动屏幕。</span><span class="sxs-lookup"><span data-stu-id="76c7d-101">Provides a startup screen for a Windows Presentation Foundation (WPF) application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76c7d-102">使用<xref:System.Windows.SplashScreen>类，以在启动窗口中，显示的图像或*初始屏幕*、 WPF 应用程序启动时。</span><span class="sxs-lookup"><span data-stu-id="76c7d-102">Use the <xref:System.Windows.SplashScreen> class to show an image in a startup window, or *splash screen*, when a WPF application starts.</span></span> <span data-ttu-id="76c7d-103">调用<xref:System.Windows.SplashScreen.Show%2A>方法来显示初始屏幕。</span><span class="sxs-lookup"><span data-stu-id="76c7d-103">Call the <xref:System.Windows.SplashScreen.Show%2A> method to display the splash screen.</span></span> <span data-ttu-id="76c7d-104">调用<xref:System.Windows.SplashScreen.Close%2A>方法关闭初始屏幕。</span><span class="sxs-lookup"><span data-stu-id="76c7d-104">Call the <xref:System.Windows.SplashScreen.Close%2A> method to close the splash screen.</span></span> <span data-ttu-id="76c7d-105">指定要在中使用的映像<xref:System.Windows.SplashScreen>构造函数。</span><span class="sxs-lookup"><span data-stu-id="76c7d-105">Specify the image to use in the <xref:System.Windows.SplashScreen> constructor.</span></span>  
  
 <span data-ttu-id="76c7d-106"><xref:System.Windows.SplashScreen>类可以显示任何图像格式支持通过 Windows Imaging Component (WIC)。</span><span class="sxs-lookup"><span data-stu-id="76c7d-106">The <xref:System.Windows.SplashScreen> class can display any image format that is supported by the Windows Imaging Component (WIC).</span></span> <span data-ttu-id="76c7d-107">例如，可以使用 BMP、 GIF、 JPEG、 PNG 或 TIFF 格式。</span><span class="sxs-lookup"><span data-stu-id="76c7d-107">For example, you can use the BMP, GIF, JPEG, PNG, or TIFF format.</span></span> <span data-ttu-id="76c7d-108">如果图像是 PNG 文件，并且它包括一个 alpha 通道，使用 alpha 通道中定义的透明度呈现图像。</span><span class="sxs-lookup"><span data-stu-id="76c7d-108">If the image is a PNG file and it includes an alpha channel, the image is rendered using the transparency defined in the alpha channel.</span></span>  
  
 <span data-ttu-id="76c7d-109">在更高版本添加你的代码在初始屏幕中，不能包含占位符文本。</span><span class="sxs-lookup"><span data-stu-id="76c7d-109">You cannot include placeholder text in the splash screen that is later added by your code.</span></span> <span data-ttu-id="76c7d-110">如果你想要在初始屏幕中包含文本，必须将其添加到图像文件。</span><span class="sxs-lookup"><span data-stu-id="76c7d-110">If you want to include text in the splash screen, you must add it to the image file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76c7d-111">不需要编写任何代码来显示初始屏幕。</span><span class="sxs-lookup"><span data-stu-id="76c7d-111">It is not necessary to write any code to display a splash screen.</span></span> <span data-ttu-id="76c7d-112">从开始[!INCLUDE[vs_orcas_long](~/includes/vs-orcas-long-md.md)]SP1，你可以快速配置初始屏幕使用默认设置。</span><span class="sxs-lookup"><span data-stu-id="76c7d-112">Starting in [!INCLUDE[vs_orcas_long](~/includes/vs-orcas-long-md.md)] SP1, you can quickly configure a splash screen with default settings.</span></span> <span data-ttu-id="76c7d-113">有关详细信息，请参阅[如何： 将初始屏幕添加到 WPF 应用程序](~/docs/framework/wpf/app-development/how-to-add-a-splash-screen-to-a-wpf-application.md)。</span><span class="sxs-lookup"><span data-stu-id="76c7d-113">For more information, see [How to: Add a Splash Screen to a WPF Application](~/docs/framework/wpf/app-development/how-to-add-a-splash-screen-to-a-wpf-application.md).</span></span>  
  
 <span data-ttu-id="76c7d-114"><xref:System.Windows.SplashScreen>类显示初始屏幕尽可能快地启动应用程序后。</span><span class="sxs-lookup"><span data-stu-id="76c7d-114">The <xref:System.Windows.SplashScreen> class displays the splash screen as soon as possible after the application is started.</span></span> <span data-ttu-id="76c7d-115">创建 WPF 应用程序实例之前使用本机代码中，显示初始屏幕。</span><span class="sxs-lookup"><span data-stu-id="76c7d-115">The splash screen is displayed by using native code, before the WPF application instance is created.</span></span> <span data-ttu-id="76c7d-116">初始屏幕显示在屏幕的中央。</span><span class="sxs-lookup"><span data-stu-id="76c7d-116">The splash screen is displayed in the center of the screen.</span></span> <span data-ttu-id="76c7d-117">加载应用程序时，初始屏幕将淡化。</span><span class="sxs-lookup"><span data-stu-id="76c7d-117">When the application is loaded, the splash screen fades.</span></span>  
  
 <span data-ttu-id="76c7d-118">编译你的应用程序后，图像作为嵌入托管资源程序集。</span><span class="sxs-lookup"><span data-stu-id="76c7d-118">When your application is compiled, the image is embedded as a managed resource in the assembly.</span></span> <span data-ttu-id="76c7d-119">如果应用程序进行本地化，在本地化附属 DLL 中嵌入图像。</span><span class="sxs-lookup"><span data-stu-id="76c7d-119">If the application is localized, the image is embedded in the localized satellite DLL.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76c7d-120"><xref:System.Windows.SplashScreen>类不是在部分信任环境中可用。</span><span class="sxs-lookup"><span data-stu-id="76c7d-120">The <xref:System.Windows.SplashScreen> class is not available in partial trust.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76c7d-121"><xref:System.Windows.SplashScreen>类不能使用在 XAML 浏览器应用程序 (Xbap) 中，因为它们使用不同的启动体系结构。</span><span class="sxs-lookup"><span data-stu-id="76c7d-121">The <xref:System.Windows.SplashScreen> class cannot be used in XAML Browser Applications (XBAPs), because they use a different startup architecture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76c7d-122">下面的代码示例演示如何创建和使用显示启动窗口<xref:System.Windows.SplashScreen>类。</span><span class="sxs-lookup"><span data-stu-id="76c7d-122">The following code example shows how to create and display a startup window by using the <xref:System.Windows.SplashScreen> class.</span></span>  
  
 [!code-csharp[System.Windows.SplashScreen#2](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.SplashScreen/CS/App.xaml.cs#2)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="76c7d-123">非托管资源的访问权。</span><span class="sxs-lookup"><span data-stu-id="76c7d-123">for access to unmanaged resources.</span></span> <span data-ttu-id="76c7d-124">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="76c7d-124">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="76c7d-125">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="76c7d-125">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
    <altmember cref="M:System.Windows.SplashScreen.Show(System.Boolean)" />
    <altmember cref="M:System.Windows.SplashScreen.Close(System.TimeSpan)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="76c7d-126">初始化 <see cref="T:System.Windows.SplashScreen" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="76c7d-126">Initializes a new instance of the <see cref="T:System.Windows.SplashScreen" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SplashScreen (string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SplashScreen.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resourceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SplashScreen(System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="new System.Windows.SplashScreen : string -&gt; System.Windows.SplashScreen" Usage="new System.Windows.SplashScreen resourceName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceName"><span data-ttu-id="76c7d-127">嵌入资源的名称。</span><span class="sxs-lookup"><span data-stu-id="76c7d-127">The name of the embedded resource.</span></span></param>
        <summary><span data-ttu-id="76c7d-128">使用指定的资源初始化 <see cref="T:System.Windows.SplashScreen" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="76c7d-128">Initializes a new instance of the <see cref="T:System.Windows.SplashScreen" /> class with the specified resource.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76c7d-129">`resourceName`参数遵循为嵌入资源的常用规则。</span><span class="sxs-lookup"><span data-stu-id="76c7d-129">The `resourceName` parameter follows the usual rules for embedded resources.</span></span> <span data-ttu-id="76c7d-130">有关更多信息，请参见 <xref:System.Resources.ResourceManager> 类。</span><span class="sxs-lookup"><span data-stu-id="76c7d-130">For more information, see the <xref:System.Resources.ResourceManager> class.</span></span> <span data-ttu-id="76c7d-131">`resourceName`参数指定的资源文件，并不是 URI 的名称。</span><span class="sxs-lookup"><span data-stu-id="76c7d-131">The `resourceName` parameter specifies the name of the resource file, and not a URI.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="76c7d-132">非托管资源的访问权。</span><span class="sxs-lookup"><span data-stu-id="76c7d-132">for access to unmanaged resources.</span></span> <span data-ttu-id="76c7d-133">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="76c7d-133">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="76c7d-134">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="76c7d-134">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="M:System.Windows.SplashScreen.#ctor(System.Reflection.Assembly,System.String)" />
        <altmember cref="T:System.Resources.ResourceManager" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SplashScreen (System.Reflection.Assembly resourceAssembly, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly resourceAssembly, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SplashScreen.#ctor(System.Reflection.Assembly,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resourceAssembly As Assembly, resourceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SplashScreen(System::Reflection::Assembly ^ resourceAssembly, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="new System.Windows.SplashScreen : System.Reflection.Assembly * string -&gt; System.Windows.SplashScreen" Usage="new System.Windows.SplashScreen (resourceAssembly, resourceName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="resourceAssembly" Type="System.Reflection.Assembly" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceAssembly"><span data-ttu-id="76c7d-135">包含嵌入资源的程序集。</span><span class="sxs-lookup"><span data-stu-id="76c7d-135">The assembly that contains the embedded resource.</span></span></param>
        <param name="resourceName"><span data-ttu-id="76c7d-136">嵌入资源的名称。</span><span class="sxs-lookup"><span data-stu-id="76c7d-136">The name of the embedded resource.</span></span></param>
        <summary><span data-ttu-id="76c7d-137">使用指定的资源程序集初始化 <see cref="T:System.Windows.SplashScreen" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="76c7d-137">Initializes a new instance of the <see cref="T:System.Windows.SplashScreen" /> class with the specified resource assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76c7d-138">`resourceAssembly`和`resourceName`参数遵循为嵌入资源的常用规则。</span><span class="sxs-lookup"><span data-stu-id="76c7d-138">The `resourceAssembly` and `resourceName` parameters follow the usual rules for embedded resources.</span></span> <span data-ttu-id="76c7d-139">有关更多信息，请参见 <xref:System.Resources.ResourceManager> 类。</span><span class="sxs-lookup"><span data-stu-id="76c7d-139">For more information, see the <xref:System.Resources.ResourceManager> class.</span></span> <span data-ttu-id="76c7d-140">`resourceName`参数指定的资源文件，并不是 URI 的名称。</span><span class="sxs-lookup"><span data-stu-id="76c7d-140">The `resourceName` parameter specifies the name of the resource file, and not a URI.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.SplashScreen.#ctor(System.String)" />
        <altmember cref="T:System.Resources.ResourceManager" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (TimeSpan fadeoutDuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close(valuetype System.TimeSpan fadeoutDuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SplashScreen.Close(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (fadeoutDuration As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close(TimeSpan fadeoutDuration);" />
      <MemberSignature Language="F#" Value="member this.Close : TimeSpan -&gt; unit" Usage="splashScreen.Close fadeoutDuration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fadeoutDuration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="fadeoutDuration"><span data-ttu-id="76c7d-141">一个 <see cref="T:System.TimeSpan" />，它指定初始屏幕在关闭操作启动后将需要多长时间淡化。</span><span class="sxs-lookup"><span data-stu-id="76c7d-141">A <see cref="T:System.TimeSpan" /> that specifies how long it will take for the splash screen to fade after the close operation has been initiated.</span></span></param>
        <summary><span data-ttu-id="76c7d-142">关闭初始屏幕。</span><span class="sxs-lookup"><span data-stu-id="76c7d-142">Closes the splash screen.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76c7d-143">如果您调用<xref:System.Windows.SplashScreen.Show%2A>方法替换`autoClose`参数设置为`true`，无需调用<xref:System.Windows.SplashScreen.Close%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="76c7d-143">If you called the <xref:System.Windows.SplashScreen.Show%2A> method with the `autoClose` parameter set to `true`, you do not have to call the <xref:System.Windows.SplashScreen.Close%2A> method.</span></span> <span data-ttu-id="76c7d-144">应用程序加载后，将自动关闭初始屏幕。</span><span class="sxs-lookup"><span data-stu-id="76c7d-144">The splash screen will close automatically after the application is loaded.</span></span> <span data-ttu-id="76c7d-145">为其淡入花费的时间长度时将关闭初始屏幕，由的默认值为`fadeoutDuration`参数，它是 300 毫秒。</span><span class="sxs-lookup"><span data-stu-id="76c7d-145">When the splash screen closes, the length of time it will take for it to fade is determined by the default value for the `fadeoutDuration` parameter, which is 300 milliseconds.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.SplashScreen.Show(System.Boolean)" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Show">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="76c7d-146">显示初始屏幕。</span><span class="sxs-lookup"><span data-stu-id="76c7d-146">Displays the splash screen.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (bool autoClose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(bool autoClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SplashScreen.Show(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show (autoClose As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(bool autoClose);" />
      <MemberSignature Language="F#" Value="member this.Show : bool -&gt; unit" Usage="splashScreen.Show autoClose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoClose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoClose"><span data-ttu-id="76c7d-147">设置为 <see langword="true" /> 以自动关闭初始屏幕；设置为 <see langword="false" /> 以手动关闭初始屏幕。</span><span class="sxs-lookup"><span data-stu-id="76c7d-147"><see langword="true" /> to automatically close the splash screen; <see langword="false" /> to close the splash screen manually.</span></span></param>
        <summary><span data-ttu-id="76c7d-148">显示初始屏幕。</span><span class="sxs-lookup"><span data-stu-id="76c7d-148">Displays the splash screen.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76c7d-149">如果您调用<xref:System.Windows.SplashScreen.Show%2A>方法替换`autoClose`设置为`true`，无需调用<xref:System.Windows.SplashScreen.Close%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="76c7d-149">If you call the <xref:System.Windows.SplashScreen.Show%2A> method with `autoClose` set to `true`, you do not have to call the <xref:System.Windows.SplashScreen.Close%2A> method.</span></span> <span data-ttu-id="76c7d-150">应用程序加载后，将自动关闭初始屏幕。</span><span class="sxs-lookup"><span data-stu-id="76c7d-150">The splash screen will close automatically after the application is loaded.</span></span> <span data-ttu-id="76c7d-151">为其淡入花费的时间长度时将关闭初始屏幕，由的默认值为`fadeoutDuration`参数，它是 300 毫秒。</span><span class="sxs-lookup"><span data-stu-id="76c7d-151">When the splash screen closes, the length of time it will take for it to fade is determined by the default value for the `fadeoutDuration` parameter, which is 300 milliseconds.</span></span>  
  
 <span data-ttu-id="76c7d-152">调用<xref:System.Windows.SplashScreen.Show%2A>方法替换`autoClose`设置为`false`时您想要淡入淡出持续时间内提供非默认值。</span><span class="sxs-lookup"><span data-stu-id="76c7d-152">Call the <xref:System.Windows.SplashScreen.Show%2A> method with `autoClose` set to `false` when you want to provide a non-default value for the fade duration.</span></span> <span data-ttu-id="76c7d-153">您必须调用<xref:System.Windows.SplashScreen.Close%2A>方法关闭初始屏幕。</span><span class="sxs-lookup"><span data-stu-id="76c7d-153">You will have to call the <xref:System.Windows.SplashScreen.Close%2A> method to close the splash screen.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="76c7d-154">未能找到构造函数中指定的资源。</span><span class="sxs-lookup"><span data-stu-id="76c7d-154">The resource specified in the constructor could not be found.</span></span></exception>
        <altmember cref="M:System.Windows.SplashScreen.Close(System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (bool autoClose, bool topMost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(bool autoClose, bool topMost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SplashScreen.Show(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show (autoClose As Boolean, topMost As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(bool autoClose, bool topMost);" />
      <MemberSignature Language="F#" Value="member this.Show : bool * bool -&gt; unit" Usage="splashScreen.Show (autoClose, topMost)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoClose" Type="System.Boolean" />
        <Parameter Name="topMost" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoClose"><span data-ttu-id="76c7d-155">设置为 <see langword="true" /> 以自动关闭初始屏幕；设置为 <see langword="false" /> 以手动关闭初始屏幕。</span><span class="sxs-lookup"><span data-stu-id="76c7d-155"><see langword="true" /> to automatically close the splash screen; <see langword="false" /> to close the splash screen manually.</span></span></param>
        <param name="topMost"><span data-ttu-id="76c7d-156">如果初始屏幕窗口应该使用 WS_EX_TOPMOST 样式，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="76c7d-156"><see langword="true" /> if the splash screen window should use the WS_EX_TOPMOST style; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="76c7d-157">显示初始屏幕。</span><span class="sxs-lookup"><span data-stu-id="76c7d-157">Displays the splash screen.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=145016"><span data-ttu-id="76c7d-158">CreateWindowEx</span><span class="sxs-lookup"><span data-stu-id="76c7d-158">CreateWindowEx</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>