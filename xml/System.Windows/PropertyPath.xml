<Type Name="PropertyPath" FullName="System.Windows.PropertyPath">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8557652b4b165aa49213450463eba1ffb0a2f7de" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30679791" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PropertyPath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PropertyPath extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PropertyPath" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PropertyPath" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyPath sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.PropertyPathConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="43877-101">实现一个数据结构，用于将某个属性描述为另一个属性或所属类型下的路径。</span>
      <span class="sxs-lookup">
        <span data-stu-id="43877-101">Implements a data structure for describing a property as a path below another property, or below an owning type.</span>
      </span>
      <span data-ttu-id="43877-102">属性路径用于对象的数据绑定，并用于动画的情节提要和时间线。</span>
      <span class="sxs-lookup">
        <span data-stu-id="43877-102">Property paths are used in data binding to objects, and in storyboards and timelines for animations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43877-103">此类包含一个字符串<xref:System.Windows.PropertyPath.Path%2A>，和依赖项属性的列表<xref:System.Windows.PropertyPath.PathParameters%2A>插入字符串<xref:System.Windows.PropertyPath.Path%2A>。</span><span class="sxs-lookup"><span data-stu-id="43877-103">This class contains a string <xref:System.Windows.PropertyPath.Path%2A>, and list of dependency properties that are the <xref:System.Windows.PropertyPath.PathParameters%2A> into the string <xref:System.Windows.PropertyPath.Path%2A>.</span></span>  
  
 <span data-ttu-id="43877-104"><xref:System.Windows.PropertyPath> 支持两种行为模式：</span><span class="sxs-lookup"><span data-stu-id="43877-104"><xref:System.Windows.PropertyPath> supports two modes of behavior:</span></span>  
  
 <span data-ttu-id="43877-105">**源模式**描述作为源用于某个其他操作的属性的路径。</span><span class="sxs-lookup"><span data-stu-id="43877-105">**Source mode** describes a path to a property that is used as a source for some other operation.</span></span> <span data-ttu-id="43877-106">通过使用此模式<xref:System.Windows.Data.Binding>类，以支持数据绑定。</span><span class="sxs-lookup"><span data-stu-id="43877-106">This mode is used by the <xref:System.Windows.Data.Binding> class to support data binding.</span></span>  
  
 <span data-ttu-id="43877-107">**目标模式**描述一个属性，则将设置为目标属性的路径。</span><span class="sxs-lookup"><span data-stu-id="43877-107">**Target mode** describes a path to a property that will be set as a target property.</span></span> <span data-ttu-id="43877-108">此模式下使用以情节提要和时间线 setter 支持动画。</span><span class="sxs-lookup"><span data-stu-id="43877-108">This mode is used by animation in support of storyboard and timeline setters.</span></span>  
  
 <span data-ttu-id="43877-109">例如，`Background.Opacity`是双重路径。</span><span class="sxs-lookup"><span data-stu-id="43877-109">For instance, `Background.Opacity` is a two-step path.</span></span> <span data-ttu-id="43877-110">此路径暗指： 首先，找到`Background`是对象的属性获取的值对象`Background`属性设置为，，然后获取的值`Opacity`对该对象的属性。</span><span class="sxs-lookup"><span data-stu-id="43877-110">This path implies: first, find the `Background` property of an object, get the value object that the `Background` property is set to, and then get the value of the `Opacity` property on that object.</span></span>  
  
<a name="xamlAttributeUsage_PropertyPath"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="43877-111">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="43877-111">XAML Attribute Usage</span></span>  
  
```  
<object property="propertyPath" .../>  
```  
  
<a name="xamlValues_PropertyPath"></a>   
## <a name="xaml-values"></a><span data-ttu-id="43877-112">XAML 值</span><span class="sxs-lookup"><span data-stu-id="43877-112">XAML Values</span></span>  
 <span data-ttu-id="43877-113">*propertyPath*</span><span class="sxs-lookup"><span data-stu-id="43877-113">*propertyPath*</span></span>  
 <span data-ttu-id="43877-114">一个字符串，其计算结果为简单或复杂属性路径。</span><span class="sxs-lookup"><span data-stu-id="43877-114">A string that is evaluated to be either a simple or complex property path.</span></span> <span data-ttu-id="43877-115">设置的语法<xref:System.Windows.PropertyPath>中[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]是通用的但复杂，和单独的主题所述[PropertyPath XAML 语法](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)。</span><span class="sxs-lookup"><span data-stu-id="43877-115">The syntax for setting a <xref:System.Windows.PropertyPath> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is versatile but complex, and is described in the separate topic [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="43877-116">初始化 <see cref="T:System.Windows.PropertyPath" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="43877-116">Initializes a new instance of the <see cref="T:System.Windows.PropertyPath" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameter As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::Object ^ parameter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="43877-117">一个属性路径，它描述[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] 属性或单一依赖项属性的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="43877-117">A property path that either describes a path to a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] property, or a single dependency property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43877-118">初始化 <see cref="T:System.Windows.PropertyPath" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="43877-118">Initializes a new instance of the <see cref="T:System.Windows.PropertyPath" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43877-119">此构造函数具有两个完全不同的用法，具体取决于它是否使用的绑定、 或演示图板目标的目标模式单步执行属性路径的源模式属性路径。</span><span class="sxs-lookup"><span data-stu-id="43877-119">This constructor has two completely different usages depending on whether it is being used for a source-mode property path for a binding, or for a target-mode single-step property path for a storyboard target.</span></span>  
  
 <span data-ttu-id="43877-120">如果使用此<xref:System.Windows.PropertyPath>在源模式中的绑定、`parameter`是一个字符串，表示一个属性名称，也可以是一个字符串，描述中的属性的"单步执行"路径[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]用作源的对象的对象模型用于绑定。</span><span class="sxs-lookup"><span data-stu-id="43877-120">If using this <xref:System.Windows.PropertyPath> in source mode for a binding, `parameter` is a string representing a property name, or can be a string that describes a "step-through" path to the property in the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object model of the object that is being used as the source for a binding.</span></span> <span data-ttu-id="43877-121">绑定属性路径，请标识"步骤"的字符是一个点 （.）。</span><span class="sxs-lookup"><span data-stu-id="43877-121">For a binding property path, the character that identifies a "step" is a dot (.).</span></span> <span data-ttu-id="43877-122">此外支持索引器引用 （包括多个索引器和类型区分）。</span><span class="sxs-lookup"><span data-stu-id="43877-122">Indexer references (including multiple indexers, and type differentiation) are also supported.</span></span> <span data-ttu-id="43877-123">有关详细信息明确地使用字符串的语法<xref:System.Windows.Data.Binding>对象，请参阅<xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="43877-123">For more details on the syntax of the string as specifically used by the <xref:System.Windows.Data.Binding> object, see <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="43877-124">用作绑定源的属性不需要的依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="43877-124">A property used as a binding source need not be a dependency property.</span></span> <span data-ttu-id="43877-125">如果绑定更新双向，所引用的属性必须是读写。</span><span class="sxs-lookup"><span data-stu-id="43877-125">If the binding updates two-way, the property referenced must be read-write.</span></span> <span data-ttu-id="43877-126">另请注意绑定目标不必为依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="43877-126">Also note that the binding target does have to be a dependency property.</span></span> <span data-ttu-id="43877-127">有关详细信息，请参阅[数据绑定概述](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="43877-127">For details, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 <span data-ttu-id="43877-128">如果使用此<xref:System.Windows.PropertyPath>在情节提要目标时，单步执行路径的目标模式下`parameter`作为类型通常提供<xref:System.Windows.DependencyProperty>。</span><span class="sxs-lookup"><span data-stu-id="43877-128">If using this <xref:System.Windows.PropertyPath> in target mode for a single-step path for a storyboard target, `parameter` is generally provided as type <xref:System.Windows.DependencyProperty>.</span></span> <span data-ttu-id="43877-129">你还可以指定一个字符串，它<xref:System.Windows.DependencyProperty.Name%2A>。</span><span class="sxs-lookup"><span data-stu-id="43877-129">You can also specify a string that is the <xref:System.Windows.DependencyProperty.Name%2A>.</span></span> <span data-ttu-id="43877-130">其中一种计算结果为相同的结果，因为它内部存储为一个字符串。</span><span class="sxs-lookup"><span data-stu-id="43877-130">Either of these evaluate to the same result, because it is stored internally as a string.</span></span> <span data-ttu-id="43877-131">提供<xref:System.Windows.DependencyProperty>转换为通过字符串<xref:System.Windows.Markup.DependencyPropertyConverter>。</span><span class="sxs-lookup"><span data-stu-id="43877-131">A provided <xref:System.Windows.DependencyProperty> is converted to a string through <xref:System.Windows.Markup.DependencyPropertyConverter>.</span></span> <span data-ttu-id="43877-132"><xref:System.Windows.Markup.DependencyPropertyConverter>支持的依赖项属性的限定的命名格式，因此你可以指定*typeName*。*propertyName*限定到的依赖项属性名称字符串<xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType>在代码中的构造函数。</span><span class="sxs-lookup"><span data-stu-id="43877-132">The <xref:System.Windows.Markup.DependencyPropertyConverter> supports a qualified naming format for dependency properties, so you can specify a *typeName*.*propertyName* qualified dependency property name string to the <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> constructor in code.</span></span> <span data-ttu-id="43877-133">依赖项属性标识符的限定的路径是比使用复杂的路径的不同概念。</span><span class="sxs-lookup"><span data-stu-id="43877-133">The qualified path to the dependency property identifier is a different concept than a complex path.</span></span> <span data-ttu-id="43877-134">复杂路径<xref:System.Windows.PropertyPath>应改为创建使用<xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="43877-134">A complex-path <xref:System.Windows.PropertyPath> should instead be created with the <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.Binding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (string path, params object[] pathParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, object[] pathParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, ParamArray pathParameters As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::String ^ path, ... cli::array &lt;System::Object ^&gt; ^ pathParameters);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathParameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="43877-135">一个以标记化格式指定 <see cref="P:System.Windows.PropertyPath.Path" /> 的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="43877-135">A string that specifies the <see cref="P:System.Windows.PropertyPath.Path" />, in a tokenized format.</span>
          </span>
        </param>
        <param name="pathParameters">
          <span data-ttu-id="43877-136">一个设置 <see cref="P:System.Windows.PropertyPath.PathParameters" /> 的对象数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="43877-136">An array of objects that sets the <see cref="P:System.Windows.PropertyPath.PathParameters" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43877-137">使用提供的路径标记字符串和参数初始化 <see cref="T:System.Windows.PropertyPath" /> 类的一个新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="43877-137">Initializes a new instance of the <see cref="T:System.Windows.PropertyPath" /> class, with the provided pathing token string and parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43877-138">为目标模式通常仅使用此签名<xref:System.Windows.PropertyPath>复杂路径的用法。</span><span class="sxs-lookup"><span data-stu-id="43877-138">This signature is generally only used for target-mode <xref:System.Windows.PropertyPath> usages with complex paths.</span></span>  
  
 <span data-ttu-id="43877-139">此构造函数支持`params`为`pathParameters`构造函数自变量。</span><span class="sxs-lookup"><span data-stu-id="43877-139">This constructor supports `params` for the `pathParameters` constructor argument.</span></span> <span data-ttu-id="43877-140">因此，你可以指定的内容`pathParameters`为一系列以逗号分隔的构造函数自变量用于填充数组，而不是无需划分数组维度，然后填充其与`pathParameters`项。</span><span class="sxs-lookup"><span data-stu-id="43877-140">Therefore you can specify the contents of `pathParameters` as a series of comma-separated constructor arguments that populate the array, rather than needing to dimension an array and then populate it with the `pathParameters` items.</span></span> <span data-ttu-id="43877-141">你指定每个项必须是以下类型之一： <xref:System.Windows.DependencyProperty>， <xref:System.Reflection.PropertyInfo>， <xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="43877-141">Each item you specify must be one of the following types: <xref:System.Windows.DependencyProperty>, <xref:System.Reflection.PropertyInfo>, <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 <span data-ttu-id="43877-142">有关参数的要求的详细信息，请参阅<xref:System.Windows.PropertyPath.Path%2A>和<xref:System.Windows.PropertyPath.PathParameters%2A>。</span><span class="sxs-lookup"><span data-stu-id="43877-142">For more information on the requirements of the parameters, see <xref:System.Windows.PropertyPath.Path%2A> and <xref:System.Windows.PropertyPath.PathParameters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43877-143">获取或设置描述路径的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="43877-143">Gets or sets the string that describes the path.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43877-144">描述路径的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="43877-144">The string that describes the path.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43877-145">此属性中包含的字符串具有三个完全不同的含义，具体取决于是否<xref:System.Windows.PropertyPath>用于演示图板目标，目标模式单步执行属性路径的绑定，或一个复杂的源模式属性路径情节提要目标路径。</span><span class="sxs-lookup"><span data-stu-id="43877-145">The string contained in this property has three completely different meanings depending on whether a <xref:System.Windows.PropertyPath> is being used for a source-mode property path for a binding, for a target-mode single-step property path for a storyboard target, or for a complex path for a storyboard target.</span></span>  
  
 <span data-ttu-id="43877-146">如果使用此<xref:System.Windows.PropertyPath>在源模式中的绑定、<xref:System.Windows.PropertyPath.Path%2A>是一个字符串，表示一个属性名称，也可以是一个字符串，描述中的属性的"单步执行"路径[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]用作源的对象的对象模型用于绑定。</span><span class="sxs-lookup"><span data-stu-id="43877-146">If using this <xref:System.Windows.PropertyPath> in source mode for a binding, <xref:System.Windows.PropertyPath.Path%2A> is a string representing a property name, or can be a string that describes a "step-through" path to the property in the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object model of the object that is being used as the source for a binding.</span></span> <span data-ttu-id="43877-147">绑定属性路径，请标识"步骤"的字符是一个点 （.）。</span><span class="sxs-lookup"><span data-stu-id="43877-147">For a binding property path, the character that identifies a "step" is a dot (.).</span></span> <span data-ttu-id="43877-148">此外支持索引器引用 （包括多个索引器和类型区分）。</span><span class="sxs-lookup"><span data-stu-id="43877-148">Indexer references (including multiple indexers, and type differentiation) are also supported.</span></span> <span data-ttu-id="43877-149">有关详细信息明确地使用字符串的语法<xref:System.Windows.Data.Binding>对象，请参阅<xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="43877-149">For more details on the syntax of the string as specifically used by the <xref:System.Windows.Data.Binding> object, see <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="43877-150">用作绑定源的属性不需要的依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="43877-150">A property used as a binding source need not be a dependency property.</span></span> <span data-ttu-id="43877-151">如果双向绑定，更新属性源必须是读写。</span><span class="sxs-lookup"><span data-stu-id="43877-151">If the binding updates two-way, the property source must be read-write.</span></span> <span data-ttu-id="43877-152">另请注意绑定目标不必为依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="43877-152">Also note that the binding target does have to be a dependency property.</span></span> <span data-ttu-id="43877-153">有关详细信息，请参阅[数据绑定概述](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="43877-153">For details, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 <span data-ttu-id="43877-154">如果使用此<xref:System.Windows.PropertyPath>在情节提要目标时，单步执行路径的目标模式下<xref:System.Windows.PropertyPath>是一个字符串，是*typeName*。*propertyName*限定依赖项属性名称字符串。</span><span class="sxs-lookup"><span data-stu-id="43877-154">If using this <xref:System.Windows.PropertyPath> in target mode for a single-step path for a storyboard target, <xref:System.Windows.PropertyPath> is a string that is a *typeName*.*propertyName* qualified dependency property name string.</span></span>  
  
 <span data-ttu-id="43877-155">如果使用此<xref:System.Windows.PropertyPath>对于情节提要目标的复杂路径<xref:System.Windows.PropertyPath.Path%2A>是描述中提供的各种对象的关系的标记的字符串格式<xref:System.Windows.PropertyPath.PathParameters%2A>。</span><span class="sxs-lookup"><span data-stu-id="43877-155">If using this <xref:System.Windows.PropertyPath> for a complex path for a storyboard target, <xref:System.Windows.PropertyPath.Path%2A> is a tokenized string format that describes the relationships of the various objects given in the <xref:System.Windows.PropertyPath.PathParameters%2A>.</span></span>  
  
-   <span data-ttu-id="43877-156">通过括在括号中的项的数组索引以此格式指定数组中的每个项。</span><span class="sxs-lookup"><span data-stu-id="43877-156">Each item in the array is specified in this format by the array index for the item enclosed in parentheses.</span></span> <span data-ttu-id="43877-157">例如，若要指定数组中的第一项，字符串标记是`(0)`。</span><span class="sxs-lookup"><span data-stu-id="43877-157">For example, to specify the first item in the array, the string token is `(0)`.</span></span>  
  
-   <span data-ttu-id="43877-158">由句点 （.） 指定项 （如在路径中的"步骤"） 之间的关系。</span><span class="sxs-lookup"><span data-stu-id="43877-158">Relationships between items ("steps" in the path) are specified by a dot (.).</span></span> <span data-ttu-id="43877-159">前面的点属性是第一步在路径中，后面的属性是第二步中，依此类推 （你可以指定超过两个步骤）。</span><span class="sxs-lookup"><span data-stu-id="43877-159">The property forward of the dot is the first step in the path, the property after is the second step, and so on (you can specify steps beyond two).</span></span> <span data-ttu-id="43877-160">链中的最后一步始终表示正进行动画处理的属性。</span><span class="sxs-lookup"><span data-stu-id="43877-160">The last step in the chain always represents the property being animated.</span></span>  
  
-   <span data-ttu-id="43877-161">通过索引器语法，在方括号中的索引访问的集合属性中的项 （[和]）。</span><span class="sxs-lookup"><span data-stu-id="43877-161">Items within collection properties are accessed with an indexer syntax, with the index within square brackets ([ and ]).</span></span> <span data-ttu-id="43877-162">索引器是累加性表示属性的标记。</span><span class="sxs-lookup"><span data-stu-id="43877-162">The indexer is additive to the token representing the property.</span></span> <span data-ttu-id="43877-163">例如，下面是一个包含两个步骤的路径，指定该属性的集合中的第二个项的第一步中的令牌组合： `(0)[1].(1)` 。</span><span class="sxs-lookup"><span data-stu-id="43877-163">For example, the following is a two-step path, with the token combination in the first step specifying the second item from within the collection of that property: `(0)[1].(1)` .</span></span> <span data-ttu-id="43877-164">不能使用索引器链; 中的最后一个属性不能实际集合位置进行动画处理，必须对该对象的属性进行动画处理。</span><span class="sxs-lookup"><span data-stu-id="43877-164">You cannot use an indexer on the last property in the chain; you cannot animate the actual collection position, you must animate a property on that object.</span></span>  
  
 <span data-ttu-id="43877-165">路径字符串<xref:System.Windows.PropertyPath>通过构造函数通常建立：<xref:System.Windows.PropertyPath.%23ctor%28System.Object%29>签名用于绑定或单步情节提要目标<xref:System.Windows.PropertyPath.%23ctor%28System.String%2CSystem.Object%5B%5D%29>多步骤情节提要目标的签名。</span><span class="sxs-lookup"><span data-stu-id="43877-165">The path string for a <xref:System.Windows.PropertyPath> is typically established through the constructors: the <xref:System.Windows.PropertyPath.%23ctor%28System.Object%29> signature for bindings or single-step storyboard targets, the <xref:System.Windows.PropertyPath.%23ctor%28System.String%2CSystem.Object%5B%5D%29> signature for multi-step storyboard targets.</span></span>  
  
 <span data-ttu-id="43877-166">**XAML:** 当你使用<xref:System.Windows.PropertyPath>来描述中的属性引用[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]、 属性值时，你指定的字符串首先处理的类型转换器 (<xref:System.Windows.PropertyPathConverter>)。</span><span class="sxs-lookup"><span data-stu-id="43877-166">**XAML:** When you use a <xref:System.Windows.PropertyPath> to describe a property reference in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], as an attribute value, the string that you specify is first handled by a type converter (<xref:System.Windows.PropertyPathConverter>).</span></span> <span data-ttu-id="43877-167">此类型转换器然后处理字符串，并基于其语法将调用之一<xref:System.Windows.PropertyPath>构造函数签名。</span><span class="sxs-lookup"><span data-stu-id="43877-167">This type converter then processes the string and based on its syntax will call one of the <xref:System.Windows.PropertyPath> constructor signatures.</span></span> <span data-ttu-id="43877-168">此过程间接性处理特性值的类型转换器通常是如何使用<xref:System.Windows.PropertyPath>中[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]，而不是声明<xref:System.Windows.PropertyPath>对象元素，然后将特定值应用于属性诸如<xref:System.Windows.PropertyPath.Path%2A>和<xref:System.Windows.PropertyPath.PathParameters%2A>.</span><span class="sxs-lookup"><span data-stu-id="43877-168">This indirection through the type converter handling an attribute value is generally how you use <xref:System.Windows.PropertyPath> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], rather than declaring a <xref:System.Windows.PropertyPath> object element and then applying specific values to attributes such as <xref:System.Windows.PropertyPath.Path%2A> and <xref:System.Windows.PropertyPath.PathParameters%2A>.</span></span> <span data-ttu-id="43877-169">有关详细信息，请参阅[PropertyPath XAML 语法](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)。</span><span class="sxs-lookup"><span data-stu-id="43877-169">For more information, see [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span></span>  
  
<a name="xamlTextUsage_Path"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="43877-170">XAML 文本用法</span><span class="sxs-lookup"><span data-stu-id="43877-170">XAML Text Usage</span></span>  
 <span data-ttu-id="43877-171">成员<xref:System.Windows.PropertyPath>类型通常未设置以直接[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]语法。</span><span class="sxs-lookup"><span data-stu-id="43877-171">Members of the <xref:System.Windows.PropertyPath> type are not typically set in a direct [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax.</span></span> <span data-ttu-id="43877-172">请参阅“备注”。</span><span class="sxs-lookup"><span data-stu-id="43877-172">See Remarks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathParameters">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;object&gt; PathParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;object&gt; PathParameters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.PathParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathParameters As Collection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ PathParameters { System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43877-173">获取要在路径引用索引参数时使用的参数列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="43877-173">Gets the list of parameters to use when the path refers to indexed parameters.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43877-174">参数列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="43877-174">The parameter list.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43877-175">属性<xref:System.Windows.PropertyPath>通常是通过构造函数。</span><span class="sxs-lookup"><span data-stu-id="43877-175">The properties for a <xref:System.Windows.PropertyPath> are typically established through the constructors.</span></span> <span data-ttu-id="43877-176">为设置<xref:System.Windows.PropertyPath.PathParameters%2A>、<xref:System.Windows.PropertyPath.%23ctor%2A>构造函数是特别便利因为`pathParameters`构造函数自变量指定为`params`，这意味着你不必创建或维度构造的数组。</span><span class="sxs-lookup"><span data-stu-id="43877-176">For setting <xref:System.Windows.PropertyPath.PathParameters%2A>, the <xref:System.Windows.PropertyPath.%23ctor%2A> constructor is particularly convenient because the `pathParameters` constructor argument is designated as `params`, meaning that you do not need to create or dimension an array for construction.</span></span> <span data-ttu-id="43877-177">你只需指定为一个附加参数的数组的每个成员。</span><span class="sxs-lookup"><span data-stu-id="43877-177">You simply specify each member of the array as an additional parameter.</span></span>  
  
 <span data-ttu-id="43877-178">如果最后一个属性的目标是<xref:System.Windows.Freezable>类型，将克隆值。</span><span class="sxs-lookup"><span data-stu-id="43877-178">If the final property that is the target is a <xref:System.Windows.Freezable> type, that value will be cloned.</span></span> <span data-ttu-id="43877-179">有关详细信息，请参阅[情节提要概述](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="43877-179">For details, see [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span></span>  
  
 <span data-ttu-id="43877-180">由情节提要动画机制执行属性链的实际计算。</span><span class="sxs-lookup"><span data-stu-id="43877-180">The actual evaluation of the property chain is performed by the storyboard animation mechanisms.</span></span> <span data-ttu-id="43877-181">在<xref:System.Windows.PropertyPath>级别时，不执行任何验证以确保路径的步骤在所有连接。</span><span class="sxs-lookup"><span data-stu-id="43877-181">At the <xref:System.Windows.PropertyPath> level, no validation is performed to make sure that the steps of the path connect at all.</span></span> <span data-ttu-id="43877-182">例如，可以构造具有的属性路径<xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType>作为第一步中，和<xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=nameWithType>作为第二个步骤。</span><span class="sxs-lookup"><span data-stu-id="43877-182">For instance, you can construct a property path that has <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> as the first step, and <xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=nameWithType> as the second step.</span></span> <span data-ttu-id="43877-183">因为画笔类型来填满，此类的属性路径将会失败如果实际应用作为目标，但是<xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType>没有<xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="43877-183">But such a property path would fail if actually applied as a target, because the Brush type that fills <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> does not have a <xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="43877-184">无效的属性路径以静默方式失败。</span><span class="sxs-lookup"><span data-stu-id="43877-184">Invalid property paths fail silently.</span></span> <span data-ttu-id="43877-185">有关详细信息，请参阅[情节提要概述](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="43877-185">For more information, see [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span></span>  
  
 <span data-ttu-id="43877-186">**XAML:** 当你使用<xref:System.Windows.PropertyPath>来描述中的属性引用[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]、 属性值时，你指定的字符串首先处理的类型转换器 (<xref:System.Windows.PropertyPathConverter>)。</span><span class="sxs-lookup"><span data-stu-id="43877-186">**XAML:** When you use a <xref:System.Windows.PropertyPath> to describe a property reference in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], as an attribute value, the string that you specify is first handled by a type converter (<xref:System.Windows.PropertyPathConverter>).</span></span> <span data-ttu-id="43877-187">此类型转换器然后处理字符串，并基于其语法将调用之一<xref:System.Windows.PropertyPath>构造函数签名。</span><span class="sxs-lookup"><span data-stu-id="43877-187">This type converter then processes the string and based on its syntax will call one of the <xref:System.Windows.PropertyPath> constructor signatures.</span></span> <span data-ttu-id="43877-188">此过程间接性处理特性值的类型转换器通常是如何使用<xref:System.Windows.PropertyPath>中[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]，而不是声明<xref:System.Windows.PropertyPath>对象元素，然后将特定值应用于属性诸如<xref:System.Windows.PropertyPath.Path%2A>和<xref:System.Windows.PropertyPath.PathParameters%2A>.</span><span class="sxs-lookup"><span data-stu-id="43877-188">This indirection through the type converter handling an attribute value is generally how you use <xref:System.Windows.PropertyPath> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], rather than declaring a <xref:System.Windows.PropertyPath> object element and then applying specific values to attributes such as <xref:System.Windows.PropertyPath.Path%2A> and <xref:System.Windows.PropertyPath.PathParameters%2A>.</span></span> <span data-ttu-id="43877-189">有关详细信息，请参阅[PropertyPath XAML 语法](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)。</span><span class="sxs-lookup"><span data-stu-id="43877-189">For more information, see [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span></span>  
  
<a name="xamlTextUsage_PathParameters"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="43877-190">XAML 文本用法</span><span class="sxs-lookup"><span data-stu-id="43877-190">XAML Text Usage</span></span>  
 <span data-ttu-id="43877-191">成员<xref:System.Windows.PropertyPath>类型通常未设置以直接[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]语法。</span><span class="sxs-lookup"><span data-stu-id="43877-191">Members of the <xref:System.Windows.PropertyPath> type are not typically set in a direct [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax.</span></span> <span data-ttu-id="43877-192">请参阅“备注”。</span><span class="sxs-lookup"><span data-stu-id="43877-192">See Remarks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>