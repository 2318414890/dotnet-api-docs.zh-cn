<Type Name="EventTrigger" FullName="System.Windows.EventTrigger">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d4d4b8d2dde58945140cbf2b618439e20a2966b7" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37549859" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventTrigger : System.Windows.TriggerBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventTrigger extends System.Windows.TriggerBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.EventTrigger" />
  <TypeSignature Language="VB.NET" Value="Public Class EventTrigger&#xA;Inherits TriggerBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventTrigger : System::Windows::TriggerBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type EventTrigger = class&#xA;    inherit TriggerBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Actions")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ac94b-101">表示一个触发器，该触发器应用一组操作以响应一个事件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ac94b-101">Represents a trigger that applies a set of actions in response to an event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac94b-102"><xref:System.Windows.Trigger> 对象具有<xref:System.Windows.Trigger.Setters%2A>， <xref:System.Windows.TriggerBase.EnterActions%2A>，并<xref:System.Windows.TriggerBase.ExitActions%2A>应用更改或根据特定属性状态的操作的属性时<xref:System.Windows.EventTrigger>对象开始的一组<xref:System.Windows.EventTrigger.Actions%2A>指定的路由的事件发生时。</span><span class="sxs-lookup"><span data-stu-id="ac94b-102"><xref:System.Windows.Trigger> objects have the <xref:System.Windows.Trigger.Setters%2A>, <xref:System.Windows.TriggerBase.EnterActions%2A>, and <xref:System.Windows.TriggerBase.ExitActions%2A> properties that apply changes or actions based on the state of certain properties, while <xref:System.Windows.EventTrigger> objects start a set of <xref:System.Windows.EventTrigger.Actions%2A> when a specified routed event occurs.</span></span> <span data-ttu-id="ac94b-103">例如，你可能想要使用<xref:System.Windows.EventTrigger>时要启动一组动画鼠标指针位于某一特定[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]控件。</span><span class="sxs-lookup"><span data-stu-id="ac94b-103">For example, you may want to use an <xref:System.Windows.EventTrigger> to start a set of animations when the mouse pointer is over a certain [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] control.</span></span> <span data-ttu-id="ac94b-104">与不同<xref:System.Windows.Trigger>，<xref:System.Windows.EventTrigger>具有终止状态，没有概念，因此该操作后引发该事件的条件不再为 true 将无法撤消。</span><span class="sxs-lookup"><span data-stu-id="ac94b-104">Unlike <xref:System.Windows.Trigger>, <xref:System.Windows.EventTrigger> has no concept of termination of state, so the action will not be undone once the condition that raised the event is no longer true.</span></span>  
  
 <span data-ttu-id="ac94b-105">请注意，当使用<xref:System.Windows.EventTrigger>，您需要选择不会干扰内在行为的控件的事件。</span><span class="sxs-lookup"><span data-stu-id="ac94b-105">Note that when using an <xref:System.Windows.EventTrigger>, you need to choose events that do not interfere with the inherent behavior of your control.</span></span> <span data-ttu-id="ac94b-106">控件，如<xref:System.Windows.Controls.Button>或<xref:System.Windows.Controls.TextBox>如鼠标单击的用户输入事件上执行特定操作和键盘事件。</span><span class="sxs-lookup"><span data-stu-id="ac94b-106">Controls such as <xref:System.Windows.Controls.Button> or <xref:System.Windows.Controls.TextBox> perform specific actions on user input events such as mouse clicks and keyboard events.</span></span> <span data-ttu-id="ac94b-107">例如，如果进行样式设置一个按钮，尝试设置<xref:System.Windows.Input.Mouse.MouseDown>作为事件<xref:System.Windows.EventTrigger.RoutedEvent%2A>的<xref:System.Windows.EventTrigger>，则<xref:System.Windows.EventTrigger>永远不会获取应用，因为事件首先获取由处理该按钮。</span><span class="sxs-lookup"><span data-stu-id="ac94b-107">For example, if you are styling a button and try to set the <xref:System.Windows.Input.Mouse.MouseDown> event as the <xref:System.Windows.EventTrigger.RoutedEvent%2A> of an <xref:System.Windows.EventTrigger>, the <xref:System.Windows.EventTrigger> never gets applied because the event first gets handled by the button.</span></span> <span data-ttu-id="ac94b-108">相反，可以使用<xref:System.Windows.Input.Mouse.PreviewMouseDown>事件或不同的事件。</span><span class="sxs-lookup"><span data-stu-id="ac94b-108">Instead, you can use the <xref:System.Windows.Input.Mouse.PreviewMouseDown> event or a different event.</span></span>  
  
 <span data-ttu-id="ac94b-109">如果使用的使用数据绑定时<xref:System.Windows.Data.Binding.TargetUpdated>事件中，必须设置<xref:System.Windows.Data.Binding.NotifyOnTargetUpdated%2A>的值你<xref:System.Windows.Data.Binding>对象传递给`true`有关要引发的事件。</span><span class="sxs-lookup"><span data-stu-id="ac94b-109">When using data binding, if you are using the <xref:System.Windows.Data.Binding.TargetUpdated> event, you must set the <xref:System.Windows.Data.Binding.NotifyOnTargetUpdated%2A> value of your <xref:System.Windows.Data.Binding> object to `true` for the event to be raised.</span></span>  
  
 <span data-ttu-id="ac94b-110">添加<xref:System.Windows.TriggerAction>子级<xref:System.Windows.EventTrigger>对象隐式地将其添加到<xref:System.Windows.TriggerActionCollection>为<xref:System.Windows.EventTrigger>对象。</span><span class="sxs-lookup"><span data-stu-id="ac94b-110">Adding a <xref:System.Windows.TriggerAction> child to an <xref:System.Windows.EventTrigger> object implicitly adds it to the <xref:System.Windows.TriggerActionCollection> for the <xref:System.Windows.EventTrigger> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac94b-111">此示例演示如何使用事件触发器在样式中进行动画处理<xref:System.Windows.UIElement.MouseEnter>并<xref:System.Windows.UIElement.MouseLeave>的事件<xref:System.Windows.FrameworkElement>。</span><span class="sxs-lookup"><span data-stu-id="ac94b-111">This example shows how to use event triggers in a style to animate the <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.MouseLeave> events of a <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="ac94b-112">在此示例中，<xref:System.Windows.Style>已<xref:System.Windows.Style.TargetType%2A>设置为<xref:System.Windows.Shapes.Rectangle>。</span><span class="sxs-lookup"><span data-stu-id="ac94b-112">In this example, the <xref:System.Windows.Style> has the <xref:System.Windows.Style.TargetType%2A> set to <xref:System.Windows.Shapes.Rectangle>.</span></span> <span data-ttu-id="ac94b-113">因此，没有必要来限定`MouseEnter`和`MouseLeave`事件名称与类的名称。</span><span class="sxs-lookup"><span data-stu-id="ac94b-113">Therefore, there is no need to qualify the `MouseEnter` and `MouseLeave` event names with the class name.</span></span>  
  
 [!code-xaml[StyleEventTriggerAnimation#EventTriggerSnippet](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleEventTriggerAnimation/CS/Default.xaml#eventtriggersnippet)]
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.EventSetter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ac94b-114">初始化 <see cref="T:System.Windows.EventTrigger" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac94b-114">Initializes a new instance of the <see cref="T:System.Windows.EventTrigger" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventTrigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ac94b-115">初始化 <see cref="T:System.Windows.EventTrigger" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac94b-115">Initializes a new instance of the <see cref="T:System.Windows.EventTrigger" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventTrigger (System.Windows.RoutedEvent routedEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.RoutedEvent routedEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.#ctor(System.Windows.RoutedEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventTrigger(System::Windows::RoutedEvent ^ routedEvent);" />
      <MemberSignature Language="F#" Value="new System.Windows.EventTrigger : System.Windows.RoutedEvent -&gt; System.Windows.EventTrigger" Usage="new System.Windows.EventTrigger routedEvent" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <span data-ttu-id="ac94b-116">激活此触发器的 <see cref="T:System.Windows.RoutedEvent" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac94b-116">The <see cref="T:System.Windows.RoutedEvent" /> that activates this trigger.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac94b-117">使用指定的事件初始化 <see cref="T:System.Windows.EventTrigger" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac94b-117">Initializes a new instance of the <see cref="T:System.Windows.EventTrigger" /> class with the specified event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Actions">
      <MemberSignature Language="C#" Value="public System.Windows.TriggerActionCollection Actions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TriggerActionCollection Actions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventTrigger.Actions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Actions As TriggerActionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TriggerActionCollection ^ Actions { System::Windows::TriggerActionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Actions : System.Windows.TriggerActionCollection" Usage="System.Windows.EventTrigger.Actions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TriggerActionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ac94b-118">获取事件发生时要应用的操作的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac94b-118">Gets the collection of actions to apply when the event occurs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ac94b-119">默认值为空集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac94b-119">The default is an empty collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac94b-120">与不同<xref:System.Windows.Trigger>，<xref:System.Windows.EventTrigger>具有终止状态，没有概念，因此该操作后引发该事件的条件不再为 true 将无法撤消。</span><span class="sxs-lookup"><span data-stu-id="ac94b-120">Unlike <xref:System.Windows.Trigger>, <xref:System.Windows.EventTrigger> has no concept of termination of state, so the action will not be undone once the condition that raised the event is no longer true.</span></span>  
  
 <span data-ttu-id="ac94b-121">添加<xref:System.Windows.TriggerAction>子级<xref:System.Windows.EventTrigger>对象隐式地将其添加到<xref:System.Windows.TriggerActionCollection>为<xref:System.Windows.EventTrigger>对象。</span><span class="sxs-lookup"><span data-stu-id="ac94b-121">Adding a <xref:System.Windows.TriggerAction> child to an <xref:System.Windows.EventTrigger> object implicitly adds it to the <xref:System.Windows.TriggerActionCollection> for the <xref:System.Windows.EventTrigger> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ac94b-122">此属性只能设置[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]通过集合语法所示，或通过访问的集合对象并使用它的各种方法，例如 Add。</span><span class="sxs-lookup"><span data-stu-id="ac94b-122">This property can only be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] via the collection syntax shown, or by accessing the collection object and using its various methods such as Add.</span></span> <span data-ttu-id="ac94b-123">要访问的集合对象本身的属性是只读的集合本身是可读写。</span><span class="sxs-lookup"><span data-stu-id="ac94b-123">The property to access the collection object itself is read-only, the collection itself is read-write.</span></span>  
  
<a name="xamlPropertyElementUsage_Actions"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="ac94b-124">XAML 属性元素用法</span><span class="sxs-lookup"><span data-stu-id="ac94b-124">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.Actions>  
    OneOrMoreTriggerActions  
  </object.Actions>  
</object>  
```  
  
<a name="xamlValues_Actions"></a>   
## <a name="xaml-values"></a><span data-ttu-id="ac94b-125">XAML 值</span><span class="sxs-lookup"><span data-stu-id="ac94b-125">XAML Values</span></span>  
 <span data-ttu-id="ac94b-126">*OneOrMoreTriggerActions*</span><span class="sxs-lookup"><span data-stu-id="ac94b-126">*OneOrMoreTriggerActions*</span></span>  
 <span data-ttu-id="ac94b-127">一个或多个<xref:System.Windows.TriggerAction>对象。</span><span class="sxs-lookup"><span data-stu-id="ac94b-127">One or more <xref:System.Windows.TriggerAction> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac94b-128">此示例介绍了如何使用事件触发器在样式中进行动画处理<xref:System.Windows.UIElement.MouseEnter>并<xref:System.Windows.UIElement.MouseLeave>的事件<xref:System.Windows.FrameworkElement>。</span><span class="sxs-lookup"><span data-stu-id="ac94b-128">This example describes how to use event triggers in a style to animate the <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.MouseLeave> events of a <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="ac94b-129">如上所述，添加<xref:System.Windows.TriggerAction>子级<xref:System.Windows.EventTrigger>对象隐式地将其添加到<xref:System.Windows.TriggerActionCollection>为<xref:System.Windows.EventTrigger>对象。</span><span class="sxs-lookup"><span data-stu-id="ac94b-129">As mentioned above, adding a <xref:System.Windows.TriggerAction> child to an <xref:System.Windows.EventTrigger> object implicitly adds it to the <xref:System.Windows.TriggerActionCollection> for the <xref:System.Windows.EventTrigger> object.</span></span> <span data-ttu-id="ac94b-130">因此，在此示例中，`<EventTrigger.Actions>`是隐式的。</span><span class="sxs-lookup"><span data-stu-id="ac94b-130">Therefore, in this example, `<EventTrigger.Actions>` is implicit.</span></span>  
  
 [!code-xaml[StyleEventTriggerAnimation#EventTriggerSnippet](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleEventTriggerAnimation/CS/Default.xaml#eventtriggersnippet)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="protected virtual void AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddChild (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddChild(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddChild : obj -&gt; unit&#xA;override this.AddChild : obj -&gt; unit" Usage="eventTrigger.AddChild value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="ac94b-131">要添加到此触发器的 <see cref="T:System.Windows.TriggerAction" /> 集合中的 <see cref="P:System.Windows.EventTrigger.Actions" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac94b-131">A <see cref="T:System.Windows.TriggerAction" /> object to add to the <see cref="P:System.Windows.EventTrigger.Actions" /> collection of this trigger.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac94b-132">将指定的对象添加到当前事件触发器的 <see cref="P:System.Windows.EventTrigger.Actions" /> 集合中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac94b-132">Adds the specified object to the <see cref="P:System.Windows.EventTrigger.Actions" /> collection of the current event trigger.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddText">
      <MemberSignature Language="C#" Value="protected virtual void AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member AddText : string -&gt; unit&#xA;override this.AddText : string -&gt; unit" Usage="eventTrigger.AddText text" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="ac94b-133">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac94b-133">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac94b-134">此方法不受支持并导致异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac94b-134">This method is not supported and results in an exception.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoutedEvent">
      <MemberSignature Language="C#" Value="public System.Windows.RoutedEvent RoutedEvent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.RoutedEvent RoutedEvent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventTrigger.RoutedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Property RoutedEvent As RoutedEvent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::RoutedEvent ^ RoutedEvent { System::Windows::RoutedEvent ^ get(); void set(System::Windows::RoutedEvent ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RoutedEvent : System.Windows.RoutedEvent with get, set" Usage="System.Windows.EventTrigger.RoutedEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ac94b-135">获取或设置将激活此触发器的 <see cref="T:System.Windows.RoutedEvent" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac94b-135">Gets or sets the <see cref="T:System.Windows.RoutedEvent" /> that will activate this trigger.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ac94b-136">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac94b-136">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac94b-137"><xref:System.Windows.EventTrigger>指定的路由的事件发生时，s 将应用一组操作。</span><span class="sxs-lookup"><span data-stu-id="ac94b-137"><xref:System.Windows.EventTrigger>s apply a set of actions when the specified routed event occurs.</span></span> <span data-ttu-id="ac94b-138">例如，你可能想要使用<xref:System.Windows.EventTrigger>以启动一组动画，当鼠标指针位于某一特定[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]控件。</span><span class="sxs-lookup"><span data-stu-id="ac94b-138">For example, you may want to use <xref:System.Windows.EventTrigger>s to start a set of animations when the mouse pointer is over a certain [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] control.</span></span>  
  
 <span data-ttu-id="ac94b-139">如果模板或包含此样式<xref:System.Windows.EventTrigger>不具有`TargetType`属性指定，则需要质量与类名称使用的事件名称`ClassName.EventName`语法。</span><span class="sxs-lookup"><span data-stu-id="ac94b-139">If the template or style that contains this <xref:System.Windows.EventTrigger> does not have the `TargetType` property specified, then you need to quality the event name with the class name using the `ClassName.EventName` syntax.</span></span>  
  
 <span data-ttu-id="ac94b-140"><xref:System.Windows.EventTrigger> 对象不能处理已经过的事件<xref:System.Windows.RoutedEventArgs.Handled%2A>。</span><span class="sxs-lookup"><span data-stu-id="ac94b-140"><xref:System.Windows.EventTrigger> objects cannot handle events that have already been <xref:System.Windows.RoutedEventArgs.Handled%2A>.</span></span> <span data-ttu-id="ac94b-141">控件，如<xref:System.Windows.Controls.Button>或<xref:System.Windows.Controls.TextBox>如鼠标单击的用户输入事件上执行特定操作和键盘事件。</span><span class="sxs-lookup"><span data-stu-id="ac94b-141">Controls such as <xref:System.Windows.Controls.Button> or <xref:System.Windows.Controls.TextBox> perform specific actions on user input events such as mouse clicks and keyboard events.</span></span> <span data-ttu-id="ac94b-142">例如，如果进行样式设置一个按钮，尝试设置<xref:System.Windows.Input.Mouse.MouseDown>作为事件<xref:System.Windows.EventTrigger.RoutedEvent%2A>的<xref:System.Windows.EventTrigger>，则<xref:System.Windows.EventTrigger>永远不会获取应用，因为事件首先获取由处理该按钮。</span><span class="sxs-lookup"><span data-stu-id="ac94b-142">For example, if you are styling a button and try to set the <xref:System.Windows.Input.Mouse.MouseDown> event as the <xref:System.Windows.EventTrigger.RoutedEvent%2A> of an <xref:System.Windows.EventTrigger>, the <xref:System.Windows.EventTrigger> never gets applied because the event first gets handled by the button.</span></span> <span data-ttu-id="ac94b-143">相反，可以使用<xref:System.Windows.Input.Mouse.PreviewMouseDown>事件或不同的事件。</span><span class="sxs-lookup"><span data-stu-id="ac94b-143">Instead, you can use the <xref:System.Windows.Input.Mouse.PreviewMouseDown> event or a different event.</span></span>  
  
 <span data-ttu-id="ac94b-144">如果使用的使用数据绑定时<xref:System.Windows.Data.Binding.TargetUpdated>事件中，必须设置<xref:System.Windows.Data.Binding.NotifyOnTargetUpdated%2A>的值在<xref:System.Windows.Data.Binding>为可用于引发事件的对象。</span><span class="sxs-lookup"><span data-stu-id="ac94b-144">When using data binding, if you are using the <xref:System.Windows.Data.Binding.TargetUpdated> event, you must set the <xref:System.Windows.Data.Binding.NotifyOnTargetUpdated%2A> value of your <xref:System.Windows.Data.Binding> object to true for the event to be raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac94b-145">此示例演示如何使用事件触发器在样式中进行动画处理<xref:System.Windows.UIElement.MouseEnter>并<xref:System.Windows.UIElement.MouseLeave>的事件<xref:System.Windows.FrameworkElement>。</span><span class="sxs-lookup"><span data-stu-id="ac94b-145">This example shows how to use event triggers in a style to animate the <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.MouseLeave> events of a <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="ac94b-146">在此示例中，<xref:System.Windows.Style>已<xref:System.Windows.Style.TargetType%2A>设置为<xref:System.Windows.Shapes.Rectangle>。</span><span class="sxs-lookup"><span data-stu-id="ac94b-146">In this example, the <xref:System.Windows.Style> has the <xref:System.Windows.Style.TargetType%2A> set to <xref:System.Windows.Shapes.Rectangle>.</span></span> <span data-ttu-id="ac94b-147">因此，没有必要来限定`MouseEnter`和`MouseLeave`事件名称与类的名称。</span><span class="sxs-lookup"><span data-stu-id="ac94b-147">Therefore, there is no need to qualify the `MouseEnter` and `MouseLeave` event names with the class name.</span></span>  
  
 [!code-xaml[StyleEventTriggerAnimation#EventTriggerSnippet](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleEventTriggerAnimation/CS/Default.xaml#eventtriggersnippet)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ac94b-148">
            <see cref="P:System.Windows.EventTrigger.RoutedEvent" /> 属性不能为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac94b-148">The <see cref="P:System.Windows.EventTrigger.RoutedEvent" /> property cannot be null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeActions">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeActions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeActions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.ShouldSerializeActions" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeActions () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeActions();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeActions : unit -&gt; bool" Usage="eventTrigger.ShouldSerializeActions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ac94b-149">返回序列化进程是否应序列化此类的实例上 <see cref="P:System.Windows.EventTrigger.Actions" /> 属性的有效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac94b-149">Returns whether serialization processes should serialize the effective value of the <see cref="P:System.Windows.EventTrigger.Actions" /> property on instances of this class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac94b-150">如果应序列化 <see cref="P:System.Windows.EventTrigger.Actions" /> 属性值，则返回 <see langword="true" />；否则返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac94b-150">Returns <see langword="true" /> if the <see cref="P:System.Windows.EventTrigger.Actions" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceName">
      <MemberSignature Language="C#" Value="public string SourceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventTrigger.SourceName" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceName : string with get, set" Usage="System.Windows.EventTrigger.SourceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ac94b-151">获取或设置对象的名称，该对象具有激活此触发器的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac94b-151">Gets or sets the name of the object with the event that activates this trigger.</span>
          </span>
          <span data-ttu-id="ac94b-152">仅元素触发器或模板触发器可使用此名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac94b-152">This is only used by element triggers or template triggers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ac94b-153">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac94b-153">The default value is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ac94b-154">如果此属性值为 <see langword="null" />，则为引发事件而受到监视的元素为模板化父级或逻辑树根。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac94b-154">If this property value is <see langword="null" />, then the element being monitored for the raising of the event is the templated parent or the logical tree root.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac94b-155">可以将此属性设置的范围内的任意元素的名称为触发器集合 (集合，此<xref:System.Windows.EventTrigger>属于) 应用。</span><span class="sxs-lookup"><span data-stu-id="ac94b-155">You can set this property to the name of any element within the scope of where the trigger collection (the collection that this <xref:System.Windows.EventTrigger> is part of) is applied.</span></span> <span data-ttu-id="ac94b-156">这通常是包含此模板内的已命名的元素<xref:System.Windows.EventTrigger>。</span><span class="sxs-lookup"><span data-stu-id="ac94b-156">This is typically a named element that is within the template that contains this <xref:System.Windows.EventTrigger>.</span></span> <span data-ttu-id="ac94b-157">如果您在设置<xref:System.Windows.FrameworkElement.Triggers%2A>上的元素直接，则该属性是该父元素的范围内的命名的元素。</span><span class="sxs-lookup"><span data-stu-id="ac94b-157">If you are setting the <xref:System.Windows.FrameworkElement.Triggers%2A> property on an element directly, then it is a named element within the scope of that parent element.</span></span>  
  
 <span data-ttu-id="ac94b-158">您可以命名对象使用[X:name 指令](~/docs/framework/xaml-services/x-name-directive.md)语法。</span><span class="sxs-lookup"><span data-stu-id="ac94b-158">You can name an object using the [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md) syntax.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ac94b-159">使用 <see cref="T:System.Windows.EventTrigger" /> 之后，就不能再对其进行修改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac94b-159">After an <see cref="T:System.Windows.EventTrigger" /> is in use, it cannot be modified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="ac94b-160">要添加的子对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac94b-160">The child object to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac94b-161">添加子对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac94b-161">Adds a child object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac94b-162">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="ac94b-162">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ac94b-163">它只能在 <xref:System.Windows.EventTrigger> 实例强制转换为 <xref:System.Windows.Markup.IAddChild> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ac94b-163">It can be used only when the <xref:System.Windows.EventTrigger> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="ac94b-164">要添加到对象的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac94b-164">The text to add to the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac94b-165">将节点的文本内容添加到对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac94b-165">Adds the text content of a node to the object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac94b-166">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="ac94b-166">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ac94b-167">它只能在 <xref:System.Windows.EventTrigger> 实例强制转换为 <xref:System.Windows.Markup.IAddChild> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ac94b-167">It can be used only when the <xref:System.Windows.EventTrigger> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>