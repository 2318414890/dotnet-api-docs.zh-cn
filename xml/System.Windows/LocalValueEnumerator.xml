<Type Name="LocalValueEnumerator" FullName="System.Windows.LocalValueEnumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6ec629675688af65632301370015ffad0f9568c3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct LocalValueEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit LocalValueEnumerator extends System.ValueType implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Windows.LocalValueEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure LocalValueEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public value class LocalValueEnumerator : System::Collections::IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="45972-101">为 <see cref="T:System.Windows.DependencyObject" /> 上存在的任何依赖属性的本地值提供枚举支持。</span>
      <span class="sxs-lookup">
        <span data-stu-id="45972-101">Provides enumeration support for the local values of any dependency properties that exist on a <see cref="T:System.Windows.DependencyObject" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45972-102">A*本地值*是直接对依赖项属性，通过调用设置依赖项属性的值<xref:System.Windows.DependencyObject.SetValue%2A>，或通过使用 set 访问器的更常见的做法[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]属性包装器调用<xref:System.Windows.DependencyObject.SetValue%2A>内部。</span><span class="sxs-lookup"><span data-stu-id="45972-102">A *local value* is a value for a dependency property that was set directly on a dependency property, by calling <xref:System.Windows.DependencyObject.SetValue%2A>, or more typically by using the set accessor of a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] property wrapper that calls <xref:System.Windows.DependencyObject.SetValue%2A> internally.</span></span> <span data-ttu-id="45972-103">其他不是本地值的属性系统行列式的示例包括通过样式，设置值或依赖项属性的默认值。</span><span class="sxs-lookup"><span data-stu-id="45972-103">Examples of other property system determinants that are not local values are values set through styles, or dependency property default values.</span></span> <span data-ttu-id="45972-104">有关详细信息，请参阅[依赖属性值优先级](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</span><span class="sxs-lookup"><span data-stu-id="45972-104">For details, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
 <span data-ttu-id="45972-105">A<xref:System.Windows.LocalValueEnumerator>返回<xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A>方法，并实现<xref:System.Collections.IEnumerator>接口。</span><span class="sxs-lookup"><span data-stu-id="45972-105">A <xref:System.Windows.LocalValueEnumerator> is returned by the <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> method and implements the <xref:System.Collections.IEnumerator> interface.</span></span> <span data-ttu-id="45972-106">公共<xref:System.Windows.LocalValueEnumerator>构造函数不存在; 因此，你必须调用<xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A>若要获取此类的实例。</span><span class="sxs-lookup"><span data-stu-id="45972-106">A public <xref:System.Windows.LocalValueEnumerator> constructor does not exist; therefore, you must call <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> to obtain an instance of this class.</span></span>  
  
 <span data-ttu-id="45972-107">请不要修改本地值 (通过调用<xref:System.Windows.DependencyObject.SetValue%2A>或<xref:System.Windows.DependencyObject.ClearValue%2A>) 枚举本地值时。</span><span class="sxs-lookup"><span data-stu-id="45972-107">Do not modify local values (by calling <xref:System.Windows.DependencyObject.SetValue%2A> or <xref:System.Windows.DependencyObject.ClearValue%2A>) while enumerating local values.</span></span> <span data-ttu-id="45972-108">如果你更改或清除的属性值基于枚举器返回的属性，更改或清除操作不会使失效枚举器集合中，对于许多人来说都是如此<xref:System.Collections.IEnumerator>实现。</span><span class="sxs-lookup"><span data-stu-id="45972-108">If you change or clear the property values based on properties that are returned by the enumerator, the change or clear operations do not invalidate the enumerator collection, as is the case for many <xref:System.Collections.IEnumerator> implementations.</span></span> <span data-ttu-id="45972-109">此外，枚举器视图是一个快照。</span><span class="sxs-lookup"><span data-stu-id="45972-109">Also, the enumerator view is a snapshot.</span></span> <span data-ttu-id="45972-110">对集合进行更改不保证是线程安全的并强制实施未锁定。</span><span class="sxs-lookup"><span data-stu-id="45972-110">A change to the collection is not guaranteed to be thread safe, and no lock is enforced.</span></span> <span data-ttu-id="45972-111">其他线程仍可以免费访问的本地值从枚举器之外的上下文。</span><span class="sxs-lookup"><span data-stu-id="45972-111">Other threads still have free access to the local values from a context other than the enumerator.</span></span>  
  
 <span data-ttu-id="45972-112">如果，使用此类型类中具有操作其中务必知道属性的值是否来自本地值。</span><span class="sxs-lookup"><span data-stu-id="45972-112">Use this type if you have operations in your class where it is important to know whether a property's value came from a local value.</span></span> <span data-ttu-id="45972-113">例如，使用此类型的<xref:System.Windows.DependencyObject.OnPropertyChanged%2A>实现，或你想要查询对所有的元数据本地设置属性。</span><span class="sxs-lookup"><span data-stu-id="45972-113">For example, use this type in an <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> implementation, or where you want to query the metadata on all locally set properties.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyObject" />
  </Docs>
  <Members>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.LocalValueEnumerator.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45972-114">获取在集合中表示的项数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="45972-114">Gets the number of items that are represented in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45972-115">集合中项的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="45972-115">The number of items in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45972-116">此属性不是定义的成员的<xref:System.Collections.IEnumerator>但为方便起见提供。</span><span class="sxs-lookup"><span data-stu-id="45972-116">This property is not a defined member of <xref:System.Collections.IEnumerator> but is provided as a convenience.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Windows.LocalValueEntry Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.LocalValueEntry Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.LocalValueEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As LocalValueEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::LocalValueEntry Current { System::Windows::LocalValueEntry get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LocalValueEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45972-117">获取集合中的当前元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="45972-117">Gets the current element in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45972-118">集合中的当前 <see cref="T:System.Windows.LocalValueEntry" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="45972-118">The current <see cref="T:System.Windows.LocalValueEntry" /> in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45972-119">此版本通常可访问的属性依赖于的集合在创建时拍摄的快照。</span><span class="sxs-lookup"><span data-stu-id="45972-119">This generally accessible version of the property relies on a snapshot of the collection that is taken at creation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="45972-120">要与当前的 <see cref="T:System.Windows.LocalValueEnumerator" /> 进行比较的 <see cref="T:System.Windows.LocalValueEnumerator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="45972-120">The <see cref="T:System.Windows.LocalValueEnumerator" /> to compare with the current <see cref="T:System.Windows.LocalValueEnumerator" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45972-121">确定提供的 <see cref="T:System.Windows.LocalValueEnumerator" /> 是否等效于此 <see cref="T:System.Windows.LocalValueEnumerator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="45972-121">Determines whether the provided <see cref="T:System.Windows.LocalValueEnumerator" /> is equivalent to this <see cref="T:System.Windows.LocalValueEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45972-122">如果指定的 <see langword="true" /> 等于当前的 <see cref="T:System.Windows.LocalValueEnumerator" />，则为 <see cref="T:System.Windows.LocalValueEnumerator" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="45972-122">
              <see langword="true" /> if the specified <see cref="T:System.Windows.LocalValueEnumerator" /> is equal to the current <see cref="T:System.Windows.LocalValueEnumerator" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45972-123">此实现支持引用相等性。</span><span class="sxs-lookup"><span data-stu-id="45972-123">This implementation supports reference equality only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="45972-124">返回当前 <see cref="T:System.Windows.LocalValueEnumerator" /> 的哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="45972-124">Returns a hash code for the current <see cref="T:System.Windows.LocalValueEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45972-125">32 位整数哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="45972-125">A 32-bit integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="45972-126">将枚举数推进到集合的下一个元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="45972-126">Advances the enumerator to the next element of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45972-127">如果枚举数已成功地推进到下一个元素，则为 <see langword="true" />；如果枚举数传递到集合的末尾，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="45972-127">
              <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.LocalValueEnumerator obj1, System.Windows.LocalValueEnumerator obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.LocalValueEnumerator obj1, valuetype System.Windows.LocalValueEnumerator obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (obj1 As LocalValueEnumerator, obj2 As LocalValueEnumerator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::LocalValueEnumerator obj1, System::Windows::LocalValueEnumerator obj2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Windows.LocalValueEnumerator" />
        <Parameter Name="obj2" Type="System.Windows.LocalValueEnumerator" />
      </Parameters>
      <Docs>
        <param name="obj1">
          <span data-ttu-id="45972-128">要比较的第一个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="45972-128">The first object to compare.</span>
          </span>
        </param>
        <param name="obj2">
          <span data-ttu-id="45972-129">要比较的第二个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="45972-129">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45972-130">比较两个指定的 <see cref="T:System.Windows.LocalValueEnumerator" /> 对象是否相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="45972-130">Compares whether two specified <see cref="T:System.Windows.LocalValueEnumerator" /> objects are the same.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45972-131">如果 <paramref name="obj1" /><see cref="T:System.Windows.LocalValueEnumerator" /> 等于 <paramref name="obj2" /><see cref="T:System.Windows.LocalValueEnumerator" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="45972-131">
              <see langword="true" /> if the <paramref name="obj1" /><see cref="T:System.Windows.LocalValueEnumerator" /> is equal to the <paramref name="obj2" /><see cref="T:System.Windows.LocalValueEnumerator" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45972-132">此实现支持引用相等性。</span><span class="sxs-lookup"><span data-stu-id="45972-132">This implementation supports reference equality only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.LocalValueEnumerator obj1, System.Windows.LocalValueEnumerator obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.LocalValueEnumerator obj1, valuetype System.Windows.LocalValueEnumerator obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (obj1 As LocalValueEnumerator, obj2 As LocalValueEnumerator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::LocalValueEnumerator obj1, System::Windows::LocalValueEnumerator obj2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Windows.LocalValueEnumerator" />
        <Parameter Name="obj2" Type="System.Windows.LocalValueEnumerator" />
      </Parameters>
      <Docs>
        <param name="obj1">
          <span data-ttu-id="45972-133">要比较的第一个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="45972-133">The first object to compare.</span>
          </span>
        </param>
        <param name="obj2">
          <span data-ttu-id="45972-134">要比较的第二个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="45972-134">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45972-135">比较两个指定的 <see cref="T:System.Windows.LocalValueEnumerator" /> 对象，以确定它们是否不相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="45972-135">Compares two specified <see cref="T:System.Windows.LocalValueEnumerator" /> objects to determine whether they are not the same.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45972-136">如果实例不相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="45972-136">
              <see langword="true" /> if the instances are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45972-137">此实现支持引用相等性。</span><span class="sxs-lookup"><span data-stu-id="45972-137">This implementation supports reference equality only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="45972-138">将枚举数设置为其初始位置，该位置位于集合中第一个元素之前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="45972-138">Sets the enumerator to its initial position, which is before the first element in the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IEnumerator.Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45972-139">有关此成员的说明，请参见 <see cref="P:System.Collections.IEnumerator.Current" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="45972-139">For a description of this members, see <see cref="P:System.Collections.IEnumerator.Current" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45972-140">集合中的当前元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="45972-140">The current element in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45972-141">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="45972-141">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="45972-142">它只能在 <xref:System.Windows.LocalValueEnumerator> 实例强制转换为 <xref:System.Collections.IEnumerator> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="45972-142">It can be used only when the <xref:System.Windows.LocalValueEnumerator> instance is cast to an <xref:System.Collections.IEnumerator> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.LocalValueEnumerator.Current" />
      </Docs>
    </Member>
  </Members>
</Type>