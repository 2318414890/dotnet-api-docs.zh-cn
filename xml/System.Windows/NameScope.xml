<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="NameScope.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58e592cda49827dc25a97d85376a3be8483889b1d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e592cda49827dc25a97d85376a3be8483889b1d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.NameScope">
          <source>Implements base WPF support for the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.INameScope" /&gt;</ph> methods that store or retrieve name-object mappings into a particular XAML namescope.</source>
          <target state="translated">实现对 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.INameScope" /&gt;</ph> 方法的基本 WPF 支持，这些方法用于向特定 XAML 名称范围中存储名称-对象映射或检索此类映射。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.NameScope">
          <source>Adds attached property support to make it simpler to get or set XAML namescope names dynamically at the element level..</source>
          <target state="translated">添加附加属性支持，以便更简单地在元素级别动态获取或设置 XAML 名称范围的名称。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>This class implements built-in XAML namescope support for WPF treatment of XAML.</source>
          <target state="translated">此类实现的 XAML 的 WPF 处理的内置 XAML 命名空间支持。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source><ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> assists in creation of initial XAML namescopes based on parsing XAML, such as when instantiating styles and templates.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> 创建基于分析 XAML，例如当实例化样式和模板的初始 XAML 名称范围中的协作。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>It also supports creation of XAML namescopes by processes that occur outside of normal XAML loading of elements by the WPF XAML processor implementation.</source>
          <target state="translated">它还支持的进程之外的元素的正常 XAML 加载出现的 WPF XAML 处理器实现的 XAML 名称范围的创建。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source><ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> is generally more devoted to supplying infrastructure than for common user code scenarios that involve working with a XAML namescope.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> 是通常更专用于提供基础结构都涉及使用 XAML 名称范围的常见用户代码方案。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>For most scenarios, the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FindName%2A&gt;</ph> methods exposed on <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> are more appropriate methods to call to search for elements by XAML-defined name.</source>
          <target state="translated">大多数情况下，<ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FindName%2A&gt;</ph>上公开的方法<ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>更合适的方法来调用要搜索元素的 XAML 定义的名称。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> properties exposed by <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> are more appropriate properties to use to set the initial name as markup attributes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph>公开属性<ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>是更合适的属性，用于将初始名称设置为标记特性。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>The various methods of <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> are used by base elements and other classes that maintain XAML namescopes in order to support <ph id="ph2">&lt;xref:System.Windows.Markup.INameScope.RegisterName%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Markup.INameScope.FindName%2A&gt;</ph>.</source>
          <target state="translated">各种方法<ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph>使用由基元素和维护的 XAML 名称范围，以便支持其他类<ph id="ph2">&lt;xref:System.Windows.Markup.INameScope.RegisterName%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Markup.INameScope.FindName%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>You generally use the API in the <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> class only if you are replacing or augmenting the base element behavior for how they process XAML namescopes for root elements of a XAML page, and as part of templates (which use a separate XAML namescope from the rest of the page).</source>
          <target state="translated">通常使用中的 API<ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph>类仅当要替换或补充它们如何处理的 XAML 页，并为模板的一部分的根元素的 XAML 名称范围的基本元素行为 (其中使用单独 XAML 名称范围的其余部分页）。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.NameScope&gt;</ph> provides collection interface implementations such that you can access the collections of names that are held by a XAML namescope, including adding to it through calls to an <ph id="ph3">&lt;xref:System.Windows.NameScope.Add%2A&gt;</ph> method.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>， <ph id="ph2">&lt;xref:System.Windows.NameScope&gt;</ph> ，你可以访问的 XAML 名称范围，包括通过对的调用添加到它所持有的名称的集合提供集合接口实现<ph id="ph3">&lt;xref:System.Windows.NameScope.Add%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>For more information on XAML namescope concepts, see <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)</ept>.</source>
          <target state="translated">有关 XAML 名称范围概念的详细信息，请参阅<bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)</ept>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> API.</source>
          <target state="translated">XAML 名称范围中的名称必须使用某个特定的语法，用于限制你可以将用于的输入字符串<ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph>API。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>See <bpt id="p1">[</bpt>XamlName Grammar<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</source>
          <target state="translated">请参阅<bpt id="p1">[</bpt>XamlName 语法<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Windows.NameScope">
          <source>Adds an item to the collection.</source>
          <target state="translated">向集合中添加一项。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> (key is <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>, value is <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>) that represents the name mapping to add to the XAML namescope.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph>（键为 <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>，值为 <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>），表示要添加到 XAML 名称范围中的名称映射。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Adds an item to the collection.</source>
          <target state="translated">向集合中添加一项。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Either or both components of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> are <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="item" /&gt;</ph> 的任一个或两个组件都为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source>The string key, which is the name of the XAML namescope mapping to add.</source>
          <target state="translated">字符串键，即作为要添加的 XAML 名称范围映射的名称。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source>The object value, which is the object reference of the XAML namescope mapping to add.</source>
          <target state="translated">对象值，即要添加的 XAML 名称范围映射的对象引用。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source>Adds an item to the collection.</source>
          <target state="translated">向集合中添加一项。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source>This method basically wraps <ph id="ph1">&lt;xref:System.Windows.NameScope.Add%2A&gt;</ph> so that it is not necessary to involve the <ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> type in your usage.</source>
          <target state="translated">此方法通常会包装<ph id="ph1">&lt;xref:System.Windows.NameScope.Add%2A&gt;</ph>以便不需要涉及<ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>在您的用法的类型。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source>Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> API.</source>
          <target state="translated">XAML 名称范围中的名称必须使用某个特定的语法，用于限制你可以将用于的输入字符串<ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph>API。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source>See <bpt id="p1">[</bpt>XamlName Grammar<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</source>
          <target state="translated">请参阅<bpt id="p1">[</bpt>XamlName 语法<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Clear">
          <source>Removes all items from the collection.</source>
          <target state="translated">从集合中移除所有项。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>The item to find in the collection, specified as a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> (key is <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>, value is <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>).</source>
          <target state="translated">要在集合中查找的项，指定为 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph>（键为 <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>，值为 <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Determines whether the collection contains a specified item.</source>
          <target state="translated">确定集合是否包含指定的项。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> identifies an existing mapping in this <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> .</source>
          <target state="translated">如果指定的 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> 标识此 <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> 中的现有映射，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> does not exist in the current <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</source>
          <target state="translated">如果当前的 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> 中不存在指定的 <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Generally you are only interested in whether a name is already defined in the XAML namescope, and what object reference value it is mapped to is immaterial.</source>
          <target state="translated">通常你仅有兴趣是否在 XAML 名称范围中已定义名称和它将映射到哪些对象引用值并不重要。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>For this scenario, you can call <ph id="ph1">&lt;xref:System.Windows.NameScope.ContainsKey%2A&gt;</ph> instead.</source>
          <target state="translated">对于此方案中，可以调用<ph id="ph1">&lt;xref:System.Windows.NameScope.ContainsKey%2A&gt;</ph>相反。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source>The string key to find.</source>
          <target state="translated">要查找的字符串键。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source>Returns whether a provided name already exists in this <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</source>
          <target state="translated">返回此 <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> 中是否已存在所提供的名称。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified <ph id="ph2">&lt;paramref name="key" /&gt;</ph> identifies a name for an existing mapping in this <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</source>
          <target state="translated">如果指定的 <ph id="ph2">&lt;paramref name="key" /&gt;</ph> 标识此 <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> 中现有映射的名称，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if the specified <ph id="ph2">&lt;paramref name="key" /&gt;</ph> does not exist in the current <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</source>
          <target state="translated">如果当前的 <ph id="ph2">&lt;paramref name="key" /&gt;</ph> 中不存在指定的 <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source>Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> API.</source>
          <target state="translated">XAML 名称范围中的名称必须使用某个特定的语法，用于限制你可以将用于的输入字符串<ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph>API。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source>See <bpt id="p1">[</bpt>XamlName Grammar<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</source>
          <target state="translated">请参阅<bpt id="p1">[</bpt>XamlName 语法<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the collection The array must have zero-based indexing.</source>
          <target state="translated">一维数组，是从集合中复制的元素的目标，并且索引必须从零开始。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中从零开始的索引，在此处开始复制。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
          <source>Copies the elements of the collection to an array, starting at a particular array index.</source>
          <target state="translated">从特定的数组索引开始，将集合的元素复制到数组中。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Count">
          <source>Returns the number of items in the collection of mapped names in this <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</source>
          <target state="translated">返回此 <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> 中映射名称的集合中的项数。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.NameScope.Count">
          <source>The number of items in the collection.</source>
          <target state="translated">集合中项的数目。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>Name portion of an existing mapping to retrieve the object portion for.</source>
          <target state="translated">要检索其对象部分的现有映射的名称部分。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>Returns the corresponding object in the XAML namescope maintained by this <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>, based on a provided name string.</source>
          <target state="translated">根据提供的名称字符串，返回由此 <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> 保留的 XAML 名称范围中的相应对象。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>The requested object that is mapped with <ph id="ph1">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated">用 <ph id="ph1">&lt;paramref name="name" /&gt;</ph> 映射的所请求对象。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>Can return <ph id="ph1">&lt;see langword="null" /&gt;</ph> if <ph id="ph2">&lt;paramref name="name" /&gt;</ph> was provided as <ph id="ph3">&lt;see langword="null" /&gt;</ph> or empty string, or if no matching object was found.</source>
          <target state="translated">如果提供的 <ph id="ph2">&lt;paramref name="name" /&gt;</ph> 为 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 或空字符串，或者未找到匹配的对象，则可返回 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>Several base elements (<ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>) also expose a <ph id="ph3">`FindName`</ph> method with identical functionality.</source>
          <target state="translated">多个基元素 (<ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>) 还公开<ph id="ph3">`FindName`</ph>方法具有相同的功能。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>The base element versions perform a XAML namescope search within the conventional logical tree, working towards the root element.</source>
          <target state="translated">基元素版本执行传统的逻辑树，致力于根元素中的 XAML 名称范围搜索。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>Once the XAML namescope is determined, that XAML namescope is queried for the requested name.</source>
          <target state="translated">一旦确定 XAML 名称范围后，该 XAML 名称范围查询来搜索请求的名称。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
          <source>The object to get the XAML namescope from.</source>
          <target state="translated">要从中获取 XAML 名称范围的对象。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
          <source>Provides the attached property get accessor for the <ph id="ph1">&lt;see cref="P:System.Windows.NameScope.NameScope" /&gt;</ph> attached property.</source>
          <target state="translated">为 <ph id="ph1">&lt;see cref="P:System.Windows.NameScope.NameScope" /&gt;</ph> 附加属性提供附加属性 get 访问器。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
          <source>A XAML namescope, as an <ph id="ph1">&lt;see cref="T:System.Windows.Markup.INameScope" /&gt;</ph> instance.</source>
          <target state="translated">一个 XAML 名称范围，作为 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.INameScope" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
          <source>The purpose of this method is both to implement the <ph id="ph1">`get`</ph> accessor for using <ph id="ph2">&lt;xref:System.Windows.NameScope.NameScope%2A&gt;</ph> as an attached property in XAML usage, and to provide the accessor for performing the equivalent operation in code.</source>
          <target state="translated">此方法的目的是这两个实现<ph id="ph1">`get`</ph>访问器使用<ph id="ph2">&lt;xref:System.Windows.NameScope.NameScope%2A&gt;</ph>为附加属性在 XAML 用法中，并提供在代码中执行等效操作的访问器。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
          <source><ph id="ph1">&lt;paramref name="dependencyObject" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dependencyObject" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.IsReadOnly">
          <source>Gets a value indicating whether the collection is read-only.</source>
          <target state="translated">获取一个值，该值指示集合是否为只读。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.NameScope.IsReadOnly">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">始终返回 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Item(System.String)">
          <source>The string name for the XAML name mapping to get or set.</source>
          <target state="translated">映射到 get 或 set 的 XAML 名称映射的字符串名称。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Item(System.String)">
          <source>Gets or sets the item with the specified key.</source>
          <target state="translated">获取或设置具有指定键的项。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.NameScope.Item(System.String)">
          <source>The value of the object mapped by the XAML name provided as <ph id="ph1">&lt;paramref name="key" /&gt;</ph>.</source>
          <target state="translated">以 <ph id="ph1">&lt;paramref name="key" /&gt;</ph> 形式提供的 XAML 名称所映射的对象的值。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Item(System.String)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is provided as <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 提供为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Item(System.String)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Item(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is provided as <ph id="ph2">&lt;see langword="null" /&gt;</ph> for a set operation.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 作为用于设置操作的 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 提供。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Keys">
          <source>Gets a collection of the keys in the <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> dictionary.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> 字典中键的集合。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.NameScope.Keys">
          <source>A collection of the keys in the <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> dictionary.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> 字典中键的集合。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="F:System.Windows.NameScope.NameScopeProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.NameScope.NameScope" /&gt;</ph> attached property.</source>
          <target state="translated">标识 <ph id="ph1">&lt;see cref="P:System.Windows.NameScope.NameScope" /&gt;</ph> 附加属性。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source>The name to use for mapping the given object.</source>
          <target state="translated">要用于映射给定对象的名称。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source>The object to be mapped to the provided name.</source>
          <target state="translated">要映射到所提供名称的对象。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source>Registers a new name-object pair into the current XAML namescope.</source>
          <target state="translated">将新的名称-对象对注册到当前的 XAML 名称范围中。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> or <ph id="ph2">&lt;paramref name="scopedElement" /&gt;</ph> was provided as <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="scopedElement" /&gt;</ph> 提供为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> was provided as empty string</source>
          <target state="translated">提供的<ph id="ph1">&lt;paramref name="name" /&gt;</ph>为空字符串</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> provided was rejected by the parser, because it contained characters that are invalid for a XAML name</source>
          <target state="translated">提供的<ph id="ph1">&lt;paramref name="name" /&gt;</ph>包含对 XAML 名称无效的字符，因此被分析程序拒绝</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> provided would result in a duplicate name registration.</source>
          <target state="translated">提供的 <ph id="ph1">&lt;paramref name="name" /&gt;</ph> 导致注册重复的名称。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="T:System.Windows.NameScope">
          <source>Removes the specific object from the collection.</source>
          <target state="translated">从集合中移除特定对象。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>The object to remove from the collection, specified as a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> (key is <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>, value is <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>).</source>
          <target state="translated">要从集合中移除的对象，指定为 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph>（键为 <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>，值为 <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Removes the specific object from the collection.</source>
          <target state="translated">从集合中移除特定对象。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if item was successfully removed from the collection, otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果从集合中成功移除了项，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if the item was not found in the collection.</source>
          <target state="translated">如果在集合中没有找到该项，还会返回 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Because <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> is a dictionary there is no concept of first occurrence; any given <ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> is guaranteed unique.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph>是没有一个字典没有第一个匹配项的概念; 任何给定<ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>保证唯一。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.String)">
          <source>The string key, which is the name of the XAML namescope mapping to remove.</source>
          <target state="translated">字符串键，这是要移除的 XAML 名称范围映射的名称。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.String)">
          <source>Removes a mapping for a specified name from the collection.</source>
          <target state="translated">从集合中移除指定名称的映射。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if item was successfully removed from the collection, otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果从集合中成功移除了项，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.String)">
          <source>Also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if the item was not found in the collection.</source>
          <target state="translated">如果在集合中没有找到该项，还会返回 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Remove(System.String)">
          <source>This method basically wraps <ph id="ph1">&lt;xref:System.Windows.NameScope.UnregisterName%2A&gt;</ph>, returning <ph id="ph2">`false`</ph> in cases that otherwise would have raised exceptions in <ph id="ph3">&lt;xref:System.Windows.NameScope.UnregisterName%2A&gt;</ph>.</source>
          <target state="translated">此方法通常会包装<ph id="ph1">&lt;xref:System.Windows.NameScope.UnregisterName%2A&gt;</ph>，使其返回<ph id="ph2">`false`</ph>否则可能产生了中的异常的情况下在<ph id="ph3">&lt;xref:System.Windows.NameScope.UnregisterName%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
          <source>Object to change XAML namescope for.</source>
          <target state="translated">要为其更改 XAML 名称范围的对象。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
          <source>The new XAML namescope, using an interface cast.</source>
          <target state="translated">使用接口转换的新 XAML 名称范围。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
          <source>Provides the attached property set accessor for the <ph id="ph1">&lt;see cref="P:System.Windows.NameScope.NameScope" /&gt;</ph> attached property.</source>
          <target state="translated">为 <ph id="ph1">&lt;see cref="P:System.Windows.NameScope.NameScope" /&gt;</ph> 附加属性提供附加属性 set 访问器。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
          <source>The purpose of this method is both to act as the <ph id="ph1">`set`</ph> accessor for using <ph id="ph2">&lt;xref:System.Windows.NameScope.NameScope%2A&gt;</ph> as an attached property in XAML usage, and to provide the accessor for performing the equivalent operation in code.</source>
          <target state="translated">此方法的目的是同时充当<ph id="ph1">`set`</ph>访问器使用<ph id="ph2">&lt;xref:System.Windows.NameScope.NameScope%2A&gt;</ph>为附加属性在 XAML 用法中，并提供在代码中执行等效操作的访问器。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
          <source><ph id="ph1">&lt;paramref name="dependencyObject" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dependencyObject" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">返回循环访问集合的枚举数。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator that iterates through a collection.</source>
          <target state="translated">用于循环访问集合的枚举器。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
          <source>The key of the value to get.</source>
          <target state="translated">要获取的值的键。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
          <source>When this method returns, contains the value associated with the specified key, if the key is found; otherwise, a null object.</source>
          <target state="translated">当此方法返回时，如果找到指定的键，则其中包含与该键关联的值；否则为 null 对象。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">此参数未经初始化即被传递。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
          <source>Gets the value associated with the specified key.</source>
          <target state="translated">获取与指定键关联的值。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
          <source>true if the <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> contains a mapping for the name provided as <ph id="ph2">&lt;paramref name="key" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> 包含以 <ph id="ph2">&lt;paramref name="key" /&gt;</ph> 形式提供的名称的映射，则为 true。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
          <source>Otherwise, false.</source>
          <target state="translated">否则为 false。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source>The name of the mapping to remove.</source>
          <target state="translated">要删除的映射的名称。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source>Removes a name-object mapping from the XAML namescope.</source>
          <target state="translated">从 XAML 名称范围中删除名称对象映射。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source>Before calling this method, you can use <ph id="ph1">&lt;xref:System.Windows.NameScope.FindName%2A&gt;</ph> to determine whether a specific name-object mapping exists.</source>
          <target state="translated">调用此方法之前，你可以使用<ph id="ph1">&lt;xref:System.Windows.NameScope.FindName%2A&gt;</ph>来确定是否存在特定的名称-对象映射。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> was provided as empty string.</source>
          <target state="translated">提供的<ph id="ph1">&lt;paramref name="name" /&gt;</ph>为空字符串。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> provided had not been registered.</source>
          <target state="translated">提供的<ph id="ph1">&lt;paramref name="name" /&gt;</ph>尚未注册。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Values">
          <source>Gets a collection of the values in the <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> dictionary.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> 字典中值的集合。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.NameScope.Values">
          <source>A collection of the values in the <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> dictionary.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> 字典中值的集合。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>