<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ValueSource.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c64500fcc9768d42490c1ff18e54293bdc46149c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c64500fcc9768d42490c1ff18e54293bdc46149c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.ValueSource">
          <source>Reports the information returned from <ph id="ph1">&lt;see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" /&gt;</ph>.</source>
          <target state="translated">报告从 <ph id="ph1">&lt;see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" /&gt;</ph> 返回的信息。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValueSource">
          <source>Most of the information that <ph id="ph1">&lt;xref:System.Windows.ValueSource&gt;</ph> transmits is contained in the <ph id="ph2">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> property.</source>
          <target state="translated">介绍的大多数信息的<ph id="ph1">&lt;xref:System.Windows.ValueSource&gt;</ph>传输中包含<ph id="ph2">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValueSource">
          <source>This property contains an enumeration value that specifies exactly one aspect of the overall <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> property system that is responsible for the effective value of a dependency property.</source>
          <target state="translated">此属性包含一个枚举值，指定的整体恰好一个方面<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>属性系统，它负责的依赖项属性的有效值。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValueSource">
          <source>Besides the base value, the other information that might be interesting about a dependency property value is whether the value is being animated, and whether the value involves an expression (such as a binding, or a dynamic resource reference).</source>
          <target state="translated">除了基础值，可能需要关注有关依赖项属性值的其他信息是是否值进行动画处理，以及是否值涉及到 （如绑定或动态资源引用） 的表达式。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValueSource">
          <source>This information is reported by <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsAnimated%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph> respectively.</source>
          <target state="translated">此信息报告的<ph id="ph1">&lt;xref:System.Windows.ValueSource.IsAnimated%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph>分别。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValueSource">
          <source>Also, if coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted.</source>
          <target state="translated">此外，如果对属性值执行强制，属性将保留所需的值，并且属性值将尝试达到该预期的值，如果更改或提升的特定强制约束。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValueSource">
          <source>A coerced property that is not at its desired value will report that <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;</ph> is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">一个强制转换后的属性，其预期值不会将报告<ph id="ph1">&lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;</ph>是<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="P:System.Windows.ValueSource.BaseValueSource">
          <source>Gets a value of the <ph id="ph1">&lt;see cref="T:System.Windows.BaseValueSource" /&gt;</ph> enumeration, which reports the source that provided the dependency property system with a value.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Windows.BaseValueSource" /&gt;</ph> 枚举的值，该值报告向依赖项属性系统提供值的源。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.BaseValueSource">
          <source>A value of the enumeration.</source>
          <target state="translated">枚举的一个值。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.BaseValueSource">
          <source>The base value is not the effective value if either coercion or animation is acting on the property.</source>
          <target state="translated">如果强制或动画行动的属性上，基础值不是有效的值。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.BaseValueSource">
          <source>Check <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsAnimated%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;</ph> if you want to determine whether the base value is the effective value.</source>
          <target state="translated">检查<ph id="ph1">&lt;xref:System.Windows.ValueSource.IsAnimated%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;</ph>如果你想要确定基的值是否为有效的值。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.BaseValueSource">
          <source>You might also want to check <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph> to see if the base value was evaluated out of an expression.</source>
          <target state="translated">你可能还想要检查<ph id="ph1">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph>若要查看是否基的值计算出表达式。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.Equals(System.Object)">
          <source>The object to compare with this <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph>.</source>
          <target state="translated">与此 <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> 进行比较的对象。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.Equals(System.Object)">
          <source>Returns a value indicating whether this <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> is equal to a specified object.</source>
          <target state="translated">返回一个值，指示此 <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> 是否与指定对象相等。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the provided object is equivalent to the current <ph id="ph2">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果提供的对象与当前 <ph id="ph2">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> 相同，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ValueSource.Equals(System.Object)">
          <source>This implementation supports value equality, based on each of the property values of each <ph id="ph1">&lt;xref:System.Windows.ValueSource&gt;</ph> structure.</source>
          <target state="translated">此实现支持基于每个每个属性值的值是否相等<ph id="ph1">&lt;xref:System.Windows.ValueSource&gt;</ph>结构。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.GetHashCode">
          <source>Returns the hash code for this <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph>.</source>
          <target state="translated">返回此 <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> 的哈希代码。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.GetHashCode">
          <source>A 32-bit unsigned integer hash code.</source>
          <target state="translated">32 位无符号整数哈希代码。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ValueSource.GetHashCode">
          <source>This hash code is based on the <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> value.</source>
          <target state="translated">此哈希代码基于<ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Windows.ValueSource.IsAnimated">
          <source>Gets a value that declares whether the property is being animated.</source>
          <target state="translated">获取一个值，该值声明是否对属性进行动画处理。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsAnimated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property is animated; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果对该属性进行动画处理，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsAnimated">
          <source>For any property that is currently being animated, the source reported by <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> is not immediately relevant, because the animation operates at higher dependency property precedence than the base value.</source>
          <target state="translated">对于当前进行动画处理的任何属性，源报告的<ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph>没有立即关系，因为动画运行的依赖项属性优先权要高于基础值。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsAnimated">
          <source>For more information about precedence and animations, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.</source>
          <target state="translated">有关优先级和动画的详细信息，请参阅<bpt id="p1">[</bpt>依赖项属性值优先级<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Windows.ValueSource.IsCoerced">
          <source>Gets a value that declares whether this value resulted from a <ph id="ph1">&lt;see cref="T:System.Windows.CoerceValueCallback" /&gt;</ph> implementation applied to a dependency property.</source>
          <target state="translated">获取一个值，声明此值是否是从应用于依赖属性的 <ph id="ph1">&lt;see cref="T:System.Windows.CoerceValueCallback" /&gt;</ph> 实现中生成的。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCoerced">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value resulted from a <ph id="ph2">&lt;see cref="T:System.Windows.CoerceValueCallback" /&gt;</ph> implementation applied to a dependency property; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果此值是从应用于依赖项属性的 <ph id="ph2">&lt;see cref="T:System.Windows.CoerceValueCallback" /&gt;</ph> 实现中生成的，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCoerced">
          <source>If coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted.</source>
          <target state="translated">如果对属性值执行强制，属性将保留所需的值，并且属性值将尝试达到该预期的值，如果更改或提升的特定强制约束。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCoerced">
          <source>A coerced property that is not at its desired value will report that <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;</ph> is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">一个强制转换后的属性，其预期值不会将报告<ph id="ph1">&lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;</ph>是<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCoerced">
          <source>Coercion acts at higher precedence than the base value, and is not strictly speaking a participant in how the base value is set.</source>
          <target state="translated">强制在优先权要高于基础值，作用和严格来说不是如何设置基础值的参与者。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCoerced">
          <source>Therefore the state of being coerced is reported by this property, rather than by a value of the <ph id="ph1">&lt;xref:System.Windows.BaseValueSource&gt;</ph> enumeration.</source>
          <target state="translated">因此会报告的并且被强制状态，按此属性，而不是值为<ph id="ph1">&lt;xref:System.Windows.BaseValueSource&gt;</ph>枚举。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCoerced">
          <source>For more information about coercion, base values, and precedence, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.</source>
          <target state="translated">强制转换、 基础值和优先级有关的详细信息，请参阅<bpt id="p1">[</bpt>依赖项属性值优先级<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Windows.ValueSource.IsCurrent">
          <source>Gets whether the value was set by the <ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">获取一个值，该值声明是否由 <ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /&gt;</ph> 方法设置值。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCurrent">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value was set by the <ph id="ph2">&lt;see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /&gt;</ph> method; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果由 <ph id="ph2">&lt;see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /&gt;</ph> 方法设置值，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Windows.ValueSource.IsExpression">
          <source>Gets a value that declares whether this value resulted from an evaluated expression.</source>
          <target state="translated">获取一个值，声明此值是否是从计算的表达式中生成的。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Windows.ValueSource.IsExpression">
          <source>This might be a <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> supporting a binding, or an internal expression such as those that support the <bpt id="p1">[</bpt>DynamicResource Markup Extension<ept id="p1">](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md)</ept>.</source>
          <target state="translated">此表达式可能是支持绑定的 <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph>，或者是一个内部表达式，比如支持 <bpt id="p1">[</bpt>DynamicResource 标记扩展<ept id="p1">](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md)</ept>的那些表达式。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value came from an evaluated expression; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果值来自于计算出的表达式，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source>An evaluated expression will also report the specific base value setting condition where the expression was applied, as a value in <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph>.</source>
          <target state="translated">计算的表达式还会报告设置条件表达式已应用，为中的值的特定基值<ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source>The <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> is still very relevant for any property where <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph>仍是非常适用于任何属性其中<ph id="ph2">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph>是<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source>Knowing whether a value came through an expression can be particularly useful if the value was set indirectly, such as through a template or an inherited property value.</source>
          <target state="translated">了解通过表达式是否提供一个值可以设置值间接，例如根据通过模板或继承的属性值的情况特别有用。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source>If an expression fails to evaluate (the binding failed; no resource of that name was found), then the value will come from some other participant in the property system, most likely the default value.</source>
          <target state="translated">如果无法计算表达式 （绑定失败; 找不到该名称的资源），则值将来自在属性系统中，最可能的一些其他参与者的默认值。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source>That source is then reported in <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph>.</source>
          <target state="translated">该源然后中报告<ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source>Failed expression evaluations will return <ph id="ph1">`false`</ph> for <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph>.</source>
          <target state="translated">将返回失败的表达式计算<ph id="ph1">`false`</ph>为<ph id="ph2">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> to compare.</source>
          <target state="translated">要比较的第一个 <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> to compare.</source>
          <target state="translated">要比较的第二个 <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>Determines whether two <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> instances have the same value.</source>
          <target state="translated">确定两个 <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> 实例是否具有相同的值。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two <ph id="ph2">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> instances are equivalent; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果两个 <ph id="ph2">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> 实例等效，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>This implementation calls <ph id="ph1">&lt;xref:System.Windows.ValueSource.Equals%2A&gt;</ph>, and supports value equality based on all properties of <ph id="ph2">&lt;xref:System.Windows.ValueSource&gt;</ph>.</source>
          <target state="translated">此实现中调用<ph id="ph1">&lt;xref:System.Windows.ValueSource.Equals%2A&gt;</ph>，和支持值相等性的所有属性基于<ph id="ph2">&lt;xref:System.Windows.ValueSource&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> to compare.</source>
          <target state="translated">要比较的第一个 <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> to compare.</source>
          <target state="translated">要比较的第二个 <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>Determines whether two <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> instances do not have the same value.</source>
          <target state="translated">确定两个 <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> 实例是否具有不同的值。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two <ph id="ph2">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> instances are not equivalent; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果两个 <ph id="ph2">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> 实例不等效，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>This implementation calls <ph id="ph1">&lt;xref:System.Windows.ValueSource.Equals%2A&gt;</ph>, returning its negation, and supports value equality based on all properties of <ph id="ph2">&lt;xref:System.Windows.ValueSource&gt;</ph>.</source>
          <target state="translated">此实现中调用<ph id="ph1">&lt;xref:System.Windows.ValueSource.Equals%2A&gt;</ph>，返回其求反，并支持基于的所有属性的值是否相等<ph id="ph2">&lt;xref:System.Windows.ValueSource&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>