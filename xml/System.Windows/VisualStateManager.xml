<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="VisualStateManager.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b4daa92282153a35abd2da928e1de70dd1be505d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b4daa92282153a35abd2da928e1de70dd1be505d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.VisualStateManager">
          <source>Manages states and the logic for transitioning between states for controls.</source>
          <target state="translated">管理控件的状态以及用于状态过渡的逻辑。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>The <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph> enables you to specify states for a control, the appearance of a control when it is in a certain state, and when a control changes states.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph>使您能够指定控件，控件的外观的状态时处于某个特定状态，并当控件更改状态。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> might have a slightly different appearance when it is pressed than when it is not pressed.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>时按下比不按下时可能遇到略有不同的外观。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>Two states that the <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> defines correspond to when it is pressed (<ph id="ph2">`"Pressed"`</ph>) and when it is not (<ph id="ph3">`"Normal"`</ph>).</source>
          <target state="translated">两个状态<ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>定义对应于按下它时 (<ph id="ph2">`"Pressed"`</ph>) 并且它不是 (<ph id="ph3">`"Normal"`</ph>)。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>The appearance of a control when it is in a state is defined by a <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph>.</source>
          <target state="translated">控件中一种状态时的外观由<ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>A <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> contains a collection of <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> objects that specify how the control's appearance changes when the control is in that state.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph>包含一套<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>指定控件的外观时该控件处于该状态的更改的对象。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>You add visual states to a control by setting the <ph id="ph1">`VisualStateManager.VisualStateGroups`</ph> attached property on the control.</source>
          <target state="translated">通过设置，向控件添加可视状态<ph id="ph1">`VisualStateManager.VisualStateGroups`</ph>附加在控件上的属性。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>Each <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> contains a collection of <ph id="ph2">&lt;xref:System.Windows.VisualState&gt;</ph> objects that are mutually exclusive.</source>
          <target state="translated">每个<ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph>包含一套<ph id="ph2">&lt;xref:System.Windows.VisualState&gt;</ph>是互斥的对象。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>That is, the control is always in exactly one state of in each <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph>.</source>
          <target state="translated">也就是说，控件将始终在恰好一个在每个状态中<ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>The <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph> also enables you to specify when a control enters a specific state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph>还可以指定控件在进入特定状态。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>The method that you should call to change states depends on your scenario.</source>
          <target state="translated">若要更改状态而应调用的方法取决于你的方案。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>If you create a control that uses the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph> in its <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, call the <ph id="ph3">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> method.</source>
          <target state="translated">如果你创建使用的控件<ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph>中其<ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>，调用<ph id="ph3">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>For more information about how to create controls that use the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph>, see <bpt id="p1">[</bpt>Creating a Control That Has a Customizable Appearance<ept id="p1">](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)</ept>.</source>
          <target state="translated">对于详细了解如何创建控件使用<ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph>，请参阅<bpt id="p1">[</bpt>创建控件，其可自定义外观<ept id="p1">](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)</ept>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>If you use the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph> outside of a <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> (for example, if you use a <ph id="ph3">&lt;xref:System.Windows.VisualStateManager&gt;</ph> in a <ph id="ph4">&lt;xref:System.Windows.Controls.UserControl&gt;</ph> or in a single element), call the <ph id="ph5">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph> method.</source>
          <target state="translated">如果你使用<ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph>之外<ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>(例如，如果你使用<ph id="ph3">&lt;xref:System.Windows.VisualStateManager&gt;</ph>中<ph id="ph4">&lt;xref:System.Windows.Controls.UserControl&gt;</ph>或单个元素中)，调用<ph id="ph5">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>In either case, the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph> performs the logic that is required to appropriately start and stop the storyboards that are associated with the involved state.</source>
          <target state="translated">在任一情况下，<ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph>执行需要相应地启动和停止了与所涉及的状态将情节提要的逻辑。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>For example, suppose that a control defines the states, <ph id="ph1">`State1`</ph> and <ph id="ph2">`State2`</ph>, each of which has a storyboard associated with it.</source>
          <target state="translated">例如，假设一个定义的状态，<ph id="ph1">`State1`</ph>和<ph id="ph2">`State2`</ph>，其中每个有与之关联的情节提要。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>If the control is in <ph id="ph1">`State1`</ph> and you pass <ph id="ph2">`State2`</ph> to <ph id="ph3">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph>, the <ph id="ph5">&lt;xref:System.Windows.VisualStateManager&gt;</ph> starts the storyboard in <ph id="ph6">`State2`</ph> and stops the storyboard in <ph id="ph7">`State1`</ph>.</source>
          <target state="translated">如果控件处于<ph id="ph1">`State1`</ph>且所传递<ph id="ph2">`State2`</ph>到<ph id="ph3">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph>或<ph id="ph4">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph>、<ph id="ph5">&lt;xref:System.Windows.VisualStateManager&gt;</ph>在启动情节提要<ph id="ph6">`State2`</ph>并停止在情节提要<ph id="ph7">`State1`</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>Controls that are included with <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> use the <ph id="ph2">&lt;xref:System.Windows.VisualStateManager&gt;</ph> to change visual states.</source>
          <target state="translated">附带的控件<ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>使用<ph id="ph2">&lt;xref:System.Windows.VisualStateManager&gt;</ph>更改可视状态。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>When you create a <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> for a control that is included with <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>, you can add <ph id="ph3">&lt;xref:System.Windows.VisualState&gt;</ph> objects to the control's <ph id="ph4">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> to specify the control's appearance in a certain state.</source>
          <target state="translated">当你创建<ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>的控件，附带<ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>，你可以添加<ph id="ph3">&lt;xref:System.Windows.VisualState&gt;</ph>到控件的对象<ph id="ph4">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>处于某个特定状态指定控件的外观。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>To find the names of the visual states for the controls that are included with <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>, see <bpt id="p1">[</bpt>Control Styles and Templates<ept id="p1">](~/docs/framework/wpf/controls/control-styles-and-templates.md)</ept>.</source>
          <target state="translated">若要查找包含的控件的可视状态的名称<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>，请参阅<bpt id="p1">[</bpt>控件样式和模板<ept id="p1">](~/docs/framework/wpf/controls/control-styles-and-templates.md)</ept>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>The control's logic handles transitioning between states, so you do not need to do anything other than define the <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> objects in the new <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.</source>
          <target state="translated">过渡状态，因此不需要执行任何操作以外的控件的逻辑句柄定义<ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph>中新的对象<ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>For more information about how to create control templates for existing controls, see <bpt id="p1">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.</source>
          <target state="translated">有关如何创建现有控件的控件模板的详细信息，请参阅<bpt id="p1">[</bpt>通过创建 ControlTemplate 自定义现有的控件的外观<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>If you want to implement your own logic for transitioning between states, you must inherit from <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph>, override the <ph id="ph2">&lt;xref:System.Windows.VisualStateManager.GoToStateCore%2A&gt;</ph> method, and set the <ph id="ph3">&lt;xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=nameWithType&gt;</ph> attached property on the control that uses the custom logic.</source>
          <target state="translated">如果你想要实现您自己的逻辑状态之间转换，则必须从<ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph>，重写<ph id="ph2">&lt;xref:System.Windows.VisualStateManager.GoToStateCore%2A&gt;</ph>方法，并设置<ph id="ph3">&lt;xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=nameWithType&gt;</ph>附加上使用的自定义逻辑的控件的属性。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> and adds a <ph id="ph2">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> named <ph id="ph3">`CommonStates`</ph> to the <ph id="ph4">`VisualStateManager.VisualStatesGroups`</ph> attached property.</source>
          <target state="translated">下面的示例创建<ph id="ph1">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph>并添加<ph id="ph2">&lt;xref:System.Windows.VisualStateGroup&gt;</ph>名为<ph id="ph3">`CommonStates`</ph>到<ph id="ph4">`VisualStateManager.VisualStatesGroups`</ph>附加属性。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>The example defines the <ph id="ph1">`MouseOver`</ph> and <ph id="ph2">`Normal`</ph><ph id="ph3">&lt;xref:System.Windows.VisualState&gt;</ph> objects in the <ph id="ph4">`CommonStates`</ph><ph id="ph5">&lt;xref:System.Windows.VisualStateGroup&gt;</ph>.</source>
          <target state="translated">该示例定义了<ph id="ph1">`MouseOver`</ph>和<ph id="ph2">`Normal`</ph><ph id="ph3">&lt;xref:System.Windows.VisualState&gt;</ph>中的对象<ph id="ph4">`CommonStates`</ph> <ph id="ph5">&lt;xref:System.Windows.VisualStateGroup&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>When the user moves the mouse pointer over the <ph id="ph1">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph>, it changes from red to green over one half second.</source>
          <target state="translated">当用户将鼠标指针移<ph id="ph1">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph>，它将从红色变为绿色转移半秒。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>When the user moves the mouse away from the rectangle, the <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> immediately changes back to red.</source>
          <target state="translated">当用户移动鼠标离开矩形，<ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph>立即更改回红色。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>Note that the <ph id="ph1">`Normal`</ph> state does not define a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>.</source>
          <target state="translated">请注意，<ph id="ph1">`Normal`</ph>状态不会定义<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> is not required because when the <ph id="ph2">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> transitions from the <ph id="ph3">`MouseOver`</ph> state to the <ph id="ph4">`Normal`</ph> state, the <ph id="ph5">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> for <ph id="ph6">`MouseOver`</ph> is stopped and the <ph id="ph7">&lt;xref:System.Windows.Media.SolidColorBrush.Color%2A&gt;</ph> property for the <ph id="ph8">&lt;xref:System.Windows.Media.SolidColorBrush&gt;</ph> returns to red.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>因为不需要时<ph id="ph2">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph>从托管代码转换<ph id="ph3">`MouseOver`</ph>状态<ph id="ph4">`Normal`</ph>状态，<ph id="ph5">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>为<ph id="ph6">`MouseOver`</ph>停止和<ph id="ph7">&lt;xref:System.Windows.Media.SolidColorBrush.Color%2A&gt;</ph>属性<ph id="ph8">&lt;xref:System.Windows.Media.SolidColorBrush&gt;</ph>返回为红色。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>The following example shows the event handler that is defined in the previous example and calls the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph> method to transition between states.</source>
          <target state="translated">下面的示例演示的事件处理程序中的前面的示例和调用定义<ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph>状态间转换的方法。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>If the rectangle in the previous example was part of a <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, the example would have to call the <ph id="ph2">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> method.</source>
          <target state="translated">在前面的示例的矩形是否是的一部分<ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>，该示例将不得不调用<ph id="ph2">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateManager" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateManager" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="F:System.Windows.VisualStateManager.CustomVisualStateManagerProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /&gt;</ph> dependency property.</source>
          <target state="translated">标识 <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /&gt;</ph> 依赖项属性。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)">
          <source>The element to get the <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /&gt;</ph> attached property from.</source>
          <target state="translated">要从中获取 <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /&gt;</ph> 附加属性的元素。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)">
          <source>Gets the <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /&gt;</ph> attached property.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /&gt;</ph> 附加属性。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)">
          <source>The visual state manager that transitions between the states of a control.</source>
          <target state="translated">切换控件状态的可视状态管理器。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)">
          <source>The element to get the <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /&gt;</ph> attached property from.</source>
          <target state="translated">要从中获取 <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /&gt;</ph> 附加属性的元素。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)">
          <source>Gets the <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /&gt;</ph> attached property.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /&gt;</ph> 附加属性。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)">
          <source>The collection of <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateGroup" /&gt;</ph> objects that is associated with the specified object.</source>
          <target state="translated">与指定对象关联的 <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateGroup" /&gt;</ph> 对象的集合。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>The root element that contains the <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateManager" /&gt;</ph>.</source>
          <target state="translated">包含 <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateManager" /&gt;</ph> 的根元素。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>The state to transition to.</source>
          <target state="translated">要转换到的状态。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to use a <ph id="ph2">&lt;see cref="T:System.Windows.VisualTransition" /&gt;</ph> object to transition between states; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要使用 <ph id="ph2">&lt;see cref="T:System.Windows.VisualTransition" /&gt;</ph> 对象进行状态切换，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>Transitions the element between two states.</source>
          <target state="translated">使元素在两个状态间转换。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>Use this method to transition states that are defined by an application, rather than defined by a control.</source>
          <target state="translated">使用此方法转换由应用程序（而非控件）定义的状态。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control successfully transitioned to the new state; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果控件已成功过渡到新状态，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph> method to change states on an element outside of a <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> (for example, if you use a <ph id="ph3">&lt;xref:System.Windows.VisualStateManager&gt;</ph> in a <ph id="ph4">&lt;xref:System.Windows.DataTemplate&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Window&gt;</ph>).</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph>的外部元素的方法，以更改状态<ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>(例如，如果你使用<ph id="ph3">&lt;xref:System.Windows.VisualStateManager&gt;</ph>中<ph id="ph4">&lt;xref:System.Windows.DataTemplate&gt;</ph>或<ph id="ph5">&lt;xref:System.Windows.Window&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> method if you are changing states in a control that uses the <ph id="ph2">&lt;xref:System.Windows.VisualStateManager&gt;</ph> in its <ph id="ph3">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph>方法如果您更改中使用的控件状态<ph id="ph2">&lt;xref:System.Windows.VisualStateManager&gt;</ph>中其<ph id="ph3">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>The following example creates an application that prompts the user to guess a number between 1 and 100.</source>
          <target state="translated">下面的示例创建的应用程序会提示用户进行猜测介于 1 和 100 之间的数字。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>When the user enters a number, the application indicates whether the guess is too high, too low, or correct.</source>
          <target state="translated">当用户输入一个数字时，该应用程序指示猜测是否过高，太低，或正确。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>The following <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> creates the user interface for the application and defines 4 states: <ph id="ph2">`TooLow`</ph>, <ph id="ph3">`TooHigh`</ph>, <ph id="ph4">`Correct`</ph>, and <ph id="ph5">`Guessing`</ph>.</source>
          <target state="translated">以下<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>新建应用程序的用户界面，并定义 4 种状态： <ph id="ph2">`TooLow`</ph>， <ph id="ph3">`TooHigh`</ph>， <ph id="ph4">`Correct`</ph>，和<ph id="ph5">`Guessing`</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>When the application begins, it is in the <ph id="ph1">`Guessing`</ph> state.</source>
          <target state="translated">当应用程序开始时，它是在<ph id="ph1">`Guessing`</ph>状态。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>The following code shows the logic of the application.</source>
          <target state="translated">下面的代码演示应用程序的逻辑。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>When the user enters a number and clicks the button, the application calls <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph> to transition to <ph id="ph2">`TooHigh`</ph>, <ph id="ph3">`TooLow`</ph>, or <ph id="ph4">`Correct`</ph> to provide feedback to the user about the guess.</source>
          <target state="translated">在应用程序时用户输入一个数字，并单击按钮时，调用<ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph>转换到<ph id="ph2">`TooHigh`</ph>， <ph id="ph3">`TooLow`</ph>，或<ph id="ph4">`Correct`</ph>以向用户猜测提供反馈。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>To try this example, call the <ph id="ph1">`GenerateNumber`</ph> method when the application begins.</source>
          <target state="translated">若要试用该示例，请调用<ph id="ph1">`GenerateNumber`</ph>应用程序开始时的方法。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="stateGroupsRoot" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stateGroupsRoot" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="stateName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stateName" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>The control to transition between states.</source>
          <target state="translated">要进行状态过渡的控件。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>The state to transition to.</source>
          <target state="translated">要转换到的状态。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to use a <ph id="ph2">&lt;see cref="T:System.Windows.VisualTransition" /&gt;</ph> object to transition between states; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要使用 <ph id="ph2">&lt;see cref="T:System.Windows.VisualTransition" /&gt;</ph> 对象进行状态切换，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>Transitions the control between two states.</source>
          <target state="translated">在控件的两种状态之间转换。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>Use this method to transition states on control that has a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ControlTemplate" /&gt;</ph>.</source>
          <target state="translated">使用此方法转换具有 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ControlTemplate" /&gt;</ph> 的控件的状态。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control successfully transitioned to the new state; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果控件已成功过渡到新状态，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> method if you are changing states in a control that uses the <ph id="ph2">&lt;xref:System.Windows.VisualStateManager&gt;</ph> in its <ph id="ph3">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph>方法如果您更改中使用的控件状态<ph id="ph2">&lt;xref:System.Windows.VisualStateManager&gt;</ph>中其<ph id="ph3">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph> method to change states on an element outside of a <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> (for example, if you use a <ph id="ph3">&lt;xref:System.Windows.VisualStateManager&gt;</ph> in a <ph id="ph4">&lt;xref:System.Windows.Controls.UserControl&gt;</ph> or in a single element).</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph>的外部元素的方法，以更改状态<ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>(例如，如果你使用<ph id="ph3">&lt;xref:System.Windows.VisualStateManager&gt;</ph>中<ph id="ph4">&lt;xref:System.Windows.Controls.UserControl&gt;</ph>或单个元素中)。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>The following example demonstrates a control that uses the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> method to transition between states.</source>
          <target state="translated">下面的示例演示使用的控件<ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph>状态间转换的方法。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>For the entire example, see <bpt id="p1">[</bpt>Creating a Control That Has a Customizable Appearance<ept id="p1">](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)</ept>.</source>
          <target state="translated">有关完整示例，请参阅<bpt id="p1">[</bpt>创建控件，具有可自定义外观<ept id="p1">](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)</ept>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="control" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="control" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="stateName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stateName" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>The control to transition between states.</source>
          <target state="translated">要进行状态过渡的控件。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>The root element that contains the <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateManager" /&gt;</ph>.</source>
          <target state="translated">包含 <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateManager" /&gt;</ph> 的根元素。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>The name of the state to transition to.</source>
          <target state="translated">要过渡到的状态的名称。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateGroup" /&gt;</ph> that the state belongs to.</source>
          <target state="translated">状态所属的 <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateGroup" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>The representation of the state to transition to.</source>
          <target state="translated">要过渡到的状态的表示形式。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to use a <ph id="ph2">&lt;see cref="T:System.Windows.VisualTransition" /&gt;</ph> object to transition between states; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要使用 <ph id="ph2">&lt;see cref="T:System.Windows.VisualTransition" /&gt;</ph> 对象进行状态切换，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>Transitions a control between states.</source>
          <target state="translated">使控件在状态间过渡。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control successfully transitioned to the new state; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果控件已成功过渡到新状态，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToStateCore%2A&gt;</ph> method performs the logic necessary to appropriately start and stop the storyboards that are associated with a transition.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToStateCore%2A&gt;</ph>方法执行所需相应地启动和停止与转换相关联的演示图板的逻辑。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>When a control calls <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> to change its state, the <ph id="ph2">&lt;xref:System.Windows.VisualStateManager&gt;</ph> does the following:</source>
          <target state="translated">当控件调用<ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph>以更改其状态，<ph id="ph2">&lt;xref:System.Windows.VisualStateManager&gt;</ph>执行下列任务：</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>First, if the <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> that the control is transitioning to has a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, the storyboard begins.</source>
          <target state="translated">首先，如果<ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph>控件正在过渡到具有<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>，情节提要开始。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> that the control is coming from has a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, the storyboard ends.</source>
          <target state="translated">然后，如果<ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph>来自控件具有<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>，情节提要结束。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>If the control is already in the <ph id="ph1">`stateName`</ph> state, <ph id="ph2">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> takes no action and returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">如果控件已处于<ph id="ph1">`stateName`</ph>状态，<ph id="ph2">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph>不执行任何操作并返回<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>If <ph id="ph1">`stateName`</ph> does not exist in the <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> of <ph id="ph3">`control`</ph>, <ph id="ph4">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> takes no action and returns <ph id="ph5">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`stateName`</ph>中不存在<ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>的<ph id="ph3">`control`</ph>，<ph id="ph4">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph>不执行任何操作并返回<ph id="ph5">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>You can implement your own <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph> to provide different logic for transitioning between states.</source>
          <target state="translated">你可以实现你自己<ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph>提供不同逻辑状态之间转换。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>For example, you can change the logic described previously, or you can provide logic to transition between custom animation types.</source>
          <target state="translated">例如，您可以更改前面所述的逻辑，也可以提供自定义动画类型之间转换的逻辑。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>To implement a <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph>, create a class that inherits from <ph id="ph2">&lt;xref:System.Windows.VisualStateManager&gt;</ph> and override the <ph id="ph3">&lt;xref:System.Windows.VisualStateManager.GoToStateCore%2A&gt;</ph> method.</source>
          <target state="translated">若要实现<ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph>，创建一个继承自的类<ph id="ph2">&lt;xref:System.Windows.VisualStateManager&gt;</ph>，并重写<ph id="ph3">&lt;xref:System.Windows.VisualStateManager.GoToStateCore%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>To use the custom class, set the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A&gt;</ph> property to an object of your custom type.</source>
          <target state="translated">若要使用自定义类，设置<ph id="ph1">&lt;xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A&gt;</ph>到自定义类型的对象的属性。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>The object that the <ph id="ph1">&lt;see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /&gt;</ph> event occurred on.</source>
          <target state="translated">发生 <ph id="ph1">&lt;see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /&gt;</ph> 事件的对象。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>The state that the control is transitioning from.</source>
          <target state="translated">控件要从其过渡的状态。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>The state that the control is transitioning to.</source>
          <target state="translated">控件要过渡到的状态。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>The control that is transitioning states.</source>
          <target state="translated">正在进行状态过渡的控件。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>The root element that contains the <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateManager" /&gt;</ph>.</source>
          <target state="translated">包含 <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateManager" /&gt;</ph> 的根元素。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /&gt;</ph> event on the specified <ph id="ph2">&lt;see cref="T:System.Windows.VisualStateGroup" /&gt;</ph> object.</source>
          <target state="translated">在指定的 <ph id="ph1">&lt;see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /&gt;</ph> 对象上引发 <ph id="ph2">&lt;see cref="T:System.Windows.VisualStateGroup" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> is set on the <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> of a control, the <ph id="ph3">`control`</ph> parameter is set to the control that owns <ph id="ph4">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph>上设置<ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>的控件<ph id="ph3">`control`</ph>参数设置为拥有的控件的<ph id="ph4">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> is set on a <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, <ph id="ph3">`control`</ph> is <ph id="ph4">`null`</ph> and you should use the <ph id="ph5">`stateGroupsRoot`</ph> parameter.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph>上设置<ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>，<ph id="ph3">`control`</ph>是<ph id="ph4">`null`</ph>且应使用<ph id="ph5">`stateGroupsRoot`</ph>参数。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source><ph id="ph1">&lt;paramref name="stateGroupsRoot" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stateGroupsRoot" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source><ph id="ph1">&lt;paramref name="newState" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newState" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /&gt;</ph>方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>The object that the <ph id="ph1">&lt;see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /&gt;</ph> event occurred on.</source>
          <target state="translated">发生 <ph id="ph1">&lt;see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /&gt;</ph> 事件的对象。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>The state that the control is transitioning from.</source>
          <target state="translated">控件要从其过渡的状态。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>The state that the control is transitioning to.</source>
          <target state="translated">控件要过渡到的状态。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>The control that is transitioning states.</source>
          <target state="translated">正在进行状态过渡的控件。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>The root element that contains the <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateManager" /&gt;</ph>.</source>
          <target state="translated">包含 <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateManager" /&gt;</ph> 的根元素。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /&gt;</ph> event on the specified <ph id="ph2">&lt;see cref="T:System.Windows.VisualStateGroup" /&gt;</ph> object.</source>
          <target state="translated">在指定的 <ph id="ph1">&lt;see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /&gt;</ph> 对象上引发 <ph id="ph2">&lt;see cref="T:System.Windows.VisualStateGroup" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> is set on the <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> of a control, the <ph id="ph3">`control`</ph> parameter is set to the control that owns <ph id="ph4">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph>上设置<ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>的控件<ph id="ph3">`control`</ph>参数设置为拥有的控件的<ph id="ph4">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> is set on a <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, <ph id="ph3">`control`</ph> is <ph id="ph4">`null`</ph> and you should use the <ph id="ph5">`stateGroupsRoot`</ph> parameter.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph>上设置<ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>，<ph id="ph3">`control`</ph>是<ph id="ph4">`null`</ph>且应使用<ph id="ph5">`stateGroupsRoot`</ph>参数。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source><ph id="ph1">&lt;paramref name="stateGroupsRoot" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stateGroupsRoot" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source><ph id="ph1">&lt;paramref name="newState" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newState" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /&gt;</ph>方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)">
          <source>The object to set the property on.</source>
          <target state="translated">要对其设置属性的对象。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)">
          <source>The visual state manager that transitions between the states of a control.</source>
          <target state="translated">切换控件状态的可视状态管理器。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /&gt;</ph> attached property.</source>
          <target state="translated">设置 <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /&gt;</ph> 附加属性。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="F:System.Windows.VisualStateManager.VisualStateGroupsProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /&gt;</ph> dependency property.</source>
          <target state="translated">标识 <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /&gt;</ph> 依赖项属性。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>