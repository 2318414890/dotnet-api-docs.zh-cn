<Type Name="FrameworkCompatibilityPreferences" FullName="System.Windows.FrameworkCompatibilityPreferences">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eeed517dac3189f9a8422b1c6b47b621e0e100fe" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52596265" /></Metadata><TypeSignature Language="C#" Value="public static class FrameworkCompatibilityPreferences" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed FrameworkCompatibilityPreferences extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FrameworkCompatibilityPreferences" />
  <TypeSignature Language="VB.NET" Value="Public Class FrameworkCompatibilityPreferences" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkCompatibilityPreferences abstract sealed" />
  <TypeSignature Language="F#" Value="type FrameworkCompatibilityPreferences = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="cb09a-101">包含指定应用程序相对于位于 PresentationFramework 程序集中的 WPF 功能的行为方式的属性。</span><span class="sxs-lookup"><span data-stu-id="cb09a-101">Contains properties that specify how an application should behave relative to WPF features that are in the PresentationFramework assembly.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AreInactiveSelectionHighlightBrushKeysSupported">
      <MemberSignature Language="C#" Value="public static bool AreInactiveSelectionHighlightBrushKeysSupported { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AreInactiveSelectionHighlightBrushKeysSupported" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AreInactiveSelectionHighlightBrushKeysSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AreInactiveSelectionHighlightBrushKeysSupported { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AreInactiveSelectionHighlightBrushKeysSupported : bool with get, set" Usage="System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb09a-102">获取或设置指示应用程序是否应对非活动所选项目的颜色使用 <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> 和 <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="cb09a-102">Gets or sets a value that indicates whether the application should use the <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> and <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> properties for the colors of inactive selected items.</span></span></summary>
        <value><span data-ttu-id="cb09a-103">如果应用程序应将 <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> 和 <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> 属性用于非活动选择项的颜色，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cb09a-103"><see langword="true" /> if the application should use the <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> and <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> properties for the colors of inactive selected items; otherwise, <see langword="false" /></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb09a-104">此属性的默认值取决于哪个版本的 WPF 的应用的目标。</span><span class="sxs-lookup"><span data-stu-id="cb09a-104">The default value of this property depends which version of WPF that your app targets.</span></span>  <span data-ttu-id="cb09a-105">如果你的应用面向 WPF 4.0 或更早版本，默认值为`false`。</span><span class="sxs-lookup"><span data-stu-id="cb09a-105">If your app targets WPF 4.0 or earlier, the default is `false`.</span></span>  <span data-ttu-id="cb09a-106">如果你的应用面向 WPF 4.5，默认值是`true`。</span><span class="sxs-lookup"><span data-stu-id="cb09a-106">If your app targets WPF 4.5, the default is `true`.</span></span>  <span data-ttu-id="cb09a-107">如果此属性用于更改 WPF 的行为，则必须在应用程序的生存期，此类继承自应用程序的类的构造函数中的早期更改属性的值。</span><span class="sxs-lookup"><span data-stu-id="cb09a-107">If you use this property to change the behavior of WPF, you must change the property's value early in the app's lifetime, such in the constructor of the class that inherits from Application.</span></span>  <span data-ttu-id="cb09a-108">读取的值后，你不能再次更改它。</span><span class="sxs-lookup"><span data-stu-id="cb09a-108">After the value is read, you cannot change it again.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepTextBoxDisplaySynchronizedWithTextProperty">
      <MemberSignature Language="C#" Value="public static bool KeepTextBoxDisplaySynchronizedWithTextProperty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool KeepTextBoxDisplaySynchronizedWithTextProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property KeepTextBoxDisplaySynchronizedWithTextProperty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool KeepTextBoxDisplaySynchronizedWithTextProperty { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepTextBoxDisplaySynchronizedWithTextProperty : bool with get, set" Usage="System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb09a-109">获取或设置一个值，此值指示数据绑定 <see cref="T:System.Windows.Controls.TextBox" /> 是否应显示与源的 <see cref="P:System.Windows.Controls.TextBox.Text" /> 属性值一致的字符串</span><span class="sxs-lookup"><span data-stu-id="cb09a-109">Gets or sets a value that indicates whether a data-bound <see cref="T:System.Windows.Controls.TextBox" /> should display a string that is identical to the value of the source its <see cref="P:System.Windows.Controls.TextBox.Text" /> property</span></span></summary>
        <value><span data-ttu-id="cb09a-110"><see langword="true" /> 如果数据绑定<see cref="T:System.Windows.Controls.TextBox" />应显示的源的值是否相同的字符串及其<see cref="P:System.Windows.Controls.TextBox.Text" />属性; 否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cb09a-110"><see langword="true" /> if a data-bound <see cref="T:System.Windows.Controls.TextBox" /> should display a string that is identical to the value of the source its <see cref="P:System.Windows.Controls.TextBox.Text" /> property; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb09a-111">此属性的默认值取决于哪个版本的 WPF 的应用的目标。</span><span class="sxs-lookup"><span data-stu-id="cb09a-111">The default value of this property depends which version of WPF that your app targets.</span></span>  <span data-ttu-id="cb09a-112">如果你的应用面向 WPF 4.0 或更早版本，默认值为`false`。</span><span class="sxs-lookup"><span data-stu-id="cb09a-112">If your app targets WPF 4.0 or earlier, the default is `false`.</span></span>  <span data-ttu-id="cb09a-113">如果你的应用面向 WPF 4.5，默认值是`true`。</span><span class="sxs-lookup"><span data-stu-id="cb09a-113">If your app targets WPF 4.5, the default is `true`.</span></span>  <span data-ttu-id="cb09a-114">如果此属性用于更改 WPF 的行为，则必须在应用程序的生存期，此类继承自应用程序的类的构造函数中的早期更改属性的值。</span><span class="sxs-lookup"><span data-stu-id="cb09a-114">If you use this property to change the behavior of WPF, you must change the property's value early in the app's lifetime, such in the constructor of the class that inherits from Application.</span></span>  <span data-ttu-id="cb09a-115">读取的值后，你不能再次更改它。</span><span class="sxs-lookup"><span data-stu-id="cb09a-115">After the value is read, you cannot change it again.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldThrowOnCopyOrCutFailure">
      <MemberSignature Language="C#" Value="public static bool ShouldThrowOnCopyOrCutFailure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ShouldThrowOnCopyOrCutFailure" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ShouldThrowOnCopyOrCutFailure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool ShouldThrowOnCopyOrCutFailure { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShouldThrowOnCopyOrCutFailure : bool with get, set" Usage="System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb09a-116">获取或设置一个值，指示 <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> 实例中失败的复制或剪切操作是否会导致 <see cref="T:System.Runtime.InteropServices.ExternalException" />。</span><span class="sxs-lookup"><span data-stu-id="cb09a-116">Gets or sets a value that indicates whether a failed copy or cut operation in a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> instance results in a <see cref="T:System.Runtime.InteropServices.ExternalException" />.</span></span></summary>
        <value><span data-ttu-id="cb09a-117">如果 <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> 实例中失败的复制或剪切操作会导致 <see cref="T:System.Runtime.InteropServices.ExternalException" />，则为 <see langword="true" />；否则为 <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cb09a-117"><see langword="true" /> if a failed copy or cut operation in a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> instance results in a <see cref="T:System.Runtime.InteropServices.ExternalException" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb09a-118">如果剪贴板操作失败，如使用**HRESULT (CLIPBRD_E_CANT_OPEN) 0x800401D0**对应的错误<xref:System.Runtime.InteropServices.ExternalException>（这一种类型的 ExternalException) 引发。</span><span class="sxs-lookup"><span data-stu-id="cb09a-118">If a clipboard operation fails, such as with a **HRESULT 0x800401D0 (CLIPBRD_E_CANT_OPEN)** error, a corresponding <xref:System.Runtime.InteropServices.ExternalException> (which is a type of ExternalException) is thrown.</span></span>  
  
 <span data-ttu-id="cb09a-119">因为 Win32 `OpenClipboard` API 充当全局，正确编写的应用程序应调用对应`CloseClipboard`API，只要他们已完成其剪贴板操作。</span><span class="sxs-lookup"><span data-stu-id="cb09a-119">Because the Win32 `OpenClipboard` API acts globally, well-written applications should call the corresponding `CloseClipboard` API as soon as they have completed their clipboard operations.</span></span> <span data-ttu-id="cb09a-120">否则，在同一会话中运行的其他应用程序将无法访问剪贴板函数。</span><span class="sxs-lookup"><span data-stu-id="cb09a-120">Otherwise, other applications running in the same session will be unable to access clipboard functions.</span></span>  
  
 <span data-ttu-id="cb09a-121">在 WPF 中，通常以无提示方式忽略此类拒绝的对剪贴板的访问。</span><span class="sxs-lookup"><span data-stu-id="cb09a-121">In WPF, such a denial of access to the clipboard is normally ignored silently.</span></span> <span data-ttu-id="cb09a-122">但是，应用程序可以选择接收`ExternalException`在通过设置失败时<xref:System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure%2A>标记，用于`true`。</span><span class="sxs-lookup"><span data-stu-id="cb09a-122">However, applications can opt to receive an `ExternalException` upon failure by setting the <xref:System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure%2A> flag to `true`.</span></span> <span data-ttu-id="cb09a-123">但是，选择要接收异常还要求应用程序以处理<xref:System.Windows.Input.ApplicationCommands.Cut%2A>并<xref:System.Windows.Input.ApplicationCommands.Copy%2A>通过 Routeduicommand <xref:System.Windows.Input.CommandBinding>，然后将该绑定应用到所有 TextBoxBase 控件 (<xref:System.Windows.Controls.TextBox>和<xref:System.Windows.Controls.RichTextBox>) 中应用程序。</span><span class="sxs-lookup"><span data-stu-id="cb09a-123">However, opting to receive exceptions also requires the application to handle <xref:System.Windows.Input.ApplicationCommands.Cut%2A> and <xref:System.Windows.Input.ApplicationCommands.Copy%2A> RoutedUICommands through a <xref:System.Windows.Input.CommandBinding>, and then apply that binding to all TextBoxBase controls (<xref:System.Windows.Controls.TextBox> and <xref:System.Windows.Controls.RichTextBox>)  in the application.</span></span> <span data-ttu-id="cb09a-124">应用程序应确保它能够处理 ExternalExceptions CommandBinding 的 Executed 处理程序中的复制和剪切操作生成。</span><span class="sxs-lookup"><span data-stu-id="cb09a-124">The application should ensure that it handles ExternalExceptions resulting from copy and cut operations in the CommandBinding's Executed handler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>