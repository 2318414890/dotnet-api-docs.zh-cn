<Type Name="DataTemplate" FullName="System.Windows.DataTemplate">
  <TypeSignature Language="C#" Value="public class DataTemplate : System.Windows.FrameworkTemplate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataTemplate extends System.Windows.FrameworkTemplate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DataTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTemplate&#xA;Inherits FrameworkTemplate" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTemplate : System::Windows::FrameworkTemplate" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkTemplate</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.DictionaryKeyProperty("DataTemplateKey")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8719f-101">描述数据对象的可视结构。</span><span class="sxs-lookup"><span data-stu-id="8719f-101">Describes the visual structure of a data object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8719f-102">你使用<xref:System.Windows.DataTemplate>指定将数据对象的可视化效果。</span><span class="sxs-lookup"><span data-stu-id="8719f-102">You use a <xref:System.Windows.DataTemplate> to specify the visualization of your data objects.</span></span> <span data-ttu-id="8719f-103"><xref:System.Windows.DataTemplate> 你正在绑定时，对象都特别有用<xref:System.Windows.Controls.ItemsControl>如<xref:System.Windows.Controls.ListBox>整个集合。</span><span class="sxs-lookup"><span data-stu-id="8719f-103"><xref:System.Windows.DataTemplate> objects are particularly useful when you are binding an <xref:System.Windows.Controls.ItemsControl> such as a <xref:System.Windows.Controls.ListBox> to an entire collection.</span></span> <span data-ttu-id="8719f-104">如果没有特殊说明<xref:System.Windows.Controls.ListBox>显示集合中的字符串表示形式的对象。</span><span class="sxs-lookup"><span data-stu-id="8719f-104">Without specific instructions, a <xref:System.Windows.Controls.ListBox> displays the string representation of the objects in a collection.</span></span> <span data-ttu-id="8719f-105">在这种情况下，你可以使用<xref:System.Windows.DataTemplate>可以定义数据对象的外观。</span><span class="sxs-lookup"><span data-stu-id="8719f-105">In that case, you can use a <xref:System.Windows.DataTemplate> to define the appearance of your data objects.</span></span> <span data-ttu-id="8719f-106">内容您<xref:System.Windows.DataTemplate>变成数据对象的可视结构。</span><span class="sxs-lookup"><span data-stu-id="8719f-106">The content of your <xref:System.Windows.DataTemplate> becomes the visual structure of your data objects.</span></span>  
  
 <span data-ttu-id="8719f-107">有关深入讨论，请参阅[数据模板化概述](~/docs/framework/wpf/data/data-templating-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="8719f-107">For an in-depth discussion, see [Data Templating Overview](~/docs/framework/wpf/data/data-templating-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8719f-108">下面的示例演示如何创建<xref:System.Windows.DataTemplate>内联。</span><span class="sxs-lookup"><span data-stu-id="8719f-108">The following example shows how to create a <xref:System.Windows.DataTemplate> inline.</span></span> <span data-ttu-id="8719f-109"><xref:System.Windows.DataTemplate>指定每个数据项显示为三个<xref:System.Windows.Controls.TextBlock>中的元素<xref:System.Windows.Controls.StackPanel>。</span><span class="sxs-lookup"><span data-stu-id="8719f-109">The <xref:System.Windows.DataTemplate> specifies that each data item appears as three <xref:System.Windows.Controls.TextBlock> elements within a <xref:System.Windows.Controls.StackPanel>.</span></span> <span data-ttu-id="8719f-110">在此示例中，数据对象是一个名为类`Task`。</span><span class="sxs-lookup"><span data-stu-id="8719f-110">In this example, the data object is a class called `Task`.</span></span> <span data-ttu-id="8719f-111">请注意，每个<xref:System.Windows.Controls.TextBlock>此模板中的元素绑定到的属性`Task`类。</span><span class="sxs-lookup"><span data-stu-id="8719f-111">Note that each <xref:System.Windows.Controls.TextBlock> element in this template is bound to a property of the `Task` class.</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#Inline](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#inline)]  
  
 <span data-ttu-id="8719f-112">它是更常见的是定义<xref:System.Windows.DataTemplate>中的资源节，以便它可以是一个可重用的对象，如以下示例所示：</span><span class="sxs-lookup"><span data-stu-id="8719f-112">It is more common to define a <xref:System.Windows.DataTemplate> in the resources section so it can be a reusable object, as in the following example:</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#R1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r1)]  
[!code-xaml[DataTemplatingIntro_snip#AsResource](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#asresource)]  
[!code-xaml[DataTemplatingIntro_snip#R2](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r2)]  
  
 <span data-ttu-id="8719f-113">现在可以将 `myTaskTemplate` 用作资源，如以下示例所示：</span><span class="sxs-lookup"><span data-stu-id="8719f-113">Now you can use `myTaskTemplate` as a resource, as in the following example:</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#MyTaskTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#mytasktemplate)]  
  
 <span data-ttu-id="8719f-114">有关完整示例，请参阅[数据模板化示例简介](http://go.microsoft.com/fwlink/?LinkID=160009)。</span><span class="sxs-lookup"><span data-stu-id="8719f-114">For the complete sample, see [Introduction to Data Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160009).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.Binding" />
    <altmember cref="T:System.Windows.Controls.DataTemplateSelector" />
    <altmember cref="T:System.Windows.HierarchicalDataTemplate" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8719f-115">初始化 <see cref="T:System.Windows.DataTemplate" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8719f-115">Initializes a new instance of the <see cref="T:System.Windows.DataTemplate" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTemplate.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTemplate();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8719f-116">初始化 <see cref="T:System.Windows.DataTemplate" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8719f-116">Initializes a new instance of the <see cref="T:System.Windows.DataTemplate" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTemplate (object dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTemplate.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataType As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTemplate(System::Object ^ dataType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataType"><span data-ttu-id="8719f-117">如果模板专用于对象数据，则这是数据对象的类型名称。</span><span class="sxs-lookup"><span data-stu-id="8719f-117">If the template is intended for object data, this is the Type name of the data object.</span></span></param>
        <summary><span data-ttu-id="8719f-118">使用指定的 <see cref="T:System.Windows.DataTemplate" /> 属性初始化 <see cref="P:System.Windows.DataTemplate.DataType" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8719f-118">Initializes a new instance of the <see cref="T:System.Windows.DataTemplate" /> class with the specified <see cref="P:System.Windows.DataTemplate.DataType" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8719f-119">若要引用类的类型名称，使用[X:type 标记扩展](~/docs/framework/xaml-services/x-type-markup-extension.md)。</span><span class="sxs-lookup"><span data-stu-id="8719f-119">To refer to the Type name of the class, use the [x:Type Markup Extension](~/docs/framework/xaml-services/x-type-markup-extension.md).</span></span> <span data-ttu-id="8719f-120">如果模板旨在用于[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]数据，这是表示数据的标记名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="8719f-120">If the template is intended for [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] data, this is the string that represents the tag name of the data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataTemplateKey">
      <MemberSignature Language="C#" Value="public object DataTemplateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataTemplateKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTemplate.DataTemplateKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataTemplateKey As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataTemplateKey { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8719f-121">获取 <see cref="T:System.Windows.DataTemplate" /> 的默认键。</span><span class="sxs-lookup"><span data-stu-id="8719f-121">Gets the default key of the <see cref="T:System.Windows.DataTemplate" />.</span></span></summary>
        <value><span data-ttu-id="8719f-122"><see cref="T:System.Windows.DataTemplate" /> 的默认键。</span><span class="sxs-lookup"><span data-stu-id="8719f-122">The default key of the <see cref="T:System.Windows.DataTemplate" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8719f-123">如果你未设置[X:key 指令](~/docs/framework/xaml-services/x-key-directive.md)上<xref:System.Windows.DataTemplate>，位于<xref:System.Windows.ResourceDictionary>、<xref:System.Windows.DataTemplate.DataTemplateKey%2A>用作的键。</span><span class="sxs-lookup"><span data-stu-id="8719f-123">If you do not set the [x:Key Directive](~/docs/framework/xaml-services/x-key-directive.md) on a <xref:System.Windows.DataTemplate> that is in a <xref:System.Windows.ResourceDictionary>, the <xref:System.Windows.DataTemplate.DataTemplateKey%2A> is used as the key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public object DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTemplate.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataType { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8719f-124">获取或设置此 <see cref="T:System.Windows.DataTemplate" /> 所针对的类型。</span><span class="sxs-lookup"><span data-stu-id="8719f-124">Gets or sets the type for which this <see cref="T:System.Windows.DataTemplate" /> is intended.</span></span></summary>
        <value><span data-ttu-id="8719f-125">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8719f-125">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8719f-126">此属性是非常类似于<xref:System.Windows.Style.TargetType%2A>属性<xref:System.Windows.Style>类。</span><span class="sxs-lookup"><span data-stu-id="8719f-126">This property is very similar to the <xref:System.Windows.Style.TargetType%2A> property of the <xref:System.Windows.Style> class.</span></span> <span data-ttu-id="8719f-127">当你设置此属性为数据类型而无需指定`x:Key`、<xref:System.Windows.DataTemplate>获取自动应用到该类型的数据对象。</span><span class="sxs-lookup"><span data-stu-id="8719f-127">When you set this property to the data type without specifying an `x:Key`, the <xref:System.Windows.DataTemplate> gets applied automatically to data objects of that type.</span></span> <span data-ttu-id="8719f-128">请注意，当你执行此操作`x:Key`隐式设置。</span><span class="sxs-lookup"><span data-stu-id="8719f-128">Note that when you do that the `x:Key` is set implicitly.</span></span> <span data-ttu-id="8719f-129">因此，如果将此分配<xref:System.Windows.DataTemplate>`x:Key`值，您要重写的隐式`x:Key`和<xref:System.Windows.DataTemplate>不会自动应用。</span><span class="sxs-lookup"><span data-stu-id="8719f-129">Therefore, if you assign this <xref:System.Windows.DataTemplate> an `x:Key` value, you are overriding the implicit `x:Key` and the <xref:System.Windows.DataTemplate> would not be applied automatically.</span></span>  
  
 <span data-ttu-id="8719f-130">另请注意，如果你正在绑定<xref:System.Windows.Controls.ContentControl>到的集合`Task`对象，<xref:System.Windows.Controls.ContentControl>不使用<xref:System.Windows.DataTemplate>自动。</span><span class="sxs-lookup"><span data-stu-id="8719f-130">Also note that if you are binding a <xref:System.Windows.Controls.ContentControl> to a collection of `Task` objects, the <xref:System.Windows.Controls.ContentControl> does not use the <xref:System.Windows.DataTemplate> automatically.</span></span> <span data-ttu-id="8719f-131">这是因为上的绑定<xref:System.Windows.Controls.ContentControl>需要区分你是否想要将绑定到整个集合或单个对象的详细信息。</span><span class="sxs-lookup"><span data-stu-id="8719f-131">This is because the binding on a <xref:System.Windows.Controls.ContentControl> needs more information to distinguish whether you want to bind to an entire collection or the individual objects.</span></span> <span data-ttu-id="8719f-132">如果你<xref:System.Windows.Controls.ContentControl>跟踪的选定内容<xref:System.Windows.Controls.ItemsControl>类型，你可以设置<xref:System.Windows.Data.Binding.Path%2A>属性<xref:System.Windows.Controls.ContentControl>绑定到"`/`"以指示你感兴趣的当前项。</span><span class="sxs-lookup"><span data-stu-id="8719f-132">If your <xref:System.Windows.Controls.ContentControl> is tracking the selection of an <xref:System.Windows.Controls.ItemsControl> type, you can set the <xref:System.Windows.Data.Binding.Path%2A> property of the <xref:System.Windows.Controls.ContentControl> binding to "`/`" to indicate that you are interested in the current item.</span></span> <span data-ttu-id="8719f-133">有关示例，请参阅[如何： 将绑定到集合和显示基于所选内容的信息](~/docs/framework/wpf/data/how-to-bind-to-a-collection-and-display-information-based-on-selection.md)。</span><span class="sxs-lookup"><span data-stu-id="8719f-133">For an example, see [How to: Bind to a Collection and Display Information Based on Selection](~/docs/framework/wpf/data/how-to-bind-to-a-collection-and-display-information-based-on-selection.md).</span></span> <span data-ttu-id="8719f-134">否则，你需要指定<xref:System.Windows.DataTemplate>显式通过设置<xref:System.Windows.Controls.ContentControl.ContentTemplate%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8719f-134">Otherwise, you need to specify the <xref:System.Windows.DataTemplate> explicitly by setting the <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A> property.</span></span>  
  
 <span data-ttu-id="8719f-135"><xref:System.Windows.DataTemplate.DataType%2A>必须时特别有用属性<xref:System.Windows.Data.CompositeCollection>的不同类型的数据对象。</span><span class="sxs-lookup"><span data-stu-id="8719f-135">The <xref:System.Windows.DataTemplate.DataType%2A> property is particularly useful when you have a <xref:System.Windows.Data.CompositeCollection> of different types of data objects.</span></span>  
  
 <span data-ttu-id="8719f-136">如果此属性提供程序针对不位于默认命名空间的 XML 元素，则必须在前面带有命名空间或命名空间指示符的元素名称。</span><span class="sxs-lookup"><span data-stu-id="8719f-136">If this property targets an XML element that is not in the default namespace, you must precede the element name with the namespace or a namespace designator.</span></span> <span data-ttu-id="8719f-137">通过 LINQ 公开 for XML 的 XML，对于命名空间将显示在括号内，前面由大括号转义序列：</span><span class="sxs-lookup"><span data-stu-id="8719f-137">For XML exposed through LINQ for XML, the namespace appears in braces, preceded by a brace escape sequence:</span></span>  
  
```xaml  
<DataTemplate DataType="{}{http://myNamespace}Details">  
```  
  
 <span data-ttu-id="8719f-138">对于通过 XPath 公开的 XML，元素名称的前面由的实例建立的命名空间指示符<xref:System.Windows.Data.XmlNamespaceMapping>:</span><span class="sxs-lookup"><span data-stu-id="8719f-138">For XML exposed through XPath, the element name is preceded by a namespace designator established by an instance of <xref:System.Windows.Data.XmlNamespaceMapping>:</span></span>  
  
```xaml  
<DataTemplate DataType="mn:Details">  
```  
  
<a name="xamlAttributeUsage_DataType"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="8719f-139">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="8719f-139">XAML Attribute Usage</span></span>  
  
```  
<object DataType="typeName"/>  
```  
  
<a name="xamlValues_DataType"></a>   
## <a name="xaml-values"></a><span data-ttu-id="8719f-140">XAML 值</span><span class="sxs-lookup"><span data-stu-id="8719f-140">XAML Values</span></span>  
 <span data-ttu-id="8719f-141">*typeName*</span><span class="sxs-lookup"><span data-stu-id="8719f-141">*typeName*</span></span>  
 <span data-ttu-id="8719f-142">如果模板旨在用于对象数据，则此属性包含的数据对象的类型名称 （作为字符串）。</span><span class="sxs-lookup"><span data-stu-id="8719f-142">If the template is intended for object data, this property contains the type name of the data object (as a string).</span></span> <span data-ttu-id="8719f-143">若要引用类的类型名称，使用[X:type 标记扩展](~/docs/framework/xaml-services/x-type-markup-extension.md)。</span><span class="sxs-lookup"><span data-stu-id="8719f-143">To refer to the type name of the class, use the [x:Type Markup Extension](~/docs/framework/xaml-services/x-type-markup-extension.md).</span></span> <span data-ttu-id="8719f-144">如果模板旨在用于[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]数据，此属性包含的 XML 元素名称。</span><span class="sxs-lookup"><span data-stu-id="8719f-144">If the template is intended for [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] data, this property contains the XML element name.</span></span> <span data-ttu-id="8719f-145">请参阅有关指定的 XML 元素的非默认命名空间文档备注以了解详情。</span><span class="sxs-lookup"><span data-stu-id="8719f-145">See the documentation remarks for details about specifying a non-default namespace for the XML element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public System.Windows.TriggerCollection Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TriggerCollection Triggers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTemplate.Triggers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Triggers As TriggerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TriggerCollection ^ Triggers { System::Windows::TriggerCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("VisualTree")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Template")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TriggerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8719f-146">获取触发器的集合，这些触发器根据一个或多个条件应用属性值或执行操作。</span><span class="sxs-lookup"><span data-stu-id="8719f-146">Gets a collection of triggers that apply property values or perform actions based on one or more conditions.</span></span></summary>
        <value><span data-ttu-id="8719f-147">触发器对象的集合。</span><span class="sxs-lookup"><span data-stu-id="8719f-147">A collection of trigger objects.</span></span> <span data-ttu-id="8719f-148">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8719f-148">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8719f-149">如果要创建数据模板中的触发器，则触发器的 setter 应设置数据模板的作用域内的属性。</span><span class="sxs-lookup"><span data-stu-id="8719f-149">If you are creating triggers within a data template, the setters of the triggers should be setting properties that are within the scope of the data template.</span></span> <span data-ttu-id="8719f-150">否则，它可能更适合于创建触发器使用的包含的数据类型为目标的样式。</span><span class="sxs-lookup"><span data-stu-id="8719f-150">Otherwise, it may be more suitable to create triggers using a style that targets the type that contains the data.</span></span> <span data-ttu-id="8719f-151">例如，如果你正在绑定<xref:System.Windows.Controls.ListBox>控件，则容器为<xref:System.Windows.Controls.ListBoxItem>对象。</span><span class="sxs-lookup"><span data-stu-id="8719f-151">For example, if you are binding a <xref:System.Windows.Controls.ListBox> control, the containers are <xref:System.Windows.Controls.ListBoxItem> objects.</span></span> <span data-ttu-id="8719f-152">如果你使用触发器来设置不在范围内的属性<xref:System.Windows.DataTemplate>，则它可能更适合于创建<xref:System.Windows.Controls.ListBoxItem>样式，创建该样式中的触发器。</span><span class="sxs-lookup"><span data-stu-id="8719f-152">If you are using triggers to set properties that are not within the scope of the <xref:System.Windows.DataTemplate>, then it may be more suitable to create a <xref:System.Windows.Controls.ListBoxItem> style and create triggers within that style.</span></span> <span data-ttu-id="8719f-153">有关详细信息，请参阅什么所属 DataTemplate 中？在[数据模板化概述](~/docs/framework/wpf/data/data-templating-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="8719f-153">For more information, see What Belongs in a DataTemplate? in the [Data Templating Overview](~/docs/framework/wpf/data/data-templating-overview.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8719f-154">此属性仅在中设置[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]通过集合语法所示，或通过访问的集合对象，并使用它的各种方法，例如 Add。</span><span class="sxs-lookup"><span data-stu-id="8719f-154">This property can only be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] via the collection syntax shown, or by accessing the collection object and using its various methods such as Add.</span></span> <span data-ttu-id="8719f-155">要访问集合对象本身的属性是只读的该集合本身是读写。</span><span class="sxs-lookup"><span data-stu-id="8719f-155">The property to access the collection object itself is read-only, the collection itself is read-write.</span></span>  
  
<a name="xamlPropertyElementUsage_Triggers"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="8719f-156">XAML 属性元素用法</span><span class="sxs-lookup"><span data-stu-id="8719f-156">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.Triggers>  
    OneOrMoreTriggers  
  </object.Triggers>  
</object>  
```  
  
<a name="xamlValues_Triggers"></a>   
## <a name="xaml-values"></a><span data-ttu-id="8719f-157">XAML 值</span><span class="sxs-lookup"><span data-stu-id="8719f-157">XAML Values</span></span>  
 <span data-ttu-id="8719f-158">*OneOrMoreTriggers*</span><span class="sxs-lookup"><span data-stu-id="8719f-158">*OneOrMoreTriggers*</span></span>  
 <span data-ttu-id="8719f-159">零个或多<xref:System.Windows.TriggerBase>对象。</span><span class="sxs-lookup"><span data-stu-id="8719f-159">Zero or more <xref:System.Windows.TriggerBase> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8719f-160">以下<xref:System.Windows.DataTemplate>演示如何使用<xref:System.Windows.DataTemplate.Triggers%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8719f-160">The following <xref:System.Windows.DataTemplate> demonstrates the use of the <xref:System.Windows.DataTemplate.Triggers%2A> property.</span></span>  
  
 [!code-xaml[DataBindingLab#AuctionItemDataTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#auctionitemdatatemplate)]  
  
 <span data-ttu-id="8719f-161">有关完整的示例，请参阅[数据绑定演示](http://go.microsoft.com/fwlink/?LinkID=163703)。</span><span class="sxs-lookup"><span data-stu-id="8719f-161">For the complete sample, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DataTrigger" />
        <altmember cref="T:System.Windows.MultiDataTrigger" />
      </Docs>
    </Member>
    <Member MemberName="ValidateTemplatedParent">
      <MemberSignature Language="C#" Value="protected override void ValidateTemplatedParent (System.Windows.FrameworkElement templatedParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ValidateTemplatedParent(class System.Windows.FrameworkElement templatedParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ValidateTemplatedParent (templatedParent As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ValidateTemplatedParent(System::Windows::FrameworkElement ^ templatedParent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templatedParent" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="templatedParent"><span data-ttu-id="8719f-162">要应用此模板的元素。</span><span class="sxs-lookup"><span data-stu-id="8719f-162">The element this template is applied to.</span></span></param>
        <summary><span data-ttu-id="8719f-163">根据一组规则检查模板化父级。</span><span class="sxs-lookup"><span data-stu-id="8719f-163">Checks the templated parent against a set of rules.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8719f-164">该方法使用以下规则：</span><span class="sxs-lookup"><span data-stu-id="8719f-164">The method uses the following rules:</span></span>  
  
-   <span data-ttu-id="8719f-165">`templatedParent`必须为非 null <xref:System.Windows.FrameworkElement>。</span><span class="sxs-lookup"><span data-stu-id="8719f-165">The `templatedParent` must be a non-null <xref:System.Windows.FrameworkElement>.</span></span>  
  
-   <span data-ttu-id="8719f-166"><xref:System.Windows.DataTemplate>必须应用于<xref:System.Windows.Controls.ContentPresenter>。</span><span class="sxs-lookup"><span data-stu-id="8719f-166">The <xref:System.Windows.DataTemplate> must be applied to a <xref:System.Windows.Controls.ContentPresenter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>