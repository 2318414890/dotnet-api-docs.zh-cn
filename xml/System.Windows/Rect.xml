<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Rect.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cf7d1387ee03ec7cae439135fbd676179308311f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cf7d1387ee03ec7cae439135fbd676179308311f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Describes the width, height, and location of a rectangle.</source>
          <target state="translated">描述矩形的宽度、高度和位置。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source>XAML Attribute Usage</source>
          <target state="translated">XAML 属性用法</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source>XAML Values</source>
          <target state="translated">XAML 值</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source><bpt id="p1">*</bpt>x<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>x<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source>The x-coordinate location of the left side of the rectangle.</source>
          <target state="translated">左侧的矩形的 x 坐标位置。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source><bpt id="p1">*</bpt>y<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>y<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source>The y-coordinate location of the top side of the rectangle.</source>
          <target state="translated">矩形的顶部的 y 坐标位置。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source><bpt id="p1">*</bpt>width<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>width<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source>A non-negative value that represents the <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of the rectangle.</source>
          <target state="translated">表示一个非负值<ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>的矩形。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source><bpt id="p1">*</bpt>height<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>height<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source>A non-negative value that represents the <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of the rectangle.</source>
          <target state="translated">表示一个非负值<ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>的矩形。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure to specify the dimensions and location of a rectangle using XAML.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph>结构，以指定的维度和使用 XAML 的矩形的位置。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">该示例还演示了如何查找有关新添加的矩形的大小和坐标信息和呈现中的信息<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>下面矩形。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> 结构的新实例。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Size)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> structure that specifies the width and height of the rectangle.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> 结构，指定矩形的宽度和高度。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Size)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure that is of the specified size and is located at (0,0).</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> 结构的新实例，此结构具有指定大小，位于 (0,0)。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.#ctor(System.Windows.Size)">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure by using the <ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Windows.Size%29&gt;</ph> constructor.</source>
          <target state="translated">下面的示例演示如何创建一个新<ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph>结构使用<ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Windows.Size%29&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
          <source>The first point that the new rectangle must contain.</source>
          <target state="translated">新矩形必须包含的第一个点。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
          <source>The second point that the new rectangle must contain.</source>
          <target state="translated">新矩形必须包含的第二个点。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure that is exactly large enough to contain the two specified points.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> 结构的新实例，此结构的大小刚好足以包含两个指定点。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure by using the <ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Point%29&gt;</ph> constructor.</source>
          <target state="translated">下面的示例演示如何创建一个新<ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph>结构使用<ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Point%29&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
          <source>A point that specifies the location of the top-left corner of the rectangle.</source>
          <target state="translated">一个点，指定矩形的左上角位置。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> structure that specifies the width and height of the rectangle.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> 结构，指定矩形的宽度和高度。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure that has the specified top-left corner location and the specified width and height.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> 结构的新实例，此结构具有指定的左上角位置和指定的宽度及高度。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure by using the <ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Size%29&gt;</ph> constructor.</source>
          <target state="translated">下面的示例演示如何创建一个新<ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph>结构使用<ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Size%29&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
          <source>The first point the rectangle must contain.</source>
          <target state="translated">矩形必须包含的第一个点。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
          <source>The amount to offset the specified point.</source>
          <target state="translated">指定点的偏移量。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
          <source>The resulting rectangle will be exactly large enough to contain both points.</source>
          <target state="translated">所得矩形的大小将刚好足以包含这两个点。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure that is exactly large enough to contain the specified point and the sum of the specified point and the specified vector.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> 结构的新实例，此结构的大小刚好足以包含指定点及指定点和指定向量之和。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure by using the <ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Vector%29&gt;</ph> constructor.</source>
          <target state="translated">下面的示例演示如何创建一个新<ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph>结构使用<ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Vector%29&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
          <source>The x-coordinate of the top-left corner of the rectangle.</source>
          <target state="translated">矩形左上角的 x 坐标。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
          <source>The y-coordinate of the top-left corner of the rectangle.</source>
          <target state="translated">矩形左上角的 y 坐标。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
          <source>The width of the rectangle.</source>
          <target state="translated">矩形的宽度。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
          <source>The height of the rectangle.</source>
          <target state="translated">矩形的高度。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure that has the specified x-coordinate, y-coordinate, width, and height.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> 结构的新实例，此结构具有指定的 x 坐标、y 坐标、宽度和高度。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure by using the <ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29&gt;</ph> constructor.</source>
          <target state="translated">下面的示例演示如何创建一个新<ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph>结构使用<ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
          <source><ph id="ph1">&lt;paramref name="width" /&gt;</ph> is a negative value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="width" /&gt;</ph> 是负值。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
          <source><ph id="ph1">&lt;paramref name="height" /&gt;</ph> is a negative value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="height" /&gt;</ph> 是负值。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Bottom">
          <source>Gets the y-axis value of the bottom of the rectangle.</source>
          <target state="translated">获取矩形底边的 y 轴值。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Bottom">
          <source>The y-axis value of the bottom of the rectangle.</source>
          <target state="translated">矩形底边的 y 轴值。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Bottom">
          <source>If the rectangle is empty, the value is <ph id="ph1">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph> .</source>
          <target state="translated">如果矩形为空，则该值为 <ph id="ph1">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Bottom">
          <source>The y-axis value of the bottom of the rectangle is equal to the sum of the <ph id="ph1">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> properties.</source>
          <target state="translated">矩形底部的 y 轴值等于的总和<ph id="ph1">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Bottom">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Bottom">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">该示例还演示了如何查找有关新添加的矩形的大小和坐标信息和呈现中的信息<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>下面矩形。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.BottomLeft">
          <source>Gets the position of the bottom-left corner of the rectangle</source>
          <target state="translated">获取矩形的左下角位置</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.BottomLeft">
          <source>The position of the bottom-left corner of the rectangle.</source>
          <target state="translated">矩形的左下角位置。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.BottomLeft">
          <source>The position of the bottom-left corner of the rectangle is equal to (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph><ph id="ph3"> + </ph><ph id="ph4">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>).</source>
          <target state="translated">矩形的左下角的位置是否等于 (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> <ph id="ph3"> + </ph> <ph id="ph4">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.BottomLeft">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.BottomLeft">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">该示例还演示了如何查找有关新添加的矩形的大小和坐标信息和呈现中的信息<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>下面矩形。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.BottomRight">
          <source>Gets the position of the bottom-right corner of the rectangle.</source>
          <target state="translated">获取矩形的右下角位置。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.BottomRight">
          <source>The position of the bottom-right corner of the rectangle.</source>
          <target state="translated">矩形的左下角位置。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.BottomRight">
          <source>The position of the bottom-right corner of the rectangle is equal to (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph><ph id="ph5"> + </ph><ph id="ph6">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>).</source>
          <target state="translated">矩形右下角的位置是否等于 (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> <ph id="ph5"> + </ph> <ph id="ph6">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.BottomRight">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.BottomRight">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">该示例还演示了如何查找有关新添加的矩形的大小和坐标信息和呈现中的信息<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>下面矩形。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Indicates whether the rectangle contains the specified point or rectangle.</source>
          <target state="translated">指示矩形中是否包含指定的点或矩形。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Windows.Point)">
          <source>The point to check.</source>
          <target state="translated">要检查的点。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Windows.Point)">
          <source>Indicates whether the rectangle contains the specified point.</source>
          <target state="translated">指示矩形中是否包含指定点。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Windows.Point)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the rectangle contains the specified point; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果矩形中包含指定点，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Contains(System.Windows.Point)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Contains%28System.Windows.Point%29&gt;</ph> method to determine if the rectangle contains the specified <ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph>.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.Contains%28System.Windows.Point%29&gt;</ph>方法来确定矩形中是否包含指定<ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Windows.Rect)">
          <source>The rectangle to check.</source>
          <target state="translated">要检查的矩形。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Windows.Rect)">
          <source>Indicates whether the rectangle contains the specified rectangle.</source>
          <target state="translated">指示矩形中是否包含指定矩形。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Windows.Rect)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="rect" /&gt;</ph> is entirely contained by the rectangle; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="rect" /&gt;</ph> 完全包含在矩形中，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Contains(System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Contains%28System.Windows.Rect%29&gt;</ph> method to determine if one rectangle is contained by another rectangle.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.Contains%28System.Windows.Rect%29&gt;</ph>方法来确定一个矩形是否包含在另一个矩形。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Double,System.Double)">
          <source>The x-coordinate of the point to check.</source>
          <target state="translated">要检查的点的 x 坐标。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Double,System.Double)">
          <source>The y-coordinate of the point to check.</source>
          <target state="translated">要检查的点的 y 坐标。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Double,System.Double)">
          <source>Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.</source>
          <target state="translated">指示矩形中是否包含指定的 x 坐标和 y 坐标。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Double,System.Double)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if (<ph id="ph2">&lt;paramref name="x" /&gt;</ph>, <ph id="ph3">&lt;paramref name="y" /&gt;</ph>) is contained by the rectangle; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果（<ph id="ph2">&lt;paramref name="x" /&gt;</ph>、<ph id="ph3">&lt;paramref name="y" /&gt;</ph>）包含在矩形中，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Contains(System.Double,System.Double)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Contains%28System.Double%2CSystem.Double%29&gt;</ph> method to determine if the rectangle contains the point specified by the given x-coordinate and y-coordinate.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.Contains%28System.Double%2CSystem.Double%29&gt;</ph>方法来确定矩形中是否包含由给定的 x 坐标和 y 坐标指定的点。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Empty">
          <source>Gets a special value that represents a rectangle with no position or area.</source>
          <target state="translated">获取一个特殊值，该值表示没有位置或区域的矩形。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Empty">
          <source>The empty rectangle, which has <ph id="ph1">&lt;see cref="P:System.Windows.Rect.X" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Y" /&gt;</ph> property values of <ph id="ph3">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>, and has <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Width" /&gt;</ph> and <ph id="ph5">&lt;see cref="P:System.Windows.Rect.Height" /&gt;</ph> property values of <ph id="ph6">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>.</source>
          <target state="translated">空矩形，其 <ph id="ph1">&lt;see cref="P:System.Windows.Rect.X" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Y" /&gt;</ph> 属性值为 <ph id="ph3">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>，<ph id="ph4">&lt;see cref="P:System.Windows.Rect.Width" /&gt;</ph> 和 <ph id="ph5">&lt;see cref="P:System.Windows.Rect.Height" /&gt;</ph> 属性值为 <ph id="ph6">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Empty">
          <source>Avoid mathematical computations involving empty rectangles.</source>
          <target state="translated">避免数学计算涉及空矩形。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Empty">
          <source>Because both <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> are infinite values, processor operations are severely impaired by these operations.</source>
          <target state="translated">因为同时<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>均为无限值，这些操作会严重影响操作的处理器。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Empty">
          <source>Comparisons involving these values will not affect application performance.</source>
          <target state="translated">涉及这些值的比较时，将不会影响应用程序性能。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Indicates whether two rectangles are equal.</source>
          <target state="translated">指示两个矩形是否相等。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Object)">
          <source>The object to compare to the current rectangle.</source>
          <target state="translated">要与当前矩形进行比较的对象。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Object)">
          <source>Indicates whether the specified object is equal to the current rectangle.</source>
          <target state="translated">指示指定对象是否等于当前矩形。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="o" /&gt;</ph> is a <ph id="ph3">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> and has the same <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> and <ph id="ph5">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> values as the current rectangle; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="o" /&gt;</ph> 为 <ph id="ph3">&lt;see cref="T:System.Windows.Rect" /&gt;</ph>，并且具有与当前矩形相同的 <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> 和 <ph id="ph5">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> 值，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph6">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Object)">
          <source>This operation tests for object equality.</source>
          <target state="translated">此操作测试对象相等。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Object)">
          <source>In this comparison, two instances of <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> are considered equal.</source>
          <target state="translated">在这种比较，两个实例<ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>被视为相等。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Object)">
          <source>A rectangle's position and dimensions are described by <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">由描述矩形的位置和尺寸<ph id="ph1">&lt;xref:System.Double&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Object)">
          <source>Because <ph id="ph1">&lt;xref:System.Double&gt;</ph> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Double&gt;</ph>值可能会丢失精度运算时，逻辑上相等的两个值之间的比较可能会失败。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Object)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Object%29&gt;</ph> method to determine if a rectangle is equal to a specified object.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Object%29&gt;</ph>方法来确定一个矩形是否与指定的对象相等。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Windows.Rect)">
          <source>The rectangle to compare to the current rectangle.</source>
          <target state="translated">要与当前矩形进行比较的矩形。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Windows.Rect)">
          <source>Indicates whether the specified rectangle is equal to the current rectangle.</source>
          <target state="translated">指示指定矩形是否等于当前矩形。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Windows.Rect)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified rectangle has the same <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> values as the current rectangle; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定矩形具有与当前矩形相同的 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> 值，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect)">
          <source>This operation tests for object equality.</source>
          <target state="translated">此操作测试对象相等。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect)">
          <source>In this comparison, two instances of <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> are considered equal.</source>
          <target state="translated">在这种比较，两个实例<ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>被视为相等。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect)">
          <source>A rectangle's position and dimensions are described by <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">由描述矩形的位置和尺寸<ph id="ph1">&lt;xref:System.Double&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect)">
          <source>Because <ph id="ph1">&lt;xref:System.Double&gt;</ph> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Double&gt;</ph>值可能会丢失精度运算时，逻辑上相等的两个值之间的比较可能会失败。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%29&gt;</ph> method to determine if a rectangle is equal to a specified rectangle.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%29&gt;</ph>方法来确定一个矩形是否等于指定的矩形。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
          <source>The first rectangle to compare.</source>
          <target state="translated">要比较的第一个矩形。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
          <source>The second rectangle to compare.</source>
          <target state="translated">要比较的第二个矩形。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
          <source>Indicates whether the specified rectangles are equal.</source>
          <target state="translated">指示指定的矩形是否相等。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the rectangles have the same <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> values; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果这些矩形具有相同的 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> 值，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
          <source>This operation tests for object equality.</source>
          <target state="translated">此操作测试对象相等。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
          <source>In this comparison, two instances of <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> are considered equal.</source>
          <target state="translated">在这种比较，两个实例<ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>被视为相等。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
          <source>A rectangle's position and dimensions are described by <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">由描述矩形的位置和尺寸<ph id="ph1">&lt;xref:System.Double&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
          <source>Because <ph id="ph1">&lt;xref:System.Double&gt;</ph> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Double&gt;</ph>值可能会丢失精度运算时，逻辑上相等的两个值之间的比较可能会失败。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29&gt;</ph> method to determine if one rectangle is equal to another.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29&gt;</ph>方法来确定一个矩形是否等于另一个。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.GetHashCode">
          <source>Creates a hash code for the rectangle.</source>
          <target state="translated">创建矩形的哈希代码。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure.</source>
          <target state="translated">当前 <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> 结构的哈希代码。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.GetHashCode">
          <source>This method creates a hash code by using the <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> property values.</source>
          <target state="translated">此方法创建的哈希代码通过使用<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>属性值。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.GetHashCode">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.GetHashCode%2A&gt;</ph> method to get the hash code of a <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph>.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.GetHashCode%2A&gt;</ph>方法以获取的哈希代码<ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Height">
          <source>Gets or sets the height of the rectangle.</source>
          <target state="translated">获取或设置矩形的高度。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Height">
          <source>A positive number that represents the height of the rectangle.</source>
          <target state="translated">一个正数，表示矩形的高度。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Height">
          <source>The default is 0.</source>
          <target state="translated">默认值为 0。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Height">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle has a <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of <ph id="ph3">&lt;xref:System.Double.NegativeInfinity&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph>矩形具有<ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>的<ph id="ph3">&lt;xref:System.Double.NegativeInfinity&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Height">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle is read-only; its <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> cannot not be changed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph>矩形是只读的; 其<ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>不能更改。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Height">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure to specify the dimensions and location of a rectangle using XAML.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph>结构，以指定的维度和使用 XAML 的矩形的位置。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Height">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Height">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">该示例还演示了如何查找有关新添加的矩形的大小和坐标信息和呈现中的信息<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>下面矩形。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Height">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Height" /&gt;</ph> is set to a negative value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Height" /&gt;</ph> 设置为一个负值。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Height">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Height" /&gt;</ph> is set on an <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Height" /&gt;</ph> 矩形上设置 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Creates a rectangle that results from expanding or shrinking a rectangle by the specified amount.</source>
          <target state="translated">创建一个矩形，该矩形是通过将一个矩形放大或缩小指定量而得到的。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Size)">
          <source>Specifies the amount to expand the rectangle.</source>
          <target state="translated">指定矩形的放大量。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Size)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> structure's <ph id="ph2">&lt;see cref="P:System.Windows.Size.Width" /&gt;</ph> property specifies the amount to increase the rectangle's <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Left" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Right" /&gt;</ph> properties.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> 结构的 <ph id="ph2">&lt;see cref="P:System.Windows.Size.Width" /&gt;</ph> 属性指定矩形的 <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Left" /&gt;</ph> 和 <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Right" /&gt;</ph> 属性的增量。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Size)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> structure's <ph id="ph2">&lt;see cref="P:System.Windows.Size.Height" /&gt;</ph> property specifies the amount to increase the rectangle's <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Top" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Bottom" /&gt;</ph> properties.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> 结构的 <ph id="ph2">&lt;see cref="P:System.Windows.Size.Height" /&gt;</ph> 属性指定矩形的 <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Top" /&gt;</ph> 和 <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Bottom" /&gt;</ph> 属性的增量。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Size)">
          <source>Expands the rectangle by using the specified <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph>, in all directions.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> 向所有方向放大矩形。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Size)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of the resulting rectangle is increased by twice the <ph id="ph2">&lt;xref:System.Windows.Size.Width%2A&gt;</ph> of the specified <ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph> structure, because both the left and right sides of the rectangle are inflated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>增加生成的矩形的两次<ph id="ph2">&lt;xref:System.Windows.Size.Width%2A&gt;</ph>指定<ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph>结构，因为放大的左侧和右侧的矩形。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Size)">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of the resulting rectangle is increased by twice the <ph id="ph2">&lt;xref:System.Windows.Size.Height%2A&gt;</ph> of the specified <ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph> structure.</source>
          <target state="translated">同样，<ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>增加生成的矩形的两次<ph id="ph2">&lt;xref:System.Windows.Size.Height%2A&gt;</ph>指定<ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph>结构。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Size)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Inflate%28System.Windows.Size%29&gt;</ph> method to increase the size of a rectangle.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.Inflate%28System.Windows.Size%29&gt;</ph>方法来增加的矩形的大小。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Size)">
          <source>This method is called on the <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated">对 <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> 矩形调用此方法。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
          <source>The amount by which to expand or shrink the left and right sides of the rectangle.</source>
          <target state="translated">矩形左边和右边的放大或缩小量。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
          <source>The amount by which to expand or shrink the top and bottom sides of the rectangle.</source>
          <target state="translated">矩形上边和下边的放大或缩小量。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
          <source>Expands or shrinks the rectangle by using the specified width and height amounts, in all directions.</source>
          <target state="translated">使用指定的宽度和高度量向所有方向放大或缩小矩形。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>的增加或降低按两次指定的宽度偏移量，因为它应用于的左侧和右侧的矩形的生成的矩形。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of the resulting rectangle is increased or decreased by twice the specified height.</source>
          <target state="translated">同样，<ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>的生成的矩形是按增大或减小两次指定的高度。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
          <source>If the specified width or height shrink the rectangle by more than its current <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>—giving the rectangle a negative area—the rectangle becomes the <ph id="ph3">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle.</source>
          <target state="translated">如果指定的宽度或高度收缩矩形超过了其当前<ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>-导致矩形区域为负，则矩形将变为<ph id="ph3">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph>矩形。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Inflate%28System.Double%2CSystem.Double%29&gt;</ph> method to change the size of a rectangle.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.Inflate%28System.Double%2CSystem.Double%29&gt;</ph>方法可以更改矩形的大小。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
          <source>This method is called on the <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated">对 <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> 矩形调用此方法。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure to modify.</source>
          <target state="translated">要修改的 <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> 结构。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source>Specifies the amount to expand the rectangle.</source>
          <target state="translated">指定矩形的放大量。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> structure's <ph id="ph2">&lt;see cref="P:System.Windows.Size.Width" /&gt;</ph> property specifies the amount to increase the rectangle's <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Left" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Right" /&gt;</ph> properties.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> 结构的 <ph id="ph2">&lt;see cref="P:System.Windows.Size.Width" /&gt;</ph> 属性指定矩形的 <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Left" /&gt;</ph> 和 <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Right" /&gt;</ph> 属性的增量。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> structure's <ph id="ph2">&lt;see cref="P:System.Windows.Size.Height" /&gt;</ph> property specifies the amount to increase the rectangle's <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Top" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Bottom" /&gt;</ph> properties.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> 结构的 <ph id="ph2">&lt;see cref="P:System.Windows.Size.Height" /&gt;</ph> 属性指定矩形的 <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Top" /&gt;</ph> 和 <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Bottom" /&gt;</ph> 属性的增量。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source>Returns the rectangle that results from expanding the specified rectangle by the specified <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph>, in all directions.</source>
          <target state="translated">返回矩形，该矩形是通过将指定矩形向所有方向放大指定 <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> 而得到的。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source>The resulting rectangle.</source>
          <target state="translated">所得矩形。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of the resulting rectangle is increased by twice the <ph id="ph2">&lt;xref:System.Windows.Size.Width%2A&gt;</ph> of the specified <ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph> structure, because both the left and right sides of the rectangle are inflated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>增加生成的矩形的两次<ph id="ph2">&lt;xref:System.Windows.Size.Width%2A&gt;</ph>指定<ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph>结构，因为放大的左侧和右侧的矩形。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of the resulting rectangle is increased by twice the <ph id="ph2">&lt;xref:System.Windows.Size.Height%2A&gt;</ph> of the specified <ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph> structure.</source>
          <target state="translated">同样，<ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>增加生成的矩形的两次<ph id="ph2">&lt;xref:System.Windows.Size.Height%2A&gt;</ph>指定<ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph>结构。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Windows.Size%29&gt;</ph> method to change the size of a rectangle.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Windows.Size%29&gt;</ph>方法可以更改矩形的大小。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source><ph id="ph1">&lt;paramref name="rect" /&gt;</ph> is an <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rect" /&gt;</ph> 是 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> 矩形。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure to modify.</source>
          <target state="translated">要修改的 <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> 结构。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source>The amount by which to expand or shrink the left and right sides of the rectangle.</source>
          <target state="translated">矩形左边和右边的放大或缩小量。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source>The amount by which to expand or shrink the top and bottom sides of the rectangle.</source>
          <target state="translated">矩形上边和下边的放大或缩小量。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source>Creates a rectangle that results from expanding or shrinking the specified rectangle by the specified width and height amounts, in all directions.</source>
          <target state="translated">创建一个矩形，该矩形是通过将指定矩形向所有方向放大或缩小指定宽度和高度而得到的。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source>The resulting rectangle.</source>
          <target state="translated">所得矩形。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>的增加或降低按两次指定的宽度偏移量，因为它应用于的左侧和右侧的矩形的生成的矩形。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of the resulting rectangle is increased or decreased by twice the specified height.</source>
          <target state="translated">同样，<ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>的生成的矩形是按增大或减小两次指定的高度。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source>If the specified width or height modifiers shrink the rectangle by more than its current <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>—giving the rectangle a negative area—this method returns <ph id="ph3">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果指定的宽度或高度修饰符收缩矩形超过了其当前<ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>-导致矩形区域为负，此方法返回<ph id="ph3">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29&gt;</ph> method to change the size of a rectangle.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29&gt;</ph>方法可以更改矩形的大小。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source><ph id="ph1">&lt;paramref name="rect" /&gt;</ph> is an <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rect" /&gt;</ph> 是 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> 矩形。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Finds the intersection of two rectangles.</source>
          <target state="translated">查找两个矩形的交集。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
          <source>The rectangle to intersect with the current rectangle.</source>
          <target state="translated">要与当前矩形相交的矩形。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
          <source>Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.</source>
          <target state="translated">查找当前矩形和指定矩形的交集，并将结果存储为当前矩形。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
          <source>If no intersection exists, the current rectangle becomes <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果不存在任何交集，当前的矩形将变为<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Intersect%28System.Windows.Rect%29&gt;</ph> method to find the intersection of two rectangles and store the result as a rectangle.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.Intersect%28System.Windows.Rect%29&gt;</ph>方法查找两个矩形交集并将结果存储为一个矩形。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
          <source>The first rectangle to compare.</source>
          <target state="translated">要比较的第一个矩形。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
          <source>The second rectangle to compare.</source>
          <target state="translated">要比较的第二个矩形。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
          <source>Returns the intersection of the specified rectangles.</source>
          <target state="translated">返回指定矩形的交集。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
          <source>The intersection of the two rectangles, or <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> if no intersection exists.</source>
          <target state="translated">两个矩形的交集；如果不存在任何交集，则为 <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29&gt;</ph> method to find the intersection of two rectangles.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29&gt;</ph>方法来查找两个矩形交集。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)">
          <source>The rectangle to check.</source>
          <target state="translated">要检查的矩形。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)">
          <source>Indicates whether the specified rectangle intersects with the current rectangle.</source>
          <target state="translated">指示指定矩形是否与当前矩形相交。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified rectangle intersects with the current rectangle; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定矩形与当前矩形相交，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.IntersectsWith%2A&gt;</ph> method to determine if two rectangles intersect.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.IntersectsWith%2A&gt;</ph>方法来确定是否两个矩形相交。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.IsEmpty">
          <source>Gets a value that indicates whether the rectangle is the <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated">获取一个值，该值指示矩形是否为 <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> 矩形。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.IsEmpty">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the rectangle is the <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果矩形为 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> 矩形，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.IsEmpty">
          <source>Do not use this property to test for zero area; a rectangle with zero area is not necessarily the <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle.</source>
          <target state="translated">不使用此属性为零区域，则测试一个具有零个区域的矩形不一定<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph>矩形。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.IsEmpty">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> property.</source>
          <target state="translated">有关更多信息，请参见 <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Left">
          <source>Gets the x-axis value of the left side of the rectangle.</source>
          <target state="translated">获取矩形左边的 x 轴值。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Left">
          <source>The x-axis value of the left side of the rectangle.</source>
          <target state="translated">矩形左边的 x 轴值。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Left">
          <source>Getting this property is equivalent to getting the <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> property.</source>
          <target state="translated">获取此属性等效于获取<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Left">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Left">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">该示例还演示了如何查找有关新添加的矩形的大小和坐标信息和呈现中的信息<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>下面矩形。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Location">
          <source>Gets or sets the position of the top-left corner of the rectangle.</source>
          <target state="translated">获取或设置矩形的左上角位置。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Location">
          <source>The position of the top-left corner of the rectangle.</source>
          <target state="translated">矩形的左上角位置。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Location">
          <source>The default is (0, 0).</source>
          <target state="translated">默认值为 (0, 0)。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Location">
          <source>The position of the top-left corner of the rectangle is equal to (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>).</source>
          <target state="translated">矩形左上角的位置是否等于 (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Location">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure to specify the dimensions and location of a rectangle using XAML.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph>结构，以指定的维度和使用 XAML 的矩形的位置。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Location">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Location">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">该示例还演示了如何查找有关新添加的矩形的大小和坐标信息和呈现中的信息<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>下面矩形。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Location">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> is set on an <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> 矩形上设置 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Moves a rectangle by the specified amount.</source>
          <target state="translated">将矩形移动指定的量。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>A vector that specifies the horizontal and vertical amounts to move the rectangle.</source>
          <target state="translated">一个向量，指定矩形沿水平和垂直方向移动的量。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>Moves the rectangle by the specified vector.</source>
          <target state="translated">将矩形移动指定向量。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>Calling this method on an empty rectangle (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>) is not allowed.</source>
          <target state="translated">调用此方法为空矩形 (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>) 不允许。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>Note that calling the <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> method will only have an effect if you can change the <ph id="ph2">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> properties directly.</source>
          <target state="translated">请注意，调用<ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph>方法只会造成影响，如果可以更改<ph id="ph2">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>直接属性。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>Because <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> is a value type, if you reference a <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> object by using a property or indexer, you get a copy of the object, not a reference to the object.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph>是值类型，如果引用<ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph>对象使用的属性或索引，你将获得一份对象，未对对象的引用。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>If you attempt to change <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> on a property or indexer reference, a compiler error occurs.</source>
          <target state="translated">如果你尝试更改<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>上的属性或索引器的引用，则编译器将发生错误。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>Similarly, calling <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> on the property or indexer will not change the underlying object.</source>
          <target state="translated">同样，调用<ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph>属性或索引器上将不会更改基础对象。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>If you want to change the value of a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> that is referenced as a property or indexer, create a new <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph>, modify its fields, and then assign the <ph id="ph3">&lt;xref:System.Windows.Rect&gt;</ph> back to the property or indexer.</source>
          <target state="translated">如果你想要更改的值<ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph>引用为属性或索引器，创建一个新<ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph>修改其字段，然后将分配<ph id="ph3">&lt;xref:System.Windows.Rect&gt;</ph>回属性或索引器。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%28System.Windows.Vector%29&gt;</ph> method to change the position of a rectangle.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.Offset%28System.Windows.Vector%29&gt;</ph>方法可以更改矩形的位置。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>This method is called on the <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated">对 <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> 矩形调用此方法。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>The amount to move the rectangle horizontally.</source>
          <target state="translated">水平移动矩形的量。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>The amount to move the rectangle vertically.</source>
          <target state="translated">垂直移动矩形的量。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>Moves the rectangle by the specified horizontal and vertical amounts.</source>
          <target state="translated">将矩形沿水平和垂直方向移动指定的量。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>Calling this method on an empty rectangle (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>) is not allowed.</source>
          <target state="translated">调用此方法为空矩形 (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>) 不允许。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>Note that calling the <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> method will only have an effect if you can change the <ph id="ph2">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> properties directly.</source>
          <target state="translated">请注意，调用<ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph>方法只会造成影响，如果可以更改<ph id="ph2">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>直接属性。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>Because <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> is a value type, if you reference a <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> object by using a property or indexer, you get a copy of the object, not a reference to the object.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph>是值类型，如果引用<ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph>对象使用的属性或索引，你将获得一份对象，未对对象的引用。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>If you attempt to change <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> on a property or indexer reference, a compiler error occurs.</source>
          <target state="translated">如果你尝试更改<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>上的属性或索引器的引用，则编译器将发生错误。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>Similarly, calling <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> on the property or indexer will not change the underlying object.</source>
          <target state="translated">同样，调用<ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph>属性或索引器上将不会更改基础对象。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>If you want to change the value of a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> that is referenced as a property or indexer, create a new <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph>, modify its fields, and then assign the <ph id="ph3">&lt;xref:System.Windows.Rect&gt;</ph> back to the property or indexer.</source>
          <target state="translated">如果你想要更改的值<ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph>引用为属性或索引器，创建一个新<ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph>修改其字段，然后将分配<ph id="ph3">&lt;xref:System.Windows.Rect&gt;</ph>回属性或索引器。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%28System.Double%2CSystem.Double%29&gt;</ph> method to change the position of a rectangle.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.Offset%28System.Double%2CSystem.Double%29&gt;</ph>方法可以更改矩形的位置。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>This method is called on the <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated">对 <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> 矩形调用此方法。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
          <source>The original rectangle.</source>
          <target state="translated">原始矩形。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
          <source>A vector that specifies the horizontal and vertical offsets for the new rectangle.</source>
          <target state="translated">一个向量，指定新矩形的水平和垂直偏移量。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
          <source>Returns a rectangle that is offset from the specified rectangle by using the specified vector.</source>
          <target state="translated">返回一个矩形，该矩形是通过将指定矩形偏移指定向量而得到的。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
          <source>The resulting rectangle.</source>
          <target state="translated">所得矩形。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
          <source>Calling this method with an empty rectangle (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>) is not allowed.</source>
          <target state="translated">调用此方法与为空矩形 (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>) 不允许。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Windows.Vector%29&gt;</ph> method to change the position of a rectangle.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Windows.Vector%29&gt;</ph>方法可以更改矩形的位置。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
          <source><ph id="ph1">&lt;paramref name="rect" /&gt;</ph> is <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rect" /&gt;</ph> 为 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
          <source>The rectangle to move.</source>
          <target state="translated">要移动的矩形。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
          <source>The horizontal offset for the new rectangle.</source>
          <target state="translated">新矩形的水平偏移量。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
          <source>The vertical offset for the new rectangle.</source>
          <target state="translated">新矩形的垂直偏移量。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
          <source>Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.</source>
          <target state="translated">返回一个矩形，该矩形是通过将指定矩形偏移指定的水平和垂直量而得到的。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
          <source>The resulting rectangle.</source>
          <target state="translated">所得矩形。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
          <source>Calling this method with an empty rectangle (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>) is not allowed.</source>
          <target state="translated">调用此方法与为空矩形 (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>) 不允许。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29&gt;</ph> method to change the position of a rectangle.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29&gt;</ph>方法可以更改矩形的位置。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
          <source><ph id="ph1">&lt;paramref name="rect" /&gt;</ph> is <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rect" /&gt;</ph> 为 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source>The first rectangle to compare.</source>
          <target state="translated">要比较的第一个矩形。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source>The second rectangle to compare.</source>
          <target state="translated">要比较的第二个矩形。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source>Compares two rectangles for exact equality.</source>
          <target state="translated">比较两个矩形是否完全相等。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the rectangles have the same <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> values; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果这些矩形具有相同的 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> 值，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source>This operation tests for object equality.</source>
          <target state="translated">此操作测试对象相等。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source>In this comparison, two instances of <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> are considered equal.</source>
          <target state="translated">在这种比较，两个实例<ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>被视为相等。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source>A rectangle's position and dimensions are described by <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">由描述矩形的位置和尺寸<ph id="ph1">&lt;xref:System.Double&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source>Because <ph id="ph1">&lt;xref:System.Double&gt;</ph> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Double&gt;</ph>值可能会丢失精度运算时，逻辑上相等的两个值之间的比较可能会失败。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">此运算符的等效方法是 <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.op_Equality%2A&gt;</ph> operator to determine if two rectangles are exactly equal.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.op_Equality%2A&gt;</ph>运算符以确定两个矩形是否完全相等。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source>The first rectangle to compare.</source>
          <target state="translated">要比较的第一个矩形。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source>The second rectangle to compare.</source>
          <target state="translated">要比较的第二个矩形。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source>Compares two rectangles for inequality.</source>
          <target state="translated">比较两个矩形是否不相等。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the rectangles do not have the same <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> values; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果这些矩形具有不相同的 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> 值，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source>This operation tests for object inequality.</source>
          <target state="translated">此操作测试对象不相等。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source>In this comparison, two instances of <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> are considered equal.</source>
          <target state="translated">在这种比较，两个实例<ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>被视为相等。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source>A rectangle's position and dimensions are described by <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">由描述矩形的位置和尺寸<ph id="ph1">&lt;xref:System.Double&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source>Because <ph id="ph1">&lt;xref:System.Double&gt;</ph> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Double&gt;</ph>值可能会丢失精度运算时，逻辑上相等的两个值之间的比较可能会失败。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">此运算符的等效方法是 <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.op_Inequality%2A&gt;</ph> operator to determine if two rectangles are not exactly equal.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.op_Inequality%2A&gt;</ph>运算符以确定两个矩形是否不完全相等。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Parse(System.String)">
          <source>The string representation of the rectangle, in the form "x, y, width, height".</source>
          <target state="translated">矩形的字符串表示形式，格式为“x, y, width, height”。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Parse(System.String)">
          <source>Creates a new rectangle from the specified string representation.</source>
          <target state="translated">根据指定的字符串表示形式创建新的矩形。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Parse(System.String)">
          <source>The resulting rectangle.</source>
          <target state="translated">所得矩形。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Parse(System.String)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Parse%2A&gt;</ph> method to convert a string representation of a rectangle into a <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> structure.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.Parse%2A&gt;</ph>方法将转换的字符串表示形式到矩形<ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph>结构。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Right">
          <source>Gets the x-axis value of the right side of the rectangle.</source>
          <target state="translated">获取矩形右边的 x 轴值。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Right">
          <source>The x-axis value of the right side of the rectangle.</source>
          <target state="translated">矩形右边的 x 轴值。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Right">
          <source>The x-axis value of the right side of the rectangle is equal to the sum of the <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> properties.</source>
          <target state="translated">在该矩形右侧的 x 轴值等于的总和<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Right">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Right">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">该示例还演示了如何查找有关新添加的矩形的大小和坐标信息和呈现中的信息<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>下面矩形。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Scale(System.Double,System.Double)">
          <source>The scale factor in the x-direction.</source>
          <target state="translated">x 方向的比例因子。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Scale(System.Double,System.Double)">
          <source>The scale factor in the y-direction.</source>
          <target state="translated">y 方向的比例因子。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Scale(System.Double,System.Double)">
          <source>Multiplies the size of the current rectangle by the specified x and y values.</source>
          <target state="translated">将当前矩形的大小与指定的 x 和 y 值相乘。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Scale(System.Double,System.Double)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Scale%2A&gt;</ph> method to multiply the width and height of a rectangle by the specified amount.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.Scale%2A&gt;</ph>方法要相乘的宽度和高度的矩形指定的量。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Size">
          <source>Gets or sets the width and height of the rectangle.</source>
          <target state="translated">获取或设置矩形的宽度和高度。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Size">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> structure that specifies the width and height of the rectangle.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> 结构，指定矩形的宽度和高度。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Size">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure to specify the dimensions and location of a rectangle using XAML.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph>结构，以指定的维度和使用 XAML 的矩形的位置。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Size">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Size">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">该示例还演示了如何查找有关新添加的矩形的大小和坐标信息和呈现中的信息<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>下面矩形。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Size">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> is set on an <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> 矩形上设置 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>The format to use.</source>
          <target state="translated">要使用的格式。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>A null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) to use the default format defined for the type of the <ph id="ph2">&lt;see cref="T:System.IFormattable" /&gt;</ph> implementation.</source>
          <target state="translated">null 引用（Visual Basic 中为 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>）将使用为 <ph id="ph2">&lt;see cref="T:System.IFormattable" /&gt;</ph> 实现的类型所定义的默认格式。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>The provider to use to format the value.</source>
          <target state="translated">要用于对值设置格式的提供程序。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>A null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</source>
          <target state="translated">null 引用（Visual Basic 中为 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>）将从操作系统的当前区域设置中获取数字格式信息。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>Formats the value of the current instance using the specified format.</source>
          <target state="translated">使用指定格式对当前实例的值设置格式。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>A string representation of the rectangle.</source>
          <target state="translated">矩形的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Top">
          <source>Gets the y-axis position of the top of the rectangle.</source>
          <target state="translated">获取矩形顶边的 y 轴位置。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Top">
          <source>The y-axis position of the top of the rectangle.</source>
          <target state="translated">矩形顶边的 y 轴位置。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Top">
          <source>Getting this property is equivalent to getting the <ph id="ph1">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> property.</source>
          <target state="translated">获取此属性等效于获取<ph id="ph1">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Top">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Top">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">该示例还演示了如何查找有关新添加的矩形的大小和坐标信息和呈现中的信息<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>下面矩形。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.TopLeft">
          <source>Gets the position of the top-left corner of the rectangle.</source>
          <target state="translated">获取矩形的左上角位置。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.TopLeft">
          <source>The position of the top-left corner of the rectangle.</source>
          <target state="translated">矩形的左上角位置。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.TopLeft">
          <source>The position of the top-left corner of the rectangle is equal to (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>).</source>
          <target state="translated">矩形左上角的位置是否等于 (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.TopLeft">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.TopLeft">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">该示例还演示了如何查找有关新添加的矩形的大小和坐标信息和呈现中的信息<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>下面矩形。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.TopRight">
          <source>Gets the position of the top-right corner of the rectangle.</source>
          <target state="translated">获取矩形的右上角位置。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.TopRight">
          <source>The position of the top-right corner of the rectangle.</source>
          <target state="translated">矩形的右上角位置。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.TopRight">
          <source>The position of the top-right corner of the rectangle is equal to (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>).</source>
          <target state="translated">矩形右上角的位置是否等于 (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.TopRight">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.TopRight">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">该示例还演示了如何查找有关新添加的矩形的大小和坐标信息和呈现中的信息<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>下面矩形。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Returns a string representation of the rectangle.</source>
          <target state="translated">返回矩形的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.ToString">
          <source>Returns a string representation of the rectangle.</source>
          <target state="translated">返回矩形的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.ToString">
          <source>A string representation of the current rectangle.</source>
          <target state="translated">当前矩形的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.ToString">
          <source>The string has the following form: "<ph id="ph1">&lt;see cref="P:System.Windows.Rect.X" /&gt;</ph>,<ph id="ph2">&lt;see cref="P:System.Windows.Rect.Y" /&gt;</ph>,<ph id="ph3">&lt;see cref="P:System.Windows.Rect.Width" /&gt;</ph>,<ph id="ph4">&lt;see cref="P:System.Windows.Rect.Height" /&gt;</ph>".</source>
          <target state="translated">此字符串采用以下格式："<ph id="ph1">&lt;see cref="P:System.Windows.Rect.X" /&gt;</ph>,<ph id="ph2">&lt;see cref="P:System.Windows.Rect.Y" /&gt;</ph>,<ph id="ph3">&lt;see cref="P:System.Windows.Rect.Width" /&gt;</ph>,<ph id="ph4">&lt;see cref="P:System.Windows.Rect.Height" /&gt;</ph>"。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.ToString">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.ToString&gt;</ph> method to get a string representation of a <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> structure.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.ToString&gt;</ph>方法以获取的字符串表示形式<ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph>结构。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.ToString(System.IFormatProvider)">
          <source>Culture-specific formatting information.</source>
          <target state="translated">区域性特定的格式设置信息。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.ToString(System.IFormatProvider)">
          <source>Returns a string representation of the rectangle by using the specified format provider.</source>
          <target state="translated">使用指定的格式提供程序返回矩形的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.ToString(System.IFormatProvider)">
          <source>A string representation of the current rectangle that is determined by the specified format provider.</source>
          <target state="translated">当前矩形的字符串表示形式，由指定的格式提供程序确定。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Transforms a rectangle by using the specified matrix.</source>
          <target state="translated">使用指定的矩阵转换矩形。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)">
          <source>A matrix that specifies the transformation to apply.</source>
          <target state="translated">指定将应用转换的矩阵。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)">
          <source>Transforms the rectangle by applying the specified matrix.</source>
          <target state="translated">通过应用指定矩阵来转换矩形。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Transform%28System.Windows.Media.Matrix%29&gt;</ph> method to transform a <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> structure by using a <ph id="ph3">&lt;xref:System.Windows.Media.Matrix&gt;</ph>.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.Transform%28System.Windows.Media.Matrix%29&gt;</ph>方法转换<ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph>结构使用<ph id="ph3">&lt;xref:System.Windows.Media.Matrix&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
          <source>A rectangle that is the basis for the transformation.</source>
          <target state="translated">作为转换基础的矩形。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
          <source>A matrix that specifies the transformation to apply.</source>
          <target state="translated">指定将应用转换的矩阵。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
          <source>Returns the rectangle that results from applying the specified matrix to the specified rectangle.</source>
          <target state="translated">返回矩形，该矩形是通过向指定矩形应用指定矩阵而得到的。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
          <source>The rectangle that results from the operation.</source>
          <target state="translated">此操作生成的矩形。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Transform%28System.Windows.Rect%2CSystem.Windows.Media.Matrix%29&gt;</ph> method to create a new <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> structure that results from applying a <ph id="ph3">&lt;xref:System.Windows.Media.Matrix&gt;</ph> to an existing rectangle.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.Transform%28System.Windows.Rect%2CSystem.Windows.Media.Matrix%29&gt;</ph>方法来创建一个新<ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph>应用得到的结构<ph id="ph3">&lt;xref:System.Windows.Media.Matrix&gt;</ph>到现有的矩形。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Creates a rectangle that is exactly large enough to contain a given rectangle and a specified point or second rectangle.</source>
          <target state="translated">创建一个矩形，该矩形的大小刚好足以包含给定矩形和指定点或第二个矩形。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Point)">
          <source>The point to include.</source>
          <target state="translated">要包含的点。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Point)">
          <source>Expands the current rectangle exactly enough to contain the specified point.</source>
          <target state="translated">放大当前矩形，使其刚好足以包含指定点。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Union(System.Windows.Point)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Union%28System.Windows.Point%29&gt;</ph> method to expand the current rectangle exactly enough to contain a given <ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph>.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.Union%28System.Windows.Point%29&gt;</ph>方法进行刚好足以扩展当前的矩形来包含给定<ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect)">
          <source>The rectangle to include.</source>
          <target state="translated">要包含的矩形。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect)">
          <source>Expands the current rectangle exactly enough to contain the specified rectangle.</source>
          <target state="translated">放大当前矩形，使其刚好足以包含指定矩形。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Union(System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Union%28System.Windows.Rect%29&gt;</ph> method to expand the current rectangle exactly enough to contain the specified rectangle.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.Union%28System.Windows.Rect%29&gt;</ph>方法进行刚好足以扩展当前的矩形来包含指定的矩形。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
          <source>The rectangle to include.</source>
          <target state="translated">要包含的矩形。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
          <source>The point to include.</source>
          <target state="translated">要包含的点。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
          <source>Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point.</source>
          <target state="translated">创建一个矩形，该矩形的大小刚好足以包含指定矩形和指定点。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
          <source>A rectangle that is exactly large enough to contain the specified rectangle and the specified point.</source>
          <target state="translated">大小刚好足以包含指定矩形和指定点的矩形。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Point%29&gt;</ph> method to create a rectangle that is exactly large enough to contain a given rectangle and a given <ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph>.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Point%29&gt;</ph>方法来创建矩形大到足以包含给定的矩形和给定<ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
          <source>The first rectangle to include.</source>
          <target state="translated">要包含的第一个矩形。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
          <source>The second rectangle to include.</source>
          <target state="translated">要包含的第二个矩形。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
          <source>Creates a rectangle that is exactly large enough to contain the two specified rectangles.</source>
          <target state="translated">创建一个矩形，该矩形的大小刚好足以包含两个指定矩形。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
          <source>The resulting rectangle.</source>
          <target state="translated">所得矩形。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Rect%29&gt;</ph> method to create a rectangle that is exactly large enough to contain two given rectangles.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Rect%29&gt;</ph>方法来创建矩形大到足以包含两个给定的矩形。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Width">
          <source>Gets or sets the width of the rectangle.</source>
          <target state="translated">获取或设置矩形的宽度。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Width">
          <source>A positive number that represents the width of the rectangle.</source>
          <target state="translated">一个正数，表示矩形的宽度。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Width">
          <source>The default is 0.</source>
          <target state="translated">默认值为 0。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Width">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle has a <ph id="ph2">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of <ph id="ph3">&lt;xref:System.Double.NegativeInfinity&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph>矩形具有<ph id="ph2">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>的<ph id="ph3">&lt;xref:System.Double.NegativeInfinity&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Width">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle is read-only; its <ph id="ph2">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> cannot not be changed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph>矩形是只读的; 其<ph id="ph2">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>不能更改。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Width">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure to specify the dimensions and location of a rectangle using XAML.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph>结构，以指定的维度和使用 XAML 的矩形的位置。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Width">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Width">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">该示例还演示了如何查找有关新添加的矩形的大小和坐标信息和呈现中的信息<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>下面矩形。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Width">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Width" /&gt;</ph> is set to a negative value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Width" /&gt;</ph> 设置为一个负值。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Width">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Width" /&gt;</ph> is set on an <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Width" /&gt;</ph> 矩形上设置 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.X">
          <source>Gets or sets the x-axis value of the left side of the rectangle.</source>
          <target state="translated">获取或设置矩形左边的 x 轴值。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.X">
          <source>The x-axis value of the left side of the rectangle.</source>
          <target state="translated">矩形左边的 x 轴值。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.X">
          <source>Getting this property is equivalent to getting the <ph id="ph1">&lt;xref:System.Windows.Rect.Left%2A&gt;</ph> property.</source>
          <target state="translated">获取此属性等效于获取<ph id="ph1">&lt;xref:System.Windows.Rect.Left%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.X">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure to specify the dimensions and location of a rectangle using XAML.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph>结构，以指定的维度和使用 XAML 的矩形的位置。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.X">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.X">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">该示例还演示了如何查找有关新添加的矩形的大小和坐标信息和呈现中的信息<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>下面矩形。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.X">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Rect.X" /&gt;</ph> is set on an <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="P:System.Windows.Rect.X" /&gt;</ph> 矩形上设置 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Y">
          <source>Gets or sets the y-axis value of the top side of the rectangle.</source>
          <target state="translated">获取或设置矩形顶边的 y 轴值。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Y">
          <source>The y-axis value of the top side of the rectangle.</source>
          <target state="translated">矩形顶边的 y 轴值。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Y">
          <source>Getting this property is equivalent to getting the <ph id="ph1">&lt;xref:System.Windows.Rect.Top%2A&gt;</ph> property.</source>
          <target state="translated">获取此属性等效于获取<ph id="ph1">&lt;xref:System.Windows.Rect.Top%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Y">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure to specify the dimensions and location of a rectangle using XAML.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph>结构，以指定的维度和使用 XAML 的矩形的位置。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Y">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Y">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">该示例还演示了如何查找有关新添加的矩形的大小和坐标信息和呈现中的信息<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>下面矩形。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Y">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Y" /&gt;</ph> is set on an <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Y" /&gt;</ph> 矩形上设置 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>