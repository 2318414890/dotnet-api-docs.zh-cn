<Type Name="Rect" FullName="System.Windows.Rect">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="87c056618a8f3bab5eb7ae058e6ab8511f4e023e" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37491802" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Rect : IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Rect extends System.ValueType implements class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Rect" />
  <TypeSignature Language="VB.NET" Value="Public Structure Rect&#xA;Implements IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Rect : IFormattable" />
  <TypeSignature Language="F#" Value="type Rect = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.RectConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Converters.RectValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="bf11c-101">Describes the width, height, and location of a rectangle.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bf11c-101">Describes the width, height, and location of a rectangle.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_Duration"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="bf11c-102">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="bf11c-102">XAML Attribute Usage</span></span>  
  
```  
<object property="x,y,width,height"/>  
```  
  
<a name="xamlValues_MinWidth"></a>   
## <a name="xaml-values"></a><span data-ttu-id="bf11c-103">XAML 值</span><span class="sxs-lookup"><span data-stu-id="bf11c-103">XAML Values</span></span>  
 <span data-ttu-id="bf11c-104">*x*</span><span class="sxs-lookup"><span data-stu-id="bf11c-104">*x*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="bf11c-105">左侧和右侧的矩形的 x 坐标位置。</span><span class="sxs-lookup"><span data-stu-id="bf11c-105">The x-coordinate location of the left side of the rectangle.</span></span>  
  
 <span data-ttu-id="bf11c-106">*y*</span><span class="sxs-lookup"><span data-stu-id="bf11c-106">*y*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="bf11c-107">矩形顶边的 y 坐标位置。</span><span class="sxs-lookup"><span data-stu-id="bf11c-107">The y-coordinate location of the top side of the rectangle.</span></span>  
  
 <span data-ttu-id="bf11c-108">*width*</span><span class="sxs-lookup"><span data-stu-id="bf11c-108">*width*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="bf11c-109">表示一个非负值<xref:System.Windows.Rect.Width%2A>的矩形。</span><span class="sxs-lookup"><span data-stu-id="bf11c-109">A non-negative value that represents the <xref:System.Windows.Rect.Width%2A> of the rectangle.</span></span>  
  
 <span data-ttu-id="bf11c-110">*高度*</span><span class="sxs-lookup"><span data-stu-id="bf11c-110">*height*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="bf11c-111">表示一个非负值<xref:System.Windows.Rect.Height%2A>的矩形。</span><span class="sxs-lookup"><span data-stu-id="bf11c-111">A non-negative value that represents the <xref:System.Windows.Rect.Height%2A> of the rectangle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf11c-112">下面的示例演示如何使用<xref:System.Windows.Rect>结构，以指定的维度和使用 XAML 的矩形的位置。</span><span class="sxs-lookup"><span data-stu-id="bf11c-112">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="bf11c-113">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</span><span class="sxs-lookup"><span data-stu-id="bf11c-113">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="bf11c-114">此示例还说明如何查找有关新矩形的大小和坐标信息和呈现中的信息<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="bf11c-114">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bf11c-115">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-115">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Size -&gt; System.Windows.Rect" Usage="new System.Windows.Rect size" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="bf11c-116">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-116">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-117">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is of the specified size and is located at (0,0).</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-117">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is of the specified size and is located at (0,0).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bf11c-118">下面的示例演示如何创建一个新<xref:System.Windows.Rect>结构的<xref:System.Windows.Rect.%23ctor%28System.Windows.Size%29>构造函数。</span><span class="sxs-lookup"><span data-stu-id="bf11c-118">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Size%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample2_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (point1 As Point, point2 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Point * System.Windows.Point -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (point1, point2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="bf11c-119">The first point that the new rectangle must contain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-119">The first point that the new rectangle must contain.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="bf11c-120">The second point that the new rectangle must contain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-120">The second point that the new rectangle must contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-121">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is exactly large enough to contain the two specified points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-121">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is exactly large enough to contain the two specified points.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bf11c-122">下面的示例演示如何创建一个新<xref:System.Windows.Rect>结构的<xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Point%29>构造函数。</span><span class="sxs-lookup"><span data-stu-id="bf11c-122">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Point%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample3_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Point location, System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point location, valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Point location, System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Point * System.Windows.Size -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (location, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="location" Type="System.Windows.Point" />
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="location">
          <span data-ttu-id="bf11c-123">A point that specifies the location of the top-left corner of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-123">A point that specifies the location of the top-left corner of the rectangle.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="bf11c-124">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-124">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-125">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that has the specified top-left corner location and the specified width and height.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-125">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that has the specified top-left corner location and the specified width and height.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bf11c-126">下面的示例演示如何创建一个新<xref:System.Windows.Rect>结构的<xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Size%29>构造函数。</span><span class="sxs-lookup"><span data-stu-id="bf11c-126">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Size%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample4_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (point, vector)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="bf11c-127">The first point the rectangle must contain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-127">The first point the rectangle must contain.</span>
          </span>
        </param>
        <param name="vector">
          <span data-ttu-id="bf11c-128">The amount to offset the specified point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-128">The amount to offset the specified point.</span>
          </span>
          <span data-ttu-id="bf11c-129">The resulting rectangle will be exactly large enough to contain both points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-129">The resulting rectangle will be exactly large enough to contain both points.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-130">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is exactly large enough to contain the specified point and the sum of the specified point and the specified vector.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-130">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is exactly large enough to contain the specified point and the sum of the specified point and the specified vector.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bf11c-131">下面的示例演示如何创建一个新<xref:System.Windows.Rect>结构的<xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Vector%29>构造函数。</span><span class="sxs-lookup"><span data-stu-id="bf11c-131">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Vector%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample5_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample5_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (double x, double y, double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y, float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Double, y As Double, width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(double x, double y, double width, double height);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : double * double * double * double -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (x, y, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="bf11c-132">The x-coordinate of the top-left corner of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-132">The x-coordinate of the top-left corner of the rectangle.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="bf11c-133">The y-coordinate of the top-left corner of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-133">The y-coordinate of the top-left corner of the rectangle.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="bf11c-134">The width of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-134">The width of the rectangle.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="bf11c-135">The height of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-135">The height of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-136">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that has the specified x-coordinate, y-coordinate, width, and height.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-136">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that has the specified x-coordinate, y-coordinate, width, and height.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-137">下面的示例演示如何创建一个新<xref:System.Windows.Rect>结构的<xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29>构造函数。</span><span class="sxs-lookup"><span data-stu-id="bf11c-137">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample6_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample6_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bf11c-138">
            <paramref name="width" /> is a negative value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-138">
              <paramref name="width" /> is a negative value.</span>
          </span>
          <span data-ttu-id="bf11c-139">-or-  <paramref name="height" /> is a negative value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-139">-or-  <paramref name="height" /> is a negative value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Bottom">
      <MemberSignature Language="C#" Value="public double Bottom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Bottom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Bottom" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bottom As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Bottom { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Bottom : double" Usage="System.Windows.Rect.Bottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf11c-140">Gets the y-axis value of the bottom of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-140">Gets the y-axis value of the bottom of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf11c-141">矩形底边的 y 轴值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-141">The y-axis value of the bottom of the rectangle.</span>
          </span>
          <span data-ttu-id="bf11c-142">如果矩形为空，则值是<see cref="F:System.Double.NegativeInfinity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-142">If the rectangle is empty, the value is <see cref="F:System.Double.NegativeInfinity" /> .</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-143">矩形底边的 y 轴值等于的总和<xref:System.Windows.Rect.Y%2A>和<xref:System.Windows.Rect.Height%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bf11c-143">The y-axis value of the bottom of the rectangle is equal to the sum of the <xref:System.Windows.Rect.Y%2A> and <xref:System.Windows.Rect.Height%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf11c-144">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</span><span class="sxs-lookup"><span data-stu-id="bf11c-144">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="bf11c-145">此示例还说明如何查找有关新矩形的大小和坐标信息和呈现中的信息<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="bf11c-145">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomLeft">
      <MemberSignature Language="C#" Value="public System.Windows.Point BottomLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point BottomLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.BottomLeft" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BottomLeft As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point BottomLeft { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.BottomLeft : System.Windows.Point" Usage="System.Windows.Rect.BottomLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf11c-146">Gets the position of the bottom-left corner of the rectangle</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-146">Gets the position of the bottom-left corner of the rectangle</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf11c-147">矩形的左下角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-147">The position of the bottom-left corner of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-148">矩形的左下角的位置是否等于 (<xref:System.Windows.Rect.X%2A>， <xref:System.Windows.Rect.Y%2A>  +  <xref:System.Windows.Rect.Height%2A>)。</span><span class="sxs-lookup"><span data-stu-id="bf11c-148">The position of the bottom-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A> + <xref:System.Windows.Rect.Height%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf11c-149">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</span><span class="sxs-lookup"><span data-stu-id="bf11c-149">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="bf11c-150">此示例还说明如何查找有关新矩形的大小和坐标信息和呈现中的信息<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="bf11c-150">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomRight">
      <MemberSignature Language="C#" Value="public System.Windows.Point BottomRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point BottomRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.BottomRight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BottomRight As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point BottomRight { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.BottomRight : System.Windows.Point" Usage="System.Windows.Rect.BottomRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf11c-151">Gets the position of the bottom-right corner of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-151">Gets the position of the bottom-right corner of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf11c-152">矩形的右下角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-152">The position of the bottom-right corner of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-153">矩形的右下角的位置是否等于 (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>， <xref:System.Windows.Rect.Y%2A>  +  <xref:System.Windows.Rect.Height%2A>)。</span><span class="sxs-lookup"><span data-stu-id="bf11c-153">The position of the bottom-right corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A> + <xref:System.Windows.Rect.Height%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf11c-154">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</span><span class="sxs-lookup"><span data-stu-id="bf11c-154">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="bf11c-155">此示例还说明如何查找有关新矩形的大小和坐标信息和呈现中的信息<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="bf11c-155">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bf11c-156">Indicates whether the rectangle contains the specified point or rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-156">Indicates whether the rectangle contains the specified point or rectangle.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Contains(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Point -&gt; bool" Usage="rect.Contains point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="bf11c-157">The point to check.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-157">The point to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-158">Indicates whether the rectangle contains the specified point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-158">Indicates whether the rectangle contains the specified point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf11c-159">
            <see langword="true" /> if the rectangle contains the specified point; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-159">
              <see langword="true" /> if the rectangle contains the specified point; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bf11c-160">下面的示例演示如何使用<xref:System.Windows.Rect.Contains%28System.Windows.Point%29>方法，以确定是否包含指定矩形<xref:System.Windows.Point>。</span><span class="sxs-lookup"><span data-stu-id="bf11c-160">The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Windows.Point%29> method to determine if the rectangle contains the specified <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[RectExamples_snip#ContainsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Contains(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Rect -&gt; bool" Usage="rect.Contains rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="bf11c-161">The rectangle to check.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-161">The rectangle to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-162">Indicates whether the rectangle contains the specified rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-162">Indicates whether the rectangle contains the specified rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf11c-163">
            <see langword="true" /> if <paramref name="rect" /> is entirely contained by the rectangle; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-163">
              <see langword="true" /> if <paramref name="rect" /> is entirely contained by the rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bf11c-164">下面的示例演示如何使用<xref:System.Windows.Rect.Contains%28System.Windows.Rect%29>方法来确定一个矩形是否包含在另一个矩形。</span><span class="sxs-lookup"><span data-stu-id="bf11c-164">The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Windows.Rect%29> method to determine if one rectangle is contained by another rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#ContainsExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample2_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Contains(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (x As Double, y As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(double x, double y);" />
      <MemberSignature Language="F#" Value="member this.Contains : double * double -&gt; bool" Usage="rect.Contains (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="bf11c-165">The x-coordinate of the point to check.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-165">The x-coordinate of the point to check.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="bf11c-166">The y-coordinate of the point to check.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-166">The y-coordinate of the point to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-167">Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-167">Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf11c-168">
            <see langword="true" /> if (<paramref name="x" />, <paramref name="y" />) is contained by the rectangle; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-168">
              <see langword="true" /> if (<paramref name="x" />, <paramref name="y" />) is contained by the rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bf11c-169">下面的示例演示如何使用<xref:System.Windows.Rect.Contains%28System.Double%2CSystem.Double%29>方法，以确定矩形中是否包含指定给定的 x 坐标和 y 坐标的点。</span><span class="sxs-lookup"><span data-stu-id="bf11c-169">The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Double%2CSystem.Double%29> method to determine if the rectangle contains the point specified by the given x-coordinate and y-coordinate.</span></span>  
  
 [!code-csharp[RectExamples_snip#ContainsExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample3_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Rect Empty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Rect Empty { System::Windows::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.Empty : System.Windows.Rect" Usage="System.Windows.Rect.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf11c-170">Gets a special value that represents a rectangle with no position or area.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-170">Gets a special value that represents a rectangle with no position or area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf11c-171">空矩形，其<see cref="P:System.Windows.Rect.X" />和<see cref="P:System.Windows.Rect.Y" />的属性值<see cref="F:System.Double.PositiveInfinity" />，并且具有<see cref="P:System.Windows.Rect.Width" />并<see cref="P:System.Windows.Rect.Height" />属性值的<see cref="F:System.Double.NegativeInfinity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-171">The empty rectangle, which has <see cref="P:System.Windows.Rect.X" /> and <see cref="P:System.Windows.Rect.Y" /> property values of <see cref="F:System.Double.PositiveInfinity" />, and has <see cref="P:System.Windows.Rect.Width" /> and <see cref="P:System.Windows.Rect.Height" /> property values of <see cref="F:System.Double.NegativeInfinity" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-172">避免涉及空矩形的数学计算。</span><span class="sxs-lookup"><span data-stu-id="bf11c-172">Avoid mathematical computations involving empty rectangles.</span></span> <span data-ttu-id="bf11c-173">因为这两<xref:System.Windows.Rect.X%2A>和<xref:System.Windows.Rect.Y%2A>是无限值，这些操作会严重影响操作的处理器。</span><span class="sxs-lookup"><span data-stu-id="bf11c-173">Because both <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> are infinite values, processor operations are severely impaired by these operations.</span></span> <span data-ttu-id="bf11c-174">涉及这些值的比较不会影响应用程序的性能。</span><span class="sxs-lookup"><span data-stu-id="bf11c-174">Comparisons involving these values will not affect application performance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.IsEmpty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bf11c-175">Indicates whether two rectangles are equal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-175">Indicates whether two rectangles are equal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="rect.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="bf11c-176">The object to compare to the current rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-176">The object to compare to the current rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-177">Indicates whether the specified object is equal to the current rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-177">Indicates whether the specified object is equal to the current rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf11c-178">
            <see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Windows.Rect" /> and has the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values as the current rectangle; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-178">
              <see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Windows.Rect" /> and has the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values as the current rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-179">此操作测试对象相等。</span><span class="sxs-lookup"><span data-stu-id="bf11c-179">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="bf11c-180">在此比较的两个实例<xref:System.Double.NaN?displayProperty=nameWithType>被视为相等。</span><span class="sxs-lookup"><span data-stu-id="bf11c-180">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bf11c-181">由描述矩形的位置和尺寸<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="bf11c-181">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="bf11c-182">因为<xref:System.Double>值可能会丢失精度运算时，逻辑上相等的两个值之间的比较可能会失败。</span><span class="sxs-lookup"><span data-stu-id="bf11c-182">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf11c-183">下面的示例演示如何使用<xref:System.Windows.Rect.Equals%28System.Object%29>方法，以确定一个矩形是否等于指定的对象。</span><span class="sxs-lookup"><span data-stu-id="bf11c-183">The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Object%29> method to determine if a rectangle is equal to a specified object.</span></span>  
  
 [!code-csharp[RectExamples_snip#EqualsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <altmember cref="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Rect value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Rect value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Equals(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Rect value);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Rect -&gt; bool" Usage="rect.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="bf11c-184">The rectangle to compare to the current rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-184">The rectangle to compare to the current rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-185">Indicates whether the specified rectangle is equal to the current rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-185">Indicates whether the specified rectangle is equal to the current rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf11c-186">
            <see langword="true" /> if the specified rectangle has the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values as the current rectangle; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-186">
              <see langword="true" /> if the specified rectangle has the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values as the current rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-187">此操作测试对象相等。</span><span class="sxs-lookup"><span data-stu-id="bf11c-187">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="bf11c-188">在此比较的两个实例<xref:System.Double.NaN?displayProperty=nameWithType>被视为相等。</span><span class="sxs-lookup"><span data-stu-id="bf11c-188">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bf11c-189">由描述矩形的位置和尺寸<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="bf11c-189">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="bf11c-190">因为<xref:System.Double>值可能会丢失精度运算时，逻辑上相等的两个值之间的比较可能会失败。</span><span class="sxs-lookup"><span data-stu-id="bf11c-190">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf11c-191">下面的示例演示如何使用<xref:System.Windows.Rect.Equals%28System.Windows.Rect%29>方法，以确定一个矩形是否等于指定的矩形。</span><span class="sxs-lookup"><span data-stu-id="bf11c-191">The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Windows.Rect%29> method to determine if a rectangle is equal to a specified rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#EqualsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <altmember cref="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (rect1 As Rect, rect2 As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Rect * System.Windows.Rect -&gt; bool" Usage="System.Windows.Rect.Equals (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1">
          <span data-ttu-id="bf11c-192">The first rectangle to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-192">The first rectangle to compare.</span>
          </span>
        </param>
        <param name="rect2">
          <span data-ttu-id="bf11c-193">The second rectangle to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-193">The second rectangle to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-194">Indicates whether the specified rectangles are equal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-194">Indicates whether the specified rectangles are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf11c-195">
            <see langword="true" /> if the rectangles have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-195">
              <see langword="true" /> if the rectangles have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-196">此操作测试对象相等。</span><span class="sxs-lookup"><span data-stu-id="bf11c-196">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="bf11c-197">在此比较的两个实例<xref:System.Double.NaN?displayProperty=nameWithType>被视为相等。</span><span class="sxs-lookup"><span data-stu-id="bf11c-197">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bf11c-198">由描述矩形的位置和尺寸<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="bf11c-198">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="bf11c-199">因为<xref:System.Double>值可能会丢失精度运算时，逻辑上相等的两个值之间的比较可能会失败。</span><span class="sxs-lookup"><span data-stu-id="bf11c-199">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf11c-200">下面的示例演示如何使用<xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29>方法，以确定一个矩形是否等于另一个。</span><span class="sxs-lookup"><span data-stu-id="bf11c-200">The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to determine if one rectangle is equal to another.</span></span>  
  
 [!code-csharp[RectExamples_snip#EqualsExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <altmember cref="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="rect.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bf11c-201">Creates a hash code for the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-201">Creates a hash code for the rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf11c-202">A hash code for the current <see cref="T:System.Windows.Rect" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-202">A hash code for the current <see cref="T:System.Windows.Rect" /> structure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-203">此方法创建的哈希代码通过使用<xref:System.Windows.Rect.X%2A>， <xref:System.Windows.Rect.Y%2A>， <xref:System.Windows.Rect.Width%2A>，和<xref:System.Windows.Rect.Height%2A>属性值。</span><span class="sxs-lookup"><span data-stu-id="bf11c-203">This method creates a hash code by using the <xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>, <xref:System.Windows.Rect.Width%2A>, and <xref:System.Windows.Rect.Height%2A> property values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf11c-204">下面的示例演示如何使用<xref:System.Windows.Rect.GetHashCode%2A>方法获取的哈希代码<xref:System.Windows.Rect>。</span><span class="sxs-lookup"><span data-stu-id="bf11c-204">The following example shows how to use the <xref:System.Windows.Rect.GetHashCode%2A> method to get the hash code of a <xref:System.Windows.Rect>.</span></span>  
  
 [!code-csharp[RectExamples_snip#GetHashCodeExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#gethashcodeexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Height : double with get, set" Usage="System.Windows.Rect.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf11c-205">Gets or sets the height of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-205">Gets or sets the height of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf11c-206">一个正数，表示矩形的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-206">A positive number that represents the height of the rectangle.</span>
          </span>
          <span data-ttu-id="bf11c-207">默认值为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-207">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-208"><xref:System.Windows.Rect.Empty%2A>矩形具有<xref:System.Windows.Rect.Height%2A>的<xref:System.Double.NegativeInfinity>。</span><span class="sxs-lookup"><span data-stu-id="bf11c-208">The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Height%2A> of <xref:System.Double.NegativeInfinity>.</span></span> <span data-ttu-id="bf11c-209"><xref:System.Windows.Rect.Empty%2A>矩形是只读的; 其<xref:System.Windows.Rect.Height%2A>不能更改。</span><span class="sxs-lookup"><span data-stu-id="bf11c-209">The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Height%2A> cannot not be changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf11c-210">下面的示例演示如何使用<xref:System.Windows.Rect>结构，以指定的维度和使用 XAML 的矩形的位置。</span><span class="sxs-lookup"><span data-stu-id="bf11c-210">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="bf11c-211">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</span><span class="sxs-lookup"><span data-stu-id="bf11c-211">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="bf11c-212">此示例还说明如何查找有关新矩形的大小和坐标信息和呈现中的信息<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="bf11c-212">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bf11c-213">
            <see cref="P:System.Windows.Rect.Height" /> is set to a negative value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-213">
              <see cref="P:System.Windows.Rect.Height" /> is set to a negative value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bf11c-214">
            <see cref="P:System.Windows.Rect.Height" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-214">
              <see cref="P:System.Windows.Rect.Height" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Rect.Width" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Inflate">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bf11c-215">Creates a rectangle that results from expanding or shrinking a rectangle by the specified amount.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-215">Creates a rectangle that results from expanding or shrinking a rectangle by the specified amount.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public void Inflate (System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Inflate(valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Inflate(System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="member this.Inflate : System.Windows.Size -&gt; unit" Usage="rect.Inflate size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="bf11c-216">Specifies the amount to expand the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-216">Specifies the amount to expand the rectangle.</span>
          </span>
          <span data-ttu-id="bf11c-217">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Width" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Left" /> and <see cref="P:System.Windows.Rect.Right" /> properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-217">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Width" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Left" /> and <see cref="P:System.Windows.Rect.Right" /> properties.</span>
          </span>
          <span data-ttu-id="bf11c-218">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Height" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Top" /> and <see cref="P:System.Windows.Rect.Bottom" /> properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-218">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Height" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Top" /> and <see cref="P:System.Windows.Rect.Bottom" /> properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-219">Expands the rectangle by using the specified <see cref="T:System.Windows.Size" />, in all directions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-219">Expands the rectangle by using the specified <see cref="T:System.Windows.Size" />, in all directions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-220"><xref:System.Windows.Rect.Width%2A>的所得矩形的大小为增量进行递增两次<xref:System.Windows.Size.Width%2A>指定的<xref:System.Windows.Size>结构，因为扩充左侧和右侧的矩形。</span><span class="sxs-lookup"><span data-stu-id="bf11c-220">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated.</span></span> <span data-ttu-id="bf11c-221">同样，<xref:System.Windows.Rect.Height%2A>的所得矩形的大小为增量进行递增两次<xref:System.Windows.Size.Height%2A>指定的<xref:System.Windows.Size>结构。</span><span class="sxs-lookup"><span data-stu-id="bf11c-221">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf11c-222">下面的示例演示如何使用<xref:System.Windows.Rect.Inflate%28System.Windows.Size%29>方法来增加一个矩形的大小。</span><span class="sxs-lookup"><span data-stu-id="bf11c-222">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Size%29> method to increase the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bf11c-223">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-223">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public void Inflate (double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Inflate(float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Inflate (width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Inflate(double width, double height);" />
      <MemberSignature Language="F#" Value="member this.Inflate : double * double -&gt; unit" Usage="rect.Inflate (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width">
          <span data-ttu-id="bf11c-224">The amount by which to expand or shrink the left and right sides of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-224">The amount by which to expand or shrink the left and right sides of the rectangle.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="bf11c-225">The amount by which to expand or shrink the top and bottom sides of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-225">The amount by which to expand or shrink the top and bottom sides of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-226">Expands or shrinks the rectangle by using the specified width and height amounts, in all directions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-226">Expands or shrinks the rectangle by using the specified width and height amounts, in all directions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-227"><xref:System.Windows.Rect.Width%2A>的增加或减少由两次指定的宽度偏移量，因为它应用于左侧和右侧的矩形时生成的矩形。</span><span class="sxs-lookup"><span data-stu-id="bf11c-227">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.</span></span> <span data-ttu-id="bf11c-228">同样，<xref:System.Windows.Rect.Height%2A>的所得矩形的大小增加或减少了两次指定的高度。</span><span class="sxs-lookup"><span data-stu-id="bf11c-228">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height.</span></span>  
  
 <span data-ttu-id="bf11c-229">如果指定的宽度或高度由多个其当前收缩矩形<xref:System.Windows.Rect.Width%2A>或<xref:System.Windows.Rect.Height%2A>— 导致该矩形区域为负，矩形将成为<xref:System.Windows.Rect.Empty%2A>矩形。</span><span class="sxs-lookup"><span data-stu-id="bf11c-229">If the specified width or height shrink the rectangle by more than its current <xref:System.Windows.Rect.Width%2A> or <xref:System.Windows.Rect.Height%2A>—giving the rectangle a negative area—the rectangle becomes the <xref:System.Windows.Rect.Empty%2A> rectangle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf11c-230">下面的示例演示如何使用<xref:System.Windows.Rect.Inflate%28System.Double%2CSystem.Double%29>方法，以更改矩形的大小。</span><span class="sxs-lookup"><span data-stu-id="bf11c-230">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Double%2CSystem.Double%29> method to change the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bf11c-231">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-231">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Inflate (System.Windows.Rect rect, System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Inflate(valuetype System.Windows.Rect rect, valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Inflate(System::Windows::Rect rect, System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="static member Inflate : System.Windows.Rect * System.Windows.Size -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Inflate (rect, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="bf11c-232">The <see cref="T:System.Windows.Rect" /> structure to modify.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-232">The <see cref="T:System.Windows.Rect" /> structure to modify.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="bf11c-233">Specifies the amount to expand the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-233">Specifies the amount to expand the rectangle.</span>
          </span>
          <span data-ttu-id="bf11c-234">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Width" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Left" /> and <see cref="P:System.Windows.Rect.Right" /> properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-234">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Width" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Left" /> and <see cref="P:System.Windows.Rect.Right" /> properties.</span>
          </span>
          <span data-ttu-id="bf11c-235">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Height" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Top" /> and <see cref="P:System.Windows.Rect.Bottom" /> properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-235">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Height" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Top" /> and <see cref="P:System.Windows.Rect.Bottom" /> properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-236">Returns the rectangle that results from expanding the specified rectangle by the specified <see cref="T:System.Windows.Size" />, in all directions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-236">Returns the rectangle that results from expanding the specified rectangle by the specified <see cref="T:System.Windows.Size" />, in all directions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf11c-237">The resulting rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-237">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-238"><xref:System.Windows.Rect.Width%2A>的所得矩形的大小为增量进行递增两次<xref:System.Windows.Size.Width%2A>指定的<xref:System.Windows.Size>结构，因为扩充左侧和右侧的矩形。</span><span class="sxs-lookup"><span data-stu-id="bf11c-238">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated.</span></span> <span data-ttu-id="bf11c-239">同样，<xref:System.Windows.Rect.Height%2A>的所得矩形的大小为增量进行递增两次<xref:System.Windows.Size.Height%2A>指定的<xref:System.Windows.Size>结构。</span><span class="sxs-lookup"><span data-stu-id="bf11c-239">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf11c-240">下面的示例演示如何使用<xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Windows.Size%29>方法，以更改矩形的大小。</span><span class="sxs-lookup"><span data-stu-id="bf11c-240">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Windows.Size%29> method to change the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample3_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bf11c-241">
            <paramref name="rect" /> is an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-241">
              <paramref name="rect" /> is an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Inflate (System.Windows.Rect rect, double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Inflate(valuetype System.Windows.Rect rect, float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Inflate(System::Windows::Rect rect, double width, double height);" />
      <MemberSignature Language="F#" Value="static member Inflate : System.Windows.Rect * double * double -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Inflate (rect, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="bf11c-242">The <see cref="T:System.Windows.Rect" /> structure to modify.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-242">The <see cref="T:System.Windows.Rect" /> structure to modify.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="bf11c-243">The amount by which to expand or shrink the left and right sides of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-243">The amount by which to expand or shrink the left and right sides of the rectangle.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="bf11c-244">The amount by which to expand or shrink the top and bottom sides of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-244">The amount by which to expand or shrink the top and bottom sides of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-245">Creates a rectangle that results from expanding or shrinking the specified rectangle by the specified width and height amounts, in all directions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-245">Creates a rectangle that results from expanding or shrinking the specified rectangle by the specified width and height amounts, in all directions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf11c-246">The resulting rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-246">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-247"><xref:System.Windows.Rect.Width%2A>的增加或减少由两次指定的宽度偏移量，因为它应用于左侧和右侧的矩形时生成的矩形。</span><span class="sxs-lookup"><span data-stu-id="bf11c-247">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.</span></span> <span data-ttu-id="bf11c-248">同样，<xref:System.Windows.Rect.Height%2A>的所得矩形的大小增加或减少了两次指定的高度。</span><span class="sxs-lookup"><span data-stu-id="bf11c-248">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height.</span></span>  
  
 <span data-ttu-id="bf11c-249">如果指定的宽度或高度修饰符收缩超过了其当前矩形<xref:System.Windows.Rect.Width%2A>或<xref:System.Windows.Rect.Height%2A>— 导致该矩形区域为负，此方法返回<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="bf11c-249">If the specified width or height modifiers shrink the rectangle by more than its current <xref:System.Windows.Rect.Width%2A> or <xref:System.Windows.Rect.Height%2A>—giving the rectangle a negative area—this method returns <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf11c-250">下面的示例演示如何使用<xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29>方法，以更改矩形的大小。</span><span class="sxs-lookup"><span data-stu-id="bf11c-250">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> method to change the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample4_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bf11c-251">
            <paramref name="rect" /> is an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-251">
              <paramref name="rect" /> is an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Intersect">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bf11c-252">Finds the intersection of two rectangles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-252">Finds the intersection of two rectangles.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public void Intersect (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Intersect(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Intersect(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Intersect(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.Intersect : System.Windows.Rect -&gt; unit" Usage="rect.Intersect rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="bf11c-253">The rectangle to intersect with the current rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-253">The rectangle to intersect with the current rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-254">Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-254">Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-255">如果不存在任何交集，将成为当前矩形<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="bf11c-255">If no intersection exists, the current rectangle becomes <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf11c-256">下面的示例演示如何使用<xref:System.Windows.Rect.Intersect%28System.Windows.Rect%29>方法来查找两个矩形的交集，并将结果存储为一个矩形。</span><span class="sxs-lookup"><span data-stu-id="bf11c-256">The following example shows how to use the <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%29> method to find the intersection of two rectangles and store the result as a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#IntersectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Intersect (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Intersect(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Intersect (rect1 As Rect, rect2 As Rect) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Intersect(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Windows.Rect * System.Windows.Rect -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Intersect (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1">
          <span data-ttu-id="bf11c-257">The first rectangle to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-257">The first rectangle to compare.</span>
          </span>
        </param>
        <param name="rect2">
          <span data-ttu-id="bf11c-258">The second rectangle to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-258">The second rectangle to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-259">Returns the intersection of the specified rectangles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-259">Returns the intersection of the specified rectangles.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf11c-260">The intersection of the two rectangles, or <see cref="P:System.Windows.Rect.Empty" /> if no intersection exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-260">The intersection of the two rectangles, or <see cref="P:System.Windows.Rect.Empty" /> if no intersection exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-261">下面的示例演示如何使用<xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29>方法来查找两个矩形的交集。</span><span class="sxs-lookup"><span data-stu-id="bf11c-261">The following example shows how to use the <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to find the intersection of two rectangles.</span></span>  
  
 [!code-csharp[RectExamples_snip#IntersectExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="IntersectsWith">
      <MemberSignature Language="C#" Value="public bool IntersectsWith (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IntersectsWith(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IntersectsWith(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.IntersectsWith : System.Windows.Rect -&gt; bool" Usage="rect.IntersectsWith rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="bf11c-262">The rectangle to check.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-262">The rectangle to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-263">Indicates whether the specified rectangle intersects with the current rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-263">Indicates whether the specified rectangle intersects with the current rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf11c-264">
            <see langword="true" /> if the specified rectangle intersects with the current rectangle; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-264">
              <see langword="true" /> if the specified rectangle intersects with the current rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bf11c-265">下面的示例演示如何使用<xref:System.Windows.Rect.IntersectsWith%2A>方法确定两个矩形是否相交。</span><span class="sxs-lookup"><span data-stu-id="bf11c-265">The following example shows how to use the <xref:System.Windows.Rect.IntersectsWith%2A> method to determine if two rectangles intersect.</span></span>  
  
 [!code-csharp[RectExamples_snip#IntersectsWithExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectswithexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Windows.Rect.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf11c-266">Gets a value that indicates whether the rectangle is the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-266">Gets a value that indicates whether the rectangle is the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf11c-267">
            <see langword="true" /> 如果矩形<see cref="P:System.Windows.Rect.Empty" />矩形; 否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-267">
              <see langword="true" /> if the rectangle is the <see cref="P:System.Windows.Rect.Empty" /> rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-268">不使用此属性来测试零区域;一个具有零个区域的矩形不一定<xref:System.Windows.Rect.Empty%2A>矩形。</span><span class="sxs-lookup"><span data-stu-id="bf11c-268">Do not use this property to test for zero area; a rectangle with zero area is not necessarily the <xref:System.Windows.Rect.Empty%2A> rectangle.</span></span> <span data-ttu-id="bf11c-269">有关更多信息，请参见 <xref:System.Windows.Rect.Empty%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="bf11c-269">For more information, see the <xref:System.Windows.Rect.Empty%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.Empty" />
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Left" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Left : double" Usage="System.Windows.Rect.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf11c-270">Gets the x-axis value of the left side of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-270">Gets the x-axis value of the left side of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf11c-271">左侧和右侧的矩形的 x 轴值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-271">The x-axis value of the left side of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-272">获取此属性等效于获取<xref:System.Windows.Rect.X%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bf11c-272">Getting this property is equivalent to getting the <xref:System.Windows.Rect.X%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf11c-273">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</span><span class="sxs-lookup"><span data-stu-id="bf11c-273">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="bf11c-274">此示例还说明如何查找有关新矩形的大小和坐标信息和呈现中的信息<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="bf11c-274">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.X" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Windows.Point Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Location { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Windows.Point with get, set" Usage="System.Windows.Rect.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf11c-275">Gets or sets the position of the top-left corner of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-275">Gets or sets the position of the top-left corner of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf11c-276">矩形的左上角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-276">The position of the top-left corner of the rectangle.</span>
          </span>
          <span data-ttu-id="bf11c-277">默认值为 (0, 0)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-277">The default is (0, 0).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-278">矩形的左上角的位置是否等于 (<xref:System.Windows.Rect.X%2A>， <xref:System.Windows.Rect.Y%2A>)。</span><span class="sxs-lookup"><span data-stu-id="bf11c-278">The position of the top-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf11c-279">下面的示例演示如何使用<xref:System.Windows.Rect>结构，以指定的维度和使用 XAML 的矩形的位置。</span><span class="sxs-lookup"><span data-stu-id="bf11c-279">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="bf11c-280">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</span><span class="sxs-lookup"><span data-stu-id="bf11c-280">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="bf11c-281">此示例还说明如何查找有关新矩形的大小和坐标信息和呈现中的信息<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="bf11c-281">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bf11c-282">
            <see cref="P:System.Windows.Rect.Location" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-282">
              <see cref="P:System.Windows.Rect.Location" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Offset">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bf11c-283">Moves a rectangle by the specified amount.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-283">Moves a rectangle by the specified amount.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (System.Windows.Vector offsetVector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(valuetype System.Windows.Vector offsetVector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Offset (offsetVector As Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Offset(System::Windows::Vector offsetVector);" />
      <MemberSignature Language="F#" Value="member this.Offset : System.Windows.Vector -&gt; unit" Usage="rect.Offset offsetVector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetVector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="offsetVector">
          <span data-ttu-id="bf11c-284">A vector that specifies the horizontal and vertical amounts to move the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-284">A vector that specifies the horizontal and vertical amounts to move the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-285">Moves the rectangle by the specified vector.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-285">Moves the rectangle by the specified vector.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-286">调用此方法在空矩形 (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) 不允许。</span><span class="sxs-lookup"><span data-stu-id="bf11c-286">Calling this method on an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
 <span data-ttu-id="bf11c-287">请注意，调用<xref:System.Windows.Rect.Offset%2A>方法才会起作用，如果可以更改<xref:System.Windows.Rect.X%2A>和<xref:System.Windows.Rect.Y%2A>直接属性。</span><span class="sxs-lookup"><span data-stu-id="bf11c-287">Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly.</span></span> <span data-ttu-id="bf11c-288">因为<xref:System.Windows.Rect>是值类型，如果引用<xref:System.Windows.Rect>对象通过属性或索引器，获取不到对象的引用对象的副本。</span><span class="sxs-lookup"><span data-stu-id="bf11c-288">Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object.</span></span> <span data-ttu-id="bf11c-289">如果您尝试更改<xref:System.Windows.Rect.X%2A>或<xref:System.Windows.Rect.Y%2A>属性或索引器的引用上, 发生编译器错误。</span><span class="sxs-lookup"><span data-stu-id="bf11c-289">If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs.</span></span> <span data-ttu-id="bf11c-290">同样，调用<xref:System.Windows.Rect.Offset%2A>属性或索引器上不会更改基础对象。</span><span class="sxs-lookup"><span data-stu-id="bf11c-290">Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object.</span></span>  <span data-ttu-id="bf11c-291">如果你想要更改的值<xref:System.Windows.Rect>引用为属性或索引器，创建一个新<xref:System.Windows.Rect>，修改其字段，并分配<xref:System.Windows.Rect>回属性或索引器。</span><span class="sxs-lookup"><span data-stu-id="bf11c-291">If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf11c-292">下面的示例演示如何使用<xref:System.Windows.Rect.Offset%28System.Windows.Vector%29>方法，以更改矩形的位置。</span><span class="sxs-lookup"><span data-stu-id="bf11c-292">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Vector%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bf11c-293">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-293">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Offset (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Offset(double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="member this.Offset : double * double -&gt; unit" Usage="rect.Offset (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX">
          <span data-ttu-id="bf11c-294">The amount to move the rectangle horizontally.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-294">The amount to move the rectangle horizontally.</span>
          </span>
        </param>
        <param name="offsetY">
          <span data-ttu-id="bf11c-295">The amount to move the rectangle vertically.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-295">The amount to move the rectangle vertically.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-296">Moves the rectangle by the specified horizontal and vertical amounts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-296">Moves the rectangle by the specified horizontal and vertical amounts.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-297">调用此方法在空矩形 (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) 不允许。</span><span class="sxs-lookup"><span data-stu-id="bf11c-297">Calling this method on an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
 <span data-ttu-id="bf11c-298">请注意，调用<xref:System.Windows.Rect.Offset%2A>方法才会起作用，如果可以更改<xref:System.Windows.Rect.X%2A>和<xref:System.Windows.Rect.Y%2A>直接属性。</span><span class="sxs-lookup"><span data-stu-id="bf11c-298">Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly.</span></span> <span data-ttu-id="bf11c-299">因为<xref:System.Windows.Rect>是值类型，如果引用<xref:System.Windows.Rect>对象通过属性或索引器，获取不到对象的引用对象的副本。</span><span class="sxs-lookup"><span data-stu-id="bf11c-299">Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object.</span></span> <span data-ttu-id="bf11c-300">如果您尝试更改<xref:System.Windows.Rect.X%2A>或<xref:System.Windows.Rect.Y%2A>属性或索引器的引用上, 发生编译器错误。</span><span class="sxs-lookup"><span data-stu-id="bf11c-300">If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs.</span></span> <span data-ttu-id="bf11c-301">同样，调用<xref:System.Windows.Rect.Offset%2A>属性或索引器上不会更改基础对象。</span><span class="sxs-lookup"><span data-stu-id="bf11c-301">Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object.</span></span>  <span data-ttu-id="bf11c-302">如果你想要更改的值<xref:System.Windows.Rect>引用为属性或索引器，创建一个新<xref:System.Windows.Rect>，修改其字段，并分配<xref:System.Windows.Rect>回属性或索引器。</span><span class="sxs-lookup"><span data-stu-id="bf11c-302">If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf11c-303">下面的示例演示如何使用<xref:System.Windows.Rect.Offset%28System.Double%2CSystem.Double%29>方法，以更改矩形的位置。</span><span class="sxs-lookup"><span data-stu-id="bf11c-303">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Double%2CSystem.Double%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bf11c-304">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-304">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Offset (System.Windows.Rect rect, System.Windows.Vector offsetVector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Offset(valuetype System.Windows.Rect rect, valuetype System.Windows.Vector offsetVector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Offset(System::Windows::Rect rect, System::Windows::Vector offsetVector);" />
      <MemberSignature Language="F#" Value="static member Offset : System.Windows.Rect * System.Windows.Vector -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Offset (rect, offsetVector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="offsetVector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="bf11c-305">The original rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-305">The original rectangle.</span>
          </span>
        </param>
        <param name="offsetVector">
          <span data-ttu-id="bf11c-306">A vector that specifies the horizontal and vertical offsets for the new rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-306">A vector that specifies the horizontal and vertical offsets for the new rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-307">Returns a rectangle that is offset from the specified rectangle by using the specified vector.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-307">Returns a rectangle that is offset from the specified rectangle by using the specified vector.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf11c-308">The resulting rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-308">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-309">调用此方法替换为空矩形 (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) 不允许。</span><span class="sxs-lookup"><span data-stu-id="bf11c-309">Calling this method with an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf11c-310">下面的示例演示如何使用<xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Windows.Vector%29>方法，以更改矩形的位置。</span><span class="sxs-lookup"><span data-stu-id="bf11c-310">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Windows.Vector%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample3_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bf11c-311">
            <paramref name="rect" /> is <see cref="P:System.Windows.Rect.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-311">
              <paramref name="rect" /> is <see cref="P:System.Windows.Rect.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Offset (System.Windows.Rect rect, double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Offset(valuetype System.Windows.Rect rect, float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Offset(System::Windows::Rect rect, double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="static member Offset : System.Windows.Rect * double * double -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Offset (rect, offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="bf11c-312">The rectangle to move.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-312">The rectangle to move.</span>
          </span>
        </param>
        <param name="offsetX">
          <span data-ttu-id="bf11c-313">The horizontal offset for the new rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-313">The horizontal offset for the new rectangle.</span>
          </span>
        </param>
        <param name="offsetY">
          <span data-ttu-id="bf11c-314">The vertical offset for the new rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-314">The vertical offset for the new rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-315">Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-315">Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf11c-316">The resulting rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-316">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-317">调用此方法替换为空矩形 (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) 不允许。</span><span class="sxs-lookup"><span data-stu-id="bf11c-317">Calling this method with an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf11c-318">下面的示例演示如何使用<xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29>方法，以更改矩形的位置。</span><span class="sxs-lookup"><span data-stu-id="bf11c-318">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample4_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bf11c-319">
            <paramref name="rect" /> is <see cref="P:System.Windows.Rect.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-319">
              <paramref name="rect" /> is <see cref="P:System.Windows.Rect.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (rect1 As Rect, rect2 As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Rect * System.Windows.Rect -&gt; bool" Usage="rect1 = rect2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1">
          <span data-ttu-id="bf11c-320">The first rectangle to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-320">The first rectangle to compare.</span>
          </span>
        </param>
        <param name="rect2">
          <span data-ttu-id="bf11c-321">The second rectangle to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-321">The second rectangle to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-322">Compares two rectangles for exact equality.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-322">Compares two rectangles for exact equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf11c-323">
            <see langword="true" /> if the rectangles have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-323">
              <see langword="true" /> if the rectangles have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-324">此操作测试对象相等。</span><span class="sxs-lookup"><span data-stu-id="bf11c-324">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="bf11c-325">在此比较的两个实例<xref:System.Double.NaN?displayProperty=nameWithType>被视为相等。</span><span class="sxs-lookup"><span data-stu-id="bf11c-325">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bf11c-326">由描述矩形的位置和尺寸<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="bf11c-326">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="bf11c-327">因为<xref:System.Double>值可能会丢失精度运算时，逻辑上相等的两个值之间的比较可能会失败。</span><span class="sxs-lookup"><span data-stu-id="bf11c-327">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
 <span data-ttu-id="bf11c-328">此运算符的等效方法是 <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="bf11c-328">The equivalent method for this operator is <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="bf11c-329">下面的示例演示如何使用<xref:System.Windows.Rect.op_Equality%2A>运算符以确定两个矩形是否完全相等。</span><span class="sxs-lookup"><span data-stu-id="bf11c-329">The following example shows how to use the <xref:System.Windows.Rect.op_Equality%2A> operator to determine if two rectangles are exactly equal.</span></span>  
  
 [!code-csharp[RectExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#overloadedequalityoperatorexample)]
 [!code-vb[RectExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#overloadedequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (rect1 As Rect, rect2 As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Rect * System.Windows.Rect -&gt; bool" Usage="System.Windows.Rect.op_Inequality (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1">
          <span data-ttu-id="bf11c-330">The first rectangle to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-330">The first rectangle to compare.</span>
          </span>
        </param>
        <param name="rect2">
          <span data-ttu-id="bf11c-331">The second rectangle to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-331">The second rectangle to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-332">Compares two rectangles for inequality.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-332">Compares two rectangles for inequality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf11c-333">
            <see langword="true" /> if the rectangles do not have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-333">
              <see langword="true" /> if the rectangles do not have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-334">此操作测试对象不相等。</span><span class="sxs-lookup"><span data-stu-id="bf11c-334">This operation tests for object inequality.</span></span>  
  
 <span data-ttu-id="bf11c-335">在此比较的两个实例<xref:System.Double.NaN?displayProperty=nameWithType>被视为相等。</span><span class="sxs-lookup"><span data-stu-id="bf11c-335">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bf11c-336">由描述矩形的位置和尺寸<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="bf11c-336">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="bf11c-337">因为<xref:System.Double>值可能会丢失精度运算时，逻辑上相等的两个值之间的比较可能会失败。</span><span class="sxs-lookup"><span data-stu-id="bf11c-337">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
 <span data-ttu-id="bf11c-338">此运算符的等效方法是 <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="bf11c-338">The equivalent method for this operator is <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="bf11c-339">下面的示例演示如何使用<xref:System.Windows.Rect.op_Inequality%2A>运算符以确定两个矩形是否不完全相等。</span><span class="sxs-lookup"><span data-stu-id="bf11c-339">The following example shows how to use the <xref:System.Windows.Rect.op_Inequality%2A> operator to determine if two rectangles are not exactly equal.</span></span>  
  
 [!code-csharp[RectExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#overloadedinequalityoperatorexample)]
 [!code-vb[RectExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#overloadedinequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Parse(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (source As String) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Parse(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Parse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="bf11c-340">The string representation of the rectangle, in the form "x, y, width, height".</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-340">The string representation of the rectangle, in the form "x, y, width, height".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-341">Creates a new rectangle from the specified string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-341">Creates a new rectangle from the specified string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf11c-342">The resulting rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-342">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bf11c-343">下面的示例演示如何使用<xref:System.Windows.Rect.Parse%2A>方法将转换成的矩形的字符串表示形式<xref:System.Windows.Rect>结构。</span><span class="sxs-lookup"><span data-stu-id="bf11c-343">The following example shows how to use the <xref:System.Windows.Rect.Parse%2A> method to convert a string representation of a rectangle into a <xref:System.Windows.Rect> structure.</span></span>  
  
 [!code-csharp[RectExamples_snip#ParseExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#parseexample)]
 [!code-vb[RectExamples_snip#ParseExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#parseexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public double Right { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Right" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Right" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Right As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Right { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Right : double" Usage="System.Windows.Rect.Right" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf11c-344">Gets the x-axis value of the right side of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-344">Gets the x-axis value of the right side of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf11c-345">右侧的矩形的 x 轴值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-345">The x-axis value of the right side of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-346">矩形右侧的 x 轴值等于的总和<xref:System.Windows.Rect.X%2A>和<xref:System.Windows.Rect.Width%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bf11c-346">The x-axis value of the right side of the rectangle is equal to the sum of the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Width%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf11c-347">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</span><span class="sxs-lookup"><span data-stu-id="bf11c-347">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="bf11c-348">此示例还说明如何查找有关新矩形的大小和坐标信息和呈现中的信息<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="bf11c-348">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (double scaleX, double scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float64 scaleX, float64 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Double, scaleY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(double scaleX, double scaleY);" />
      <MemberSignature Language="F#" Value="member this.Scale : double * double -&gt; unit" Usage="rect.Scale (scaleX, scaleY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX">
          <span data-ttu-id="bf11c-349">The scale factor in the x-direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-349">The scale factor in the x-direction.</span>
          </span>
        </param>
        <param name="scaleY">
          <span data-ttu-id="bf11c-350">The scale factor in the y-direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-350">The scale factor in the y-direction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-351">Multiplies the size of the current rectangle by the specified x and y values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-351">Multiplies the size of the current rectangle by the specified x and y values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bf11c-352">下面的示例演示如何使用<xref:System.Windows.Rect.Scale%2A>方法要相乘的宽度和高度的矩形指定的量。</span><span class="sxs-lookup"><span data-stu-id="bf11c-352">The following example shows how to use the <xref:System.Windows.Rect.Scale%2A> method to multiply the width and height of a rectangle by the specified amount.</span></span>  
  
 [!code-csharp[RectExamples_snip#ScaleExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#scaleexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Inflate(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Windows.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size Size { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Windows.Size with get, set" Usage="System.Windows.Rect.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf11c-353">Gets or sets the width and height of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-353">Gets or sets the width and height of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf11c-354">一个<see cref="T:System.Windows.Size" />结构，它指定的宽度和矩形的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-354">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bf11c-355">下面的示例演示如何使用<xref:System.Windows.Rect>结构，以指定的维度和使用 XAML 的矩形的位置。</span><span class="sxs-lookup"><span data-stu-id="bf11c-355">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="bf11c-356">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</span><span class="sxs-lookup"><span data-stu-id="bf11c-356">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="bf11c-357">此示例还说明如何查找有关新矩形的大小和坐标信息和呈现中的信息<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="bf11c-357">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bf11c-358">
            <see cref="P:System.Windows.Rect.Size" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-358">
              <see cref="P:System.Windows.Rect.Size" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="bf11c-359">The format to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-359">The format to use.</span>
          </span>
          <span data-ttu-id="bf11c-360">-or-  A null reference (<see langword="Nothing" /> in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-360">-or-  A null reference (<see langword="Nothing" /> in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="bf11c-361">The provider to use to format the value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-361">The provider to use to format the value.</span>
          </span>
          <span data-ttu-id="bf11c-362">-or-  A null reference (<see langword="Nothing" /> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-362">-or-  A null reference (<see langword="Nothing" /> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-363">Formats the value of the current instance using the specified format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-363">Formats the value of the current instance using the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf11c-364">A string representation of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-364">A string representation of the rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-365">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="bf11c-365">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bf11c-366">它只能在 <xref:System.Windows.Rect> 实例被强制转换为 <xref:System.IFormattable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="bf11c-366">It can be used only when the <xref:System.Windows.Rect> instance is cast to an <xref:System.IFormattable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormattable" />
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Top" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Top : double" Usage="System.Windows.Rect.Top" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf11c-367">Gets the y-axis position of the top of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-367">Gets the y-axis position of the top of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf11c-368">Y 轴位置的矩形的顶部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-368">The y-axis position of the top of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-369">获取此属性等效于获取<xref:System.Windows.Rect.Y%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bf11c-369">Getting this property is equivalent to getting the <xref:System.Windows.Rect.Y%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf11c-370">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</span><span class="sxs-lookup"><span data-stu-id="bf11c-370">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="bf11c-371">此示例还说明如何查找有关新矩形的大小和坐标信息和呈现中的信息<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="bf11c-371">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.Y" />
      </Docs>
    </Member>
    <Member MemberName="TopLeft">
      <MemberSignature Language="C#" Value="public System.Windows.Point TopLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point TopLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.TopLeft" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopLeft As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point TopLeft { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.TopLeft : System.Windows.Point" Usage="System.Windows.Rect.TopLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf11c-372">Gets the position of the top-left corner of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-372">Gets the position of the top-left corner of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf11c-373">矩形的左上角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-373">The position of the top-left corner of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-374">矩形的左上角的位置是否等于 (<xref:System.Windows.Rect.X%2A>， <xref:System.Windows.Rect.Y%2A>)。</span><span class="sxs-lookup"><span data-stu-id="bf11c-374">The position of the top-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf11c-375">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</span><span class="sxs-lookup"><span data-stu-id="bf11c-375">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="bf11c-376">此示例还说明如何查找有关新矩形的大小和坐标信息和呈现中的信息<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="bf11c-376">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopRight">
      <MemberSignature Language="C#" Value="public System.Windows.Point TopRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point TopRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.TopRight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopRight As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point TopRight { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.TopRight : System.Windows.Point" Usage="System.Windows.Rect.TopRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf11c-377">Gets the position of the top-right corner of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-377">Gets the position of the top-right corner of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf11c-378">矩形的右上角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-378">The position of the top-right corner of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-379">矩形的右上角的位置是否等于 (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>， <xref:System.Windows.Rect.Y%2A>)。</span><span class="sxs-lookup"><span data-stu-id="bf11c-379">The position of the top-right corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf11c-380">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</span><span class="sxs-lookup"><span data-stu-id="bf11c-380">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="bf11c-381">此示例还说明如何查找有关新矩形的大小和坐标信息和呈现中的信息<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="bf11c-381">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bf11c-382">Returns a string representation of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-382">Returns a string representation of the rectangle.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="rect.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bf11c-383">Returns a string representation of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-383">Returns a string representation of the rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf11c-384">A string representation of the current rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-384">A string representation of the current rectangle.</span>
          </span>
          <span data-ttu-id="bf11c-385">The string has the following form: "<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />".</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-385">The string has the following form: "<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />".</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bf11c-386">下面的示例演示如何使用<xref:System.Windows.Rect.ToString>方法获取的字符串表示形式<xref:System.Windows.Rect>结构。</span><span class="sxs-lookup"><span data-stu-id="bf11c-386">The following example shows how to use the <xref:System.Windows.Rect.ToString> method to get a string representation of a <xref:System.Windows.Rect> structure.</span></span>  
  
 [!code-csharp[RectExamples_snip#ToStringExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#tostringexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="rect.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bf11c-387">Culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-387">Culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-388">Returns a string representation of the rectangle by using the specified format provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-388">Returns a string representation of the rectangle by using the specified format provider.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf11c-389">A string representation of the current rectangle that is determined by the specified format provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-389">A string representation of the current rectangle that is determined by the specified format provider.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bf11c-390">Transforms a rectangle by using the specified matrix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-390">Transforms a rectangle by using the specified matrix.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Media.Matrix -&gt; unit" Usage="rect.Transform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="bf11c-391">A matrix that specifies the transformation to apply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-391">A matrix that specifies the transformation to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-392">Transforms the rectangle by applying the specified matrix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-392">Transforms the rectangle by applying the specified matrix.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bf11c-393">下面的示例演示如何使用<xref:System.Windows.Rect.Transform%28System.Windows.Media.Matrix%29>方法来转换<xref:System.Windows.Rect>结构的<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="bf11c-393">The following example shows how to use the <xref:System.Windows.Rect.Transform%28System.Windows.Media.Matrix%29> method to transform a <xref:System.Windows.Rect> structure by using a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[RectExamples_snip#TransformExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#transformexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Transform (System.Windows.Rect rect, System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Transform(valuetype System.Windows.Rect rect, valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Transform(System::Windows::Rect rect, System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="static member Transform : System.Windows.Rect * System.Windows.Media.Matrix -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Transform (rect, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="bf11c-394">A rectangle that is the basis for the transformation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-394">A rectangle that is the basis for the transformation.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="bf11c-395">A matrix that specifies the transformation to apply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-395">A matrix that specifies the transformation to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-396">Returns the rectangle that results from applying the specified matrix to the specified rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-396">Returns the rectangle that results from applying the specified matrix to the specified rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf11c-397">The rectangle that results from the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-397">The rectangle that results from the operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bf11c-398">下面的示例演示如何使用<xref:System.Windows.Rect.Transform%28System.Windows.Rect%2CSystem.Windows.Media.Matrix%29>方法来创建一个新<xref:System.Windows.Rect>结构，它通过将应用得到<xref:System.Windows.Media.Matrix>至现有矩形。</span><span class="sxs-lookup"><span data-stu-id="bf11c-398">The following example shows how to use the <xref:System.Windows.Rect.Transform%28System.Windows.Rect%2CSystem.Windows.Media.Matrix%29> method to create a new <xref:System.Windows.Rect> structure that results from applying a <xref:System.Windows.Media.Matrix> to an existing rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#TransformExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#transformexample2_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Union">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bf11c-399">Creates a rectangle that is exactly large enough to contain a given rectangle and a specified point or second rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-399">Creates a rectangle that is exactly large enough to contain a given rectangle and a specified point or second rectangle.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.Union : System.Windows.Point -&gt; unit" Usage="rect.Union point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="bf11c-400">The point to include.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-400">The point to include.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-401">Expands the current rectangle exactly enough to contain the specified point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-401">Expands the current rectangle exactly enough to contain the specified point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bf11c-402">下面的示例演示如何使用<xref:System.Windows.Rect.Union%28System.Windows.Point%29>方法以放大当前矩形刚好足以包含给定<xref:System.Windows.Point>。</span><span class="sxs-lookup"><span data-stu-id="bf11c-402">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Point%29> method to expand the current rectangle exactly enough to contain a given <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.Union : System.Windows.Rect -&gt; unit" Usage="rect.Union rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="bf11c-403">The rectangle to include.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-403">The rectangle to include.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-404">Expands the current rectangle exactly enough to contain the specified rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-404">Expands the current rectangle exactly enough to contain the specified rectangle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bf11c-405">下面的示例演示如何使用<xref:System.Windows.Rect.Union%28System.Windows.Rect%29>放大当前矩形刚好足以包含指定的矩形的方法。</span><span class="sxs-lookup"><span data-stu-id="bf11c-405">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%29> method to expand the current rectangle exactly enough to contain the specified rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Union (System.Windows.Rect rect, System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Union(valuetype System.Windows.Rect rect, valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Union(System::Windows::Rect rect, System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="static member Union : System.Windows.Rect * System.Windows.Point -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Union (rect, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="bf11c-406">The rectangle to include.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-406">The rectangle to include.</span>
          </span>
        </param>
        <param name="point">
          <span data-ttu-id="bf11c-407">The point to include.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-407">The point to include.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-408">Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-408">Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf11c-409">A rectangle that is exactly large enough to contain the specified rectangle and the specified point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-409">A rectangle that is exactly large enough to contain the specified rectangle and the specified point.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bf11c-410">下面的示例演示如何使用<xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Point%29>方法来创建一个矩形的大小刚好足以包含给定的矩形和一个给定<xref:System.Windows.Point>。</span><span class="sxs-lookup"><span data-stu-id="bf11c-410">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Point%29> method to create a rectangle that is exactly large enough to contain a given rectangle and a given <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample3_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Union (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Union(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Union (rect1 As Rect, rect2 As Rect) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Union(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member Union : System.Windows.Rect * System.Windows.Rect -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Union (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1">
          <span data-ttu-id="bf11c-411">The first rectangle to include.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-411">The first rectangle to include.</span>
          </span>
        </param>
        <param name="rect2">
          <span data-ttu-id="bf11c-412">The second rectangle to include.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-412">The second rectangle to include.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf11c-413">Creates a rectangle that is exactly large enough to contain the two specified rectangles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-413">Creates a rectangle that is exactly large enough to contain the two specified rectangles.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf11c-414">The resulting rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-414">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bf11c-415">下面的示例演示如何使用<xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Rect%29>方法来创建一个矩形的大小刚好足以包含两个给定的矩形。</span><span class="sxs-lookup"><span data-stu-id="bf11c-415">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to create a rectangle that is exactly large enough to contain two given rectangles.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample4_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Width : double with get, set" Usage="System.Windows.Rect.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf11c-416">Gets or sets the width of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-416">Gets or sets the width of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf11c-417">一个正数，表示矩形的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-417">A positive number that represents the width of the rectangle.</span>
          </span>
          <span data-ttu-id="bf11c-418">默认值为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-418">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-419"><xref:System.Windows.Rect.Empty%2A>矩形具有<xref:System.Windows.Rect.Width%2A>的<xref:System.Double.NegativeInfinity>。</span><span class="sxs-lookup"><span data-stu-id="bf11c-419">The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Width%2A> of <xref:System.Double.NegativeInfinity>.</span></span> <span data-ttu-id="bf11c-420"><xref:System.Windows.Rect.Empty%2A>矩形是只读的; 其<xref:System.Windows.Rect.Width%2A>不能更改。</span><span class="sxs-lookup"><span data-stu-id="bf11c-420">The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Width%2A> cannot not be changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf11c-421">下面的示例演示如何使用<xref:System.Windows.Rect>结构，以指定的维度和使用 XAML 的矩形的位置。</span><span class="sxs-lookup"><span data-stu-id="bf11c-421">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="bf11c-422">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</span><span class="sxs-lookup"><span data-stu-id="bf11c-422">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="bf11c-423">此示例还说明如何查找有关新矩形的大小和坐标信息和呈现中的信息<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="bf11c-423">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bf11c-424">
            <see cref="P:System.Windows.Rect.Width" /> is set to a negative value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-424">
              <see cref="P:System.Windows.Rect.Width" /> is set to a negative value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bf11c-425">
            <see cref="P:System.Windows.Rect.Width" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-425">
              <see cref="P:System.Windows.Rect.Width" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Rect.Height" />
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double X { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.X : double with get, set" Usage="System.Windows.Rect.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf11c-426">Gets or sets the x-axis value of the left side of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-426">Gets or sets the x-axis value of the left side of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf11c-427">左侧和右侧的矩形的 x 轴值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-427">The x-axis value of the left side of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-428">获取此属性等效于获取<xref:System.Windows.Rect.Left%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bf11c-428">Getting this property is equivalent to getting the <xref:System.Windows.Rect.Left%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf11c-429">下面的示例演示如何使用<xref:System.Windows.Rect>结构，以指定的维度和使用 XAML 的矩形的位置。</span><span class="sxs-lookup"><span data-stu-id="bf11c-429">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="bf11c-430">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</span><span class="sxs-lookup"><span data-stu-id="bf11c-430">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="bf11c-431">此示例还说明如何查找有关新矩形的大小和坐标信息和呈现中的信息<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="bf11c-431">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bf11c-432">
            <see cref="P:System.Windows.Rect.X" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-432">
              <see cref="P:System.Windows.Rect.X" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Rect.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Y { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Y : double with get, set" Usage="System.Windows.Rect.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf11c-433">Gets or sets the y-axis value of the top side of the rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-433">Gets or sets the y-axis value of the top side of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf11c-434">矩形顶边的 y 轴值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-434">The y-axis value of the top side of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf11c-435">获取此属性等效于获取<xref:System.Windows.Rect.Top%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bf11c-435">Getting this property is equivalent to getting the <xref:System.Windows.Rect.Top%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf11c-436">下面的示例演示如何使用<xref:System.Windows.Rect>结构，以指定的维度和使用 XAML 的矩形的位置。</span><span class="sxs-lookup"><span data-stu-id="bf11c-436">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="bf11c-437">下面的示例演示如何使用代码创建一个矩形，并将其添加到页面。</span><span class="sxs-lookup"><span data-stu-id="bf11c-437">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="bf11c-438">此示例还说明如何查找有关新矩形的大小和坐标信息和呈现中的信息<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="bf11c-438">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bf11c-439">
            <see cref="P:System.Windows.Rect.Y" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf11c-439">
              <see cref="P:System.Windows.Rect.Y" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Rect.X" />
      </Docs>
    </Member>
  </Members>
</Type>