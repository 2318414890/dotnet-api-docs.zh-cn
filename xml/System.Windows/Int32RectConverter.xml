<Type Name="Int32RectConverter" FullName="System.Windows.Int32RectConverter">
  <TypeSignature Language="C#" Value="public sealed class Int32RectConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Int32RectConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Int32RectConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Int32RectConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class Int32RectConverter sealed : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="29f90-101">在其他类型的实例和 <see cref="T:System.Windows.Int32Rect" /> 之间进行转换。</span><span class="sxs-lookup"><span data-stu-id="29f90-101">Converts instances of other types to and from an <see cref="T:System.Windows.Int32Rect" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Int32RectConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Int32RectConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Int32RectConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29f90-102">初始化 <see cref="T:System.Windows.Int32RectConverter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="29f90-102">Initializes a new instance of the <see cref="T:System.Windows.Int32RectConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Int32RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="29f90-103">描述类型的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="29f90-103">Describes the context information of a type.</span></span></param>
        <param name="sourceType"><span data-ttu-id="29f90-104">正被计算用于转换的源类型。</span><span class="sxs-lookup"><span data-stu-id="29f90-104">The type of the source that is being evaluated for conversion.</span></span></param>
        <summary><span data-ttu-id="29f90-105">确定是否可将一个对象从给定类型转换成 <see cref="T:System.Windows.Int32Rect" /> 的实例。</span><span class="sxs-lookup"><span data-stu-id="29f90-105">Determines whether an object can be converted from a given type to an instance of an <see cref="T:System.Windows.Int32Rect" />.</span></span></summary>
        <returns>
          <span data-ttu-id="29f90-106">如果可将类型转换为 <see cref="T:System.Windows.Int32Rect" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="29f90-106"><see langword="true" /> if the type can be converted to an <see cref="T:System.Windows.Int32Rect" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Int32RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="29f90-107">描述类型的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="29f90-107">Describes the context information of a type.</span></span></param>
        <param name="destinationType"><span data-ttu-id="29f90-108">要计算用于转换的此 <see cref="T:System.Windows.Int32Rect" /> 的所需类型。</span><span class="sxs-lookup"><span data-stu-id="29f90-108">The desired type this <see cref="T:System.Windows.Int32Rect" /> is being evaluated for conversion.</span></span></param>
        <summary><span data-ttu-id="29f90-109">确定是否可将 <see cref="T:System.Windows.Int32Rect" /> 的实例转换成其他类型。</span><span class="sxs-lookup"><span data-stu-id="29f90-109">Determines whether an instance of an <see cref="T:System.Windows.Int32Rect" /> can be converted to a different type.</span></span></summary>
        <returns>
          <span data-ttu-id="29f90-110">如果此 <see cref="T:System.Windows.Int32Rect" /> 可转换为 <paramref name="destinationType" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="29f90-110"><see langword="true" /> if this <see cref="T:System.Windows.Int32Rect" /> can be converted to <paramref name="destinationType" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Int32RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="29f90-111">提供转换所需的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="29f90-111">Provides contextual information required for conversion.</span></span></param>
        <param name="culture"><span data-ttu-id="29f90-112">要在转换过程中考虑的区域性信息。</span><span class="sxs-lookup"><span data-stu-id="29f90-112">Cultural information to respect during conversion.</span></span></param>
        <param name="value"><span data-ttu-id="29f90-113">要转换的对象。</span><span class="sxs-lookup"><span data-stu-id="29f90-113">The object being converted.</span></span></param>
        <summary><span data-ttu-id="29f90-114">尝试将指定类型转换成 <see cref="T:System.Windows.Int32Rect" />。</span><span class="sxs-lookup"><span data-stu-id="29f90-114">Attempts to convert the specified type to an <see cref="T:System.Windows.Int32Rect" />.</span></span></summary>
        <returns><span data-ttu-id="29f90-115">通过转换 <paramref name="value" /> 创建的 <see cref="T:System.Windows.Int32Rect" />。</span><span class="sxs-lookup"><span data-stu-id="29f90-115">The <see cref="T:System.Windows.Int32Rect" /> created from converting <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29f90-116">若要确定转换是否可以不实际执行转换，请使用<xref:System.Windows.KeySplineConverter.CanConvertFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="29f90-116">To determine whether a conversion is possible without actually performing the conversion, use the <xref:System.Windows.KeySplineConverter.CanConvertFrom%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="29f90-117">如果指定的对象为 NULL 或者是无法转换为 <see cref="T:System.Windows.Int32Rect" /> 的类型，则引发该异常。</span><span class="sxs-lookup"><span data-stu-id="29f90-117">Thrown if the specified object is NULL or is a type that cannot be converted to an <see cref="T:System.Windows.Int32Rect" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Int32RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="29f90-118">提供转换所需的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="29f90-118">Provides contextual information required for conversion.</span></span></param>
        <param name="culture"><span data-ttu-id="29f90-119">要在转换过程中考虑的区域性信息。</span><span class="sxs-lookup"><span data-stu-id="29f90-119">Cultural information to respect during conversion.</span></span></param>
        <param name="value"><span data-ttu-id="29f90-120">要转换的 <see cref="T:System.Windows.Int32Rect" />。</span><span class="sxs-lookup"><span data-stu-id="29f90-120">The <see cref="T:System.Windows.Int32Rect" /> to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="29f90-121">要将此 <see cref="T:System.Windows.Int32Rect" /> 转换为的类型。</span><span class="sxs-lookup"><span data-stu-id="29f90-121">The type to convert this <see cref="T:System.Windows.Int32Rect" /> to.</span></span></param>
        <summary><span data-ttu-id="29f90-122">尝试将 <see cref="T:System.Windows.Int32Rect" /> 转换为指定类型。</span><span class="sxs-lookup"><span data-stu-id="29f90-122">Attempts to convert an <see cref="T:System.Windows.Int32Rect" /> to a specified type.</span></span></summary>
        <returns><span data-ttu-id="29f90-123">通过转换此 <see cref="T:System.Windows.Int32Rect" /> 创建的对象。</span><span class="sxs-lookup"><span data-stu-id="29f90-123">The object created from converting this <see cref="T:System.Windows.Int32Rect" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29f90-124">若要确定转换是否可以不实际执行转换，请使用<xref:System.Windows.Int32RectConverter.CanConvertTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="29f90-124">To determine whether a conversion is possible without actually performing the conversion, use the <xref:System.Windows.Int32RectConverter.CanConvertTo%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="29f90-125">如果 <paramref name="value" /> 为 <see langword="null" /> 或者不是 <see cref="T:System.Windows.Int32Rect" />，或者，如果 <paramref name="destinationType" /> 不是要转换的有效类型之一，则引发该异常。</span><span class="sxs-lookup"><span data-stu-id="29f90-125">Thrown if <paramref name="value" /> is <see langword="null" /> or is not an <see cref="T:System.Windows.Int32Rect" />, or if the <paramref name="destinationType" /> is not one of the valid types for conversion.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>