<Type Name="VisualState" FullName="System.Windows.VisualState">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2991e42e0328cca2b857aee018bd001f88c8896b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36455962" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class VisualState : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualState extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualState" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualState&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualState : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualState = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Storyboard")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="bbece-101">表示特定状态下控件的可视外观。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bbece-101">Represents the visual appearance of the control when it is in a specific state.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbece-102">A<xref:System.Windows.VisualState>指定控件时处于某个特定状态的外观。</span><span class="sxs-lookup"><span data-stu-id="bbece-102">A <xref:System.Windows.VisualState> specifies how the control looks when it is in a certain state.</span></span> <span data-ttu-id="bbece-103">例如，当<xref:System.Windows.Controls.Button>是按下，其边框可能是不同于普通的颜色。</span><span class="sxs-lookup"><span data-stu-id="bbece-103">For example, when a <xref:System.Windows.Controls.Button> is pressed, its border might be a different color than normal.</span></span>  <span data-ttu-id="bbece-104"><xref:System.Windows.VisualState>类具有<xref:System.Windows.VisualState.Storyboard%2A>属性，可更改控件的外观。</span><span class="sxs-lookup"><span data-stu-id="bbece-104">The <xref:System.Windows.VisualState> class has a <xref:System.Windows.VisualState.Storyboard%2A> property that changes the appearance of the control.</span></span> <span data-ttu-id="bbece-105">当控制权交给由指定的状态<xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType>属性，<xref:System.Windows.VisualState.Storyboard%2A>开始。</span><span class="sxs-lookup"><span data-stu-id="bbece-105">When the control enters the state that is specified by the <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> property, the <xref:System.Windows.VisualState.Storyboard%2A> begins.</span></span> <span data-ttu-id="bbece-106">当控件退出状态，<xref:System.Windows.VisualState.Storyboard%2A>停止。</span><span class="sxs-lookup"><span data-stu-id="bbece-106">When the control exits the state, the <xref:System.Windows.VisualState.Storyboard%2A> stops.</span></span>  
  
 <span data-ttu-id="bbece-107"><xref:System.Windows.VisualStateGroup.States%2A?displayProperty=nameWithType>属性包含<xref:System.Windows.VisualState>对象。</span><span class="sxs-lookup"><span data-stu-id="bbece-107">The <xref:System.Windows.VisualStateGroup.States%2A?displayProperty=nameWithType> property contains <xref:System.Windows.VisualState> objects.</span></span> <span data-ttu-id="bbece-108"><xref:System.Windows.VisualStateGroup> 对象添加到<xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=nameWithType>的附加属性定义上<xref:System.Windows.FrameworkElement>。</span><span class="sxs-lookup"><span data-stu-id="bbece-108"><xref:System.Windows.VisualStateGroup> objects are added to the <xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=nameWithType> attached property, which is defined on the on a <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="bbece-109">你可以添加<xref:System.Windows.VisualState>对象与任何<xref:System.Windows.FrameworkElement>，但它们通常在中使用<xref:System.Windows.Controls.ControlTemplate>的<xref:System.Windows.Controls.Control>。</span><span class="sxs-lookup"><span data-stu-id="bbece-109">You can add <xref:System.Windows.VisualState> objects to any <xref:System.Windows.FrameworkElement>, but they are typically are used in a <xref:System.Windows.Controls.ControlTemplate> of a <xref:System.Windows.Controls.Control>.</span></span> <span data-ttu-id="bbece-110">有关如何创建<xref:System.Windows.Controls.ControlTemplate>和<xref:System.Windows.VisualState>对象的现有控件，请参阅[通过创建 ControlTemplate 自定义现有的控件的外观](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="bbece-110">For information about how to create a <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.VisualState> objects for existing controls, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span> <span data-ttu-id="bbece-111">有关使用示例<xref:System.Windows.VisualState>外部对象<xref:System.Windows.Controls.ControlTemplate>，请参阅<xref:System.Windows.VisualStateManager>类。</span><span class="sxs-lookup"><span data-stu-id="bbece-111">For an example of using <xref:System.Windows.VisualState> objects outside of a <xref:System.Windows.Controls.ControlTemplate>, see the <xref:System.Windows.VisualStateManager> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbece-112">下面的示例创建<xref:System.Windows.VisualStateGroup>中<xref:System.Windows.Controls.ControlTemplate>的<xref:System.Windows.Controls.Button>调用`CommonStates`并添加<xref:System.Windows.VisualState>对象的状态， `Normal`， `Pressed`，和`MouseOver`。</span><span class="sxs-lookup"><span data-stu-id="bbece-112">The following example creates a <xref:System.Windows.VisualStateGroup> in the <xref:System.Windows.Controls.ControlTemplate> of a <xref:System.Windows.Controls.Button> called `CommonStates` and adds <xref:System.Windows.VisualState> objects for the states, `Normal`, `Pressed`, and `MouseOver`.</span></span> <span data-ttu-id="bbece-113"><xref:System.Windows.Controls.Button>还定义了状态为`Disabled`，位于`CommonStates` <xref:System.Windows.VisualStateGroup>，但该示例将省略它为简洁起见。</span><span class="sxs-lookup"><span data-stu-id="bbece-113">The <xref:System.Windows.Controls.Button> also defines a state called `Disabled` that is in the `CommonStates`<xref:System.Windows.VisualStateGroup>, but the example omits it for brevity.</span></span> <span data-ttu-id="bbece-114">有关完整示例，请参阅[通过创建 ControlTemplate 自定义现有的控件的外观](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="bbece-114">For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
 [!code-xaml[VSMButtonTemplate#10](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/buttonstages.xaml#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualState.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualState();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bbece-115">初始化 <see cref="T:System.Windows.VisualState" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbece-115">Initializes a new instance of the <see cref="T:System.Windows.VisualState" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualState.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.VisualState.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbece-116">获取或设置 <see cref="T:System.Windows.VisualState" /> 的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbece-116">Gets or sets the name of the <see cref="T:System.Windows.VisualState" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbece-117">
            <see cref="T:System.Windows.VisualState" /> 的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbece-117">The name of the <see cref="T:System.Windows.VisualState" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbece-118">指定的元素的可视状态应输入通过传递<xref:System.Windows.VisualState.Name%2A>的<xref:System.Windows.VisualState>到<xref:System.Windows.VisualStateManager>。</span><span class="sxs-lookup"><span data-stu-id="bbece-118">You specify which visual state an element should enter by passing the <xref:System.Windows.VisualState.Name%2A> of the <xref:System.Windows.VisualState> to the <xref:System.Windows.VisualStateManager>.</span></span>  
  
 <span data-ttu-id="bbece-119">当<xref:System.Windows.Controls.Control>使用<xref:System.Windows.VisualStateManager>中<xref:System.Windows.Controls.ControlTemplate>，控件作者应指定的<xref:System.Windows.VisualState>对象控件预期中找到其<xref:System.Windows.Controls.ControlTemplate>置于<xref:System.Windows.TemplateVisualStateAttribute>上其类签名。</span><span class="sxs-lookup"><span data-stu-id="bbece-119">When a <xref:System.Windows.Controls.Control> uses the <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.ControlTemplate>, the control author should specify which <xref:System.Windows.VisualState> objects the control expects to find in its <xref:System.Windows.Controls.ControlTemplate> by putting the <xref:System.Windows.TemplateVisualStateAttribute> on its class signature.</span></span> <span data-ttu-id="bbece-120"><xref:System.Windows.Controls.ControlTemplate> 作者定义新<xref:System.Windows.VisualState>对象和集<xref:System.Windows.VisualState.Name%2A>属性设置为指定的值<xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="bbece-120"><xref:System.Windows.Controls.ControlTemplate> authors define new <xref:System.Windows.VisualState> objects and set the <xref:System.Windows.VisualState.Name%2A> property to the value specified by the <xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="bbece-121">若要查找包含的控件的可视状态的名称[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]，请参阅[控件样式和模板](~/docs/framework/wpf/controls/control-styles-and-templates.md)。</span><span class="sxs-lookup"><span data-stu-id="bbece-121">To find the names of the visual states for the controls that are included with [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], see [Control Styles and Templates](~/docs/framework/wpf/controls/control-styles-and-templates.md).</span></span> <span data-ttu-id="bbece-122">有关如何创建<xref:System.Windows.Controls.ControlTemplate>和<xref:System.Windows.VisualState>对象的现有控件，请参阅[通过创建 ControlTemplate 自定义现有的控件的外观](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="bbece-122">For information about how to create a <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.VisualState> objects for existing controls, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbece-123">下面的示例创建<xref:System.Windows.VisualStateGroup>中<xref:System.Windows.Controls.ControlTemplate>的<xref:System.Windows.Controls.Button>调用`CommonStates`并添加<xref:System.Windows.VisualState>对象的状态， `Normal`， `Pressed`，和`MouseOver`。</span><span class="sxs-lookup"><span data-stu-id="bbece-123">The following example creates a <xref:System.Windows.VisualStateGroup> in the <xref:System.Windows.Controls.ControlTemplate> of a <xref:System.Windows.Controls.Button> called `CommonStates` and adds <xref:System.Windows.VisualState> objects for the states, `Normal`, `Pressed`, and `MouseOver`.</span></span> <span data-ttu-id="bbece-124"><xref:System.Windows.Controls.Button>还定义了状态为`Disabled`，位于`CommonStates` <xref:System.Windows.VisualStateGroup>，但该示例将省略它为简洁起见。</span><span class="sxs-lookup"><span data-stu-id="bbece-124">The <xref:System.Windows.Controls.Button> also defines a state called `Disabled` that is in the `CommonStates`<xref:System.Windows.VisualStateGroup>, but the example omits it for brevity.</span></span> <span data-ttu-id="bbece-125">有关完整示例，请参阅[通过创建 ControlTemplate 自定义现有的控件的外观](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="bbece-125">For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
 [!code-xaml[VSMButtonTemplate#10](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/buttonstages.xaml#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Storyboard">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Storyboard Storyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualState.Storyboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Storyboard As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Storyboard ^ Storyboard { System::Windows::Media::Animation::Storyboard ^ get(); void set(System::Windows::Media::Animation::Storyboard ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Storyboard : System.Windows.Media.Animation.Storyboard with get, set" Usage="System.Windows.VisualState.Storyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbece-126">获取或设置一个 <see cref="T:System.Windows.Media.Animation.Storyboard" />，它定义控件在 <see cref="T:System.Windows.VisualState" /> 所表示的状态下的外观。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbece-126">Gets or sets a <see cref="T:System.Windows.Media.Animation.Storyboard" /> that defines the appearance of the control when it is in the state that is represented by the <see cref="T:System.Windows.VisualState" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbece-127">一个演示图板，它定义控件在 <see cref="T:System.Windows.VisualState" /> 所表示的状态下的外观。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbece-127">A storyboard that defines the appearance of the control when it is in the state that is represented by the <see cref="T:System.Windows.VisualState" />.</span>
          </span>
          <span data-ttu-id="bbece-128">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbece-128">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbece-129">当控制权交给由指定的状态<xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType>属性，<xref:System.Windows.VisualState.Storyboard%2A>开始。</span><span class="sxs-lookup"><span data-stu-id="bbece-129">When the control enters the state that is specified by the <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> property, the <xref:System.Windows.VisualState.Storyboard%2A> begins.</span></span> <span data-ttu-id="bbece-130">当控件退出状态，<xref:System.Windows.VisualState.Storyboard%2A>停止。</span><span class="sxs-lookup"><span data-stu-id="bbece-130">When the control exits the state, the <xref:System.Windows.VisualState.Storyboard%2A> stops.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbece-131">下面的示例创建一个简单<xref:System.Windows.Controls.ControlTemplate>为<xref:System.Windows.Controls.Button>，其中包含一个<xref:System.Windows.Controls.Grid>。</span><span class="sxs-lookup"><span data-stu-id="bbece-131">The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>.</span></span>  <span data-ttu-id="bbece-132"><xref:System.Windows.VisualState>调用`MouseOver`已更改的颜色情节提要<xref:System.Windows.Controls.Grid>从绿色到红色当用户将鼠标放<xref:System.Windows.Controls.Button>。</span><span class="sxs-lookup"><span data-stu-id="bbece-132">The <xref:System.Windows.VisualState> called `MouseOver` has a Storyboard that changes the color of the <xref:System.Windows.Controls.Grid> from green to red when the user puts the mouse over the <xref:System.Windows.Controls.Button>.</span></span>  <span data-ttu-id="bbece-133"><xref:System.Windows.VisualState>调用`Normal`是包括在内，以便在用户移动鼠标按钮，关闭<xref:System.Windows.Controls.Grid>恢复为绿色。</span><span class="sxs-lookup"><span data-stu-id="bbece-133">The <xref:System.Windows.VisualState> called `Normal` is included so that when the user moves the mouse off the button, the <xref:System.Windows.Controls.Grid> returns to green.</span></span>  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>