<Type Name="FreezableCollection&lt;T&gt;" FullName="System.Windows.FreezableCollection&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class FreezableCollection&lt;T&gt; : System.Windows.Media.Animation.Animatable, System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.IList, System.Collections.Specialized.INotifyCollectionChanged, System.ComponentModel.INotifyPropertyChanged where T : DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FreezableCollection`1&lt;(class System.Windows.DependencyObject) T&gt; extends System.Windows.Media.Animation.Animatable implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.Collections.Specialized.INotifyCollectionChanged, class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FreezableCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class FreezableCollection(Of T)&#xA;Inherits Animatable&#xA;Implements ICollection(Of T), IEnumerable(Of T), IList, IList(Of T), INotifyCollectionChanged, INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : DependencyObjectpublic ref class FreezableCollection : System::Windows::Media::Animation::Animatable, System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::IList, System::Collections::Specialized::INotifyCollectionChanged, System::ComponentModel::INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Specialized.INotifyCollectionChanged</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="4bc5a-101">集合的类型。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-101">The type of collection.</span></span> <span data-ttu-id="4bc5a-102">此类型必须是 <see cref="T:System.Windows.DependencyObject" /> 或派生类。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-102">This type must be a <see cref="T:System.Windows.DependencyObject" /> or a derived class.</span></span></typeparam>
    <summary><span data-ttu-id="4bc5a-103">表示 <see cref="T:System.Windows.DependencyObject" />、<see cref="T:System.Windows.Freezable" /> 或 <see cref="T:System.Windows.Media.Animation.Animatable" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-103">Represents a collection of <see cref="T:System.Windows.DependencyObject" />, <see cref="T:System.Windows.Freezable" />, or <see cref="T:System.Windows.Media.Animation.Animatable" /> objects.</span></span> <span data-ttu-id="4bc5a-104"><see cref="T:System.Windows.FreezableCollection`1" /> 本身为 <see cref="T:System.Windows.Media.Animation.Animatable" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-104"><see cref="T:System.Windows.FreezableCollection`1" /> is itself an <see cref="T:System.Windows.Media.Animation.Animatable" /> type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bc5a-105">此类用于启用创建完全支持数据绑定、 更改通知、 属性失效和其内容的动画的自定义集合类型。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-105">This class is provided to enable the creation of custom collection types that fully support data binding, change notification, property invalidation, and animation of its contents.</span></span>  
  
### <a name="xaml-usage-for-freezablecollection"></a><span data-ttu-id="4bc5a-106">FreezableCollection 的 XAML 用法</span><span class="sxs-lookup"><span data-stu-id="4bc5a-106">XAML Usage for FreezableCollection</span></span>  
 <span data-ttu-id="4bc5a-107"><xref:System.Windows.FreezableCollection%601> 支持有限[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]语法。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-107"><xref:System.Windows.FreezableCollection%601> supports a limited [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax.</span></span>  
  
-   <span data-ttu-id="4bc5a-108">作为根处的对象元素，您可以从理论上讲指定不受约束<xref:System.Windows.FreezableCollection%601>对象元素，它还必须指定[X:typearguments 指令](~/docs/framework/xaml-services/x-typearguments-directive.md)声明约束。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-108">As an object element at the root, you can theoretically specify an unconstrained <xref:System.Windows.FreezableCollection%601> object element, which must also specify the [x:TypeArguments Directive](~/docs/framework/xaml-services/x-typearguments-directive.md) to declare the constraint.</span></span> <span data-ttu-id="4bc5a-109">但是，这是不常见的方案中，因为为此，<xref:System.Windows.FreezableCollection%601>必须是根元素。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-109">However, this is not a common scenario, because to do this, the <xref:System.Windows.FreezableCollection%601> must be the root element.</span></span> <span data-ttu-id="4bc5a-110">之所以存在此限制，因为[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]中的处理器实现[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]仅支持[X:typearguments 指令](~/docs/framework/xaml-services/x-typearguments-directive.md)时设置的元素是根元素，并且你必须使用任何打开如果你想要实例化中的泛型类型约束泛型[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-110">This limitation exists because the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] processor implementation in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] can only support [x:TypeArguments Directive](~/docs/framework/xaml-services/x-typearguments-directive.md) when the element it is being set on is the root element, and you must use  on any open constraint generic if you want to instantiate a generic type in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span> <span data-ttu-id="4bc5a-111">不太可能要<xref:System.Windows.FreezableCollection%601>作为根元素，即使是作为松散[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-111">It is unlikely that you want a <xref:System.Windows.FreezableCollection%601> as the root element, even as loose [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
-   <span data-ttu-id="4bc5a-112">如果派生自<xref:System.Windows.FreezableCollection%601>并应用派生的集合中的类型约束，派生的集合可以支持多种用法。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-112">If you derive from <xref:System.Windows.FreezableCollection%601> and apply a type constraint in the derived collection, the derived collection can support a variety of usages.</span></span> <span data-ttu-id="4bc5a-113">这可能是因为你派生中的约束不需要传递。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-113">This is possible because the constraint in your derivation eliminates the need to pass .</span></span>  
  
    -   <span data-ttu-id="4bc5a-114">典型[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]此类派生的集合的用法是通过隐式集合语法。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-114">The typical [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage for such a derived collection is through implicit collection syntax.</span></span> <span data-ttu-id="4bc5a-115">支持某些接口的集合不需要指定对象元素本身的集合。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-115">Collections that support certain interfaces do not need to specify the collection itself as an object element.</span></span> <span data-ttu-id="4bc5a-116">有关详细信息中的集合语法[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]，请参阅[在详细信息的 XAML 语法](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md)。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-116">For details on collection syntax in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span></span> <span data-ttu-id="4bc5a-117">例如，*对象*与*属性*其中*属性*的类型为<xref:System.Windows.FreezableCollection%601>受约束<xref:System.Windows.DependencyObject>无法支持以下语法：</span><span class="sxs-lookup"><span data-stu-id="4bc5a-117">For instance, an *object* with a *property* where the *property* was of type <xref:System.Windows.FreezableCollection%601> constrained by <xref:System.Windows.DependencyObject> could support the following syntax:</span></span>  
  
        ```  
        <object>  
          <object.property>  
            oneOrMoreDependencyObjectElements  
          </object.property>  
        </object>  
        ```  
  
    -   <span data-ttu-id="4bc5a-118">只要你不要隐藏默认构造函数，派生的集合还可以支持对象元素语法 （其中的对象元素是显式的而不是上面所示的隐式使用情况）。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-118">As long as you do not hide the default constructor, the derived collection can also support an object element syntax (where the object element is explicit, as opposed to the implicit usage shown above).</span></span> <span data-ttu-id="4bc5a-119">它不必是根元素。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-119">It does not need to be the root element.</span></span> <span data-ttu-id="4bc5a-120">或者，你还可以使用派生的集合的根元素，而无需指定，尽管使用的根元素的集合不常见。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-120">Or, you can also use the derived collection as a root element, without needing to specify , although using a collection as a root element is uncommon.</span></span>  
  
-   <span data-ttu-id="4bc5a-121">在上述方案集合的任何子元素必须实现的约束的或由指定的类型。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-121">Any child elements of the collection in either of the above scenarios must be of the type of either the implemented constraint, or as specified by .</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4bc5a-122">初始化 <see cref="T:System.Windows.FreezableCollection`1" /> 的新实例。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-122">Initializes a new instance of <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FreezableCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FreezableCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4bc5a-123">初始化 <see cref="T:System.Windows.FreezableCollection`1" /> 的新实例，该实例为空并且具有默认初始容量。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-123">Initializes a new instance of <see cref="T:System.Windows.FreezableCollection`1" /> that is empty and has the default initial capacity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FreezableCollection (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FreezableCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="4bc5a-124">一个集合，其项应被添加到新 <see cref="T:System.Windows.FreezableCollection`1" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-124">The collection whose items should be added to the new <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="4bc5a-125">初始化 <see cref="T:System.Windows.FreezableCollection`1" /> 类的新实例，该实例包含与指定集合相同的元素。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-125">Initializes a new instance of the <see cref="T:System.Windows.FreezableCollection`1" /> class that contains the same elements as the specified collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bc5a-126">此操作对指定的集合; 执行的浅表副本仅复制对集合的元素的引用，则将不会克隆元素本身。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-126">This operation performs a shallow copy on the specified collection; only references to the collection's elements are copied, the elements themselves are not cloned.</span></span> <span data-ttu-id="4bc5a-127">修改的新元素<xref:System.Windows.FreezableCollection%601>还会修改该元素`collection`。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-127">Modifying an element of the new <xref:System.Windows.FreezableCollection%601> also modifies that element for `collection`.</span></span>  
  
 <span data-ttu-id="4bc5a-128">元素将被放置在新<xref:System.Windows.FreezableCollection%601>与指定集合的枚举器读取这些相同的顺序。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-128">The elements are placed in the new <xref:System.Windows.FreezableCollection%601> in the same order they are read by the enumerator of the specified collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4bc5a-129"><paramref name="collection" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-129"><paramref name="collection" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FreezableCollection (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FreezableCollection(int capacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="4bc5a-130">一个大于或等于 0 的值，该值指定新集合最初可存储的元素数。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-130">A value that is greater than or equal to 0 that specifies the number of elements the new collection can initially store.</span></span></param>
        <summary><span data-ttu-id="4bc5a-131">初始化 <see cref="T:System.Windows.FreezableCollection`1" /> 的新实例，该实例为空并且具有指定的初始容量。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-131">Initializes a new instance of the <see cref="T:System.Windows.FreezableCollection`1" /> that is empty and has the specified initial capacity.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4bc5a-132"><paramref name="capacity" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-132"><paramref name="capacity" /> is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(T value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4bc5a-133">要添加到 <see cref="T:System.Windows.FreezableCollection`1" /> 末尾的对象。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-133">The object to be added to the end of the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span> <span data-ttu-id="4bc5a-134">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-134">This value cannot be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="4bc5a-135">将指定对象添加到 <see cref="T:System.Windows.FreezableCollection`1" /> 的结尾。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-135">Adds the specified object to the end of the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4bc5a-136"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-136"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4bc5a-137"><see cref="T:System.Windows.FreezableCollection`1" /> 处于冻结状态（其 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="true" />）。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-137">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4bc5a-138">移除集合中的所有元素。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-138">Removes all elements from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.FreezableCollection&lt;T&gt; Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.FreezableCollection`1&lt;!T&gt; Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As FreezableCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::FreezableCollection&lt;T&gt; ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FreezableCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4bc5a-139">创建此 <see cref="T:System.Windows.FreezableCollection`1" /> 及其内容的可修改复本，从而制作深层副本。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-139">Creates a modifiable clone of this <see cref="T:System.Windows.FreezableCollection`1" /> and its contents, making deep copies.</span></span> <span data-ttu-id="4bc5a-140">如果此集合（或其内容）具有经过动画处理的依赖项属性，则会复制属性的基值，但不会复制其经过动画处理的当前值。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-140">If this collection (or its contents) has animated dependency properties, the property’s base value is copied, not its current animated value.</span></span></summary>
        <returns><span data-ttu-id="4bc5a-141">此集合及其内容的可修改副本。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-141">A modifiable copy of this collection and its contents.</span></span> <span data-ttu-id="4bc5a-142">该副本的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-142">The copy's <see cref="P:System.Windows.Freezable.IsFrozen" /> value is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bc5a-143">此方法将隐藏继承<xref:System.Windows.Media.Animation.Animatable.Clone%2A?displayProperty=nameWithType>为方便起见的强类型实现的方法。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-143">This method shadows the inherited <xref:System.Windows.Media.Animation.Animatable.Clone%2A?displayProperty=nameWithType> method with a strongly typed implementation for convenience.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Freezable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="4bc5a-144">要复制的 <see cref="T:System.Windows.FreezableCollection`1" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-144">The <see cref="T:System.Windows.FreezableCollection`1" /> to copy.</span></span></param>
        <summary><span data-ttu-id="4bc5a-145">使用基（未经过动画处理的）属性值使此实例成为指定的 <see cref="T:System.Windows.FreezableCollection`1" /> 的复本（深层副本）。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-145">Makes this instance a clone (deep copy) of the specified <see cref="T:System.Windows.FreezableCollection`1" /> using base (non-animated) property values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bc5a-146">调用此方法<xref:System.Windows.FreezableCollection%601.Clone%2A>方法应不直接从代码中，除非调用时调用时重写此方法的基实现。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-146">This method is called by the <xref:System.Windows.FreezableCollection%601.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="4bc5a-147">若要创建当前对象的可修改副本，请调用<xref:System.Windows.FreezableCollection%601.Clone%2A>而不是直接调用此方法。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-147">To create a modifiable copy of the current object, call <xref:System.Windows.FreezableCollection%601.Clone%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="4bc5a-148">请参阅<see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />页以获得有关何时应重写此方法的信息。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-148">See the <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> page for information about when you should override this method.</span></span></para>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.FreezableCollection&lt;T&gt; CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.FreezableCollection`1&lt;!T&gt; CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As FreezableCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::FreezableCollection&lt;T&gt; ^ CloneCurrentValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FreezableCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4bc5a-149">创建此 <see cref="T:System.Windows.FreezableCollection`1" /> 及其内容的可修改副本，从而制作此对象的当前值的深层副本。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-149">Creates a modifiable copy of this <see cref="T:System.Windows.FreezableCollection`1" /> and its contents, making deep copies of this object's current values.</span></span> <span data-ttu-id="4bc5a-150">如果此对象（或其包含的对象）包含经过动画处理的依赖项属性，则会复制这些属性经过动画处理的当前值。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-150">If this object (or the objects it contains) contains animated dependency properties, their current animated values are copied.</span></span></summary>
        <returns><span data-ttu-id="4bc5a-151">集合及其内容的可修改复本。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-151">A modifiable clone of the collection and its contents.</span></span> <span data-ttu-id="4bc5a-152">即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="true." />，所克隆的对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也将为 <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="4bc5a-152">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bc5a-153">此方法将隐藏继承<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>为方便起见的强类型实现的方法。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-153">This method shadows the inherited <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType> method with a strongly typed implementation for convenience.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Animatable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="4bc5a-154">要克隆的 <see cref="T:System.Windows.FreezableCollection`1" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-154">The <see cref="T:System.Windows.FreezableCollection`1" /> to clone.</span></span></param>
        <summary><span data-ttu-id="4bc5a-155">使用当前的属性值使该实例成为指定的 <see cref="T:System.Windows.FreezableCollection`1" /> 的可修改复本（深层副本）。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-155">Makes this instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.FreezableCollection`1" /> using current property values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bc5a-156">调用此方法<xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A>方法应不直接从代码中，除非调用时调用时重写此方法的基实现。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-156">This method is called by the <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="4bc5a-157">若要创建当前对象的可修改副本，请调用<xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A>而不是直接调用此方法。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-157">To create a modifiable copy of the current object, call <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="4bc5a-158">请参阅<see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />页以获得有关何时应重写此方法的信息。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-158">See the <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> page for information about when you should override this method.</span></span></para>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4bc5a-159">要在此集合中定位的对象。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-159">The object to locate in this collection.</span></span> <span data-ttu-id="4bc5a-160">此对象可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-160">This object may be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="4bc5a-161">确定此 <see cref="T:System.Windows.FreezableCollection`1" /> 是否包含指定值。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-161">Determines whether this <see cref="T:System.Windows.FreezableCollection`1" /> contains the specified value.</span></span></summary>
        <returns>
          <span data-ttu-id="4bc5a-162">如果在 <see cref="T:System.Windows.FreezableCollection`1" /> 中查找到值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-162"><see langword="true" /> if value is found in the <see cref="T:System.Windows.FreezableCollection`1" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="4bc5a-163">一维数组，用作从 <see cref="T:System.Windows.FreezableCollection`1" /> 复制的元素的目标位置。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-163">The one-dimensional array that is the destination of the elements copied from <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></param>
        <param name="index"><span data-ttu-id="4bc5a-164"><c>array</c> 中从零开始的索引，在此处开始复制。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-164">The zero-based index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="4bc5a-165">从目标数组的指定索引处开始，将整个 <see cref="T:System.Windows.FreezableCollection`1" /> 复制到兼容的一维数组。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-165">Copies the entire <see cref="T:System.Windows.FreezableCollection`1" /> to a compatible one-dimensional array, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bc5a-166">注意，此操作的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-166">Note that this operation performs a shallow copy.</span></span> <span data-ttu-id="4bc5a-167">元素被复制到目标数组与枚举数循环访问此相同的顺序<xref:System.Windows.FreezableCollection%601>。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-167">The elements are copied to the target array in the same order in which the enumerator iterates through this <xref:System.Windows.FreezableCollection%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4bc5a-168"><paramref name="array" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-168"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4bc5a-169"><paramref name="index" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-169"><paramref name="index" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4bc5a-170">源 <see cref="T:System.Windows.FreezableCollection`1" /> 中元素的数目大于从索引到目标 <paramref name="array" /> 结尾的可用空间。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-170">The number of elements in the source <see cref="T:System.Windows.FreezableCollection`1" /> is greater than the available space from index to the end of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bc5a-171">获取此 <see cref="T:System.Windows.FreezableCollection`1" /> 包含的元素数。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-171">Gets the number of elements contained by this <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></summary>
        <value><span data-ttu-id="4bc5a-172">此 <see cref="T:System.Windows.FreezableCollection`1" /> 包含的元素数。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-172">The number of elements contained by this <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4bc5a-173">创建 <see cref="T:System.Windows.FreezableCollection`1" /> 的新实例。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-173">Creates a new instance of the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="4bc5a-174">新实例。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-174">The new instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bc5a-175">请勿调用此方法，直接 （但调用基实现中）。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-175">Do not call this method directly (except when calling base in an implementation).</span></span> <span data-ttu-id="4bc5a-176">内部调用此方法<xref:System.Windows.Freezable.CreateInstance%2A>，只要的新实例<xref:System.Windows.Freezable>创建。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-176">This method is called internally by <xref:System.Windows.Freezable.CreateInstance%2A>, whenever a new instance of the <xref:System.Windows.Freezable> is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4bc5a-177">下面的示例演示的典型实现<xref:System.Windows.Freezable.CreateInstanceCore%2A>。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-177">The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span></span>  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="4bc5a-178">每个<see cref="T:System.Windows.Freezable" />子类必须实现此方法。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-178">Every <see cref="T:System.Windows.Freezable" /> subclass must implement this method.</span></span> <span data-ttu-id="4bc5a-179">典型的实现是只需调用类默认构造函数并返回结果。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-179">Typical implementation is to simply call the class default constructor and return the result.</span></span></para>
        </block>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking">
          <span data-ttu-id="4bc5a-180">如果 <see cref="T:System.Windows.FreezableCollection`1" /> 只应返回它是否可冻结，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-180"><see langword="true" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> should simply return whether it can be frozen.</span></span> <span data-ttu-id="4bc5a-181">如果在调用此方法时，<see cref="T:System.Windows.FreezableCollection`1" /> 实例应实际冻结自身，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-181"><see langword="false" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> instance should actually freeze itself when this method is called.</span></span></param>
        <summary><span data-ttu-id="4bc5a-182">使此 <see cref="T:System.Windows.FreezableCollection`1" /> 对象成为不可修改的对象，或确定是否可使其成为不可修改的对象。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-182">Makes this <see cref="T:System.Windows.FreezableCollection`1" /> object unmodifiable or determines whether it can be made unmodifiable.</span></span></summary>
        <returns><span data-ttu-id="4bc5a-183">当 <paramref name="isChecking" /> 为 <see langword="true" /> 时，如果可以使此 <see cref="T:System.Windows.FreezableCollection`1" /> 成为不可修改的，则此方法返回 <see langword="true" />；否则返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-183">If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if this <see cref="T:System.Windows.FreezableCollection`1" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span></span>  
  
 <span data-ttu-id="4bc5a-184">当 <paramref name="isChecking" /> 为 <see langword="false" /> 时，如果指定的 <see cref="T:System.Windows.FreezableCollection`1" /> 当前不可修改，则此方法返回 <see langword="true" />；或者，如果无法将其变为不可修改，则返回 <see langword="false" />，并且其副作用是已开始更改此对象的冻结状态。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-184">If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the if the specified <see cref="T:System.Windows.FreezableCollection`1" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bc5a-185">请勿调用此方法，直接 （但调用基实现中）。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-185">Do not call this method directly (except when calling base in an implementation).</span></span> <span data-ttu-id="4bc5a-186">内部调用此方法<xref:System.Windows.Freezable.CanFreeze%2A>(与`isChecking`等于`true`) 和<xref:System.Windows.Freezable.Freeze%2A>(与`isChecking`等于`false`)。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-186">This method is called internally by <xref:System.Windows.Freezable.CanFreeze%2A> (with `isChecking` equal to `true`) and  <xref:System.Windows.Freezable.Freeze%2A> (with `isChecking` equal to `false`).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="4bc5a-187">有关何时重写此方法的信息，请参阅<see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-187">For information about when to override this method, see <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />.</span></span></para>
        </block>
        <altmember cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="4bc5a-188">要复制的 <see cref="T:System.Windows.FreezableCollection`1" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-188">The <see cref="T:System.Windows.FreezableCollection`1" /> to copy.</span></span></param>
        <summary><span data-ttu-id="4bc5a-189">使用基（未经过动画处理的）属性值使此实例成为指定 <see cref="T:System.Windows.FreezableCollection`1" /> 的冻结复本。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-189">Makes this instance a frozen clone of the specified <see cref="T:System.Windows.FreezableCollection`1" /> using base (non-animated) property values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bc5a-190">调用此方法<xref:System.Windows.Freezable.GetAsFrozen%2A>应不直接从代码中，除非调用时调用时重写此方法的基实现。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-190">This method is called by <xref:System.Windows.Freezable.GetAsFrozen%2A> and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="4bc5a-191">若要创建当前对象的冻结的副本，请调用<xref:System.Windows.Freezable.GetAsFrozen%2A>而不是直接调用此方法。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-191">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="4bc5a-192">有关何时重写此方法的信息，请参阅<see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-192">For information about when to override this method, see <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />.</span></span></para>
        </block>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="4bc5a-193">要复制的 <see cref="T:System.Windows.FreezableCollection`1" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-193">The <see cref="T:System.Windows.FreezableCollection`1" /> to copy.</span></span></param>
        <summary><span data-ttu-id="4bc5a-194">使该实例成为指定的 <see cref="T:System.Windows.Freezable" /> 的冻结复本。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-194">Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span></span> <span data-ttu-id="4bc5a-195">如果此对象具有经过动画处理的依赖项属性，则会复制这些属性经过动画处理的当前值。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-195">If this object has animated dependency properties, their current animated values are copied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bc5a-196">调用此方法<xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A>应不直接从代码中，除非调用时调用时重写此方法的基实现。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-196">This method is called by <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="4bc5a-197">若要创建当前对象的冻结的副本，请调用<xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A>而不是直接调用此方法。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-197">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="4bc5a-198">有关何时重写此方法的信息，请参阅<see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-198">For information about when to override this method, see <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />.</span></span></para>
        </block>
        <altmember cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Windows.FreezableCollection&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.FreezableCollection`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As FreezableCollection(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::FreezableCollection&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FreezableCollection&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4bc5a-199">返回整个 <see cref="T:System.Windows.FreezableCollection`1" /> 的一个枚举器。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-199">Returns an enumerator for the entire <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="4bc5a-200">整个 <see cref="T:System.Windows.FreezableCollection`1" /> 的枚举数。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-200">An enumerator for the entire <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4bc5a-201">要在 <see cref="T:System.Windows.FreezableCollection`1" /> 中定位的对象。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-201">The object to locate in the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="4bc5a-202">搜索指定的对象，并返回整个 <see cref="T:System.Windows.FreezableCollection`1" /> 中第一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-202">Searches for the specified object and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="4bc5a-203">如果找到，则为整个 <paramref name="value" /> 中 <see cref="T:System.Windows.FreezableCollection`1" /> 第一个匹配项的从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-203">The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Windows.FreezableCollection`1" />, if found; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, T value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="4bc5a-204">从零开始的索引，应在该位置插入 <c>value</c>。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-204">The zero-based index at which <c>value</c> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="4bc5a-205">要插入的对象。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-205">The object to insert.</span></span></param>
        <summary><span data-ttu-id="4bc5a-206">将指定对象插入到 <see cref="T:System.Windows.FreezableCollection`1" /> 中的指定索引位置。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-206">Inserts the specified object into the <see cref="T:System.Windows.FreezableCollection`1" /> at the specified index.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4bc5a-207"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-207"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4bc5a-208"><paramref name="index" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-208"><paramref name="index" /> is less than 0.</span></span>  
  
 <span data-ttu-id="4bc5a-209">\- 或 -</span><span class="sxs-lookup"><span data-stu-id="4bc5a-209">\- or -</span></span>  
  
 <span data-ttu-id="4bc5a-210"><paramref name="index" /> 大于 <see cref="P:System.Windows.FreezableCollection`1.Count" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-210"><paramref name="index" /> is greater than <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4bc5a-211"><see cref="T:System.Windows.FreezableCollection`1" /> 处于冻结状态（其 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="true" />）。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-211">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); void set(int index, T value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="4bc5a-212">要获取或设置的元素的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-212">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="4bc5a-213">获取或设置指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-213">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="4bc5a-214">指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-214">The element at the specified index.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4bc5a-215"><paramref name="index" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-215"><paramref name="index" /> is less than 0.</span></span>  
  
 <span data-ttu-id="4bc5a-216">\- 或 -</span><span class="sxs-lookup"><span data-stu-id="4bc5a-216">\- or -</span></span>  
  
 <span data-ttu-id="4bc5a-217"><paramref name="index" /> 等于或大于 <see cref="P:System.Windows.FreezableCollection`1.Count" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-217"><paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4bc5a-218">指定的元素为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-218">The specified element is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4bc5a-219">尝试在集合被冻结（其 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="true" />）时设置该集合中的项目。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-219">Attempting to set an item in the collection when the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(T value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4bc5a-220">要移除的对象。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-220">The object to remove.</span></span></param>
        <summary><span data-ttu-id="4bc5a-221">从 <see cref="T:System.Windows.FreezableCollection`1" /> 中移除指定对象的第一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-221">Removes the first occurrence of the specified object from the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></summary>
        <returns>
          <span data-ttu-id="4bc5a-222">如果在集合中找到 <paramref name="value" /> 的匹配项并且已将该匹配项移除，则为 <see langword="true" />；如果未能在集合中找到 <paramref name="value" />，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-222"><see langword="true" /> if an occurrence of <paramref name="value" /> was found in the collection and removed; <see langword="false" /> if <paramref name="value" /> could not be found in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4bc5a-223"><see cref="T:System.Windows.FreezableCollection`1" /> 处于冻结状态（其 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="true" />）。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-223">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="4bc5a-224">要移除的对象的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-224">The zero-based index of the object to remove.</span></span></param>
        <summary><span data-ttu-id="4bc5a-225">从 <see cref="T:System.Windows.FreezableCollection`1" /> 中从零开始的指定索引处移除对象。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-225">Removes the object at the specified zero-based index of the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4bc5a-226"><paramref name="index" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-226"><paramref name="index" /> is less than 0.</span></span>  
  
 <span data-ttu-id="4bc5a-227">\- 或 -</span><span class="sxs-lookup"><span data-stu-id="4bc5a-227">\- or -</span></span>  
  
 <span data-ttu-id="4bc5a-228"><paramref name="index" /> 大于 <see cref="P:System.Windows.FreezableCollection`1.Count" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-228"><paramref name="index" /> is greater than <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4bc5a-229"><see cref="T:System.Windows.FreezableCollection`1" /> 处于冻结状态（其 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="true" />）。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-229">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bc5a-230">有关此成员的说明，请参阅 <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-230">For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</span></span></summary>
        <value>
          <span data-ttu-id="4bc5a-231">如果 <see langword="true" /> 是只读的，则为 <see cref="T:System.Windows.FreezableCollection`1" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-231"><see langword="true" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bc5a-232">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-232">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4bc5a-233">它只能在 <xref:System.Windows.FreezableCollection%601> 实例强制转换为 <xref:System.Collections.Generic.ICollection%601> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-233">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4bc5a-234">有关此成员的说明，请参阅 <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-234">For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</span></span></summary>
        <returns><span data-ttu-id="4bc5a-235">一个可用于循环访问集合的 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-235">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bc5a-236">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-236">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4bc5a-237">它只能在 <xref:System.Windows.FreezableCollection%601> 实例强制转换为 <xref:System.Collections.Generic.IEnumerable%601> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-237">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="4bc5a-238">一个从零开始的 <see cref="T:System.Array" />，它接收 <see cref="T:System.Windows.FreezableCollection`1" /> 的复制项。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-238">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></param>
        <param name="index"><span data-ttu-id="4bc5a-239">指定的 <see cref="T:System.Array" /> 中接收复制内容的第一个位置。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-239">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</span></span></param>
        <summary><span data-ttu-id="4bc5a-240">有关此成员的说明，请参阅 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-240">For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bc5a-241">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-241">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4bc5a-242">它只能在 <xref:System.Windows.FreezableCollection%601> 实例强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-242">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.CopyTo(`0[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bc5a-243">有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-243">For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span></span></summary>
        <value>
          <span data-ttu-id="4bc5a-244">如果对 <see langword="true" /> 的访问是同步的（线程安全），则为 <see cref="T:System.Windows.FreezableCollection`1" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-244"><see langword="true" /> if access to the <see cref="T:System.Windows.FreezableCollection`1" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bc5a-245">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-245">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4bc5a-246">它只能在 <xref:System.Windows.FreezableCollection%601> 实例强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-246">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bc5a-247">有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.SyncRoot" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-247">For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</span></span></summary>
        <value><span data-ttu-id="4bc5a-248">可用于同步对 <see cref="T:System.Windows.FreezableCollection`1" /> 的访问的对象。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-248">An object that can be used to synchronize access to the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bc5a-249">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-249">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4bc5a-250">它只能在 <xref:System.Windows.FreezableCollection%601> 实例强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-250">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4bc5a-251">有关此成员的说明，请参阅 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-251">For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span></span></summary>
        <returns><span data-ttu-id="4bc5a-252">一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-252">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bc5a-253">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-253">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4bc5a-254">它只能在 <xref:System.Windows.FreezableCollection%601> 实例强制转换为 <xref:System.Collections.IEnumerable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-254">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4bc5a-255">要添加到 <see cref="T:System.Object" /> 的 <see cref="T:System.Windows.FreezableCollection`1" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-255">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="4bc5a-256">有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Add(System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-256">For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="4bc5a-257">新元素的插入位置。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-257">The position into which the new element was inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bc5a-258">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-258">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4bc5a-259">它只能在 <xref:System.Windows.FreezableCollection%601> 实例强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-259">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.Add(`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4bc5a-260">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Windows.FreezableCollection`1" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-260">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="4bc5a-261">有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Contains(System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-261">For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="4bc5a-262">如果在 <see cref="T:System.Windows.FreezableCollection`1" /> 中找到了 <see cref="T:System.Object" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-262"><see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.FreezableCollection`1" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bc5a-263">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-263">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4bc5a-264">它只能在 <xref:System.Windows.FreezableCollection%601> 实例强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-264">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4bc5a-265">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Windows.FreezableCollection`1" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-265">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="4bc5a-266">有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-266">For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="4bc5a-267">如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-267">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bc5a-268">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-268">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4bc5a-269">它只能在 <xref:System.Windows.FreezableCollection%601> 实例强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-269">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.IndexOf(`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="4bc5a-270">从零开始的索引，在该处插入 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-270">The zero-based index at which to insert the <see cref="T:System.Object" />.</span></span></param>
        <param name="value"><span data-ttu-id="4bc5a-271">要插入到 <see cref="T:System.Windows.FreezableCollection`1" /> 的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-271">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="4bc5a-272">有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-272">For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bc5a-273">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-273">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4bc5a-274">它只能在 <xref:System.Windows.FreezableCollection%601> 实例强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-274">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bc5a-275">有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.IsFixedSize" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-275">For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</span></span></summary>
        <value>
          <span data-ttu-id="4bc5a-276">如果 <see langword="true" /> 具有固定大小，则为 <see cref="T:System.Windows.FreezableCollection`1" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-276"><see langword="true" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bc5a-277">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-277">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4bc5a-278">它只能在 <xref:System.Windows.FreezableCollection%601> 实例强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-278">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bc5a-279">有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.IsReadOnly" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-279">For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</span></span></summary>
        <value>
          <span data-ttu-id="4bc5a-280">如果 <see langword="true" /> 是只读的，则为 <see cref="T:System.Windows.FreezableCollection`1" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-280"><see langword="true" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bc5a-281">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-281">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4bc5a-282">它只能在 <xref:System.Windows.FreezableCollection%601> 实例强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-282">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="4bc5a-283">要获取或设置的元素的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-283">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="4bc5a-284">有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.Item(System.Int32)" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-284">For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</span></span></summary>
        <value><span data-ttu-id="4bc5a-285">指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-285">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bc5a-286">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-286">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4bc5a-287">它只能在 <xref:System.Windows.FreezableCollection%601> 实例强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-287">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FreezableCollection`1.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4bc5a-288">要从 <see cref="T:System.Object" /> 移除的 <see cref="T:System.Windows.FreezableCollection`1" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-288">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="4bc5a-289">有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Remove(System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-289">For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bc5a-290">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-290">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4bc5a-291">它只能在 <xref:System.Windows.FreezableCollection%601> 实例强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4bc5a-291">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.Remove(`0)" />
      </Docs>
    </Member>
  </Members>
</Type>