<Type Name="DependencyPropertyChangedEventHandler" FullName="System.Windows.DependencyPropertyChangedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9c90ae19c4540e1db0d630a4da6cd7e4adb3f245" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30674721" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void DependencyPropertyChangedEventHandler(object sender, DependencyPropertyChangedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DependencyPropertyChangedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyPropertyChangedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub DependencyPropertyChangedEventHandler(sender As Object, e As DependencyPropertyChangedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void DependencyPropertyChangedEventHandler(System::Object ^ sender, DependencyPropertyChangedEventArgs e);" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">事件源。</param>
    <param name="e">事件数据。</param>
    <summary>表示将处理某些事件的方法，这些事件在特定的 <see cref="T:System.Windows.DependencyProperty" /> 实现上的 <see cref="T:System.Windows.DependencyObject" /> 发生更改时引发。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此委托是报告依赖项属性更改的特定事件的处理程序签名。  
  
 使用此处理程序的事件公开为[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]事件，不是路由事件。 通常这些事件遵循命名模式`Is(` *PropertyName*`)Changed`，其中*PropertyName*是<xref:System.Windows.DependencyProperty.Name%2A?displayProperty=nameWithType>的已更改的属性。 事件的自变量用来查询的属性的旧和新值由特定的事件报告。 通常存在 1:1 的对应关系之间没有属性所做的更改和报告的更改的特定事件。 也很有可能，但通常情况下具有相同的事件报告更改到多个属性。 在这种情况下，<xref:System.Windows.DependencyPropertyChangedEventArgs>应检查以确定已更改的属性。  
  
 事件数据类<xref:System.Windows.DependencyPropertyChangedEventArgs>比此委托只需使用更为广泛。 <xref:System.Windows.DependencyPropertyChangedEventArgs> 此外用于通信的数据<xref:System.Windows.PropertyChangedCallback>实现，后者是自定义功能和内部结构的一部分的[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]属性系统，并通过<xref:System.Windows.DependencyObject.OnPropertyChanged%2A>虚拟方法，可以重写以提供特定于类的任何依赖项属性的对象上发生更改时发送通知。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyPropertyChangedEventArgs" />
    <altmember cref="T:System.Windows.RoutedEvent" />
  </Docs>
</Type>