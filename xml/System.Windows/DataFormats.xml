<Type Name="DataFormats" FullName="System.Windows.DataFormats">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0e9407f14bddd433c725f73c63c350e3bfa79e90" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34246194" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class DataFormats" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataFormats extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DataFormats" />
  <TypeSignature Language="VB.NET" Value="Public Class DataFormats" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataFormats abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供一组预定义数据格式名，可用于标识剪贴板或拖放操作中可用的数据格式。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.DataObject>类和其他类的实现<xref:System.Windows.IDataObject>接口使用所定义的静态格式<xref:System.Windows.DataFormats>来描述每个数据对象中存储的数据格式。 数据对象通常用于将数据和从系统剪贴板中、 和中拖放操作。  
  
 下表列出由提供的静态数据格式字段的值<xref:System.Windows.DataFormats>。  为仅供参考; 提供了这些字段值一般情况下，代码应该始终引用相应的字段，而不是硬编码字符串。  
  
|字段|字段值|描述|  
|-----------|-----------------|-----------------|  
|<xref:System.Windows.DataFormats.Bitmap>|"位图"|指定 [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] 位图数据格式。|  
|<xref:System.Windows.DataFormats.CommaSeparatedValue>|"CSV"|指定以逗号分隔的值 (CSV) 数据格式。|  
|<xref:System.Windows.DataFormats.Dib>|"DeviceIndependentBitmap"|指定独立于设备的位图 (DIB) 数据格式。|  
|<xref:System.Windows.DataFormats.Dif>|"DataInterchangeFormat"|指定 Windows 数据交换格式 (DIF) 数据格式。|  
|<xref:System.Windows.DataFormats.EnhancedMetafile>|"EnhancedMetafile"|指定 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 增强型图元文件格式。|  
|<xref:System.Windows.DataFormats.FileDrop>|"FileDrop"|指定 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 文件放置格式。|  
|<xref:System.Windows.DataFormats.Html>|"HTML 格式"|指定 [!INCLUDE[TLA#tla_html](~/includes/tlasharptla-html-md.md)] 数据格式。|  
|<xref:System.Windows.DataFormats.Locale>|"区域设置"|指定 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 区域设置（区域性）数据格式。|  
|<xref:System.Windows.DataFormats.MetafilePicture>|"MetaFilePict"|指定 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 图元文件图片数据格式。|  
|<xref:System.Windows.DataFormats.OemText>|"OEMText"|指定标准 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] OEM 文本数据格式。|  
|<xref:System.Windows.DataFormats.Palette>|"调色板"|指定 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 调色板数据格式。|  
|<xref:System.Windows.DataFormats.PenData>|"PenData"|指定 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 钢笔数据格式。|  
|<xref:System.Windows.DataFormats.Riff>|"RiffAudio"|指定 [!INCLUDE[TLA#tla_riff](~/includes/tlasharptla-riff-md.md)] 音频数据格式。|  
|<xref:System.Windows.DataFormats.Rtf>|"多格式文本格式"|指定 [!INCLUDE[TLA#tla_rtf](~/includes/tlasharptla-rtf-md.md)] 数据格式。|  
|<xref:System.Windows.DataFormats.Serializable>|"PersistentObject"|指定封装任何类型的可序列化数据对象的数据格式。|  
|<xref:System.Windows.DataFormats.StringFormat>|"System.String"|指定 [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] 字符串类数据格式。|  
|<xref:System.Windows.DataFormats.SymbolicLink>|"SymbolicLink"|指定 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 符号链接数据格式。|  
|<xref:System.Windows.DataFormats.Text>|"Text"|指定 ANSI 文本数据格式。|  
|<xref:System.Windows.DataFormats.Tiff>|"TaggedImageFileFormat"|指定 [!INCLUDE[TLA#tla_tiff](~/includes/tlasharptla-tiff-md.md)] 数据格式。|  
|<xref:System.Windows.DataFormats.UnicodeText>|"UnicodeText"|指定 [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] 文本数据格式。|  
|<xref:System.Windows.DataFormats.WaveAudio>|"WaveAudio"|指定波形音频数据格式。|  
|<xref:System.Windows.DataFormats.Xaml>|"Xaml"|指定 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 数据格式。|  
|<xref:System.Windows.DataFormats.XamlPackage>|"XamlPackage"|指定 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 包数据格式。|  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Bitmap">
      <MemberSignature Language="C#" Value="public static readonly string Bitmap;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Bitmap" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.Bitmap" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Bitmap As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Bitmap;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] 位图数据格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 位图将计算机图形表示为一组位在内存中，而这些位表示在映像中的单个像素的属性。  
  
 使用此字段<xref:System.Windows.DataObject>类和其他类的实现<xref:System.Windows.IDataObject>接口来描述可用数据格式。  
  
 使用此字段与<xref:System.Windows.IDataObject.SetData%2A>方法将具有相应格式的数据添加到数据对象; 使用此字段与<xref:System.Windows.IDataObject.GetData%2A>方法来检索相应格式的数据。 若要检查数据对象是否包含此格式的数据，请使用<xref:System.Windows.IDataObject.GetDataPresent%2A>方法来查询的格式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommaSeparatedValue">
      <MemberSignature Language="C#" Value="public static readonly string CommaSeparatedValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string CommaSeparatedValue" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.CommaSeparatedValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommaSeparatedValue As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ CommaSeparatedValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定以逗号分隔的值 (CSV) 数据格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此格式是经常使用的电子表格一基本交换格式。  
  
 使用此字段<xref:System.Windows.DataObject>类和其他类的实现<xref:System.Windows.IDataObject>接口来描述可用数据格式。  
  
 使用此字段与<xref:System.Windows.IDataObject.SetData%2A>方法将具有相应格式的数据添加到数据对象; 使用此字段与<xref:System.Windows.IDataObject.GetData%2A>方法来检索相应格式的数据。 若要检查数据对象是否包含此格式的数据，请使用<xref:System.Windows.IDataObject.GetDataPresent%2A>方法来查询的格式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dib">
      <MemberSignature Language="C#" Value="public static readonly string Dib;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Dib" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.Dib" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Dib As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Dib;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 DIB 数据格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 DIB 是专门用于确保可以加载和显示在另一个应用程序完全它们显示在原始的应用程序的方式使用一个应用程序创建的位图图形文件格式。  
  
 使用此字段<xref:System.Windows.DataObject>类和其他类的实现<xref:System.Windows.IDataObject>接口来描述可用数据格式。  
  
 使用此字段与<xref:System.Windows.IDataObject.SetData%2A>方法将具有相应格式的数据添加到数据对象; 使用此字段与<xref:System.Windows.IDataObject.GetData%2A>方法来检索相应格式的数据。 若要检查数据对象是否包含此格式的数据，请使用<xref:System.Windows.IDataObject.GetDataPresent%2A>方法来查询的格式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dif">
      <MemberSignature Language="C#" Value="public static readonly string Dif;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Dif" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.Dif" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Dif As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Dif;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 Windows 数据交换格式 (DIF) 数据格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 差异是在其中数据库、 电子表格和相似的文档进行构造以便于实现由其使用并传输到其他程序的 ASCII 码组成一格式。  
  
 使用此字段<xref:System.Windows.DataObject>类和其他类的实现<xref:System.Windows.IDataObject>接口来描述可用数据格式。  
  
 使用此字段与<xref:System.Windows.IDataObject.SetData%2A>方法将具有相应格式的数据添加到数据对象; 使用此字段与<xref:System.Windows.IDataObject.GetData%2A>方法来检索相应格式的数据。 若要检查数据对象是否包含此格式的数据，请使用<xref:System.Windows.IDataObject.GetDataPresent%2A>方法来查询的格式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnhancedMetafile">
      <MemberSignature Language="C#" Value="public static readonly string EnhancedMetafile;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string EnhancedMetafile" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.EnhancedMetafile" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EnhancedMetafile As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ EnhancedMetafile;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 增强型元文件格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 增强型图元文件格式是[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]存储方面图图像的文件对象而不是像素。 在调整大小时，则图元文件将保留能力优于位图图像。  
  
 使用此字段<xref:System.Windows.DataObject>类和其他类的实现<xref:System.Windows.IDataObject>接口来描述可用数据格式。  
  
 使用此字段与<xref:System.Windows.IDataObject.SetData%2A>方法将具有相应格式的数据添加到数据对象; 使用此字段与<xref:System.Windows.IDataObject.GetData%2A>方法来检索相应格式的数据。 若要检查数据对象是否包含此格式的数据，请使用<xref:System.Windows.IDataObject.GetDataPresent%2A>方法来查询的格式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileDrop">
      <MemberSignature Language="C#" Value="public static readonly string FileDrop;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string FileDrop" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.FileDrop" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FileDrop As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ FileDrop;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 文件放置格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此格式与 shell 文件的拖动在拖放操作期间交互。  
  
 使用此字段<xref:System.Windows.DataObject>类和其他类的实现<xref:System.Windows.IDataObject>接口来描述可用数据格式。  
  
 使用此字段与<xref:System.Windows.IDataObject.SetData%2A>方法将具有相应格式的数据添加到数据对象; 使用此字段与<xref:System.Windows.IDataObject.GetData%2A>方法来检索相应格式的数据。 若要检查数据对象是否包含此格式的数据，请使用<xref:System.Windows.IDataObject.GetDataPresent%2A>方法来查询的格式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataFormat">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>为指定的数据格式返回定义名称和数字 ID 的 <see cref="T:System.Windows.DataFormat" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法还可以用于注册新的格式。 如果找不到指定的格式，它自动注册为新的数据格式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataFormat">
      <MemberSignature Language="C#" Value="public static System.Windows.DataFormat GetDataFormat (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DataFormat GetDataFormat(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataFormats.GetDataFormat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataFormat (id As Integer) As DataFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DataFormat ^ GetDataFormat(int id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">为其请求 <see cref="T:System.Windows.DataFormat" /> 对象的数据格式的数字 ID。</param>
        <summary>为指定的数据格式返回定义名称和数字 ID 的 <see cref="T:System.Windows.DataFormat" /> 对象。 所需的数据格式由数字 ID 指定。</summary>
        <returns>一个 <see cref="T:System.Windows.DataFormat" /> 对象，包含请求的数据格式的数字 ID 和名称。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法还可以用于注册新的格式。 如果找不到指定的格式，它自动注册为新的数据格式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataFormat">
      <MemberSignature Language="C#" Value="public static System.Windows.DataFormat GetDataFormat (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DataFormat GetDataFormat(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataFormats.GetDataFormat(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataFormat (format As String) As DataFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DataFormat ^ GetDataFormat(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DataFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">为其请求 <see cref="T:System.Windows.DataFormat" /> 对象的数据格式的名称。</param>
        <summary>为指定的数据格式返回定义名称和数字 ID 的 <see cref="T:System.Windows.DataFormat" /> 对象。 所需的数据格式由名称（字符串）指定。</summary>
        <returns>一个 <see cref="T:System.Windows.DataFormat" /> 对象，包含请求的数据格式的数字 ID 和名称。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法还可以用于注册新的格式。 如果找不到指定的格式，它自动注册为新的数据格式。  
  
 使用此方法要求调用方具有<xref:System.Security.Permissions.UIPermission>与 <xref:System.Security.Permissions.UIPermissionClipboard.AllClipboard?displayProperty=nameWithType>  
  
 标志设置。  下面的代码演示用于为程序集请求该权限的属性语法。  
  
```csharp  
[assembly: SecurityPermissionAttribute(SecurityAction.RequestMinimum, Flags = UIPermissionClipboard.AllClipboard)]  
```  
  
```vb  
<assembly: SecurityPermissionAttribute(SecurityAction.RequestMinimum, Flags := UIPermissionClipboard.AllClipboard)>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> 为 <see langword="null" />。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">用于访问低级别的非托管的代码的支持的剪贴板格式的注册。  关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Html">
      <MemberSignature Language="C#" Value="public static readonly string Html;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Html" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.Html" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Html As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Html;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 [!INCLUDE[TLA#tla_html](~/includes/tlasharptla-html-md.md)] 数据格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此字段<xref:System.Windows.DataObject>类和其他类的实现<xref:System.Windows.IDataObject>接口来描述可用数据格式。  
  
 使用此字段与<xref:System.Windows.IDataObject.SetData%2A>方法将具有相应格式的数据添加到数据对象; 使用此字段与<xref:System.Windows.IDataObject.GetData%2A>方法来检索相应格式的数据。 若要检查数据对象是否包含此格式的数据，请使用<xref:System.Windows.IDataObject.GetDataPresent%2A>方法来查询的格式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Locale">
      <MemberSignature Language="C#" Value="public static readonly string Locale;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Locale" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.Locale" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Locale As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Locale;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 区域设置（区域性）数据格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此字段<xref:System.Windows.DataObject>类和其他类的实现<xref:System.Windows.IDataObject>接口来描述可用数据格式。  
  
 使用此字段与<xref:System.Windows.IDataObject.SetData%2A>方法将具有相应格式的数据添加到数据对象; 使用此字段与<xref:System.Windows.IDataObject.GetData%2A>方法来检索相应格式的数据。 若要检查数据对象是否包含此格式的数据，请使用<xref:System.Windows.IDataObject.GetDataPresent%2A>方法来查询的格式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetafilePicture">
      <MemberSignature Language="C#" Value="public static readonly string MetafilePicture;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MetafilePicture" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.MetafilePicture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MetafilePicture As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ MetafilePicture;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 元文件图片数据格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 图元文件图片格式是存储在图形对象，而不是像素方面映像的 Windows 文件。 在调整大小时，则图元文件将保留能力优于位图图像。  
  
 使用此字段<xref:System.Windows.DataObject>类和其他类的实现<xref:System.Windows.IDataObject>接口来描述可用数据格式。  
  
 使用此字段与<xref:System.Windows.IDataObject.SetData%2A>方法将具有相应格式的数据添加到数据对象; 使用此字段与<xref:System.Windows.IDataObject.GetData%2A>方法来检索相应格式的数据。 若要检查数据对象是否包含此格式的数据，请使用<xref:System.Windows.IDataObject.GetDataPresent%2A>方法来查询的格式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OemText">
      <MemberSignature Language="C#" Value="public static readonly string OemText;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string OemText" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.OemText" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OemText As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ OemText;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定标准的 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] OEM 文本数据格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此字段<xref:System.Windows.DataObject>类和其他类的实现<xref:System.Windows.IDataObject>接口来描述可用数据格式。  
  
 使用此字段与<xref:System.Windows.IDataObject.SetData%2A>方法将具有相应格式的数据添加到数据对象; 使用此字段与<xref:System.Windows.IDataObject.GetData%2A>方法来检索相应格式的数据。 若要检查数据对象是否包含此格式的数据，请使用<xref:System.Windows.IDataObject.GetDataPresent%2A>方法来查询的格式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Palette">
      <MemberSignature Language="C#" Value="public static readonly string Palette;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Palette" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.Palette" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Palette As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Palette;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 调色板数据格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此字段<xref:System.Windows.DataObject>类和其他类的实现<xref:System.Windows.IDataObject>接口来描述可用数据格式。  
  
 使用此字段与<xref:System.Windows.IDataObject.SetData%2A>方法将具有相应格式的数据添加到数据对象; 使用此字段与<xref:System.Windows.IDataObject.GetData%2A>方法来检索相应格式的数据。 若要检查数据对象是否包含此格式的数据，请使用<xref:System.Windows.IDataObject.GetDataPresent%2A>方法来查询的格式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PenData">
      <MemberSignature Language="C#" Value="public static readonly string PenData;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string PenData" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.PenData" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PenData As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ PenData;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 书写数据格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 钢笔数据由所使用的手写软件笔画组成。  
  
 使用此字段<xref:System.Windows.DataObject>类和其他类的实现<xref:System.Windows.IDataObject>接口来描述可用数据格式。  
  
 使用此字段与<xref:System.Windows.IDataObject.SetData%2A>方法将具有相应格式的数据添加到数据对象; 使用此字段与<xref:System.Windows.IDataObject.GetData%2A>方法来检索相应格式的数据。 若要检查数据对象是否包含此格式的数据，请使用<xref:System.Windows.IDataObject.GetDataPresent%2A>方法来查询的格式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Riff">
      <MemberSignature Language="C#" Value="public static readonly string Riff;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Riff" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.Riff" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Riff As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Riff;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 [!INCLUDE[TLA#tla_riff](~/includes/tlasharptla-riff-md.md)] 音频数据格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_riff](~/includes/tla2sharptla-riff-md.md)] 是基于广泛的规范，用于定义对于不同类型的多媒体文件的标准格式而设计。  
  
 使用此字段<xref:System.Windows.DataObject>类和其他类的实现<xref:System.Windows.IDataObject>接口来描述可用数据格式。  
  
 使用此字段与<xref:System.Windows.IDataObject.SetData%2A>方法将具有相应格式的数据添加到数据对象; 使用此字段与<xref:System.Windows.IDataObject.GetData%2A>方法来检索相应格式的数据。 若要检查数据对象是否包含此格式的数据，请使用<xref:System.Windows.IDataObject.GetDataPresent%2A>方法来查询的格式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rtf">
      <MemberSignature Language="C#" Value="public static readonly string Rtf;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Rtf" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.Rtf" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Rtf As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Rtf;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 [!INCLUDE[TLA#tla_rtf](~/includes/tlasharptla-rtf-md.md)] 数据格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 RTF 是用于传输的文档内容体系结构适应格式应用程序之间的文本文档。  
  
 使用此字段<xref:System.Windows.DataObject>类和其他类的实现<xref:System.Windows.IDataObject>接口来描述可用数据格式。  
  
 使用此字段与<xref:System.Windows.IDataObject.SetData%2A>方法将具有相应格式的数据添加到数据对象; 使用此字段与<xref:System.Windows.IDataObject.GetData%2A>方法来检索相应格式的数据。 若要检查数据对象是否包含此格式的数据，请使用<xref:System.Windows.IDataObject.GetDataPresent%2A>方法来查询的格式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Serializable">
      <MemberSignature Language="C#" Value="public static readonly string Serializable;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Serializable" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.Serializable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Serializable As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Serializable;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定封装任何类型的可序列化数据对象的数据格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此字段<xref:System.Windows.DataObject>类和其他类的实现<xref:System.Windows.IDataObject>接口来描述可用数据格式。  
  
 使用此字段与<xref:System.Windows.IDataObject.SetData%2A>方法将具有相应格式的数据添加到数据对象; 使用此字段与<xref:System.Windows.IDataObject.GetData%2A>方法来检索相应格式的数据。 若要检查数据对象是否包含此格式的数据，请使用<xref:System.Windows.IDataObject.GetDataPresent%2A>方法来查询的格式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StringFormat">
      <MemberSignature Language="C#" Value="public static readonly string StringFormat;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string StringFormat" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.StringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StringFormat As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ StringFormat;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] 字符串类数据格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此字段<xref:System.Windows.DataObject>类和其他类的实现<xref:System.Windows.IDataObject>接口来描述可用数据格式。  
  
 使用此字段与<xref:System.Windows.IDataObject.SetData%2A>方法将具有相应格式的数据添加到数据对象; 使用此字段与<xref:System.Windows.IDataObject.GetData%2A>方法来检索相应格式的数据。 若要检查数据对象是否包含此格式的数据，请使用<xref:System.Windows.IDataObject.GetDataPresent%2A>方法来查询的格式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SymbolicLink">
      <MemberSignature Language="C#" Value="public static readonly string SymbolicLink;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string SymbolicLink" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.SymbolicLink" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SymbolicLink As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ SymbolicLink;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 符号链接数据格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 符号链接是接受的文件的目录项的位置，但是实际对不同的目录中的文件的引用的磁盘目录项。 符号链接也可能称为别名、 快捷、 软链接或符号链接。  
  
 使用此字段<xref:System.Windows.DataObject>类和其他类的实现<xref:System.Windows.IDataObject>接口来描述可用数据格式。  
  
 使用此字段与<xref:System.Windows.IDataObject.SetData%2A>方法将具有相应格式的数据添加到数据对象; 使用此字段与<xref:System.Windows.IDataObject.GetData%2A>方法来检索相应格式的数据。 若要检查数据对象是否包含此格式的数据，请使用<xref:System.Windows.IDataObject.GetDataPresent%2A>方法来查询的格式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public static readonly string Text;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Text" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.Text" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Text As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Text;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 ANSI 文本数据格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此字段<xref:System.Windows.DataObject>类和其他类的实现<xref:System.Windows.IDataObject>接口来描述可用数据格式。  
  
 使用此字段与<xref:System.Windows.IDataObject.SetData%2A>方法将具有相应格式的数据添加到数据对象; 使用此字段与<xref:System.Windows.IDataObject.GetData%2A>方法来检索相应格式的数据。 若要检查数据对象是否包含此格式的数据，请使用<xref:System.Windows.IDataObject.GetDataPresent%2A>方法来查询的格式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tiff">
      <MemberSignature Language="C#" Value="public static readonly string Tiff;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Tiff" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.Tiff" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Tiff As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Tiff;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 [!INCLUDE[TLA#tla_tiff](~/includes/tlasharptla-tiff-md.md)] 数据格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_tiff](~/includes/tla2sharptla-tiff-md.md)] 一个标准文件格式通常用于扫描、 存储和交换灰度图形图像。  
  
 使用此字段<xref:System.Windows.DataObject>类和其他类的实现<xref:System.Windows.IDataObject>接口来描述可用数据格式。  
  
 使用此字段与<xref:System.Windows.IDataObject.SetData%2A>方法将具有相应格式的数据添加到数据对象; 使用此字段与<xref:System.Windows.IDataObject.GetData%2A>方法来检索相应格式的数据。 若要检查数据对象是否包含此格式的数据，请使用<xref:System.Windows.IDataObject.GetDataPresent%2A>方法来查询的格式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnicodeText">
      <MemberSignature Language="C#" Value="public static readonly string UnicodeText;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UnicodeText" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.UnicodeText" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UnicodeText As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UnicodeText;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] 文本数据格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这种数据格式表示 16 位字符编码 Unicode，也称为 utf-16 和 ucs-2。  
  
 使用此字段<xref:System.Windows.DataObject>类和其他类的实现<xref:System.Windows.IDataObject>接口来描述可用数据格式。  
  
 使用此字段与<xref:System.Windows.IDataObject.SetData%2A>方法将具有相应格式的数据添加到数据对象; 使用此字段与<xref:System.Windows.IDataObject.GetData%2A>方法来检索相应格式的数据。 若要检查数据对象是否包含此格式的数据，请使用<xref:System.Windows.IDataObject.GetDataPresent%2A>方法来查询的格式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaveAudio">
      <MemberSignature Language="C#" Value="public static readonly string WaveAudio;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string WaveAudio" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.WaveAudio" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WaveAudio As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ WaveAudio;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定波形音频数据格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此字段<xref:System.Windows.DataObject>类和其他类的实现<xref:System.Windows.IDataObject>接口来描述可用数据格式。  
  
 使用此字段与<xref:System.Windows.IDataObject.SetData%2A>方法将具有相应格式的数据添加到数据对象; 使用此字段与<xref:System.Windows.IDataObject.GetData%2A>方法来检索相应格式的数据。 若要检查数据对象是否包含此格式的数据，请使用<xref:System.Windows.IDataObject.GetDataPresent%2A>方法来查询的格式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xaml">
      <MemberSignature Language="C#" Value="public static readonly string Xaml;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Xaml" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.Xaml" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Xaml As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Xaml;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 数据格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XAML 是用于表示对象树的一种基于 XML 的语言。 可以使用任何处理这些对象生成的事件[!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)]编程语言。 在[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]，[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]通常用于描述用户界面 (UI)、 文档和媒体体验。  
  
 使用此字段<xref:System.Windows.DataObject>类和其他类的实现<xref:System.Windows.IDataObject>接口来描述可用数据格式。  
  
 使用此字段与<xref:System.Windows.IDataObject.SetData%2A>方法将具有相应格式的数据添加到数据对象; 使用此字段与<xref:System.Windows.IDataObject.GetData%2A>方法来检索相应格式的数据。 若要检查数据对象是否包含此格式的数据，请使用<xref:System.Windows.IDataObject.GetDataPresent%2A>方法来查询的格式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XamlPackage">
      <MemberSignature Language="C#" Value="public static readonly string XamlPackage;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string XamlPackage" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.XamlPackage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly XamlPackage As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ XamlPackage;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 包数据格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此字段<xref:System.Windows.DataObject>类和其他类的实现<xref:System.Windows.IDataObject>接口来描述可用数据格式。  
  
 使用此字段与<xref:System.Windows.IDataObject.SetData%2A>方法将具有相应格式的数据添加到数据对象; 使用此字段与<xref:System.Windows.IDataObject.GetData%2A>方法来检索相应格式的数据。 若要检查数据对象是否包含此格式的数据，请使用<xref:System.Windows.IDataObject.GetDataPresent%2A>方法来查询的格式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>