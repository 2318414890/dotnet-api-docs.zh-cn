<Type Name="ObjectQuery&lt;T&gt;" FullName="System.Data.Objects.ObjectQuery&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="920529d700537667f3673c12dbe1126061fb30ef" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37678209" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectQuery&lt;T&gt; : System.Data.Objects.ObjectQuery, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Linq.IOrderedQueryable&lt;T&gt;, System.Linq.IQueryable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectQuery`1&lt;T&gt; extends System.Data.Objects.ObjectQuery implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.IEnumerable, class System.ComponentModel.IListSource, class System.Linq.IOrderedQueryable, class System.Linq.IOrderedQueryable`1&lt;!T&gt;, class System.Linq.IQueryable, class System.Linq.IQueryable`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectQuery`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectQuery(Of T)&#xA;Inherits ObjectQuery&#xA;Implements IEnumerable(Of T), IOrderedQueryable(Of T), IQueryable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ObjectQuery : System::Data::Objects::ObjectQuery, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Linq::IOrderedQueryable&lt;T&gt;, System::Linq::IQueryable&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type ObjectQuery&lt;'T&gt; = class&#xA;    inherit ObjectQuery&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface IQueryable&lt;'T&gt;&#xA;    interface IQueryable&#xA;    interface IOrderedQueryable&lt;'T&gt;&#xA;    interface IOrderedQueryable&#xA;    interface IListSource" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Objects.ObjectQuery</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IOrderedQueryable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="3e6da-101">查询的实体类型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3e6da-101">The entity type of the query.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="3e6da-102">Represents a typed query against a conceptual model in a given object context.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3e6da-102">Represents a typed query against a conceptual model in a given object context.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e6da-103"><xref:System.Data.Objects.ObjectQuery%601> 泛型类表示一个查询，该查询返回由零个或多个特定类型的对象组成的集合。</span><span class="sxs-lookup"><span data-stu-id="3e6da-103">The <xref:System.Data.Objects.ObjectQuery%601> generic class represents a query that returns a collection of zero or more objects of a specific type.</span></span> <span data-ttu-id="3e6da-104">在执行对象查询之前，必须定义 <xref:System.Data.Objects.ObjectContext>。</span><span class="sxs-lookup"><span data-stu-id="3e6da-104">The <xref:System.Data.Objects.ObjectContext> must be defined before an object query can be executed.</span></span> <span data-ttu-id="3e6da-105">此上下文提供了编写和执行查询所需的连接和元数据信息。</span><span class="sxs-lookup"><span data-stu-id="3e6da-105">This context provides the connection and metadata information that is required to compose and execute the query.</span></span> <span data-ttu-id="3e6da-106">在以下方案中将执行对象查询：</span><span class="sxs-lookup"><span data-stu-id="3e6da-106">An object query is executed in the following scenarios:</span></span>  
  
-   <span data-ttu-id="3e6da-107">对其执行操作时，例如 `foreach` (C#) 或 `For Each` (Visual Basic) 枚举期间。</span><span class="sxs-lookup"><span data-stu-id="3e6da-107">When it is acted upon, such as during a `foreach` (C#) or `For Each` (Visual Basic) enumeration.</span></span>  
  
-   <span data-ttu-id="3e6da-108">分配用于填充 <xref:System.Collections.Generic.List%601> 集合时。</span><span class="sxs-lookup"><span data-stu-id="3e6da-108">When it is assigned to fill a <xref:System.Collections.Generic.List%601> collection.</span></span>  
  
-   <span data-ttu-id="3e6da-109">显式调用 <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> 方法时。</span><span class="sxs-lookup"><span data-stu-id="3e6da-109">When the <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> method is explicitly called.</span></span>  
  
 <span data-ttu-id="3e6da-110">查询本身可以使用一个 [!INCLUDE[esql](~/includes/esql-md.md)] 语句或 LINQ 查询进行创建，也可以使用类中包含的查询生成器方法以增量方式生成。</span><span class="sxs-lookup"><span data-stu-id="3e6da-110">The query itself can be created by using an [!INCLUDE[esql](~/includes/esql-md.md)] statement or a LINQ query, or it can be incrementally built by using the query builder methods included in the class.</span></span> <span data-ttu-id="3e6da-111">在每种情况下，结果都为一个新 <xref:System.Data.Objects.ObjectQuery%601> 实例，该实例在显式执行或对其进行枚举时，会将查询发送到数据源进行执行并返回结果。</span><span class="sxs-lookup"><span data-stu-id="3e6da-111">In every case, the result is a new <xref:System.Data.Objects.ObjectQuery%601> instance that, when explicitly executed or enumerated over, will send the query to the data source for execution and return the results.</span></span>  
  
 <span data-ttu-id="3e6da-112"><xref:System.Data.Objects.ObjectQuery%601> 通常是实体类型，也可以是 <xref:System.Data.Common.DbDataRecord> 类型（用于匿名类型的投影）或基元类型（如整数或字符串）。</span><span class="sxs-lookup"><span data-stu-id="3e6da-112">An <xref:System.Data.Objects.ObjectQuery%601> is frequently of an entity type, but it can also be of <xref:System.Data.Common.DbDataRecord> type, for projections to an anonymous type, or of a primitive type, such as an integer or string.</span></span> <span data-ttu-id="3e6da-113">有关详细信息，请参阅[对象查询](http://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-113">For more information, see [Object Queries](http://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e6da-114">本主题中的示例基于[AdventureWorks 销售模型](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-114">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span>  
  
 <span data-ttu-id="3e6da-115">该示例演示如何构造 <xref:System.Data.Objects.ObjectQuery%601> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="3e6da-115">The example shows how to construct an instance of the <xref:System.Data.Objects.ObjectQuery%601> class.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3e6da-116">Initializes a new instance of the <see cref="T:System.Data.Objects.ObjectQuery`1" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-116">Initializes a new instance of the <see cref="T:System.Data.Objects.ObjectQuery`1" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e6da-117">可以对 <xref:System.Data.Objects.ObjectQuery%601> 进行初始化，使之表示单个标量结果而不是标量结果集合。</span><span class="sxs-lookup"><span data-stu-id="3e6da-117">An <xref:System.Data.Objects.ObjectQuery%601> can be initialized in such a way that it represents a single scalar result and not a collection of scalar results.</span></span> <span data-ttu-id="3e6da-118">某些扩展方法要求使用集合结果作为输入。</span><span class="sxs-lookup"><span data-stu-id="3e6da-118">Some extension methods require collection results as input.</span></span> <span data-ttu-id="3e6da-119">在这种情况下，当调用其中的一个方法时将引发 <xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="3e6da-119">In this case, an <xref:System.ArgumentException> is thrown when one of these methods is called.</span></span> <span data-ttu-id="3e6da-120">有关详细信息，请参阅[对象查询](http://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-120">For more information, see [Object Queries](http://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span></span>  
  
 <span data-ttu-id="3e6da-121">当你的应用程序生成在运行时的 Entity SQL 查询时，应注意的数据源的任何命令长度限制。</span><span class="sxs-lookup"><span data-stu-id="3e6da-121">When your application generates Entity SQL queries at runtime, you should be aware of any command length limitations of the data source.</span></span> <span data-ttu-id="3e6da-122">实体 SQL 不强制对查询中的命令文本的长度限制。</span><span class="sxs-lookup"><span data-stu-id="3e6da-122">Entity SQL does not enforce limitations on the length of the command text in queries.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectQuery (string commandText, System.Data.Objects.ObjectContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.Objects.ObjectContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, context As ObjectContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectQuery(System::String ^ commandText, System::Data::Objects::ObjectContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectQuery&lt;'T&gt; : string * System.Data.Objects.ObjectContext -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="new System.Data.Objects.ObjectQuery&lt;'T&gt; (commandText, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="context" Type="System.Data.Objects.ObjectContext" />
      </Parameters>
      <Docs>
        <param name="commandText">
          <span data-ttu-id="3e6da-123">The [!INCLUDE[esql](~/includes/esql-md.md)] query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-123">The [!INCLUDE[esql](~/includes/esql-md.md)] query.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="3e6da-124">The <see cref="T:System.Data.Objects.ObjectContext" /> on which to execute the query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-124">The <see cref="T:System.Data.Objects.ObjectContext" /> on which to execute the query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e6da-125">Creates a new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance using the specified [!INCLUDE[esql](~/includes/esql-md.md)] command as the initial query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-125">Creates a new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance using the specified [!INCLUDE[esql](~/includes/esql-md.md)] command as the initial query.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e6da-126">当你的应用程序生成在运行时的 Entity SQL 查询时，应注意的数据源的任何命令长度限制。</span><span class="sxs-lookup"><span data-stu-id="3e6da-126">When your application generates Entity SQL queries at runtime, you should be aware of any command length limitations of the data source.</span></span> <span data-ttu-id="3e6da-127">实体 SQL 不强制对查询中的命令文本的长度限制。</span><span class="sxs-lookup"><span data-stu-id="3e6da-127">Entity SQL does not enforce limitations on the length of the command text in queries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e6da-128">本主题中的示例基于[AdventureWorks 销售模型](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-128">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="3e6da-129">该示例演示如何构造 <xref:System.Data.Objects.ObjectQuery%601> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="3e6da-129">The example shows how to construct an instance of the <xref:System.Data.Objects.ObjectQuery%601> class.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectQuery (string commandText, System.Data.Objects.ObjectContext context, System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.Objects.ObjectContext context, valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectQuery(System::String ^ commandText, System::Data::Objects::ObjectContext ^ context, System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectQuery&lt;'T&gt; : string * System.Data.Objects.ObjectContext * System.Data.Objects.MergeOption -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="new System.Data.Objects.ObjectQuery&lt;'T&gt; (commandText, context, mergeOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="context" Type="System.Data.Objects.ObjectContext" />
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="commandText">
          <span data-ttu-id="3e6da-130">The [!INCLUDE[esql](~/includes/esql-md.md)] query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-130">The [!INCLUDE[esql](~/includes/esql-md.md)] query.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="3e6da-131">The <see cref="T:System.Data.Objects.ObjectContext" /> on which to execute the query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-131">The <see cref="T:System.Data.Objects.ObjectContext" /> on which to execute the query.</span>
          </span>
        </param>
        <param name="mergeOption">
          <span data-ttu-id="3e6da-132">Specifies how the entities that are retrieved through this query should be merged with the entities that have been returned from previous queries against the same <see cref="T:System.Data.Objects.ObjectContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-132">Specifies how the entities that are retrieved through this query should be merged with the entities that have been returned from previous queries against the same <see cref="T:System.Data.Objects.ObjectContext" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e6da-133">Creates a new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance using the specified [!INCLUDE[esql](~/includes/esql-md.md)] command as the initial query and the specified merge option.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-133">Creates a new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance using the specified [!INCLUDE[esql](~/includes/esql-md.md)] command as the initial query and the specified merge option.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e6da-134">当你的应用程序生成在运行时的 Entity SQL 查询时，应注意的数据源的任何命令长度限制。</span><span class="sxs-lookup"><span data-stu-id="3e6da-134">When your application generates Entity SQL queries at runtime, you should be aware of any command length limitations of the data source.</span></span> <span data-ttu-id="3e6da-135">实体 SQL 不强制对查询中的命令文本的长度限制。</span><span class="sxs-lookup"><span data-stu-id="3e6da-135">Entity SQL does not enforce limitations on the length of the command text in queries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e6da-136">此示例基于[AdventureWorks 销售模型](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-136">This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="3e6da-137"><xref:System.Data.Objects.ObjectQuery%601> 以指定的查询、<xref:System.Data.Objects.ObjectContext> 和 <xref:System.Data.Objects.MergeOption> 进行初始化。</span><span class="sxs-lookup"><span data-stu-id="3e6da-137">The <xref:System.Data.Objects.ObjectQuery%601> is initialized with the specified query, <xref:System.Data.Objects.ObjectContext>, and <xref:System.Data.Objects.MergeOption>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_select)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_select)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Distinct" />
      <MemberSignature Language="VB.NET" Value="Public Function Distinct () As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Distinct();" />
      <MemberSignature Language="F#" Value="member this.Distinct : unit -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Distinct " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3e6da-138">Limits the query to unique results.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-138">Limits the query to unique results.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e6da-139">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with [SELECT DISTINCT](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) applied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-139">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with [SELECT DISTINCT](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e6da-140">此查询生成器方法返回<xref:System.Data.Objects.ObjectQuery%601>等效于在原始查询中使用的实例[SELECT DISTINCT](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md)应用。</span><span class="sxs-lookup"><span data-stu-id="3e6da-140">This query builder method returns an <xref:System.Data.Objects.ObjectQuery%601> instance that is equivalent to the original query with [SELECT DISTINCT](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) applied.</span></span>  
  
 <span data-ttu-id="3e6da-141">`DISTINCT`运算符不能应用于对象 （如 ntext) 数据源中包含到不可比较列的映射。</span><span class="sxs-lookup"><span data-stu-id="3e6da-141">The `DISTINCT` operator cannot be applied to an object that includes a mapping to a non-comparable column in the data source (such as ntext).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e6da-142">本主题中的示例基于[AdventureWorks 销售模型](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-142">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="3e6da-143">该示例使用 <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> 方法创建新的 <xref:System.Data.Objects.ObjectQuery%601> 对象。</span><span class="sxs-lookup"><span data-stu-id="3e6da-143">The example uses <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> method to create a new <xref:System.Data.Objects.ObjectQuery%601> object.</span></span> <span data-ttu-id="3e6da-144">然后对新的 <xref:System.Data.Objects.ObjectQuery%601.Distinct%2A> 对象调用 <xref:System.Data.Objects.ObjectQuery%601>，以获取此查询的唯一结果。</span><span class="sxs-lookup"><span data-stu-id="3e6da-144">Then it calls <xref:System.Data.Objects.ObjectQuery%601.Distinct%2A> on the new <xref:System.Data.Objects.ObjectQuery%601> object to get the unique results of this query.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_distinct_unionall)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_distinct_unionall)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Except (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Except(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Except(System.Data.Objects.ObjectQuery{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Except (query As ObjectQuery(Of T)) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Except(System::Data::Objects::ObjectQuery&lt;T&gt; ^ query);" />
      <MemberSignature Language="F#" Value="member this.Except : System.Data.Objects.ObjectQuery&lt;'T&gt; -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Except query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query">
          <span data-ttu-id="3e6da-145">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to exclude from the query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-145">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to exclude from the query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e6da-146">Limits the query results by excluding results based on the results of another object query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-146">Limits the query results by excluding results based on the results of another object query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e6da-147">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with [EXCEPT](~/docs/framework/data/adonet/ef/language-reference/except-entity-sql.md) applied based on the specified <paramref name="query" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-147">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with [EXCEPT](~/docs/framework/data/adonet/ef/language-reference/except-entity-sql.md) applied based on the specified <paramref name="query" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e6da-148">所提供`query`用于定义结果中排除必须为相同类型的且与兼容的类型为<xref:System.Data.Objects.ObjectQuery%601>。</span><span class="sxs-lookup"><span data-stu-id="3e6da-148">The supplied `query` that defines results to exclude must be of the same type or of a type that is compatible with the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 <span data-ttu-id="3e6da-149">定义的参数中提供`query`中定义的参数与合并<xref:System.Data.Objects.ObjectQuery%601>实例。</span><span class="sxs-lookup"><span data-stu-id="3e6da-149">Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance.</span></span> <span data-ttu-id="3e6da-150">参数在组合后的 <xref:System.Data.Objects.ObjectParameterCollection> 中必须是唯一的。</span><span class="sxs-lookup"><span data-stu-id="3e6da-150">Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="3e6da-151">组合后的集合中不能有两个具有相同名称的参数。</span><span class="sxs-lookup"><span data-stu-id="3e6da-151">There cannot be two parameters in the combined collection with the same name.</span></span> <span data-ttu-id="3e6da-152">有关详细信息，请参阅[查询生成器方法](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-152">For more information, see [Query Builder Methods](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
 <span data-ttu-id="3e6da-153">生成的查询从 <xref:System.Data.Objects.ObjectQuery%601> 实例（调用了它的 <xref:System.Data.Objects.ObjectQuery%601.Except%2A>）继承连接。</span><span class="sxs-lookup"><span data-stu-id="3e6da-153">The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.Except%2A> was called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e6da-154">此示例基于[AdventureWorks 销售模型](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-154">This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="3e6da-155">该示例使用 <xref:System.Data.Objects.ObjectQuery%601.Except%2A> 方法创建新的 <xref:System.Data.Objects.ObjectQuery%601> 对象，然后循环访问新查询的结果。</span><span class="sxs-lookup"><span data-stu-id="3e6da-155">The example uses <xref:System.Data.Objects.ObjectQuery%601.Except%2A> method to create a new <xref:System.Data.Objects.ObjectQuery%601> object and then iterates through the result of the new query.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Except](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_except)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Except](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_except)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e6da-156">The <paramref name="query" /> parameter is <see langword="null" /> or an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-156">The <paramref name="query" /> parameter is <see langword="null" /> or an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult&lt;T&gt; Execute (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult`1&lt;!T&gt; Execute(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Execute(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectResult&lt;T&gt; ^ Execute(System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Data.Objects.MergeOption -&gt; System.Data.Objects.ObjectResult&lt;'T&gt;" Usage="objectQuery.Execute mergeOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption">
          <span data-ttu-id="3e6da-157">The <see cref="T:System.Data.Objects.MergeOption" /> to use when executing the query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-157">The <see cref="T:System.Data.Objects.MergeOption" /> to use when executing the query.</span>
          </span>
          <span data-ttu-id="3e6da-158">The default is <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-158">The default is <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e6da-159">Executes the object query with the specified merge option.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-159">Executes the object query with the specified merge option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e6da-160">An <see cref="T:System.Data.Objects.ObjectResult`1" /> that contains a collection of entity objects returned by the query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-160">An <see cref="T:System.Data.Objects.ObjectResult`1" /> that contains a collection of entity objects returned by the query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e6da-161">对象查询的默认合并选项为 <xref:System.Data.Objects.MergeOption.AppendOnly>。</span><span class="sxs-lookup"><span data-stu-id="3e6da-161">The default merge option for object queries is <xref:System.Data.Objects.MergeOption.AppendOnly>.</span></span> <span data-ttu-id="3e6da-162">有关详细信息，请参阅[标识解析、 状态管理和更改跟踪](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-162">For more information, see [Identity Resolution, State Management, and Change Tracking](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e6da-163">此示例基于[AdventureWorks 销售模型](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-163">This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="3e6da-164">该示例从 <xref:System.Data.Objects.ObjectResult%601> 方法返回一个 <xref:System.Data.Objects.ObjectQuery.Execute%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e6da-164">The example returns an <xref:System.Data.Objects.ObjectResult%601> from <xref:System.Data.Objects.ObjectQuery.Execute%2A> method.</span></span> <span data-ttu-id="3e6da-165">然后，获取一个枚举器并循环访问查询结果。</span><span class="sxs-lookup"><span data-stu-id="3e6da-165">Then it gets an enumerator and iterates through the query results.</span></span> <span data-ttu-id="3e6da-166">最后，释放枚举器和 <xref:System.Data.Objects.ObjectResult%601> 对象。</span><span class="sxs-lookup"><span data-stu-id="3e6da-166">At the end it releases the enumerator and the <xref:System.Data.Objects.ObjectResult%601> object.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#QueryResult](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#queryresult)]
 [!code-vb[DP ObjectServices Concepts#QueryResult](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#queryresult)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt; GroupBy (string keys, string projection, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;class System.Data.Common.DbDataRecord&gt; GroupBy(string keys, string projection, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.GroupBy(System.String,System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupBy (keys As String, projection As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of DbDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;System::Data::Common::DbDataRecord ^&gt; ^ GroupBy(System::String ^ keys, System::String ^ projection, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.GroupBy : string * string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;" Usage="objectQuery.GroupBy (keys, projection, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
        <Parameter Name="projection" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="3e6da-167">The key columns by which to group the results.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-167">The key columns by which to group the results.</span>
          </span>
        </param>
        <param name="projection">
          <span data-ttu-id="3e6da-168">The list of selected properties that defines the projection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-168">The list of selected properties that defines the projection.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="3e6da-169">Zero or more parameters that are used in this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-169">Zero or more parameters that are used in this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e6da-170">Groups the query results by the specified criteria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-170">Groups the query results by the specified criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e6da-171">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance of type <see cref="T:System.Data.Common.DbDataRecord" /> that is equivalent to the original instance with [GROUP BY](~/docs/framework/data/adonet/ef/language-reference/group-by-entity-sql.md) applied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-171">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance of type <see cref="T:System.Data.Common.DbDataRecord" /> that is equivalent to the original instance with [GROUP BY](~/docs/framework/data/adonet/ef/language-reference/group-by-entity-sql.md) applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e6da-172"><xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> 应用指定的映射`projection`参数。</span><span class="sxs-lookup"><span data-stu-id="3e6da-172"><xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> applies the projection specified by the `projection` parameter.</span></span> <span data-ttu-id="3e6da-173">这意味着 <xref:System.Data.Objects.ObjectQuery%601> 方法返回的 <xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> 始终具有类型 <xref:System.Data.Common.DbDataRecord>。</span><span class="sxs-lookup"><span data-stu-id="3e6da-173">This means that the <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> method is always of type <xref:System.Data.Common.DbDataRecord>.</span></span> <span data-ttu-id="3e6da-174">有关详细信息，请参阅[对象查询](http://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-174">For more information, see [Object Queries](http://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e6da-175">此示例基于[AdventureWorks 销售模型](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-175">This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span>  
  
 <span data-ttu-id="3e6da-176">此示例创建一个新的 <xref:System.Data.Objects.ObjectQuery%601> 对象，该对象包含现有查询的按产品名称分组的结果。</span><span class="sxs-lookup"><span data-stu-id="3e6da-176">This example creates a new <xref:System.Data.Objects.ObjectQuery%601> object that contains the results of the existing query grouped by product name.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_GroupBy](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_groupby)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_GroupBy](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_groupby)]  
  
 <span data-ttu-id="3e6da-177">此示例返回一组嵌套的数据记录，其中包含`Contact.LastName`列中，分组和按字母顺序排序的第一个字母`Contact.LastName`。</span><span class="sxs-lookup"><span data-stu-id="3e6da-177">This example returns a set of nested data records that contain the `Contact.LastName` column, grouped and sorted alphabetically by the first letter of `Contact.LastName`.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#Projection_GroupBy](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#projection_groupby)]
 [!code-vb[DP ObjectServices Concepts#Projection_GroupBy](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#projection_groupby)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e6da-178">The <paramref name="query" /> parameter is <see langword="null" /> or an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-178">The <paramref name="query" /> parameter is <see langword="null" /> or an empty string.</span>
          </span>
          <span data-ttu-id="3e6da-179">-or-  The <paramref name="projection" /> parameter is <see langword="null" /> or an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-179">-or-  The <paramref name="projection" /> parameter is <see langword="null" /> or an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Include">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Include (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Include(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Include(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Include (path As String) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Include(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.Include : string -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Include path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="3e6da-180">Dot-separated list of related objects to return in the query results.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-180">Dot-separated list of related objects to return in the query results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e6da-181">Specifies the related objects to include in the query results.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-181">Specifies the related objects to include in the query results.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e6da-182">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> with the defined query path.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-182">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> with the defined query path.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e6da-183">查询路径可以用于 Entity SQL 和 LINQ 查询。</span><span class="sxs-lookup"><span data-stu-id="3e6da-183">Query paths can be used with Entity SQL and LINQ queries.</span></span>  
  
 <span data-ttu-id="3e6da-184">路径是完全内包含的。</span><span class="sxs-lookup"><span data-stu-id="3e6da-184">Paths are all-inclusive.</span></span> <span data-ttu-id="3e6da-185">例如，如果一个包含调用指示`Include("Orders.OrderLines")`，不仅会`OrderLines`还将包括在内， `Orders`。</span><span class="sxs-lookup"><span data-stu-id="3e6da-185">For example, if an include call indicates `Include("Orders.OrderLines")`, not only will `OrderLines` be included, but also `Orders`.</span></span> <span data-ttu-id="3e6da-186">有关详细信息，请参阅[加载相关对象](http://msdn.microsoft.com/library/452347d2-7b3b-44cd-9001-231299a28cb1)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-186">For more information, see [Loading Related Objects](http://msdn.microsoft.com/library/452347d2-7b3b-44cd-9001-231299a28cb1).</span></span>  
  
 <span data-ttu-id="3e6da-187">在调用 <xref:System.Data.Objects.ObjectQuery%601.Include%2A> 方法时，查询路径仅在 <xref:System.Data.Objects.ObjectQuery%601> 的返回实例上有效。</span><span class="sxs-lookup"><span data-stu-id="3e6da-187">When you call the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method, the query path is only valid on the returned instance of the <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="3e6da-188">不影响 <xref:System.Data.Objects.ObjectQuery%601> 的其他实例和对象上下文本身。</span><span class="sxs-lookup"><span data-stu-id="3e6da-188">Other instances of <xref:System.Data.Objects.ObjectQuery%601> and the object context itself are not affected.</span></span>  
  
 <span data-ttu-id="3e6da-189">因为 <xref:System.Data.Objects.ObjectQuery%601.Include%2A> 方法返回查询对象，所以可以对一个 <xref:System.Data.Objects.ObjectQuery%601> 多次调用此方法，从而为查询指定多个路径，如下面的示例所示：</span><span class="sxs-lookup"><span data-stu-id="3e6da-189">Because the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method returns the query object, you can call this method multiple times on an <xref:System.Data.Objects.ObjectQuery%601> to specify multiple paths for the query, as in the following example:</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#SpanOnlyWithMultiplePaths](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#spanonlywithmultiplepaths)]
 [!code-vb[DP ObjectServices Concepts#SpanOnlyWithMultiplePaths](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#spanonlywithmultiplepaths)]  
  
   
  
## Examples  
 [!code-csharp[DP ObjectServices Concepts#QueryWithSpan](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#querywithspan)]
 [!code-vb[DP ObjectServices Concepts#QueryWithSpan](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#querywithspan)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e6da-190">
            <paramref name="path" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-190">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3e6da-191">
            <paramref name="path" /> is <see langword="empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-191">
              <paramref name="path" /> is <see langword="empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Intersect (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Intersect(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Intersect(System.Data.Objects.ObjectQuery{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (query As ObjectQuery(Of T)) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Intersect(System::Data::Objects::ObjectQuery&lt;T&gt; ^ query);" />
      <MemberSignature Language="F#" Value="member this.Intersect : System.Data.Objects.ObjectQuery&lt;'T&gt; -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Intersect query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query">
          <span data-ttu-id="3e6da-192">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to include in the query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-192">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to include in the query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e6da-193">Limits the query results by including only the results that exist in another object query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-193">Limits the query results by including only the results that exist in another object query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e6da-194">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with [INTERSECT](~/docs/framework/data/adonet/ef/language-reference/intersect-entity-sql.md) applied based on the specified <paramref name="query" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-194">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with [INTERSECT](~/docs/framework/data/adonet/ef/language-reference/intersect-entity-sql.md) applied based on the specified <paramref name="query" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e6da-195">所提供`query`，用于定义搜索结果包括必须为相同类型的且与兼容的类型为<xref:System.Data.Objects.ObjectQuery%601>。</span><span class="sxs-lookup"><span data-stu-id="3e6da-195">The supplied `query` that defines results to include must be of the same type or of a type that is compatible with the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 <span data-ttu-id="3e6da-196">定义的参数中提供`query`中定义的参数与合并<xref:System.Data.Objects.ObjectQuery%601>实例。</span><span class="sxs-lookup"><span data-stu-id="3e6da-196">Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance.</span></span> <span data-ttu-id="3e6da-197">参数在组合后的 <xref:System.Data.Objects.ObjectParameterCollection> 中必须是唯一的。</span><span class="sxs-lookup"><span data-stu-id="3e6da-197">Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="3e6da-198">组合后的集合中不能有两个具有相同名称的参数。</span><span class="sxs-lookup"><span data-stu-id="3e6da-198">There cannot be two parameters in the combined collection with the same name.</span></span> <span data-ttu-id="3e6da-199">有关详细信息，请参阅[查询生成器方法](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-199">For more information, see [Query Builder Methods](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
 <span data-ttu-id="3e6da-200">生成的查询从 <xref:System.Data.Objects.ObjectQuery%601> 实例（调用了它的 <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> 方法）继承连接。</span><span class="sxs-lookup"><span data-stu-id="3e6da-200">The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which the <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> method was called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e6da-201">本主题中的示例基于[AdventureWorks 销售模型](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-201">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="3e6da-202">此示例创建一个新的 <xref:System.Data.Objects.ObjectQuery%601> 对象，该对象包含两个其他查询的结果。</span><span class="sxs-lookup"><span data-stu-id="3e6da-202">This example creates a new <xref:System.Data.Objects.ObjectQuery%601> object that contains the results of two other queries.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Intersect](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_intersect)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Intersect](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_intersect)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e6da-203">The <paramref name="query" /> parameter is <see langword="null" /> or is an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-203">The <paramref name="query" /> parameter is <see langword="null" /> or is an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery`1.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Data.Objects.ObjectQuery&lt;'T&gt;.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e6da-204">Gets or sets the name of this object query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-204">Gets or sets the name of this object query.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e6da-205">一个<see langword="string" />是此名称的值<see cref="T:System.Data.Objects.ObjectQuery`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-205">A <see langword="string" /> value that is the name of this <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e6da-206">在构造查询生成器方法时，对象查询的名称按名称确定序列中的当前对象查询。</span><span class="sxs-lookup"><span data-stu-id="3e6da-206">The name of the object query identifies the current object query in the sequence by name when constructing query builder methods.</span></span> <span data-ttu-id="3e6da-207">默认情况下，查询名称是`it`。</span><span class="sxs-lookup"><span data-stu-id="3e6da-207">By default, the query name is `it`.</span></span> <span data-ttu-id="3e6da-208">在 <xref:System.Data.Objects.ObjectQuery`1.Where*> 方法或 <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> 方法中引用联接中的当前序列时，这十分有用。</span><span class="sxs-lookup"><span data-stu-id="3e6da-208">This can be useful when referring to the current sequence in joins inside the <xref:System.Data.Objects.ObjectQuery`1.Where*> method or in the <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> method.</span></span> <span data-ttu-id="3e6da-209">有关详细信息，请参阅[查询生成器方法](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-209">For more information, see [Query Builder Methods](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
 <span data-ttu-id="3e6da-210">当设置 <xref:System.Data.Objects.ObjectQuery%601.Name%2A> 的 <xref:System.Data.Objects.ObjectQuery%601> 属性时，该值成为后续方法中的别名。</span><span class="sxs-lookup"><span data-stu-id="3e6da-210">When you set the <xref:System.Data.Objects.ObjectQuery%601.Name%2A> property of an <xref:System.Data.Objects.ObjectQuery%601>, that value becomes the alias in successive methods.</span></span>  
  
 <span data-ttu-id="3e6da-211"><xref:System.Data.Objects.ObjectQuery%601.Name%2A> 属性的值必须以字母开头，可以包含字母、数字和下划线。</span><span class="sxs-lookup"><span data-stu-id="3e6da-211">The value of the <xref:System.Data.Objects.ObjectQuery%601.Name%2A> property must start with a letter and can contain letters, digits, and underscores.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e6da-212">此示例将第一个 <xref:System.Data.Objects.ObjectQuery%601> 的名称设置为“product”，然后在后续 <xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> 方法中使用此别名。</span><span class="sxs-lookup"><span data-stu-id="3e6da-212">This example sets the name of the first <xref:System.Data.Objects.ObjectQuery%601> to "product" and then uses this alias in the successive <xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> method.</span></span> <span data-ttu-id="3e6da-213">本主题中的示例基于[AdventureWorks 销售模型](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-213">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#QueryWithAliasNamed](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#querywithaliasnamed)]
 [!code-vb[DP ObjectServices Concepts#QueryWithAliasNamed](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#querywithaliasnamed)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3e6da-214">The value specified on set is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-214">The value specified on set is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OfType&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;TResultType&gt; OfType&lt;TResultType&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!!TResultType&gt; OfType&lt;TResultType&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.OfType``1" />
      <MemberSignature Language="VB.NET" Value="Public Function OfType(Of TResultType) () As ObjectQuery(Of TResultType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; System::Data::Objects::ObjectQuery&lt;TResultType&gt; ^ OfType();" />
      <MemberSignature Language="F#" Value="member this.OfType : unit -&gt; System.Data.Objects.ObjectQuery&lt;'ResultType&gt;" Usage="objectQuery.OfType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;TResultType&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TResultType">
          <span data-ttu-id="3e6da-215">使用应用筛选器执行查询时，<see cref="T:System.Data.Objects.ObjectResult`1" /> 的类型返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-215">The type of the <see cref="T:System.Data.Objects.ObjectResult`1" /> returned when the query is executed with the applied filter.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="3e6da-216">Limits the query to only results of a specific type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-216">Limits the query to only results of a specific type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e6da-217">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with [OFTYPE](~/docs/framework/data/adonet/ef/language-reference/oftype-entity-sql.md) applied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-217">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with [OFTYPE](~/docs/framework/data/adonet/ef/language-reference/oftype-entity-sql.md) applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="3e6da-218"><xref:System.Data.Objects.ObjectQuery`1.OfType*> 用于按特定实体或复杂类型筛选查询结果。</span><span class="sxs-lookup"><span data-stu-id="3e6da-218"><xref:System.Data.Objects.ObjectQuery`1.OfType*> is used to filter query results by a specific entity or complex type.</span></span> <span data-ttu-id="3e6da-219">这样可支持具有对象继承的概念模型。</span><span class="sxs-lookup"><span data-stu-id="3e6da-219">This supports a conceptual model with object inheritance.</span></span> <span data-ttu-id="3e6da-220">有关详细信息，请参阅[实体数据模型： 继承](~/docs/framework/data/adonet/entity-data-model-inheritance.md)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-220">For more information, see [Entity Data Model: Inheritance](~/docs/framework/data/adonet/entity-data-model-inheritance.md).</span></span>

<span data-ttu-id="3e6da-221"><xref:System.Data.Objects.ObjectQuery`1.OfType*>方法仅应用于<xref:System.Data.Objects.ObjectQuery%601>实体类型或复杂类型，它在 EDM 中定义。</span><span class="sxs-lookup"><span data-stu-id="3e6da-221">The <xref:System.Data.Objects.ObjectQuery`1.OfType*> method can only be applied to an <xref:System.Data.Objects.ObjectQuery%601> of an entity type or complex type that is defined in the EDM.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.EntitySqlException">
          <span data-ttu-id="3e6da-222">The type specified is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-222">The type specified is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; OrderBy (string keys, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; OrderBy(string keys, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.OrderBy(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function OrderBy (keys As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ OrderBy(System::String ^ keys, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.OrderBy : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.OrderBy (keys, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="3e6da-223">The key columns by which to order the results.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-223">The key columns by which to order the results.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="3e6da-224">Zero or more parameters that are used in this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-224">Zero or more parameters that are used in this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e6da-225">Orders the query results by the specified criteria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-225">Orders the query results by the specified criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e6da-226">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with [ORDER BY](~/docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md) applied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-226">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with [ORDER BY](~/docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md) applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e6da-227">嵌套查询中的结果排序无法得到保证。</span><span class="sxs-lookup"><span data-stu-id="3e6da-227">The ordering of results in a nested query cannot be guaranteed.</span></span>  
  
 <span data-ttu-id="3e6da-228"><xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> 应始终作为序列中最后一个查询生成器方法。</span><span class="sxs-lookup"><span data-stu-id="3e6da-228"><xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> should always be the final query builder method in the sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e6da-229">此示例基于[AdventureWorks 销售模型](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-229">This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="3e6da-230">该示例创建一个新<xref:System.Data.Objects.ObjectQuery%601>对象，其中包含现有查询排序依据的结果`ProductID`。</span><span class="sxs-lookup"><span data-stu-id="3e6da-230">The example creates a new <xref:System.Data.Objects.ObjectQuery%601> object that contains the results of the existing query order by `ProductID`.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_OrderBy](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_orderby)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_OrderBy](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_orderby)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e6da-231">The <paramref name="keys" /> or <paramref name="parameters" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-231">The <paramref name="keys" /> or <paramref name="parameters" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3e6da-232">The <paramref name="key" /> is an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-232">The <paramref name="key" /> is an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt; Select (string projection, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;class System.Data.Common.DbDataRecord&gt; Select(string projection, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Select(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (projection As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of DbDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;System::Data::Common::DbDataRecord ^&gt; ^ Select(System::String ^ projection, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Select : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;" Usage="objectQuery.Select (projection, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projection" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="projection">
          <span data-ttu-id="3e6da-233">The list of selected properties that defines the projection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-233">The list of selected properties that defines the projection.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="3e6da-234">Zero or more parameters that are used in this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-234">Zero or more parameters that are used in this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e6da-235">Limits the query results to only the properties that are defined in the specified projection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-235">Limits the query results to only the properties that are defined in the specified projection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e6da-236">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance of type <see cref="T:System.Data.Common.DbDataRecord" /> that is equivalent to the original instance with [SELECT](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) applied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-236">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance of type <see cref="T:System.Data.Common.DbDataRecord" /> that is equivalent to the original instance with [SELECT](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e6da-237"><xref:System.Data.Objects.ObjectQuery%601.Select%2A> 应用指定的映射`projection`参数。</span><span class="sxs-lookup"><span data-stu-id="3e6da-237"><xref:System.Data.Objects.ObjectQuery%601.Select%2A> applies the projection specified by the `projection` parameter.</span></span> <span data-ttu-id="3e6da-238"><xref:System.Data.Objects.ObjectQuery%601> 方法返回的 <xref:System.Data.Objects.ObjectQuery%601.Select%2A> 始终为行类型 <xref:System.Data.Common.DbDataRecord>。</span><span class="sxs-lookup"><span data-stu-id="3e6da-238">The <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery%601.Select%2A> method is always a row type of <xref:System.Data.Common.DbDataRecord>.</span></span> <span data-ttu-id="3e6da-239">使用 <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> 方法可返回简单类型、实体类型或复杂类型的值。</span><span class="sxs-lookup"><span data-stu-id="3e6da-239">Use the <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> method to return values that are simple types, entity types, or complex types.</span></span> <span data-ttu-id="3e6da-240">有关详细信息，请参阅[LINQ to Entities](~/docs/framework/data/adonet/ef/language-reference/linq-to-entities.md)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-240">For more information, see [LINQ to Entities](~/docs/framework/data/adonet/ef/language-reference/linq-to-entities.md).</span></span>  
  
 <span data-ttu-id="3e6da-241">当投影中包括导航属性时，查询结果包括嵌套的 <xref:System.Data.Common.DbDataRecord> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="3e6da-241">When a navigation property is included in the projection, the query results include a collection of nested <xref:System.Data.Common.DbDataRecord> objects.</span></span> <span data-ttu-id="3e6da-242">有关详细信息，请参阅[如何： 使用导航属性导航关系](http://msdn.microsoft.com/library/b1d71c7d-16a7-4b46-96ac-690176bd5057)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-242">For more information, see [How to: Navigate Relationships Using Navigation Properties](http://msdn.microsoft.com/library/b1d71c7d-16a7-4b46-96ac-690176bd5057).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e6da-243">此示例基于[AdventureWorks 销售模型](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-243">This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="3e6da-244">该示例创建一个新<xref:System.Data.Objects.ObjectQuery%601>其结果为数据记录，其中包含`ProductID`此查询的结果的字段。</span><span class="sxs-lookup"><span data-stu-id="3e6da-244">The example creates a new <xref:System.Data.Objects.ObjectQuery%601> whose results are data records that contain the `ProductID` fields of the results of this query.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_select)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_select)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e6da-245">
            <paramref name="projection" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-245">
              <paramref name="projection" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3e6da-246">-or-  <paramref name="parameters" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-246">-or-  <paramref name="parameters" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3e6da-247">The <paramref name="projection" /> is an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-247">The <paramref name="projection" /> is an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SelectValue&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;TResultType&gt; SelectValue&lt;TResultType&gt; (string projection, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!!TResultType&gt; SelectValue&lt;TResultType&gt;(string projection, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectValue(Of TResultType) (projection As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of TResultType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; System::Data::Objects::ObjectQuery&lt;TResultType&gt; ^ SelectValue(System::String ^ projection, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.SelectValue : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'ResultType&gt;" Usage="objectQuery.SelectValue (projection, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;TResultType&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="projection" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TResultType">
          <span data-ttu-id="3e6da-248">由 <see cref="T:System.Data.Objects.ObjectQuery`1" /> 方法返回的 <see cref="M:System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])" /> 的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-248">The type of the <see cref="T:System.Data.Objects.ObjectQuery`1" /> returned by the <see cref="M:System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])" /> method.</span>
          </span>
        </typeparam>
        <param name="projection">
          <span data-ttu-id="3e6da-249">The projection list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-249">The projection list.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="3e6da-250">An optional set of query parameters that should be in scope when parsing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-250">An optional set of query parameters that should be in scope when parsing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e6da-251">Limits the query results to only the property specified in the projection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-251">Limits the query results to only the property specified in the projection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e6da-252">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance of a type compatible with the specific projection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-252">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance of a type compatible with the specific projection.</span>
          </span>
          <span data-ttu-id="3e6da-253">The returned <see cref="T:System.Data.Objects.ObjectQuery`1" /> is equivalent to the original instance with [SELECT VALUE](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) applied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-253">The returned <see cref="T:System.Data.Objects.ObjectQuery`1" /> is equivalent to the original instance with [SELECT VALUE](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e6da-254"><xref:System.Data.Objects.ObjectQuery`1.SelectValue*> 用于返回简单类型、实体类型或复杂类型的值。</span><span class="sxs-lookup"><span data-stu-id="3e6da-254"><xref:System.Data.Objects.ObjectQuery`1.SelectValue*> is used to return values that are simple types, entity types, or complex types.</span></span> <span data-ttu-id="3e6da-255"><xref:System.Data.Objects.ObjectQuery%601.Select%2A> 方法用于需要行类型（而不是值类型）的投影。</span><span class="sxs-lookup"><span data-stu-id="3e6da-255">Use the <xref:System.Data.Objects.ObjectQuery%601.Select%2A> method for projections that require a row type instead of a value type.</span></span> <span data-ttu-id="3e6da-256">有关详细信息，请参阅[对象查询](http://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-256">For more information, see [Object Queries](http://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span></span>  
  
 <span data-ttu-id="3e6da-257"><xref:System.Data.Objects.ObjectQuery`1.SelectValue*>方法将应用指定的映射`projection`参数。</span><span class="sxs-lookup"><span data-stu-id="3e6da-257">The <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> method applies the projection specified by the `projection` parameter.</span></span> <span data-ttu-id="3e6da-258"><xref:System.Data.Objects.ObjectQuery%601> 方法返回的 <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> 必须具有与投影兼容的值类型，且必须具有与 <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> 的类型相同的类型。</span><span class="sxs-lookup"><span data-stu-id="3e6da-258">The <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> method must be of a value type that is compatible with the projection and must be the same type as the type of <xref:System.Data.Objects.ObjectQuery`1.SelectValue*>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e6da-259">此示例基于[AdventureWorks 销售模型](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-259">This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="3e6da-260">该示例创建一个新<xref:System.Data.Objects.ObjectQuery%601>，其中包含的一系列结果`ProductID`从现有查询的结果投影的值。</span><span class="sxs-lookup"><span data-stu-id="3e6da-260">The example creates a new <xref:System.Data.Objects.ObjectQuery%601> that contains results that are a sequence of `ProductID` values projected from the results of the existing query.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_SelectValue](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_selectvalue)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_SelectValue](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_selectvalue)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e6da-261">
            <paramref name="projection" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-261">
              <paramref name="projection" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3e6da-262">-or-  <paramref name="parameters" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-262">-or-  <paramref name="parameters" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3e6da-263">The <paramref name="projection" /> is an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-263">The <paramref name="projection" /> is an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Skip (string keys, string count, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Skip(string keys, string count, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Skip(System.String,System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Skip (keys As String, count As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Skip(System::String ^ keys, System::String ^ count, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Skip : string * string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Skip (keys, count, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
        <Parameter Name="count" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="3e6da-264">The key columns by which to order the results.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-264">The key columns by which to order the results.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3e6da-265">The number of results to skip.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-265">The number of results to skip.</span>
          </span>
          <span data-ttu-id="3e6da-266">This must be either a constant or a parameter reference.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-266">This must be either a constant or a parameter reference.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="3e6da-267">An optional set of query parameters that should be in scope when parsing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-267">An optional set of query parameters that should be in scope when parsing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e6da-268">Orders the query results by the specified criteria and skips a specified number of results.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-268">Orders the query results by the specified criteria and skips a specified number of results.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e6da-269">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with both [ORDER BY](~/docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md) and [SKIP](~/docs/framework/data/adonet/ef/language-reference/skip-entity-sql.md) applied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-269">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with both [ORDER BY](~/docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md) and [SKIP](~/docs/framework/data/adonet/ef/language-reference/skip-entity-sql.md) applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e6da-270"><xref:System.Data.Objects.ObjectQuery%601.Skip%2A> 方法不能在 <xref:System.Data.Objects.ObjectQuery%601.Top%2A> 方法之后使用。</span><span class="sxs-lookup"><span data-stu-id="3e6da-270">The <xref:System.Data.Objects.ObjectQuery%601.Skip%2A> method cannot be used after the <xref:System.Data.Objects.ObjectQuery%601.Top%2A> method.</span></span> <span data-ttu-id="3e6da-271">当你使用<xref:System.Data.Objects.ObjectQuery%601.Top%2A>后<xref:System.Data.Objects.ObjectQuery%601.Skip%2A>，它的功能类似于[限制](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md)子句的语句。</span><span class="sxs-lookup"><span data-stu-id="3e6da-271">When you use <xref:System.Data.Objects.ObjectQuery%601.Top%2A> after <xref:System.Data.Objects.ObjectQuery%601.Skip%2A>, it functions like the [LIMIT](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md) statement of an  clause.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e6da-272">此示例将获取五`Product`先跳过在查询结果中，按排序的前三个对象`Product.ListPrice`。</span><span class="sxs-lookup"><span data-stu-id="3e6da-272">This example gets five `Product` objects after skipping the first three in the query result, sorted by `Product.ListPrice`.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#projection_skiplimit)]
 [!code-vb[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#projection_skiplimit)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e6da-273">Any argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-273">Any argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3e6da-274">
            <paramref name="keys" /> is an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-274">
              <paramref name="keys" /> is an empty string.</span>
          </span>
          <span data-ttu-id="3e6da-275">-or-  <paramref name="count" /> is an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-275">-or-  <paramref name="count" /> is an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3e6da-276">Returns an enumerator that iterates through the results of the query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-276">Returns an enumerator that iterates through the results of the query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e6da-277">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the results.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-277">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the results.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e6da-278">调用 <xref:System.Data.Objects.ObjectQuery%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A> 会执行查询。</span><span class="sxs-lookup"><span data-stu-id="3e6da-278">Calling <xref:System.Data.Objects.ObjectQuery%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A> executes the query.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Top (string count, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Top(string count, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Top(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Top (count As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Top(System::String ^ count, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Top : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Top (count, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="3e6da-279">The number of items in the results as a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-279">The number of items in the results as a string.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="3e6da-280">An optional set of query parameters that should be in scope when parsing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-280">An optional set of query parameters that should be in scope when parsing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e6da-281">Limits the query results to a specified number of items.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-281">Limits the query results to a specified number of items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e6da-282">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with [TOP](~/docs/framework/data/adonet/ef/language-reference/top-entity-sql.md) applied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-282">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with [TOP](~/docs/framework/data/adonet/ef/language-reference/top-entity-sql.md) applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e6da-283">除非对查询进行排序，否则 <xref:System.Data.Objects.ObjectQuery%601.Top%2A> 具有不确定性。</span><span class="sxs-lookup"><span data-stu-id="3e6da-283"><xref:System.Data.Objects.ObjectQuery%601.Top%2A> is nondeterministic unless the query is sorted.</span></span>  
  
 <span data-ttu-id="3e6da-284">当你使用<xref:System.Data.Objects.ObjectQuery%601.Top%2A>方法之后<xref:System.Data.Objects.ObjectQuery%601.Skip%2A>方法，它的功能类似于[限制](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md)语句[ORDER BY](~/docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md)子句。</span><span class="sxs-lookup"><span data-stu-id="3e6da-284">When you use the <xref:System.Data.Objects.ObjectQuery%601.Top%2A> method after the <xref:System.Data.Objects.ObjectQuery%601.Skip%2A> method, it functions like the [LIMIT](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md) statement of an [ORDER BY](~/docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md) clause.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e6da-285">这些示例基于[AdventureWorks 销售模型](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-285">These examples are based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span>  
  
 <span data-ttu-id="3e6da-286">此示例创建一个新的 <xref:System.Data.Objects.ObjectQuery%601>，该对象包含现有查询的前两个结果。</span><span class="sxs-lookup"><span data-stu-id="3e6da-286">This example creates a new <xref:System.Data.Objects.ObjectQuery%601> that contains the first two results of the existing query.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Top](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_top)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Top](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_top)]  
  
 <span data-ttu-id="3e6da-287">此示例将获取五`Product`先跳过在查询结果中，按排序的前三个对象`Product.ListPrice`。</span><span class="sxs-lookup"><span data-stu-id="3e6da-287">This example gets five `Product` objects after skipping the first three in the query result, sorted by `Product.ListPrice`.</span></span> <span data-ttu-id="3e6da-288"><xref:System.Data.Objects.ObjectQuery%601.Top%2A> 而不是使用[限制](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md)分页。</span><span class="sxs-lookup"><span data-stu-id="3e6da-288"><xref:System.Data.Objects.ObjectQuery%601.Top%2A> is used instead of [LIMIT](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md) for paging.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#projection_skiplimit)]
 [!code-vb[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#projection_skiplimit)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e6da-289">
            <paramref name="count" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-289">
              <paramref name="count" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3e6da-290">
            <paramref name="count" /> is an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-290">
              <paramref name="count" /> is an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Union (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Union(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Union(System.Data.Objects.ObjectQuery{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (query As ObjectQuery(Of T)) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Union(System::Data::Objects::ObjectQuery&lt;T&gt; ^ query);" />
      <MemberSignature Language="F#" Value="member this.Union : System.Data.Objects.ObjectQuery&lt;'T&gt; -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Union query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query">
          <span data-ttu-id="3e6da-291">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-291">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e6da-292">Combines the results of the query with the results of another object query, without any duplicates.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-292">Combines the results of the query with the results of another object query, without any duplicates.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e6da-293">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with [UNION](~/docs/framework/data/adonet/ef/language-reference/union-entity-sql.md) applied to add the results of the specified <paramref name="query" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-293">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with [UNION](~/docs/framework/data/adonet/ef/language-reference/union-entity-sql.md) applied to add the results of the specified <paramref name="query" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e6da-294"><xref:System.Data.Objects.ObjectQuery%601.Union%2A> 将所提供的结果添加`query`没有任何重复项。</span><span class="sxs-lookup"><span data-stu-id="3e6da-294"><xref:System.Data.Objects.ObjectQuery%601.Union%2A> adds the results of the supplied `query` without any duplicates.</span></span>  
  
 <span data-ttu-id="3e6da-295">所提供`query`，它定义要添加必备的结果是相同类型的或可以提升为此类型的类型<xref:System.Data.Objects.ObjectQuery%601>。</span><span class="sxs-lookup"><span data-stu-id="3e6da-295">The supplied `query` that defines the results to add must be of the same type or of a type that can be promoted to the type of this <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="3e6da-296">例如，以下是有效因为`DiscontinuedProducts`可以提升为`Products`:</span><span class="sxs-lookup"><span data-stu-id="3e6da-296">For example, the following is valid because `DiscontinuedProducts` can be promoted to `Products`:</span></span>  
  
```  
ObjectQuery<Product>.Union(ObjectQuery<DiscontinuedProduct>)  
```  
  
 <span data-ttu-id="3e6da-297">以下将引发异常，因为`Products`不能提升为`DiscontinuedProducts`。</span><span class="sxs-lookup"><span data-stu-id="3e6da-297">The following will throw an exception because `Products` cannot be promoted to `DiscontinuedProducts`.</span></span>  
  
```  
ObjectQuery <DiscontinuedProduct>.Union(ObjectQuery<Product>)   
```  
  
 <span data-ttu-id="3e6da-298">有关<xref:System.Data.Objects.ObjectQuery%601>类型的<xref:System.Data.Common.DbDataRecord>，在这两个查询中的记录必须具有相同数量的列和类型的列中<xref:System.Data.Common.DbDataRecord>的传递`query`必须可提升到类型中的列的<xref:System.Data.Common.DbDataRecord>的<xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="3e6da-298">For an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord>, the records in both queries must have the same number of columns, and the types in the columns of the <xref:System.Data.Common.DbDataRecord> of the passed `query` must be promotable to the types of the columns in the <xref:System.Data.Common.DbDataRecord> of the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 <span data-ttu-id="3e6da-299">定义的参数中提供`query`中定义的参数与合并<xref:System.Data.Objects.ObjectQuery%601>实例。</span><span class="sxs-lookup"><span data-stu-id="3e6da-299">Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance.</span></span> <span data-ttu-id="3e6da-300">参数在组合后的 <xref:System.Data.Objects.ObjectParameterCollection> 中必须是唯一的。</span><span class="sxs-lookup"><span data-stu-id="3e6da-300">Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="3e6da-301">组合后的集合中不能有两个具有相同名称的参数。</span><span class="sxs-lookup"><span data-stu-id="3e6da-301">There cannot be two parameters in the combined collection with the same name.</span></span> <span data-ttu-id="3e6da-302">有关详细信息，请参阅[查询生成器方法](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-302">For more information, see [Query Builder Methods](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
 <span data-ttu-id="3e6da-303">生成的查询从 <xref:System.Data.Objects.ObjectQuery%601> 实例（调用了它的 <xref:System.Data.Objects.ObjectQuery%601.Union%2A>）继承连接。</span><span class="sxs-lookup"><span data-stu-id="3e6da-303">The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.Union%2A> was called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e6da-304">此示例基于[AdventureWorks 销售模型](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-304">This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="3e6da-305">该示例使用 <xref:System.Data.Objects.ObjectQuery%601.Union%2A> 方法创建新的 <xref:System.Data.Objects.ObjectQuery%601> 对象。</span><span class="sxs-lookup"><span data-stu-id="3e6da-305">The example uses <xref:System.Data.Objects.ObjectQuery%601.Union%2A> method to creates a new <xref:System.Data.Objects.ObjectQuery%601> object.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Distinct_Union](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_distinct_union)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Distinct_Union](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_distinct_union)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e6da-306">The <paramref name="query" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-306">The <paramref name="query" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UnionAll">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; UnionAll (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; UnionAll(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.UnionAll(System.Data.Objects.ObjectQuery{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function UnionAll (query As ObjectQuery(Of T)) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ UnionAll(System::Data::Objects::ObjectQuery&lt;T&gt; ^ query);" />
      <MemberSignature Language="F#" Value="member this.UnionAll : System.Data.Objects.ObjectQuery&lt;'T&gt; -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.UnionAll query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query">
          <span data-ttu-id="3e6da-307">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-307">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e6da-308">Combines the results of the query with the results of another object query, including all duplicates.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-308">Combines the results of the query with the results of another object query, including all duplicates.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e6da-309">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with [UNION ALL](~/docs/framework/data/adonet/ef/language-reference/union-entity-sql.md) applied to add the results of the specified <paramref name="query" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-309">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with [UNION ALL](~/docs/framework/data/adonet/ef/language-reference/union-entity-sql.md) applied to add the results of the specified <paramref name="query" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e6da-310"><xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> 将所提供的结果添加`query`包括所有重复项。</span><span class="sxs-lookup"><span data-stu-id="3e6da-310"><xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> adds the results of the supplied `query` including all duplicates.</span></span>  
  
 <span data-ttu-id="3e6da-311">所提供`query`，它定义要添加必须结果是相同类型的或可以提升为此类型的类型<xref:System.Data.Objects.ObjectQuery%601>。</span><span class="sxs-lookup"><span data-stu-id="3e6da-311">The supplied `query` that defines results to add must be of the same type or of a type that can be promoted to the type of this <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="3e6da-312">例如，以下是有效因为`DiscontinuedProducts`可以提升为`Products`:</span><span class="sxs-lookup"><span data-stu-id="3e6da-312">For example, the following is valid because `DiscontinuedProducts` can be promoted to `Products`:</span></span>  
  
```  
ObjectQuery<Product>.Union(ObjectQuery<DiscontinuedProduct>)  
```  
  
 <span data-ttu-id="3e6da-313">以下将引发异常，因为`Products`不能提升为`DiscontinuedProducts`。</span><span class="sxs-lookup"><span data-stu-id="3e6da-313">The following will throw an exception because `Products` cannot be promoted to `DiscontinuedProducts`.</span></span>  
  
```  
ObjectQuery <DiscontinuedProduct>.Union(ObjectQuery<Product>)   
```  
  
 <span data-ttu-id="3e6da-314">有关<xref:System.Data.Objects.ObjectQuery%601>类型的<xref:System.Data.Common.DbDataRecord>，在这两个查询中的记录必须具有相同数量的列和类型的列中<xref:System.Data.Common.DbDataRecord>的传递`query`必须可提升到类型中的列的<xref:System.Data.Common.DbDataRecord>的<xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="3e6da-314">For an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord>, the records in both queries must have the same number of columns, and the types in the columns of the <xref:System.Data.Common.DbDataRecord> of the passed `query` must be promotable to the types of the columns in the <xref:System.Data.Common.DbDataRecord> of the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 <span data-ttu-id="3e6da-315">定义的参数中提供`query`中定义的参数与合并<xref:System.Data.Objects.ObjectQuery%601>实例。</span><span class="sxs-lookup"><span data-stu-id="3e6da-315">Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance.</span></span> <span data-ttu-id="3e6da-316">参数在组合后的 <xref:System.Data.Objects.ObjectParameterCollection> 中必须是唯一的。</span><span class="sxs-lookup"><span data-stu-id="3e6da-316">Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="3e6da-317">组合后的集合中不能有两个具有相同名称的参数。</span><span class="sxs-lookup"><span data-stu-id="3e6da-317">There cannot be two parameters in the combined collection with the same name.</span></span> <span data-ttu-id="3e6da-318">有关详细信息，请参阅[查询生成器方法](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-318">For more information, see [Query Builder Methods](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
 <span data-ttu-id="3e6da-319">生成的查询从 <xref:System.Data.Objects.ObjectQuery%601> 实例（调用了它的 <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A>）继承连接。</span><span class="sxs-lookup"><span data-stu-id="3e6da-319">The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> was called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e6da-320">本主题中的示例基于[AdventureWorks 销售模型](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-320">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="3e6da-321">该示例使用 <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> 方法创建新的 <xref:System.Data.Objects.ObjectQuery%601> 对象。</span><span class="sxs-lookup"><span data-stu-id="3e6da-321">The example uses the <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> method to create a new <xref:System.Data.Objects.ObjectQuery%601> object.</span></span> <span data-ttu-id="3e6da-322">然后对新的 <xref:System.Data.Objects.ObjectQuery%601.Distinct%2A> 对象调用 <xref:System.Data.Objects.ObjectQuery%601> 方法，以获取此查询的唯一结果。</span><span class="sxs-lookup"><span data-stu-id="3e6da-322">Then it calls the <xref:System.Data.Objects.ObjectQuery%601.Distinct%2A> method on the new <xref:System.Data.Objects.ObjectQuery%601> object to get the unique results of this query.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_distinct_unionall)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_distinct_unionall)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e6da-323">The <paramref name="query" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-323">The <paramref name="query" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Where (string predicate, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Where(string predicate, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Where(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Where (predicate As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Where(System::String ^ predicate, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Where : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Where (predicate, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="predicate">
          <span data-ttu-id="3e6da-324">The filter predicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-324">The filter predicate.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="3e6da-325">Zero or more parameters that are used in this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-325">Zero or more parameters that are used in this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e6da-326">Limits the query to results that match specified filtering criteria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-326">Limits the query to results that match specified filtering criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e6da-327">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with [WHERE](~/docs/framework/data/adonet/ef/language-reference/where-entity-sql.md) applied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-327">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with [WHERE](~/docs/framework/data/adonet/ef/language-reference/where-entity-sql.md) applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3e6da-328">此示例基于[AdventureWorks 销售模型](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="3e6da-328">This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="3e6da-329">该示例创建一个新的 <xref:System.Data.Objects.ObjectQuery%601> 对象，该对象包含按条件 `"it.ProductID = 900"` 筛选的现有查询的结果。</span><span class="sxs-lookup"><span data-stu-id="3e6da-329">The example creates a new <xref:System.Data.Objects.ObjectQuery%601> that contains results of the existing query filtered by the following criteria: `"it.ProductID = 900"`.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Where](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_where)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Where](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_where)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e6da-330">
            <paramref name="predicate" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-330">
              <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3e6da-331">-or-  <paramref name="parameters" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-331">-or-  <paramref name="parameters" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3e6da-332">The <paramref name="predicate" /> is an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e6da-332">The <paramref name="predicate" /> is an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>