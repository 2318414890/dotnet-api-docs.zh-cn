<Type Name="CompiledQuery" FullName="System.Data.Objects.CompiledQuery">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ff160e5c7fafed3fa5dd21379c41efb076c9584f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30391121" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CompiledQuery" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CompiledQuery extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.CompiledQuery" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CompiledQuery" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompiledQuery sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0cc81-101">表示一个缓存的 LINQ to Entities 查询。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0cc81-101">Represents a cached LINQ to Entities query.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc81-102">用于编译查询，并对查询进行缓存以供重复使用。</span><span class="sxs-lookup"><span data-stu-id="0cc81-102">Provides for compilation and caching of queries for reuse.</span></span> <span data-ttu-id="0cc81-103">从概念上讲，此类包含具有若干重载的单个 `Compile` 方法。</span><span class="sxs-lookup"><span data-stu-id="0cc81-103">Conceptually this class contains a single `Compile` method with several overloads.</span></span> <span data-ttu-id="0cc81-104">调用 `Compile` 方法可以创建新的委托来表示已编译的查询。</span><span class="sxs-lookup"><span data-stu-id="0cc81-104">You call the `Compile` method to create a new delegate to represent the compiled query.</span></span> <span data-ttu-id="0cc81-105">在使用 <xref:System.Data.Objects.ObjectContext> 输入参数值及其他参数值调用该委托时，它将生成某个结果（例如 <xref:System.Linq.IQueryable%601> 实例）。</span><span class="sxs-lookup"><span data-stu-id="0cc81-105">The delegate, when invoked with the <xref:System.Data.Objects.ObjectContext> input parameter and other parameter values, produces some result (such as an <xref:System.Linq.IQueryable%601> instance).</span></span> <span data-ttu-id="0cc81-106">首次调用该委托时，将转换并缓存查询。</span><span class="sxs-lookup"><span data-stu-id="0cc81-106">The query is translated and cached when the delegate is invoked for the first time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cc81-107">下面的示例将编译并调用一个查询，该查询接受 <xref:System.DateTime> 和 <xref:System.Decimal> 输入参数，并返回一个订单日期晚于 2003 年 3 月 8 日且应付款总额少于 300.00 美元的订单序列：</span><span class="sxs-lookup"><span data-stu-id="0cc81-107">The following example compiles and then invokes a query that accepts <xref:System.DateTime> and <xref:System.Decimal> input parameters and returns a sequence of orders where the order date is later than March 8, 2003 and the total due is less than $300.00:</span></span>  
  
 [!code-csharp[DP L2E Conceptual Examples#CompiledQuery5](~/samples/snippets/csharp/VS_Snippets_Data/DP L2E Conceptual Examples/CS/Program.cs#compiledquery5)]
 [!code-vb[DP L2E Conceptual Examples#CompiledQuery5](~/samples/snippets/visualbasic/VS_Snippets_Data/DP L2E Conceptual Examples/VB/Module1.vb#compiledquery5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Compile&lt;TArg0,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TResult&gt; Compile&lt;TArg0,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`2&lt;!!TArg0, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TArg0, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TResult))) As Func(Of TArg0, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TResult&gt; ^&gt; ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
          <span data-ttu-id="0cc81-108">由 <see cref="T:System.Data.Objects.ObjectContext" /> 派生的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-108">A type derived from <see cref="T:System.Data.Objects.ObjectContext" />.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="0cc81-109">类型<c>T</c>通过执行返回的委托返回的查询结果的<see cref="M:System.Data.Objects.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-109">The type <c>T</c> of the query results returned by executing the delegate returned by the <see cref="M:System.Data.Objects.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" /> method.</span>
          </span>
        </typeparam>
        <param name="query">
          <span data-ttu-id="0cc81-110">要编译的 lambda 表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-110">The lambda expression to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cc81-111">创建一个表示已编译的 LINQ to Entities 查询的新委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-111">Creates a new delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cc81-112">
            <see cref="T:System.Func`2" />，这是一个表示已编译的 LINQ to Entities 查询的泛型委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-112">
              <see cref="T:System.Func`2" />, a generic delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc81-113">有关详细信息和示例，请参阅[已编译的查询 (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md)。</span><span class="sxs-lookup"><span data-stu-id="0cc81-113">For more information and examples, see [Compiled Queries  (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cc81-114">下面的示例将编译并调用一个返回 <xref:System.Data.Objects.ObjectQuery%601> 实例的查询：</span><span class="sxs-lookup"><span data-stu-id="0cc81-114">The following example compiles and then invokes a query that returns an <xref:System.Data.Objects.ObjectQuery%601> instance:</span></span>  
  
 [!code-csharp[DP L2E Conceptual Examples#CompiledQuery1_MQ](~/samples/snippets/csharp/VS_Snippets_Data/DP L2E Conceptual Examples/CS/Program.cs#compiledquery1_mq)]
 [!code-vb[DP L2E Conceptual Examples#CompiledQuery1_MQ](~/samples/snippets/visualbasic/VS_Snippets_Data/DP L2E Conceptual Examples/VB/Module1.vb#compiledquery1_mq)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TResult&gt; Compile&lt;TArg0,TArg1,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`3&lt;!!TArg0, !!TArg1, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TArg0, !!TArg1, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TResult))) As Func(Of TArg0, TArg1, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TResult&gt; ^&gt; ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
          <span data-ttu-id="0cc81-115">由 <see cref="T:System.Data.Objects.ObjectContext" /> 派生的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-115">A type derived from <see cref="T:System.Data.Objects.ObjectContext" />.</span>
          </span>
        </typeparam>
        <typeparam name="TArg1">
          <span data-ttu-id="0cc81-116">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-116">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-117">
            <c>TArg1</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-117">
              <c>TArg1</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="0cc81-118">类型<c>T</c>通过执行返回的委托返回的查询结果的<see cref="M:System.Data.Objects.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-118">The type <c>T</c> of the query results returned by executing the delegate returned by the <see cref="M:System.Data.Objects.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" /> method.</span>
          </span>
        </typeparam>
        <param name="query">
          <span data-ttu-id="0cc81-119">要编译的 lambda 表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-119">The lambda expression to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cc81-120">创建一个表示已编译的 LINQ to Entities 查询的新委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-120">Creates a new delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cc81-121">
            <see cref="T:System.Func`3" />，这是一个表示已编译的 LINQ to Entities 查询的泛型委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-121">
              <see cref="T:System.Func`3" />, a generic delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc81-122">有关详细信息和示例，请参阅[已编译的查询 (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md)。</span><span class="sxs-lookup"><span data-stu-id="0cc81-122">For more information and examples, see [Compiled Queries  (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cc81-123">下面的示例将编译并调用一个查询，该查询接受 <xref:System.Decimal> 输入参数，并返回一个应付款总额大于或等于 200.00 美元的订单序列：</span><span class="sxs-lookup"><span data-stu-id="0cc81-123">The following example compiles and then invokes a query that accepts a <xref:System.Decimal> input parameter and returns a sequence of orders where the total due is greater than or equal to $200.00:</span></span>  
  
 [!code-csharp[DP L2E Conceptual Examples#CompiledQuery2](~/samples/snippets/csharp/VS_Snippets_Data/DP L2E Conceptual Examples/CS/Program.cs#compiledquery2)]
 [!code-vb[DP L2E Conceptual Examples#CompiledQuery2](~/samples/snippets/visualbasic/VS_Snippets_Data/DP L2E Conceptual Examples/VB/Module1.vb#compiledquery2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`4&lt;!!TArg0, !!TArg1, !!TArg2, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`4&lt;!!TArg0, !!TArg1, !!TArg2, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TResult))) As Func(Of TArg0, TArg1, TArg2, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TResult&gt; ^&gt; ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
          <span data-ttu-id="0cc81-124">由 <see cref="T:System.Data.Objects.ObjectContext" /> 派生的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-124">A type derived from <see cref="T:System.Data.Objects.ObjectContext" />.</span>
          </span>
        </typeparam>
        <typeparam name="TArg1">
          <span data-ttu-id="0cc81-125">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-125">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-126">
            <c>TArg1</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-126">
              <c>TArg1</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="0cc81-127">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-127">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-128">
            <c>TArg2</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-128">
              <c>TArg2</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="0cc81-129">类型<c>T</c>通过执行返回的委托返回的查询结果的<see cref="M:System.Data.Objects.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})" />方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-129">The type <c>T</c> of the query results returned by executing the delegate returned by the <see cref="M:System.Data.Objects.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})" /> method.</span>
          </span>
        </typeparam>
        <param name="query">
          <span data-ttu-id="0cc81-130">要编译的 lambda 表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-130">The lambda expression to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cc81-131">创建一个表示已编译的 LINQ to Entities 查询的新委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-131">Creates a new delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cc81-132">
            <see cref="T:System.Func`4" />，这是一个表示已编译的 LINQ to Entities 查询的泛型委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-132">
              <see cref="T:System.Func`4" />, a generic delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc81-133">有关详细信息和示例，请参阅[已编译的查询 (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md)。</span><span class="sxs-lookup"><span data-stu-id="0cc81-133">For more information and examples, see [Compiled Queries  (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cc81-134">下面的示例将编译并调用一个查询，该查询接受 <xref:System.DateTime> 和 <xref:System.Decimal> 输入参数，并返回一个订单日期晚于 2003 年 3 月 8 日且应付款总额少于 300.00 美元的订单序列：</span><span class="sxs-lookup"><span data-stu-id="0cc81-134">The following example compiles and then invokes a query that accepts <xref:System.DateTime> and <xref:System.Decimal> input parameters and returns a sequence of orders where the order date is later than March 8, 2003 and the total due is less than $300.00:</span></span>  
  
 [!code-csharp[DP L2E Conceptual Examples#CompiledQuery5](~/samples/snippets/csharp/VS_Snippets_Data/DP L2E Conceptual Examples/CS/Program.cs#compiledquery5)]
 [!code-vb[DP L2E Conceptual Examples#CompiledQuery5](~/samples/snippets/visualbasic/VS_Snippets_Data/DP L2E Conceptual Examples/VB/Module1.vb#compiledquery5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`5&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`5&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TResult&gt; ^&gt; ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
          <span data-ttu-id="0cc81-135">由 <see cref="T:System.Data.Objects.ObjectContext" /> 派生的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-135">A type derived from <see cref="T:System.Data.Objects.ObjectContext" />.</span>
          </span>
        </typeparam>
        <typeparam name="TArg1">
          <span data-ttu-id="0cc81-136">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-136">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-137">
            <c>TArg1</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-137">
              <c>TArg1</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="0cc81-138">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-138">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-139">
            <c>TArg2</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-139">
              <c>TArg2</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg3">
          <span data-ttu-id="0cc81-140">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-140">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-141">
            <c>TArg3</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-141">
              <c>TArg3</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="0cc81-142">类型<c>T</c>通过执行返回的委托返回的查询结果的<see cref="M:System.Data.Objects.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})" />方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-142">The type <c>T</c> of the query results returned by executing the delegate returned by the <see cref="M:System.Data.Objects.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})" /> method.</span>
          </span>
        </typeparam>
        <param name="query">
          <span data-ttu-id="0cc81-143">要编译的 lambda 表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-143">The lambda expression to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cc81-144">创建一个表示已编译的 LINQ to Entities 查询的新委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-144">Creates a new delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cc81-145">
            <see cref="T:System.Func`5" />，这是一个表示已编译的 LINQ to Entities 查询的泛型委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-145">
              <see cref="T:System.Func`5" />, a generic delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc81-146">有关详细信息和示例，请参阅[已编译的查询 (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md)。</span><span class="sxs-lookup"><span data-stu-id="0cc81-146">For more information and examples, see [Compiled Queries  (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`6&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`6&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TResult&gt; ^&gt; ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
          <span data-ttu-id="0cc81-147">由 <see cref="T:System.Data.Objects.ObjectContext" /> 派生的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-147">A type derived from <see cref="T:System.Data.Objects.ObjectContext" />.</span>
          </span>
        </typeparam>
        <typeparam name="TArg1">
          <span data-ttu-id="0cc81-148">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-148">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-149">
            <c>TArg1</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-149">
              <c>TArg1</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="0cc81-150">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-150">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-151">
            <c>TArg2</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-151">
              <c>TArg2</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg3">
          <span data-ttu-id="0cc81-152">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-152">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-153">
            <c>TArg3</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-153">
              <c>TArg3</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg4">
          <span data-ttu-id="0cc81-154">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-154">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-155">
            <c>TArg4</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-155">
              <c>TArg4</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="0cc81-156">类型<c>T</c>通过执行返回的委托返回的查询结果的<see cref="M:System.Data.Objects.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})" />方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-156">The type <c>T</c> of the query results returned by executing the delegate returned by the <see cref="M:System.Data.Objects.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})" /> method.</span>
          </span>
        </typeparam>
        <param name="query">
          <span data-ttu-id="0cc81-157">要编译的 lambda 表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-157">The lambda expression to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cc81-158">创建一个表示已编译的 LINQ to Entities 查询的新委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-158">Creates a new delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cc81-159">
            <see cref="T:System.Func`6" />，这是一个表示已编译的 LINQ to Entities 查询的泛型委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-159">
              <see cref="T:System.Func`6" />, a generic delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc81-160">有关详细信息和示例，请参阅[已编译的查询 (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md)。</span><span class="sxs-lookup"><span data-stu-id="0cc81-160">For more information and examples, see [Compiled Queries  (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`7&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`7&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TResult&gt; ^&gt; ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
          <span data-ttu-id="0cc81-161">由 <see cref="T:System.Data.Objects.ObjectContext" /> 派生的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-161">A type derived from <see cref="T:System.Data.Objects.ObjectContext" />.</span>
          </span>
        </typeparam>
        <typeparam name="TArg1">
          <span data-ttu-id="0cc81-162">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-162">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-163">
            <c>TArg1</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-163">
              <c>TArg1</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="0cc81-164">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-164">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-165">
            <c>TArg2</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-165">
              <c>TArg2</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg3">
          <span data-ttu-id="0cc81-166">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-166">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-167">
            <c>TArg3</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-167">
              <c>TArg3</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg4">
          <span data-ttu-id="0cc81-168">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-168">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-169">
            <c>TArg4</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-169">
              <c>TArg4</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg5">
          <span data-ttu-id="0cc81-170">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-170">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-171">
            <c>TArg5</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-171">
              <c>TArg5</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="0cc81-172">类型<c>T</c>通过执行返回的委托返回的查询结果的<see cref="M:System.Data.Objects.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})" />方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-172">The type <c>T</c> of the query results returned by executing the delegate returned by the <see cref="M:System.Data.Objects.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})" /> method.</span>
          </span>
        </typeparam>
        <param name="query">
          <span data-ttu-id="0cc81-173">要编译的 lambda 表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-173">The lambda expression to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cc81-174">创建一个表示已编译的 LINQ to Entities 查询的新委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-174">Creates a new delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cc81-175">
            <see cref="T:System.Func`7" />，这是一个表示已编译的 LINQ to Entities 查询的泛型委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-175">
              <see cref="T:System.Func`7" />, a generic delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc81-176">有关详细信息和示例，请参阅[已编译的查询 (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md)。</span><span class="sxs-lookup"><span data-stu-id="0cc81-176">For more information and examples, see [Compiled Queries  (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`8&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`8&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TResult&gt; ^&gt; ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
          <span data-ttu-id="0cc81-177">由 <see cref="T:System.Data.Objects.ObjectContext" /> 派生的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-177">A type derived from <see cref="T:System.Data.Objects.ObjectContext" />.</span>
          </span>
        </typeparam>
        <typeparam name="TArg1">
          <span data-ttu-id="0cc81-178">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-178">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-179">
            <c>TArg1</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-179">
              <c>TArg1</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="0cc81-180">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-180">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-181">
            <c>TArg2</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-181">
              <c>TArg2</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg3">
          <span data-ttu-id="0cc81-182">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-182">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-183">
            <c>TArg3</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-183">
              <c>TArg3</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg4">
          <span data-ttu-id="0cc81-184">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-184">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-185">
            <c>TArg4</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-185">
              <c>TArg4</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg5">
          <span data-ttu-id="0cc81-186">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-186">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-187">
            <c>TArg5</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-187">
              <c>TArg5</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg6">
          <span data-ttu-id="0cc81-188">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-188">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-189">
            <c>TArg6</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-189">
              <c>TArg6</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="0cc81-190">类型<c>T</c>通过执行返回的委托返回的查询结果的<see cref="M:System.Data.Objects.CompiledQuery.Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})" />方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-190">The type <c>T</c> of the query results returned by executing the delegate returned by the <see cref="M:System.Data.Objects.CompiledQuery.Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})" /> method.</span>
          </span>
        </typeparam>
        <param name="query">
          <span data-ttu-id="0cc81-191">要编译的 lambda 表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-191">The lambda expression to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cc81-192">创建一个表示已编译的 LINQ to Entities 查询的新委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-192">Creates a new delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cc81-193">
            <see cref="T:System.Func`8" />，这是一个表示已编译的 LINQ to Entities 查询的泛型委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-193">
              <see cref="T:System.Func`8" />, a generic delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc81-194">有关详细信息和示例，请参阅[已编译的查询 (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md)。</span><span class="sxs-lookup"><span data-stu-id="0cc81-194">For more information and examples, see [Compiled Queries  (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`9&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`9&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TResult&gt; ^&gt; ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
          <span data-ttu-id="0cc81-195">由 <see cref="T:System.Data.Objects.ObjectContext" /> 派生的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-195">A type derived from <see cref="T:System.Data.Objects.ObjectContext" />.</span>
          </span>
        </typeparam>
        <typeparam name="TArg1">
          <span data-ttu-id="0cc81-196">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-196">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-197">
            <c>TArg1</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-197">
              <c>TArg1</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="0cc81-198">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-198">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-199">
            <c>TArg2</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-199">
              <c>TArg2</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg3">
          <span data-ttu-id="0cc81-200">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-200">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-201">
            <c>TArg3</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-201">
              <c>TArg3</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg4">
          <span data-ttu-id="0cc81-202">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-202">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-203">
            <c>TArg4</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-203">
              <c>TArg4</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg5">
          <span data-ttu-id="0cc81-204">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-204">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-205">
            <c>TArg5</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-205">
              <c>TArg5</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg6">
          <span data-ttu-id="0cc81-206">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-206">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-207">
            <c>TArg6</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-207">
              <c>TArg6</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg7">
          <span data-ttu-id="0cc81-208">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-208">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-209">
            <c>TArg7</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-209">
              <c>TArg7</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="0cc81-210">类型<c>T</c>通过执行返回的委托返回的查询结果的<see cref="M:System.Data.Objects.CompiledQuery.Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})" />方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-210">The type <c>T</c> of the query results returned by executing the delegate returned by the <see cref="M:System.Data.Objects.CompiledQuery.Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})" /> method.</span>
          </span>
        </typeparam>
        <param name="query">
          <span data-ttu-id="0cc81-211">要编译的 lambda 表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-211">The lambda expression to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cc81-212">创建一个表示已编译的 LINQ to Entities 查询的新委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-212">Creates a new delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cc81-213">
            <see cref="T:System.Func`9" />，这是一个表示已编译的 LINQ to Entities 查询的泛型委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-213">
              <see cref="T:System.Func`9" />, a generic delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc81-214">有关详细信息和示例，请参阅[已编译的查询 (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md)。</span><span class="sxs-lookup"><span data-stu-id="0cc81-214">For more information and examples, see [Compiled Queries  (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`10&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`10&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TResult&gt; ^&gt; ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
          <span data-ttu-id="0cc81-215">由 <see cref="T:System.Data.Objects.ObjectContext" /> 派生的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-215">A type derived from <see cref="T:System.Data.Objects.ObjectContext" />.</span>
          </span>
        </typeparam>
        <typeparam name="TArg1">
          <span data-ttu-id="0cc81-216">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-216">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-217">
            <c>TArg1</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-217">
              <c>TArg1</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="0cc81-218">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-218">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-219">
            <c>TArg2</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-219">
              <c>TArg2</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg3">
          <span data-ttu-id="0cc81-220">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-220">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-221">
            <c>TArg3</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-221">
              <c>TArg3</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg4">
          <span data-ttu-id="0cc81-222">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-222">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-223">
            <c>TArg4</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-223">
              <c>TArg4</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg5">
          <span data-ttu-id="0cc81-224">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-224">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-225">
            <c>TArg5</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-225">
              <c>TArg5</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg6">
          <span data-ttu-id="0cc81-226">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-226">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-227">
            <c>TArg6</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-227">
              <c>TArg6</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg7">
          <span data-ttu-id="0cc81-228">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-228">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-229">
            <c>TArg7</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-229">
              <c>TArg7</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg8">
          <span data-ttu-id="0cc81-230">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-230">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-231">
            <c>TArg8</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-231">
              <c>TArg8</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="0cc81-232">类型<c>T</c>通过执行返回的委托返回的查询结果的<see cref="M:System.Data.Objects.CompiledQuery.Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})" />方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-232">The type <c>T</c> of the query results returned by executing the delegate returned by the <see cref="M:System.Data.Objects.CompiledQuery.Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})" /> method.</span>
          </span>
        </typeparam>
        <param name="query">
          <span data-ttu-id="0cc81-233">要编译的 lambda 表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-233">The lambda expression to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cc81-234">创建一个表示已编译的 LINQ to Entities 查询的新委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-234">Creates a new delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cc81-235">
            <see cref="T:System.Func`10" />，这是一个表示已编译的 LINQ to Entities 查询的泛型委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-235">
              <see cref="T:System.Func`10" />, a generic delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc81-236">有关详细信息和示例，请参阅[已编译的查询 (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md)。</span><span class="sxs-lookup"><span data-stu-id="0cc81-236">For more information and examples, see [Compiled Queries  (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`11&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`11&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TResult&gt; ^&gt; ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
          <span data-ttu-id="0cc81-237">由 <see cref="T:System.Data.Objects.ObjectContext" /> 派生的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-237">A type derived from <see cref="T:System.Data.Objects.ObjectContext" />.</span>
          </span>
        </typeparam>
        <typeparam name="TArg1">
          <span data-ttu-id="0cc81-238">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-238">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-239">
            <c>TArg1</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-239">
              <c>TArg1</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="0cc81-240">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-240">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-241">
            <c>TArg2</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-241">
              <c>TArg2</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg3">
          <span data-ttu-id="0cc81-242">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-242">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-243">
            <c>TArg3</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-243">
              <c>TArg3</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg4">
          <span data-ttu-id="0cc81-244">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-244">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-245">
            <c>TArg4</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-245">
              <c>TArg4</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg5">
          <span data-ttu-id="0cc81-246">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-246">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-247">
            <c>TArg5</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-247">
              <c>TArg5</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg6">
          <span data-ttu-id="0cc81-248">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-248">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-249">
            <c>TArg6</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-249">
              <c>TArg6</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg7">
          <span data-ttu-id="0cc81-250">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-250">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-251">
            <c>TArg7</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-251">
              <c>TArg7</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg8">
          <span data-ttu-id="0cc81-252">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-252">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-253">
            <c>TArg8</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-253">
              <c>TArg8</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg9">
          <span data-ttu-id="0cc81-254">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-254">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-255">
            <c>TArg9</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-255">
              <c>TArg9</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="0cc81-256">类型<c>T</c>通过执行返回的委托返回的查询结果的<see cref="M:System.Data.Objects.CompiledQuery.Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})" />方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-256">The type <c>T</c> of the query results returned by executing the delegate returned by the <see cref="M:System.Data.Objects.CompiledQuery.Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})" /> method.</span>
          </span>
        </typeparam>
        <param name="query">
          <span data-ttu-id="0cc81-257">要编译的 lambda 表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-257">The lambda expression to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cc81-258">创建一个表示已编译的 LINQ to Entities 查询的新委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-258">Creates a new delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cc81-259">
            <see cref="T:System.Func`11" />，这是一个表示已编译的 LINQ to Entities 查询的泛型委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-259">
              <see cref="T:System.Func`11" />, a generic delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc81-260">有关详细信息和示例，请参阅[已编译的查询 (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md)。</span><span class="sxs-lookup"><span data-stu-id="0cc81-260">For more information and examples, see [Compiled Queries  (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`12&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`12&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TArg10 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TArg10, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TResult&gt; ^&gt; ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
          <span data-ttu-id="0cc81-261">由 <see cref="T:System.Data.Objects.ObjectContext" /> 派生的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-261">A type derived from <see cref="T:System.Data.Objects.ObjectContext" />.</span>
          </span>
        </typeparam>
        <typeparam name="TArg1">
          <span data-ttu-id="0cc81-262">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-262">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-263">
            <c>TArg1</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-263">
              <c>TArg1</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="0cc81-264">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-264">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-265">
            <c>TArg2</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-265">
              <c>TArg2</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg3">
          <span data-ttu-id="0cc81-266">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-266">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-267">
            <c>TArg3</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-267">
              <c>TArg3</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg4">
          <span data-ttu-id="0cc81-268">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-268">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-269">
            <c>TArg4</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-269">
              <c>TArg4</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg5">
          <span data-ttu-id="0cc81-270">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-270">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-271">
            <c>TArg5</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-271">
              <c>TArg5</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg6">
          <span data-ttu-id="0cc81-272">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-272">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-273">
            <c>TArg6</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-273">
              <c>TArg6</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg7">
          <span data-ttu-id="0cc81-274">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-274">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-275">
            <c>TArg7</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-275">
              <c>TArg7</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg8">
          <span data-ttu-id="0cc81-276">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-276">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-277">
            <c>TArg8</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-277">
              <c>TArg8</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg9">
          <span data-ttu-id="0cc81-278">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-278">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-279">
            <c>TArg9</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-279">
              <c>TArg9</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg10">
          <span data-ttu-id="0cc81-280">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-280">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-281">
            <c>TArg10</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-281">
              <c>TArg10</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="0cc81-282">类型<c>T</c>通过执行返回的委托返回的查询结果的<see cref="M:System.Data.Objects.CompiledQuery.Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})" />方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-282">The type <c>T</c> of the query results returned by executing the delegate returned by the <see cref="M:System.Data.Objects.CompiledQuery.Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})" /> method.</span>
          </span>
        </typeparam>
        <param name="query">
          <span data-ttu-id="0cc81-283">要编译的 lambda 表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-283">The lambda expression to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cc81-284">创建一个表示已编译的 LINQ to Entities 查询的新委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-284">Creates a new delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cc81-285">
            <see cref="T:System.Func`12" />，这是一个表示已编译的 LINQ to Entities 查询的泛型委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-285">
              <see cref="T:System.Func`12" />, a generic delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc81-286">有关详细信息和示例，请参阅[已编译的查询 (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md)。</span><span class="sxs-lookup"><span data-stu-id="0cc81-286">For more information and examples, see [Compiled Queries  (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`13&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`13&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TArg10 As ObjectContext, TArg11 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TArg10, typename TArg11, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TResult&gt; ^&gt; ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
          <span data-ttu-id="0cc81-287">由 <see cref="T:System.Data.Objects.ObjectContext" /> 派生的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-287">A type derived from <see cref="T:System.Data.Objects.ObjectContext" />.</span>
          </span>
        </typeparam>
        <typeparam name="TArg1">
          <span data-ttu-id="0cc81-288">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-288">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-289">
            <c>TArg1</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-289">
              <c>TArg1</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="0cc81-290">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-290">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-291">
            <c>TArg2</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-291">
              <c>TArg2</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg3">
          <span data-ttu-id="0cc81-292">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-292">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-293">
            <c>TArg3</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-293">
              <c>TArg3</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg4">
          <span data-ttu-id="0cc81-294">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-294">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-295">
            <c>TArg4</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-295">
              <c>TArg4</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg5">
          <span data-ttu-id="0cc81-296">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-296">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-297">
            <c>TArg5</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-297">
              <c>TArg5</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg6">
          <span data-ttu-id="0cc81-298">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-298">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-299">
            <c>TArg6</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-299">
              <c>TArg6</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg7">
          <span data-ttu-id="0cc81-300">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-300">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-301">
            <c>TArg7</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-301">
              <c>TArg7</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg8">
          <span data-ttu-id="0cc81-302">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-302">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-303">
            <c>TArg8</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-303">
              <c>TArg8</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg9">
          <span data-ttu-id="0cc81-304">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-304">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-305">
            <c>TArg9</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-305">
              <c>TArg9</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg10">
          <span data-ttu-id="0cc81-306">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-306">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-307">
            <c>TArg10</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-307">
              <c>TArg10</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg11">
          <span data-ttu-id="0cc81-308">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-308">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-309">
            <c>TArg11</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-309">
              <c>TArg11</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="0cc81-310">类型<c>T</c>通过执行返回的委托返回的查询结果的<see cref="M:System.Data.Objects.CompiledQuery.Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})" />方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-310">The type <c>T</c> of the query results returned by executing the delegate returned by the <see cref="M:System.Data.Objects.CompiledQuery.Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})" /> method.</span>
          </span>
        </typeparam>
        <param name="query">
          <span data-ttu-id="0cc81-311">要编译的 lambda 表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-311">The lambda expression to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cc81-312">创建一个表示已编译的 LINQ to Entities 查询的新委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-312">Creates a new delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cc81-313">
            <see cref="T:System.Func`13" />，这是一个表示已编译的 LINQ to Entities 查询的泛型委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-313">
              <see cref="T:System.Func`13" />, a generic delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc81-314">有关详细信息和示例，请参阅[已编译的查询 (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md)。</span><span class="sxs-lookup"><span data-stu-id="0cc81-314">For more information and examples, see [Compiled Queries  (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`14&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`14&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TArg10 As ObjectContext, TArg11 As ObjectContext, TArg12 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TArg10, typename TArg11, typename TArg12, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TResult&gt; ^&gt; ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TArg12" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
          <span data-ttu-id="0cc81-315">由 <see cref="T:System.Data.Objects.ObjectContext" /> 派生的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-315">A type derived from <see cref="T:System.Data.Objects.ObjectContext" />.</span>
          </span>
        </typeparam>
        <typeparam name="TArg1">
          <span data-ttu-id="0cc81-316">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-316">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-317">
            <c>TArg1</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-317">
              <c>TArg1</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="0cc81-318">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-318">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-319">
            <c>TArg2</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-319">
              <c>TArg2</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg3">
          <span data-ttu-id="0cc81-320">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-320">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-321">
            <c>TArg3</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-321">
              <c>TArg3</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg4">
          <span data-ttu-id="0cc81-322">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-322">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-323">
            <c>TArg4</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-323">
              <c>TArg4</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg5">
          <span data-ttu-id="0cc81-324">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-324">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-325">
            <c>TArg5</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-325">
              <c>TArg5</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg6">
          <span data-ttu-id="0cc81-326">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-326">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-327">
            <c>TArg6</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-327">
              <c>TArg6</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg7">
          <span data-ttu-id="0cc81-328">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-328">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-329">
            <c>TArg7</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-329">
              <c>TArg7</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg8">
          <span data-ttu-id="0cc81-330">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-330">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-331">
            <c>TArg8</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-331">
              <c>TArg8</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg9">
          <span data-ttu-id="0cc81-332">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-332">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-333">
            <c>TArg9</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-333">
              <c>TArg9</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg10">
          <span data-ttu-id="0cc81-334">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-334">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-335">
            <c>TArg10</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-335">
              <c>TArg10</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg11">
          <span data-ttu-id="0cc81-336">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-336">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-337">
            <c>TArg11</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-337">
              <c>TArg11</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg12">
          <span data-ttu-id="0cc81-338">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-338">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-339">
            <c>TArg12</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-339">
              <c>TArg12</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="0cc81-340">类型<c>T</c>通过执行返回的委托返回的查询结果的<see cref="M:System.Data.Objects.CompiledQuery.Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})" />方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-340">The type <c>T</c> of the query results returned by executing the delegate returned by the <see cref="M:System.Data.Objects.CompiledQuery.Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})" /> method.</span>
          </span>
        </typeparam>
        <param name="query">
          <span data-ttu-id="0cc81-341">要编译的 lambda 表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-341">The lambda expression to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cc81-342">创建一个表示已编译的 LINQ to Entities 查询的新委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-342">Creates a new delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cc81-343">
            <see cref="T:System.Func`14" />，这是一个表示已编译的 LINQ to Entities 查询的泛型委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-343">
              <see cref="T:System.Func`14" />, a generic delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc81-344">有关详细信息和示例，请参阅[已编译的查询 (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md)。</span><span class="sxs-lookup"><span data-stu-id="0cc81-344">For more information and examples, see [Compiled Queries  (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`15&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`15&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TArg10 As ObjectContext, TArg11 As ObjectContext, TArg12 As ObjectContext, TArg13 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TArg10, typename TArg11, typename TArg12, typename TArg13, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TResult&gt; ^&gt; ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TArg12" />
        <TypeParameter Name="TArg13" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
          <span data-ttu-id="0cc81-345">由 <see cref="T:System.Data.Objects.ObjectContext" /> 派生的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-345">A type derived from <see cref="T:System.Data.Objects.ObjectContext" />.</span>
          </span>
        </typeparam>
        <typeparam name="TArg1">
          <span data-ttu-id="0cc81-346">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-346">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-347">
            <c>TArg1</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-347">
              <c>TArg1</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="0cc81-348">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-348">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-349">
            <c>TArg2</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-349">
              <c>TArg2</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg3">
          <span data-ttu-id="0cc81-350">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-350">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-351">
            <c>TArg3</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-351">
              <c>TArg3</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg4">
          <span data-ttu-id="0cc81-352">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-352">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-353">
            <c>TArg4</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-353">
              <c>TArg4</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg5">
          <span data-ttu-id="0cc81-354">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-354">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-355">
            <c>TArg5</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-355">
              <c>TArg5</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg6">
          <span data-ttu-id="0cc81-356">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-356">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-357">
            <c>TArg6</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-357">
              <c>TArg6</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg7">
          <span data-ttu-id="0cc81-358">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-358">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-359">
            <c>TArg7</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-359">
              <c>TArg7</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg8">
          <span data-ttu-id="0cc81-360">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-360">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-361">
            <c>TArg8</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-361">
              <c>TArg8</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg9">
          <span data-ttu-id="0cc81-362">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-362">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-363">
            <c>TArg9</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-363">
              <c>TArg9</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg10">
          <span data-ttu-id="0cc81-364">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-364">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-365">
            <c>TArg10</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-365">
              <c>TArg10</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg11">
          <span data-ttu-id="0cc81-366">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-366">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-367">
            <c>TArg11</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-367">
              <c>TArg11</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg12">
          <span data-ttu-id="0cc81-368">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-368">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-369">
            <c>TArg12</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-369">
              <c>TArg12</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg13">
          <span data-ttu-id="0cc81-370">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-370">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-371">
            <c>TArg13</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-371">
              <c>TArg13</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="0cc81-372">类型<c>T</c>通过执行返回的委托返回的查询结果的<see cref="M:System.Data.Objects.CompiledQuery.Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})" />方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-372">The type <c>T</c> of the query results returned by executing the delegate returned by the <see cref="M:System.Data.Objects.CompiledQuery.Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})" /> method.</span>
          </span>
        </typeparam>
        <param name="query">
          <span data-ttu-id="0cc81-373">要编译的 lambda 表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-373">The lambda expression to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cc81-374">创建一个表示已编译的 LINQ to Entities 查询的新委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-374">Creates a new delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cc81-375">
            <see cref="T:System.Func`15" />，这是一个表示已编译的 LINQ to Entities 查询的泛型委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-375">
              <see cref="T:System.Func`15" />, a generic delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc81-376">有关详细信息和示例，请参阅[已编译的查询 (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md)。</span><span class="sxs-lookup"><span data-stu-id="0cc81-376">For more information and examples, see [Compiled Queries  (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`16&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TArg14, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`16&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TArg14, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TArg10 As ObjectContext, TArg11 As ObjectContext, TArg12 As ObjectContext, TArg13 As ObjectContext, TArg14 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TArg10, typename TArg11, typename TArg12, typename TArg13, typename TArg14, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TResult&gt; ^&gt; ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TArg12" />
        <TypeParameter Name="TArg13" />
        <TypeParameter Name="TArg14" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
          <span data-ttu-id="0cc81-377">由 <see cref="T:System.Data.Objects.ObjectContext" /> 派生的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-377">A type derived from <see cref="T:System.Data.Objects.ObjectContext" />.</span>
          </span>
        </typeparam>
        <typeparam name="TArg1">
          <span data-ttu-id="0cc81-378">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-378">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-379">
            <c>TArg1</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-379">
              <c>TArg1</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="0cc81-380">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-380">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-381">
            <c>TArg2</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-381">
              <c>TArg2</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg3">
          <span data-ttu-id="0cc81-382">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-382">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-383">
            <c>TArg3</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-383">
              <c>TArg3</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg4">
          <span data-ttu-id="0cc81-384">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-384">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-385">
            <c>TArg4</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-385">
              <c>TArg4</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg5">
          <span data-ttu-id="0cc81-386">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-386">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-387">
            <c>TArg5</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-387">
              <c>TArg5</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg6">
          <span data-ttu-id="0cc81-388">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-388">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-389">
            <c>TArg6</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-389">
              <c>TArg6</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg7">
          <span data-ttu-id="0cc81-390">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-390">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-391">
            <c>TArg7</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-391">
              <c>TArg7</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg8">
          <span data-ttu-id="0cc81-392">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-392">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-393">
            <c>TArg8</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-393">
              <c>TArg8</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg9">
          <span data-ttu-id="0cc81-394">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-394">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-395">
            <c>TArg9</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-395">
              <c>TArg9</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg10">
          <span data-ttu-id="0cc81-396">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-396">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-397">
            <c>TArg10</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-397">
              <c>TArg10</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg11">
          <span data-ttu-id="0cc81-398">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-398">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-399">
            <c>TArg11</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-399">
              <c>TArg11</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg12">
          <span data-ttu-id="0cc81-400">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-400">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-401">
            <c>TArg12</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-401">
              <c>TArg12</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg13">
          <span data-ttu-id="0cc81-402">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-402">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-403">
            <c>TArg13</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-403">
              <c>TArg13</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg14">
          <span data-ttu-id="0cc81-404">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-404">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-405">
            <c>TArg14</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-405">
              <c>TArg14</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="0cc81-406">类型<c>T</c>通过执行返回的委托返回的查询结果的<see cref="M:System.Data.Objects.CompiledQuery.Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})" />方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-406">The type <c>T</c> of the query results returned by executing the delegate returned by the <see cref="M:System.Data.Objects.CompiledQuery.Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})" /> method.</span>
          </span>
        </typeparam>
        <param name="query">
          <span data-ttu-id="0cc81-407">要编译的 lambda 表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-407">The lambda expression to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cc81-408">创建一个表示已编译的 LINQ to Entities 查询的新委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-408">Creates a new delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cc81-409">
            <see cref="T:System.Func`16" />，这是一个表示已编译的 LINQ to Entities 查询的泛型委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-409">
              <see cref="T:System.Func`16" />, a generic delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc81-410">有关详细信息和示例，请参阅[已编译的查询 (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md)。</span><span class="sxs-lookup"><span data-stu-id="0cc81-410">For more information and examples, see [Compiled Queries  (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`17&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TArg14, !!TArg15, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`17&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TArg14, !!TArg15, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TArg10 As ObjectContext, TArg11 As ObjectContext, TArg12 As ObjectContext, TArg13 As ObjectContext, TArg14 As ObjectContext, TArg15 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TArg10, typename TArg11, typename TArg12, typename TArg13, typename TArg14, typename TArg15, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TResult&gt; ^&gt; ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TArg12" />
        <TypeParameter Name="TArg13" />
        <TypeParameter Name="TArg14" />
        <TypeParameter Name="TArg15" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
          <span data-ttu-id="0cc81-411">由 <see cref="T:System.Data.Objects.ObjectContext" /> 派生的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-411">A type derived from <see cref="T:System.Data.Objects.ObjectContext" />.</span>
          </span>
        </typeparam>
        <typeparam name="TArg1">
          <span data-ttu-id="0cc81-412">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-412">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-413">
            <c>TArg1</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-413">
              <c>TArg1</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="0cc81-414">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-414">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-415">
            <c>TArg2</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-415">
              <c>TArg2</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg3">
          <span data-ttu-id="0cc81-416">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-416">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-417">
            <c>TArg3</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-417">
              <c>TArg3</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg4">
          <span data-ttu-id="0cc81-418">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-418">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-419">
            <c>TArg4</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-419">
              <c>TArg4</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg5">
          <span data-ttu-id="0cc81-420">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-420">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-421">
            <c>TArg5</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-421">
              <c>TArg5</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg6">
          <span data-ttu-id="0cc81-422">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-422">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-423">
            <c>TArg6</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-423">
              <c>TArg6</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg7">
          <span data-ttu-id="0cc81-424">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-424">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-425">
            <c>TArg7</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-425">
              <c>TArg7</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg8">
          <span data-ttu-id="0cc81-426">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-426">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-427">
            <c>TArg8</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-427">
              <c>TArg8</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg9">
          <span data-ttu-id="0cc81-428">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-428">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-429">
            <c>TArg9</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-429">
              <c>TArg9</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg10">
          <span data-ttu-id="0cc81-430">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-430">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-431">
            <c>TArg10</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-431">
              <c>TArg10</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg11">
          <span data-ttu-id="0cc81-432">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-432">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-433">
            <c>TArg11</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-433">
              <c>TArg11</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg12">
          <span data-ttu-id="0cc81-434">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-434">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-435">
            <c>TArg12</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-435">
              <c>TArg12</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg13">
          <span data-ttu-id="0cc81-436">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-436">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-437">
            <c>TArg13</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-437">
              <c>TArg13</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg14">
          <span data-ttu-id="0cc81-438">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-438">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-439">
            <c>TArg14</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-439">
              <c>TArg14</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TArg15">
          <span data-ttu-id="0cc81-440">表示在执行由此方法返回的委托时必须传入的参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-440">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.</span>
          </span>
          <span data-ttu-id="0cc81-441">
            <c>TArg15</c>必须为基元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-441">
              <c>TArg15</c> must be a primitive type.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="0cc81-442">类型<c>T</c>通过执行返回的委托返回的查询结果的<see cref="M:System.Data.Objects.CompiledQuery.Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})" />方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-442">The type <c>T</c> of the query results returned by executing the delegate returned by the <see cref="M:System.Data.Objects.CompiledQuery.Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})" /> method.</span>
          </span>
        </typeparam>
        <param name="query">
          <span data-ttu-id="0cc81-443">要编译的 lambda 表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-443">The lambda expression to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cc81-444">创建一个表示已编译的 LINQ to Entities 查询的新委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-444">Creates a new delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cc81-445">
            <see cref="T:System.Func`17" />，这是一个表示已编译的 LINQ to Entities 查询的泛型委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cc81-445">
              <see cref="T:System.Func`17" />, a generic delegate that represents the compiled LINQ to Entities query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc81-446">有关详细信息和示例，请参阅[已编译的查询 (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md)。</span><span class="sxs-lookup"><span data-stu-id="0cc81-446">For more information and examples, see [Compiled Queries  (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>