<Type Name="ICodeCompiler" FullName="System.CodeDom.Compiler.ICodeCompiler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5ae8eb3fd8a699d745c31e176bbcb6059053c88b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30360121" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICodeCompiler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICodeCompiler" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.ICodeCompiler" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICodeCompiler" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICodeCompiler" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>定义用于调用源代码编译的接口或使用指定编译器的 CodeDOM 树。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  在.NET framework 1.0 和 1.1 版中中的代码提供程序包含的实现<xref:System.CodeDom.Compiler.CodeDomProvider>， <xref:System.CodeDom.Compiler.ICodeGenerator>， <xref:System.CodeDom.Compiler.ICodeParser>，和<xref:System.CodeDom.Compiler.ICodeCompiler>。 在[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]、 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A>， <xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A>，和<xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A>方法已过时，和的方法<xref:System.CodeDom.Compiler.ICodeGenerator>和<xref:System.CodeDom.Compiler.ICodeCompiler>中直接提供<xref:System.CodeDom.Compiler.CodeDomProvider>类。 你应在你的代码提供程序实现中重写这些方法，并不调用基方法。  
  
 <xref:System.CodeDom.Compiler.ICodeCompiler>可以实现接口，为特定的编译器，以使开发人员能够以编程方式编译的代码文档对象模型 (CodeDOM) 编译单元，源代码中，将包含字符串中的程序集或源代码文件。  
  
 <xref:System.CodeDom.Compiler.ICodeCompiler>接口提供的功能来调用具有指定参数在运行时和访问与相关的信息编译后将进行编译，包括的结果代码，以及任何错误或警告编译器返回的编译。 每个编译方法都接受<xref:System.CodeDom.Compiler.CompilerParameters>对象，该值指示编译器，设置并返回<xref:System.CodeDom.Compiler.CompilerResults>对象，指示编译的结果。  
  
 编译器开发人员应提供一个实现此接口以支持动态编译。 <xref:System.CodeDom.Compiler.CodeDomProvider> 实施者还应考虑实现此接口可提供以编程方式编译的功能的语言，它们将提供 CodeDom 支持的。  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">直接调用方的完全信任。 此接口不能由部分受信任的代码。</permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">对继承者的完全信任。 实现此接口的类不能由部分受信任的代码继承。</permission>
    <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
    <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
  </Docs>
  <Members>
    <Member MemberName="CompileAssemblyFromDom">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CompilerResults CompileAssemblyFromDom (System.CodeDom.Compiler.CompilerParameters options, System.CodeDom.CodeCompileUnit compilationUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromDom(class System.CodeDom.Compiler.CompilerParameters options, class System.CodeDom.CodeCompileUnit compilationUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompileAssemblyFromDom (options As CompilerParameters, compilationUnit As CodeCompileUnit) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromDom(System::CodeDom::Compiler::CompilerParameters ^ options, System::CodeDom::CodeCompileUnit ^ compilationUnit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="compilationUnit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="options">一个 <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> 对象，它指示编译设置。</param>
        <param name="compilationUnit">
          <see cref="T:System.CodeDom.CodeCompileUnit" />，指示要编译的代码。</param>
        <summary>使用指定的编译器设置从指定的 <see cref="N:System.CodeDom" /> 所包含的 <see cref="T:System.CodeDom.CodeCompileUnit" /> 树中编译程序集。</summary>
        <returns>指示编译结果的 <see cref="T:System.CodeDom.Compiler.CompilerResults" /> 对象。</returns>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">直接调用方的完全信任。 此成员不能由部分信任的代码使用。</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">对继承者的完全信任。 此成员不能由部分受信任的代码继承。</permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.CodeNamespace" />
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromDomBatch">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CompilerResults CompileAssemblyFromDomBatch (System.CodeDom.Compiler.CompilerParameters options, System.CodeDom.CodeCompileUnit[] compilationUnits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromDomBatch(class System.CodeDom.Compiler.CompilerParameters options, class System.CodeDom.CodeCompileUnit[] compilationUnits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromDomBatch(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CompileAssemblyFromDomBatch (options As CompilerParameters, compilationUnits As CodeCompileUnit()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromDomBatch(System::CodeDom::Compiler::CompilerParameters ^ options, cli::array &lt;System::CodeDom::CodeCompileUnit ^&gt; ^ compilationUnits);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="compilationUnits" Type="System.CodeDom.CodeCompileUnit[]" />
      </Parameters>
      <Docs>
        <param name="options">一个 <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> 对象，它指示编译设置。</param>
        <param name="compilationUnits">
          <see cref="T:System.CodeDom.CodeCompileUnit" /> 类型数组，指示要编译的代码。</param>
        <summary>基于包含在 <see cref="N:System.CodeDom" /> 对象的指定数组中的 <see cref="T:System.CodeDom.CodeCompileUnit" /> 树，使用指定的编译器设置编译程序集。</summary>
        <returns>指示编译结果的 <see cref="T:System.CodeDom.Compiler.CompilerResults" /> 对象。</returns>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">直接调用方的完全信任。 此成员不能由部分信任的代码使用。</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">对继承者的完全信任。 此成员不能由部分受信任的代码继承。</permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromFile">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CompilerResults CompileAssemblyFromFile (System.CodeDom.Compiler.CompilerParameters options, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromFile(class System.CodeDom.Compiler.CompilerParameters options, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompileAssemblyFromFile (options As CompilerParameters, fileName As String) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromFile(System::CodeDom::Compiler::CompilerParameters ^ options, System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="options">一个 <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> 对象，它指示编译设置。</param>
        <param name="fileName">包含要编译的源代码的文件的文件名。</param>
        <summary>从包含在指定文件中的源代码，使用指定的编译器设置编译程序集。</summary>
        <returns>指示编译结果的 <see cref="T:System.CodeDom.Compiler.CompilerResults" /> 对象。</returns>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">直接调用方的完全信任。 此成员不能由部分信任的代码使用。</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">对继承者的完全信任。 此成员不能由部分受信任的代码继承。</permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromFileBatch">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CompilerResults CompileAssemblyFromFileBatch (System.CodeDom.Compiler.CompilerParameters options, string[] fileNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromFileBatch(class System.CodeDom.Compiler.CompilerParameters options, string[] fileNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromFileBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CompileAssemblyFromFileBatch (options As CompilerParameters, fileNames As String()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromFileBatch(System::CodeDom::Compiler::CompilerParameters ^ options, cli::array &lt;System::String ^&gt; ^ fileNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="fileNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="options">一个 <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> 对象，它指示编译设置。</param>
        <param name="fileNames">要编译的文件的文件名。</param>
        <summary>从包含在指定文件中的源代码，使用指定的编译器设置编译程序集。</summary>
        <returns>指示编译结果的 <see cref="T:System.CodeDom.Compiler.CompilerResults" /> 对象。</returns>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">直接调用方的完全信任。 此成员不能由部分信任的代码使用。</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">对继承者的完全信任。 此成员不能由部分受信任的代码继承。</permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromSource">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CompilerResults CompileAssemblyFromSource (System.CodeDom.Compiler.CompilerParameters options, string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromSource(class System.CodeDom.Compiler.CompilerParameters options, string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompileAssemblyFromSource (options As CompilerParameters, source As String) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromSource(System::CodeDom::Compiler::CompilerParameters ^ options, System::String ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="options">一个 <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> 对象，它指示编译设置。</param>
        <param name="source">要编译的源代码。</param>
        <summary>从包含源代码的指定字符串，使用指定的编译器设置编译程序集。</summary>
        <returns>指示编译结果的 <see cref="T:System.CodeDom.Compiler.CompilerResults" /> 对象。</returns>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">直接调用方的完全信任。 此成员不能由部分信任的代码使用。</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">对继承者的完全信任。 此成员不能由部分受信任的代码继承。</permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromSourceBatch">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CompilerResults CompileAssemblyFromSourceBatch (System.CodeDom.Compiler.CompilerParameters options, string[] sources);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromSourceBatch(class System.CodeDom.Compiler.CompilerParameters options, string[] sources) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromSourceBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CompileAssemblyFromSourceBatch (options As CompilerParameters, sources As String()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromSourceBatch(System::CodeDom::Compiler::CompilerParameters ^ options, cli::array &lt;System::String ^&gt; ^ sources);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="sources" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="options">一个 <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> 对象，它指示编译设置。</param>
        <param name="sources">要编译的源代码字符串。</param>
        <summary>从包含源代码的字符串的指定数组，使用指定的编译器设置编译程序集。</summary>
        <returns>指示编译结果的 <see cref="T:System.CodeDom.Compiler.CompilerResults" /> 对象。</returns>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">直接调用方的完全信任。 此成员不能由部分信任的代码使用。</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">对继承者的完全信任。 此成员不能由部分受信任的代码继承。</permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
  </Members>
</Type>