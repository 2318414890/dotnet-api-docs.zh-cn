<Type Name="CompilerParameters" FullName="System.CodeDom.Compiler.CompilerParameters">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="670c26ef706ee6fcccc193c77ac89e2269d9dc90" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36647215" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CompilerParameters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CompilerParameters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.CompilerParameters" />
  <TypeSignature Language="VB.NET" Value="Public Class CompilerParameters" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompilerParameters" />
  <TypeSignature Language="F#" Value="type CompilerParameters = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4d965-101">表示用于调用编译器的参数。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4d965-101">Represents the parameters used to invoke a compiler.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d965-102">A<xref:System.CodeDom.Compiler.CompilerParameters>对象表示的设置和选项<xref:System.CodeDom.Compiler.ICodeCompiler>接口。</span><span class="sxs-lookup"><span data-stu-id="4d965-102">A <xref:System.CodeDom.Compiler.CompilerParameters> object represents the settings and options for an <xref:System.CodeDom.Compiler.ICodeCompiler> interface.</span></span>  
  
 <span data-ttu-id="4d965-103">如果您正在编译的可执行程序，则必须设置<xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A>属性`true`。</span><span class="sxs-lookup"><span data-stu-id="4d965-103">If you are compiling an executable program, you must set the <xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A> property to `true`.</span></span> <span data-ttu-id="4d965-104">当<xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A>设置为`false`，编译器将生成类库。</span><span class="sxs-lookup"><span data-stu-id="4d965-104">When the <xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A> is set to `false`, the compiler will generate a class library.</span></span> <span data-ttu-id="4d965-105">默认情况下，新<xref:System.CodeDom.Compiler.CompilerParameters>使用初始化其<xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A>属性设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="4d965-105">By default, a new <xref:System.CodeDom.Compiler.CompilerParameters> is initialized with its <xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A> property set to `false`.</span></span> <span data-ttu-id="4d965-106">如果要从 CodeDOM 图编译可执行文件，则必须在该图中定义 <xref:System.CodeDom.CodeEntryPointMethod>。</span><span class="sxs-lookup"><span data-stu-id="4d965-106">If you are compiling an executable from a CodeDOM graph, a <xref:System.CodeDom.CodeEntryPointMethod> must be defined in the graph.</span></span> <span data-ttu-id="4d965-107">如果有多个代码的入口点，您可以指示定义入口点，以通过设置类的名称使用的类<xref:System.CodeDom.Compiler.CompilerParameters.MainClass%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4d965-107">If there are multiple code entry points, you can indicate the class that defines the entry point to use by setting the name of the class to the <xref:System.CodeDom.Compiler.CompilerParameters.MainClass%2A> property.</span></span>  
  
 <span data-ttu-id="4d965-108">你可以指定中的输出程序集的文件名称<xref:System.CodeDom.Compiler.CompilerParameters.OutputAssembly%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4d965-108">You can specify a file name for the output assembly in the <xref:System.CodeDom.Compiler.CompilerParameters.OutputAssembly%2A> property.</span></span> <span data-ttu-id="4d965-109">否则，将使用默认的输出文件名。</span><span class="sxs-lookup"><span data-stu-id="4d965-109">Otherwise, a default output file name will be used.</span></span> <span data-ttu-id="4d965-110">若要生成的程序集中包含调试信息，请设置<xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A>属性`true`。</span><span class="sxs-lookup"><span data-stu-id="4d965-110">To include debug information in a generated assembly, set the <xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A> property to `true`.</span></span> <span data-ttu-id="4d965-111">如果你的项目引用任何程序集，则必须在中作为项中指定的程序集名称<xref:System.Collections.Specialized.StringCollection>设置为<xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A>属性<xref:System.CodeDom.Compiler.CompilerParameters>调用编译时使用。</span><span class="sxs-lookup"><span data-stu-id="4d965-111">If your project references any assemblies, you must specify the assembly names as items in a <xref:System.Collections.Specialized.StringCollection> set to the <xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A> property of the <xref:System.CodeDom.Compiler.CompilerParameters> used when invoking compilation.</span></span>  
  
 <span data-ttu-id="4d965-112">你可以编译的程序集中的通过设置写入到内存，而不是磁盘<xref:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory%2A>属性`true`。</span><span class="sxs-lookup"><span data-stu-id="4d965-112">You can compile an assembly that is written to memory rather than disk by setting the <xref:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory%2A> property to `true`.</span></span> <span data-ttu-id="4d965-113">在内存中生成程序集时，代码可从 <xref:System.CodeDom.Compiler.CompilerResults> 的 <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> 属性中获取对生成的程序集的引用。</span><span class="sxs-lookup"><span data-stu-id="4d965-113">When an assembly is generated in memory, your code can obtain a reference to the generated assembly from the <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> property of a <xref:System.CodeDom.Compiler.CompilerResults>.</span></span> <span data-ttu-id="4d965-114">如果程序集写入到磁盘，你可以从生成的程序集获取路径<xref:System.CodeDom.Compiler.CompilerResults.PathToAssembly%2A>属性<xref:System.CodeDom.Compiler.CompilerResults>。</span><span class="sxs-lookup"><span data-stu-id="4d965-114">If an assembly is written to disk, you can obtain the path to the generated assembly from the <xref:System.CodeDom.Compiler.CompilerResults.PathToAssembly%2A> property of a <xref:System.CodeDom.Compiler.CompilerResults>.</span></span>  
  
 <span data-ttu-id="4d965-115">若要指定暂停编译的警告等级，请将 <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A> 属性设置为一个整数，表示暂停编译的警告等级。</span><span class="sxs-lookup"><span data-stu-id="4d965-115">To specify a warning level at which to halt compilation, set the <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A> property to an integer that represents the warning level at which to halt compilation.</span></span> <span data-ttu-id="4d965-116">你还可以配置编译器通过设置遇到警告如果暂停编译<xref:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors%2A>属性`true`。</span><span class="sxs-lookup"><span data-stu-id="4d965-116">You can also configure the compiler to halt compilation if warnings are encountered by setting the <xref:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="4d965-117">若要指定在调用编译进程时使用的自定义命令行参数字符串，请在 <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A> 属性中设置该字符串。</span><span class="sxs-lookup"><span data-stu-id="4d965-117">To specify a custom command-line arguments string to use when invoking the compilation process, set the string in the <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A> property.</span></span> <span data-ttu-id="4d965-118">如果在调用编译器进程时需要 Win32 安全令牌，请在 <xref:System.CodeDom.Compiler.CompilerParameters.UserToken%2A> 属性中指定该令牌。</span><span class="sxs-lookup"><span data-stu-id="4d965-118">If a Win32 security token is required to invoke the compiler process, specify the token in the <xref:System.CodeDom.Compiler.CompilerParameters.UserToken%2A> property.</span></span> <span data-ttu-id="4d965-119">若要在编译的程序集包括.NET Framework 资源文件，将添加到的资源文件的名称<xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4d965-119">To include .NET Framework resource files in the compiled assembly, add the names of the resource files to the <xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A> property.</span></span> <span data-ttu-id="4d965-120">若要引用了另一个程序集中的.NET Framework 资源，将添加到的资源文件的名称<xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4d965-120">To reference .NET Framework resources in another assembly, add the names of the resource files to the <xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A> property.</span></span> <span data-ttu-id="4d965-121">若要包含在编译的程序集中的 Win32 资源文件，指定的名称中的 Win32 资源文件<xref:System.CodeDom.Compiler.CompilerParameters.Win32Resource%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4d965-121">To include a Win32 resource file in the compiled assembly, specify the name of the Win32 resource file in the <xref:System.CodeDom.Compiler.CompilerParameters.Win32Resource%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d965-122">此类包含链接要求，并且在类级别应用于所有成员继承要求。</span><span class="sxs-lookup"><span data-stu-id="4d965-122">This class contains a link demand and an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="4d965-123">A<xref:System.Security.SecurityException>直接调用方或派生的类没有完全信任权限时，将引发。</span><span class="sxs-lookup"><span data-stu-id="4d965-123">A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission.</span></span> <span data-ttu-id="4d965-124">有关安全要求的详细信息，请参阅[链接需求](~/docs/framework/misc/link-demands.md)和[的继承需求](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9)。</span><span class="sxs-lookup"><span data-stu-id="4d965-124">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md) and [Inheritance Demands](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d965-125">下面的示例生成一个简单的 Hello World 程序一个 CodeDOM 源关系图。</span><span class="sxs-lookup"><span data-stu-id="4d965-125">The following example builds a CodeDOM source graph for a simple Hello World program.</span></span>  <span data-ttu-id="4d965-126">然后，源将保存到文件，编译到可执行文件，并运行。</span><span class="sxs-lookup"><span data-stu-id="4d965-126">The source is then saved to a file, compiled into an executable, and run.</span></span> <span data-ttu-id="4d965-127">`CompileCode`方法演示了如何使用<xref:System.CodeDom.Compiler.CompilerParameters>类可指定各种编译器设置和选项。</span><span class="sxs-lookup"><span data-stu-id="4d965-127">The `CompileCode` method illustrates how to use the <xref:System.CodeDom.Compiler.CompilerParameters> class to specify various compiler settings and options.</span></span>  
  
 [!code-cpp[CompilerParametersExample#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerParametersExample/CPP/source.cpp#1)]
 [!code-csharp[CompilerParametersExample#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerParametersExample/CS/source.cs#1)]
 [!code-vb[CompilerParametersExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerParametersExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
      <span data-ttu-id="4d965-128">直接调用方的完全信任。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4d965-128">for full trust for the immediate caller.</span>
      </span>
      <span data-ttu-id="4d965-129">此类不能由部分受信任的代码使用。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4d965-129">This class cannot be used by partially trusted code.</span>
      </span>
    </permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="4d965-130">对继承者的完全信任。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4d965-130">for full trust for inheritors.</span>
      </span>
      <span data-ttu-id="4d965-131">此类不能由部分受信任的代码继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4d965-131">This class cannot be inherited by partially trusted code.</span>
      </span>
    </permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4d965-132">初始化 <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-132">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompilerParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerParameters.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompilerParameters();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4d965-133">初始化 <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-133">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4d965-134">下面的示例演示如何使用<xref:System.CodeDom.Compiler.CompilerParameters>指定各种编译器设置和选项。</span><span class="sxs-lookup"><span data-stu-id="4d965-134">The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options.</span></span> <span data-ttu-id="4d965-135">此代码示例摘自更大的示例为提供<xref:System.CodeDom.Compiler.CompilerParameters>类。</span><span class="sxs-lookup"><span data-stu-id="4d965-135">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.</span></span>  
  
 [!code-cpp[CompilerParametersExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerParametersExample/CPP/source.cpp#2)]
 [!code-csharp[CompilerParametersExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerParametersExample/CS/source.cs#2)]
 [!code-vb[CompilerParametersExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerParametersExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="4d965-136">直接调用方的完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-136">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="4d965-137">此类不能由部分受信任的代码使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-137">This class cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompilerParameters (string[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompilerParameters(cli::array &lt;System::String ^&gt; ^ assemblyNames);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.Compiler.CompilerParameters : string[] -&gt; System.CodeDom.Compiler.CompilerParameters" Usage="new System.CodeDom.Compiler.CompilerParameters assemblyNames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="assemblyNames">
          <span data-ttu-id="4d965-138">要引用的程序集的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-138">The names of the assemblies to reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4d965-139">使用指定的程序集名称初始化 <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-139">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> class using the specified assembly names.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="4d965-140">直接调用方的完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-140">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="4d965-141">此类不能由部分受信任的代码使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-141">This class cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompilerParameters (string[] assemblyNames, string outputName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames, string outputName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String(), outputName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompilerParameters(cli::array &lt;System::String ^&gt; ^ assemblyNames, System::String ^ outputName);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.Compiler.CompilerParameters : string[] * string -&gt; System.CodeDom.Compiler.CompilerParameters" Usage="new System.CodeDom.Compiler.CompilerParameters (assemblyNames, outputName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
        <Parameter Name="outputName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyNames">
          <span data-ttu-id="4d965-142">要引用的程序集的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-142">The names of the assemblies to reference.</span>
          </span>
        </param>
        <param name="outputName">
          <span data-ttu-id="4d965-143">输出文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-143">The output file name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4d965-144">使用指定的程序集名称和输出文件名初始化 <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-144">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> class using the specified assembly names and output file name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="4d965-145">直接调用方的完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-145">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="4d965-146">此类不能由部分受信任的代码使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-146">This class cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompilerParameters (string[] assemblyNames, string outputName, bool includeDebugInformation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames, string outputName, bool includeDebugInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String(), outputName As String, includeDebugInformation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompilerParameters(cli::array &lt;System::String ^&gt; ^ assemblyNames, System::String ^ outputName, bool includeDebugInformation);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.Compiler.CompilerParameters : string[] * string * bool -&gt; System.CodeDom.Compiler.CompilerParameters" Usage="new System.CodeDom.Compiler.CompilerParameters (assemblyNames, outputName, includeDebugInformation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
        <Parameter Name="outputName" Type="System.String" />
        <Parameter Name="includeDebugInformation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="assemblyNames">
          <span data-ttu-id="4d965-147">要引用的程序集的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-147">The names of the assemblies to reference.</span>
          </span>
        </param>
        <param name="outputName">
          <span data-ttu-id="4d965-148">输出文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-148">The output file name.</span>
          </span>
        </param>
        <param name="includeDebugInformation">
          <span data-ttu-id="4d965-149">包含调试信息，则为 <see langword="true" />；排除调试信息，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-149">
              <see langword="true" /> to include debug information; <see langword="false" /> to exclude debug information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4d965-150">使用指定的程序集名称、输出名和一个指示是否包含调试信息的值来初始化 <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-150">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> class using the specified assembly names, output name, and a value indicating whether to include debug information.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="4d965-151">直接调用方的完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-151">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="4d965-152">此类不能由部分受信任的代码使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-152">This class cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CompilerOptions">
      <MemberSignature Language="C#" Value="public string CompilerOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CompilerOptions" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.CompilerOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property CompilerOptions As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CompilerOptions { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CompilerOptions : string with get, set" Usage="System.CodeDom.Compiler.CompilerParameters.CompilerOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d965-153">获取或设置调用编译器时使用的可选命令行参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-153">Gets or sets optional command-line arguments to use when invoking the compiler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d965-154">用于编译器的任何附加命令行参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-154">Any additional command-line arguments for the compiler.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d965-155"><xref:System.CodeDom.Compiler.ICodeCompiler>调用命令行编译器时，通常包括在命令行上的此字符串。</span><span class="sxs-lookup"><span data-stu-id="4d965-155">An <xref:System.CodeDom.Compiler.ICodeCompiler> typically includes this string on the command line when invoking a command-line compiler.</span></span> <span data-ttu-id="4d965-156">默认情况下，此属性包含一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="4d965-156">By default, this property contains an empty string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d965-157">下面的示例演示如何使用<xref:System.CodeDom.Compiler.CompilerParameters>指定各种编译器设置和选项。</span><span class="sxs-lookup"><span data-stu-id="4d965-157">The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options.</span></span> <span data-ttu-id="4d965-158">此代码示例摘自更大的示例为提供<xref:System.CodeDom.Compiler.CompilerParameters>类。</span><span class="sxs-lookup"><span data-stu-id="4d965-158">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.</span></span>  
  
 [!code-cpp[CompilerParametersExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerParametersExample/CPP/source.cpp#2)]
 [!code-csharp[CompilerParametersExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerParametersExample/CS/source.cs#2)]
 [!code-vb[CompilerParametersExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerParametersExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CoreAssemblyFileName">
      <MemberSignature Language="C#" Value="public string CoreAssemblyFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CoreAssemblyFileName" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property CoreAssemblyFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CoreAssemblyFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CoreAssemblyFileName : string with get, set" Usage="System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d965-159">获取或设置包含基类类型（如 <see cref="T:System.Object" />、<see cref="T:System.String" /> 或 <see cref="T:System.Int32" />）的核心或标准程序集的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-159">Gets or sets the name of the core or standard assembly that contains basic types such as <see cref="T:System.Object" />, <see cref="T:System.String" />, or <see cref="T:System.Int32" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d965-160">包含基本类型的核心程序集的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-160">The name of the core assembly that contains basic types.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d965-161">如果此属性的值是空字符串或 `null`，则编译器将使用默认核心程序集。</span><span class="sxs-lookup"><span data-stu-id="4d965-161">If the value of this property is an empty string or `null`, the compiler uses the default core assembly.</span></span> <span data-ttu-id="4d965-162">根据编译器版本，默认核心程序集可能是位于 Framework 目录或引用程序集目录中的 mscorlib.dll 或 System.Runtime.dll。</span><span class="sxs-lookup"><span data-stu-id="4d965-162">Depending on the compiler version, the default core assembly may be mscorlib.dll or System.Runtime.dll in a Framework directory or reference assembly directory.</span></span> <span data-ttu-id="4d965-163">如果此属性的值不为空，则代码文档对象模型 (CodeDOM) 将显式引用指定程序集并发出导致编译器在编译期间不隐式引用任何程序集的编译器选项。</span><span class="sxs-lookup"><span data-stu-id="4d965-163">If the value of this property is not empty, the Code Document Object Model (CodeDOM) explicitly references the specified assembly and emits compiler options that cause the compiler to not reference any assemblies implicitly during compilation..</span></span> <span data-ttu-id="4d965-164">对于默认情况下仅隐式引用核心或标准程序集的编译器，此属性可单独使用。</span><span class="sxs-lookup"><span data-stu-id="4d965-164">For compilers that reference the core or standard assembly only implicitly by default, this property can be used on its own.</span></span> <span data-ttu-id="4d965-165">对于隐式引用程序集此外核心或标准程序集的编译器，使用此选项可能需要指定在额外的条目<xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="4d965-165">For compilers that implicitly reference assemblies in addition to the core or standard assembly, using this option may require specifying additional entries in the <xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d965-166"><xref:System.CodeDom.Compiler.ICodeCompiler> 或 <xref:System.CodeDom.Compiler.CodeDomProvider> 实现可以选择忽略此属性。</span><span class="sxs-lookup"><span data-stu-id="4d965-166">An <xref:System.CodeDom.Compiler.ICodeCompiler> or <xref:System.CodeDom.Compiler.CodeDomProvider> implementation may choose to ignore this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmbeddedResources">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringCollection EmbeddedResources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection EmbeddedResources" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EmbeddedResources As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringCollection ^ EmbeddedResources { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EmbeddedResources : System.Collections.Specialized.StringCollection" Usage="System.CodeDom.Compiler.CompilerParameters.EmbeddedResources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d965-167">获取要在编译程序集输出时包含的 .NET Framework 资源文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-167">Gets the .NET Framework resource files to include when compiling the assembly output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d965-168">一个集合，包含要在生成的程序集中包含的 .NET Framework 资源的文件路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-168">A collection that contains the file paths of .NET Framework resources to include in the generated assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d965-169">嵌入的资源是内置于生成的程序集输出文件。</span><span class="sxs-lookup"><span data-stu-id="4d965-169">Embedded resources are built into the generated assembly output file.</span></span> <span data-ttu-id="4d965-170">包括通过此属性的文件将类似于`/resource`支持许多.NET Framework 编译器的命令行自变量。</span><span class="sxs-lookup"><span data-stu-id="4d965-170">Including files through this property is similar to the `/resource` command-line argument supported by many of the .NET Framework compilers.</span></span>  
  
 <span data-ttu-id="4d965-171">并非所有的编译器支持.NET Framework 资源文件，因此你应通过调用来测试此支持<xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>具有标志方法<xref:System.CodeDom.Compiler.GeneratorSupport.Resources>。</span><span class="sxs-lookup"><span data-stu-id="4d965-171">Not all compilers support .NET Framework resource files, so you should test for this support by calling the <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> method with the flag <xref:System.CodeDom.Compiler.GeneratorSupport.Resources>.</span></span>  
  
 <span data-ttu-id="4d965-172">将一个或多个.NET Framework 资源文件路径添加到返回<xref:System.Collections.Specialized.StringCollection>将嵌入已编译的程序集中的文件资源。</span><span class="sxs-lookup"><span data-stu-id="4d965-172">Add one or more .NET Framework resource file paths to the returned <xref:System.Collections.Specialized.StringCollection> to embed the file resources in the compiled assembly.</span></span> <span data-ttu-id="4d965-173">添加重复或无效的文件路径会导致编译错误;确保每个字符串指定有效的.NET Framework 资源文件的唯一路径。</span><span class="sxs-lookup"><span data-stu-id="4d965-173">Adding a duplicate or invalid file path results in compilation errors; ensure that each string specifies a unique path to a valid .NET Framework resource file.</span></span>  
  
 <span data-ttu-id="4d965-174">使用<xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>以便将包含在默认或非特定区域性.NET Framework 资源程序集; 使用<xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A>属性来引用附属程序集中的.NET Framework 资源。</span><span class="sxs-lookup"><span data-stu-id="4d965-174">Use <xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A> to include default or neutral culture .NET Framework resources for an assembly; use the <xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A> property to reference .NET Framework resources in satellite assemblies.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d965-175">下面的示例演示如何使用<xref:System.CodeDom.Compiler.CompilerParameters>指定各种编译器设置和选项。</span><span class="sxs-lookup"><span data-stu-id="4d965-175">The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options.</span></span> <span data-ttu-id="4d965-176">此代码示例摘自更大的示例为提供<xref:System.CodeDom.Compiler.CompilerParameters>类。</span><span class="sxs-lookup"><span data-stu-id="4d965-176">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.</span></span>  
  
 [!code-cpp[CompilerParametersExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerParametersExample/CPP/source.cpp#2)]
 [!code-csharp[CompilerParametersExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerParametersExample/CS/source.cs#2)]
 [!code-vb[CompilerParametersExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerParametersExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.GeneratorSupport" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerParameters.LinkedResources" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerParameters.Win32Resource" />
      </Docs>
    </Member>
    <Member MemberName="Evidence">
      <MemberSignature Language="C#" Value="public System.Security.Policy.Evidence Evidence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence Evidence" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.Evidence" />
      <MemberSignature Language="VB.NET" Value="Public Property Evidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::Evidence ^ Evidence { System::Security::Policy::Evidence ^ get(); void set(System::Security::Policy::Evidence ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Evidence : System.Security.Policy.Evidence with get, set" Usage="System.CodeDom.Compiler.CompilerParameters.Evidence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("CAS policy is obsolete and will be removed in a future release of the .NET Framework. Please see http://go2.microsoft.com/fwlink/?LinkId=131738 for more information.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d965-177">指定一个证据对象，该对象表示要授予已编译的程序集的安全策略权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-177">Specifies an evidence object that represents the security policy permissions to grant the compiled assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d965-178">表示要授予已编译的程序集的安全策略权限的  对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-178">An  object that represents the security policy permissions to grant the compiled assembly.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="4d965-179">有关控制证据的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-179">for the ability control evidence.</span>
          </span>
          <span data-ttu-id="4d965-180">权限值：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-180">Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /> Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="GenerateExecutable">
      <MemberSignature Language="C#" Value="public bool GenerateExecutable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateExecutable" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateExecutable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateExecutable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GenerateExecutable : bool with get, set" Usage="System.CodeDom.Compiler.CompilerParameters.GenerateExecutable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d965-181">获取或设置一个值，该值指示是否生成可执行文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-181">Gets or sets a value indicating whether to generate an executable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d965-182">如果应生成可执行文件，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-182">
              <see langword="true" /> if an executable should be generated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d965-183">如果此属性的值是`false`，将生成 DLL。</span><span class="sxs-lookup"><span data-stu-id="4d965-183">If the value of this property is `false`, a DLL will be generated.</span></span> <span data-ttu-id="4d965-184">默认情况下，此属性的值为 `false`。</span><span class="sxs-lookup"><span data-stu-id="4d965-184">By default, the value of this property is `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d965-185">下面的示例演示如何使用<xref:System.CodeDom.Compiler.CompilerParameters>指定各种编译器设置和选项。</span><span class="sxs-lookup"><span data-stu-id="4d965-185">The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options.</span></span> <span data-ttu-id="4d965-186">此代码示例摘自更大的示例为提供<xref:System.CodeDom.Compiler.CompilerParameters>类。</span><span class="sxs-lookup"><span data-stu-id="4d965-186">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.</span></span>  
  
 [!code-cpp[CompilerParametersExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerParametersExample/CPP/source.cpp#2)]
 [!code-csharp[CompilerParametersExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerParametersExample/CS/source.cs#2)]
 [!code-vb[CompilerParametersExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerParametersExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateInMemory">
      <MemberSignature Language="C#" Value="public bool GenerateInMemory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateInMemory" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateInMemory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateInMemory { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GenerateInMemory : bool with get, set" Usage="System.CodeDom.Compiler.CompilerParameters.GenerateInMemory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d965-187">获取或设置一个值，该值指示是否在内存中生成输出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-187">Gets or sets a value indicating whether to generate the output in memory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d965-188">如果编译器应在内存中生成输出，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-188">
              <see langword="true" /> if the compiler should generate the output in memory; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4d965-189">下面的示例演示如何使用<xref:System.CodeDom.Compiler.CompilerParameters>指定各种编译器设置和选项。</span><span class="sxs-lookup"><span data-stu-id="4d965-189">The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options.</span></span> <span data-ttu-id="4d965-190">此代码示例摘自更大的示例为提供<xref:System.CodeDom.Compiler.CompilerParameters>类。</span><span class="sxs-lookup"><span data-stu-id="4d965-190">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.</span></span>  
  
 [!code-cpp[CompilerParametersExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerParametersExample/CPP/source.cpp#2)]
 [!code-csharp[CompilerParametersExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerParametersExample/CS/source.cs#2)]
 [!code-vb[CompilerParametersExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerParametersExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeDebugInformation">
      <MemberSignature Language="C#" Value="public bool IncludeDebugInformation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeDebugInformation" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeDebugInformation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeDebugInformation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeDebugInformation : bool with get, set" Usage="System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d965-191">获取或设置一个值，该值指示是否在已编译的可执行文件中包含调试信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-191">Gets or sets a value indicating whether to include debug information in the compiled executable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d965-192">如果应生成调试信息，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-192">
              <see langword="true" /> if debug information should be generated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkedResources">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringCollection LinkedResources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection LinkedResources" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.LinkedResources" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinkedResources As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringCollection ^ LinkedResources { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LinkedResources : System.Collections.Specialized.StringCollection" Usage="System.CodeDom.Compiler.CompilerParameters.LinkedResources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d965-193">获取当前源中引用的 .NET Framework 资源文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-193">Gets the .NET Framework resource files that are referenced in the current source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d965-194">一个集合，包含源要引用的 .NET Framework 资源的文件路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-194">A collection that contains the file paths of .NET Framework resources that are referenced by the source.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d965-195">链接的资源文件都允许无需将实际的资源嵌入程序集中引用.NET Framework 资源程序集。</span><span class="sxs-lookup"><span data-stu-id="4d965-195">Linked resource files allow your assembly to reference .NET Framework resources without embedding the actual resources in the assembly.</span></span> <span data-ttu-id="4d965-196">引用通过此属性的文件是类似于`/linkresource`支持许多.NET Framework 编译器的命令行自变量。</span><span class="sxs-lookup"><span data-stu-id="4d965-196">Referencing files through this property is similar to the `/linkresource` command-line argument supported by many of the .NET Framework compilers.</span></span>  
  
 <span data-ttu-id="4d965-197">并非所有的编译器支持.NET Framework 资源文件，因此你应通过调用来测试此支持<xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>具有标志方法<xref:System.CodeDom.Compiler.GeneratorSupport.Resources>。</span><span class="sxs-lookup"><span data-stu-id="4d965-197">Not all compilers support .NET Framework resource files, so you should test for this support by calling the <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> method with the flag <xref:System.CodeDom.Compiler.GeneratorSupport.Resources>.</span></span>  
  
 <span data-ttu-id="4d965-198">将一个或多个.NET Framework 资源文件路径添加到返回<xref:System.Collections.Specialized.StringCollection>在编译的程序集创建的资源的链接。</span><span class="sxs-lookup"><span data-stu-id="4d965-198">Add one or more .NET Framework resource file paths to the returned <xref:System.Collections.Specialized.StringCollection> to create links for the resources in the compiled assembly.</span></span> <span data-ttu-id="4d965-199">添加重复或无效的文件路径会导致编译错误;确保每个字符串指定有效的.NET Framework 资源文件的唯一路径。</span><span class="sxs-lookup"><span data-stu-id="4d965-199">Adding a duplicate or invalid file path results in compilation errors; ensure that each string specifies a unique path to a valid .NET Framework resource file.</span></span>  
  
 <span data-ttu-id="4d965-200">使用<xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A>来引用在附属程序集的.NET Framework 资源本地化针对特定区域性; 使用<xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>属性将资源嵌入编译的程序集。</span><span class="sxs-lookup"><span data-stu-id="4d965-200">Use <xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A> to reference .NET Framework resources in satellite assemblies, localized for a particular culture; use the <xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A> property to embed the resources into the compiled assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d965-201">下面的示例演示如何使用<xref:System.CodeDom.Compiler.CompilerParameters>指定各种编译器设置和选项。</span><span class="sxs-lookup"><span data-stu-id="4d965-201">The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options.</span></span> <span data-ttu-id="4d965-202">此代码示例摘自更大的示例为提供<xref:System.CodeDom.Compiler.CompilerParameters>类。</span><span class="sxs-lookup"><span data-stu-id="4d965-202">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.</span></span>  
  
 [!code-cpp[CompilerParametersExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerParametersExample/CPP/source.cpp#2)]
 [!code-csharp[CompilerParametersExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerParametersExample/CS/source.cs#2)]
 [!code-vb[CompilerParametersExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerParametersExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.GeneratorSupport" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerParameters.Win32Resource" />
      </Docs>
    </Member>
    <Member MemberName="MainClass">
      <MemberSignature Language="C#" Value="public string MainClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MainClass" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.MainClass" />
      <MemberSignature Language="VB.NET" Value="Public Property MainClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MainClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MainClass : string with get, set" Usage="System.CodeDom.Compiler.CompilerParameters.MainClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d965-203">获取或设置主类的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-203">Gets or sets the name of the main class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d965-204">主类的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-204">The name of the main class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d965-205">主类包含程序的入口点。</span><span class="sxs-lookup"><span data-stu-id="4d965-205">The main class contains the entry point for the program.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d965-206">下面的示例演示如何使用<xref:System.CodeDom.Compiler.CompilerParameters>指定各种编译器设置和选项。</span><span class="sxs-lookup"><span data-stu-id="4d965-206">The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options.</span></span> <span data-ttu-id="4d965-207">此代码示例摘自更大的示例为提供<xref:System.CodeDom.Compiler.CompilerParameters>类。</span><span class="sxs-lookup"><span data-stu-id="4d965-207">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.</span></span>  
  
 [!code-cpp[CompilerParametersExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerParametersExample/CPP/source.cpp#2)]
 [!code-csharp[CompilerParametersExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerParametersExample/CS/source.cs#2)]
 [!code-vb[CompilerParametersExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerParametersExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputAssembly">
      <MemberSignature Language="C#" Value="public string OutputAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OutputAssembly" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.OutputAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property OutputAssembly As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OutputAssembly { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OutputAssembly : string with get, set" Usage="System.CodeDom.Compiler.CompilerParameters.OutputAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d965-208">获取或设置输出程序集的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-208">Gets or sets the name of the output assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d965-209">输出程序集的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-209">The name of the output assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4d965-210">下面的示例演示如何使用<xref:System.CodeDom.Compiler.CompilerParameters>指定各种编译器设置和选项。</span><span class="sxs-lookup"><span data-stu-id="4d965-210">The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options.</span></span> <span data-ttu-id="4d965-211">此代码示例摘自更大的示例为提供<xref:System.CodeDom.Compiler.CompilerParameters>类。</span><span class="sxs-lookup"><span data-stu-id="4d965-211">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.</span></span>  
  
 [!code-cpp[CompilerParametersExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerParametersExample/CPP/source.cpp#2)]
 [!code-csharp[CompilerParametersExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerParametersExample/CS/source.cs#2)]
 [!code-vb[CompilerParametersExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerParametersExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedAssemblies">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringCollection ReferencedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection ReferencedAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferencedAssemblies As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringCollection ^ ReferencedAssemblies { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferencedAssemblies : System.Collections.Specialized.StringCollection" Usage="System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d965-212">获取当前项目所引用的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-212">Gets the assemblies referenced by the current project.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d965-213">一个集合，包含由源引用以进行编译的程序集名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-213">A collection that contains the assembly names that are referenced by the source to compile.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d965-214">字符串集合应包含，也包括当前项目引用的程序集。</span><span class="sxs-lookup"><span data-stu-id="4d965-214">The string collection should consist of, or include, the assemblies referenced by the current project.</span></span> <span data-ttu-id="4d965-215">将程序集文件的名称添加到返回<xref:System.Collections.Specialized.StringCollection>导入程序集清单，并引用当前项目中的程序集类型信息。</span><span class="sxs-lookup"><span data-stu-id="4d965-215">Add assembly file names to the returned <xref:System.Collections.Specialized.StringCollection> to import the assembly manifest and reference the assembly type information in the current project.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d965-216">下面的示例演示如何使用<xref:System.CodeDom.Compiler.CompilerParameters>指定各种编译器设置和选项。</span><span class="sxs-lookup"><span data-stu-id="4d965-216">The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options.</span></span> <span data-ttu-id="4d965-217">此代码示例摘自更大的示例为提供<xref:System.CodeDom.Compiler.CompilerParameters>类。</span><span class="sxs-lookup"><span data-stu-id="4d965-217">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.</span></span>  
  
 [!code-cpp[CompilerParametersExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerParametersExample/CPP/source.cpp#2)]
 [!code-csharp[CompilerParametersExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerParametersExample/CS/source.cs#2)]
 [!code-vb[CompilerParametersExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerParametersExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
      </Docs>
    </Member>
    <Member MemberName="TempFiles">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.TempFileCollection TempFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.TempFileCollection TempFiles" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.TempFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property TempFiles As TempFileCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::TempFileCollection ^ TempFiles { System::CodeDom::Compiler::TempFileCollection ^ get(); void set(System::CodeDom::Compiler::TempFileCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TempFiles : System.CodeDom.Compiler.TempFileCollection with get, set" Usage="System.CodeDom.Compiler.CompilerParameters.TempFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.TempFileCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d965-218">获取或设置包含临时文件的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-218">Gets or sets the collection that contains the temporary files.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d965-219">包含临时文件的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-219">A collection that contains the temporary files.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d965-220">集合中的临时文件将保留或删除基于值的编译器活动完成后马上<xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>集合中的属性。</span><span class="sxs-lookup"><span data-stu-id="4d965-220">The temporary files in the collection are retained or deleted upon the completion of compiler activity based on the value of the <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> property in the collection.</span></span> <span data-ttu-id="4d965-221"><xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>属性设置的集合在创建使用如果<xref:System.CodeDom.Compiler.TempFileCollection.%23ctor%28System.String%2CSystem.Boolean%29>具有构造函数`keepFiles`参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="4d965-221">The <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> property is set if the collection is created using the <xref:System.CodeDom.Compiler.TempFileCollection.%23ctor%28System.String%2CSystem.Boolean%29> constructor with the `keepFiles` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d965-222">此类包含链接要求，并且在类级别应用于所有成员继承要求。</span><span class="sxs-lookup"><span data-stu-id="4d965-222">This class contains a link demand and an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="4d965-223">A<xref:System.Security.SecurityException>直接调用方或派生的类没有完全信任权限时，将引发。</span><span class="sxs-lookup"><span data-stu-id="4d965-223">A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission.</span></span> <span data-ttu-id="4d965-224">有关安全要求的详细信息，请参阅[链接需求](~/docs/framework/misc/link-demands.md)和[的继承需求](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9)。</span><span class="sxs-lookup"><span data-stu-id="4d965-224">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md) and [Inheritance Demands](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d965-225">下面的示例演示如何使用<xref:System.CodeDom.Compiler.CompilerParameters>指定各种编译器设置和选项。</span><span class="sxs-lookup"><span data-stu-id="4d965-225">The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options.</span></span> <span data-ttu-id="4d965-226">此代码示例摘自更大的示例为提供<xref:System.CodeDom.Compiler.CompilerParameters>类。</span><span class="sxs-lookup"><span data-stu-id="4d965-226">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.</span></span>  
  
 [!code-cpp[CompilerParametersExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerParametersExample/CPP/source.cpp#2)]
 [!code-csharp[CompilerParametersExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerParametersExample/CS/source.cs#2)]
 [!code-vb[CompilerParametersExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerParametersExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="4d965-227">直接调用方的完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-227">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="4d965-228">此成员不能由部分信任的代码使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-228">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="TreatWarningsAsErrors">
      <MemberSignature Language="C#" Value="public bool TreatWarningsAsErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TreatWarningsAsErrors" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property TreatWarningsAsErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TreatWarningsAsErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TreatWarningsAsErrors : bool with get, set" Usage="System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d965-229">获取或设置一个值，该值指示是否将警告视为错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-229">Gets or sets a value indicating whether to treat warnings as errors.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d965-230">如果应将警告视为错误，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-230">
              <see langword="true" /> if warnings should be treated as errors; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4d965-231">下面的示例演示如何使用<xref:System.CodeDom.Compiler.CompilerParameters>指定各种编译器设置和选项。</span><span class="sxs-lookup"><span data-stu-id="4d965-231">The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options.</span></span> <span data-ttu-id="4d965-232">此代码示例摘自更大的示例为提供<xref:System.CodeDom.Compiler.CompilerParameters>类。</span><span class="sxs-lookup"><span data-stu-id="4d965-232">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.</span></span>  
  
 [!code-cpp[CompilerParametersExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerParametersExample/CPP/source.cpp#2)]
 [!code-csharp[CompilerParametersExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerParametersExample/CS/source.cs#2)]
 [!code-vb[CompilerParametersExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerParametersExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserToken">
      <MemberSignature Language="C#" Value="public IntPtr UserToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int UserToken" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.UserToken" />
      <MemberSignature Language="VB.NET" Value="Public Property UserToken As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr UserToken { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.UserToken : nativeint with get, set" Usage="System.CodeDom.Compiler.CompilerParameters.UserToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d965-233">获取或设置在创建编译器进程时使用的用户标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-233">Gets or sets the user token to use when creating the compiler process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d965-234">要使用的用户标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-234">The user token to use.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WarningLevel">
      <MemberSignature Language="C#" Value="public int WarningLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WarningLevel" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.WarningLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property WarningLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WarningLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WarningLevel : int with get, set" Usage="System.CodeDom.Compiler.CompilerParameters.WarningLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d965-235">获取或设置使编译器中止编译的警告等级。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-235">Gets or sets the warning level at which the compiler aborts compilation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d965-236">使编译器中止编译的警告级别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-236">The warning level at which the compiler aborts compilation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4d965-237">下面的示例演示如何使用<xref:System.CodeDom.Compiler.CompilerParameters>指定各种编译器设置和选项。</span><span class="sxs-lookup"><span data-stu-id="4d965-237">The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options.</span></span> <span data-ttu-id="4d965-238">此代码示例摘自更大的示例为提供<xref:System.CodeDom.Compiler.CompilerParameters>类。</span><span class="sxs-lookup"><span data-stu-id="4d965-238">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.</span></span>  
  
 [!code-cpp[CompilerParametersExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerParametersExample/CPP/source.cpp#2)]
 [!code-csharp[CompilerParametersExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerParametersExample/CS/source.cs#2)]
 [!code-vb[CompilerParametersExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerParametersExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Win32Resource">
      <MemberSignature Language="C#" Value="public string Win32Resource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Win32Resource" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.Win32Resource" />
      <MemberSignature Language="VB.NET" Value="Public Property Win32Resource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Win32Resource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Win32Resource : string with get, set" Usage="System.CodeDom.Compiler.CompilerParameters.Win32Resource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d965-239">获取或设置要链接到已编译程序集中的 Win32 资源文件的文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-239">Gets or sets the file name of a Win32 resource file to link into the compiled assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d965-240">要链接到已编译程序集中的 Win32 资源文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d965-240">A Win32 resource file that will be linked into the compiled assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d965-241">链接文件通过此属性是类似于`/winres`和`/winresource`支持许多.NET Framework 编译器的命令行自变量。</span><span class="sxs-lookup"><span data-stu-id="4d965-241">Linking files through this property is similar to the `/winres` and `/winresource` command-line arguments supported by many of the .NET Framework compilers.</span></span>  
  
 <span data-ttu-id="4d965-242">使用<xref:System.CodeDom.Compiler.CompilerParameters.Win32Resource%2A>要将 Win32 资源文件编译到程序集。</span><span class="sxs-lookup"><span data-stu-id="4d965-242">Use <xref:System.CodeDom.Compiler.CompilerParameters.Win32Resource%2A> to compile a Win32 resource file into the assembly.</span></span> <span data-ttu-id="4d965-243">使用<xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>或<xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A>使用.NET Framework 资源文件进行编译。</span><span class="sxs-lookup"><span data-stu-id="4d965-243">Use <xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A> or <xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A> to compile with .NET Framework resource files.</span></span>  
  
 <span data-ttu-id="4d965-244">并非所有的编译器支持 Win32 资源文件，因此你应测试此支持，然后再通过调用链接的资源文件的代码生成器<xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>具有标志方法<xref:System.CodeDom.Compiler.GeneratorSupport.Win32Resources>。</span><span class="sxs-lookup"><span data-stu-id="4d965-244">Not all compilers support Win32 resource files, so you should test a code generator for this support before linking a resource file by calling the <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> method with the flag <xref:System.CodeDom.Compiler.GeneratorSupport.Win32Resources>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.GeneratorSupport" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerParameters.LinkedResources" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources" />
      </Docs>
    </Member>
  </Members>
</Type>