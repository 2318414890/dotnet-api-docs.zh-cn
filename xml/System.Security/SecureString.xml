<Type Name="SecureString" FullName="System.Security.SecureString">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="07059e1dd1224476b0ce4c062cf8da99537dd923" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48762880" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SecureString : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SecureString extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecureString" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecureString&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecureString sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SecureString = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.SecureString</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="ec9e5-101">表示应保密的文本，例如在不再需要时将其从计算机内存中删除。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ec9e5-101">Represents text that should be kept confidential, such as by deleting it from computer memory when no longer needed.</span>
      </span>
      <span data-ttu-id="ec9e5-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ec9e5-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec9e5-103"><xref:System.Security.SecureString> 是字符串类型，它提供措施。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-103"><xref:System.Security.SecureString> is a string type that provides a measure of security.</span></span> <span data-ttu-id="ec9e5-104">它将尝试以避免以明文形式的进程内存中存储可能敏感的字符串。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-104">It tries to avoid storing potentially sensitive strings in process memory as plain text.</span></span>  <span data-ttu-id="ec9e5-105">(有关限制，但是，请参阅[SecureString 的是否安全？](#HowSecure)部分。)实例的值<xref:System.Security.SecureString>使用一种机制，该实例已初始化或修改值时由基础平台支持自动保护。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-105">(For limitations, however, see the [How secure is SecureString?](#HowSecure) section.) The value of an instance of <xref:System.Security.SecureString> is automatically protected using a mechanism supported by the underlying platform when the instance is initialized or when the value is modified.</span></span> <span data-ttu-id="ec9e5-106">应用程序可以使实例不可变，并通过调用防止进一步修改<xref:System.Security.SecureString.MakeReadOnly%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-106">Your application can render the instance immutable and prevent further modification by invoking the <xref:System.Security.SecureString.MakeReadOnly%2A> method.</span></span>  
  
 <span data-ttu-id="ec9e5-107">最大长度<xref:System.Security.SecureString>实例为 65,536 个字符。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-107">The maximum length of a <xref:System.Security.SecureString> instance is 65,536 characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ec9e5-108">此类型实现<xref:System.IDisposable>接口。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-108">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="ec9e5-109">完成使用类型的实例后，您应释放它直接或间接。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-109">When you have finished using an instance of the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="ec9e5-110">若要直接释放类型，调用其<xref:System.IDisposable.Dispose%2A>中的方法`try` / `catch`块。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-110">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="ec9e5-111">若要间接释放类型，请使用 `using`（在 C# 中）或 `Using`（在 Visual Basic 中）等语言构造。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-111">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="ec9e5-112">有关详细信息，请参阅中的"使用对象实现 IDisposable"一节<xref:System.IDisposable>接口主题。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-112">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="ec9e5-113"><xref:System.Security.SecureString>类和其成员不是对 COM 可见。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-113">The <xref:System.Security.SecureString> class and its members are not visible to COM.</span></span> <span data-ttu-id="ec9e5-114">有关详情，请参阅<xref:System.Runtime.InteropServices.ComVisibleAttribute>。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-114">For more information, see <xref:System.Runtime.InteropServices.ComVisibleAttribute>.</span></span>  
  
 <span data-ttu-id="ec9e5-115">本节内容：</span><span class="sxs-lookup"><span data-stu-id="ec9e5-115">In this section:</span></span>  
  
 <span data-ttu-id="ec9e5-116">[Vs 的字符串。SecureString](#vsString) </span><span class="sxs-lookup"><span data-stu-id="ec9e5-116">[String vs. SecureString](#vsString) </span></span>  
 <span data-ttu-id="ec9e5-117">[SecureString 操作](#Ops) </span><span class="sxs-lookup"><span data-stu-id="ec9e5-117">[SecureString operations](#Ops) </span></span>  
 <span data-ttu-id="ec9e5-118">[SecureString 和互操作](#interop) </span><span class="sxs-lookup"><span data-stu-id="ec9e5-118">[SecureString and interop](#interop) </span></span>  
 [<span data-ttu-id="ec9e5-119">SecureString 是否安全？</span><span class="sxs-lookup"><span data-stu-id="ec9e5-119">How secure is  SecureString?</span></span>](#HowSecure)  
  
<a name="vsString"></a>   
## <a name="string-versus-securestring"></a><span data-ttu-id="ec9e5-120">与 SecureString 的字符串</span><span class="sxs-lookup"><span data-stu-id="ec9e5-120">String versus SecureString</span></span>  
 <span data-ttu-id="ec9e5-121">实例<xref:System.String?displayProperty=nameWithType>类既不可变，并不再需要时，不能以编程方式计划进行垃圾回收; 也就是说，该实例是只读的创建，并不能预测时将实例后从计算机内存中删除。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-121">An instance of the <xref:System.String?displayProperty=nameWithType> class is both immutable and, when no longer needed, cannot be programmatically scheduled for garbage collection; that is, the instance is read-only after it is created, and it is not possible to predict when the instance will be deleted from computer memory.</span></span> <span data-ttu-id="ec9e5-122">因为<xref:System.String?displayProperty=nameWithType>实例是不可变，看起来要修改现有实例的操作实际创建一份该操作。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-122">Because <xref:System.String?displayProperty=nameWithType> instances are immutable, operations that appear to modify an existing instance  actually create a copy of it to manipulate.</span></span> <span data-ttu-id="ec9e5-123">因此，如果<xref:System.String>对象包含敏感信息，如密码、 信用卡号或个人数据，则在使用，因为你的应用程序不能从计算机内存中删除数据后，可能会泄露信息的风险.</span><span class="sxs-lookup"><span data-stu-id="ec9e5-123">Consequently, if a <xref:System.String> object contains sensitive information such as a password, credit card number, or personal data, there is a risk the information could be revealed after it is used because your application cannot delete the data from computer memory.</span></span>  
  
 <span data-ttu-id="ec9e5-124">一个<xref:System.Security.SecureString>对象都类似于<xref:System.String>对象，其文本值。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-124">A <xref:System.Security.SecureString> object is similar to a <xref:System.String> object in that it has a text value.</span></span> <span data-ttu-id="ec9e5-125">但是，值<xref:System.Security.SecureString>对象被固定在内存中，可以使用一种保护机制，如可以修改由基础操作系统提供的加密，直到你的应用程序将其标记为只读的并可以从计算机内存中删除通过应用程序调用<xref:System.Security.SecureString.Dispose%2A>方法或.NET Framework 垃圾回收器。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-125">However, the value of a <xref:System.Security.SecureString> object is pinned in memory, may use a protection mechanism, such as encryption, provided by the underlying operating system, can be modified until your application marks it as read-only, and can be deleted from computer memory either by your application calling the <xref:System.Security.SecureString.Dispose%2A> method  or by the .NET Framework garbage collector.</span></span>  
  
 <span data-ttu-id="ec9e5-126">有关限制的讨论<xref:System.Security.SecureString>类，请参阅[SecureString 的是否安全？](#HowSecure)部分。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-126">For a discussion of the limitations of the <xref:System.Security.SecureString> class, see the [How secure is  SecureString?](#HowSecure) section.</span></span>  
  
 [<span data-ttu-id="ec9e5-127">返回页首</span><span class="sxs-lookup"><span data-stu-id="ec9e5-127">Back to top</span></span>](#top)  
  
<a name="Ops"></a>   
## <a name="securestring-operations"></a><span data-ttu-id="ec9e5-128">SecureString 操作</span><span class="sxs-lookup"><span data-stu-id="ec9e5-128">SecureString operations</span></span>  
 <span data-ttu-id="ec9e5-129"><xref:System.Security.SecureString>类包括成员，您可以执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="ec9e5-129">The <xref:System.Security.SecureString> class includes members that allow you to do the following:</span></span>  
  
 <span data-ttu-id="ec9e5-130">实例化<xref:System.Security.SecureString>对象</span><span class="sxs-lookup"><span data-stu-id="ec9e5-130">Instantiate a <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="ec9e5-131">实例化<xref:System.Security.SecureString>对象通过调用其无参数构造函数。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-131">You instantiate a <xref:System.Security.SecureString> object by calling its parameterless constructor.</span></span>  
  
 <span data-ttu-id="ec9e5-132">添加到字符<xref:System.Security.SecureString>对象</span><span class="sxs-lookup"><span data-stu-id="ec9e5-132">Add characters to a <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="ec9e5-133">可以在一次向添加单个字符<xref:System.Security.SecureString>对象通过调用其<xref:System.Security.SecureString.AppendChar%2A>或<xref:System.Security.SecureString.InsertAt%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-133">You can add a single character at a time to a <xref:System.Security.SecureString> object  by calling its <xref:System.Security.SecureString.AppendChar%2A> or <xref:System.Security.SecureString.InsertAt%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ec9e5-134">一个<xref:System.Security.SecureString>对象应永远不会从构造<xref:System.String>，这是因为敏感数据已受到的不可变的内存持久性后果<xref:System.String>类。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-134">A <xref:System.Security.SecureString> object should never be constructed from a <xref:System.String>, because the sensitive data is already subject to the memory persistence consequences of the immutable <xref:System.String> class.</span></span> <span data-ttu-id="ec9e5-135">构造的最好办法<xref:System.Security.SecureString>对象时一次一字符的非托管源，如<xref:System.Console.ReadKey%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-135">The best way to construct a <xref:System.Security.SecureString> object is from a character-at-a-time unmanaged source, such as the <xref:System.Console.ReadKey%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ec9e5-136">删除从字符<xref:System.Security.SecureString>对象</span><span class="sxs-lookup"><span data-stu-id="ec9e5-136">Remove characters from a <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="ec9e5-137">您可以通过调用来替换单个字符<xref:System.Security.SecureString.SetAt%2A>方法，通过调用删除单个字符<xref:System.Security.SecureString.RemoveAt%2A>方法或删除所有从字符<xref:System.Security.SecureString>实例通过调用<xref:System.Security.SecureString.Clear%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-137">You can replace an individual character by calling the <xref:System.Security.SecureString.SetAt%2A> method, remove an individual character by calling the <xref:System.Security.SecureString.RemoveAt%2A> method, or remove all characters from the <xref:System.Security.SecureString> instance by calling the  <xref:System.Security.SecureString.Clear%2A> method.</span></span>  
  
 <span data-ttu-id="ec9e5-138">使<xref:System.Security.SecureString>对象只读的</span><span class="sxs-lookup"><span data-stu-id="ec9e5-138">Make the <xref:System.Security.SecureString> object read-only</span></span>  
 <span data-ttu-id="ec9e5-139">定义字符串后，<xref:System.Security.SecureString>对象表示，则调用其<xref:System.Security.SecureString.MakeReadOnly%2A>方法可使字符串只读的。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-139">Once you have defined the string that the <xref:System.Security.SecureString> object represents, you call its  <xref:System.Security.SecureString.MakeReadOnly%2A> method to make the string read-only.</span></span>  
  
 <span data-ttu-id="ec9e5-140">获取其相关信息<xref:System.Security.SecureString>对象</span><span class="sxs-lookup"><span data-stu-id="ec9e5-140">Get information about the <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="ec9e5-141"><xref:System.Security.SecureString>类具有提供的字符串信息的只有两个成员： 其<xref:System.Security.SecureString.Length%2A>属性，用于指示的; 在字符串的 UTF16 编码的代码单位数和<xref:System.Security.SecureString.IsReadOnly%2A>，方法，它指示实例是否为只读的。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-141">The <xref:System.Security.SecureString> class has only two members that provide information about the string: its <xref:System.Security.SecureString.Length%2A> property, which indicates the number of UTF16-encoded code units in the string; and the <xref:System.Security.SecureString.IsReadOnly%2A>, method, which indicates whether the instance is read-only.</span></span>  
  
 <span data-ttu-id="ec9e5-142">释放分配给内存<xref:System.Security.SecureString>实例</span><span class="sxs-lookup"><span data-stu-id="ec9e5-142">Release the memory allocated to the <xref:System.Security.SecureString> instance</span></span>  
 <span data-ttu-id="ec9e5-143">因为<xref:System.Security.SecureString>实现<xref:System.IDisposable>接口，通过调用释放其内存<xref:System.Security.SecureString.Dispose%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-143">Because <xref:System.Security.SecureString> implements the <xref:System.IDisposable> interface, you release its memory by calling the <xref:System.Security.SecureString.Dispose%2A> method.</span></span>  
  
 <span data-ttu-id="ec9e5-144"><xref:System.Security.SecureString>类具有的检查、 比较或转换的值没有成员<xref:System.Security.SecureString>。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-144">The <xref:System.Security.SecureString> class has no members that inspect, compare, or convert the value of a <xref:System.Security.SecureString>.</span></span> <span data-ttu-id="ec9e5-145">此类成员不存在可帮助防止意外或恶意公开实例的值。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-145">The absence of such members helps protect the value of the instance from accidental or malicious exposure.</span></span> <span data-ttu-id="ec9e5-146">使用的适当成员<xref:System.Runtime.InteropServices.Marshal?displayProperty=nameWithType>类，如<xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A>方法，以操作的值<xref:System.Security.SecureString>对象。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-146">Use appropriate members of the <xref:System.Runtime.InteropServices.Marshal?displayProperty=nameWithType> class, such as the <xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A> method, to manipulate the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 <span data-ttu-id="ec9e5-147">.NET Framework 类库通常使用<xref:System.Security.SecureString>实例在以下方面：</span><span class="sxs-lookup"><span data-stu-id="ec9e5-147">The .NET Framework Class Library commonly uses <xref:System.Security.SecureString> instances in the following ways:</span></span>  
  
-   <span data-ttu-id="ec9e5-148">通过使用提供给进程的密码信息<xref:System.Diagnostics.ProcessStartInfo>结构，或通过调用的重载<xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType>具有类型参数的方法<xref:System.Security.SecureString>。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-148">To provide password information to a process by using the <xref:System.Diagnostics.ProcessStartInfo> structure or by calling an overload of the <xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType> method that has a parameter of type <xref:System.Security.SecureString>.</span></span>  
  
-   <span data-ttu-id="ec9e5-149">若要提供网络密码信息通过调用<xref:System.Net.NetworkCredential>具有类型参数的类构造函数<xref:System.Security.SecureString>或使用<xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-149">To provide network password information by calling a <xref:System.Net.NetworkCredential> class constructor that has a parameter of type <xref:System.Security.SecureString> or by using the <xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="ec9e5-150">若要提供 SQL Server 身份验证的密码信息通过调用<xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=nameWithType>构造函数或检索的值<xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-150">To provide password information for SQL Server Authentication by calling the <xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=nameWithType> constructor or retrieving the value of the <xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="ec9e5-151">若要将字符串传递给非托管代码。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-151">To pass a string to unmanaged code.</span></span> <span data-ttu-id="ec9e5-152">有关详细信息，请参阅[SecureString 和互操作](#interop)部分。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-152">For more information, see the [SecureString and interop](#interop) section.</span></span>  
  
 [<span data-ttu-id="ec9e5-153">返回页首</span><span class="sxs-lookup"><span data-stu-id="ec9e5-153">Back to top</span></span>](#top)  
  
<a name="interop"></a>   
## <a name="securestring-and-interop"></a><span data-ttu-id="ec9e5-154">SecureString 和互操作</span><span class="sxs-lookup"><span data-stu-id="ec9e5-154">SecureString and interop</span></span>  
 <span data-ttu-id="ec9e5-155">因为操作系统不直接支持<xref:System.Security.SecureString>，必须将转换的值<xref:System.Security.SecureString>对象之前将字符串传递给本机方法的必需的字符串类型。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-155">Because the operating system does not  directly support <xref:System.Security.SecureString>, you must convert the value of the <xref:System.Security.SecureString> object to the required string type before passing the string to a native method.</span></span>  <span data-ttu-id="ec9e5-156"><xref:System.Runtime.InteropServices.Marshal>类具有执行此操作的五种方法：</span><span class="sxs-lookup"><span data-stu-id="ec9e5-156">The <xref:System.Runtime.InteropServices.Marshal> class has five methods that do this:</span></span>  
  
-   <span data-ttu-id="ec9e5-157"><xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType>转换<xref:System.Security.SecureString>字符串值与二进制字符串 (BSTR) 后被 com。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-157"><xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType>, which converts the <xref:System.Security.SecureString> string value to a binary string (BSTR) recognized by COM.</span></span>  
  
-   <span data-ttu-id="ec9e5-158"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType> 并<xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType>，哪一份<xref:System.Security.SecureString>字符串到非托管内存中的 ANSI 字符串值。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-158"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType>, which copy the <xref:System.Security.SecureString> string value to an ANSI string in unmanaged memory.</span></span>  
  
-   <span data-ttu-id="ec9e5-159"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType> 并<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>，哪一份<xref:System.Security.SecureString>字符串到非托管内存中的 Unicode 字符串值。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-159"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>, which copy the <xref:System.Security.SecureString> string value to a Unicode string in unmanaged memory.</span></span>  
  
 <span data-ttu-id="ec9e5-160">这些方法的每个非托管内存中创建一个纯文本字符串。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-160">Each of these methods creates a clear-text string in unmanaged memory.</span></span> <span data-ttu-id="ec9e5-161">它负责的开发人员来清零和不再需要时，就立即释放该内存。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-161">It is the responsibility of the developer to zero out and free that memory as soon as it is no longer needed.</span></span> <span data-ttu-id="ec9e5-162">每个字符串转换和内存分配方法有相应的方法来清零和释放已分配的内存：</span><span class="sxs-lookup"><span data-stu-id="ec9e5-162">Each of the string conversion and memory allocation methods has a corresponding method to zero out and free the allocated memory:</span></span>  
  
|<span data-ttu-id="ec9e5-163">分配和转换方法</span><span class="sxs-lookup"><span data-stu-id="ec9e5-163">Allocation and conversion method</span></span>|<span data-ttu-id="ec9e5-164">零和 free 方法</span><span class="sxs-lookup"><span data-stu-id="ec9e5-164">Zero and free method</span></span>|  
|--------------------------------------|--------------------------|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A?displayProperty=nameWithType>|  
  
 [<span data-ttu-id="ec9e5-165">返回页首</span><span class="sxs-lookup"><span data-stu-id="ec9e5-165">Back to top</span></span>](#top)  
  
<a name="HowSecure"></a>   
## <a name="how-secure-is-securestring"></a><span data-ttu-id="ec9e5-166">SecureString 是否安全？</span><span class="sxs-lookup"><span data-stu-id="ec9e5-166">How secure is SecureString?</span></span>  
 <span data-ttu-id="ec9e5-167">如果正确，创建<xref:System.Security.SecureString>实例提供更多的数据保护比<xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-167">When created properly, a <xref:System.Security.SecureString> instance provides more data protection than a <xref:System.String>.</span></span> <span data-ttu-id="ec9e5-168">从字符在时间源，创建一个字符串时<xref:System.String>在内存中，会创建多个中间而<xref:System.Security.SecureString>创建单个实例。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-168">When creating a string from a character-at-a-time source, <xref:System.String> creates multiple intermediate in memory, whereas  <xref:System.Security.SecureString> creates just a single instance.</span></span>  <span data-ttu-id="ec9e5-169">垃圾回收的<xref:System.String>对象具有不确定性。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-169">Garbage collection of <xref:System.String> objects  is non-deterministic.</span></span> <span data-ttu-id="ec9e5-170">此外，因为其内存不固定，因此垃圾回收器将制作的其他副本<xref:System.String>值时移动和压缩内存。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-170">In addition, because its memory is not pinned, the garbage collector will make additional copies of <xref:System.String> values when moving and compacting memory.</span></span> <span data-ttu-id="ec9e5-171">与此相反，分配给内存<xref:System.Security.SecureString>对象已固定，并且可以通过调用释放该内存<xref:System.Security.SecureString.Dispose%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-171">In contrast, the memory allocated to a <xref:System.Security.SecureString> object is pinned,  and that memory can be freed by calling the <xref:System.Security.SecureString.Dispose%2A> method.</span></span>  
  
 <span data-ttu-id="ec9e5-172">尽管数据存储在<xref:System.Security.SecureString>实例是比中存储的数据更安全<xref:System.String>实例时，有一些重要限制如何安全<xref:System.Security.SecureString>实例。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-172">Although data stored in a <xref:System.Security.SecureString> instance is more secure than data stored in a <xref:System.String> instance, there are significant limitations on how secure a <xref:System.Security.SecureString> instance is.</span></span> <span data-ttu-id="ec9e5-173">这些方法包括：</span><span class="sxs-lookup"><span data-stu-id="ec9e5-173">These include:</span></span>  
  
 <span data-ttu-id="ec9e5-174">平台</span><span class="sxs-lookup"><span data-stu-id="ec9e5-174">Platform</span></span>  
 <span data-ttu-id="ec9e5-175">在 Windows 操作系统的内容<xref:System.Security.SecureString>实例的内部字符数组进行加密。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-175">On the Windows operating system, the contents of a <xref:System.Security.SecureString> instance's internal character array are encrypted.</span></span> <span data-ttu-id="ec9e5-176">但是，由于缺少 Api 或密钥管理问题，加密不是在所有平台上。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-176">However, whether because of missing APIs or key management issues,  encryption is not available on all platforms.</span></span> <span data-ttu-id="ec9e5-177">因为此平台依赖关系，<xref:System.Security.SecureString>不会加密非 Windows 平台上的内部存储。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-177">Because of this platform dependency, <xref:System.Security.SecureString> does not encrypt the internal storage on non-Windows platform.</span></span> <span data-ttu-id="ec9e5-178">在这些平台上使用的其他技术用于提供额外的保护。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-178">Other techniques are used on those platforms to provide additional protection.</span></span>
  
 <span data-ttu-id="ec9e5-179">持续时间</span><span class="sxs-lookup"><span data-stu-id="ec9e5-179">Duration</span></span>  
 <span data-ttu-id="ec9e5-180">即使<xref:System.Security.SecureString>实现能够充分利用加密，纯文本分配给<xref:System.Security.SecureString>实例可能会暴露在不同时间：</span><span class="sxs-lookup"><span data-stu-id="ec9e5-180">Even if the <xref:System.Security.SecureString> implementation is able to take advantage of encryption, the plain text assigned to the <xref:System.Security.SecureString> instance may be exposed at various times:</span></span>  
  
-   <span data-ttu-id="ec9e5-181">因为 Windows 不提供在操作系统级别的安全字符串实现，.NET Framework 仍必须将安全字符串值转换为纯文本表示形式中，若要使用它。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-181">Because Windows doesn't offer a secure string implementation at the operating system level, the .NET Framework still has to convert the secure string value to its plain text representation in order to use it.</span></span>  
  
-   <span data-ttu-id="ec9e5-182">每当此安全字符串的值由修改方法如<xref:System.Security.SecureString.AppendChar%2A>或<xref:System.Security.SecureString.RemoveAt%2A>，必须对其进行解密 （即，转换后的返回为纯文本），修改和重新加密。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-182">Whenever the value of the secure string is modified by methods such as <xref:System.Security.SecureString.AppendChar%2A> or <xref:System.Security.SecureString.RemoveAt%2A>, it must be decrypted (i.e., converted back to plain text), modified, and then encrypted again.</span></span>  
  
-   <span data-ttu-id="ec9e5-183">如果在互操作调用中使用的安全字符串，则它必须转换为 ANSI 字符串、 Unicode 字符串或二进制字符串 (BSTR) 中。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-183">If the secure string is used in an interop call, it must be converted to an ANSI string, a Unicode string, or a binary string (BSTR).</span></span> <span data-ttu-id="ec9e5-184">有关详细信息，请参阅[SecureString 和互操作](#interop)部分。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-184">For more information, see the [SecureString and interop](#interop) section.</span></span>  
  
 <span data-ttu-id="ec9e5-185">时间间隔<xref:System.Security.SecureString>公开实例的值只是与缩短<xref:System.String>类。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-185">The time interval for which the <xref:System.Security.SecureString> instance's value is exposed  is merely shortened in comparison to the <xref:System.String> class.</span></span>  
  
 <span data-ttu-id="ec9e5-186">存储而不是使用情况</span><span class="sxs-lookup"><span data-stu-id="ec9e5-186">Storage versus usage</span></span>  
 <span data-ttu-id="ec9e5-187">一般来说，<xref:System.Security.SecureString>类定义的字符串值应受保护或保持机密的一种存储机制。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-187">More generally, the <xref:System.Security.SecureString> class defines a storage mechanism for string values that should be protected or kept confidential.</span></span> <span data-ttu-id="ec9e5-188">但是，在.NET Framework 本身，外部没有使用情况的机制支持<xref:System.Security.SecureString>。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-188">However, outside of the .NET Framework itself, no usage mechanism supports <xref:System.Security.SecureString>.</span></span> <span data-ttu-id="ec9e5-189">这意味着必须安全字符串转换为可用形式 （通常明文形式），其目标，可以识别并解密和转换必须出现在用户空间中。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-189">This means that the secure string must be converted to a usable form (typically a clear text form) that can be recognized by its target, and     that decryption and conversion must occur in user space.</span></span>  
  
 <span data-ttu-id="ec9e5-190">总体上，<xref:System.Security.SecureString>比更安全<xref:System.String>因为它限制了区分大小的字符串数据的透露。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-190">Overall, <xref:System.Security.SecureString> is more secure than <xref:System.String> because it limits the exposure of sensitive string data.</span></span> <span data-ttu-id="ec9e5-191">但是，这些字符串可能仍会面临的任何进程或有权访问原始内存，如主计算机、 进程转储或用户可查看交换文件上运行的恶意进程的操作。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-191">However, those strings may still be exposed to any process or operation that has access to raw memory, such as a malicious process running on the host computer, a process dump, or a user-viewable swap file.</span></span> <span data-ttu-id="ec9e5-192">而不是使用<xref:System.Security.SecureString>来保护密码，建议的替代项是使用不透明句柄存储在外部进程的凭据。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-192">Instead of using <xref:System.Security.SecureString> to protect passwords, the recommended alternative is to use an opaque handle to credentials that are stored outside of the process.</span></span>  
  
 [<span data-ttu-id="ec9e5-193">返回页首</span><span class="sxs-lookup"><span data-stu-id="ec9e5-193">Back to top</span></span>](#top)  
  
   
  
## Examples  
 <span data-ttu-id="ec9e5-194">下面的示例演示如何使用<xref:System.Security.SecureString>来保护用户的密码用作凭据，以启动新进程。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-194">The following example demonstrates how to use a <xref:System.Security.SecureString> to secure a user’s password for use as a credential to start a new process.</span></span>  
  
 [!code-csharp[System.Security.SecureString.Ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cs/ctor4.cs#4)]
 [!code-vb[System.Security.SecureString.Ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/vb/ctor4.vb#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.ComVisibleAttribute" />
    <altmember cref="T:System.Runtime.InteropServices.Marshal" />
    <altmember cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" />
    <altmember cref="T:System.IDisposable" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ec9e5-195">初始化 <see cref="T:System.Security.SecureString" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-195">Initializes a new instance of the <see cref="T:System.Security.SecureString" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecureString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecureString();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ec9e5-196">初始化 <see cref="T:System.Security.SecureString" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-196">Initializes a new instance of the <see cref="T:System.Security.SecureString" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ec9e5-197">下面的示例使用默认值 （或无参数） 构造函数实例化一个新<xref:System.Security.SecureString>对象。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-197">The following example uses the default (or parameterless) constructor to instantiate a new <xref:System.Security.SecureString> object.</span></span> <span data-ttu-id="ec9e5-198">然后，它调用<xref:System.Security.SecureString.AppendChar%2A>方法将字符数组添加到它。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-198">It then calls the <xref:System.Security.SecureString.AppendChar%2A> method to add an array of characters to it.</span></span>  
  
 [!code-cpp[System.Security.SecureString.Ctor#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cpp/Ctor2.cpp#2)]
 [!code-csharp[System.Security.SecureString.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cs/Ctor2.cs#2)]
 [!code-vb[System.Security.SecureString.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/vb/ctor2.vb#2)]  
  
 <span data-ttu-id="ec9e5-199">下面的示例创建<xref:System.Security.SecureString>对象的值从<xref:System.String>对象。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-199">The following example creates a <xref:System.Security.SecureString> object from the value of a <xref:System.String> object.</span></span>  
  
 [!code-cpp[System.Security.SecureString.Ctor#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cpp/Ctor3.cpp#3)]
 [!code-csharp[System.Security.SecureString.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cs/Ctor3.cs#3)]
 [!code-vb[System.Security.SecureString.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/vb/Ctor3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="ec9e5-200">保护或取消保护此实例的值时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-200">An error occurred while protecting or unprotecting the value of this instance.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ec9e5-201">此平台上不支持此操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-201">This operation is not supported on this platform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecureString (char* value, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char* value, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecureString(char* value, int length);" />
      <MemberSignature Language="F#" Value="new System.Security.SecureString : nativeptr&lt;char&gt; * int -&gt; System.Security.SecureString" Usage="new System.Security.SecureString (value, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Char*" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="ec9e5-202">指向 <see cref="T:System.Char" /> 对象的数组的指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-202">A pointer to an array of <see cref="T:System.Char" /> objects.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="ec9e5-203">要包括到新实例中的 <c>value</c> 的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-203">The number of elements of <c>value</c> to include in the new instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec9e5-204">用 <see cref="T:System.Char" /> 对象的子数组初始化 <see cref="T:System.Security.SecureString" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-204">Initializes a new instance of the <see cref="T:System.Security.SecureString" /> class from a subarray of <see cref="T:System.Char" /> objects.</span>
          </span>
          <span data-ttu-id="ec9e5-205">此构造函数不符合 CLS。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-205">This constructor is not CLS-compliant.</span>
          </span>
          <span data-ttu-id="ec9e5-206">符合 CLS 的替代方法是 <see cref="M:System.Security.SecureString.#ctor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-206">The CLS-compliant alternative is <see cref="M:System.Security.SecureString.#ctor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec9e5-207">此构造函数初始化新<xref:System.Security.SecureString>对象中的字符数`value`指定的`length`; 然后进行加密的实例的值。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-207">This constructor initializes the new <xref:System.Security.SecureString> object to the number of characters in `value` specified by `length`; the value of the instance is then encrypted.</span></span>  
  
 <span data-ttu-id="ec9e5-208">在 C# 中，仅在不安全代码的上下文中定义此构造函数。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-208">In C#, this constructor is defined only in the context of unsafe code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec9e5-209">下面的示例实例化新<xref:System.Security.SecureString>对象通过其构造函数指针传递给字符数组。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-209">The following example instantiates a new <xref:System.Security.SecureString> object by passing its constructor a pointer to a character array.</span></span>  
  
 [!code-cpp[System.Security.SecureString.Ctor2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.securestring.ctor2/cpp/ctor1.cpp#1)]
 [!code-csharp[System.Security.SecureString.Ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.securestring.ctor2/cs/ctor1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec9e5-210">
            <paramref name="value" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-210">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ec9e5-211">
            <paramref name="length" /> 小于零或大于 65,536。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-211">
              <paramref name="length" /> is less than zero or greater than 65,536.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="ec9e5-212">保护或取消保护此安全字符串的值时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-212">An error occurred while protecting or unprotecting the value of this secure string.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ec9e5-213">此平台上不支持此操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-213">This operation is not supported on this platform.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="ec9e5-214">直接调用方需要完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-214">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="ec9e5-215">不能由部分受信任的或透明的代码使用此成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-215">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AppendChar">
      <MemberSignature Language="C#" Value="public void AppendChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.AppendChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendChar (c As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendChar(char c);" />
      <MemberSignature Language="F#" Value="member this.AppendChar : char -&gt; unit" Usage="secureString.AppendChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="ec9e5-216">要追加到此安全字符串的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-216">A character to append to this secure string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec9e5-217">在当前安全字符串的末尾追加一个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-217">Appends a character to the end of the current secure string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec9e5-218">如果该实现使用一种保护机制，如加密、 未受保护; 如果有的话，此安全字符串的值`c`追加; 安全字符串的新值不重新保护。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-218">If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; `c` is appended; then the new value of the secure string is re-protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec9e5-219">下面的示例演示如何<xref:System.Security.SecureString.AppendChar%2A>， <xref:System.Security.SecureString.InsertAt%2A>， <xref:System.Security.SecureString.RemoveAt%2A>， <xref:System.Security.SecureString.SetAt%2A>，并<xref:System.Security.SecureString.Clear%2A>方法影响的值<xref:System.Security.SecureString>对象。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-219">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 <span data-ttu-id="ec9e5-220">下面的示例演示如何<xref:System.Security.SecureString.AppendChar%2A>和<xref:System.Security.SecureString.RemoveAt%2A>方法可用于收集密码中的字符。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-220">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A> and <xref:System.Security.SecureString.RemoveAt%2A> methods can be used to collect the characters in a password.</span></span>  
  
 [!code-cpp[SecureString.xChar#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xChar/CPP/SecureString.xChar.cpp#1)]
 [!code-csharp[SecureString.xChar#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xChar/CS/xchar.cs#1)]
 [!code-vb[SecureString.xChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xChar/VB/xchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ec9e5-221">已处置此安全字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-221">This secure string has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ec9e5-222">此安全字符串是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-222">This secure string is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ec9e5-223">执行此操作将使此安全字符串的长度超过 65,536 个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-223">Performing this operation would make the length of this secure string greater than 65,536 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="ec9e5-224">保护或取消保护此安全字符串的值时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-224">An error occurred while protecting or unprotecting the value of this secure string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="secureString.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ec9e5-225">删除当前安全字符串的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-225">Deletes the value of the current secure string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec9e5-226">包含此安全字符串的值的计算机内存被清零，则此安全字符串的值的长度设置为零。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-226">The computer memory that contains the value of this secure string is zeroed, then the length of the value of this secure string is set to zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec9e5-227">下面的示例演示如何<xref:System.Security.SecureString.AppendChar%2A>， <xref:System.Security.SecureString.InsertAt%2A>， <xref:System.Security.SecureString.RemoveAt%2A>， <xref:System.Security.SecureString.SetAt%2A>，并<xref:System.Security.SecureString.Clear%2A>方法影响的值<xref:System.Security.SecureString>对象。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-227">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ec9e5-228">已处置此安全字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-228">This secure string has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ec9e5-229">此安全字符串是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-229">This secure string is read-only.</span>
          </span>
        </exception>
        <altmember cref="P:System.Security.SecureString.Length" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.SecureString Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecureString Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As SecureString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecureString ^ Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; System.Security.SecureString" Usage="secureString.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecureString</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ec9e5-230">创建当前安全字符串的副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-230">Creates a copy of the current secure string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ec9e5-231">此安全字符串的副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-231">A duplicate of this secure string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec9e5-232">实例时，如果<xref:System.Security.SecureString>是标记为只读的该实例的副本将不是只读的。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-232">If an instance of a <xref:System.Security.SecureString> is marked read-only, the copy of that instance will not be read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ec9e5-233">已处置此安全字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-233">This secure string has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="ec9e5-234">保护或取消保护此安全字符串的值时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-234">An error occurred while protecting or unprotecting the value of this secure string.</span>
          </span>
        </exception>
        <altmember cref="M:System.Security.SecureString.MakeReadOnly" />
        <altmember cref="M:System.Security.SecureString.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="secureString.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ec9e5-235">释放由当前 <see cref="T:System.Security.SecureString" /> 对象使用的所有资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-235">Releases all resources used by the current <see cref="T:System.Security.SecureString" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec9e5-236"><xref:System.Security.SecureString.Dispose%2A>方法将写入到已分配的内存，其中包含此值的二进制零<xref:System.Security.SecureString>对象，然后释放已分配的内存。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-236">The <xref:System.Security.SecureString.Dispose%2A> method writes binary zeroes to the allocated memory that contains the value of this <xref:System.Security.SecureString> object, then frees the allocated memory.</span></span>  
  
 <span data-ttu-id="ec9e5-237">有关详细信息，请参阅[垃圾回收](~/docs/standard/garbage-collection/index.md)。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-237">For more information, see [Garbage Collection](~/docs/standard/garbage-collection/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public void InsertAt (int index, char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertAt(int32 index, char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertAt (index As Integer, c As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertAt(int index, char c);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : int * char -&gt; unit" Usage="secureString.InsertAt (index, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="ec9e5-238">插入参数 <c>c</c> 的索引位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-238">The index position where parameter <c>c</c> is inserted.</span>
          </span>
        </param>
        <param name="c">
          <span data-ttu-id="ec9e5-239">要插入的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-239">The character to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec9e5-240">在此安全字符串中的指定索引位置插入一个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-240">Inserts a character in this secure string at the specified index position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec9e5-241">索引是从零开始;此安全字符串中的第一个字符的索引位置零。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-241">The index is zero-based; the first character in this secure string is at index position zero.</span></span>  
  
 <span data-ttu-id="ec9e5-242">如果该实现使用一种保护机制，如加密、 安全字符串，如果有的值是不受保护;`c`插入到指定的索引位置; 则新值是重新保护。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-242">If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; `c` is inserted at the specified index position; then the new value is re-protected.</span></span> <span data-ttu-id="ec9e5-243"><xref:System.Security.SecureString.InsertAt%2A>方法生成与相同的结果<xref:System.Security.SecureString.AppendChar%2A>方法，如果将安全字符串的末尾插入字符`index`参数的<xref:System.Security.SecureString.InsertAt%2A>设置为此实例的长度。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-243">The <xref:System.Security.SecureString.InsertAt%2A> method yields the same results as the <xref:System.Security.SecureString.AppendChar%2A> method, which inserts a character at the end of a secure string, if the `index` parameter of <xref:System.Security.SecureString.InsertAt%2A> is set to the length of this instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec9e5-244">下面的示例演示如何<xref:System.Security.SecureString.AppendChar%2A>， <xref:System.Security.SecureString.InsertAt%2A>， <xref:System.Security.SecureString.RemoveAt%2A>， <xref:System.Security.SecureString.SetAt%2A>，并<xref:System.Security.SecureString.Clear%2A>方法影响的值<xref:System.Security.SecureString>对象。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-244">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ec9e5-245">已处置此安全字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-245">This secure string has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ec9e5-246">此安全字符串是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-246">This secure string is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ec9e5-247">
            <paramref name="index" /> 小于零，或大于此安全字符串的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-247">
              <paramref name="index" /> is less than zero, or greater than the length of this secure string.</span>
          </span>
          <span data-ttu-id="ec9e5-248">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-248">-or-</span>
          </span>
          <span data-ttu-id="ec9e5-249">执行此操作将使此安全字符串的长度超过 65,536 个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-249">Performing this operation would make the length of this secure string greater than 65,536 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="ec9e5-250">保护或取消保护此安全字符串的值时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-250">An error occurred while protecting or unprotecting the value of this secure string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function IsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsReadOnly();" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : unit -&gt; bool" Usage="secureString.IsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ec9e5-251">指示此安全字符串是否标记为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-251">Indicates whether this secure string is marked read-only.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ec9e5-252">如果此安全字符串标记为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-252">
              <see langword="true" /> if this secure string is marked read-only; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec9e5-253">实例后<xref:System.Security.SecureString>标记为通过只读<xref:System.Security.SecureString.MakeReadOnly%2A>方法，任何尝试修改的值的实例，则会引发<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-253">After an instance of <xref:System.Security.SecureString> is marked read-only by the <xref:System.Security.SecureString.MakeReadOnly%2A> method, any attempt to modify the value of the instance throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="ec9e5-254">使用<xref:System.Security.SecureString.IsReadOnly%2A>方法来测试是否<xref:System.Security.SecureString>尝试对其进行修改之前是只读的。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-254">Use the <xref:System.Security.SecureString.IsReadOnly%2A> method to test whether a <xref:System.Security.SecureString> is read-only before attempting to modify it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ec9e5-255">已处置此安全字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-255">This secure string has already been disposed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Security.SecureString.MakeReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecureString.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Security.SecureString.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ec9e5-256">获取当前安全字符串中的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-256">Gets the number of characters in the current secure string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ec9e5-257">此安全字符串中 <see cref="T:System.Char" /> 对象的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-257">The number of <see cref="T:System.Char" /> objects in this secure string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec9e5-258"><xref:System.Security.SecureString.Length%2A>属性返回的数<xref:System.Char>此实例中的对象，不是 Unicode 字符数。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-258">The <xref:System.Security.SecureString.Length%2A> property returns the number of <xref:System.Char> objects in this instance, not the number of Unicode characters.</span></span> <span data-ttu-id="ec9e5-259">Unicode 字符可能由多个<xref:System.Char>对象。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-259">A Unicode character might be represented by more than one <xref:System.Char> object.</span></span>  
  
 <span data-ttu-id="ec9e5-260">最大长度<xref:System.Security.SecureString>实例为 65,536 个字符。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-260">The maximum length of a <xref:System.Security.SecureString> instance is 65,536 characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ec9e5-261">已处置此安全字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-261">This secure string has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MakeReadOnly">
      <MemberSignature Language="C#" Value="public void MakeReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.MakeReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeReadOnly();" />
      <MemberSignature Language="F#" Value="member this.MakeReadOnly : unit -&gt; unit" Usage="secureString.MakeReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ec9e5-262">将此安全字符串的文本值设置为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-262">Makes the text value of this secure string read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec9e5-263">初始化的实例的文本值<xref:System.Security.SecureString>类的<xref:System.Security.SecureString.%23ctor%2A>构造函数，并修改的值与<xref:System.Security.SecureString.Clear%2A>， <xref:System.Security.SecureString.RemoveAt%2A>， <xref:System.Security.SecureString.SetAt%2A>， <xref:System.Security.SecureString.InsertAt%2A>，和<xref:System.Security.SecureString.AppendChar%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-263">Initialize the text value of an instance of the <xref:System.Security.SecureString> class with the <xref:System.Security.SecureString.%23ctor%2A> constructors, and modify the value with the <xref:System.Security.SecureString.Clear%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, <xref:System.Security.SecureString.InsertAt%2A>, and <xref:System.Security.SecureString.AppendChar%2A> methods.</span></span>  
  
 <span data-ttu-id="ec9e5-264">进行最终修改后，使用<xref:System.Security.SecureString.MakeReadOnly%2A>方法以使该实例的值不可变 （只读）。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-264">After you have made your final modifications, use the <xref:System.Security.SecureString.MakeReadOnly%2A> method to make the value of the instance immutable (read-only).</span></span> <span data-ttu-id="ec9e5-265">以只读方式标记值后，任何进一步尝试对其进行修改，则会引发<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-265">After the value is marked as read-only, any further attempt to modify it throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="ec9e5-266">调用的效果<xref:System.Security.SecureString.MakeReadOnly%2A>是永久性的因为<xref:System.Security.SecureString>类提供任何用于再次可修改的安全字符串。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-266">The effect of invoking <xref:System.Security.SecureString.MakeReadOnly%2A> is permanent because the <xref:System.Security.SecureString> class provides no means to make the secure string modifiable again.</span></span> <span data-ttu-id="ec9e5-267">使用<xref:System.Security.SecureString.IsReadOnly%2A>方法来测试实例是否<xref:System.Security.SecureString>是只读的。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-267">Use the <xref:System.Security.SecureString.IsReadOnly%2A> method to test whether an instance of <xref:System.Security.SecureString> is read-only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec9e5-268">下面的示例演示如何<xref:System.Security.SecureString.AppendChar%2A>和<xref:System.Security.SecureString.RemoveAt%2A>方法可用于收集密码中的字符。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-268">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A> and <xref:System.Security.SecureString.RemoveAt%2A> methods can be used to collect the characters in a password.</span></span> <span data-ttu-id="ec9e5-269">收集密码后，它由只读的。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-269">After the password is collected, it is made read-only.</span></span>  
  
 [!code-cpp[SecureString.xChar#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xChar/CPP/SecureString.xChar.cpp#1)]
 [!code-csharp[SecureString.xChar#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xChar/CS/xchar.cs#1)]
 [!code-vb[SecureString.xChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xChar/VB/xchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ec9e5-270">已处置此安全字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-270">This secure string has already been disposed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Security.SecureString.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="secureString.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="ec9e5-271">此安全字符串中的字符的索引位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-271">The index position of a character in this secure string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec9e5-272">从此安全字符串中的指定索引位置移除字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-272">Removes the character at the specified index position from this secure string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec9e5-273">索引是从零开始;在此实例中的第一个字符的索引位置零。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-273">The index is zero-based; the first character in this instance is at index position zero.</span></span>  
  
 <span data-ttu-id="ec9e5-274">如果该实现使用一种保护机制，如加密、 未受保护; 如果有的话，此安全字符串的值移除位于指定的索引位置处的字符;新值则重新保护。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-274">If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; the character at the specified index position is removed; then the new value is re-protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec9e5-275">下面的示例演示如何<xref:System.Security.SecureString.AppendChar%2A>， <xref:System.Security.SecureString.InsertAt%2A>， <xref:System.Security.SecureString.RemoveAt%2A>， <xref:System.Security.SecureString.SetAt%2A>，并<xref:System.Security.SecureString.Clear%2A>方法影响的值<xref:System.Security.SecureString>对象。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-275">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 <span data-ttu-id="ec9e5-276">下面的示例演示如何<xref:System.Security.SecureString.AppendChar%2A>和<xref:System.Security.SecureString.RemoveAt%2A>方法可用于收集密码中的字符。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-276">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A> and <xref:System.Security.SecureString.RemoveAt%2A> methods can be used to collect the characters in a password.</span></span>  
  
 [!code-cpp[SecureString.xChar#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xChar/CPP/SecureString.xChar.cpp#1)]
 [!code-csharp[SecureString.xChar#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xChar/CS/xchar.cs#1)]
 [!code-vb[SecureString.xChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xChar/VB/xchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ec9e5-277">已处置此安全字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-277">This secure string has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ec9e5-278">此安全字符串是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-278">This secure string is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ec9e5-279">
            <paramref name="index" /> 小于零，或者大于或等于此安全字符串的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-279">
              <paramref name="index" /> is less than zero, or greater than or equal to the length of this secure string.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="ec9e5-280">保护或取消保护此安全字符串的值时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-280">An error occurred while protecting or unprotecting the value of this secure string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetAt">
      <MemberSignature Language="C#" Value="public void SetAt (int index, char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAt(int32 index, char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.SetAt(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAt (index As Integer, c As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAt(int index, char c);" />
      <MemberSignature Language="F#" Value="member this.SetAt : int * char -&gt; unit" Usage="secureString.SetAt (index, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="ec9e5-281">此安全字符串中的某个现有字符的索引位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-281">The index position of an existing character in this secure string</span>
          </span>
        </param>
        <param name="c">
          <span data-ttu-id="ec9e5-282">替换现有字符的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-282">A character that replaces the existing character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec9e5-283">将指定索引位置上的现有字符替换为其他字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-283">Replaces the existing character at the specified index position with another character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec9e5-284">索引是从零开始;在此实例中的第一个字符的索引位置零。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-284">The index is zero-based; the first character in this instance is at index position zero.</span></span>  
  
 <span data-ttu-id="ec9e5-285">如果该实现使用一种保护机制，如加密、 安全字符串，如果有的值是不受保护;`c`分配给指定的索引位置; 则新值是重新保护。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-285">If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; `c` is assigned to the specified index position; then the new value is re-protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec9e5-286">下面的示例演示如何<xref:System.Security.SecureString.AppendChar%2A>， <xref:System.Security.SecureString.InsertAt%2A>， <xref:System.Security.SecureString.RemoveAt%2A>， <xref:System.Security.SecureString.SetAt%2A>，并<xref:System.Security.SecureString.Clear%2A>方法影响的值<xref:System.Security.SecureString>对象。</span><span class="sxs-lookup"><span data-stu-id="ec9e5-286">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ec9e5-287">已处置此安全字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-287">This secure string has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ec9e5-288">此安全字符串是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-288">This secure string is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ec9e5-289">
            <paramref name="index" /> 小于零，或者大于或等于此安全字符串的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-289">
              <paramref name="index" /> is less than zero, or greater than or equal to the length of this secure string.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="ec9e5-290">保护或取消保护此安全字符串的值时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec9e5-290">An error occurred while protecting or unprotecting the value of this secure string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>