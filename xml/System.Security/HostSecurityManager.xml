<Type Name="HostSecurityManager" FullName="System.Security.HostSecurityManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b0c4ebddf56a69ce3f11808a07ba7335be0319ac" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39848226" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HostSecurityManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit HostSecurityManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.HostSecurityManager" />
  <TypeSignature Language="VB.NET" Value="Public Class HostSecurityManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostSecurityManager" />
  <TypeSignature Language="F#" Value="type HostSecurityManager = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f7e02-101">允许控制和自定义应用程序域的安全行为。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f7e02-101">Allows the control and customization of security behavior for application domains.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e02-102">当您创建一个新<xref:System.AppDomain>，公共语言运行时查询<xref:System.AppDomainManager>是否存在<xref:System.Security.HostSecurityManager>，它参与安全决策<xref:System.AppDomain>。</span><span class="sxs-lookup"><span data-stu-id="f7e02-102">When you create a new <xref:System.AppDomain>, the common language runtime queries the <xref:System.AppDomainManager> for the presence of a <xref:System.Security.HostSecurityManager>, which participates in making security decisions for the <xref:System.AppDomain>.</span></span>  <span data-ttu-id="f7e02-103">托管提供程序应实现继承自宿主安全管理器<xref:System.Security.HostSecurityManager>类。</span><span class="sxs-lookup"><span data-stu-id="f7e02-103">Host providers should implement a host security manager that inherits from the <xref:System.Security.HostSecurityManager> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7e02-104">下面的示例演示一个非常简单的实现<xref:System.Security.HostSecurityManager>。</span><span class="sxs-lookup"><span data-stu-id="f7e02-104">The following example shows a very simple implementation of a <xref:System.Security.HostSecurityManager>.</span></span>  
  
 [!code-csharp[System.Security.HostSecurityManager#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.HostSecurityManager/CS/customsecuritymanager.cs#1)]
 [!code-vb[System.Security.HostSecurityManager#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.HostSecurityManager/VB/customsecuritymanager.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.SecurityCriticalAttribute">
      <span data-ttu-id="f7e02-105">直接调用方需要完全信任。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f7e02-105">requires full trust for the immediate caller.</span>
      </span>
      <span data-ttu-id="f7e02-106">部分受信任的或透明代码不能使用此类。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f7e02-106">This class cannot be used by partially trusted or transparent code.</span>
      </span>
    </permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="f7e02-107">继承者完全信任。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f7e02-107">for full trust for inheritors.</span>
      </span>
      <span data-ttu-id="f7e02-108">不能由部分受信任代码继承此类。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f7e02-108">This class cannot be inherited by partially trusted code.</span>
      </span>
    </permission>
    <block subset="none" type="overrides">
      <span data-ttu-id="f7e02-109">
        <para>某些成员<see cref="T:System.Security.HostSecurityManager" />时程序集加载、 显式或隐式调用。<see cref="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)" />并<see cref="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)" />方法必须加载任何程序集，因为执行此操作将导致的成员<see cref="T:System.Security.HostSecurityManager" />正在以递归方式调用。若要避免循环引用，应创建可能会导致要加载程序集，隐式或显式，派生的类的构造函数中的类的新实例<see cref="T:System.Security.HostSecurityManager" />。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="f7e02-109">
          <para>Some members of a <see cref="T:System.Security.HostSecurityManager" /> are called whenever an assembly is loaded, either implicitly or explicitly. The <see cref="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)" /> and <see cref="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)" /> methods must not load any assemblies, because doing so will result in the members of the <see cref="T:System.Security.HostSecurityManager" /> being recursively called. To avoid circular references, you should create new instances of classes that can cause assemblies to be loaded, either implicitly or explicitly, in the constructor of a class that derives from <see cref="T:System.Security.HostSecurityManager" />.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostSecurityManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.HostSecurityManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostSecurityManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f7e02-110">初始化 <see cref="T:System.Security.HostSecurityManager" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-110">Initializes a new instance of the <see cref="T:System.Security.HostSecurityManager" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="f7e02-111">直接调用方需要完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-111">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f7e02-112">不能由部分受信任的或透明的代码使用此成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-112">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="f7e02-113">继承者完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-113">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="f7e02-114">此成员不能由部分受信任代码继承。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-114">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
        <block subset="none" type="overrides">
          <span data-ttu-id="f7e02-115">
            <para>创建可导致程序集加载、 显式或隐式，此构造函数中的类的实例。Get 访问器<see cref="P:System.Security.HostSecurityManager.DomainPolicy" />属性和<see cref="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)" />和<see cref="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)" />每当程序集已加载，并且其后续加载的程序集将导致循环引用时调用的方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-115">
              <para>Create instances of classes that can cause assemblies to be loaded, either explicitly or implicitly, in this constructor.  The get accessor for the <see cref="P:System.Security.HostSecurityManager.DomainPolicy" /> property and the <see cref="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)" /> and <see cref="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)" /> methods are called whenever an assembly is loaded, and their subsequent loading of assemblies will cause circular references.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DetermineApplicationTrust">
      <MemberSignature Language="C#" Value="public virtual System.Security.Policy.ApplicationTrust DetermineApplicationTrust (System.Security.Policy.Evidence applicationEvidence, System.Security.Policy.Evidence activatorEvidence, System.Security.Policy.TrustManagerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Policy.ApplicationTrust DetermineApplicationTrust(class System.Security.Policy.Evidence applicationEvidence, class System.Security.Policy.Evidence activatorEvidence, class System.Security.Policy.TrustManagerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DetermineApplicationTrust (applicationEvidence As Evidence, activatorEvidence As Evidence, context As TrustManagerContext) As ApplicationTrust" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Policy::ApplicationTrust ^ DetermineApplicationTrust(System::Security::Policy::Evidence ^ applicationEvidence, System::Security::Policy::Evidence ^ activatorEvidence, System::Security::Policy::TrustManagerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member DetermineApplicationTrust : System.Security.Policy.Evidence * System.Security.Policy.Evidence * System.Security.Policy.TrustManagerContext -&gt; System.Security.Policy.ApplicationTrust&#xA;override this.DetermineApplicationTrust : System.Security.Policy.Evidence * System.Security.Policy.Evidence * System.Security.Policy.TrustManagerContext -&gt; System.Security.Policy.ApplicationTrust" Usage="hostSecurityManager.DetermineApplicationTrust (applicationEvidence, activatorEvidence, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Policy.ApplicationTrust</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationEvidence" Type="System.Security.Policy.Evidence" />
        <Parameter Name="activatorEvidence" Type="System.Security.Policy.Evidence" />
        <Parameter Name="context" Type="System.Security.Policy.TrustManagerContext" />
      </Parameters>
      <Docs>
        <param name="applicationEvidence">
          <span data-ttu-id="f7e02-116">要激活的应用程序的证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-116">The evidence for the application to be activated.</span>
          </span>
        </param>
        <param name="activatorEvidence">
          <span data-ttu-id="f7e02-117">也可以是正在激活的应用程序域的证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-117">Optionally, the evidence for the activating application domain.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="f7e02-118">信任上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-118">The trust context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7e02-119">决定是否应执行应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-119">Determines whether an application should be executed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7e02-120">一个对象，包含有关应用程序的信任信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-120">An object that contains trust information about the application.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e02-121">此方法由派生类中重写。</span><span class="sxs-lookup"><span data-stu-id="f7e02-121">This method can be overridden by a derived class.</span></span> <span data-ttu-id="f7e02-122">基实现调用应用程序安全管理器，以确定是否应执行应用程序。</span><span class="sxs-lookup"><span data-stu-id="f7e02-122">The base implementation calls the application security manager to determine if the application should be executed.</span></span>  
  
 <span data-ttu-id="f7e02-123">基实现不使用激活器证据。</span><span class="sxs-lookup"><span data-stu-id="f7e02-123">The base implementation does not use the activator evidence.</span></span> <span data-ttu-id="f7e02-124">但是，重写的实现可能使用的激活器证据来确定尝试激活应用程序的应用程序域的安全证据。</span><span class="sxs-lookup"><span data-stu-id="f7e02-124">However, an overridden implementation could use the activator evidence to determine the security evidence for the application domain attempting to activate the application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7e02-125">下面的示例演示如何重写<xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A>自定义宿主安全管理器的方法。</span><span class="sxs-lookup"><span data-stu-id="f7e02-125">The following example shows how to override the <xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A> method for a custom host security manager.</span></span> <span data-ttu-id="f7e02-126">此示例摘自一个更大的示例为提供<xref:System.Security.HostSecurityManager>类。</span><span class="sxs-lookup"><span data-stu-id="f7e02-126">This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.</span></span>  
  
 [!code-csharp[System.Security.HostSecurityManager#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.HostSecurityManager/CS/customsecuritymanager.cs#3)]
 [!code-vb[System.Security.HostSecurityManager#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.HostSecurityManager/VB/customsecuritymanager.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7e02-127">
            <paramref name="applicationEvidence" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-127">
              <paramref name="applicationEvidence" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f7e02-128">未能在应用程序证据中找到 <see cref="T:System.Runtime.Hosting.ActivationArguments" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-128">An <see cref="T:System.Runtime.Hosting.ActivationArguments" /> object could not be found in the application evidence.</span>
          </span>
          <span data-ttu-id="f7e02-129">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-129">-or-</span>
          </span>
          <span data-ttu-id="f7e02-130">激活参数中的 <see cref="P:System.Runtime.Hosting.ActivationArguments.ActivationContext" /> 属性为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-130">The <see cref="P:System.Runtime.Hosting.ActivationArguments.ActivationContext" /> property in the activation arguments is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f7e02-131">
            <see cref="T:System.Security.Policy.ApplicationTrust" /> 授予集不包含由 <see cref="T:System.ActivationContext" /> 指定的最小请求集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-131">The <see cref="T:System.Security.Policy.ApplicationTrust" /> grant set does not contain the minimum request set specified by the <see cref="T:System.ActivationContext" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DomainPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Security.Policy.PolicyLevel DomainPolicy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.PolicyLevel DomainPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Security.HostSecurityManager.DomainPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DomainPolicy As PolicyLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Policy::PolicyLevel ^ DomainPolicy { System::Security::Policy::PolicyLevel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DomainPolicy : System.Security.Policy.PolicyLevel" Usage="System.Security.HostSecurityManager.DomainPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("AppDomain policy levels are obsolete and will be removed in a future release of the .NET Framework. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Policy.PolicyLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f7e02-132">在派生类中重写时，获取当前应用程序域的安全策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-132">When overridden in a derived class, gets the security policy for the current application domain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f7e02-133">当前应用程序域的安全策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-133">The security policy for the current application domain.</span>
          </span>
          <span data-ttu-id="f7e02-134">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-134">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e02-135">可以在派生类中重写此属性。</span><span class="sxs-lookup"><span data-stu-id="f7e02-135">This property can be overridden in a derived class.</span></span> <span data-ttu-id="f7e02-136">此基实现总是返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="f7e02-136">The base implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="f7e02-137">此属性在调用<xref:System.AppDomain>创建时间。</span><span class="sxs-lookup"><span data-stu-id="f7e02-137">This property is called at <xref:System.AppDomain> creation time.</span></span> <span data-ttu-id="f7e02-138">它使宿主可以提供当前策略<xref:System.AppDomain>。</span><span class="sxs-lookup"><span data-stu-id="f7e02-138">It allows a host to supply a policy for the current <xref:System.AppDomain>.</span></span>  <span data-ttu-id="f7e02-139">策略级别由以下内容组成：</span><span class="sxs-lookup"><span data-stu-id="f7e02-139">A policy level consists of the following:</span></span>  
  
-   <span data-ttu-id="f7e02-140">代码组的一组组织到取得 root 权限的单个树。</span><span class="sxs-lookup"><span data-stu-id="f7e02-140">A set of code groups organized into a single rooted tree.</span></span>  
  
-   <span data-ttu-id="f7e02-141">要指定要对其授予属于代码组的权限的代码组所引用的命名的权限集的一组。</span><span class="sxs-lookup"><span data-stu-id="f7e02-141">A set of named permission sets that are referenced by the code groups to specify permissions to be granted to code belonging to the code group.</span></span>  
  
-   <span data-ttu-id="f7e02-142">完全受信任的程序集的列表。</span><span class="sxs-lookup"><span data-stu-id="f7e02-142">A list of fully trusted assemblies.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f7e02-143">请参阅有关的继承者说明<xref:System.Security.HostSecurityManager>关键实现信息的类。</span><span class="sxs-lookup"><span data-stu-id="f7e02-143">See the Notes to Inheritors for the <xref:System.Security.HostSecurityManager> class for critical implementation information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f7e02-144">此方法使用代码访问安全性 (CAS) 策略，该策略在 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 中已过时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-144">This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)].</span>
          </span>
          <span data-ttu-id="f7e02-145">若要使 CAS 策略与早期版本的 .NET Framework 兼容，请使用 [&lt;legacyCasPolicy&gt; 元素](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-145">To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [&lt;legacyCasPolicy&gt; element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public virtual System.Security.HostSecurityManagerOptions Flags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.HostSecurityManagerOptions Flags" />
      <MemberSignature Language="DocId" Value="P:System.Security.HostSecurityManager.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Flags As HostSecurityManagerOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::HostSecurityManagerOptions Flags { System::Security::HostSecurityManagerOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Flags : System.Security.HostSecurityManagerOptions" Usage="System.Security.HostSecurityManager.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.HostSecurityManagerOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f7e02-146">获取表示与主机相关的安全策略组件的标志。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-146">Gets the flag representing the security policy components of concern to the host.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f7e02-147">用于指定安全策略组件的枚举值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-147">One of the enumeration values that specifies security policy components.</span>
          </span>
          <span data-ttu-id="f7e02-148">默认值为 <see cref="F:System.Security.HostSecurityManagerOptions.AllFlags" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-148">The default is <see cref="F:System.Security.HostSecurityManagerOptions.AllFlags" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e02-149">可以在派生类中重写此属性。</span><span class="sxs-lookup"><span data-stu-id="f7e02-149">This property can be overridden in a derived class.</span></span> <span data-ttu-id="f7e02-150">此基实现总是返回 <xref:System.Security.HostSecurityManagerOptions.AllFlags>。</span><span class="sxs-lookup"><span data-stu-id="f7e02-150">The base implementation always returns <xref:System.Security.HostSecurityManagerOptions.AllFlags>.</span></span>  
  
 <span data-ttu-id="f7e02-151">派生的主机可以更改此属性时的一个子集值<xref:System.Security.HostSecurityManagerOptions>感兴趣。</span><span class="sxs-lookup"><span data-stu-id="f7e02-151">The derived host can change the value of this property when only a subset of the <xref:System.Security.HostSecurityManagerOptions> is of interest.</span></span>  <span data-ttu-id="f7e02-152">可能的子集包括 none、 被拒绝的集，策略级别和程序集证据。</span><span class="sxs-lookup"><span data-stu-id="f7e02-152">The possible subsets include none, the refused set, the policy level, and assembly evidence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7e02-153">下面的示例演示如何重写<xref:System.Security.HostSecurityManager.Flags%2A>自定义宿主安全管理器的属性。</span><span class="sxs-lookup"><span data-stu-id="f7e02-153">The following example shows how to override the <xref:System.Security.HostSecurityManager.Flags%2A> property for a custom host security manager.</span></span> <span data-ttu-id="f7e02-154">此示例摘自一个更大的示例为提供<xref:System.Security.HostSecurityManager>类。</span><span class="sxs-lookup"><span data-stu-id="f7e02-154">This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.</span></span>  
  
 [!code-csharp[System.Security.HostSecurityManager#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.HostSecurityManager/CS/customsecuritymanager.cs#2)]
 [!code-vb[System.Security.HostSecurityManager#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.HostSecurityManager/VB/customsecuritymanager.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateAppDomainEvidence">
      <MemberSignature Language="C#" Value="public virtual System.Security.Policy.EvidenceBase GenerateAppDomainEvidence (Type evidenceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Policy.EvidenceBase GenerateAppDomainEvidence(class System.Type evidenceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateAppDomainEvidence (evidenceType As Type) As EvidenceBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Policy::EvidenceBase ^ GenerateAppDomainEvidence(Type ^ evidenceType);" />
      <MemberSignature Language="F#" Value="abstract member GenerateAppDomainEvidence : Type -&gt; System.Security.Policy.EvidenceBase&#xA;override this.GenerateAppDomainEvidence : Type -&gt; System.Security.Policy.EvidenceBase" Usage="hostSecurityManager.GenerateAppDomainEvidence evidenceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.EvidenceBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidenceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="evidenceType">
          <span data-ttu-id="f7e02-155">证据类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-155">The evidence type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7e02-156">请求应用程序域的特定证据类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-156">Requests a specific evidence type for the application domain.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7e02-157">请求的应用程序域证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-157">The requested application domain evidence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e02-158">此方法由派生类中重写。</span><span class="sxs-lookup"><span data-stu-id="f7e02-158">This method can be overridden by a derived class.</span></span> <span data-ttu-id="f7e02-159">基实现返回`null`。</span><span class="sxs-lookup"><span data-stu-id="f7e02-159">The base implementation returns `null`.</span></span>  
  
 <span data-ttu-id="f7e02-160">公共语言运行时调用此方法时指定类型的证据所需的当前<xref:System.AppDomain>。</span><span class="sxs-lookup"><span data-stu-id="f7e02-160">The common language runtime calls this method when evidence of the specified type is needed for the current <xref:System.AppDomain>.</span></span> <span data-ttu-id="f7e02-161">返回的值用作主机提供的证据，并且存储在<xref:System.AppDomain.Evidence%2A>的集合<xref:System.AppDomain.CurrentDomain%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f7e02-161">The returned value is used as host-supplied evidence, and is stored in the <xref:System.AppDomain.Evidence%2A> collection of the <xref:System.AppDomain.CurrentDomain%2A> property.</span></span> <span data-ttu-id="f7e02-162">可以使用<xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=nameWithType>方法以从集合中获取生成的证据。</span><span class="sxs-lookup"><span data-stu-id="f7e02-162">You can use the <xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=nameWithType> method to obtain the generated evidence from the collection.</span></span>  
  
 <span data-ttu-id="f7e02-163">若要获取对此方法的回调，主机必须指定<xref:System.Security.HostSecurityManagerOptions.HostAppDomainEvidence>标记中<xref:System.Security.HostSecurityManager.Flags%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f7e02-163">To get a callback to this method, hosts must specify the <xref:System.Security.HostSecurityManagerOptions.HostAppDomainEvidence> flag in the <xref:System.Security.HostSecurityManager.Flags%2A> property.</span></span>  
  
 <span data-ttu-id="f7e02-164">此方法生成的证据的允许主机以延迟证据生成<xref:System.AppDomain>之前所需证据。</span><span class="sxs-lookup"><span data-stu-id="f7e02-164">This method of generating evidence allows hosts to delay evidence generation for an <xref:System.AppDomain> until the evidence is needed.</span></span> <span data-ttu-id="f7e02-165">在.NET Framework 版本 3.5 和更早版本中，已提供所需<xref:System.AppDomain>在加载时通过重写的证据<xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f7e02-165">In the .NET Framework version 3.5 and earlier versions, it was necessary to provide <xref:System.AppDomain> evidence at load time by overriding the <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> method.</span></span> <span data-ttu-id="f7e02-166">我们建议你使用<xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A>提供证据，而不是替代<xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>。</span><span class="sxs-lookup"><span data-stu-id="f7e02-166">We recommend that you use <xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A> to provide evidence instead of overriding <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>.</span></span>  
  
 <span data-ttu-id="f7e02-167"><xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A>方法会被回调仅对于类型的主机具有的重写中指定的证据<xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f7e02-167">The <xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A> method is called back into only for types of evidence that the host has specified in the override of the <xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A> method.</span></span>  
  
 <span data-ttu-id="f7e02-168">返回值为`null`指示主机无法生成此特定类型的证据。</span><span class="sxs-lookup"><span data-stu-id="f7e02-168">A return value of `null` indicates that the host cannot generate evidence of this specific type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7e02-169">下面的示例演示如何重写<xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>自定义宿主安全管理器的方法。</span><span class="sxs-lookup"><span data-stu-id="f7e02-169">The following example shows how to override the <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> method for a custom host security manager.</span></span> <span data-ttu-id="f7e02-170">此示例摘自一个更大的示例为提供<xref:System.Security.HostSecurityManager>类。</span><span class="sxs-lookup"><span data-stu-id="f7e02-170">This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.</span></span>  
  
 [!code-csharp[System.Security.HostSecurityManager#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.HostSecurityManager/CS/customsecuritymanager.cs#6)]
 [!code-vb[System.Security.HostSecurityManager#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.HostSecurityManager/VB/customsecuritymanager.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateAssemblyEvidence">
      <MemberSignature Language="C#" Value="public virtual System.Security.Policy.EvidenceBase GenerateAssemblyEvidence (Type evidenceType, System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Policy.EvidenceBase GenerateAssemblyEvidence(class System.Type evidenceType, class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Policy::EvidenceBase ^ GenerateAssemblyEvidence(Type ^ evidenceType, System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="abstract member GenerateAssemblyEvidence : Type * System.Reflection.Assembly -&gt; System.Security.Policy.EvidenceBase&#xA;override this.GenerateAssemblyEvidence : Type * System.Reflection.Assembly -&gt; System.Security.Policy.EvidenceBase" Usage="hostSecurityManager.GenerateAssemblyEvidence (evidenceType, assembly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.EvidenceBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidenceType" Type="System.Type" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="evidenceType">
          <span data-ttu-id="f7e02-171">证据类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-171">The evidence type.</span>
          </span>
        </param>
        <param name="assembly">
          <span data-ttu-id="f7e02-172">目标程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-172">The target assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7e02-173">请求程序集的特定证据类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-173">Requests a specific evidence type for the assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7e02-174">请求的程序集证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-174">The requested assembly evidence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e02-175">此方法由派生类中重写。</span><span class="sxs-lookup"><span data-stu-id="f7e02-175">This method can be overridden by a derived class.</span></span> <span data-ttu-id="f7e02-176">基实现返回`null`。</span><span class="sxs-lookup"><span data-stu-id="f7e02-176">The base implementation returns `null`.</span></span>  
  
 <span data-ttu-id="f7e02-177">指定类型的证据所需的当前程序集时，公共语言运行时将调用此方法。</span><span class="sxs-lookup"><span data-stu-id="f7e02-177">The common language runtime calls this method when evidence of the specified type is needed for the current assembly.</span></span> <span data-ttu-id="f7e02-178">返回的值用作主机提供的证据，并且存储在<xref:System.Reflection.Assembly.Evidence%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f7e02-178">The returned value is used as host-supplied evidence, and is stored in the <xref:System.Reflection.Assembly.Evidence%2A> property.</span></span> <span data-ttu-id="f7e02-179">可以使用<xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=nameWithType>方法以获取从生成的证据<xref:System.Reflection.Assembly.Evidence%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f7e02-179">You can use the <xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=nameWithType> method to obtain the generated evidence from the <xref:System.Reflection.Assembly.Evidence%2A> property.</span></span>  
  
 <span data-ttu-id="f7e02-180">若要获取对此方法的回调，主机必须指定<xref:System.Security.HostSecurityManagerOptions.HostAssemblyEvidence>标记中<xref:System.Security.HostSecurityManager.Flags%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f7e02-180">To get a callback to this method, hosts must specify the <xref:System.Security.HostSecurityManagerOptions.HostAssemblyEvidence> flag in the <xref:System.Security.HostSecurityManager.Flags%2A> property.</span></span>  
  
 <span data-ttu-id="f7e02-181">此方法生成的证据的允许主机以延迟证据生成<xref:System.AppDomain>之前所需证据。</span><span class="sxs-lookup"><span data-stu-id="f7e02-181">This method of generating evidence allows hosts to delay evidence generation for an <xref:System.AppDomain> until the evidence is needed.</span></span> <span data-ttu-id="f7e02-182">在.NET Framework 3.5 和更早版本中，已提供所需<xref:System.AppDomain>在加载时通过重写的证据<xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f7e02-182">In the .NET Framework 3.5 and earlier versions, it was necessary to provide <xref:System.AppDomain> evidence at load time by overriding the <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> method.</span></span> <span data-ttu-id="f7e02-183">我们建议你使用<xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A>提供证据，而不是替代<xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A>。</span><span class="sxs-lookup"><span data-stu-id="f7e02-183">We recommend that you use <xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A> to provide evidence instead of overriding <xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A>.</span></span>  
  
 <span data-ttu-id="f7e02-184"><xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A>方法会被回调仅对于类型的主机具有的重写中指定的证据<xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f7e02-184">The <xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A> method is called back into only for types of evidence that the host has specified in the override of the <xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A> method.</span></span>  
  
 <span data-ttu-id="f7e02-185">返回值为`null`指示主机无法生成此特定类型的证据。</span><span class="sxs-lookup"><span data-stu-id="f7e02-185">A return value of `null` indicates that the host cannot generate evidence of this specific type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHostSuppliedAppDomainEvidenceTypes">
      <MemberSignature Language="C#" Value="public virtual Type[] GetHostSuppliedAppDomainEvidenceTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetHostSuppliedAppDomainEvidenceTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHostSuppliedAppDomainEvidenceTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetHostSuppliedAppDomainEvidenceTypes();" />
      <MemberSignature Language="F#" Value="abstract member GetHostSuppliedAppDomainEvidenceTypes : unit -&gt; Type[]&#xA;override this.GetHostSuppliedAppDomainEvidenceTypes : unit -&gt; Type[]" Usage="hostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f7e02-186">确定主机可以为应用程序域提供哪些证据类型（如果请求了证据类型）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-186">Determines which evidence types the host can supply for the application domain, if requested.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7e02-187">证据类型的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-187">An array of evidence types.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e02-188">此方法由派生类中重写。</span><span class="sxs-lookup"><span data-stu-id="f7e02-188">This method can be overridden by a derived class.</span></span> <span data-ttu-id="f7e02-189">基实现返回`null`。</span><span class="sxs-lookup"><span data-stu-id="f7e02-189">The base implementation returns `null`.</span></span>  
  
 <span data-ttu-id="f7e02-190">此方法返回的类型确定是否<xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A>返回到调用方法。</span><span class="sxs-lookup"><span data-stu-id="f7e02-190">The types returned by this method determine whether the <xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A> method is called back into.</span></span> <span data-ttu-id="f7e02-191">此列表中类型的状态并不意味着主机必须能够生成此证据类型，但它可能可以使用。</span><span class="sxs-lookup"><span data-stu-id="f7e02-191">The presence of a type in this list does not mean that the host must be able to generate this evidence type, but that it may be able to.</span></span> <span data-ttu-id="f7e02-192">因此，最好是过度指定比下-指定此列表中的类型。</span><span class="sxs-lookup"><span data-stu-id="f7e02-192">For that reason, it is best to over-specify rather than under-specify the types in this list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHostSuppliedAssemblyEvidenceTypes">
      <MemberSignature Language="C#" Value="public virtual Type[] GetHostSuppliedAssemblyEvidenceTypes (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetHostSuppliedAssemblyEvidenceTypes(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetHostSuppliedAssemblyEvidenceTypes(System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="abstract member GetHostSuppliedAssemblyEvidenceTypes : System.Reflection.Assembly -&gt; Type[]&#xA;override this.GetHostSuppliedAssemblyEvidenceTypes : System.Reflection.Assembly -&gt; Type[]" Usage="hostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <span data-ttu-id="f7e02-193">目标程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-193">The target assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7e02-194">确定主机可以为程序集提供哪些证据类型（如果请求了证据类型）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-194">Determines which evidence types the host can supply for the assembly, if requested.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7e02-195">证据类型的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-195">An array of evidence types.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e02-196">此方法由派生类中重写。</span><span class="sxs-lookup"><span data-stu-id="f7e02-196">This method can be overridden by a derived class.</span></span> <span data-ttu-id="f7e02-197">基实现返回`null`。</span><span class="sxs-lookup"><span data-stu-id="f7e02-197">The base implementation returns `null`.</span></span>  
  
 <span data-ttu-id="f7e02-198">此方法返回的类型确定是否<xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A>返回到调用方法。</span><span class="sxs-lookup"><span data-stu-id="f7e02-198">The types returned by this method determine whether the <xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A> method is called back into.</span></span> <span data-ttu-id="f7e02-199">此列表中类型的状态并不意味着主机必须能够生成此证据类型，但它可能可以使用。</span><span class="sxs-lookup"><span data-stu-id="f7e02-199">The presence of a type in this list does not mean that the host must be able to generate this evidence type, but that it may be able to.</span></span> <span data-ttu-id="f7e02-200">因此，最好是过度指定比下-指定此列表中的类型。</span><span class="sxs-lookup"><span data-stu-id="f7e02-200">For that reason, it is best to over-specify rather than under-specify the types in this list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvideAppDomainEvidence">
      <MemberSignature Language="C#" Value="public virtual System.Security.Policy.Evidence ProvideAppDomainEvidence (System.Security.Policy.Evidence inputEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Policy.Evidence ProvideAppDomainEvidence(class System.Security.Policy.Evidence inputEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ProvideAppDomainEvidence (inputEvidence As Evidence) As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Policy::Evidence ^ ProvideAppDomainEvidence(System::Security::Policy::Evidence ^ inputEvidence);" />
      <MemberSignature Language="F#" Value="abstract member ProvideAppDomainEvidence : System.Security.Policy.Evidence -&gt; System.Security.Policy.Evidence&#xA;override this.ProvideAppDomainEvidence : System.Security.Policy.Evidence -&gt; System.Security.Policy.Evidence" Usage="hostSecurityManager.ProvideAppDomainEvidence inputEvidence" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputEvidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="inputEvidence">
          <span data-ttu-id="f7e02-201">要添加到 <see cref="T:System.AppDomain" /> 证据中的附加证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-201">Additional evidence to add to the <see cref="T:System.AppDomain" /> evidence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7e02-202">为正在加载的程序集提供应用程序域证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-202">Provides the application domain evidence for an assembly being loaded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7e02-203">要用于 <see cref="T:System.AppDomain" /> 的证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-203">The evidence to be used for the <see cref="T:System.AppDomain" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e02-204">可以在派生类中重写此方法。</span><span class="sxs-lookup"><span data-stu-id="f7e02-204">This method can be overridden in a derived class.</span></span>  
  
 <span data-ttu-id="f7e02-205">调用此方法时<xref:System.AppDomain>创建对象。</span><span class="sxs-lookup"><span data-stu-id="f7e02-205">This method is called whenever an <xref:System.AppDomain> object is created.</span></span> <span data-ttu-id="f7e02-206">`inputEvidence`参数是从公共语言运行时计算所得的证据。</span><span class="sxs-lookup"><span data-stu-id="f7e02-206">The `inputEvidence` parameter is the computed evidence from the common language runtime.</span></span> <span data-ttu-id="f7e02-207">主机实现可以选择增加或减少证据。</span><span class="sxs-lookup"><span data-stu-id="f7e02-207">The host implementation can choose to extend or reduce the evidence.</span></span> <span data-ttu-id="f7e02-208">返回值是要用于应用程序域的证据。</span><span class="sxs-lookup"><span data-stu-id="f7e02-208">The return value is the evidence to be used for the application domain.</span></span>  <span data-ttu-id="f7e02-209">基实现始终返回作为传递的证据对象`inputEvidence`参数。</span><span class="sxs-lookup"><span data-stu-id="f7e02-209">The base implementation always returns the evidence object passed in as the `inputEvidence` parameter.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f7e02-210">请参阅有关的继承者说明<xref:System.Security.HostSecurityManager>关键实现信息的类。</span><span class="sxs-lookup"><span data-stu-id="f7e02-210">See the Notes to Inheritors for the <xref:System.Security.HostSecurityManager> class for critical implementation information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvideAssemblyEvidence">
      <MemberSignature Language="C#" Value="public virtual System.Security.Policy.Evidence ProvideAssemblyEvidence (System.Reflection.Assembly loadedAssembly, System.Security.Policy.Evidence inputEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Policy.Evidence ProvideAssemblyEvidence(class System.Reflection.Assembly loadedAssembly, class System.Security.Policy.Evidence inputEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ProvideAssemblyEvidence (loadedAssembly As Assembly, inputEvidence As Evidence) As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Policy::Evidence ^ ProvideAssemblyEvidence(System::Reflection::Assembly ^ loadedAssembly, System::Security::Policy::Evidence ^ inputEvidence);" />
      <MemberSignature Language="F#" Value="abstract member ProvideAssemblyEvidence : System.Reflection.Assembly * System.Security.Policy.Evidence -&gt; System.Security.Policy.Evidence&#xA;override this.ProvideAssemblyEvidence : System.Reflection.Assembly * System.Security.Policy.Evidence -&gt; System.Security.Policy.Evidence" Usage="hostSecurityManager.ProvideAssemblyEvidence (loadedAssembly, inputEvidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loadedAssembly" Type="System.Reflection.Assembly" />
        <Parameter Name="inputEvidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="loadedAssembly">
          <span data-ttu-id="f7e02-211">加载的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-211">The loaded assembly.</span>
          </span>
        </param>
        <param name="inputEvidence">
          <span data-ttu-id="f7e02-212">要添加到程序集证据中的附加证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-212">Additional evidence to add to the assembly evidence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7e02-213">为正在加载的程序集提供程序集证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-213">Provides the assembly evidence for an assembly being loaded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7e02-214">要用于程序集的证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-214">The evidence to be used for the assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e02-215">可以在派生类中重写此方法。</span><span class="sxs-lookup"><span data-stu-id="f7e02-215">This method can be overridden in a derived class.</span></span>  
  
 <span data-ttu-id="f7e02-216">只要隐式或显式加载，程序集，调用此方法。</span><span class="sxs-lookup"><span data-stu-id="f7e02-216">This method is called whenever an assembly is loaded, either implicitly or explicitly.</span></span> <span data-ttu-id="f7e02-217">传入的参数是要加载的程序集并从公共语言运行时计算所得的证据。</span><span class="sxs-lookup"><span data-stu-id="f7e02-217">The passed in parameters are the assembly being loaded, and the computed evidence from the common language runtime.</span></span> <span data-ttu-id="f7e02-218">主机实现可以选择增加或减少证据。</span><span class="sxs-lookup"><span data-stu-id="f7e02-218">The host implementation can choose to extend or reduce the evidence.</span></span> <span data-ttu-id="f7e02-219">返回值是要使用的程序集的证据。</span><span class="sxs-lookup"><span data-stu-id="f7e02-219">The return value is the evidence to be used for the assembly.</span></span>  <span data-ttu-id="f7e02-220">基实现始终返回作为传递的证据对象`inputEvidence`参数。</span><span class="sxs-lookup"><span data-stu-id="f7e02-220">The base implementation always returns the evidence object passed in as the `inputEvidence` parameter.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f7e02-221">请参阅有关的继承者说明<xref:System.Security.HostSecurityManager>关键实现信息的类。</span><span class="sxs-lookup"><span data-stu-id="f7e02-221">See the Notes to Inheritors for the <xref:System.Security.HostSecurityManager> class for critical implementation information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7e02-222">下面的示例演示如何重写<xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A>自定义宿主安全管理器的方法。</span><span class="sxs-lookup"><span data-stu-id="f7e02-222">The following example shows how to override the <xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A> method for a custom host security manager.</span></span> <span data-ttu-id="f7e02-223">此示例摘自一个更大的示例为提供<xref:System.Security.HostSecurityManager>类。</span><span class="sxs-lookup"><span data-stu-id="f7e02-223">This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.</span></span>  
  
 [!code-csharp[System.Security.HostSecurityManager#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.HostSecurityManager/CS/customsecuritymanager.cs#5)]
 [!code-vb[System.Security.HostSecurityManager#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.HostSecurityManager/VB/customsecuritymanager.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolvePolicy">
      <MemberSignature Language="C#" Value="public virtual System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.PermissionSet ResolvePolicy(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::PermissionSet ^ ResolvePolicy(System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="abstract member ResolvePolicy : System.Security.Policy.Evidence -&gt; System.Security.PermissionSet&#xA;override this.ResolvePolicy : System.Security.Policy.Evidence -&gt; System.Security.PermissionSet" Usage="hostSecurityManager.ResolvePolicy evidence" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">
          <span data-ttu-id="f7e02-224">用于评估策略的证据集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-224">The evidence set used to evaluate policy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7e02-225">根据指定的证据确定向代码授予什么权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-225">Determines what permissions to grant to code based on the specified evidence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7e02-226">可由安全系统授予的权限集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-226">The permission set that can be granted by the security system.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e02-227">此方法将调用安全策略引擎，为其提供指定的证据。</span><span class="sxs-lookup"><span data-stu-id="f7e02-227">This method invokes the security policy engine, providing it with the specified evidence.</span></span> <span data-ttu-id="f7e02-228">由安全策略确定结果。</span><span class="sxs-lookup"><span data-stu-id="f7e02-228">The result is determined by the security policy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7e02-229">
            <paramref name="evidence" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e02-229">
              <paramref name="evidence" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>