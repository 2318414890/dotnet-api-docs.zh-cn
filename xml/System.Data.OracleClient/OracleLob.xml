<Type Name="OracleLob" FullName="System.Data.OracleClient.OracleLob">
  <TypeSignature Language="C#" Value="public sealed class OracleLob : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleLob extends System.IO.Stream implements class System.Data.SqlTypes.INullable, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleLob" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleLob&#xA;Inherits Stream&#xA;Implements ICloneable, INullable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleLob sealed : System::IO::Stream, ICloneable, System::Data::SqlTypes::INullable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.SqlTypes.INullable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b3a71-101">表示存储在 Oracle 服务器上的大型对象二进制 (<see langword="LOB" />) 数据类型。</span><span class="sxs-lookup"><span data-stu-id="b3a71-101">Represents a large object binary (<see langword="LOB" />) data type stored on an Oracle server.</span></span> <span data-ttu-id="b3a71-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="b3a71-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3a71-103"><xref:System.Data.OracleClient.OracleLob>区别<xref:System.Data.OracleClient.OracleBFile>在于数据存储的服务器，而不是在操作系统中的物理文件上。</span><span class="sxs-lookup"><span data-stu-id="b3a71-103">An <xref:System.Data.OracleClient.OracleLob> differs from an <xref:System.Data.OracleClient.OracleBFile> in that the data is stored on the server instead of in a physical file in the operating system.</span></span> <span data-ttu-id="b3a71-104">它还可读写对象，与不同<xref:System.Data.OracleClient.OracleBFile>，这始终是只读的。</span><span class="sxs-lookup"><span data-stu-id="b3a71-104">It can also be a read-write object, unlike an <xref:System.Data.OracleClient.OracleBFile>, which is always read-only.</span></span>  
  
 <span data-ttu-id="b3a71-105"><xref:System.Data.OracleClient.OracleLob>可能是下列其中一<xref:System.Data.OracleClient.OracleType>数据类型。</span><span class="sxs-lookup"><span data-stu-id="b3a71-105">An <xref:System.Data.OracleClient.OracleLob> may be one of these <xref:System.Data.OracleClient.OracleType> data types.</span></span>  
  
|<span data-ttu-id="b3a71-106">OracleType 数据类型</span><span class="sxs-lookup"><span data-stu-id="b3a71-106">OracleType data type</span></span>|<span data-ttu-id="b3a71-107">描述</span><span class="sxs-lookup"><span data-stu-id="b3a71-107">Description</span></span>|  
|--------------------------|-----------------|  
|`Blob`|<span data-ttu-id="b3a71-108">Oracle`BLOB`包含最大大小为 4 千兆字节 (GB) 的二进制数据的数据类型。</span><span class="sxs-lookup"><span data-stu-id="b3a71-108">An Oracle `BLOB` data type that contains binary data with a maximum size of 4 gigabytes (GB).</span></span> <span data-ttu-id="b3a71-109">它映射到 <xref:System.Array> 类型的 <xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="b3a71-109">This maps to an <xref:System.Array> of type <xref:System.Byte>.</span></span>|  
|`Clob`|<span data-ttu-id="b3a71-110">Oracle`CLOB`包含字符数据，基于默认字符的数据类型设置在服务器上，最大大小为 4 GB。</span><span class="sxs-lookup"><span data-stu-id="b3a71-110">An Oracle `CLOB` data type that contains character data, based on the default character set on the server, with a maximum size of 4 GB.</span></span> <span data-ttu-id="b3a71-111">它映射到 <xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="b3a71-111">This maps to <xref:System.String>.</span></span>|  
|`NClob`|<span data-ttu-id="b3a71-112">Oracle`NCLOB`基于在具有最大大小为 4 GB 的服务器上的区域字符集包含字符数据的数据类型。</span><span class="sxs-lookup"><span data-stu-id="b3a71-112">An Oracle `NCLOB` data type that contains character data, based on the national character set on the server with a maximum size of 4 GB.</span></span> <span data-ttu-id="b3a71-113">它映射到 <xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="b3a71-113">This maps to <xref:System.String>.</span></span>|  
  
 <span data-ttu-id="b3a71-114">.NET 应用程序开发人员可以检索 Oracle`LOB`值到基本.NET 数据类型，例如<xref:System.Array>类型的<xref:System.Byte>和<xref:System.String>，或专用<xref:System.Data.OracleClient.OracleLob>数据类型。</span><span class="sxs-lookup"><span data-stu-id="b3a71-114">A .NET application developer can retrieve the Oracle `LOB` values into basic .NET data types, such as <xref:System.Array> of type <xref:System.Byte> and <xref:System.String>, or the specialized <xref:System.Data.OracleClient.OracleLob> data type.</span></span> <span data-ttu-id="b3a71-115"><xref:System.Data.OracleClient.OracleLob>类支持从读取数据并写入 Oracle `LOB` Oracle 数据库中。</span><span class="sxs-lookup"><span data-stu-id="b3a71-115">The <xref:System.Data.OracleClient.OracleLob> class supports reading data from and writing to the Oracle `LOB` in the Oracle database.</span></span>  
  
 <span data-ttu-id="b3a71-116">以下是的主要特征<xref:System.Data.OracleClient.OracleLob>区分从基本的.NET 数据类型的数据类型：</span><span class="sxs-lookup"><span data-stu-id="b3a71-116">The following are the main characteristics of an <xref:System.Data.OracleClient.OracleLob> data type that distinguish it from basic .NET data types:</span></span>  
  
-   <span data-ttu-id="b3a71-117">检索 Oracle 后`LOB`值从 Oracle 数据库到<xref:System.Data.OracleClient.OracleLob>类，你可以更改`LOB`打开的事务和所做的更改中的数据直接反映到数据库。</span><span class="sxs-lookup"><span data-stu-id="b3a71-117">After you retrieve the Oracle `LOB` value from the Oracle database into the <xref:System.Data.OracleClient.OracleLob> class, you can change the `LOB` data in an open transaction and your changes are directly reflected to the database.</span></span> <span data-ttu-id="b3a71-118">如果检索 Oracle`LOB`值到<xref:System.Array>类型的<xref:System.Byte>或<xref:System.String>和更新这些阵列，所做的更改不会反映到数据库。</span><span class="sxs-lookup"><span data-stu-id="b3a71-118">If you retrieve the Oracle `LOB` value into an <xref:System.Array> of type <xref:System.Byte> or <xref:System.String> and update these arrays, your changes are not reflected to the database.</span></span>  
  
-   <span data-ttu-id="b3a71-119">当你使用<xref:System.Data.OracleClient.OracleLob>类访问的区块`LOB`值，只将该块区传递从 Oracle 数据库到客户端。</span><span class="sxs-lookup"><span data-stu-id="b3a71-119">When you use the <xref:System.Data.OracleClient.OracleLob> class to access a chunk of a `LOB` value, only that chunk is passed from the Oracle database to the client.</span></span> <span data-ttu-id="b3a71-120">当你使用<xref:System.Data.OracleClient.OracleDataReader.GetChars%2A>方法来访问的区块`LOB`值，该值的整个内容传递从 Oracle 数据库到客户端。</span><span class="sxs-lookup"><span data-stu-id="b3a71-120">When you use the <xref:System.Data.OracleClient.OracleDataReader.GetChars%2A> method to access a chunk of a `LOB` value, the entire contents of the value are passed from the Oracle database to the client.</span></span>  
  
 <span data-ttu-id="b3a71-121">若要获取<xref:System.Data.OracleClient.OracleLob>对象，请调用<xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b3a71-121">To obtain an <xref:System.Data.OracleClient.OracleLob> object, call the <xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A> method.</span></span>  
  
 <span data-ttu-id="b3a71-122">您可以构造<xref:System.Data.OracleClient.OracleLob>值为 NULL，使用此格式：</span><span class="sxs-lookup"><span data-stu-id="b3a71-122">You can construct an <xref:System.Data.OracleClient.OracleLob> that is NULL using this format:</span></span>  
  
```  
OracleLob myLob = OracleLob.Null;  
```  
  
 <span data-ttu-id="b3a71-123">此方法主要用于测试是否`LOB`从服务器返回为 NULL，如本示例所示：</span><span class="sxs-lookup"><span data-stu-id="b3a71-123">This technique is used primarily to test whether a `LOB` returned from the server is NULL, as this example illustrates:</span></span>  
  
```  
If(myLob == OracleLob.Null)  
```  
  
 <span data-ttu-id="b3a71-124">NULL`LOB`的行为类似于零字节`LOB`在于<xref:System.Data.OracleClient.OracleLob.Read%2A>成功并始终返回零字节。</span><span class="sxs-lookup"><span data-stu-id="b3a71-124">A NULL `LOB` behaves similarly to a zero-byte `LOB` in that <xref:System.Data.OracleClient.OracleLob.Read%2A> succeeds and always returns zero bytes.</span></span>  
  
 <span data-ttu-id="b3a71-125">选择`LOB`包含一个 null 值的列返回<xref:System.Data.OracleClient.OracleLob.Null>。</span><span class="sxs-lookup"><span data-stu-id="b3a71-125">Selecting a `LOB` column that contains a null value returns <xref:System.Data.OracleClient.OracleLob.Null>.</span></span>  
  
 <span data-ttu-id="b3a71-126">你必须开始事务，然后才能获取临时`LOB`。</span><span class="sxs-lookup"><span data-stu-id="b3a71-126">You must begin a transaction before obtaining a temporary `LOB`.</span></span> <span data-ttu-id="b3a71-127">否则为<xref:System.Data.OracleClient.OracleDataReader>可能无法获取数据更高版本。</span><span class="sxs-lookup"><span data-stu-id="b3a71-127">Otherwise, the <xref:System.Data.OracleClient.OracleDataReader> may fail to obtain data later.</span></span>  
  
 <span data-ttu-id="b3a71-128">你也可以打开一个临时`LOB`通过调用 DBMS_LOB Oracle 中。CREATETEMPORARY 系统存储过程和绑定`LOB`输出参数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-128">You can also open a temporary `LOB` in Oracle by calling the DBMS_LOB.CREATETEMPORARY system stored procedure and binding a `LOB` output parameter.</span></span> <span data-ttu-id="b3a71-129">在客户端，临时`LOB`行为类似基于表的`LOB`。</span><span class="sxs-lookup"><span data-stu-id="b3a71-129">On the client side, a temporary `LOB` behaves like a table-based `LOB`.</span></span> <span data-ttu-id="b3a71-130">例如，若要更新临时`LOB`，它必须括在事务中。</span><span class="sxs-lookup"><span data-stu-id="b3a71-130">For example, to update the temporary `LOB`, it must be enclosed in a transaction.</span></span>  
  
 <span data-ttu-id="b3a71-131">下面的 C# 示例演示如何打开一个临时`LOB`。</span><span class="sxs-lookup"><span data-stu-id="b3a71-131">The following C# example demonstrates how to open a temporary `LOB`.</span></span>  
  
```  
OracleConnection connection = new OracleConnection("server=MyServer; integrated security=yes;");  
connection.Open();  
OracleTransaction transaction = connection.BeginTransaction();  
OracleCommand command = connection.CreateCommand();  
command.Transaction = transaction;  
command.CommandText = "declare xx blob; begin dbms_lob.createtemporary(xx, false, 0); :tempblob := xx; end;";  
command.Parameters.Add(new OracleParameter("tempblob", OracleType.Blob)).Direction = ParameterDirection.Output;  
command.ExecuteNonQuery();  
OracleLob tempLob = (OracleLob)command.Parameters[0].Value;  
byte[] tempbuff = new byte[10000];  
tempLob.BeginBatch(OracleLobOpenMode.ReadWrite);  
tempLob.Write(tempbuff,0,tempbuff.Length);  
tempLob.EndBatch();  
command.Parameters.Clear();  
command.CommandText = "MyTable.MyProc";  
command.CommandType = CommandType.StoredProcedure;    
command.Parameters.Add(new OracleParameter("ImportDoc", OracleType.Blob)).Value = tempLob;  
command.ExecuteNonQuery();  
transaction.Commit();  
connection.Close  
```  
  
> [!NOTE]
>  <span data-ttu-id="b3a71-132">继承<xref:System.IO.Stream.WriteByte%2A>时用于字符数据，方法会失败和<xref:System.InvalidOperationException>引发。</span><span class="sxs-lookup"><span data-stu-id="b3a71-132">The inherited <xref:System.IO.Stream.WriteByte%2A> method fails if used with character data, and an <xref:System.InvalidOperationException> is thrown.</span></span> <span data-ttu-id="b3a71-133">请改用 <xref:System.Data.OracleClient.OracleLob.Write%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="b3a71-133">Use the <xref:System.Data.OracleClient.OracleLob.Write%2A> method instead.</span></span>  
>   
>  <span data-ttu-id="b3a71-134">临时`LOB`仅关闭时关闭连接，但进行池和负载情况下，临时`LOB`不会关闭。</span><span class="sxs-lookup"><span data-stu-id="b3a71-134">Temporary `LOB`s are only closed when the connection is closed, but with pooling and under load, temporary `LOB`s do not close.</span></span> <span data-ttu-id="b3a71-135">这可以通过释放临时解决`LOB`，通过调用`tempLob.Dispose()`。</span><span class="sxs-lookup"><span data-stu-id="b3a71-135">This can be resolved by disposing the temporary `LOB`, by invoking `tempLob.Dispose()`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Data.OracleClient.OracleLob source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Data.OracleClient.OracleLob source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (source As OracleLob)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Data::OracleClient::OracleLob ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OracleClient.OracleLob" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b3a71-136">要从其中追加数据的 <see langword="LOB" />。</span><span class="sxs-lookup"><span data-stu-id="b3a71-136">The <see langword="LOB" /> from which to append data.</span></span></param>
        <summary><span data-ttu-id="b3a71-137">将数据从指定的 <see langword="LOB" /> 追加到当前 <see langword="LOB" />。</span><span class="sxs-lookup"><span data-stu-id="b3a71-137">Appends data from the specified <see langword="LOB" /> to the current <see langword="LOB" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3a71-138">要写入到`LOB`，您必须检索`LOB`使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</span><span class="sxs-lookup"><span data-stu-id="b3a71-138">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
 <span data-ttu-id="b3a71-139">来自源的所有数据`LOB`追加到当前末尾`LOB`。</span><span class="sxs-lookup"><span data-stu-id="b3a71-139">All data from the source `LOB` is appended to the end of the current `LOB`.</span></span> <span data-ttu-id="b3a71-140">位置都不`LOB`计算也没有在此过程中更改。</span><span class="sxs-lookup"><span data-stu-id="b3a71-140">The position of neither `LOB` is evaluated or changed during this process.</span></span>  
  
 <span data-ttu-id="b3a71-141">基础数据类型必须始终相同。</span><span class="sxs-lookup"><span data-stu-id="b3a71-141">The underlying data types must always be the same.</span></span> <span data-ttu-id="b3a71-142">例如，如果要将从追加<xref:System.Data.OracleClient.OracleType.NClob>，目标<xref:System.Data.OracleClient.OracleLob>还必须是<xref:System.Data.OracleClient.OracleType.NClob>。</span><span class="sxs-lookup"><span data-stu-id="b3a71-142">For example, if you are appending from an <xref:System.Data.OracleClient.OracleType.NClob>, the destination <xref:System.Data.OracleClient.OracleLob> must also be an <xref:System.Data.OracleClient.OracleType.NClob>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b3a71-143">在此版本中，对只读的写入操作`LOB`可能会成功，但不会更新`LOB`服务器上。</span><span class="sxs-lookup"><span data-stu-id="b3a71-143">In this release, a write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="b3a71-144">在这种情况下，但是的本地副本`LOB`更新。</span><span class="sxs-lookup"><span data-stu-id="b3a71-144">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="b3a71-145">因此，更高版本上读取操作<xref:System.Data.OracleClient.OracleLob>对象可能会返回写入操作的结果。</span><span class="sxs-lookup"><span data-stu-id="b3a71-145">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b3a71-146">源 <see cref="T:System.Data.OracleClient.OracleLob" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="b3a71-146">The source <see cref="T:System.Data.OracleClient.OracleLob" /> is null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3a71-147">源 <see cref="T:System.Data.OracleClient.OracleLob" /> 为 null，或者连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="b3a71-147">The source <see cref="T:System.Data.OracleClient.OracleLob" /> is null, or the connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b3a71-148">源 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="b3a71-148">The source <see cref="T:System.Data.OracleClient.OracleLob" /> object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="b3a71-149">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="b3a71-149">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginBatch">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b3a71-150">在执行多个写操作时避免服务器端触发器激发。</span><span class="sxs-lookup"><span data-stu-id="b3a71-150">Prevents server-side triggers from firing while performing multiple write operations.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginBatch">
      <MemberSignature Language="C#" Value="public void BeginBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.BeginBatch" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginBatch ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginBatch();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3a71-151">在执行多个读操作时避免服务器端触发器激发。</span><span class="sxs-lookup"><span data-stu-id="b3a71-151">Prevents server-side triggers from firing while performing multiple read operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3a71-152">打开`LOB`中<xref:System.Data.OracleClient.OracleLobOpenMode.ReadOnly>模式; 因此，`LOB`可以只从其中读取，不会写入，直到相应地调用<xref:System.Data.OracleClient.OracleLob.EndBatch%2A>。</span><span class="sxs-lookup"><span data-stu-id="b3a71-152">Opens the `LOB` in <xref:System.Data.OracleClient.OracleLobOpenMode.ReadOnly> mode; therefore, the `LOB` can only be read from, not written to, until the corresponding call to <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>.</span></span> <span data-ttu-id="b3a71-153">若要执行批处理写入`LOB`，调用<xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>与<xref:System.Data.OracleClient.OracleLobOpenMode.ReadWrite>。</span><span class="sxs-lookup"><span data-stu-id="b3a71-153">To perform batch writes to the `LOB`, call <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> with <xref:System.Data.OracleClient.OracleLobOpenMode.ReadWrite>.</span></span>  
  
 <span data-ttu-id="b3a71-154">调用<xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>不止一次在同一事务中的当前引发 Oracle"ORA 22293: LOB 同一个事务中已经打开了"错误。</span><span class="sxs-lookup"><span data-stu-id="b3a71-154">Calling <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> more than one time within the same transaction currently throws the Oracle "ORA-22293: LOB already opened in the same transaction" error.</span></span> <span data-ttu-id="b3a71-155">此外，如果你获取`LOB`使用另一个<xref:System.Data.OracleClient.OracleDataReader>，且具有不会调用原始调用方<xref:System.Data.OracleClient.OracleLob.EndBatch%2A>生成方法，相同的错误。</span><span class="sxs-lookup"><span data-stu-id="b3a71-155">In addition, if you obtain the `LOB` using another <xref:System.Data.OracleClient.OracleDataReader>, and the original caller has not called the <xref:System.Data.OracleClient.OracleLob.EndBatch%2A> method, the same error is generated.</span></span> <span data-ttu-id="b3a71-156">因此，必须调用<xref:System.Data.OracleClient.OracleLob.EndBatch%2A>方法完成后使用<xref:System.Data.OracleClient.OracleLob>。</span><span class="sxs-lookup"><span data-stu-id="b3a71-156">Therefore, you must call the <xref:System.Data.OracleClient.OracleLob.EndBatch%2A> method when you are finished using the <xref:System.Data.OracleClient.OracleLob>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3a71-157">连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="b3a71-157">The connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b3a71-158">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="b3a71-158">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="b3a71-159">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="b3a71-159">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginBatch">
      <MemberSignature Language="C#" Value="public void BeginBatch (System.Data.OracleClient.OracleLobOpenMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginBatch(valuetype System.Data.OracleClient.OracleLobOpenMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginBatch (mode As OracleLobOpenMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginBatch(System::Data::OracleClient::OracleLobOpenMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.OracleClient.OracleLobOpenMode" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="b3a71-160">模式（<see cref="T:System.Data.OracleClient.OracleLobOpenMode" /> 值之一），在该模式下，可在此 <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)" /> 调用与对应的 <see cref="M:System.Data.OracleClient.OracleLob.EndBatch" /> 调用之间访问 <see langword="LOB" />。</span><span class="sxs-lookup"><span data-stu-id="b3a71-160">Mode (one of the <see cref="T:System.Data.OracleClient.OracleLobOpenMode" /> values) in which the <see langword="LOB" /> can be accessed between this <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)" /> call and the corresponding <see cref="M:System.Data.OracleClient.OracleLob.EndBatch" /> call.</span></span></param>
        <summary><span data-ttu-id="b3a71-161">在以指定的访问模式执行多个读写操作时避免服务器端触发器激发。</span><span class="sxs-lookup"><span data-stu-id="b3a71-161">Prevents server-side triggers from firing while performing multiple read and write operations in the specified access mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3a71-162">要写入到`LOB`，您必须检索`LOB`使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</span><span class="sxs-lookup"><span data-stu-id="b3a71-162">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
 <span data-ttu-id="b3a71-163">调用<xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>不止一次在同一事务中的当前引发 Oracle"ORA 22293: LOB 同一个事务中已经打开了"错误。</span><span class="sxs-lookup"><span data-stu-id="b3a71-163">Calling <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> more than one time within the same transaction currently throws the Oracle "ORA-22293: LOB already opened in the same transaction" error.</span></span> <span data-ttu-id="b3a71-164">此外，如果你获取`LOB`使用另一个<xref:System.Data.OracleClient.OracleDataReader>，且具有不会调用原始调用方<xref:System.Data.OracleClient.OracleLob.EndBatch%2A>生成方法，相同的错误。</span><span class="sxs-lookup"><span data-stu-id="b3a71-164">In addition, if you obtain the `LOB` using another <xref:System.Data.OracleClient.OracleDataReader>, and the original caller has not called the <xref:System.Data.OracleClient.OracleLob.EndBatch%2A> method, the same error is generated.</span></span> <span data-ttu-id="b3a71-165">因此，必须调用<xref:System.Data.OracleClient.OracleLob.EndBatch%2A>方法完成后使用<xref:System.Data.OracleClient.OracleLob>。</span><span class="sxs-lookup"><span data-stu-id="b3a71-165">Therefore, you must call the <xref:System.Data.OracleClient.OracleLob.EndBatch%2A> method when you are finished using the <xref:System.Data.OracleClient.OracleLob>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3a71-166">连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="b3a71-166">The connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b3a71-167">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="b3a71-167">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="b3a71-168">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="b3a71-168">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3a71-169">获取一个值，该值指示 <see langword="LOB" /> 流是否可读。</span><span class="sxs-lookup"><span data-stu-id="b3a71-169">Gets a value indicating whether the <see langword="LOB" /> stream can be read.</span></span></summary>
        <value>
          <span data-ttu-id="b3a71-170">如果 <see langword="true" /> 流支持读取，则为 <see langword="LOB" />；如果 <see langword="false" /> 已关闭或已释放，则为 <see langword="LOB" />。</span><span class="sxs-lookup"><span data-stu-id="b3a71-170"><see langword="true" /> if the <see langword="LOB" /> stream supports reading, otherwise <see langword="false" /> if a <see langword="LOB" /> is closed or disposed.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3a71-171">获取一个值，该值指示能否执行向前和向后查找操作。</span><span class="sxs-lookup"><span data-stu-id="b3a71-171">Gets a value indicating whether forward and backward seek operations can be performed.</span></span></summary>
        <value>
          <span data-ttu-id="b3a71-172">如果 <see langword="false" /> 已关闭或已释放，则为 <see langword="LOB" />；否则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="b3a71-172"><see langword="false" /> if a <see langword="LOB" /> is closed or disposed, otherwise <see langword="true" />.</span></span> <span data-ttu-id="b3a71-173">对于 <see cref="F:System.Data.OracleClient.OracleLob.Null" />，总是为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="b3a71-173">Always <see langword="true" /> for <see cref="F:System.Data.OracleClient.OracleLob.Null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3a71-174">不管 <see langword="LOB" /> 是否支持写入，始终返回真。</span><span class="sxs-lookup"><span data-stu-id="b3a71-174">Always returns true, regardless of whether the <see langword="LOB" /> supports writing or not.</span></span></summary>
        <value><span data-ttu-id="b3a71-175">不管已打开的或未释放的 <see langword="true" /> 是否支持写入，始终返回 <see langword="LOB" />；如果 <see langword="false" /> 已关闭或已释放，则返回 <see langword="LOB" />。</span><span class="sxs-lookup"><span data-stu-id="b3a71-175">Always returns <see langword="true" />, regardless of whether an opened or undisposed <see langword="LOB" /> supports writing or not, <see langword="false" /> if a <see langword="LOB" /> is closed or disposed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3a71-176">要写入到`LOB`，您必须检索`LOB`使用 FOR UPDATE 子句中的 SQL SELECT 语句，你必须已启动对本地事务。</span><span class="sxs-lookup"><span data-stu-id="b3a71-176">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have started a local transaction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChunkSize">
      <MemberSignature Language="C#" Value="public int ChunkSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChunkSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.ChunkSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChunkSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChunkSize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3a71-177">获取一个值，该值指示读/写操作过程中要从服务器检索或发送到服务器的最小字节数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-177">Gets a value indicating the minimum number of bytes to retrieve from or send to the server during a read/write operation.</span></span></summary>
        <value><span data-ttu-id="b3a71-178">要检索或发送的最小字节数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-178">The minimum number of bytes to retrieve or send.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3a71-179">返回的值<xref:System.Data.OracleClient.OracleLob.ChunkSize%2A>属性不是适用于 Oracle 的.NET Framework 数据提供程序的设置。</span><span class="sxs-lookup"><span data-stu-id="b3a71-179">The value returned by the <xref:System.Data.OracleClient.OracleLob.ChunkSize%2A> property is not a setting of the .NET Framework Data Provider for Oracle.</span></span> <span data-ttu-id="b3a71-180">相反，它是与服务器通信时使用的 Oracle 调用接口 (OCI) 的值。</span><span class="sxs-lookup"><span data-stu-id="b3a71-180">Instead, it is the value that the Oracle Call Interface (OCI) uses when communicating with the server.</span></span> <span data-ttu-id="b3a71-181">使用<xref:System.Data.OracleClient.OracleLob.ChunkSize%2A>以确保客户端块区大小相同。</span><span class="sxs-lookup"><span data-stu-id="b3a71-181">Use <xref:System.Data.OracleClient.OracleLob.ChunkSize%2A> to ensure that client-side chunks are the same size.</span></span> <span data-ttu-id="b3a71-182">读取或写入在较小区块中不会缓存数据，并导致到服务器，无优化往返行程，因为未收到或发送完整的数据包。</span><span class="sxs-lookup"><span data-stu-id="b3a71-182">Reading or writing in smaller chunks does not cache data, and causes a less-optimized round trip to the server, because a full packet is not received or sent.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3a71-183">连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="b3a71-183">The connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b3a71-184">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="b3a71-184">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="b3a71-185">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="b3a71-185">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3a71-186">创建一个新 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象，该对象与原始 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象引用相同的 Oracle <see langword="LOB" />。</span><span class="sxs-lookup"><span data-stu-id="b3a71-186">Creates a new <see cref="T:System.Data.OracleClient.OracleLob" /> object that references the same Oracle <see langword="LOB" /> as the original <see cref="T:System.Data.OracleClient.OracleLob" /> object.</span></span></summary>
        <returns><span data-ttu-id="b3a71-187">一个与原始 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象引用相同 Oracle <see langword="LOB" /> 的新 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b3a71-187">A new <see cref="T:System.Data.OracleClient.OracleLob" /> object that references the same Oracle <see langword="LOB" /> as the original <see cref="T:System.Data.OracleClient.OracleLob" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3a71-188">新属性<xref:System.Data.OracleClient.OracleLob>对象最初具有与原始对象相同的值。</span><span class="sxs-lookup"><span data-stu-id="b3a71-188">The properties of the new <xref:System.Data.OracleClient.OracleLob> object initially have the same values as those of the original object.</span></span> <span data-ttu-id="b3a71-189">但是之后,<xref:System.Data.OracleClient.OracleLob.Clone%2A>已完成，每个<xref:System.Data.OracleClient.OracleLob>对象是相互独立。</span><span class="sxs-lookup"><span data-stu-id="b3a71-189">However, after the <xref:System.Data.OracleClient.OracleLob.Clone%2A> is complete, each <xref:System.Data.OracleClient.OracleLob> object is independent from the other.</span></span> <span data-ttu-id="b3a71-190">例如，更改的值<xref:System.Data.OracleClient.OracleLob.Position%2A>原始属性<xref:System.Data.OracleClient.OracleLob>不会更改的值<xref:System.Data.OracleClient.OracleLob.Position%2A>的副本。</span><span class="sxs-lookup"><span data-stu-id="b3a71-190">For example, changing the value of the <xref:System.Data.OracleClient.OracleLob.Position%2A> property on the original <xref:System.Data.OracleClient.OracleLob> does not change the value of <xref:System.Data.OracleClient.OracleLob.Position%2A> on the copy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3a71-191">连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="b3a71-191">The connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b3a71-192">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="b3a71-192">The object was closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As OracleConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleConnection ^ Connection { System::Data::OracleClient::OracleConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3a71-193">获取由该 <see cref="T:System.Data.OracleClient.OracleConnection" /> 实例使用的 <see cref="T:System.Data.OracleClient.OracleLob" />。</span><span class="sxs-lookup"><span data-stu-id="b3a71-193">Gets the <see cref="T:System.Data.OracleClient.OracleConnection" /> used by this instance of the <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></summary>
        <value><span data-ttu-id="b3a71-194">到数据源的连接。</span><span class="sxs-lookup"><span data-stu-id="b3a71-194">The connection to a data source.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b3a71-195">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="b3a71-195">The object was closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b3a71-196">从该 <see cref="T:System.Data.OracleClient.OracleLob" /> 复制到目标 <see cref="T:System.Data.OracleClient.OracleLob" />。</span><span class="sxs-lookup"><span data-stu-id="b3a71-196">Copies from this <see cref="T:System.Data.OracleClient.OracleLob" /> to a destination <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destination As OracleLob) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(System::Data::OracleClient::OracleLob ^ destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="b3a71-197">目标 <see cref="T:System.Data.OracleClient.OracleLob" />。</span><span class="sxs-lookup"><span data-stu-id="b3a71-197">The destination <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></param>
        <summary><span data-ttu-id="b3a71-198">从该 <see cref="T:System.Data.OracleClient.OracleLob" /> 复制到目标 <see cref="T:System.Data.OracleClient.OracleLob" />。</span><span class="sxs-lookup"><span data-stu-id="b3a71-198">Copies from this <see cref="T:System.Data.OracleClient.OracleLob" /> to a destination <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></summary>
        <returns><span data-ttu-id="b3a71-199">已复制的字节数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-199">The number of bytes copied.</span></span> <span data-ttu-id="b3a71-200">这排除了所有已填充的字节。</span><span class="sxs-lookup"><span data-stu-id="b3a71-200">This excludes any padded bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3a71-201">基础数据类型必须始终相同。</span><span class="sxs-lookup"><span data-stu-id="b3a71-201">The underlying data types must always be the same.</span></span> <span data-ttu-id="b3a71-202">例如，如果要复制的源<xref:System.Data.OracleClient.OracleType.NClob>，目标<xref:System.Data.OracleClient.OracleLob>还必须是<xref:System.Data.OracleClient.OracleType.NClob>。</span><span class="sxs-lookup"><span data-stu-id="b3a71-202">For example, if you are copying from an <xref:System.Data.OracleClient.OracleType.NClob>, the destination <xref:System.Data.OracleClient.OracleLob> must also be an <xref:System.Data.OracleClient.OracleType.NClob>.</span></span>  
  
 <span data-ttu-id="b3a71-203">目标偏移量是否超出目标末尾`LOB`、`LOB`扩展到其中复制数据。</span><span class="sxs-lookup"><span data-stu-id="b3a71-203">If the destination offset is beyond the end of destination `LOB`, the `LOB` to which the data is being copied is extended.</span></span> <span data-ttu-id="b3a71-204">末尾之间的空间`LOB`和超出末尾位置的目标偏移量则用零填充`BLOB`数据类型，以空格`CLOB`和`NCLOB`数据类型。</span><span class="sxs-lookup"><span data-stu-id="b3a71-204">The space between the end of the `LOB` and the destination offset beyond the end is padded with zeros for `BLOB` data types and spaces for `CLOB` and `NCLOB` data types.</span></span>  
  
 <span data-ttu-id="b3a71-205">要写入到`LOB`，您必须检索`LOB`使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</span><span class="sxs-lookup"><span data-stu-id="b3a71-205">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b3a71-206">在此版本中，对只读的写入操作`LOB`可能成功，但不是更新`LOB`服务器上。</span><span class="sxs-lookup"><span data-stu-id="b3a71-206">In this release, a write operation to a read-only `LOB` might succeed, but not update the `LOB` on the server.</span></span> <span data-ttu-id="b3a71-207">在这种情况下，但是的本地副本`LOB`将更新。</span><span class="sxs-lookup"><span data-stu-id="b3a71-207">In this case, however, the local copy of the `LOB` will be updated.</span></span> <span data-ttu-id="b3a71-208">因此，更高版本上读取操作<xref:System.Data.OracleClient.OracleLob>对象可能会返回写入操作的结果。</span><span class="sxs-lookup"><span data-stu-id="b3a71-208">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
>   
>  <span data-ttu-id="b3a71-209">`CopyTo`方法并不会清除目标的内容`OracleLob`之前执行复制操作。</span><span class="sxs-lookup"><span data-stu-id="b3a71-209">The `CopyTo` method does not clear the contents of the destination `OracleLob` before performing the copy operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b3a71-210"><paramref name="destination" /> 参数中指定的 <see cref="T:System.Data.OracleClient.OracleLob" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="b3a71-210">The <see cref="T:System.Data.OracleClient.OracleLob" /> specified in the <paramref name="destination" /> parameter is null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3a71-211">该操作未处在事务中，<see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或者连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="b3a71-211">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="b3a71-212">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="b3a71-212">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination, int64 destinationOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destination As OracleLob, destinationOffset As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(System::Data::OracleClient::OracleLob ^ destination, long destinationOffset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="b3a71-213">目标 <see cref="T:System.Data.OracleClient.OracleLob" />。</span><span class="sxs-lookup"><span data-stu-id="b3a71-213">The destination <see cref="T:System.Data.OracleClient.OracleLob" /></span></span></param>
        <param name="destinationOffset"><span data-ttu-id="b3a71-214">要复制到的偏移量。</span><span class="sxs-lookup"><span data-stu-id="b3a71-214">The offset to which to copy.</span></span> <span data-ttu-id="b3a71-215">对于 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，它必须为偶数字节数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-215">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number of bytes.</span></span></param>
        <summary><span data-ttu-id="b3a71-216">将指定数量的数据从该 <see cref="T:System.Data.OracleClient.OracleLob" /> 复制到目标 <see cref="T:System.Data.OracleClient.OracleLob" />。</span><span class="sxs-lookup"><span data-stu-id="b3a71-216">Copies from this <see cref="T:System.Data.OracleClient.OracleLob" /> to a destination <see cref="T:System.Data.OracleClient.OracleLob" /> with the specified amount of data.</span></span></summary>
        <returns><span data-ttu-id="b3a71-217">已复制的字节数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-217">The number of bytes copied.</span></span> <span data-ttu-id="b3a71-218">这排除了所有已填充的字节。</span><span class="sxs-lookup"><span data-stu-id="b3a71-218">This excludes any padded bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3a71-219">基础数据类型必须始终相同。</span><span class="sxs-lookup"><span data-stu-id="b3a71-219">The underlying data types must always be the same.</span></span> <span data-ttu-id="b3a71-220">例如，如果要复制的源<xref:System.Data.OracleClient.OracleType.NClob>，目标<xref:System.Data.OracleClient.OracleLob>还必须是<xref:System.Data.OracleClient.OracleType.NClob>。</span><span class="sxs-lookup"><span data-stu-id="b3a71-220">For example, if you are copying from an <xref:System.Data.OracleClient.OracleType.NClob>, the destination <xref:System.Data.OracleClient.OracleLob> must also be an <xref:System.Data.OracleClient.OracleType.NClob>.</span></span>  
  
 <span data-ttu-id="b3a71-221">目标偏移量是否超出目标末尾`LOB`、`LOB`扩展到其中复制数据。</span><span class="sxs-lookup"><span data-stu-id="b3a71-221">If the destination offset is beyond the end of destination `LOB`, the `LOB` to which the data is being copied is extended.</span></span> <span data-ttu-id="b3a71-222">末尾之间的空间`LOB`和目标超出末尾位置的偏移量则用零填充`BLOB`数据类型，以空格`CLOB`和`NCLOB`数据类型。</span><span class="sxs-lookup"><span data-stu-id="b3a71-222">The space between the end of `LOB` and destination offset beyond the end is padded with zeros for `BLOB` data types and spaces for `CLOB` and `NCLOB` data types.</span></span>  
  
 <span data-ttu-id="b3a71-223">要写入到`LOB`，您必须检索`LOB`使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</span><span class="sxs-lookup"><span data-stu-id="b3a71-223">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b3a71-224">在此版本中，对只读的写入操作`LOB`可能会成功，但不会更新`LOB`服务器上。</span><span class="sxs-lookup"><span data-stu-id="b3a71-224">In this release, a write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="b3a71-225">在这种情况下，但是的本地副本`LOB`更新。</span><span class="sxs-lookup"><span data-stu-id="b3a71-225">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="b3a71-226">因此，更高版本上读取操作<xref:System.Data.OracleClient.OracleLob>对象可能会返回写入操作的结果。</span><span class="sxs-lookup"><span data-stu-id="b3a71-226">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
>   
>  <span data-ttu-id="b3a71-227">`CopyTo`方法并不会清除目标的内容`OracleLob`之前执行复制操作。</span><span class="sxs-lookup"><span data-stu-id="b3a71-227">The `CopyTo` method does not clear the contents of the destination `OracleLob` before performing the copy operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b3a71-228"><paramref name="destination" /> 参数中指定的 <see cref="T:System.Data.OracleClient.OracleLob" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="b3a71-228">The <see cref="T:System.Data.OracleClient.OracleLob" /> specified in the <paramref name="destination" /> parameter is full.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b3a71-229"><paramref name="destinationOffset" /> 参数中指定的值小于零，或大于 4 GB。</span><span class="sxs-lookup"><span data-stu-id="b3a71-229">A value specified in the <paramref name="destinationOffset" /> parameter is less than zero or greater than 4 gigabytes.</span></span>  
  
 <span data-ttu-id="b3a71-230">或</span><span class="sxs-lookup"><span data-stu-id="b3a71-230">-or-</span></span>  
  
 <span data-ttu-id="b3a71-231"><paramref name="destinationOffset" /> 参数中为 <see langword="CLOB" /> 或 <see langword="NCLOB" /> 数据类型指定的值不是偶数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-231">A value specified in the <paramref name="destinationOffset" /> parameter for a <see langword="CLOB" /> or <see langword="NCLOB" /> data type is not even.</span></span>  
  
 <span data-ttu-id="b3a71-232">或</span><span class="sxs-lookup"><span data-stu-id="b3a71-232">-or-</span></span>  
  
 <span data-ttu-id="b3a71-233">必须将 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型指定为偶数字节数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-233">You must specify <see langword="CLOB" /> and <see langword="NCLOB" /> data types as an even number of bytes.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3a71-234">该操作未处在事务中，<see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或者连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="b3a71-234">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="b3a71-235">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="b3a71-235">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(int64 sourceOffset, class System.Data.OracleClient.OracleLob destination, int64 destinationOffset, int64 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (sourceOffset As Long, destination As OracleLob, destinationOffset As Long, amount As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(long sourceOffset, System::Data::OracleClient::OracleLob ^ destination, long destinationOffset, long amount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceOffset" Type="System.Int64" />
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
        <Parameter Name="amount" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="sourceOffset"><span data-ttu-id="b3a71-236">要从中复制的偏移量。</span><span class="sxs-lookup"><span data-stu-id="b3a71-236">The offset from which to copy.</span></span> <span data-ttu-id="b3a71-237">对于 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，它必须为偶数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-237">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <param name="destination"><span data-ttu-id="b3a71-238">目标 <see langword="OracleLob" /><see cref="N:System.Data.OracleClient" />。</span><span class="sxs-lookup"><span data-stu-id="b3a71-238">The destination <see langword="OracleLob" /><see cref="N:System.Data.OracleClient" />.</span></span></param>
        <param name="destinationOffset"><span data-ttu-id="b3a71-239">要复制到的目标偏移量。</span><span class="sxs-lookup"><span data-stu-id="b3a71-239">The destination offset to which to copy.</span></span> <span data-ttu-id="b3a71-240">对于 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，它必须为偶数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-240">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <param name="amount"><span data-ttu-id="b3a71-241">要复制的数据数量（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="b3a71-241">The quantity of data, in bytes, to copy.</span></span> <span data-ttu-id="b3a71-242">对于 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，它必须为偶数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-242">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <summary><span data-ttu-id="b3a71-243">使用该源偏移量将指定数量的数据从该 <see cref="T:System.Data.OracleClient.OracleLob" /> 复制到目标 <see cref="T:System.Data.OracleClient.OracleLob" />。</span><span class="sxs-lookup"><span data-stu-id="b3a71-243">Copies from this <see cref="T:System.Data.OracleClient.OracleLob" /> to a destination <see cref="T:System.Data.OracleClient.OracleLob" /> with the specified amount of data, and the source offset.</span></span></summary>
        <returns><span data-ttu-id="b3a71-244">已复制的字节数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-244">The number of bytes copied.</span></span> <span data-ttu-id="b3a71-245">这排除了所有已填充的字节。</span><span class="sxs-lookup"><span data-stu-id="b3a71-245">This excludes any padded bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3a71-246">基础数据类型必须始终相同。</span><span class="sxs-lookup"><span data-stu-id="b3a71-246">The underlying data types must always be the same.</span></span> <span data-ttu-id="b3a71-247">例如，如果要复制的源<xref:System.Data.OracleClient.OracleType.NClob>，目标<xref:System.Data.OracleClient.OracleLob>还必须是<xref:System.Data.OracleClient.OracleType.NClob>。</span><span class="sxs-lookup"><span data-stu-id="b3a71-247">For example, if you are copying from an <xref:System.Data.OracleClient.OracleType.NClob>, the destination <xref:System.Data.OracleClient.OracleLob> must also be an <xref:System.Data.OracleClient.OracleType.NClob>.</span></span>  
  
 <span data-ttu-id="b3a71-248">目标偏移量是否超出目标末尾`LOB`、`LOB`扩展到其中复制数据。</span><span class="sxs-lookup"><span data-stu-id="b3a71-248">If the destination offset is beyond the end of destination `LOB`, the `LOB` to which the data is being copied is extended.</span></span> <span data-ttu-id="b3a71-249">末尾之间的空间`LOB`和目标超出末尾位置的偏移量则用零填充`BLOB`数据类型，以空格`CLOB`和`NCLOB`数据类型。</span><span class="sxs-lookup"><span data-stu-id="b3a71-249">The space between the end of `LOB` and destination offset beyond the end is padded with zeros for `BLOB` data types and spaces for `CLOB` and `NCLOB` data types.</span></span>  
  
 <span data-ttu-id="b3a71-250">要写入到`LOB`，您必须检索`LOB`使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</span><span class="sxs-lookup"><span data-stu-id="b3a71-250">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b3a71-251">在此版本中，对只读的写入操作`LOB`可能会成功，但不会更新`LOB`服务器上。</span><span class="sxs-lookup"><span data-stu-id="b3a71-251">In this release, a write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="b3a71-252">在这种情况下，但是的本地副本`LOB`更新。</span><span class="sxs-lookup"><span data-stu-id="b3a71-252">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="b3a71-253">因此，更高版本上读取操作<xref:System.Data.OracleClient.OracleLob>对象可能会返回写入操作的结果。</span><span class="sxs-lookup"><span data-stu-id="b3a71-253">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
>   
>  <span data-ttu-id="b3a71-254">`CopyTo`方法并不会清除目标的内容`OracleLob`之前执行复制操作。</span><span class="sxs-lookup"><span data-stu-id="b3a71-254">The `CopyTo` method does not clear the contents of the destination `OracleLob` before performing the copy operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b3a71-255"><paramref name="destination" /> 参数中指定的 <see cref="T:System.Data.OracleClient.OracleLob" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="b3a71-255">The <see cref="T:System.Data.OracleClient.OracleLob" /> specified in the <paramref name="destination" /> parameter is full.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b3a71-256"><paramref name="amount" />、<paramref name="sourceOffset" /> 或 <paramref name="destinationOffset" /> 参数中指定的值小于零，或大于 4 GB。</span><span class="sxs-lookup"><span data-stu-id="b3a71-256">A value specified in the <paramref name="amount" />, <paramref name="sourceOffset" />, or <paramref name="destinationOffset" /> parameter is less than zero or greater than 4 gigabytes.</span></span>  
  
 <span data-ttu-id="b3a71-257">或</span><span class="sxs-lookup"><span data-stu-id="b3a71-257">-or-</span></span>  
  
 <span data-ttu-id="b3a71-258">在 <paramref name="amount" />、<paramref name="sourceOffset" /> 或 <paramref name="destinationOffset" /> 参数中为 <see langword="CLOB" /> 或 <see langword="NCLOB" /> 数据类型指定的值不是偶数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-258">A value specified in the <paramref name="amount" />, <paramref name="sourceOffset" />, or <paramref name="destinationOffset" /> parameter for a <see langword="CLOB" /> or <see langword="NCLOB" /> data type is not even.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3a71-259">该操作未处在事务中，<see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或者连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="b3a71-259">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="b3a71-260">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="b3a71-260">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndBatch">
      <MemberSignature Language="C#" Value="public void EndBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.EndBatch" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndBatch ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndBatch();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3a71-261">允许服务器端触发器在执行多个写入操作之后继续激发。</span><span class="sxs-lookup"><span data-stu-id="b3a71-261">Allows server-side triggers to resume firing after performing multiple write operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3a71-262">调用<xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>方法开始执行之前在写入操作<xref:System.Data.OracleClient.OracleLob>。</span><span class="sxs-lookup"><span data-stu-id="b3a71-262">Call the <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> method before you begin performing write operations on the <xref:System.Data.OracleClient.OracleLob>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3a71-263">连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="b3a71-263">The connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b3a71-264">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="b3a71-264">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="b3a71-265">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="b3a71-265">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Erase">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b3a71-266">从该 <see cref="T:System.Data.OracleClient.OracleLob" /> 清除数据。</span><span class="sxs-lookup"><span data-stu-id="b3a71-266">Erases data from this <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Erase">
      <MemberSignature Language="C#" Value="public long Erase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 Erase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Erase" />
      <MemberSignature Language="VB.NET" Value="Public Function Erase () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long Erase();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3a71-267">从该 <see cref="T:System.Data.OracleClient.OracleLob" /> 清除所有数据。</span><span class="sxs-lookup"><span data-stu-id="b3a71-267">Erases all data from this <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></summary>
        <returns><span data-ttu-id="b3a71-268">清除的字节数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-268">The number of bytes erased.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3a71-269"><xref:System.Data.OracleClient.OracleLob.Erase%2A> 不会不会截断数据。</span><span class="sxs-lookup"><span data-stu-id="b3a71-269"><xref:System.Data.OracleClient.OracleLob.Erase%2A> does not truncate data.</span></span> <span data-ttu-id="b3a71-270">`LOB`长度保持不变的`BLOB`数据类型和清除的数据替换为 0x00。</span><span class="sxs-lookup"><span data-stu-id="b3a71-270">The `LOB` length remains the same for a `BLOB` data type, and the erased data is replaced by 0x00.</span></span> <span data-ttu-id="b3a71-271">`CLOB` 和`NCLOB`数据类型替换为空格。</span><span class="sxs-lookup"><span data-stu-id="b3a71-271">`CLOB` and `NCLOB` data types are replaced by spaces.</span></span>  
  
 <span data-ttu-id="b3a71-272">要写入到`LOB`，您必须检索`LOB`使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</span><span class="sxs-lookup"><span data-stu-id="b3a71-272">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b3a71-273">在此版本中，对只读的写入操作`LOB`可能会成功，但不会更新`LOB`服务器上。</span><span class="sxs-lookup"><span data-stu-id="b3a71-273">In this release, a write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="b3a71-274">在这种情况下，但是的本地副本`LOB`更新。</span><span class="sxs-lookup"><span data-stu-id="b3a71-274">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="b3a71-275">因此，更高版本上读取操作<xref:System.Data.OracleClient.OracleLob>对象可能会返回写入操作的结果。</span><span class="sxs-lookup"><span data-stu-id="b3a71-275">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3a71-276">该操作未处在事务中，<see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或者连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="b3a71-276">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b3a71-277">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="b3a71-277">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="b3a71-278">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="b3a71-278">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Erase">
      <MemberSignature Language="C#" Value="public long Erase (long offset, long amount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 Erase(int64 offset, int64 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Erase (offset As Long, amount As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long Erase(long offset, long amount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="amount" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="b3a71-279">要从中清除的偏移量。</span><span class="sxs-lookup"><span data-stu-id="b3a71-279">The offset from which to erase.</span></span> <span data-ttu-id="b3a71-280">对于 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，它必须为偶数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-280">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <param name="amount"><span data-ttu-id="b3a71-281">要清除的数据数量（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="b3a71-281">The quantity of data, in bytes, to erase.</span></span> <span data-ttu-id="b3a71-282">对于 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，它必须为偶数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-282">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <summary><span data-ttu-id="b3a71-283">从该 <see cref="T:System.Data.OracleClient.OracleLob" /> 清除指定数量的数据。</span><span class="sxs-lookup"><span data-stu-id="b3a71-283">Erases the specified amount of data from this <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></summary>
        <returns><span data-ttu-id="b3a71-284">清除的字节数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-284">The number of bytes erased.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3a71-285">中的值的总和`offset`和`amount`参数可以是大于的大小<xref:System.Data.OracleClient.OracleLob>。</span><span class="sxs-lookup"><span data-stu-id="b3a71-285">The sum of the values in the `offset` and `amount` parameters can be greater than that of the size of the <xref:System.Data.OracleClient.OracleLob>.</span></span> <span data-ttu-id="b3a71-286">因此，指定的值比返回大<xref:System.Data.OracleClient.OracleLob.Length%2A>属性成功; 但是<xref:System.Data.OracleClient.OracleLob.Erase%2A>仅清除到末尾<xref:System.Data.OracleClient.OracleLob>。</span><span class="sxs-lookup"><span data-stu-id="b3a71-286">Therefore, specifying a value greater than that returned by the <xref:System.Data.OracleClient.OracleLob.Length%2A> property succeeds; however <xref:System.Data.OracleClient.OracleLob.Erase%2A> only erases to the end of the <xref:System.Data.OracleClient.OracleLob>.</span></span> <span data-ttu-id="b3a71-287">(同样，如果传递给负值`offset`，<xref:System.Data.OracleClient.OracleLob.Erase%2A>将成功，但从的开头开始，才清除<xref:System.Data.OracleClient.OracleLob>。)此行为是不同的<xref:System.Data.OracleClient.OracleLob.Read%2A>和<xref:System.Data.OracleClient.OracleLob.Write%2A>方法和产品/服务的优势在于能够擦除所有数据值指定`offset`而不对其他往返进行服务器验证的实际大小。</span><span class="sxs-lookup"><span data-stu-id="b3a71-287">(Similarly, if a negative value is passed to `offset`, <xref:System.Data.OracleClient.OracleLob.Erase%2A> will succeed, but only erase starting from the beginning of the <xref:System.Data.OracleClient.OracleLob>.) This behavior is different from that of the <xref:System.Data.OracleClient.OracleLob.Read%2A> and <xref:System.Data.OracleClient.OracleLob.Write%2A> methods, and offers the advantage of being able to erase all data from the value specified by `offset` without making an additional roundtrip to the server to verify the actual size.</span></span>  
  
 <span data-ttu-id="b3a71-288"><xref:System.Data.OracleClient.OracleLob.Erase%2A> 不会不会截断数据。</span><span class="sxs-lookup"><span data-stu-id="b3a71-288"><xref:System.Data.OracleClient.OracleLob.Erase%2A> does not truncate data.</span></span> <span data-ttu-id="b3a71-289">`LOB`长度保持不变的`BLOB`数据类型和清除的数据替换为 0x00。</span><span class="sxs-lookup"><span data-stu-id="b3a71-289">The `LOB` length remains the same for a `BLOB` data type, and the erased data is replaced by 0x00.</span></span> <span data-ttu-id="b3a71-290">`CLOB` 和`NCLOB`数据类型替换为空格。</span><span class="sxs-lookup"><span data-stu-id="b3a71-290">`CLOB` and `NCLOB` data types are replaced by spaces.</span></span>  
  
 <span data-ttu-id="b3a71-291">要写入到`LOB`，您必须检索`LOB`使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</span><span class="sxs-lookup"><span data-stu-id="b3a71-291">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b3a71-292">在此版本中，对只读的写入操作`LOB`可能会成功，但不会更新`LOB`服务器上。</span><span class="sxs-lookup"><span data-stu-id="b3a71-292">In this release, a write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="b3a71-293">在这种情况下，但是的本地副本`LOB`更新。</span><span class="sxs-lookup"><span data-stu-id="b3a71-293">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="b3a71-294">因此，更高版本上读取操作<xref:System.Data.OracleClient.OracleLob>对象可能会返回写入操作的结果。</span><span class="sxs-lookup"><span data-stu-id="b3a71-294">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3a71-295">该操作未处在事务中，<see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或者连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="b3a71-295">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b3a71-296">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="b3a71-296">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="b3a71-297">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="b3a71-297">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3a71-298">目前尚不支持。</span><span class="sxs-lookup"><span data-stu-id="b3a71-298">Not currently supported.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3a71-299">在此版本中，此方法不起作用。</span><span class="sxs-lookup"><span data-stu-id="b3a71-299">In this release, this method is not functional.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBatched">
      <MemberSignature Language="C#" Value="public bool IsBatched { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBatched" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.IsBatched" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBatched As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBatched { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3a71-300">获取一个值，该值指示应用程序是否调用了 <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="b3a71-300">Gets a value indicating whether an application called the <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /> method.</span></span></summary>
        <value>
          <span data-ttu-id="b3a71-301">如果应用程序调用了 <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /> 方法，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b3a71-301"><see langword="true" /> if application called the <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /> method, otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3a71-302">当使用 Oracle 8.0.5 服务器，Oracle"ORA 00600： 内部错误代码"会引发异常。</span><span class="sxs-lookup"><span data-stu-id="b3a71-302">When using an Oracle 8.0.5 server, an Oracle "ORA-00600: internal error code" exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="b3a71-303">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="b3a71-303">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.IsNull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNull { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.SqlTypes.INullable.IsNull</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3a71-304">获取一个值，该值指示 <see cref="T:System.Data.OracleClient.OracleLob" /> 是否为一个 <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> 流。</span><span class="sxs-lookup"><span data-stu-id="b3a71-304">Gets a value that indicates whether the <see cref="T:System.Data.OracleClient.OracleLob" /> is a <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> stream.</span></span></summary>
        <value>
          <span data-ttu-id="b3a71-305">如果 <see cref="T:System.Data.OracleClient.OracleLob" /> 是 <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> 流，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b3a71-305"><see langword="true" /> if the <see cref="T:System.Data.OracleClient.OracleLob" /> is a <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> stream, otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTemporary">
      <MemberSignature Language="C#" Value="public bool IsTemporary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTemporary" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.IsTemporary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTemporary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTemporary { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3a71-306">获取一个值，该值指示 <see cref="T:System.Data.OracleClient.OracleLob" /> 是否为临时 <see langword="LOB" />。</span><span class="sxs-lookup"><span data-stu-id="b3a71-306">Gets a value indicating whether the <see cref="T:System.Data.OracleClient.OracleLob" /> is a temporary <see langword="LOB" />.</span></span></summary>
        <value>
          <span data-ttu-id="b3a71-307">如果 <see cref="T:System.Data.OracleClient.OracleLob" /> 是临时 <see langword="true" />，则为 <see langword="LOB" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b3a71-307"><see langword="true" /> if the <see cref="T:System.Data.OracleClient.OracleLob" /> is a temporary <see langword="LOB" />, otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3a71-308">下面的示例演示如何创建一个临时`LOB`。</span><span class="sxs-lookup"><span data-stu-id="b3a71-308">The following example demonstrates how to create a temporary `LOB`.</span></span>  
  
```  
OracleConnection connection = new OracleConnection("server=MyServer; integrated security=yes;");  
connection.Open();  
OracleTransaction transaction = connection.BeginTransaction();  
OracleCommand command = connection.CreateCommand();  
command.Transaction = transaction;  
command.CommandText = "declare xx blob; begin dbms_lob.createtemporary(xx, false, 0); :tempblob := xx; end;";  
command.Parameters.Add(new OracleParameter("tempblob", OracleType.Blob)).Direction = ParameterDirection.Output;  
command.ExecuteNonQuery();  
OracleLob tempLob = (OracleLob)command.Parameters[0].Value;  
tempLob.BeginBatch(OracleLobOpenMode.ReadWrite);  
tempLob.Write(tempbuff,0,tempbuff.Length);  
tempLob.EndBatch();  
command.Parameters.Clear();  
command.CommandText = "MyTable.MyProc";  
command.CommandType = CommandType.StoredProcedure;    
command.Parameters.Add(new OracleParameter("ImportDoc", OracleType.Blob)).Value = tempLob;  
command.ExecuteNonQuery();  
transaction.Commit();  
connection.Close  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3a71-309">连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="b3a71-309">The connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b3a71-310">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="b3a71-310">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="b3a71-311">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="b3a71-311">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3a71-312">获取一个值，该值返回 <see cref="T:System.Data.OracleClient.OracleLob" /> 的大小。</span><span class="sxs-lookup"><span data-stu-id="b3a71-312">Gets a value that returns the size of the <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></summary>
        <value><span data-ttu-id="b3a71-313"><see cref="T:System.Data.OracleClient.OracleLob" /> 的大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="b3a71-313">The size of the <see cref="T:System.Data.OracleClient.OracleLob" /> in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3a71-314">大小<xref:System.Data.OracleClient.OracleLob>始终返回以字节为单位的所有数据。</span><span class="sxs-lookup"><span data-stu-id="b3a71-314">The size of the <xref:System.Data.OracleClient.OracleLob> is always returned in bytes for all data types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3a71-315">连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="b3a71-315">The connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b3a71-316">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="b3a71-316">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="b3a71-317">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="b3a71-317">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LobType">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleType LobType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.OracleClient.OracleType LobType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.LobType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LobType As OracleType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleType LobType { System::Data::OracleClient::OracleType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3a71-318">获取一个值，该值返回 <see langword="LOB" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="b3a71-318">Gets a value that returns the <see langword="LOB" /> data type.</span></span></summary>
        <value><span data-ttu-id="b3a71-319">之一<see cref="T:System.Data.OracleClient.OracleType" /><see langword="LOB" />数据类型。</span><span class="sxs-lookup"><span data-stu-id="b3a71-319">One of the <see cref="T:System.Data.OracleClient.OracleType" /><see langword="LOB" /> data types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3a71-320"><xref:System.Data.OracleClient.OracleLob>可能是下列项之一<xref:System.Data.OracleClient.OracleType>数据类型。</span><span class="sxs-lookup"><span data-stu-id="b3a71-320">An <xref:System.Data.OracleClient.OracleLob> may be one of the following <xref:System.Data.OracleClient.OracleType> data types.</span></span>  
  
|<span data-ttu-id="b3a71-321">OracleType 数据类型</span><span class="sxs-lookup"><span data-stu-id="b3a71-321">OracleType data type</span></span>|<span data-ttu-id="b3a71-322">描述</span><span class="sxs-lookup"><span data-stu-id="b3a71-322">Description</span></span>|  
|--------------------------|-----------------|  
|`Blob`|<span data-ttu-id="b3a71-323">包含二进制数据的 Oracle `BLOB` 数据类型，其最大大小为 4 GB。</span><span class="sxs-lookup"><span data-stu-id="b3a71-323">An Oracle `BLOB` data type that contains binary data with a maximum size of 4 gigabytes.</span></span> <span data-ttu-id="b3a71-324">它映射到 <xref:System.Array> 类型的 <xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="b3a71-324">This maps to an <xref:System.Array> of type <xref:System.Byte>.</span></span>|  
|`Clob`|<span data-ttu-id="b3a71-325">包含字符数据的 Oracle `CLOB` 数据类型，根据服务器的默认字符集，其最大大小为 4 GB。</span><span class="sxs-lookup"><span data-stu-id="b3a71-325">An Oracle `CLOB` data type that contains character data, based on the default character set on the server, with a maximum size of 4 gigabytes.</span></span> <span data-ttu-id="b3a71-326">它映射到 <xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="b3a71-326">This maps to <xref:System.String>.</span></span>|  
|`NClob`|<span data-ttu-id="b3a71-327">Oracle`NCLOB`基于最大大小为 4 千兆字节在服务器上的区域字符集包含字符数据的数据类型。</span><span class="sxs-lookup"><span data-stu-id="b3a71-327">An Oracle `NCLOB` data type that contains character data, based on the national character set on the server with a maximum size of 4 gigabytes.</span></span> <span data-ttu-id="b3a71-328">它映射到 <xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="b3a71-328">This maps to <xref:System.String>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.Data.OracleClient.OracleLob Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.OracleClient.OracleLob Null" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleLob.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As OracleLob " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::OracleClient::OracleLob ^ Null;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleLob</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3a71-329">表示一个 null <see cref="T:System.Data.OracleClient.OracleLob" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b3a71-329">Represents a null <see cref="T:System.Data.OracleClient.OracleLob" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3a71-330">您可以构造<xref:System.Data.OracleClient.OracleLob>值为 NULL，使用此格式：</span><span class="sxs-lookup"><span data-stu-id="b3a71-330">You can construct an <xref:System.Data.OracleClient.OracleLob> that is NULL using this format:</span></span>  
  
```  
OracleLob myLob = OracleLOB.Null;  
```  
  
 <span data-ttu-id="b3a71-331">此方法主要用于测试是否`LOB`从服务器返回为 NULL，如本示例所示：</span><span class="sxs-lookup"><span data-stu-id="b3a71-331">This technique is used primarily to test whether a `LOB` returned from the server is NULL, as this example illustrates:</span></span>  
  
```  
If(myLob == OracleLob.Null)  
```  
  
 <span data-ttu-id="b3a71-332">NULL`LOB`的行为类似于零字节`LOB`在于<xref:System.Data.OracleClient.OracleLob.Read%2A>成功并始终返回零字节。</span><span class="sxs-lookup"><span data-stu-id="b3a71-332">A NULL `LOB` behaves similarly to a zero byte `LOB` in that <xref:System.Data.OracleClient.OracleLob.Read%2A> succeeds and always returns zero bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3a71-333">获取 <see cref="T:System.Data.OracleClient.OracleLob" /> 流中的当前读取位置。</span><span class="sxs-lookup"><span data-stu-id="b3a71-333">Gets the current read position in the <see cref="T:System.Data.OracleClient.OracleLob" /> stream.</span></span></summary>
        <value><span data-ttu-id="b3a71-334"><see cref="T:System.Data.OracleClient.OracleLob" /> 流中的当前位置。</span><span class="sxs-lookup"><span data-stu-id="b3a71-334">The current position within the <see cref="T:System.Data.OracleClient.OracleLob" /> stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3a71-335">流必须支持查找要获取或设置位置。</span><span class="sxs-lookup"><span data-stu-id="b3a71-335">The stream must support seeking to get or set the position.</span></span> <span data-ttu-id="b3a71-336">使用<xref:System.Data.OracleClient.OracleLob.CanSeek%2A>属性以确定流是否支持查找。</span><span class="sxs-lookup"><span data-stu-id="b3a71-336">Use the <xref:System.Data.OracleClient.OracleLob.CanSeek%2A> property to determine whether the stream supports seeking.</span></span>  
  
 <span data-ttu-id="b3a71-337">支持查找到流的长度超出任何位置。</span><span class="sxs-lookup"><span data-stu-id="b3a71-337">Seeking to any location beyond the length of the stream is supported.</span></span> <span data-ttu-id="b3a71-338">查找到的奇数位置`CLOB`和`NCLOB`还支持数据类型。</span><span class="sxs-lookup"><span data-stu-id="b3a71-338">Seeking to an odd position for `CLOB` and `NCLOB` data types is also supported.</span></span> <span data-ttu-id="b3a71-339">有关详细信息，请参阅备注部分的<xref:System.Data.OracleClient.OracleLob.Read%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b3a71-339">For more information, see the Remarks section of the <xref:System.Data.OracleClient.OracleLob.Read%2A> property.</span></span>  
  
 <span data-ttu-id="b3a71-340"><xref:System.Data.OracleClient.OracleLob.Position%2A>属性不会不跟踪的从和 / 或已用完，跳过，流的字节数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-340">The <xref:System.Data.OracleClient.OracleLob.Position%2A> property does not keep track of the number of bytes from the stream that have been consumed, skipped, or both.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3a71-341">连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="b3a71-341">The connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b3a71-342">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="b3a71-342">The object was closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="b3a71-343">字节数组。</span><span class="sxs-lookup"><span data-stu-id="b3a71-343">An array of bytes.</span></span> <span data-ttu-id="b3a71-344">此方法返回时，该缓冲区包含指定的字节数组，该数组的 <c>offset</c> 和 (<c>offset</c> + <c>count</c>) 之间的值由从当前源中读取的字节替换。</span><span class="sxs-lookup"><span data-stu-id="b3a71-344">When this method returns, the buffer contains the specified byte array with the values between <c>offset</c> and (<c>offset</c> + <c>count</c>) replaced by the bytes read from the current source.</span></span></param>
        <param name="offset"><span data-ttu-id="b3a71-345"><c>buffer</c> 中从零开始的字节偏移量，从此处开始存储从当前流中读取的数据。</span><span class="sxs-lookup"><span data-stu-id="b3a71-345">The zero-based byte offset in <c>buffer</c> at which to begin storing the data read from the current stream.</span></span> <span data-ttu-id="b3a71-346">对于 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，它必须为偶数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-346">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <param name="count"><span data-ttu-id="b3a71-347">要从当前流中最多读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-347">The maximum number of bytes to be read from the current stream.</span></span> <span data-ttu-id="b3a71-348">对于 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，它必须为偶数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-348">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <summary><span data-ttu-id="b3a71-349">从当前 <see cref="T:System.Data.OracleClient.OracleLob" /> 流中读取字节序列，并在该流中按照读取的字节数提升位置。</span><span class="sxs-lookup"><span data-stu-id="b3a71-349">Reads a sequence of bytes from the current <see cref="T:System.Data.OracleClient.OracleLob" /> stream and advances the position within the stream by the number of bytes read.</span></span></summary>
        <returns><span data-ttu-id="b3a71-350">读入缓冲区中的总字节数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-350">The total number of bytes read into the buffer.</span></span> <span data-ttu-id="b3a71-351">如果当前可用的字节数没有请求的字节数那么多，则总字节数可能小于请求的字节数，或者如果已到达流的末尾，则为零 (0)。</span><span class="sxs-lookup"><span data-stu-id="b3a71-351">This may be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3a71-352"><xref:System.Data.OracleClient.OracleLob.Read%2A>方法读取的最多`count`字节从当前流，并且将它们存储在`buffer`开始`offset`。</span><span class="sxs-lookup"><span data-stu-id="b3a71-352">The <xref:System.Data.OracleClient.OracleLob.Read%2A> method reads a maximum of `count` bytes from the current stream and stores them in `buffer` beginning at `offset`.</span></span> <span data-ttu-id="b3a71-353">流中的当前位置高级通过读取; 的字节数但是，如果发生异常，将流中的当前位置保持不变。</span><span class="sxs-lookup"><span data-stu-id="b3a71-353">The current position within the stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the stream remains unchanged.</span></span> <span data-ttu-id="b3a71-354"><xref:System.Data.OracleClient.OracleLob.Read%2A> 返回读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-354"><xref:System.Data.OracleClient.OracleLob.Read%2A> returns the number of bytes read.</span></span> <span data-ttu-id="b3a71-355">仅当位置当前在流末尾，则返回值为零。</span><span class="sxs-lookup"><span data-stu-id="b3a71-355">The return value is zero only if the position is currently at the end of the stream.</span></span> <span data-ttu-id="b3a71-356"><xref:System.Data.OracleClient.OracleLob.Read%2A> 将一直阻止到至少一个字节的数据可供读取的事件中不会提供数据。<xref:System.Data.OracleClient.OracleLob.Read%2A></span><span class="sxs-lookup"><span data-stu-id="b3a71-356"><xref:System.Data.OracleClient.OracleLob.Read%2A> will block until at least one byte of data can be read, in the event that no data is available.<xref:System.Data.OracleClient.OracleLob.Read%2A></span></span> <span data-ttu-id="b3a71-357">如果你尝试要从其中进行读取，则返回 0`LOB`当前位置时末尾`LOB`。</span><span class="sxs-lookup"><span data-stu-id="b3a71-357">returns 0 if you attempt to read from a `LOB` when the current position is at the end of `LOB`.</span></span> <span data-ttu-id="b3a71-358"><xref:System.Data.OracleClient.OracleLob.Read%2A> 即使尚未达到流结尾，则可以返回少于所请求的字节。</span><span class="sxs-lookup"><span data-stu-id="b3a71-358"><xref:System.Data.OracleClient.OracleLob.Read%2A> can return fewer bytes than requested even if the end of the stream has not been reached.</span></span>  
  
 <span data-ttu-id="b3a71-359">适用于 Oracle 的.NET Framework 数据提供程序将处理所有`CLOB`和`NCLOB`为 Unicode 数据。</span><span class="sxs-lookup"><span data-stu-id="b3a71-359">The .NET Framework Data Provider for Oracle handles all `CLOB` and `NCLOB` data as Unicode.</span></span> <span data-ttu-id="b3a71-360">因此，在访问时`CLOB`和`NCLOB`数据类型，你始终处理的字节，其中每个字符是 2 个字节数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-360">Therefore, when accessing `CLOB` and `NCLOB` data types, you are always dealing with the number of bytes, where each character is 2 bytes.</span></span> <span data-ttu-id="b3a71-361">例如，如果包含三个字符的文本字符串保存为`NCLOB`Oracle 服务器的字符集为每个字符，4 个字节，其中你执行上`Read`操作，则指定的字符串的长度为 6 个字节，尽管它是存储为在服务器上的 12 个字节。</span><span class="sxs-lookup"><span data-stu-id="b3a71-361">For example, if a string of text containing three characters is saved as an `NCLOB` on an Oracle server where the character set is 4 bytes per character, and you perform a `Read` operation, you specify the length of the string as 6 bytes, although it is stored as 12 bytes on the server.</span></span>  
  
 <span data-ttu-id="b3a71-362">下面的 C# 示例演示如何读取<xref:System.Data.OracleClient.OracleLob>对象。</span><span class="sxs-lookup"><span data-stu-id="b3a71-362">The following C# example demonstrates how to read <xref:System.Data.OracleClient.OracleLob> objects.</span></span>  
  
```  
public static void ReadLobExample(OracleCommand command)  
{  
   int actual = 0;  
  
   //Select some data.  
   // Table Schema:  
   //  "CREATE TABLE TableWithLobs (a int, b BLOB, c CLOB, d NCLOB)";  
   //  "INSERT INTO TableWithLobs values (1, 'AA', 'AAA', N'AAAA')";  
   command.CommandText = "SELECT * FROM TableWithLobs";  
   OracleDataReader reader = command.ExecuteReader();  
   using(reader)  
   {  
      //Obtain the first row of data.  
      reader.Read();  
      //Obtain the LOBs (all 3 varieties).  
      OracleLob BLOB = reader.GetOracleLob(1);  
      OracleLob CLOB  = reader.GetOracleLob(2);  
      OracleLob NCLOB = reader.GetOracleLob(3);  
  
      //Example - Reading binary data (in chunks).  
      byte[] buffer = new byte[100];  
      while((actual = BLOB.Read(buffer, 0, buffer.Length)) >0)  
         Console.WriteLine(BLOB.LobType + ".Read(" + buffer + ", " + buffer.Length + ") => " + actual);  
  
      //Example - Reading CLOB/NCLOB data (in chunks).  
      //Note: You can read character data as raw Unicode bytes (using OracleLob.Read as in the above example).  
      //However, because the OracleLob object inherits directly from the.NET stream object,   
      //all the existing classes that manipluate streams can also be used. For example, the   
      //.NET StreamReader makes converting the raw bytes into actual characters easier.  
      StreamReader streamreader = new StreamReader(CLOB, Encoding.Unicode);  
      char[] cbuffer = new char[100];  
      while((actual = streamreader.Read(cbuffer, 0, cbuffer.Length)) >0)  
         Console.WriteLine(CLOB.LobType + ".Read(" + new string(cbuffer, 0, actual) + ", " + cbuffer.Length + ") => " + actual);  
  
      //Example - Reading data (all at once).  
      //You could use StreamReader.ReadToEnd to obtain all the string data,or simply  
      //call OracleLob.Value to obtain a contiguous allocation of all the data.  
      Console.WriteLine(NCLOB.LobType + ".Value => " + NCLOB.Value);  
   }  
}  
```  
  
 <span data-ttu-id="b3a71-363">您可以构造<xref:System.Data.OracleClient.OracleLob>值为 NULL，使用此格式：</span><span class="sxs-lookup"><span data-stu-id="b3a71-363">You can construct an <xref:System.Data.OracleClient.OracleLob> that is NULL using this format:</span></span>  
  
```  
OracleLob myLob = OracleLob.Null;  
```  
  
 <span data-ttu-id="b3a71-364">此方法主要用于测试是否`LOB`从服务器返回为 NULL，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="b3a71-364">This technique is used primarily to test whether a `LOB` returned from the server is NULL, as the following example illustrates.</span></span>  
  
```  
If(myLob == OracleLob.Null)  
```  
  
 <span data-ttu-id="b3a71-365">NULL`LOB`的行为类似于零字节`LOB`在于<xref:System.Data.OracleClient.OracleLob.Read%2A>成功并始终返回零字节。</span><span class="sxs-lookup"><span data-stu-id="b3a71-365">A NULL `LOB` behaves similarly to a zero byte `LOB` in that <xref:System.Data.OracleClient.OracleLob.Read%2A> succeeds and always returns zero bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b3a71-366"><paramref name="buffer" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="b3a71-366">The <paramref name="buffer" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b3a71-367"><paramref name="offset" /> 或 <paramref name="count" /> 参数中的值为非正。</span><span class="sxs-lookup"><span data-stu-id="b3a71-367">A value in the <paramref name="offset" /> or <paramref name="count" /> parameter is not positive.</span></span>  
  
 <span data-ttu-id="b3a71-368">或</span><span class="sxs-lookup"><span data-stu-id="b3a71-368">-or-</span></span>  
  
 <span data-ttu-id="b3a71-369">offset 参数与 count 参数之和大于 buffer 的长度。</span><span class="sxs-lookup"><span data-stu-id="b3a71-369">The sum of the offset and count parameters is larger than the buffer length.</span></span>  
  
 <span data-ttu-id="b3a71-370">或</span><span class="sxs-lookup"><span data-stu-id="b3a71-370">-or-</span></span>  
  
 <span data-ttu-id="b3a71-371"><paramref name="amount" /> 或 <paramref name="offset" /> 参数中指定的值小于零，或大于 4 GB。</span><span class="sxs-lookup"><span data-stu-id="b3a71-371">A value specified in the <paramref name="amount" /> or <paramref name="offset" /> parameter is less than zero or greater than 4 gigabytes.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3a71-372">该操作未处在事务中，<see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或者连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="b3a71-372">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b3a71-373">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="b3a71-373">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="b3a71-374">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="b3a71-374">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="b3a71-375">相对于 origin 的字节偏移量。</span><span class="sxs-lookup"><span data-stu-id="b3a71-375">A byte offset relative to origin.</span></span> <span data-ttu-id="b3a71-376">如果 <c>offset</c> 为负，则新位置位于 <c>origin</c> 指定的位置之前 <c>offset</c> 指定的字节数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-376">If <c>offset</c> is negative, the new position precedes the position specified by <c>origin</c> by the number of bytes specified by <c>offset</c>.</span></span> <span data-ttu-id="b3a71-377">如果 <c>offset</c> 为零，则新位置是 <c>origin</c> 指定的位置。</span><span class="sxs-lookup"><span data-stu-id="b3a71-377">If <c>offset</c> is zero, the new position is the position specified by <c>origin</c>.</span></span> <span data-ttu-id="b3a71-378">如果 <c>offset</c> 为正，则新位置位于 <c>origin</c> 指定的位置之后 <c>offset</c> 指定的字节数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-378">If <c>offset</c> is positive, the new position follows the position specified by <c>origin</c> by the number of bytes specified by <c>offset</c>.</span></span></param>
        <param name="origin"><span data-ttu-id="b3a71-379"><see cref="T:System.IO.SeekOrigin" /> 类型的值，指示用于获取新位置的参考点。</span><span class="sxs-lookup"><span data-stu-id="b3a71-379">A value of type <see cref="T:System.IO.SeekOrigin" /> indicating the reference point used to obtain the new position.</span></span></param>
        <summary><span data-ttu-id="b3a71-380">在当前 <see cref="T:System.Data.OracleClient.OracleLob" /> 流上设置位置。</span><span class="sxs-lookup"><span data-stu-id="b3a71-380">Sets the position on the current <see cref="T:System.Data.OracleClient.OracleLob" /> stream.</span></span></summary>
        <returns><span data-ttu-id="b3a71-381">当前流中的新位置。</span><span class="sxs-lookup"><span data-stu-id="b3a71-381">The new position within the current stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3a71-382">如果`offset`为负，新位置必须位于之前指定的位置`origin`按指定的字节数`offset`。</span><span class="sxs-lookup"><span data-stu-id="b3a71-382">If `offset` is negative, the new position must precede the position specified by `origin` by the number of bytes specified by `offset`.</span></span> <span data-ttu-id="b3a71-383">如果`offset`为零，新位置必须是指定的位置`origin`。</span><span class="sxs-lookup"><span data-stu-id="b3a71-383">If `offset` is zero, the new position must be the position specified by `origin`.</span></span> <span data-ttu-id="b3a71-384">如果`offset`为正，新位置必须遵循指定的位置`origin`按指定的字节数`offset`。</span><span class="sxs-lookup"><span data-stu-id="b3a71-384">If `offset` is positive, the new position must follow the position specified by `origin` by the number of bytes specified by `offset`.</span></span>  
  
 <span data-ttu-id="b3a71-385">支持查找到流的长度超出任何位置。</span><span class="sxs-lookup"><span data-stu-id="b3a71-385">Seeking to any location beyond the length of the stream is supported.</span></span> <span data-ttu-id="b3a71-386">查找到的奇数位置`CLOB`和`NCLOB`还支持数据类型。</span><span class="sxs-lookup"><span data-stu-id="b3a71-386">Seeking to an odd position for `CLOB` and `NCLOB` data types is also supported.</span></span> <span data-ttu-id="b3a71-387">有关详细信息，请参阅备注部分的<xref:System.Data.OracleClient.OracleLob.Read%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b3a71-387">For more information, see the Remarks section of the <xref:System.Data.OracleClient.OracleLob.Read%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b3a71-388"><paramref name="origin" /> 参数不包含有效的值。</span><span class="sxs-lookup"><span data-stu-id="b3a71-388">The <paramref name="origin" /> parameter does not contain a valid value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b3a71-389">结果位置在值的长度之外。</span><span class="sxs-lookup"><span data-stu-id="b3a71-389">The resulting position is beyond the length of the value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b3a71-390"><see cref="T:System.Data.OracleClient.OracleLob" /> 对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="b3a71-390">The <see cref="T:System.Data.OracleClient.OracleLob" /> object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="b3a71-391">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="b3a71-391">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b3a71-392">所需的当前 <see cref="T:System.Data.OracleClient.OracleLob" /> 流的长度（以字节表示）。</span><span class="sxs-lookup"><span data-stu-id="b3a71-392">The desired length of the current <see cref="T:System.Data.OracleClient.OracleLob" /> stream in bytes.</span></span> <span data-ttu-id="b3a71-393">对于 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，它必须为偶数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-393">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <summary><span data-ttu-id="b3a71-394">将 <see cref="T:System.Data.OracleClient.OracleLob" /> 流的长度设置为小于当前长度的值。</span><span class="sxs-lookup"><span data-stu-id="b3a71-394">Sets the length of the <see cref="T:System.Data.OracleClient.OracleLob" /> stream to a value less than the current length.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3a71-395">尝试增加的长度<xref:System.Data.OracleClient.OracleLob>流失败，并返回"消息： ORA 22926： 指定剪裁长度大于当前 LOB 值的长度"从 Oracle 服务器。</span><span class="sxs-lookup"><span data-stu-id="b3a71-395">An attempt to increase the length of the <xref:System.Data.OracleClient.OracleLob> stream fails, and returns "Message: ORA-22926: specified trim length is greater than current LOB value's length" from the Oracle server.</span></span>  
  
 <span data-ttu-id="b3a71-396">流必须支持写入和查找有关<xref:System.Data.OracleClient.OracleLob.SetLength%2A>到函数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-396">A stream must support both writing and seeking for <xref:System.Data.OracleClient.OracleLob.SetLength%2A> to function.</span></span>  
  
 <span data-ttu-id="b3a71-397">适用于 Oracle 的.NET Framework 数据提供程序将处理所有`CLOB`和`NCLOB`为 Unicode 数据。</span><span class="sxs-lookup"><span data-stu-id="b3a71-397">The .NET Framework Data Provider for Oracle handles all `CLOB` and `NCLOB` data as Unicode.</span></span> <span data-ttu-id="b3a71-398">因此，在访问时`CLOB`和`NCLOB`数据类型，你始终处理的字节，其中每个字符是 2 个字节数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-398">Therefore, when accessing `CLOB` and `NCLOB` data types, you are always dealing with the number of bytes, where each character is 2 bytes.</span></span> <span data-ttu-id="b3a71-399">例如，如果包含三个字符的文本字符串保存为`NCLOB`Oracle 服务器的字符集为每个字符，4 个字节，其中你执行上`SetLength`操作，则指定的字符串的长度为 6 个字节，尽管它是存储为在服务器上的 12 个字节。</span><span class="sxs-lookup"><span data-stu-id="b3a71-399">For example, if a string of text containing three characters is saved as an `NCLOB` on an Oracle server where the character set is 4 bytes per character, and you perform a `SetLength` operation, you specify the length of the string as 6 bytes, although it is stored as 12 bytes on the server.</span></span>  
  
 <span data-ttu-id="b3a71-400">要写入到`LOB`，您必须检索`LOB`使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</span><span class="sxs-lookup"><span data-stu-id="b3a71-400">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b3a71-401">A 会写入操作的只读`LOB`可能会成功，但不会更新`LOB`服务器上。</span><span class="sxs-lookup"><span data-stu-id="b3a71-401">A write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="b3a71-402">在这种情况下，但是的本地副本`LOB`更新。</span><span class="sxs-lookup"><span data-stu-id="b3a71-402">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="b3a71-403">因此，更高版本上读取操作<xref:System.Data.OracleClient.OracleLob>对象可能会返回写入操作的结果。</span><span class="sxs-lookup"><span data-stu-id="b3a71-403">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b3a71-404"><paramref name="value" /> 参数中为 <see langword="CLOB" /> 或 <see langword="NCLOB" /> 数据类型指定的值不是偶数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-404">A value specified in the <paramref name="value" /> parameter for a <see langword="CLOB" /> or <see langword="NCLOB" /> data type is not even.</span></span>  
  
 <span data-ttu-id="b3a71-405">或</span><span class="sxs-lookup"><span data-stu-id="b3a71-405">-or-</span></span>  
  
 <span data-ttu-id="b3a71-406"><paramref name="value" /> 参数中指定的值小于零，或大于 4 GB。</span><span class="sxs-lookup"><span data-stu-id="b3a71-406">A value specified in the <paramref name="value" /> parameter is less than zero or greater than 4 gigabytes.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3a71-407">该操作未处在事务中，<see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或者连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="b3a71-407">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b3a71-408">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="b3a71-408">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="b3a71-409">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="b3a71-409">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3a71-410">获取公共语言运行时流值（基础值的等效值）。</span><span class="sxs-lookup"><span data-stu-id="b3a71-410">Gets the common language runtime stream value equivalent of the underlying value.</span></span></summary>
        <value><span data-ttu-id="b3a71-411">对于 <see cref="F:System.Data.OracleClient.OracleType.Blob" />，为 <see langword="Byte[]" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="b3a71-411">For <see cref="F:System.Data.OracleClient.OracleType.Blob" />, an array of type <see langword="Byte[]" />.</span></span> <span data-ttu-id="b3a71-412">对于 <see cref="F:System.Data.OracleClient.OracleType.Clob" /> 和 <see cref="F:System.Data.OracleClient.OracleType.NClob" />，为 <see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="b3a71-412">For <see cref="F:System.Data.OracleClient.OracleType.Clob" /> and <see cref="F:System.Data.OracleClient.OracleType.NClob" />, a <see langword="String" />.</span></span> <span data-ttu-id="b3a71-413">对于 null 数据，则为 <see cref="T:System.DBNull" />。</span><span class="sxs-lookup"><span data-stu-id="b3a71-413">For null data, <see cref="T:System.DBNull" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3a71-414">有关<xref:System.Data.OracleClient.OracleType.Blob>数据类型，<xref:System.Data.OracleClient.OracleLob.Value%2A>连续类型的数组的形式返回整个基础数据`Byte[]`。</span><span class="sxs-lookup"><span data-stu-id="b3a71-414">For <xref:System.Data.OracleClient.OracleType.Blob> data types, <xref:System.Data.OracleClient.OracleLob.Value%2A> returns the entire underlying data as a contiguous array of type `Byte[]`.</span></span> <span data-ttu-id="b3a71-415">有关<xref:System.Data.OracleClient.OracleType.Clob>和<xref:System.Data.OracleClient.OracleType.NClob>数据类型，<xref:System.Data.OracleClient.OracleLob.Value%2A>返回所有数据作为`String`数据类型。</span><span class="sxs-lookup"><span data-stu-id="b3a71-415">For <xref:System.Data.OracleClient.OracleType.Clob> and <xref:System.Data.OracleClient.OracleType.NClob> data types, <xref:System.Data.OracleClient.OracleLob.Value%2A> returns all the data as a `String` data type.</span></span> <span data-ttu-id="b3a71-416">为 null 数据一样，<xref:System.Data.OracleClient.OracleLob.Value%2A>返回<xref:System.DBNull>。</span><span class="sxs-lookup"><span data-stu-id="b3a71-416">For null data, <xref:System.Data.OracleClient.OracleLob.Value%2A> returns <xref:System.DBNull>.</span></span> <span data-ttu-id="b3a71-417">通过比较返回的值，可以区分空数据、 null 数据和数据。</span><span class="sxs-lookup"><span data-stu-id="b3a71-417">By comparing the returned values, you can distinguish among empty data, null data, and data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b3a71-418">使用的优点`LOB`数据类型是可检索大量数据在客户端的小区块中的功能。</span><span class="sxs-lookup"><span data-stu-id="b3a71-418">A benefit of using `LOB` data types is the capability to retrieve large amounts of data in chunks at the client.</span></span> <span data-ttu-id="b3a71-419">但是，当使用<xref:System.Data.OracleClient.OracleLob.Value%2A>，获取有关的所有数据`LOB`列作为一个连续的区块，这可以显著提高应用程序开销。</span><span class="sxs-lookup"><span data-stu-id="b3a71-419">However, when you use <xref:System.Data.OracleClient.OracleLob.Value%2A>, you obtain all the data for the `LOB` column as one contiguous chunk, which can significantly increase application overhead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b3a71-420">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="b3a71-420">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="b3a71-421">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="b3a71-421">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="b3a71-422">字节数组。</span><span class="sxs-lookup"><span data-stu-id="b3a71-422">An array of bytes.</span></span> <span data-ttu-id="b3a71-423">此方法将 <c>count</c> 中指定的字节数从 <c>buffer</c> 复制到当前流中。</span><span class="sxs-lookup"><span data-stu-id="b3a71-423">This method copies the number of bytes specified in <c>count</c> from <c>buffer</c> to the current stream.</span></span></param>
        <param name="offset"><span data-ttu-id="b3a71-424"><c>buffer</c> 中的从零开始的字节偏移量，从此处开始将字节复制到当前流。</span><span class="sxs-lookup"><span data-stu-id="b3a71-424">The zero-based byte offset in <c>buffer</c> at which to begin copying bytes to the current stream.</span></span> <span data-ttu-id="b3a71-425">对于 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，它必须为偶数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-425">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <param name="count"><span data-ttu-id="b3a71-426">要写入当前流的字节数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-426">The number of bytes to be written to the current stream.</span></span> <span data-ttu-id="b3a71-427">对于 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，它必须为偶数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-427">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <summary><span data-ttu-id="b3a71-428">将一个字节序列写入当前 <see cref="T:System.Data.OracleClient.OracleLob" /> 流，并使流中的当前位置前进所写入的字节数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-428">Writes a sequence of bytes to the current <see cref="T:System.Data.OracleClient.OracleLob" /> stream, and advances the current position within this stream by the number of bytes written.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3a71-429">如果写入操作成功，将流内的位置向前移动写入的字节数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-429">If the write operation is successful, the position within the stream advances by the number of bytes written.</span></span> <span data-ttu-id="b3a71-430">如果发生异常，流中的位置将保持不变。</span><span class="sxs-lookup"><span data-stu-id="b3a71-430">If an exception occurs, the position within the stream remains unchanged.</span></span>  
  
 <span data-ttu-id="b3a71-431">结尾之外写入`LOB`允许和放大`LOB`通过写入的字节数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-431">Writing beyond the end of `LOB` is allowed and enlarges the `LOB` by the number of bytes written.</span></span>  
  
 <span data-ttu-id="b3a71-432">适用于 Oracle 的.NET Framework 数据提供程序将处理所有`CLOB`和`NCLOB`为 Unicode 数据。</span><span class="sxs-lookup"><span data-stu-id="b3a71-432">The .NET Framework Data Provider for Oracle handles all `CLOB` and `NCLOB` data as Unicode.</span></span> <span data-ttu-id="b3a71-433">因此，在访问时`CLOB`和`NCLOB`数据类型，你始终处理的字节，其中每个字符是 2 个字节数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-433">Therefore, when accessing `CLOB` and `NCLOB` data types, you are always dealing with the number of bytes, where each character is 2 bytes.</span></span> <span data-ttu-id="b3a71-434">例如，如果包含三个字符的文本字符串保存为`NCLOB`Oracle 服务器的字符集为每个字符，4 个字节，其中你执行上`Write`操作，则指定的字符串的长度为 6 个字节，尽管它是存储为在服务器上的 12 个字节。</span><span class="sxs-lookup"><span data-stu-id="b3a71-434">For example, if a string of text containing three characters is saved as an `NCLOB` on an Oracle server where the character set is 4 bytes per character, and you perform a `Write` operation, you specify the length of the string as 6 bytes, although it is stored as 12 bytes on the server.</span></span>  
  
 <span data-ttu-id="b3a71-435">要写入到`LOB`，您必须检索`LOB`使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</span><span class="sxs-lookup"><span data-stu-id="b3a71-435">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
 <span data-ttu-id="b3a71-436">下面的 C# 示例演示如何将写入到<xref:System.Data.OracleClient.OracleLob>对象。</span><span class="sxs-lookup"><span data-stu-id="b3a71-436">The following C# example demonstrates how to write to <xref:System.Data.OracleClient.OracleLob> objects.</span></span>  
  
```  
public static void WriteLobExample(OracleCommand command)  
{  
   //Note: Updating LOB data requires a transaction.  
   command.Transaction = command.Connection.BeginTransaction();  
   //Select some data.  
   //    Table Schema:  
   //        "CREATE TABLE tablewithlobs (a int, b BLOB, c BLOB)";  
   //        "INSERT INTO tablewithlobs values (1, 'AA', 'AAA')";  
   command.CommandText = "SELECT * FROM TableWithLobs FOR UPDATE";  
   OracleDataReader reader = command.ExecuteReader();  
   using(reader)  
   {  
      //Obtain the first row of data.  
      reader.Read();  
      //Obtain both LOBs.  
      OracleLob BLOB1    = reader.GetOracleLob(1);  
      OracleLob BLOB2    = reader.GetOracleLob(2);  
      //Perform any desired operations on the LOB, (read, position, and so on).  
      //...  
      //Example - Writing binary data (directly to the backend).  
      //To write, you can use any of the stream classes, or write raw binary data using   
      //the OracleLob write method. Writing character vs. binary is the same;  
      //however note that character is always in terms of Unicode byte counts  
      //(for example: even number of bytes - 2 bytes for every Unicode character).  
      byte[] buffer = new byte[100];  
      buffer[0] = 0xCC;  
      buffer[1] = 0xDD;  
      BLOB1.Write(buffer, 0, 2);  
      BLOB1.Position = 0;  
      Console.WriteLine(BLOB1.LobType + ".Write(" + buffer + ", 0, 2) => " + BLOB1.Value);  
  
      //Example - Copying data into another LOB.  
      long actual = BLOB1.CopyTo(BLOB2);  
      Console.WriteLine(BLOB1.LobType + ".CopyTo(" + BLOB2.Value + ") => " + actual);  
  
      //Commit the transaction now that everything succeeded.  
      //Note: On error, Transaction.Dispose is called (from the using statement)  
      //and will automatically roll-back the pending transaction.  
      command.Transaction.Commit();  
   }  
}  
```  
  
> [!NOTE]
>  <span data-ttu-id="b3a71-437">A 会写入操作的只读`LOB`可能会成功，但不会更新`LOB`服务器上。</span><span class="sxs-lookup"><span data-stu-id="b3a71-437">A write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="b3a71-438">在这种情况下，但是的本地副本`LOB`更新。</span><span class="sxs-lookup"><span data-stu-id="b3a71-438">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="b3a71-439">因此，更高版本上读取操作<xref:System.Data.OracleClient.OracleLob>对象可能会返回写入操作的结果。</span><span class="sxs-lookup"><span data-stu-id="b3a71-439">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b3a71-440"><paramref name="buffer" /> 参数为 null 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="b3a71-440">The <paramref name="buffer" /> parameter is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b3a71-441"><paramref name="offset" /> 或 <paramref name="count" /> 参数中的值为非正。</span><span class="sxs-lookup"><span data-stu-id="b3a71-441">A value in the <paramref name="offset" /> or <paramref name="count" /> parameter is not positive.</span></span>  
  
 <span data-ttu-id="b3a71-442">或</span><span class="sxs-lookup"><span data-stu-id="b3a71-442">-or-</span></span>  
  
 <span data-ttu-id="b3a71-443"><paramref name="offset" /> 参数与 <paramref name="count" /> 参数之和大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="b3a71-443">The sum of the <paramref name="offset" /> and <paramref name="count" /> parameters is larger than the <paramref name="buffer" /> length.</span></span>  
  
 <span data-ttu-id="b3a71-444">或</span><span class="sxs-lookup"><span data-stu-id="b3a71-444">-or-</span></span>  
  
 <span data-ttu-id="b3a71-445"><paramref name="count" /> 或 <paramref name="offset" /> 参数中指定的值小于零，或大于 4 GB。</span><span class="sxs-lookup"><span data-stu-id="b3a71-445">A value specified in the <paramref name="count" /> or <paramref name="offset" /> parameter is less than zero or greater than 4 gigabytes.</span></span>  
  
 <span data-ttu-id="b3a71-446">或</span><span class="sxs-lookup"><span data-stu-id="b3a71-446">-or-</span></span>  
  
 <span data-ttu-id="b3a71-447">必须将 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型指定为偶数字节数。</span><span class="sxs-lookup"><span data-stu-id="b3a71-447">You must specify <see langword="CLOB" /> and <see langword="NCLOB" /> data types as an even number of bytes.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3a71-448">该操作未处在事务中，<see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或者连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="b3a71-448">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b3a71-449">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="b3a71-449">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="b3a71-450">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="b3a71-450">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public override void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteByte(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b3a71-451">要写入流中的字节。</span><span class="sxs-lookup"><span data-stu-id="b3a71-451">The byte to write to the stream.</span></span></param>
        <summary><span data-ttu-id="b3a71-452">将一个字节写入 <see cref="T:System.Data.OracleClient.OracleLob" /> 流内的当前位置，并将流内的位置向前推进一个字节。</span><span class="sxs-lookup"><span data-stu-id="b3a71-452">Writes a byte to the current position in the <see cref="T:System.Data.OracleClient.OracleLob" /> stream, and advances the position within the stream by one byte.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3a71-453">如果写入操作是否成功，将流中的位置向前推进 1 个字节。</span><span class="sxs-lookup"><span data-stu-id="b3a71-453">If the write operation is successful, the position within the stream advances by one byte.</span></span> <span data-ttu-id="b3a71-454">如果发生异常，流中的位置将保持不变。</span><span class="sxs-lookup"><span data-stu-id="b3a71-454">If an exception occurs, the position within the stream remains unchanged.</span></span>  
  
 <span data-ttu-id="b3a71-455">结尾之外写入`LOB`允许和放大`LOB`1 个字节。</span><span class="sxs-lookup"><span data-stu-id="b3a71-455">Writing beyond the end of the `LOB` is allowed and enlarges the `LOB` by one byte.</span></span>  
  
 <span data-ttu-id="b3a71-456">要写入到`LOB`，您必须检索`LOB`使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</span><span class="sxs-lookup"><span data-stu-id="b3a71-456">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b3a71-457">A 会写入操作的只读`LOB`可能会成功，但不会更新`LOB`服务器上。</span><span class="sxs-lookup"><span data-stu-id="b3a71-457">A write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="b3a71-458">在这种情况下，但是的本地副本`LOB`更新。</span><span class="sxs-lookup"><span data-stu-id="b3a71-458">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="b3a71-459">因此，更高版本上读取操作<xref:System.Data.OracleClient.OracleLob>对象可能会返回写入操作的结果。</span><span class="sxs-lookup"><span data-stu-id="b3a71-459">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>