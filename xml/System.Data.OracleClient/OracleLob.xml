<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OracleLob.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f752621e9496b0bd55f13fe4c3cb60aecdfbea99.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f752621e9496b0bd55f13fe4c3cb60aecdfbea99</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleLob">
          <source>Represents a large object binary (<ph id="ph1">&lt;see langword="LOB" /&gt;</ph>) data type stored on an Oracle server.</source>
          <target state="translated">表示存储在 Oracle 服务器上的大型对象二进制 (<ph id="ph1">&lt;see langword="LOB" /&gt;</ph>) 数据类型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleLob">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>An <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> differs from an <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> in that the data is stored on the server instead of in a physical file in the operating system.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>区别<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>在于数据存储的服务器，而不是在操作系统中的物理文件上。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>It can also be a read-write object, unlike an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>, which is always read-only.</source>
          <target state="translated">它还可读写对象，与不同<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>，这始终是只读的。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>An <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> may be one of these <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleType&gt;</ph> data types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>可能是下列其中一<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleType&gt;</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>OracleType data type</source>
          <target state="translated">OracleType 数据类型</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>An Oracle <ph id="ph1">`BLOB`</ph> data type that contains binary data with a maximum size of 4 gigabytes (GB).</source>
          <target state="translated">Oracle<ph id="ph1">`BLOB`</ph>包含最大大小为 4 千兆字节 (GB) 的二进制数据的数据类型。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>This maps to an <ph id="ph1">&lt;xref:System.Array&gt;</ph> of type <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</source>
          <target state="translated">它映射到 <ph id="ph1">&lt;xref:System.Array&gt;</ph> 类型的 <ph id="ph2">&lt;xref:System.Byte&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>An Oracle <ph id="ph1">`CLOB`</ph> data type that contains character data, based on the default character set on the server, with a maximum size of 4 GB.</source>
          <target state="translated">Oracle<ph id="ph1">`CLOB`</ph>包含字符数据，基于默认字符的数据类型设置在服务器上，最大大小为 4 GB。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>This maps to <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">它映射到 <ph id="ph1">&lt;xref:System.String&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>An Oracle <ph id="ph1">`NCLOB`</ph> data type that contains character data, based on the national character set on the server with a maximum size of 4 GB.</source>
          <target state="translated">Oracle<ph id="ph1">`NCLOB`</ph>基于在具有最大大小为 4 GB 的服务器上的区域字符集包含字符数据的数据类型。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>This maps to <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">它映射到 <ph id="ph1">&lt;xref:System.String&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>A .NET application developer can retrieve the Oracle <ph id="ph1">`LOB`</ph> values into basic .NET data types, such as <ph id="ph2">&lt;xref:System.Array&gt;</ph> of type <ph id="ph3">&lt;xref:System.Byte&gt;</ph> and <ph id="ph4">&lt;xref:System.String&gt;</ph>, or the specialized <ph id="ph5">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> data type.</source>
          <target state="translated">.NET 应用程序开发人员可以检索 Oracle<ph id="ph1">`LOB`</ph>值到基本.NET 数据类型，例如<ph id="ph2">&lt;xref:System.Array&gt;</ph>类型的<ph id="ph3">&lt;xref:System.Byte&gt;</ph>和<ph id="ph4">&lt;xref:System.String&gt;</ph>，或专用<ph id="ph5">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> class supports reading data from and writing to the Oracle <ph id="ph2">`LOB`</ph> in the Oracle database.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>类支持从读取数据并写入 Oracle <ph id="ph2">`LOB`</ph> Oracle 数据库中。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>The following are the main characteristics of an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> data type that distinguish it from basic .NET data types:</source>
          <target state="translated">以下是的主要特征<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>区分从基本的.NET 数据类型的数据类型：</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>After you retrieve the Oracle <ph id="ph1">`LOB`</ph> value from the Oracle database into the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> class, you can change the <ph id="ph3">`LOB`</ph> data in an open transaction and your changes are directly reflected to the database.</source>
          <target state="translated">检索 Oracle 后<ph id="ph1">`LOB`</ph>值从 Oracle 数据库到<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>类，你可以更改<ph id="ph3">`LOB`</ph>打开的事务和所做的更改中的数据直接反映到数据库。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>If you retrieve the Oracle <ph id="ph1">`LOB`</ph> value into an <ph id="ph2">&lt;xref:System.Array&gt;</ph> of type <ph id="ph3">&lt;xref:System.Byte&gt;</ph> or <ph id="ph4">&lt;xref:System.String&gt;</ph> and update these arrays, your changes are not reflected to the database.</source>
          <target state="translated">如果检索 Oracle<ph id="ph1">`LOB`</ph>值到<ph id="ph2">&lt;xref:System.Array&gt;</ph>类型的<ph id="ph3">&lt;xref:System.Byte&gt;</ph>或<ph id="ph4">&lt;xref:System.String&gt;</ph>和更新这些阵列，所做的更改不会反映到数据库。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>When you use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> class to access a chunk of a <ph id="ph2">`LOB`</ph> value, only that chunk is passed from the Oracle database to the client.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>类访问的区块<ph id="ph2">`LOB`</ph>值，只将该块区传递从 Oracle 数据库到客户端。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>When you use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataReader.GetChars%2A&gt;</ph> method to access a chunk of a <ph id="ph2">`LOB`</ph> value, the entire contents of the value are passed from the Oracle database to the client.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataReader.GetChars%2A&gt;</ph>方法来访问的区块<ph id="ph2">`LOB`</ph>值，该值的整个内容传递从 Oracle 数据库到客户端。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>To obtain an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object, call the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A&gt;</ph> method.</source>
          <target state="translated">若要获取<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>对象，请调用<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>You can construct an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> that is NULL using this format:</source>
          <target state="translated">您可以构造<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>值为 NULL，使用此格式：</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>This technique is used primarily to test whether a <ph id="ph1">`LOB`</ph> returned from the server is NULL, as this example illustrates:</source>
          <target state="translated">此方法主要用于测试是否<ph id="ph1">`LOB`</ph>从服务器返回为 NULL，如本示例所示：</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>A NULL <ph id="ph1">`LOB`</ph> behaves similarly to a zero-byte <ph id="ph2">`LOB`</ph> in that <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> succeeds and always returns zero bytes.</source>
          <target state="translated">NULL<ph id="ph1">`LOB`</ph>的行为类似于零字节<ph id="ph2">`LOB`</ph>在于<ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph>成功并始终返回零字节。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>Selecting a <ph id="ph1">`LOB`</ph> column that contains a null value returns <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Null&gt;</ph>.</source>
          <target state="translated">选择<ph id="ph1">`LOB`</ph>包含一个 null 值的列返回<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Null&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>You must begin a transaction before obtaining a temporary <ph id="ph1">`LOB`</ph>.</source>
          <target state="translated">你必须开始事务，然后才能获取临时<ph id="ph1">`LOB`</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph> may fail to obtain data later.</source>
          <target state="translated">否则为<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph>可能无法获取数据更高版本。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>You can also open a temporary <ph id="ph1">`LOB`</ph> in Oracle by calling the DBMS_LOB.CREATETEMPORARY system stored procedure and binding a <ph id="ph2">`LOB`</ph> output parameter.</source>
          <target state="translated">你也可以打开一个临时<ph id="ph1">`LOB`</ph>通过调用 DBMS_LOB Oracle 中。CREATETEMPORARY 系统存储过程和绑定<ph id="ph2">`LOB`</ph>输出参数。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>On the client side, a temporary <ph id="ph1">`LOB`</ph> behaves like a table-based <ph id="ph2">`LOB`</ph>.</source>
          <target state="translated">在客户端，临时<ph id="ph1">`LOB`</ph>行为类似基于表的<ph id="ph2">`LOB`</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>For example, to update the temporary <ph id="ph1">`LOB`</ph>, it must be enclosed in a transaction.</source>
          <target state="translated">例如，若要更新临时<ph id="ph1">`LOB`</ph>，它必须括在事务中。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>The following C# example demonstrates how to open a temporary <ph id="ph1">`LOB`</ph>.</source>
          <target state="translated">下面的 C# 示例演示如何打开一个临时<ph id="ph1">`LOB`</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>The inherited <ph id="ph1">&lt;xref:System.IO.Stream.WriteByte%2A&gt;</ph> method fails if used with character data, and an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">继承<ph id="ph1">&lt;xref:System.IO.Stream.WriteByte%2A&gt;</ph>时用于字符数据，方法会失败和<ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>引发。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Write%2A&gt;</ph> method instead.</source>
          <target state="translated">请改用 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Write%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>Temporary <ph id="ph1">`LOB`</ph>s are only closed when the connection is closed, but with pooling and under load, temporary <ph id="ph2">`LOB`</ph>s do not close.</source>
          <target state="translated">临时<ph id="ph1">`LOB`</ph>仅关闭时关闭连接，但进行池和负载情况下，临时<ph id="ph2">`LOB`</ph>不会关闭。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>This can be resolved by disposing the temporary <ph id="ph1">`LOB`</ph>, by invoking <ph id="ph2">`tempLob.Dispose()`</ph>.</source>
          <target state="translated">这可以通过释放临时解决<ph id="ph1">`LOB`</ph>，通过调用<ph id="ph2">`tempLob.Dispose()`</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>The <ph id="ph1">&lt;see langword="LOB" /&gt;</ph> from which to append data.</source>
          <target state="translated">要从其中追加数据的 <ph id="ph1">&lt;see langword="LOB" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>Appends data from the specified <ph id="ph1">&lt;see langword="LOB" /&gt;</ph> to the current <ph id="ph2">&lt;see langword="LOB" /&gt;</ph>.</source>
          <target state="translated">将数据从指定的 <ph id="ph1">&lt;see langword="LOB" /&gt;</ph> 追加到当前 <ph id="ph2">&lt;see langword="LOB" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">要写入到<ph id="ph1">`LOB`</ph>，您必须检索<ph id="ph2">`LOB`</ph>使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>All data from the source <ph id="ph1">`LOB`</ph> is appended to the end of the current <ph id="ph2">`LOB`</ph>.</source>
          <target state="translated">来自源的所有数据<ph id="ph1">`LOB`</ph>追加到当前末尾<ph id="ph2">`LOB`</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>The position of neither <ph id="ph1">`LOB`</ph> is evaluated or changed during this process.</source>
          <target state="translated">位置都不<ph id="ph1">`LOB`</ph>计算也没有在此过程中更改。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>The underlying data types must always be the same.</source>
          <target state="translated">基础数据类型必须始终相同。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>For example, if you are appending from an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>, the destination <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> must also be an <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>.</source>
          <target state="translated">例如，如果要将从追加<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>，目标<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>还必须是<ph id="ph3">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>In this release, a write operation to a read-only <ph id="ph1">`LOB`</ph> might succeed, but does not update the <ph id="ph2">`LOB`</ph> on the server.</source>
          <target state="translated">在此版本中，对只读的写入操作<ph id="ph1">`LOB`</ph>可能会成功，但不会更新<ph id="ph2">`LOB`</ph>服务器上。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">在这种情况下，但是的本地副本<ph id="ph1">`LOB`</ph>更新。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>Therefore, later read operations on the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object might return the results of the write operation.</source>
          <target state="translated">因此，更高版本上读取操作<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>对象可能会返回写入操作的结果。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>The source <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> is null.</source>
          <target state="translated">源 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 为 null。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>The source <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> is null, or the connection is closed.</source>
          <target state="translated">源 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 为 null，或者连接已关闭。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>The source <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object was closed or disposed.</source>
          <target state="translated">源 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 对象已关闭或已释放。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>An Oracle error has occurred.</source>
          <target state="translated">发生了 Oracle 错误。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleLob">
          <source>Prevents server-side triggers from firing while performing multiple write operations.</source>
          <target state="translated">在执行多个写操作时避免服务器端触发器激发。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.BeginBatch">
          <source>Prevents server-side triggers from firing while performing multiple read operations.</source>
          <target state="translated">在执行多个读操作时避免服务器端触发器激发。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.BeginBatch">
          <source>Opens the <ph id="ph1">`LOB`</ph> in <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLobOpenMode.ReadOnly&gt;</ph> mode; therefore, the <ph id="ph3">`LOB`</ph> can only be read from, not written to, until the corresponding call to <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph>.</source>
          <target state="translated">打开<ph id="ph1">`LOB`</ph>中<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLobOpenMode.ReadOnly&gt;</ph>模式; 因此，<ph id="ph3">`LOB`</ph>可以只从其中读取，不会写入，直到相应地调用<ph id="ph4">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.BeginBatch">
          <source>To perform batch writes to the <ph id="ph1">`LOB`</ph>, call <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;</ph> with <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLobOpenMode.ReadWrite&gt;</ph>.</source>
          <target state="translated">若要执行批处理写入<ph id="ph1">`LOB`</ph>，调用<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;</ph>与<ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLobOpenMode.ReadWrite&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.BeginBatch">
          <source>Calling <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;</ph> more than one time within the same transaction currently throws the Oracle "ORA-22293: LOB already opened in the same transaction" error.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;</ph>不止一次在同一事务中的当前引发 Oracle"ORA 22293: LOB 同一个事务中已经打开了"错误。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.BeginBatch">
          <source>In addition, if you obtain the <ph id="ph1">`LOB`</ph> using another <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph>, and the original caller has not called the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph> method, the same error is generated.</source>
          <target state="translated">此外，如果你获取<ph id="ph1">`LOB`</ph>使用另一个<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph>，且具有不会调用原始调用方<ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph>生成方法，相同的错误。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.BeginBatch">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph> method when you are finished using the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>.</source>
          <target state="translated">因此，必须调用<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph>方法完成后使用<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.BeginBatch">
          <source>The connection is closed.</source>
          <target state="translated">连接已关闭。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.BeginBatch">
          <source>The object was closed or disposed.</source>
          <target state="translated">对象已关闭或已释放。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.BeginBatch">
          <source>An Oracle error has occurred.</source>
          <target state="translated">发生了 Oracle 错误。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
          <source>Mode (one of the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLobOpenMode" /&gt;</ph> values) in which the <ph id="ph2">&lt;see langword="LOB" /&gt;</ph> can be accessed between this <ph id="ph3">&lt;see cref="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)" /&gt;</ph> call and the corresponding <ph id="ph4">&lt;see cref="M:System.Data.OracleClient.OracleLob.EndBatch" /&gt;</ph> call.</source>
          <target state="translated">模式（<ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLobOpenMode" /&gt;</ph> 值之一），在该模式下，可在此 <ph id="ph3">&lt;see cref="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)" /&gt;</ph> 调用与对应的 <ph id="ph4">&lt;see cref="M:System.Data.OracleClient.OracleLob.EndBatch" /&gt;</ph> 调用之间访问 <ph id="ph2">&lt;see langword="LOB" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
          <source>Prevents server-side triggers from firing while performing multiple read and write operations in the specified access mode.</source>
          <target state="translated">在以指定的访问模式执行多个读写操作时避免服务器端触发器激发。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">要写入到<ph id="ph1">`LOB`</ph>，您必须检索<ph id="ph2">`LOB`</ph>使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
          <source>Calling <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;</ph> more than one time within the same transaction currently throws the Oracle "ORA-22293: LOB already opened in the same transaction" error.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;</ph>不止一次在同一事务中的当前引发 Oracle"ORA 22293: LOB 同一个事务中已经打开了"错误。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
          <source>In addition, if you obtain the <ph id="ph1">`LOB`</ph> using another <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph>, and the original caller has not called the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph> method, the same error is generated.</source>
          <target state="translated">此外，如果你获取<ph id="ph1">`LOB`</ph>使用另一个<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph>，且具有不会调用原始调用方<ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph>生成方法，相同的错误。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph> method when you are finished using the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>.</source>
          <target state="translated">因此，必须调用<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph>方法完成后使用<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
          <source>The connection is closed.</source>
          <target state="translated">连接已关闭。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
          <source>The object was closed or disposed.</source>
          <target state="translated">对象已关闭或已释放。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
          <source>An Oracle error has occurred.</source>
          <target state="translated">发生了 Oracle 错误。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.CanRead">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see langword="LOB" /&gt;</ph> stream can be read.</source>
          <target state="translated">获取一个值，该值指示 <ph id="ph1">&lt;see langword="LOB" /&gt;</ph> 流是否可读。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.CanRead">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see langword="LOB" /&gt;</ph> stream supports reading, otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph> if a <ph id="ph4">&lt;see langword="LOB" /&gt;</ph> is closed or disposed.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 流支持读取，则为 <ph id="ph2">&lt;see langword="LOB" /&gt;</ph>；如果 <ph id="ph3">&lt;see langword="false" /&gt;</ph> 已关闭或已释放，则为 <ph id="ph4">&lt;see langword="LOB" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.CanSeek">
          <source>Gets a value indicating whether forward and backward seek operations can be performed.</source>
          <target state="translated">获取一个值，该值指示能否执行向前和向后查找操作。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.CanSeek">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if a <ph id="ph2">&lt;see langword="LOB" /&gt;</ph> is closed or disposed, otherwise <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="false" /&gt;</ph> 已关闭或已释放，则为 <ph id="ph2">&lt;see langword="LOB" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.CanSeek">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph> for <ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleLob.Null" /&gt;</ph>.</source>
          <target state="translated">对于 <ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleLob.Null" /&gt;</ph>，总是为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.CanWrite">
          <source>Always returns true, regardless of whether the <ph id="ph1">&lt;see langword="LOB" /&gt;</ph> supports writing or not.</source>
          <target state="translated">不管 <ph id="ph1">&lt;see langword="LOB" /&gt;</ph> 是否支持写入，始终返回真。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.CanWrite">
          <source>Always returns <ph id="ph1">&lt;see langword="true" /&gt;</ph>, regardless of whether an opened or undisposed <ph id="ph2">&lt;see langword="LOB" /&gt;</ph> supports writing or not, <ph id="ph3">&lt;see langword="false" /&gt;</ph> if a <ph id="ph4">&lt;see langword="LOB" /&gt;</ph> is closed or disposed.</source>
          <target state="translated">不管已打开的或未释放的 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 是否支持写入，始终返回 <ph id="ph2">&lt;see langword="LOB" /&gt;</ph>；如果 <ph id="ph3">&lt;see langword="false" /&gt;</ph> 已关闭或已释放，则返回 <ph id="ph4">&lt;see langword="LOB" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.CanWrite">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have started a local transaction.</source>
          <target state="translated">要写入到<ph id="ph1">`LOB`</ph>，您必须检索<ph id="ph2">`LOB`</ph>使用 FOR UPDATE 子句中的 SQL SELECT 语句，你必须已启动对本地事务。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.ChunkSize">
          <source>Gets a value indicating the minimum number of bytes to retrieve from or send to the server during a read/write operation.</source>
          <target state="translated">获取一个值，该值指示读/写操作过程中要从服务器检索或发送到服务器的最小字节数。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.ChunkSize">
          <source>The minimum number of bytes to retrieve or send.</source>
          <target state="translated">要检索或发送的最小字节数。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.ChunkSize">
          <source>The value returned by the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.ChunkSize%2A&gt;</ph> property is not a setting of the .NET Framework Data Provider for Oracle.</source>
          <target state="translated">返回的值<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.ChunkSize%2A&gt;</ph>属性不是适用于 Oracle 的.NET Framework 数据提供程序的设置。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.ChunkSize">
          <source>Instead, it is the value that the Oracle Call Interface (OCI) uses when communicating with the server.</source>
          <target state="translated">相反，它是与服务器通信时使用的 Oracle 调用接口 (OCI) 的值。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.ChunkSize">
          <source>Use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.ChunkSize%2A&gt;</ph> to ensure that client-side chunks are the same size.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.ChunkSize%2A&gt;</ph>以确保客户端块区大小相同。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.ChunkSize">
          <source>Reading or writing in smaller chunks does not cache data, and causes a less-optimized round trip to the server, because a full packet is not received or sent.</source>
          <target state="translated">读取或写入在较小区块中不会缓存数据，并导致到服务器，无优化往返行程，因为未收到或发送完整的数据包。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.ChunkSize">
          <source>The connection is closed.</source>
          <target state="translated">连接已关闭。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.ChunkSize">
          <source>The object was closed or disposed.</source>
          <target state="translated">对象已关闭或已释放。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.ChunkSize">
          <source>An Oracle error has occurred.</source>
          <target state="translated">发生了 Oracle 错误。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Clone">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object that references the same Oracle <ph id="ph2">&lt;see langword="LOB" /&gt;</ph> as the original <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object.</source>
          <target state="translated">创建一个新 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 对象，该对象与原始 <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 对象引用相同的 Oracle <ph id="ph2">&lt;see langword="LOB" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object that references the same Oracle <ph id="ph2">&lt;see langword="LOB" /&gt;</ph> as the original <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object.</source>
          <target state="translated">一个与原始 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 对象引用相同 Oracle <ph id="ph2">&lt;see langword="LOB" /&gt;</ph> 的新 <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Clone">
          <source>The properties of the new <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object initially have the same values as those of the original object.</source>
          <target state="translated">新属性<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>对象最初具有与原始对象相同的值。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Clone">
          <source>However, after the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Clone%2A&gt;</ph> is complete, each <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object is independent from the other.</source>
          <target state="translated">但是之后,<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Clone%2A&gt;</ph>已完成，每个<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>对象是相互独立。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Clone">
          <source>For example, changing the value of the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Position%2A&gt;</ph> property on the original <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> does not change the value of <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Position%2A&gt;</ph> on the copy.</source>
          <target state="translated">例如，更改的值<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Position%2A&gt;</ph>原始属性<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>不会更改的值<ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Position%2A&gt;</ph>的副本。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Clone">
          <source>The connection is closed.</source>
          <target state="translated">连接已关闭。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Clone">
          <source>The object was closed or disposed.</source>
          <target state="translated">对象已关闭或已释放。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Connection">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleConnection" /&gt;</ph> used by this instance of the <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          <target state="translated">获取由该 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleConnection" /&gt;</ph> 实例使用的 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Connection">
          <source>The connection to a data source.</source>
          <target state="translated">到数据源的连接。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Connection">
          <source>The object was closed or disposed.</source>
          <target state="translated">对象已关闭或已释放。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleLob">
          <source>Copies from this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> to a destination <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          <target state="translated">从该 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 复制到目标 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The destination <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          <target state="translated">目标 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>Copies from this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> to a destination <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          <target state="translated">从该 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 复制到目标 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The number of bytes copied.</source>
          <target state="translated">已复制的字节数。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>This excludes any padded bytes.</source>
          <target state="translated">这排除了所有已填充的字节。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The underlying data types must always be the same.</source>
          <target state="translated">基础数据类型必须始终相同。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>For example, if you are copying from an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>, the destination <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> must also be an <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>.</source>
          <target state="translated">例如，如果要复制的源<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>，目标<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>还必须是<ph id="ph3">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>If the destination offset is beyond the end of destination <ph id="ph1">`LOB`</ph>, the <ph id="ph2">`LOB`</ph> to which the data is being copied is extended.</source>
          <target state="translated">目标偏移量是否超出目标末尾<ph id="ph1">`LOB`</ph>、<ph id="ph2">`LOB`</ph>扩展到其中复制数据。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The space between the end of the <ph id="ph1">`LOB`</ph> and the destination offset beyond the end is padded with zeros for <ph id="ph2">`BLOB`</ph> data types and spaces for <ph id="ph3">`CLOB`</ph> and <ph id="ph4">`NCLOB`</ph> data types.</source>
          <target state="translated">末尾之间的空间<ph id="ph1">`LOB`</ph>和超出末尾位置的目标偏移量则用零填充<ph id="ph2">`BLOB`</ph>数据类型，以空格<ph id="ph3">`CLOB`</ph>和<ph id="ph4">`NCLOB`</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">要写入到<ph id="ph1">`LOB`</ph>，您必须检索<ph id="ph2">`LOB`</ph>使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>In this release, a write operation to a read-only <ph id="ph1">`LOB`</ph> might succeed, but not update the <ph id="ph2">`LOB`</ph> on the server.</source>
          <target state="translated">在此版本中，对只读的写入操作<ph id="ph1">`LOB`</ph>可能成功，但不是更新<ph id="ph2">`LOB`</ph>服务器上。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> will be updated.</source>
          <target state="translated">在这种情况下，但是的本地副本<ph id="ph1">`LOB`</ph>将更新。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>Therefore, later read operations on the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object might return the results of the write operation.</source>
          <target state="translated">因此，更高版本上读取操作<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>对象可能会返回写入操作的结果。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The <ph id="ph1">`CopyTo`</ph> method does not clear the contents of the destination <ph id="ph2">`OracleLob`</ph> before performing the copy operation.</source>
          <target state="translated"><ph id="ph1">`CopyTo`</ph>方法并不会清除目标的内容<ph id="ph2">`OracleLob`</ph>之前执行复制操作。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> specified in the <ph id="ph2">&lt;paramref name="destination" /&gt;</ph> parameter is null.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="destination" /&gt;</ph> 参数中指定的 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 为 null。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The operation is not within a transaction, the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object is null, or the connection is closed.</source>
          <target state="translated">该操作未处在事务中，<ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 对象为 null，或者连接已关闭。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>An Oracle error has occurred.</source>
          <target state="translated">发生了 Oracle 错误。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The destination <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph></source>
          <target state="translated">目标 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The offset to which to copy.</source>
          <target state="translated">要复制到的偏移量。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number of bytes.</source>
          <target state="translated">对于 <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> 和 <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> 数据类型，它必须为偶数字节数。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>Copies from this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> to a destination <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> with the specified amount of data.</source>
          <target state="translated">将指定数量的数据从该 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 复制到目标 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The number of bytes copied.</source>
          <target state="translated">已复制的字节数。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>This excludes any padded bytes.</source>
          <target state="translated">这排除了所有已填充的字节。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The underlying data types must always be the same.</source>
          <target state="translated">基础数据类型必须始终相同。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>For example, if you are copying from an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>, the destination <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> must also be an <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>.</source>
          <target state="translated">例如，如果要复制的源<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>，目标<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>还必须是<ph id="ph3">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>If the destination offset is beyond the end of destination <ph id="ph1">`LOB`</ph>, the <ph id="ph2">`LOB`</ph> to which the data is being copied is extended.</source>
          <target state="translated">目标偏移量是否超出目标末尾<ph id="ph1">`LOB`</ph>、<ph id="ph2">`LOB`</ph>扩展到其中复制数据。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The space between the end of <ph id="ph1">`LOB`</ph> and destination offset beyond the end is padded with zeros for <ph id="ph2">`BLOB`</ph> data types and spaces for <ph id="ph3">`CLOB`</ph> and <ph id="ph4">`NCLOB`</ph> data types.</source>
          <target state="translated">末尾之间的空间<ph id="ph1">`LOB`</ph>和目标超出末尾位置的偏移量则用零填充<ph id="ph2">`BLOB`</ph>数据类型，以空格<ph id="ph3">`CLOB`</ph>和<ph id="ph4">`NCLOB`</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">要写入到<ph id="ph1">`LOB`</ph>，您必须检索<ph id="ph2">`LOB`</ph>使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>In this release, a write operation to a read-only <ph id="ph1">`LOB`</ph> might succeed, but does not update the <ph id="ph2">`LOB`</ph> on the server.</source>
          <target state="translated">在此版本中，对只读的写入操作<ph id="ph1">`LOB`</ph>可能会成功，但不会更新<ph id="ph2">`LOB`</ph>服务器上。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">在这种情况下，但是的本地副本<ph id="ph1">`LOB`</ph>更新。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>Therefore, later read operations on the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object might return the results of the write operation.</source>
          <target state="translated">因此，更高版本上读取操作<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>对象可能会返回写入操作的结果。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The <ph id="ph1">`CopyTo`</ph> method does not clear the contents of the destination <ph id="ph2">`OracleLob`</ph> before performing the copy operation.</source>
          <target state="translated"><ph id="ph1">`CopyTo`</ph>方法并不会清除目标的内容<ph id="ph2">`OracleLob`</ph>之前执行复制操作。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> specified in the <ph id="ph2">&lt;paramref name="destination" /&gt;</ph> parameter is full.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="destination" /&gt;</ph> 参数中指定的 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 为 null。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>A value specified in the <ph id="ph1">&lt;paramref name="destinationOffset" /&gt;</ph> parameter is less than zero or greater than 4 gigabytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destinationOffset" /&gt;</ph> 参数中指定的值小于零，或大于 4 GB。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>A value specified in the <ph id="ph1">&lt;paramref name="destinationOffset" /&gt;</ph> parameter for a <ph id="ph2">&lt;see langword="CLOB" /&gt;</ph> or <ph id="ph3">&lt;see langword="NCLOB" /&gt;</ph> data type is not even.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destinationOffset" /&gt;</ph> 参数中为 <ph id="ph2">&lt;see langword="CLOB" /&gt;</ph> 或 <ph id="ph3">&lt;see langword="NCLOB" /&gt;</ph> 数据类型指定的值不是偶数。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>You must specify <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types as an even number of bytes.</source>
          <target state="translated">必须将 <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> 和 <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> 数据类型指定为偶数字节数。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The operation is not within a transaction, the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object is null, or the connection is closed.</source>
          <target state="translated">该操作未处在事务中，<ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 对象为 null，或者连接已关闭。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>An Oracle error has occurred.</source>
          <target state="translated">发生了 Oracle 错误。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The offset from which to copy.</source>
          <target state="translated">要从中复制的偏移量。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          <target state="translated">对于 <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> 和 <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> 数据类型，它必须为偶数。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The destination <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph><ph id="ph2">&lt;see cref="N:System.Data.OracleClient" /&gt;</ph>.</source>
          <target state="translated">目标 <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph><ph id="ph2">&lt;see cref="N:System.Data.OracleClient" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The destination offset to which to copy.</source>
          <target state="translated">要复制到的目标偏移量。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          <target state="translated">对于 <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> 和 <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> 数据类型，它必须为偶数。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The quantity of data, in bytes, to copy.</source>
          <target state="translated">要复制的数据数量（以字节为单位）。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          <target state="translated">对于 <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> 和 <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> 数据类型，它必须为偶数。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>Copies from this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> to a destination <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> with the specified amount of data, and the source offset.</source>
          <target state="translated">使用该源偏移量将指定数量的数据从该 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 复制到目标 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The number of bytes copied.</source>
          <target state="translated">已复制的字节数。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>This excludes any padded bytes.</source>
          <target state="translated">这排除了所有已填充的字节。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The underlying data types must always be the same.</source>
          <target state="translated">基础数据类型必须始终相同。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>For example, if you are copying from an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>, the destination <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> must also be an <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>.</source>
          <target state="translated">例如，如果要复制的源<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>，目标<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>还必须是<ph id="ph3">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>If the destination offset is beyond the end of destination <ph id="ph1">`LOB`</ph>, the <ph id="ph2">`LOB`</ph> to which the data is being copied is extended.</source>
          <target state="translated">目标偏移量是否超出目标末尾<ph id="ph1">`LOB`</ph>、<ph id="ph2">`LOB`</ph>扩展到其中复制数据。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The space between the end of <ph id="ph1">`LOB`</ph> and destination offset beyond the end is padded with zeros for <ph id="ph2">`BLOB`</ph> data types and spaces for <ph id="ph3">`CLOB`</ph> and <ph id="ph4">`NCLOB`</ph> data types.</source>
          <target state="translated">末尾之间的空间<ph id="ph1">`LOB`</ph>和目标超出末尾位置的偏移量则用零填充<ph id="ph2">`BLOB`</ph>数据类型，以空格<ph id="ph3">`CLOB`</ph>和<ph id="ph4">`NCLOB`</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">要写入到<ph id="ph1">`LOB`</ph>，您必须检索<ph id="ph2">`LOB`</ph>使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>In this release, a write operation to a read-only <ph id="ph1">`LOB`</ph> might succeed, but does not update the <ph id="ph2">`LOB`</ph> on the server.</source>
          <target state="translated">在此版本中，对只读的写入操作<ph id="ph1">`LOB`</ph>可能会成功，但不会更新<ph id="ph2">`LOB`</ph>服务器上。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">在这种情况下，但是的本地副本<ph id="ph1">`LOB`</ph>更新。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>Therefore, later read operations on the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object might return the results of the write operation.</source>
          <target state="translated">因此，更高版本上读取操作<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>对象可能会返回写入操作的结果。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The <ph id="ph1">`CopyTo`</ph> method does not clear the contents of the destination <ph id="ph2">`OracleLob`</ph> before performing the copy operation.</source>
          <target state="translated"><ph id="ph1">`CopyTo`</ph>方法并不会清除目标的内容<ph id="ph2">`OracleLob`</ph>之前执行复制操作。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> specified in the <ph id="ph2">&lt;paramref name="destination" /&gt;</ph> parameter is full.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="destination" /&gt;</ph> 参数中指定的 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 为 null。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>A value specified in the <ph id="ph1">&lt;paramref name="amount" /&gt;</ph>, <ph id="ph2">&lt;paramref name="sourceOffset" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="destinationOffset" /&gt;</ph> parameter is less than zero or greater than 4 gigabytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="amount" /&gt;</ph>、<ph id="ph2">&lt;paramref name="sourceOffset" /&gt;</ph> 或 <ph id="ph3">&lt;paramref name="destinationOffset" /&gt;</ph> 参数中指定的值小于零，或大于 4 GB。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>A value specified in the <ph id="ph1">&lt;paramref name="amount" /&gt;</ph>, <ph id="ph2">&lt;paramref name="sourceOffset" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="destinationOffset" /&gt;</ph> parameter for a <ph id="ph4">&lt;see langword="CLOB" /&gt;</ph> or <ph id="ph5">&lt;see langword="NCLOB" /&gt;</ph> data type is not even.</source>
          <target state="translated">在 <ph id="ph1">&lt;paramref name="amount" /&gt;</ph>、<ph id="ph2">&lt;paramref name="sourceOffset" /&gt;</ph> 或 <ph id="ph3">&lt;paramref name="destinationOffset" /&gt;</ph> 参数中为 <ph id="ph4">&lt;see langword="CLOB" /&gt;</ph> 或 <ph id="ph5">&lt;see langword="NCLOB" /&gt;</ph> 数据类型指定的值不是偶数。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The operation is not within a transaction, the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object is null, or the connection is closed.</source>
          <target state="translated">该操作未处在事务中，<ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 对象为 null，或者连接已关闭。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>An Oracle error has occurred.</source>
          <target state="translated">发生了 Oracle 错误。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.EndBatch">
          <source>Allows server-side triggers to resume firing after performing multiple write operations.</source>
          <target state="translated">允许服务器端触发器在执行多个写入操作之后继续激发。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.EndBatch">
          <source>Call the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;</ph> method before you begin performing write operations on the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;</ph>方法开始执行之前在写入操作<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.EndBatch">
          <source>The connection is closed.</source>
          <target state="translated">连接已关闭。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.EndBatch">
          <source>The object was closed or disposed.</source>
          <target state="translated">对象已关闭或已释放。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.EndBatch">
          <source>An Oracle error has occurred.</source>
          <target state="translated">发生了 Oracle 错误。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleLob">
          <source>Erases data from this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          <target state="translated">从该 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 清除数据。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>Erases all data from this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          <target state="translated">从该 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 清除所有数据。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>The number of bytes erased.</source>
          <target state="translated">清除的字节数。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;</ph> does not truncate data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;</ph> 不会不会截断数据。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>The <ph id="ph1">`LOB`</ph> length remains the same for a <ph id="ph2">`BLOB`</ph> data type, and the erased data is replaced by 0x00.</source>
          <target state="translated"><ph id="ph1">`LOB`</ph>长度保持不变的<ph id="ph2">`BLOB`</ph>数据类型和清除的数据替换为 0x00。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source><ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types are replaced by spaces.</source>
          <target state="translated"><ph id="ph1">`CLOB`</ph> 和<ph id="ph2">`NCLOB`</ph>数据类型替换为空格。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">要写入到<ph id="ph1">`LOB`</ph>，您必须检索<ph id="ph2">`LOB`</ph>使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>In this release, a write operation to a read-only <ph id="ph1">`LOB`</ph> might succeed, but does not update the <ph id="ph2">`LOB`</ph> on the server.</source>
          <target state="translated">在此版本中，对只读的写入操作<ph id="ph1">`LOB`</ph>可能会成功，但不会更新<ph id="ph2">`LOB`</ph>服务器上。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">在这种情况下，但是的本地副本<ph id="ph1">`LOB`</ph>更新。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>Therefore, later read operations on the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object might return the results of the write operation.</source>
          <target state="translated">因此，更高版本上读取操作<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>对象可能会返回写入操作的结果。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>The operation is not within a transaction, the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object is null, or the connection is closed.</source>
          <target state="translated">该操作未处在事务中，<ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 对象为 null，或者连接已关闭。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>The object was closed or disposed.</source>
          <target state="translated">对象已关闭或已释放。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>An Oracle error has occurred.</source>
          <target state="translated">发生了 Oracle 错误。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>The offset from which to erase.</source>
          <target state="translated">要从中清除的偏移量。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          <target state="translated">对于 <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> 和 <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> 数据类型，它必须为偶数。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>The quantity of data, in bytes, to erase.</source>
          <target state="translated">要清除的数据数量（以字节为单位）。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          <target state="translated">对于 <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> 和 <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> 数据类型，它必须为偶数。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>Erases the specified amount of data from this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          <target state="translated">从该 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 清除指定数量的数据。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>The number of bytes erased.</source>
          <target state="translated">清除的字节数。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>The sum of the values in the <ph id="ph1">`offset`</ph> and <ph id="ph2">`amount`</ph> parameters can be greater than that of the size of the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>.</source>
          <target state="translated">中的值的总和<ph id="ph1">`offset`</ph>和<ph id="ph2">`amount`</ph>参数可以是大于的大小<ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>Therefore, specifying a value greater than that returned by the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Length%2A&gt;</ph> property succeeds; however <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;</ph> only erases to the end of the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>.</source>
          <target state="translated">因此，指定的值比返回大<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Length%2A&gt;</ph>属性成功; 但是<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;</ph>仅清除到末尾<ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>(Similarly, if a negative value is passed to <ph id="ph1">`offset`</ph>, <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;</ph> will succeed, but only erase starting from the beginning of the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>.) This behavior is different from that of the <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Data.OracleClient.OracleLob.Write%2A&gt;</ph> methods, and offers the advantage of being able to erase all data from the value specified by <ph id="ph6">`offset`</ph> without making an additional roundtrip to the server to verify the actual size.</source>
          <target state="translated">(同样，如果传递给负值<ph id="ph1">`offset`</ph>，<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;</ph>将成功，但从的开头开始，才清除<ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>。)此行为是不同的<ph id="ph4">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph>和<ph id="ph5">&lt;xref:System.Data.OracleClient.OracleLob.Write%2A&gt;</ph>方法和产品/服务的优势在于能够擦除所有数据值指定<ph id="ph6">`offset`</ph>而不对其他往返进行服务器验证的实际大小。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;</ph> does not truncate data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;</ph> 不会不会截断数据。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>The <ph id="ph1">`LOB`</ph> length remains the same for a <ph id="ph2">`BLOB`</ph> data type, and the erased data is replaced by 0x00.</source>
          <target state="translated"><ph id="ph1">`LOB`</ph>长度保持不变的<ph id="ph2">`BLOB`</ph>数据类型和清除的数据替换为 0x00。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source><ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types are replaced by spaces.</source>
          <target state="translated"><ph id="ph1">`CLOB`</ph> 和<ph id="ph2">`NCLOB`</ph>数据类型替换为空格。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">要写入到<ph id="ph1">`LOB`</ph>，您必须检索<ph id="ph2">`LOB`</ph>使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>In this release, a write operation to a read-only <ph id="ph1">`LOB`</ph> might succeed, but does not update the <ph id="ph2">`LOB`</ph> on the server.</source>
          <target state="translated">在此版本中，对只读的写入操作<ph id="ph1">`LOB`</ph>可能会成功，但不会更新<ph id="ph2">`LOB`</ph>服务器上。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">在这种情况下，但是的本地副本<ph id="ph1">`LOB`</ph>更新。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>Therefore, later read operations on the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object might return the results of the write operation.</source>
          <target state="translated">因此，更高版本上读取操作<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>对象可能会返回写入操作的结果。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>The operation is not within a transaction, the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object is null, or the connection is closed.</source>
          <target state="translated">该操作未处在事务中，<ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 对象为 null，或者连接已关闭。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>The object was closed or disposed.</source>
          <target state="translated">对象已关闭或已释放。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>An Oracle error has occurred.</source>
          <target state="translated">发生了 Oracle 错误。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Flush">
          <source>Not currently supported.</source>
          <target state="translated">目前尚不支持。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Flush">
          <source>In this release, this method is not functional.</source>
          <target state="translated">在此版本中，此方法不起作用。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.IsBatched">
          <source>Gets a value indicating whether an application called the <ph id="ph1">&lt;see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /&gt;</ph> method.</source>
          <target state="translated">获取一个值，该值指示应用程序是否调用了 <ph id="ph1">&lt;see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.IsBatched">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if application called the <ph id="ph2">&lt;see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /&gt;</ph> method, otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果应用程序调用了 <ph id="ph2">&lt;see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /&gt;</ph> 方法，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.IsBatched">
          <source>When using an Oracle 8.0.5 server, an Oracle "ORA-00600: internal error code" exception is thrown.</source>
          <target state="translated">当使用 Oracle 8.0.5 服务器，Oracle"ORA 00600： 内部错误代码"会引发异常。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.IsBatched">
          <source>An Oracle error has occurred.</source>
          <target state="translated">发生了 Oracle 错误。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.IsNull">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> is a <ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleBFile.Null" /&gt;</ph> stream.</source>
          <target state="translated">获取一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 是否为一个 <ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleBFile.Null" /&gt;</ph> 流。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.IsNull">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> is a <ph id="ph3">&lt;see cref="F:System.Data.OracleClient.OracleBFile.Null" /&gt;</ph> stream, otherwise <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 是 <ph id="ph3">&lt;see cref="F:System.Data.OracleClient.OracleBFile.Null" /&gt;</ph> 流，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.IsTemporary">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> is a temporary <ph id="ph2">&lt;see langword="LOB" /&gt;</ph>.</source>
          <target state="translated">获取一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 是否为临时 <ph id="ph2">&lt;see langword="LOB" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.IsTemporary">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> is a temporary <ph id="ph3">&lt;see langword="LOB" /&gt;</ph>, otherwise <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 是临时 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则为 <ph id="ph3">&lt;see langword="LOB" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.IsTemporary">
          <source>The following example demonstrates how to create a temporary <ph id="ph1">`LOB`</ph>.</source>
          <target state="translated">下面的示例演示如何创建一个临时<ph id="ph1">`LOB`</ph>。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.IsTemporary">
          <source>The connection is closed.</source>
          <target state="translated">连接已关闭。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.IsTemporary">
          <source>The object was closed or disposed.</source>
          <target state="translated">对象已关闭或已释放。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.IsTemporary">
          <source>An Oracle error has occurred.</source>
          <target state="translated">发生了 Oracle 错误。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Length">
          <source>Gets a value that returns the size of the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          <target state="translated">获取一个值，该值返回 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 的大小。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Length">
          <source>The size of the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> in bytes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 的大小（以字节为单位）。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Length">
          <source>The size of the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> is always returned in bytes for all data types.</source>
          <target state="translated">大小<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>始终返回以字节为单位的所有数据。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Length">
          <source>The connection is closed.</source>
          <target state="translated">连接已关闭。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Length">
          <source>The object was closed or disposed.</source>
          <target state="translated">对象已关闭或已释放。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Length">
          <source>An Oracle error has occurred.</source>
          <target state="translated">发生了 Oracle 错误。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>Gets a value that returns the <ph id="ph1">&lt;see langword="LOB" /&gt;</ph> data type.</source>
          <target state="translated">获取一个值，该值返回 <ph id="ph1">&lt;see langword="LOB" /&gt;</ph> 数据类型。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleType" /&gt;</ph><ph id="ph2">&lt;see langword="LOB" /&gt;</ph> data types.</source>
          <target state="translated">之一<ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleType" /&gt;</ph><ph id="ph2">&lt;see langword="LOB" /&gt;</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>An <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> may be one of the following <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleType&gt;</ph> data types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>可能是下列项之一<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleType&gt;</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>OracleType data type</source>
          <target state="translated">OracleType 数据类型</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>An Oracle <ph id="ph1">`BLOB`</ph> data type that contains binary data with a maximum size of 4 gigabytes.</source>
          <target state="translated">包含二进制数据的 Oracle <ph id="ph1">`BLOB`</ph> 数据类型，其最大大小为 4 GB。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>This maps to an <ph id="ph1">&lt;xref:System.Array&gt;</ph> of type <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</source>
          <target state="translated">它映射到 <ph id="ph1">&lt;xref:System.Array&gt;</ph> 类型的 <ph id="ph2">&lt;xref:System.Byte&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>An Oracle <ph id="ph1">`CLOB`</ph> data type that contains character data, based on the default character set on the server, with a maximum size of 4 gigabytes.</source>
          <target state="translated">包含字符数据的 Oracle <ph id="ph1">`CLOB`</ph> 数据类型，根据服务器的默认字符集，其最大大小为 4 GB。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>This maps to <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">它映射到 <ph id="ph1">&lt;xref:System.String&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>An Oracle <ph id="ph1">`NCLOB`</ph> data type that contains character data, based on the national character set on the server with a maximum size of 4 gigabytes.</source>
          <target state="translated">Oracle<ph id="ph1">`NCLOB`</ph>基于最大大小为 4 千兆字节在服务器上的区域字符集包含字符数据的数据类型。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>This maps to <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">它映射到 <ph id="ph1">&lt;xref:System.String&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="F:System.Data.OracleClient.OracleLob.Null">
          <source>Represents a null <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object.</source>
          <target state="translated">表示一个 null <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.OracleClient.OracleLob.Null">
          <source>You can construct an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> that is NULL using this format:</source>
          <target state="translated">您可以构造<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>值为 NULL，使用此格式：</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.OracleClient.OracleLob.Null">
          <source>This technique is used primarily to test whether a <ph id="ph1">`LOB`</ph> returned from the server is NULL, as this example illustrates:</source>
          <target state="translated">此方法主要用于测试是否<ph id="ph1">`LOB`</ph>从服务器返回为 NULL，如本示例所示：</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.OracleClient.OracleLob.Null">
          <source>A NULL <ph id="ph1">`LOB`</ph> behaves similarly to a zero byte <ph id="ph2">`LOB`</ph> in that <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> succeeds and always returns zero bytes.</source>
          <target state="translated">NULL<ph id="ph1">`LOB`</ph>的行为类似于零字节<ph id="ph2">`LOB`</ph>在于<ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph>成功并始终返回零字节。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>Gets the current read position in the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> stream.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 流中的当前读取位置。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>The current position within the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 流中的当前位置。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>The stream must support seeking to get or set the position.</source>
          <target state="translated">流必须支持查找要获取或设置位置。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.CanSeek%2A&gt;</ph> property to determine whether the stream supports seeking.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.CanSeek%2A&gt;</ph>属性以确定流是否支持查找。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>Seeking to any location beyond the length of the stream is supported.</source>
          <target state="translated">支持查找到流的长度超出任何位置。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>Seeking to an odd position for <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types is also supported.</source>
          <target state="translated">查找到的奇数位置<ph id="ph1">`CLOB`</ph>和<ph id="ph2">`NCLOB`</ph>还支持数据类型。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> property.</source>
          <target state="translated">有关详细信息，请参阅备注部分的<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Position%2A&gt;</ph> property does not keep track of the number of bytes from the stream that have been consumed, skipped, or both.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Position%2A&gt;</ph>属性不会不跟踪的从和 / 或已用完，跳过，流的字节数。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>The connection is closed.</source>
          <target state="translated">连接已关闭。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>The object was closed or disposed.</source>
          <target state="translated">对象已关闭或已释放。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>An array of bytes.</source>
          <target state="translated">字节数组。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>When this method returns, the buffer contains the specified byte array with the values between <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> and (<bpt id="p2">&lt;c&gt;</bpt>offset<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept>) replaced by the bytes read from the current source.</source>
          <target state="translated">此方法返回时，该缓冲区包含指定的字节数组，该数组的 <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> 和 (<bpt id="p2">&lt;c&gt;</bpt>offset<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept>) 之间的值由从当前源中读取的字节替换。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The zero-based byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin storing the data read from the current stream.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> 中从零开始的字节偏移量，从此处开始存储从当前流中读取的数据。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          <target state="translated">对于 <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> 和 <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> 数据类型，它必须为偶数。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to be read from the current stream.</source>
          <target state="translated">要从当前流中最多读取的字节数。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          <target state="translated">对于 <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> 和 <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> 数据类型，它必须为偶数。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Reads a sequence of bytes from the current <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> stream and advances the position within the stream by the number of bytes read.</source>
          <target state="translated">从当前 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 流中读取字节序列，并在该流中按照读取的字节数提升位置。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The total number of bytes read into the buffer.</source>
          <target state="translated">读入缓冲区中的总字节数。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>This may be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</source>
          <target state="translated">如果当前可用的字节数没有请求的字节数那么多，则总字节数可能小于请求的字节数，或者如果已到达流的末尾，则为零 (0)。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> method reads a maximum of <ph id="ph2">`count`</ph> bytes from the current stream and stores them in <ph id="ph3">`buffer`</ph> beginning at <ph id="ph4">`offset`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph>方法读取的最多<ph id="ph2">`count`</ph>字节从当前流，并且将它们存储在<ph id="ph3">`buffer`</ph>开始<ph id="ph4">`offset`</ph>。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The current position within the stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the stream remains unchanged.</source>
          <target state="translated">流中的当前位置高级通过读取; 的字节数但是，如果发生异常，将流中的当前位置保持不变。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> returns the number of bytes read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> 返回读取的字节数。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The return value is zero only if the position is currently at the end of the stream.</source>
          <target state="translated">仅当位置当前在流末尾，则返回值为零。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> will block until at least one byte of data can be read, in the event that no data is available.<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> 将一直阻止到至少一个字节的数据可供读取的事件中不会提供数据。<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>returns 0 if you attempt to read from a <ph id="ph1">`LOB`</ph> when the current position is at the end of <ph id="ph2">`LOB`</ph>.</source>
          <target state="translated">如果你尝试要从其中进行读取，则返回 0<ph id="ph1">`LOB`</ph>当前位置时末尾<ph id="ph2">`LOB`</ph>。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> can return fewer bytes than requested even if the end of the stream has not been reached.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> 即使尚未达到流结尾，则可以返回少于所请求的字节。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The .NET Framework Data Provider for Oracle handles all <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data as Unicode.</source>
          <target state="translated">适用于 Oracle 的.NET Framework 数据提供程序将处理所有<ph id="ph1">`CLOB`</ph>和<ph id="ph2">`NCLOB`</ph>为 Unicode 数据。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Therefore, when accessing <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types, you are always dealing with the number of bytes, where each character is 2 bytes.</source>
          <target state="translated">因此，在访问时<ph id="ph1">`CLOB`</ph>和<ph id="ph2">`NCLOB`</ph>数据类型，你始终处理的字节，其中每个字符是 2 个字节数。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>For example, if a string of text containing three characters is saved as an <ph id="ph1">`NCLOB`</ph> on an Oracle server where the character set is 4 bytes per character, and you perform a <ph id="ph2">`Read`</ph> operation, you specify the length of the string as 6 bytes, although it is stored as 12 bytes on the server.</source>
          <target state="translated">例如，如果包含三个字符的文本字符串保存为<ph id="ph1">`NCLOB`</ph>Oracle 服务器的字符集为每个字符，4 个字节，其中你执行上<ph id="ph2">`Read`</ph>操作，则指定的字符串的长度为 6 个字节，尽管它是存储为在服务器上的 12 个字节。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The following C# example demonstrates how to read <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> objects.</source>
          <target state="translated">下面的 C# 示例演示如何读取<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>You can construct an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> that is NULL using this format:</source>
          <target state="translated">您可以构造<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>值为 NULL，使用此格式：</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>This technique is used primarily to test whether a <ph id="ph1">`LOB`</ph> returned from the server is NULL, as the following example illustrates.</source>
          <target state="translated">此方法主要用于测试是否<ph id="ph1">`LOB`</ph>从服务器返回为 NULL，如下面的示例所示。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>A NULL <ph id="ph1">`LOB`</ph> behaves similarly to a zero byte <ph id="ph2">`LOB`</ph> in that <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> succeeds and always returns zero bytes.</source>
          <target state="translated">NULL<ph id="ph1">`LOB`</ph>的行为类似于零字节<ph id="ph2">`LOB`</ph>在于<ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph>成功并始终返回零字节。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>A value in the <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> parameter is not positive.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 参数中的值为非正。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The sum of the offset and count parameters is larger than the buffer length.</source>
          <target state="translated">offset 参数与 count 参数之和大于 buffer 的长度。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>A value specified in the <ph id="ph1">&lt;paramref name="amount" /&gt;</ph> or <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> parameter is less than zero or greater than 4 gigabytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="amount" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> 参数中指定的值小于零，或大于 4 GB。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The operation is not within a transaction, the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object is null, or the connection is closed.</source>
          <target state="translated">该操作未处在事务中，<ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 对象为 null，或者连接已关闭。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The object was closed or disposed.</source>
          <target state="translated">对象已关闭或已释放。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>An Oracle error has occurred.</source>
          <target state="translated">发生了 Oracle 错误。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>A byte offset relative to origin.</source>
          <target state="translated">相对于 origin 的字节偏移量。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> is negative, the new position precedes the position specified by <bpt id="p2">&lt;c&gt;</bpt>origin<ept id="p2">&lt;/c&gt;</ept> by the number of bytes specified by <bpt id="p3">&lt;c&gt;</bpt>offset<ept id="p3">&lt;/c&gt;</ept>.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> 为负，则新位置位于 <bpt id="p2">&lt;c&gt;</bpt>origin<ept id="p2">&lt;/c&gt;</ept> 指定的位置之前 <bpt id="p3">&lt;c&gt;</bpt>offset<ept id="p3">&lt;/c&gt;</ept> 指定的字节数。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> is zero, the new position is the position specified by <bpt id="p2">&lt;c&gt;</bpt>origin<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> 为零，则新位置是 <bpt id="p2">&lt;c&gt;</bpt>origin<ept id="p2">&lt;/c&gt;</ept> 指定的位置。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> is positive, the new position follows the position specified by <bpt id="p2">&lt;c&gt;</bpt>origin<ept id="p2">&lt;/c&gt;</ept> by the number of bytes specified by <bpt id="p3">&lt;c&gt;</bpt>offset<ept id="p3">&lt;/c&gt;</ept>.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> 为正，则新位置位于 <bpt id="p2">&lt;c&gt;</bpt>origin<ept id="p2">&lt;/c&gt;</ept> 指定的位置之后 <bpt id="p3">&lt;c&gt;</bpt>offset<ept id="p3">&lt;/c&gt;</ept> 指定的字节数。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph> indicating the reference point used to obtain the new position.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph> 类型的值，指示用于获取新位置的参考点。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Sets the position on the current <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> stream.</source>
          <target state="translated">在当前 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 流上设置位置。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The new position within the current stream.</source>
          <target state="translated">当前流中的新位置。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <ph id="ph1">`offset`</ph> is negative, the new position must precede the position specified by <ph id="ph2">`origin`</ph> by the number of bytes specified by <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`offset`</ph>为负，新位置必须位于之前指定的位置<ph id="ph2">`origin`</ph>按指定的字节数<ph id="ph3">`offset`</ph>。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <ph id="ph1">`offset`</ph> is zero, the new position must be the position specified by <ph id="ph2">`origin`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`offset`</ph>为零，新位置必须是指定的位置<ph id="ph2">`origin`</ph>。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <ph id="ph1">`offset`</ph> is positive, the new position must follow the position specified by <ph id="ph2">`origin`</ph> by the number of bytes specified by <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`offset`</ph>为正，新位置必须遵循指定的位置<ph id="ph2">`origin`</ph>按指定的字节数<ph id="ph3">`offset`</ph>。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Seeking to any location beyond the length of the stream is supported.</source>
          <target state="translated">支持查找到流的长度超出任何位置。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Seeking to an odd position for <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types is also supported.</source>
          <target state="translated">查找到的奇数位置<ph id="ph1">`CLOB`</ph>和<ph id="ph2">`NCLOB`</ph>还支持数据类型。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> property.</source>
          <target state="translated">有关详细信息，请参阅备注部分的<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The <ph id="ph1">&lt;paramref name="origin" /&gt;</ph> parameter does not contain a valid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="origin" /&gt;</ph> 参数不包含有效的值。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The resulting position is beyond the length of the value.</source>
          <target state="translated">结果位置在值的长度之外。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object was closed or disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 对象已关闭或已释放。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>An Oracle error has occurred.</source>
          <target state="translated">发生了 Oracle 错误。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>The desired length of the current <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> stream in bytes.</source>
          <target state="translated">所需的当前 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 流的长度（以字节表示）。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          <target state="translated">对于 <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> 和 <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> 数据类型，它必须为偶数。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>Sets the length of the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> stream to a value less than the current length.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 流的长度设置为小于当前长度的值。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>An attempt to increase the length of the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> stream fails, and returns "Message: ORA-22926: specified trim length is greater than current LOB value's length" from the Oracle server.</source>
          <target state="translated">尝试增加的长度<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>流失败，并返回"消息： ORA 22926： 指定剪裁长度大于当前 LOB 值的长度"从 Oracle 服务器。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>A stream must support both writing and seeking for <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.SetLength%2A&gt;</ph> to function.</source>
          <target state="translated">流必须支持写入和查找有关<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.SetLength%2A&gt;</ph>到函数。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>The .NET Framework Data Provider for Oracle handles all <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data as Unicode.</source>
          <target state="translated">适用于 Oracle 的.NET Framework 数据提供程序将处理所有<ph id="ph1">`CLOB`</ph>和<ph id="ph2">`NCLOB`</ph>为 Unicode 数据。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>Therefore, when accessing <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types, you are always dealing with the number of bytes, where each character is 2 bytes.</source>
          <target state="translated">因此，在访问时<ph id="ph1">`CLOB`</ph>和<ph id="ph2">`NCLOB`</ph>数据类型，你始终处理的字节，其中每个字符是 2 个字节数。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>For example, if a string of text containing three characters is saved as an <ph id="ph1">`NCLOB`</ph> on an Oracle server where the character set is 4 bytes per character, and you perform a <ph id="ph2">`SetLength`</ph> operation, you specify the length of the string as 6 bytes, although it is stored as 12 bytes on the server.</source>
          <target state="translated">例如，如果包含三个字符的文本字符串保存为<ph id="ph1">`NCLOB`</ph>Oracle 服务器的字符集为每个字符，4 个字节，其中你执行上<ph id="ph2">`SetLength`</ph>操作，则指定的字符串的长度为 6 个字节，尽管它是存储为在服务器上的 12 个字节。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">要写入到<ph id="ph1">`LOB`</ph>，您必须检索<ph id="ph2">`LOB`</ph>使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>A write operation to a read-only <ph id="ph1">`LOB`</ph> might succeed, but does not update the <ph id="ph2">`LOB`</ph> on the server.</source>
          <target state="translated">A 会写入操作的只读<ph id="ph1">`LOB`</ph>可能会成功，但不会更新<ph id="ph2">`LOB`</ph>服务器上。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">在这种情况下，但是的本地副本<ph id="ph1">`LOB`</ph>更新。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>Therefore, later read operations on the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object might return the results of the write operation.</source>
          <target state="translated">因此，更高版本上读取操作<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>对象可能会返回写入操作的结果。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>A value specified in the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter for a <ph id="ph2">&lt;see langword="CLOB" /&gt;</ph> or <ph id="ph3">&lt;see langword="NCLOB" /&gt;</ph> data type is not even.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数中为 <ph id="ph2">&lt;see langword="CLOB" /&gt;</ph> 或 <ph id="ph3">&lt;see langword="NCLOB" /&gt;</ph> 数据类型指定的值不是偶数。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>A value specified in the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter is less than zero or greater than 4 gigabytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数中指定的值小于零，或大于 4 GB。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>The operation is not within a transaction, the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object is null, or the connection is closed.</source>
          <target state="translated">该操作未处在事务中，<ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 对象为 null，或者连接已关闭。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>The object was closed or disposed.</source>
          <target state="translated">对象已关闭或已释放。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>An Oracle error has occurred.</source>
          <target state="translated">发生了 Oracle 错误。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>Gets the common language runtime stream value equivalent of the underlying value.</source>
          <target state="translated">获取公共语言运行时流值（基础值的等效值）。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>For <ph id="ph1">&lt;see cref="F:System.Data.OracleClient.OracleType.Blob" /&gt;</ph>, an array of type <ph id="ph2">&lt;see langword="Byte[]" /&gt;</ph>.</source>
          <target state="translated">对于 <ph id="ph1">&lt;see cref="F:System.Data.OracleClient.OracleType.Blob" /&gt;</ph>，为 <ph id="ph2">&lt;see langword="Byte[]" /&gt;</ph> 类型的数组。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>For <ph id="ph1">&lt;see cref="F:System.Data.OracleClient.OracleType.Clob" /&gt;</ph> and <ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleType.NClob" /&gt;</ph>, a <ph id="ph3">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated">对于 <ph id="ph1">&lt;see cref="F:System.Data.OracleClient.OracleType.Clob" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleType.NClob" /&gt;</ph>，为 <ph id="ph3">&lt;see langword="String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>For null data, <ph id="ph1">&lt;see cref="T:System.DBNull" /&gt;</ph>.</source>
          <target state="translated">对于 null 数据，则为 <ph id="ph1">&lt;see cref="T:System.DBNull" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>For <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.Blob&gt;</ph> data types, <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Value%2A&gt;</ph> returns the entire underlying data as a contiguous array of type <ph id="ph3">`Byte[]`</ph>.</source>
          <target state="translated">有关<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.Blob&gt;</ph>数据类型，<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Value%2A&gt;</ph>连续类型的数组的形式返回整个基础数据<ph id="ph3">`Byte[]`</ph>。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>For <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.Clob&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph> data types, <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Value%2A&gt;</ph> returns all the data as a <ph id="ph4">`String`</ph> data type.</source>
          <target state="translated">有关<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.Clob&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>数据类型，<ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Value%2A&gt;</ph>返回所有数据作为<ph id="ph4">`String`</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>For null data, <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Value%2A&gt;</ph> returns <ph id="ph2">&lt;xref:System.DBNull&gt;</ph>.</source>
          <target state="translated">为 null 数据一样，<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Value%2A&gt;</ph>返回<ph id="ph2">&lt;xref:System.DBNull&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>By comparing the returned values, you can distinguish among empty data, null data, and data.</source>
          <target state="translated">通过比较返回的值，可以区分空数据、 null 数据和数据。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>A benefit of using <ph id="ph1">`LOB`</ph> data types is the capability to retrieve large amounts of data in chunks at the client.</source>
          <target state="translated">使用的优点<ph id="ph1">`LOB`</ph>数据类型是可检索大量数据在客户端的小区块中的功能。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>However, when you use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Value%2A&gt;</ph>, you obtain all the data for the <ph id="ph2">`LOB`</ph> column as one contiguous chunk, which can significantly increase application overhead.</source>
          <target state="translated">但是，当使用<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Value%2A&gt;</ph>，获取有关的所有数据<ph id="ph2">`LOB`</ph>列作为一个连续的区块，这可以显著提高应用程序开销。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>The object was closed or disposed.</source>
          <target state="translated">对象已关闭或已释放。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>An Oracle error has occurred.</source>
          <target state="translated">发生了 Oracle 错误。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>An array of bytes.</source>
          <target state="translated">字节数组。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>This method copies the number of bytes specified in <bpt id="p1">&lt;c&gt;</bpt>count<ept id="p1">&lt;/c&gt;</ept> from <bpt id="p2">&lt;c&gt;</bpt>buffer<ept id="p2">&lt;/c&gt;</ept> to the current stream.</source>
          <target state="translated">此方法将 <bpt id="p1">&lt;c&gt;</bpt>count<ept id="p1">&lt;/c&gt;</ept> 中指定的字节数从 <bpt id="p2">&lt;c&gt;</bpt>buffer<ept id="p2">&lt;/c&gt;</ept> 复制到当前流中。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The zero-based byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin copying bytes to the current stream.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> 中的从零开始的字节偏移量，从此处开始将字节复制到当前流。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          <target state="translated">对于 <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> 和 <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> 数据类型，它必须为偶数。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to be written to the current stream.</source>
          <target state="translated">要写入当前流的字节数。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          <target state="translated">对于 <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> 和 <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> 数据类型，它必须为偶数。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Writes a sequence of bytes to the current <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> stream, and advances the current position within this stream by the number of bytes written.</source>
          <target state="translated">将一个字节序列写入当前 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 流，并使流中的当前位置前进所写入的字节数。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>If the write operation is successful, the position within the stream advances by the number of bytes written.</source>
          <target state="translated">如果写入操作成功，将流内的位置向前移动写入的字节数。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>If an exception occurs, the position within the stream remains unchanged.</source>
          <target state="translated">如果发生异常，流中的位置将保持不变。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Writing beyond the end of <ph id="ph1">`LOB`</ph> is allowed and enlarges the <ph id="ph2">`LOB`</ph> by the number of bytes written.</source>
          <target state="translated">结尾之外写入<ph id="ph1">`LOB`</ph>允许和放大<ph id="ph2">`LOB`</ph>通过写入的字节数。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The .NET Framework Data Provider for Oracle handles all <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data as Unicode.</source>
          <target state="translated">适用于 Oracle 的.NET Framework 数据提供程序将处理所有<ph id="ph1">`CLOB`</ph>和<ph id="ph2">`NCLOB`</ph>为 Unicode 数据。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Therefore, when accessing <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types, you are always dealing with the number of bytes, where each character is 2 bytes.</source>
          <target state="translated">因此，在访问时<ph id="ph1">`CLOB`</ph>和<ph id="ph2">`NCLOB`</ph>数据类型，你始终处理的字节，其中每个字符是 2 个字节数。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>For example, if a string of text containing three characters is saved as an <ph id="ph1">`NCLOB`</ph> on an Oracle server where the character set is 4 bytes per character, and you perform a <ph id="ph2">`Write`</ph> operation, you specify the length of the string as 6 bytes, although it is stored as 12 bytes on the server.</source>
          <target state="translated">例如，如果包含三个字符的文本字符串保存为<ph id="ph1">`NCLOB`</ph>Oracle 服务器的字符集为每个字符，4 个字节，其中你执行上<ph id="ph2">`Write`</ph>操作，则指定的字符串的长度为 6 个字节，尽管它是存储为在服务器上的 12 个字节。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">要写入到<ph id="ph1">`LOB`</ph>，您必须检索<ph id="ph2">`LOB`</ph>使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The following C# example demonstrates how to write to <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> objects.</source>
          <target state="translated">下面的 C# 示例演示如何将写入到<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>A write operation to a read-only <ph id="ph1">`LOB`</ph> might succeed, but does not update the <ph id="ph2">`LOB`</ph> on the server.</source>
          <target state="translated">A 会写入操作的只读<ph id="ph1">`LOB`</ph>可能会成功，但不会更新<ph id="ph2">`LOB`</ph>服务器上。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">在这种情况下，但是的本地副本<ph id="ph1">`LOB`</ph>更新。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Therefore, later read operations on the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object might return the results of the write operation.</source>
          <target state="translated">因此，更高版本上读取操作<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>对象可能会返回写入操作的结果。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> parameter is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 参数为 null 引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>A value in the <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> parameter is not positive.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 参数中的值为非正。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The sum of the <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> parameters is larger than the <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph> length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 参数与 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 参数之和大于 <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph> 的长度。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>A value specified in the <ph id="ph1">&lt;paramref name="count" /&gt;</ph> or <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> parameter is less than zero or greater than 4 gigabytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> 参数中指定的值小于零，或大于 4 GB。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>You must specify <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types as an even number of bytes.</source>
          <target state="translated">必须将 <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> 和 <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> 数据类型指定为偶数字节数。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The operation is not within a transaction, the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object is null, or the connection is closed.</source>
          <target state="translated">该操作未处在事务中，<ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 对象为 null，或者连接已关闭。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The object was closed or disposed.</source>
          <target state="translated">对象已关闭或已释放。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>An Oracle error has occurred.</source>
          <target state="translated">发生了 Oracle 错误。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
          <source>The byte to write to the stream.</source>
          <target state="translated">要写入流中的字节。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
          <source>Writes a byte to the current position in the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> stream, and advances the position within the stream by one byte.</source>
          <target state="translated">将一个字节写入 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 流内的当前位置，并将流内的位置向前推进一个字节。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
          <source>If the write operation is successful, the position within the stream advances by one byte.</source>
          <target state="translated">如果写入操作是否成功，将流中的位置向前推进 1 个字节。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
          <source>If an exception occurs, the position within the stream remains unchanged.</source>
          <target state="translated">如果发生异常，流中的位置将保持不变。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
          <source>Writing beyond the end of the <ph id="ph1">`LOB`</ph> is allowed and enlarges the <ph id="ph2">`LOB`</ph> by one byte.</source>
          <target state="translated">结尾之外写入<ph id="ph1">`LOB`</ph>允许和放大<ph id="ph2">`LOB`</ph>1 个字节。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">要写入到<ph id="ph1">`LOB`</ph>，您必须检索<ph id="ph2">`LOB`</ph>使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
          <source>A write operation to a read-only <ph id="ph1">`LOB`</ph> might succeed, but does not update the <ph id="ph2">`LOB`</ph> on the server.</source>
          <target state="translated">A 会写入操作的只读<ph id="ph1">`LOB`</ph>可能会成功，但不会更新<ph id="ph2">`LOB`</ph>服务器上。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">在这种情况下，但是的本地副本<ph id="ph1">`LOB`</ph>更新。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
          <source>Therefore, later read operations on the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object might return the results of the write operation.</source>
          <target state="translated">因此，更高版本上读取操作<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>对象可能会返回写入操作的结果。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>