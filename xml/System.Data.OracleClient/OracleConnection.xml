<Type Name="OracleConnection" FullName="System.Data.OracleClient.OracleConnection">
  <TypeSignature Language="C#" Value="public sealed class OracleConnection : System.Data.Common.DbConnection, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleConnection extends System.Data.Common.DbConnection implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleConnection&#xA;Inherits DbConnection&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleConnection sealed : System::Data::Common::DbConnection, ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("InfoMessage")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("OracleConnection has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0a969-101">表示一个到数据库的打开的连接。</span><span class="sxs-lookup"><span data-stu-id="0a969-101">Represents an open connection to a database.</span></span> <span data-ttu-id="0a969-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="0a969-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a969-103">此类型已弃用，将.NET Framework 的未来版本中删除。</span><span class="sxs-lookup"><span data-stu-id="0a969-103">This type is deprecated and will be removed in a future version of the .NET Framework.</span></span> <span data-ttu-id="0a969-104">有关详细信息，请参阅[Oracle 和 ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md)。</span><span class="sxs-lookup"><span data-stu-id="0a969-104">For more information, see [Oracle and ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).</span></span>  
  
 <span data-ttu-id="0a969-105"><xref:System.Data.OracleClient.OracleConnection>对象表示的唯一连接到 Oracle 数据库。</span><span class="sxs-lookup"><span data-stu-id="0a969-105">An <xref:System.Data.OracleClient.OracleConnection> object represents a unique connection to an Oracle database.</span></span> <span data-ttu-id="0a969-106">对于客户端/服务器数据库系统，它相当于网络连接到服务器。</span><span class="sxs-lookup"><span data-stu-id="0a969-106">In the case of a client/server database system, it is equivalent to a network connection to the server.</span></span>  
  
 <span data-ttu-id="0a969-107">创建的实例的应用程序<xref:System.Data.OracleClient.OracleConnection>对象可以设置声明性或命令性安全要求，要求所有直接和间接调用方拥有足够权限的代码。</span><span class="sxs-lookup"><span data-stu-id="0a969-107">An application that creates an instance of the <xref:System.Data.OracleClient.OracleConnection> object can set declarative or imperative security demands that require all direct and indirect callers to have adequate permission to the code.</span></span> <span data-ttu-id="0a969-108"><xref:System.Data.OracleClient.OracleConnection> 通过使用创建的安全要求<xref:System.Data.OracleClient.OraclePermission>对象。</span><span class="sxs-lookup"><span data-stu-id="0a969-108"><xref:System.Data.OracleClient.OracleConnection> creates security demands by using the <xref:System.Data.OracleClient.OraclePermission> object.</span></span> <span data-ttu-id="0a969-109">用户可以验证他们的代码通过使用具有足够的权限<xref:System.Data.OracleClient.OraclePermissionAttribute>对象。</span><span class="sxs-lookup"><span data-stu-id="0a969-109">Users can verify that their code has adequate permissions by using the <xref:System.Data.OracleClient.OraclePermissionAttribute> object.</span></span> <span data-ttu-id="0a969-110">用户和管理员还可以使用代码访问安全策略工具 (Caspol.exe) 来修改在计算机、 用户和企业级别的安全策略。</span><span class="sxs-lookup"><span data-stu-id="0a969-110">Users and administrators can also use the Code Access Security Policy Tool (Caspol.exe) to modify security policy at the machine, user, and enterprise levels.</span></span> <span data-ttu-id="0a969-111">有关详细信息，请参阅[安全性](http://msdn.microsoft.com/library/9a9621d7-8883-4a4f-a874-65e8e09e20a6)。</span><span class="sxs-lookup"><span data-stu-id="0a969-111">For more information, see [Security](http://msdn.microsoft.com/library/9a9621d7-8883-4a4f-a874-65e8e09e20a6).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a969-112">与不同**连接**中的其他.NET Framework 数据提供程序 （SQL Server、 OLE DB 和 ODBC），对象<xref:System.Data.OracleClient.OracleConnection>不支持<xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0a969-112">Unlike the **Connection** object in the other .NET Framework data providers (SQL Server, OLE DB, and ODBC), <xref:System.Data.OracleClient.OracleConnection> does not support a <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> property.</span></span> <span data-ttu-id="0a969-113">将连接超时设置作为属性或连接字符串中不起作用，而返回的值始终为零。</span><span class="sxs-lookup"><span data-stu-id="0a969-113">Setting a connection time-out either as a property or in the connection string has no effect, and the value returned is always zero.</span></span> <span data-ttu-id="0a969-114"><xref:System.Data.OracleClient.OracleConnection> 也不支持<xref:System.Data.OracleClient.OracleConnection.Database%2A>属性或<xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0a969-114"><xref:System.Data.OracleClient.OracleConnection> also does not support a <xref:System.Data.OracleClient.OracleConnection.Database%2A> property or a <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> method.</span></span>  
  
 <span data-ttu-id="0a969-115">如果<xref:System.Data.OracleClient.OracleConnection>对象超出范围时，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="0a969-115">If the <xref:System.Data.OracleClient.OracleConnection> object goes out of scope, it remains open.</span></span> <span data-ttu-id="0a969-116">因此，你始终应关闭<xref:System.Data.OracleClient.OracleConnection>对象通过调用<xref:System.Data.OracleClient.OracleConnection.Close%2A>或**释放**，或通过使用<xref:System.Data.OracleClient.OracleConnection>对象内`Using`语句。</span><span class="sxs-lookup"><span data-stu-id="0a969-116">Therefore, you should always close <xref:System.Data.OracleClient.OracleConnection> objects by calling <xref:System.Data.OracleClient.OracleConnection.Close%2A> or **Dispose**, or by using the <xref:System.Data.OracleClient.OracleConnection> object within a `Using` statement.</span></span> <span data-ttu-id="0a969-117">否则，在垃圾回收可能不会立即释放它们。</span><span class="sxs-lookup"><span data-stu-id="0a969-117">Otherwise, the garbage collection might not free them immediately.</span></span> <span data-ttu-id="0a969-118">如果在连接的数目等待垃圾回收器删除达到最大连接数，这种延迟可能导致错误。</span><span class="sxs-lookup"><span data-stu-id="0a969-118">Such delays can cause errors if the maximum number of connections is reached while a number of connections are waiting to be deleted by the garbage collector.</span></span> <span data-ttu-id="0a969-119">与此相反，通过调用关闭连接<xref:System.Data.OracleClient.OracleConnection.Close%2A>更有效地使用本机资源增强可伸缩性并提高应用程序的总体性能。</span><span class="sxs-lookup"><span data-stu-id="0a969-119">By contrast, closing the connections by calling <xref:System.Data.OracleClient.OracleConnection.Close%2A> uses native resources more efficiently, enhancing scalability and improving overall application performance.</span></span> <span data-ttu-id="0a969-120">若要确保始终关闭连接，打开的内部连接`Using`块。</span><span class="sxs-lookup"><span data-stu-id="0a969-120">To ensure that connections are always closed, open the connection inside of a `Using` block.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a969-121">若要将高性能应用程序的部署，通常需要使用连接池。</span><span class="sxs-lookup"><span data-stu-id="0a969-121">To deploy high-performance applications, you often need to use connection pooling.</span></span> <span data-ttu-id="0a969-122">但是，在将用于 Oracle.NET Framework 数据提供程序，你不必启用连接池，因为提供程序会自动管理。</span><span class="sxs-lookup"><span data-stu-id="0a969-122">However, when you use the .NET Framework Data Provider for Oracle, you do not need to enable connection pooling because the provider manages this automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a969-123">下面的示例创建<xref:System.Data.OracleClient.OracleCommand>和<xref:System.Data.OracleClient.OracleConnection>。</span><span class="sxs-lookup"><span data-stu-id="0a969-123">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and an <xref:System.Data.OracleClient.OracleConnection>.</span></span> <span data-ttu-id="0a969-124"><xref:System.Data.OracleClient.OracleConnection>打开并将其设置为<xref:System.Data.OracleClient.OracleCommand.Connection%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="0a969-124">The <xref:System.Data.OracleClient.OracleConnection> is opened and set as the <xref:System.Data.OracleClient.OracleCommand.Connection%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="0a969-125">该示例然后调用<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>，关闭连接。</span><span class="sxs-lookup"><span data-stu-id="0a969-125">The example then calls <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>, and closes the connection.</span></span> <span data-ttu-id="0a969-126">若要实现此目的，<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>传递连接字符串和一个 SQL INSERT 语句的查询字符串。</span><span class="sxs-lookup"><span data-stu-id="0a969-126">To accomplish this, the <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is an SQL INSERT statement.</span></span>  
  
 [!code-csharp[Classic WebData OracleConnection#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.OracleClient.OracleDataAdapter" />
    <altmember cref="T:System.Data.OracleClient.OracleCommand" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a969-127">初始化 <see cref="T:System.Data.OracleClient.OracleConnection" /> 的新实例。</span><span class="sxs-lookup"><span data-stu-id="0a969-127">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleConnection" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a969-128">初始化 <see cref="T:System.Data.OracleClient.OracleConnection" /> 的新实例。</span><span class="sxs-lookup"><span data-stu-id="0a969-128">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleConnection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0a969-129">下面的示例创建并打开<xref:System.Data.OracleClient.OracleConnection>。</span><span class="sxs-lookup"><span data-stu-id="0a969-129">The following example creates and opens an <xref:System.Data.OracleClient.OracleConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OracleConnection.OracleConnection1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.OracleConnection1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.OracleConnection1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.OracleConnection1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleConnection(System::String ^ connectionString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="0a969-130">用于打开数据库的连接。</span><span class="sxs-lookup"><span data-stu-id="0a969-130">The connection used to open the database.</span></span></param>
        <summary><span data-ttu-id="0a969-131">使用指定的连接字符串初始化 <see cref="T:System.Data.OracleClient.OracleConnection" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0a969-131">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleConnection" /> class with the specified connection string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0a969-132">下面的示例创建并打开<xref:System.Data.OracleClient.OracleConnection>。</span><span class="sxs-lookup"><span data-stu-id="0a969-132">The following example creates and opens an <xref:System.Data.OracleClient.OracleConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OracleConnection.OracleConnection1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.OracleConnection1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.OracleConnection1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.OracleConnection1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a969-133">在数据库中开始一个事务。</span><span class="sxs-lookup"><span data-stu-id="0a969-133">Begins a transaction at the database.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As OracleTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleTransaction ^ BeginTransaction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a969-134">在数据库中开始一个事务。</span><span class="sxs-lookup"><span data-stu-id="0a969-134">Begins a transaction at the database.</span></span></summary>
        <returns><span data-ttu-id="0a969-135">表示新事务的对象。</span><span class="sxs-lookup"><span data-stu-id="0a969-135">An object representing the new transaction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a969-136">若要提交或回滚事务，必须显式使用<xref:System.Data.OracleClient.OracleTransaction.Commit%2A>或<xref:System.Data.OracleClient.OracleTransaction.Rollback%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0a969-136">To commit or roll back the transaction, you must explicitly use the <xref:System.Data.OracleClient.OracleTransaction.Commit%2A> or <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> methods.</span></span>  
  
 <span data-ttu-id="0a969-137">若要确保.NET Framework Data Provider for Oracle 事务管理模型正常运行，请避免使用其他事务管理模型，如提供的数据库。</span><span class="sxs-lookup"><span data-stu-id="0a969-137">To ensure that the .NET Framework Data Provider for Oracle transaction management model performs correctly, avoid using other transaction management models, such as those provided by the database.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a969-138">如果不指定隔离级别，使用的默认隔离级别。</span><span class="sxs-lookup"><span data-stu-id="0a969-138">If you do not specify an isolation level, the default isolation level is used.</span></span> <span data-ttu-id="0a969-139">若要指定隔离级别与<xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>方法，请使用<xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>重载。</span><span class="sxs-lookup"><span data-stu-id="0a969-139">To specify an isolation level with the <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A> method, use the <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a969-140">下面的示例创建<xref:System.Data.OracleClient.OracleConnection>和<xref:System.Data.OracleClient.OracleTransaction>。</span><span class="sxs-lookup"><span data-stu-id="0a969-140">The following example creates an <xref:System.Data.OracleClient.OracleConnection> and an <xref:System.Data.OracleClient.OracleTransaction>.</span></span> <span data-ttu-id="0a969-141">它还演示如何使用<xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>， <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>，和<xref:System.Data.OracleClient.OracleTransaction.Rollback%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0a969-141">It also demonstrates how to use the <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>, <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>, and <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData OracleConnection.BeginTransaction#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.BeginTransaction#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a969-142">不支持并行事务。</span><span class="sxs-lookup"><span data-stu-id="0a969-142">Parallel transactions are not supported.</span></span></exception>
        <altmember cref="M:System.Data.OracleClient.OracleTransaction.Commit" />
        <altmember cref="M:System.Data.OracleClient.OracleTransaction.Rollback" />
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleTransaction BeginTransaction (System.Data.IsolationLevel il);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleTransaction BeginTransaction(valuetype System.Data.IsolationLevel il) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (il As IsolationLevel) As OracleTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleTransaction ^ BeginTransaction(System::Data::IsolationLevel il);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="il" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="il"><span data-ttu-id="0a969-143">该连接的事务隔离级别。</span><span class="sxs-lookup"><span data-stu-id="0a969-143">The transaction isolation level for this connection.</span></span></param>
        <summary><span data-ttu-id="0a969-144">使用指定的 <see cref="T:System.Data.IsolationLevel" /> 值在数据库中开始一个事务。</span><span class="sxs-lookup"><span data-stu-id="0a969-144">Begins a transaction at the database with the specified <see cref="T:System.Data.IsolationLevel" /> value.</span></span></summary>
        <returns><span data-ttu-id="0a969-145">表示新事务的对象。</span><span class="sxs-lookup"><span data-stu-id="0a969-145">An object representing the new transaction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a969-146">若要提交或回滚事务，必须显式使用<xref:System.Data.OracleClient.OracleTransaction.Commit%2A>或<xref:System.Data.OracleClient.OracleTransaction.Rollback%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0a969-146">To commit or roll back the transaction, you must explicitly use the <xref:System.Data.OracleClient.OracleTransaction.Commit%2A> or <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> methods.</span></span>  
  
 <span data-ttu-id="0a969-147">若要确保.NET Framework Data Provider for Oracle 事务管理模型正常运行，请避免使用其他事务管理模型，如提供的数据库。</span><span class="sxs-lookup"><span data-stu-id="0a969-147">To ensure that the .NET Framework Data Provider for Oracle transaction management model performs correctly, avoid using other transaction management models, such as those provided by the database.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a969-148">下面的示例创建<xref:System.Data.OracleClient.OracleConnection>和<xref:System.Data.OracleClient.OracleTransaction>。</span><span class="sxs-lookup"><span data-stu-id="0a969-148">The following example creates an <xref:System.Data.OracleClient.OracleConnection> and an <xref:System.Data.OracleClient.OracleTransaction>.</span></span> <span data-ttu-id="0a969-149">它还演示如何使用<xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>， <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>，和<xref:System.Data.OracleClient.OracleTransaction.Rollback%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0a969-149">It also demonstrates how to use the <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>, <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>, and <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData OracleConnection.BeginTransaction#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.BeginTransaction#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a969-150">不支持并行事务。</span><span class="sxs-lookup"><span data-stu-id="0a969-150">Parallel transactions are not supported.</span></span></exception>
        <altmember cref="M:System.Data.OracleClient.OracleTransaction.Commit" />
        <altmember cref="M:System.Data.OracleClient.OracleTransaction.Rollback" />
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0a969-151">要代替当前数据库加以使用的数据库的名称。</span><span class="sxs-lookup"><span data-stu-id="0a969-151">The name of the database to use instead of the current database.</span></span></param>
        <summary><span data-ttu-id="0a969-152">更改已打开的 <see cref="T:System.Data.OracleClient.OracleConnection" /> 的当前数据库。</span><span class="sxs-lookup"><span data-stu-id="0a969-152">Changes the current database for an open <see cref="T:System.Data.OracleClient.OracleConnection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a969-153">`value`参数必须包含有效的数据库名称，并且不能包含 null 值、 空字符串 ("")，或只有空白字符的字符串。</span><span class="sxs-lookup"><span data-stu-id="0a969-153">The `value` parameter must contain a valid database name, and cannot contain a null value, an empty string (""), or a string with only blank characters.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a969-154">与不同**连接**中的其他.NET Framework 数据提供程序 （SQL Server、 OLE DB 和 ODBC），对象<xref:System.Data.OracleClient.OracleConnection>不支持<xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0a969-154">Unlike the **Connection** object in the other .NET Framework data providers (SQL Server, OLE DB, and ODBC), <xref:System.Data.OracleClient.OracleConnection> does not support a <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> property.</span></span> <span data-ttu-id="0a969-155">将连接超时设置作为属性或连接字符串中不起作用，而返回的值始终为零。</span><span class="sxs-lookup"><span data-stu-id="0a969-155">Setting a connection time-out either as a property or in the connection string has no effect, and the value returned is always zero.</span></span> <span data-ttu-id="0a969-156"><xref:System.Data.OracleClient.OracleConnection> 也不支持<xref:System.Data.OracleClient.OracleConnection.Database%2A>属性或<xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0a969-156"><xref:System.Data.OracleClient.OracleConnection> also does not support a <xref:System.Data.OracleClient.OracleConnection.Database%2A> property or a <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0a969-157">数据库名称无效。</span><span class="sxs-lookup"><span data-stu-id="0a969-157">The database name is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a969-158">连接未打开。</span><span class="sxs-lookup"><span data-stu-id="0a969-158">The connection is not open.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="0a969-159">不能更改数据库。</span><span class="sxs-lookup"><span data-stu-id="0a969-159">Cannot change the database.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ClearAllPools">
      <MemberSignature Language="C#" Value="public static void ClearAllPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearAllPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.ClearAllPools" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearAllPools ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearAllPools();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a969-160">清空连接池。</span><span class="sxs-lookup"><span data-stu-id="0a969-160">Empties the connection pool.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a969-161"><xref:System.Data.OracleClient.OracleConnection.ClearAllPools%2A> 重置 （或清空） 的连接池。</span><span class="sxs-lookup"><span data-stu-id="0a969-161"><xref:System.Data.OracleClient.OracleConnection.ClearAllPools%2A> resets (or empties) the connection pool.</span></span> <span data-ttu-id="0a969-162">如果连接中正在使用的调用时，它们进行相应的标记，并且被丢弃时<xref:System.Data.OracleClient.OracleConnection.Close%2A>对其调用。</span><span class="sxs-lookup"><span data-stu-id="0a969-162">If connections are in use at the time of the call, they are marked appropriately and are discarded when <xref:System.Data.OracleClient.OracleConnection.Close%2A> is called on them.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearPool">
      <MemberSignature Language="C#" Value="public static void ClearPool (System.Data.OracleClient.OracleConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearPool(class System.Data.OracleClient.OracleConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.ClearPool(System.Data.OracleClient.OracleConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearPool (connection As OracleConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearPool(System::Data::OracleClient::OracleConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
      </Parameters>
      <Docs>
        <param name="connection"><span data-ttu-id="0a969-163">要从池中清除的 <see cref="T:System.Data.OracleClient.OracleConnection" />。</span><span class="sxs-lookup"><span data-stu-id="0a969-163">The <see cref="T:System.Data.OracleClient.OracleConnection" /> to be cleared from the pool.</span></span></param>
        <summary><span data-ttu-id="0a969-164">清空与指定连接关联的连接池。</span><span class="sxs-lookup"><span data-stu-id="0a969-164">Empties the connection pool associated with the specified connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a969-165"><xref:System.Data.OracleClient.OracleConnection.ClearPool%2A> 方法清除与关联的连接池`connection`。</span><span class="sxs-lookup"><span data-stu-id="0a969-165"><xref:System.Data.OracleClient.OracleConnection.ClearPool%2A> method clears the connection pool that is associated with `connection`.</span></span> <span data-ttu-id="0a969-166">如果其他连接与关联`connection`是在调用时使用，它们进行相应的标记，是被丢弃时<xref:System.Data.OracleClient.OracleConnection.Close%2A>对其调用。</span><span class="sxs-lookup"><span data-stu-id="0a969-166">If additional connections associated with `connection` are in use at the time of the call, they are marked appropriately and are discarded when <xref:System.Data.OracleClient.OracleConnection.Close%2A> is called on them.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a969-167">关闭与数据库之间的连接。</span><span class="sxs-lookup"><span data-stu-id="0a969-167">Closes the connection to the database.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a969-168"><xref:System.Data.OracleClient.OracleConnection.Close%2A>方法回滚任何挂起的事务。</span><span class="sxs-lookup"><span data-stu-id="0a969-168">The <xref:System.Data.OracleClient.OracleConnection.Close%2A> method rolls back any pending transactions.</span></span> <span data-ttu-id="0a969-169">然后，它将释放到连接池，连接或关闭的连接，如果禁用连接池。</span><span class="sxs-lookup"><span data-stu-id="0a969-169">It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled.</span></span>  
  
 <span data-ttu-id="0a969-170">应用程序可以调用<xref:System.Data.OracleClient.OracleConnection.Close%2A>多次而不会生成异常。</span><span class="sxs-lookup"><span data-stu-id="0a969-170">An application can call <xref:System.Data.OracleClient.OracleConnection.Close%2A> more than once without generating an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a969-171">在将用于 Oracle.NET Framework 数据提供程序，你不需要启用连接池，因为提供程序会自动管理。</span><span class="sxs-lookup"><span data-stu-id="0a969-171">When you use the .NET Framework Data Provider for Oracle, you do not need to enable connection pooling because the provider manages this automatically.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="0a969-172">不要调用<xref:System.Data.OracleClient.OracleConnection.Close%2A>上<xref:System.Data.OracleClient.OracleConnection>、 <xref:System.Data.OracleClient.OracleDataReader>，或在任何其他托管的对象`Finalize`你类的方法。</span><span class="sxs-lookup"><span data-stu-id="0a969-172">Do not call <xref:System.Data.OracleClient.OracleConnection.Close%2A> on a <xref:System.Data.OracleClient.OracleConnection>, a <xref:System.Data.OracleClient.OracleDataReader>, or any other managed object in the `Finalize` method of your class.</span></span> <span data-ttu-id="0a969-173">在终结器中，你应仅释放类直接拥有的非托管的资源。</span><span class="sxs-lookup"><span data-stu-id="0a969-173">In a finalizer, you should only release unmanaged resources that your class owns directly.</span></span> <span data-ttu-id="0a969-174">如果类不拥有任何非托管资源，则不要在类定义中包含 `Finalize` 方法。</span><span class="sxs-lookup"><span data-stu-id="0a969-174">If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition.</span></span> <span data-ttu-id="0a969-175">有关详细信息，请参阅[垃圾回收](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)。</span><span class="sxs-lookup"><span data-stu-id="0a969-175">For more information, see [Garbage Collection](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Oracle.Design.OracleConnectionStringEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a969-176">获取或设置用于打开 Oracle 数据库的字符串。</span><span class="sxs-lookup"><span data-stu-id="0a969-176">Gets or sets the string used to open an Oracle database.</span></span></summary>
        <value><span data-ttu-id="0a969-177">包含设置（如服务器名称等）的 Oracle 连接字符串需要建立初始连接。</span><span class="sxs-lookup"><span data-stu-id="0a969-177">The Oracle connection string that includes settings, such as the server name, needed to establish the initial connection.</span></span> <span data-ttu-id="0a969-178">默认值为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="0a969-178">The default value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a969-179"><xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>关闭连接时，才可以设置。</span><span class="sxs-lookup"><span data-stu-id="0a969-179">The <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> can be set only when the connection is closed.</span></span>  
  
 <span data-ttu-id="0a969-180">你可以使用<xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>属性，以连接到数据库。</span><span class="sxs-lookup"><span data-stu-id="0a969-180">You can use the <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> property to connect to a database.</span></span> <span data-ttu-id="0a969-181">下面的示例演示一个典型的连接字符串。</span><span class="sxs-lookup"><span data-stu-id="0a969-181">The following example illustrates a typical connection string.</span></span>  
  
```  
"Data Source=Oracle8i;Integrated Security=yes"  
```  
  
 <span data-ttu-id="0a969-182">许多字符串中指定的设置具有相应的只读属性 (例如， `Data Source=MyServer`，它对应于<xref:System.Data.OracleClient.OracleConnection.DataSource%2A>属性)。</span><span class="sxs-lookup"><span data-stu-id="0a969-182">Many of the settings specified in the string have corresponding read-only properties (for example, `Data Source=MyServer`, which corresponds to the <xref:System.Data.OracleClient.OracleConnection.DataSource%2A> property).</span></span> <span data-ttu-id="0a969-183">连接字符串设置时，所有这些属性被更新，除非错误检测到，在这种情况下会更新任何属性。</span><span class="sxs-lookup"><span data-stu-id="0a969-183">When the connection string is set, all of these properties are updated, unless an error is detected, in which case none of the properties are updated.</span></span> <span data-ttu-id="0a969-184"><xref:System.Data.OracleClient.OracleConnection> 属性只返回默认设置或中指定这些设置<xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>。</span><span class="sxs-lookup"><span data-stu-id="0a969-184"><xref:System.Data.OracleClient.OracleConnection> properties return only default settings or those settings specified in the <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>.</span></span>  
  
 <span data-ttu-id="0a969-185">重置<xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>关闭的连接将重置所有连接字符串值 （和相关的属性），包括密码。</span><span class="sxs-lookup"><span data-stu-id="0a969-185">Resetting the <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> on a closed connection resets all connection string values (and related properties), including the password.</span></span>  
  
 <span data-ttu-id="0a969-186">在设置之后立即分析连接字符串。</span><span class="sxs-lookup"><span data-stu-id="0a969-186">The connection string is parsed immediately after being set.</span></span> <span data-ttu-id="0a969-187">如果如分析时发现错误在语法中，运行时异常， <xref:System.ArgumentException>，生成。</span><span class="sxs-lookup"><span data-stu-id="0a969-187">If parsing reveals errors in syntax, a run-time exception, such as <xref:System.ArgumentException>, is generated.</span></span> <span data-ttu-id="0a969-188">仅当尝试打开连接时，可以找到其他错误。</span><span class="sxs-lookup"><span data-stu-id="0a969-188">Other errors can be found only when an attempt is made to open the connection.</span></span>  
  
 <span data-ttu-id="0a969-189">连接字符串的基本格式是用分号分隔的关键字/值对一系列。</span><span class="sxs-lookup"><span data-stu-id="0a969-189">The basic format of a connection string is a series of keyword/value pairs separated by semicolons.</span></span> <span data-ttu-id="0a969-190">每个关键字和它的值之间用等号 (=) 连接。</span><span class="sxs-lookup"><span data-stu-id="0a969-190">The equal sign (=) connects each keyword and its value.</span></span> <span data-ttu-id="0a969-191">若要包含的值包含分号、 单引号字符或双引号字符，则该值必须括在双引号内。</span><span class="sxs-lookup"><span data-stu-id="0a969-191">To include values that contain a semicolon, single-quote character, or double-quote character, the value must be enclosed in double quotes.</span></span> <span data-ttu-id="0a969-192">如果值包含分号和双引号字符，则该值可以被括在单引号中。</span><span class="sxs-lookup"><span data-stu-id="0a969-192">If the value contains both a semicolon and a double-quote character, the value can be enclosed in single quotes.</span></span> <span data-ttu-id="0a969-193">单引号也是有用如果双引号字符开头的值。</span><span class="sxs-lookup"><span data-stu-id="0a969-193">The single quote is also useful if the value begins with a double-quote character.</span></span> <span data-ttu-id="0a969-194">相反，如果值开头为单引号，则可以使用双引号。</span><span class="sxs-lookup"><span data-stu-id="0a969-194">Conversely, the double quote can be used if the value begins with a single quote.</span></span> <span data-ttu-id="0a969-195">如果值包含单引号和双引号字符，用于将值括起来的引号字符必须成对出现每次它出现时的值中。</span><span class="sxs-lookup"><span data-stu-id="0a969-195">If the value contains both single-quote and double-quote characters, the quote character used to enclose the value must be doubled each time it occurs within the value.</span></span>  
  
 <span data-ttu-id="0a969-196">若要包含前导或尾随空格的字符串值，则该值必须括在单引号或双引号中。</span><span class="sxs-lookup"><span data-stu-id="0a969-196">To include preceding or trailing spaces in the string value, the value must be enclosed in either single quotes or double quotes.</span></span> <span data-ttu-id="0a969-197">忽略任何前导空格或尾随空格围绕整数、 布尔值或枚举的值，即使用引号括起来。</span><span class="sxs-lookup"><span data-stu-id="0a969-197">Any leading or trailing spaces around integer, Boolean, or enumerated values are ignored, even if enclosed in quotes.</span></span> <span data-ttu-id="0a969-198">但是，将保留在字符串文字关键字或值中的空间。</span><span class="sxs-lookup"><span data-stu-id="0a969-198">However, spaces within a string literal keyword or value are preserved.</span></span> <span data-ttu-id="0a969-199">不使用分隔符，除非引号字符不是在值的第一个或最后一个字符等情况下，可能的连接字符串中使用单引号或双引号`Data Source= my'Server`或`Data Source= my"Server`。</span><span class="sxs-lookup"><span data-stu-id="0a969-199">Single or double quotes may be used within a connection string without using delimiters unless a quote character is the first or last character in the value, for example, `Data Source= my'Server` or `Data Source= my"Server`.</span></span>  
  
 <span data-ttu-id="0a969-200">若要包含等号 （=） 中的关键字或值，它前面必须是另一个等号。</span><span class="sxs-lookup"><span data-stu-id="0a969-200">To include an equal sign (=) in a keyword or value, it must be preceded by another equal sign.</span></span> <span data-ttu-id="0a969-201">例如，在假设的连接字符串</span><span class="sxs-lookup"><span data-stu-id="0a969-201">For example, in the hypothetical connection string</span></span>  
  
```  
"key==word=value"  
```  
  
 <span data-ttu-id="0a969-202">关键字是"键 = word"，值为"value"。</span><span class="sxs-lookup"><span data-stu-id="0a969-202">the keyword is "key=word" and the value is "value".</span></span>  
  
 <span data-ttu-id="0a969-203">如果连接字符串中的关键字/值对中的特定关键字出现多次，最后一个匹配项用于设置的值。</span><span class="sxs-lookup"><span data-stu-id="0a969-203">If a specific keyword in a keyword/value pair occurs more than once in a connection string, the last occurrence is used in the value set.</span></span>  
  
 <span data-ttu-id="0a969-204">关键字是区分大小写。</span><span class="sxs-lookup"><span data-stu-id="0a969-204">Keywords are case insensitive.</span></span>  
  
 <span data-ttu-id="0a969-205">下表列出了中的值的有效名称<xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>。</span><span class="sxs-lookup"><span data-stu-id="0a969-205">The following table lists the valid names for values within the <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>.</span></span>  
  
|<span data-ttu-id="0a969-206">name</span><span class="sxs-lookup"><span data-stu-id="0a969-206">Name</span></span>|<span data-ttu-id="0a969-207">默认</span><span class="sxs-lookup"><span data-stu-id="0a969-207">Default</span></span>|<span data-ttu-id="0a969-208">描述</span><span class="sxs-lookup"><span data-stu-id="0a969-208">Description</span></span>|  
|----------|-------------|-----------------|  
|<span data-ttu-id="0a969-209">“数据源”</span><span class="sxs-lookup"><span data-stu-id="0a969-209">Data Source</span></span><br /><br /> <span data-ttu-id="0a969-210">或</span><span class="sxs-lookup"><span data-stu-id="0a969-210">-or-</span></span><br /><br /> <span data-ttu-id="0a969-211">服务器</span><span class="sxs-lookup"><span data-stu-id="0a969-211">Server</span></span>||<span data-ttu-id="0a969-212">要连接到的 Oracle 实例的名称或网络地址。</span><span class="sxs-lookup"><span data-stu-id="0a969-212">The name or network address of the instance of Oracle to which to connect.</span></span>|  
|<span data-ttu-id="0a969-213">Integrated Security</span><span class="sxs-lookup"><span data-stu-id="0a969-213">Integrated Security</span></span>|<span data-ttu-id="0a969-214">'false'</span><span class="sxs-lookup"><span data-stu-id="0a969-214">'false'</span></span>|<span data-ttu-id="0a969-215">连接是否是安全的连接，或不。</span><span class="sxs-lookup"><span data-stu-id="0a969-215">Whether the connection is to be a secure connection or not.</span></span><br /><br /> <span data-ttu-id="0a969-216">可识别的值为`true`（强烈建议）， `false`， `yes`，和`no`。</span><span class="sxs-lookup"><span data-stu-id="0a969-216">Recognized values are `true` (strongly recommended), `false`, `yes`, and `no`.</span></span>|  
|<span data-ttu-id="0a969-217">Password</span><span class="sxs-lookup"><span data-stu-id="0a969-217">Password</span></span>||<span data-ttu-id="0a969-218">日志记录 Oracle 帐户的密码。</span><span class="sxs-lookup"><span data-stu-id="0a969-218">The password for the Oracle account logging on.</span></span> <span data-ttu-id="0a969-219">为了保持高级别的安全性，我们强烈建议你改为使用集成安全性关键字。</span><span class="sxs-lookup"><span data-stu-id="0a969-219">To maintain a high level of security, we strongly recommend that you use the Integrated Security keyword instead.</span></span>|  
|<span data-ttu-id="0a969-220">Persist Security Info</span><span class="sxs-lookup"><span data-stu-id="0a969-220">Persist Security Info</span></span>|<span data-ttu-id="0a969-221">'false'</span><span class="sxs-lookup"><span data-stu-id="0a969-221">'false'</span></span>|<span data-ttu-id="0a969-222">当设置为`false`或`no`（强烈建议），如果连接是打开的或者一直处于打开不作为连接的一部分返回安全敏感信息，如密码<xref:System.Data.OracleClient.OracleConnection.State%2A>。</span><span class="sxs-lookup"><span data-stu-id="0a969-222">When set to `false` or `no` (strongly recommended), security-sensitive information such as the password is not returned as part of the connection if the connection is open or has ever been in an open <xref:System.Data.OracleClient.OracleConnection.State%2A>.</span></span> <span data-ttu-id="0a969-223">重置连接字符串将所有的连接字符串值，包括密码重置。</span><span class="sxs-lookup"><span data-stu-id="0a969-223">Resetting the connection string resets all connection string values, including the password.</span></span><br /><br /> <span data-ttu-id="0a969-224">已识别的值为 `true`、`false`、`yes` 和 `no`。</span><span class="sxs-lookup"><span data-stu-id="0a969-224">Recognized values are `true`, `false`, `yes`, and `no`.</span></span>|  
|<span data-ttu-id="0a969-225">Unicode</span><span class="sxs-lookup"><span data-stu-id="0a969-225">Unicode</span></span>|<span data-ttu-id="0a969-226">'false'</span><span class="sxs-lookup"><span data-stu-id="0a969-226">'false'</span></span>|<span data-ttu-id="0a969-227">指定适用于 Oracle 的.NET Framework 数据提供程序是否使用 UTF16 模式 API 调用。</span><span class="sxs-lookup"><span data-stu-id="0a969-227">Specifies whether the .NET Framework Data Provider for Oracle uses UTF16 mode API calls.</span></span> <span data-ttu-id="0a969-228">此关键字将被忽略，除非使用 Oracle9i 客户端软件。</span><span class="sxs-lookup"><span data-stu-id="0a969-228">This keyword is ignored except when using Oracle9i client software.</span></span>|  
|<span data-ttu-id="0a969-229">User ID</span><span class="sxs-lookup"><span data-stu-id="0a969-229">User ID</span></span>||<span data-ttu-id="0a969-230">Oracle 登录帐户。</span><span class="sxs-lookup"><span data-stu-id="0a969-230">The Oracle login account.</span></span> <span data-ttu-id="0a969-231">为了保持高级别的安全性，我们强烈建议你改为使用集成安全性关键字。</span><span class="sxs-lookup"><span data-stu-id="0a969-231">To maintain a high level of security, we strongly recommend that you use the Integrated Security keyword instead.</span></span>|  
  
 <span data-ttu-id="0a969-232">下表列出的连接池内的值的有效名称<xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>。</span><span class="sxs-lookup"><span data-stu-id="0a969-232">The following table lists the valid names for connection pooling values within the <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>.</span></span>  
  
|<span data-ttu-id="0a969-233">name</span><span class="sxs-lookup"><span data-stu-id="0a969-233">Name</span></span>|<span data-ttu-id="0a969-234">默认</span><span class="sxs-lookup"><span data-stu-id="0a969-234">Default</span></span>|<span data-ttu-id="0a969-235">描述</span><span class="sxs-lookup"><span data-stu-id="0a969-235">Description</span></span>|  
|----------|-------------|-----------------|  
|<span data-ttu-id="0a969-236">连接生存期</span><span class="sxs-lookup"><span data-stu-id="0a969-236">Connection Lifetime</span></span>|<span data-ttu-id="0a969-237">0</span><span class="sxs-lookup"><span data-stu-id="0a969-237">0</span></span>|<span data-ttu-id="0a969-238">连接返回到池中后，创建时间将与当前时间进行比较，如果时间跨度（秒）超过 `Connection Lifetime` 指定的值，该连接将被破坏。</span><span class="sxs-lookup"><span data-stu-id="0a969-238">When a connection is returned to the pool, its creation time is compared with the current time, and the connection is destroyed if that time span (in seconds) exceeds the value specified by `Connection Lifetime`.</span></span> <span data-ttu-id="0a969-239">在聚集配置中可以使用它来强制在运行服务器和刚联机的服务器之间达到负载平衡。</span><span class="sxs-lookup"><span data-stu-id="0a969-239">This is useful in clustered configurations to force load balancing between a running server and a server just brought online.</span></span><br /><br /> <span data-ttu-id="0a969-240">值为 0 会导致池的连接具有最大连接超时。</span><span class="sxs-lookup"><span data-stu-id="0a969-240">A value of zero causes pooled connections to have the maximum connection time-out.</span></span>|  
|<span data-ttu-id="0a969-241">Enlist</span><span class="sxs-lookup"><span data-stu-id="0a969-241">Enlist</span></span>|<span data-ttu-id="0a969-242">'true'</span><span class="sxs-lookup"><span data-stu-id="0a969-242">'true'</span></span>|<span data-ttu-id="0a969-243">当`true`或`yes`，池进程中自动登记创建线程的当前事务上下文中的连接。</span><span class="sxs-lookup"><span data-stu-id="0a969-243">When `true` or `yes`, the pooler automatically enlists the connection in the creation thread's current transaction context.</span></span><br /><br /> <span data-ttu-id="0a969-244">已识别的值为 `true`、`false`、`yes` 和 `no`。</span><span class="sxs-lookup"><span data-stu-id="0a969-244">Recognized values are `true`, `false`, `yes`, and `no`.</span></span>|  
|<span data-ttu-id="0a969-245">Max Pool Size</span><span class="sxs-lookup"><span data-stu-id="0a969-245">Max Pool Size</span></span>|<span data-ttu-id="0a969-246">100</span><span class="sxs-lookup"><span data-stu-id="0a969-246">100</span></span>|<span data-ttu-id="0a969-247">池中允许的最大连接数。</span><span class="sxs-lookup"><span data-stu-id="0a969-247">The maximum number of connections allowed in the pool.</span></span> <span data-ttu-id="0a969-248">设置`Max Pool Size`值<xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>可能会影响性能。</span><span class="sxs-lookup"><span data-stu-id="0a969-248">Setting the `Max Pool Size` value of the <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> can affect performance.</span></span> <span data-ttu-id="0a969-249">如果你计划创建和主动使用超过 100 个连接，则应增加`Max Pool Size`总数接近于应用程序的稳定状态连接使用情况的值。</span><span class="sxs-lookup"><span data-stu-id="0a969-249">If you plan to create and actively use more than 100 connections, you should increase `Max Pool Size` to a value that approximates the steady-state connection usage for the application.</span></span>|  
|<span data-ttu-id="0a969-250">Min Pool Size</span><span class="sxs-lookup"><span data-stu-id="0a969-250">Min Pool Size</span></span>|<span data-ttu-id="0a969-251">0</span><span class="sxs-lookup"><span data-stu-id="0a969-251">0</span></span>|<span data-ttu-id="0a969-252">最小池中所允许的连接数。</span><span class="sxs-lookup"><span data-stu-id="0a969-252">The minimum number of connections allowed in the pool.</span></span>|  
|<span data-ttu-id="0a969-253">Pooling</span><span class="sxs-lookup"><span data-stu-id="0a969-253">Pooling</span></span>|<span data-ttu-id="0a969-254">'true'</span><span class="sxs-lookup"><span data-stu-id="0a969-254">'true'</span></span>|<span data-ttu-id="0a969-255">当`true`或`yes`、<xref:System.Data.OracleClient.OracleConnection>对象绘制从相应的池中，或如有必要，被创建并添加到相应的池中。</span><span class="sxs-lookup"><span data-stu-id="0a969-255">When `true` or `yes`, the <xref:System.Data.OracleClient.OracleConnection> object is drawn from the appropriate pool, or if necessary, is created and added to the appropriate pool.</span></span><br /><br /> <span data-ttu-id="0a969-256">已识别的值为 `true`、`false`、`yes` 和 `no`。</span><span class="sxs-lookup"><span data-stu-id="0a969-256">Recognized values are `true`, `false`, `yes`, and `no`.</span></span>|  
  
 <span data-ttu-id="0a969-257">在设置关键字或连接池需要一个布尔值的值时，你可以使用是而不是 'true'，和否而不是 'false'。</span><span class="sxs-lookup"><span data-stu-id="0a969-257">When setting keyword or connection pooling values that require a Boolean value, you can use 'yes' instead of 'true', and 'no' instead of 'false'.</span></span> <span data-ttu-id="0a969-258">整数值表示为字符串。</span><span class="sxs-lookup"><span data-stu-id="0a969-258">Integer values are represented as strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a969-259">下面的示例创建<xref:System.Data.OracleClient.OracleConnection>并设置其属性的一些连接字符串中。</span><span class="sxs-lookup"><span data-stu-id="0a969-259">The following example creates an <xref:System.Data.OracleClient.OracleConnection> and sets some of its properties in the connection string.</span></span>  
  
 [!code-csharp[Classic WebData OracleConnection.DataSource#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.DataSource/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.DataSource#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.DataSource/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ConnectionTimeout { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a969-260">获取在建立连接时终止尝试并生成错误之前所等待的时间。</span><span class="sxs-lookup"><span data-stu-id="0a969-260">Gets the time to wait to establish a connection before terminating the attempt and generating an error.</span></span></summary>
        <value><span data-ttu-id="0a969-261">等待连接打开所需的时间（以秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="0a969-261">The time (in seconds) to wait for a connection to open.</span></span> <span data-ttu-id="0a969-262">默认值为 15 秒。</span><span class="sxs-lookup"><span data-stu-id="0a969-262">The default value is 15 seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a969-263">你可以通过使用连接等待的时间量设置为超时`Connect Timeout`或`Connection Timeout`连接字符串中的关键字。</span><span class="sxs-lookup"><span data-stu-id="0a969-263">You can set the amount of time a connection waits to time out by using the `Connect Timeout` or `Connection Timeout` keywords in the connection string.</span></span> <span data-ttu-id="0a969-264">值为 0 表示没有限制，，应当避免在<xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>由于尝试连接将无限期等待。</span><span class="sxs-lookup"><span data-stu-id="0a969-264">A value of 0 indicates no limit, and should be avoided in a <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> because an attempt to connect waits indefinitely.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a969-265">与不同`Connection`中的其他.NET Framework 数据提供程序 （SQL Server、 OLE DB 和 ODBC），对象<xref:System.Data.OracleClient.OracleConnection>不支持<xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0a969-265">Unlike the `Connection` object in the other .NET Framework data providers (SQL Server, OLE DB, and ODBC), <xref:System.Data.OracleClient.OracleConnection> does not support a <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> property.</span></span> <span data-ttu-id="0a969-266">设置使用属性或连接字符串中的连接超时不起作用，而返回的值始终为零。</span><span class="sxs-lookup"><span data-stu-id="0a969-266">Setting a connection time-out either with a property or in the connection string has no effect, and the value returned is always zero.</span></span> <span data-ttu-id="0a969-267"><xref:System.Data.OracleClient.OracleConnection> 也不支持<xref:System.Data.OracleClient.OracleConnection.Database%2A>属性或<xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0a969-267"><xref:System.Data.OracleClient.OracleConnection> also does not support a <xref:System.Data.OracleClient.OracleConnection.Database%2A> property or a <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0a969-268">指定的值小于 0。</span><span class="sxs-lookup"><span data-stu-id="0a969-268">The value specified is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ CreateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a969-269">创建并返回一个与该 <see cref="T:System.Data.OracleClient.OracleCommand" /> 关联的 <see cref="T:System.Data.OracleClient.OracleConnection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a969-269">Creates and returns an <see cref="T:System.Data.OracleClient.OracleCommand" /> object associated with the <see cref="T:System.Data.OracleClient.OracleConnection" />.</span></span></summary>
        <returns><span data-ttu-id="0a969-270">一个 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a969-270">An <see cref="T:System.Data.OracleClient.OracleCommand" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a969-271">获取当前数据库的名称或打开连接后要使用的数据库的名称。</span><span class="sxs-lookup"><span data-stu-id="0a969-271">Gets the name of the current database or the database to be used after a connection is opened.</span></span></summary>
        <value><span data-ttu-id="0a969-272">当前数据库的名称或打开连接后要使用的数据库的名称。</span><span class="sxs-lookup"><span data-stu-id="0a969-272">The name of the current database or the name of the database to be used after a connection is opened.</span></span> <span data-ttu-id="0a969-273">默认值为一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="0a969-273">The default value is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a969-274"><xref:System.Data.OracleClient.OracleConnection.Database%2A>属性会动态更新。</span><span class="sxs-lookup"><span data-stu-id="0a969-274">The <xref:System.Data.OracleClient.OracleConnection.Database%2A> property updates dynamically.</span></span> <span data-ttu-id="0a969-275">如果你更改当前数据库使用 SQL 语句或<xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>方法，发送一条信息性消息，并自动更新的属性。</span><span class="sxs-lookup"><span data-stu-id="0a969-275">If you change the current database using a SQL statement or the <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> method, an informational message is sent and the property is updated automatically.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a969-276">与不同`Connection`中的其他.NET Framework 数据提供程序 （SQL Server、 OLE DB 和 ODBC），对象<xref:System.Data.OracleClient.OracleConnection>不支持<xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0a969-276">Unlike the `Connection` object in the other .NET Framework data providers (SQL Server, OLE DB, and ODBC), <xref:System.Data.OracleClient.OracleConnection> does not support a <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> property.</span></span> <span data-ttu-id="0a969-277">设置使用属性或连接字符串中的连接超时不起作用，而返回的值始终为零。</span><span class="sxs-lookup"><span data-stu-id="0a969-277">Setting a connection time-out either with a property or in the connection string has no effect, and the value returned is always zero.</span></span> <span data-ttu-id="0a969-278"><xref:System.Data.OracleClient.OracleConnection> 也不支持<xref:System.Data.OracleClient.OracleConnection.Database%2A>属性或<xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0a969-278"><xref:System.Data.OracleClient.OracleConnection> also does not support a <xref:System.Data.OracleClient.OracleConnection.Database%2A> property or a <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OracleClient.OracleConnection.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a969-279">获取要连接的 Oracle 服务器的名称。</span><span class="sxs-lookup"><span data-stu-id="0a969-279">Gets the name of the Oracle server to which to connect.</span></span></summary>
        <value><span data-ttu-id="0a969-280">要连接的 Oracle 服务器的名称。</span><span class="sxs-lookup"><span data-stu-id="0a969-280">The name of the Oracle server to which to connect.</span></span> <span data-ttu-id="0a969-281">默认值为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="0a969-281">The default value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0a969-282">下面的示例创建<xref:System.Data.OracleClient.OracleConnection>并显示部分只读属性。</span><span class="sxs-lookup"><span data-stu-id="0a969-282">The following example creates an <xref:System.Data.OracleClient.OracleConnection> and displays some of its read-only properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleConnection.DataSource#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.DataSource/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.DataSource#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.DataSource/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OracleClient.OracleConnection.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistDistributedTransaction">
      <MemberSignature Language="C#" Value="public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction distributedTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnlistDistributedTransaction(class System.EnterpriseServices.ITransaction distributedTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnlistDistributedTransaction (distributedTransaction As ITransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnlistDistributedTransaction(System::EnterpriseServices::ITransaction ^ distributedTransaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="distributedTransaction" Type="System.EnterpriseServices.ITransaction" />
      </Parameters>
      <Docs>
        <param name="distributedTransaction"><span data-ttu-id="0a969-283">对用于登记的现有 <see cref="T:System.EnterpriseServices.ITransaction" /> 的引用。</span><span class="sxs-lookup"><span data-stu-id="0a969-283">A reference to an existing <see cref="T:System.EnterpriseServices.ITransaction" /> in which to enlist.</span></span></param>
        <summary><span data-ttu-id="0a969-284">在指定的事务中登记为分布式事务。</span><span class="sxs-lookup"><span data-stu-id="0a969-284">Enlists in the specified transaction as a distributed transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a969-285">新增 ADO.NET 2.0 中功能支持使用<xref:System.Data.Common.DbConnection.EnlistTransaction%2A>方法在分布式事务中登记。</span><span class="sxs-lookup"><span data-stu-id="0a969-285">New in ADO.NET 2.0 is support for using the <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> method to enlist in a distributed transaction.</span></span> <span data-ttu-id="0a969-286">因为它登记中的连接<xref:System.Transactions.Transaction>实例， **EnlistTransaction**中可用的功能利用<xref:System.Transactions>命名空间用于管理分布式事务，使其优于**EnlistDistributedTransaction**为此目的。</span><span class="sxs-lookup"><span data-stu-id="0a969-286">Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **EnlistTransaction** takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **EnlistDistributedTransaction** for this purpose.</span></span> <span data-ttu-id="0a969-287">有关详细信息，请参阅[分布式事务](~/docs/framework/data/adonet/distributed-transactions.md)。</span><span class="sxs-lookup"><span data-stu-id="0a969-287">For more information, see [Distributed Transactions](~/docs/framework/data/adonet/distributed-transactions.md).</span></span>  
  
 <span data-ttu-id="0a969-288">你可以继续在现有使用分布式的事务中登记</span><span class="sxs-lookup"><span data-stu-id="0a969-288">You can continue to enlist in an existing distributed transaction using the</span></span>  
  
 <span data-ttu-id="0a969-289"><xref:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction%2A> 如果禁用了自动登记的方法。</span><span class="sxs-lookup"><span data-stu-id="0a969-289"><xref:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction%2A> method if auto-enlistment is disabled.</span></span> <span data-ttu-id="0a969-290">在现有分布式事务中登记可以确保，如果事务是提交还是回滚，数据源的代码所做的修改是也提交或回滚。</span><span class="sxs-lookup"><span data-stu-id="0a969-290">Enlisting in an existing distributed transaction ensures that, if the transaction is committed or rolled back, modifications made by the code at the data source are also committed or rolled back.</span></span>  
  
 <span data-ttu-id="0a969-291"><xref:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction%2A> 如果返回异常<xref:System.Data.OracleClient.OracleConnection>已经启动了事务使用<xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>。</span><span class="sxs-lookup"><span data-stu-id="0a969-291"><xref:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction%2A> returns an exception if the <xref:System.Data.OracleClient.OracleConnection> has already started a transaction using <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>.</span></span> <span data-ttu-id="0a969-292">但是，如果事务是在数据源上开始的本地事务 (例如，通过显式执行 BEGIN TRANSACTION 语句使用<xref:System.Data.OracleClient.OracleCommand>对象)，<xref:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction%2A>回滚该本地事务并在现有中登记为请求的分布式的事务。</span><span class="sxs-lookup"><span data-stu-id="0a969-292">However, if the transaction is a local transaction started at the data source (for example, by explicitly executing the BEGIN TRANSACTION statement using an <xref:System.Data.OracleClient.OracleCommand> object), <xref:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction%2A> rolls back the local transaction and enlists in the existing distributed transaction as requested.</span></span> <span data-ttu-id="0a969-293">不会收到通知，该本地事务已回滚，并且会负责管理任何本地事务没有启动使用<xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>。</span><span class="sxs-lookup"><span data-stu-id="0a969-293">You will not receive notice that the local transaction was rolled back, and are responsible for managing any local transactions not started using <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction"><span data-ttu-id="0a969-294">对用于登记的现有 <see cref="T:System.Transactions.Transaction" /> 的引用。</span><span class="sxs-lookup"><span data-stu-id="0a969-294">A reference to an existing <see cref="T:System.Transactions.Transaction" /> in which to enlist.</span></span></param>
        <summary><span data-ttu-id="0a969-295">在指定的事务中登记为分布式事务。</span><span class="sxs-lookup"><span data-stu-id="0a969-295">Enlists in the specified transaction as a distributed transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a969-296">新增 ADO.NET 2.0 中功能支持使用</span><span class="sxs-lookup"><span data-stu-id="0a969-296">New in ADO.NET 2.0 is support for using the</span></span>  
  
 <span data-ttu-id="0a969-297"><xref:System.Data.Common.DbConnection.EnlistTransaction%2A> 方法在分布式事务中登记。</span><span class="sxs-lookup"><span data-stu-id="0a969-297"><xref:System.Data.Common.DbConnection.EnlistTransaction%2A> method to enlist in a distributed transaction.</span></span> <span data-ttu-id="0a969-298">因为它登记中的连接<xref:System.Transactions.Transaction>实例， **EnlistTransaction**中可用的功能利用<xref:System.Transactions>命名空间用于管理分布式事务，使其优于**EnlistDistributedTransaction**，它使用**System.EnterpriseServices.ITransaction**对象。</span><span class="sxs-lookup"><span data-stu-id="0a969-298">Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **EnlistTransaction** takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **EnlistDistributedTransaction**, which uses a **System.EnterpriseServices.ITransaction** object.</span></span> <span data-ttu-id="0a969-299">它还具有略有不同的语义： 后在事务中显式登记连接，不能取消登记或第一个事务完成之前在另一个事务中登记。</span><span class="sxs-lookup"><span data-stu-id="0a969-299">It also has slightly different semantics: once a connection is explicitly enlisted on a transaction, it cannot be unenlisted or enlisted in another transaction until the first transaction finishes.</span></span> <span data-ttu-id="0a969-300">有关分布式事务的详细信息，请参阅[分布式事务](~/docs/framework/data/adonet/distributed-transactions.md)。</span><span class="sxs-lookup"><span data-stu-id="0a969-300">For more information about distributed transactions, see [Distributed Transactions](~/docs/framework/data/adonet/distributed-transactions.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a969-301">返回此 <see cref="T:System.Data.OracleClient.OracleConnection" /> 的数据源的架构信息。</span><span class="sxs-lookup"><span data-stu-id="0a969-301">Returns schema information for the data source of this <see cref="T:System.Data.OracleClient.OracleConnection" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a969-302">返回此 <see cref="T:System.Data.OracleClient.OracleConnection" /> 的数据源的架构信息。</span><span class="sxs-lookup"><span data-stu-id="0a969-302">Returns schema information for the data source of this <see cref="T:System.Data.OracleClient.OracleConnection" />.</span></span></summary>
        <returns><span data-ttu-id="0a969-303">包含架构信息的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="0a969-303">A <see cref="T:System.Data.DataTable" /> that contains schema information.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.GetSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collectionName"><span data-ttu-id="0a969-304">指定要返回的架构的名称。</span><span class="sxs-lookup"><span data-stu-id="0a969-304">Specifies the name of the schema to return.</span></span></param>
        <summary><span data-ttu-id="0a969-305">使用表示架构名称的指定字符串返回此 <see cref="T:System.Data.OracleClient.OracleConnection" /> 的数据源的架构信息。</span><span class="sxs-lookup"><span data-stu-id="0a969-305">Returns schema information for the data source of this <see cref="T:System.Data.OracleClient.OracleConnection" /> using the specified string for the schema name.</span></span></summary>
        <returns><span data-ttu-id="0a969-306">包含架构信息的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="0a969-306">A <see cref="T:System.Data.DataTable" /> that contains schema information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a969-307">查询使用<xref:System.Data.OracleClient.OracleConnection.GetSchema%2A>区分大小写。</span><span class="sxs-lookup"><span data-stu-id="0a969-307">Queries using <xref:System.Data.OracleClient.OracleConnection.GetSchema%2A> are case sensitive.</span></span> <span data-ttu-id="0a969-308">由于 Oracle 的处理的事例时首次创建架构，这可能导致意外的结果。</span><span class="sxs-lookup"><span data-stu-id="0a969-308">Because of Oracle's treatment of cases when a schema is first created, this can lead to unexpected results.</span></span>  
  
 <span data-ttu-id="0a969-309">如果架构创建不带引号`,`Oracle 以大写形式存储的对象名称。</span><span class="sxs-lookup"><span data-stu-id="0a969-309">If the schema was created without quotes`,` Oracle stores the object name in upper case.</span></span> <span data-ttu-id="0a969-310">如果创建包含引号的架构，Oracle 提供的大小写方面存储的对象名称。</span><span class="sxs-lookup"><span data-stu-id="0a969-310">If the schema was created with quotes, Oracle stores the object name in the casing provided.</span></span>  
  
 <span data-ttu-id="0a969-311">例如，假设你创建一个名为 MyTable，使用以下两个语句之一表：</span><span class="sxs-lookup"><span data-stu-id="0a969-311">For example, suppose that you create a table called MyTable, using one of the following two statements:</span></span>  
  
 `CREATE TABLE MyTable ...`  
  
 `CREATE TABLE "MyTable" ...`  
  
 <span data-ttu-id="0a969-312">若要检索有关通过此表的信息**GetSchema**方法中第一种情况，你将必须作为自变量中传递"MYTABLE"。</span><span class="sxs-lookup"><span data-stu-id="0a969-312">To retrieve information about this table via the **GetSchema** method in the first case, you would have to pass "MYTABLE" in as an argument.</span></span> <span data-ttu-id="0a969-313">在第二种情况，你必须在作为参数传递"MyTable"。</span><span class="sxs-lookup"><span data-stu-id="0a969-313">In the second case, you would have to pass "MyTable" in as an argument.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a969-314"><paramref name="collectionName" /> 被指定为空。</span><span class="sxs-lookup"><span data-stu-id="0a969-314"><paramref name="collectionName" /> is specified as null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName, string[] restrictionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.GetSchema(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String, restrictionValues As String()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName, cli::array &lt;System::String ^&gt; ^ restrictionValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
        <Parameter Name="restrictionValues" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="collectionName"><span data-ttu-id="0a969-315">指定要返回的架构的名称。</span><span class="sxs-lookup"><span data-stu-id="0a969-315">Specifies the name of the schema to return.</span></span></param>
        <param name="restrictionValues"><span data-ttu-id="0a969-316">请求的架构的一组限制值。</span><span class="sxs-lookup"><span data-stu-id="0a969-316">A set of restriction values for the requested schema.</span></span></param>
        <summary><span data-ttu-id="0a969-317">使用表示架构名称的指定字符串以及表示限制值的指定字符串数组返回此 <see cref="T:System.Data.OracleClient.OracleConnection" /> 的数据源的架构信息。</span><span class="sxs-lookup"><span data-stu-id="0a969-317">Returns schema information for the data source of this <see cref="T:System.Data.OracleClient.OracleConnection" /> using the specified string for the schema name and the specified string array for the restriction values.</span></span></summary>
        <returns><span data-ttu-id="0a969-318">包含架构信息的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="0a969-318">A <see cref="T:System.Data.DataTable" /> that contains schema information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a969-319">`restrictionValues`参数可以提供的值所指定的特定集合的限制集合的 n 深度。</span><span class="sxs-lookup"><span data-stu-id="0a969-319">The `restrictionValues` parameter can supply n depth of values which are specified by the restrictions collection for a specific collection.</span></span> <span data-ttu-id="0a969-320">为了对给定的限制，设置值和设置的其他限制的值，你需要设置前面的限制条件为 null，然后为你想要为指定值的限制中的相应值。</span><span class="sxs-lookup"><span data-stu-id="0a969-320">In order to set values on a given restriction, and not set the values of other restrictions, you need to set the preceding restrictions to null and then put the appropriate value in for the restriction that you would like to specify a value for.</span></span>  
  
 <span data-ttu-id="0a969-321">此示例为"表"集合。</span><span class="sxs-lookup"><span data-stu-id="0a969-321">An example of this is the "Tables" collection.</span></span> <span data-ttu-id="0a969-322">如果"Tables"集合具有 3 限制： 数据库、 所有者和表名称;你想要取回仅与"Carl"的所有者关联的表，然后你将需要以通过 （至少） 的以下值： null，"Carl"。</span><span class="sxs-lookup"><span data-stu-id="0a969-322">If the "Tables" collection has 3 restrictions: database, owner, and table name; and you want to get back only the tables associated with the owner "Carl", then you would need to pass in the following values (at a minimum): null, "Carl".</span></span> <span data-ttu-id="0a969-323">如果未传入限制值，默认值用于该限制。</span><span class="sxs-lookup"><span data-stu-id="0a969-323">If a restriction value is not passed in, the default values are used for that restriction.</span></span> <span data-ttu-id="0a969-324">这将是相同的映射与传入 null，这是不同于传入的参数值为空字符串。</span><span class="sxs-lookup"><span data-stu-id="0a969-324">This is the same mapping as passing in null, which is different than passing in an empty string for the parameter value.</span></span> <span data-ttu-id="0a969-325">在这种情况下，空字符串 ("") 被视为可为指定的参数的值。</span><span class="sxs-lookup"><span data-stu-id="0a969-325">In that case, the empty string ("") is considered to be the value for the specified parameter.</span></span>  
  
 <span data-ttu-id="0a969-326">查询使用<xref:System.Data.OracleClient.OracleConnection.GetSchema%2A>区分大小写。</span><span class="sxs-lookup"><span data-stu-id="0a969-326">Queries using <xref:System.Data.OracleClient.OracleConnection.GetSchema%2A> are case sensitive.</span></span> <span data-ttu-id="0a969-327">由于 Oracle 的处理的事例时首次创建架构，这可能导致意外的结果。</span><span class="sxs-lookup"><span data-stu-id="0a969-327">Because of Oracle's treatment of cases when a schema is first created, this can lead to unexpected results.</span></span>  
  
 <span data-ttu-id="0a969-328">如果架构创建不带引号`,`Oracle 以大写形式存储的对象名称。</span><span class="sxs-lookup"><span data-stu-id="0a969-328">If the schema was created without quotes`,` Oracle stores the object name in upper case.</span></span> <span data-ttu-id="0a969-329">如果创建包含引号的架构，Oracle 提供的大小写方面存储的对象名称。</span><span class="sxs-lookup"><span data-stu-id="0a969-329">If the schema was created with quotes, Oracle stores the object name in the casing provided.</span></span>  
  
 <span data-ttu-id="0a969-330">例如，假设你创建一个名为 MyTable，使用以下两个语句之一表：</span><span class="sxs-lookup"><span data-stu-id="0a969-330">For example, suppose that you create a table called MyTable, using one of the following two statements:</span></span>  
  
 `CREATE TABLE MyTable ...`  
  
 `CREATE TABLE "MyTable" ...`  
  
 <span data-ttu-id="0a969-331">若要检索有关通过此表的信息**GetSchema**方法中第一种情况，你将必须作为自变量中传递"MYTABLE"。</span><span class="sxs-lookup"><span data-stu-id="0a969-331">To retrieve information about this table via the **GetSchema** method in the first case, you would have to pass "MYTABLE" in as an argument.</span></span> <span data-ttu-id="0a969-332">在第二种情况，你必须在作为参数传递"MyTable"。</span><span class="sxs-lookup"><span data-stu-id="0a969-332">In the second case, you would have to pass "MyTable" in as an argument.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a969-333"><paramref name="collectionName" /> 被指定为空。</span><span class="sxs-lookup"><span data-stu-id="0a969-333"><paramref name="collectionName" /> is specified as null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InfoMessage">
      <MemberSignature Language="C#" Value="public event System.Data.OracleClient.OracleInfoMessageEventHandler InfoMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OracleClient.OracleInfoMessageEventHandler InfoMessage" />
      <MemberSignature Language="DocId" Value="E:System.Data.OracleClient.OracleConnection.InfoMessage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InfoMessage As OracleInfoMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OracleClient::OracleInfoMessageEventHandler ^ InfoMessage;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleInfoMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a969-334">当 Oracle 发送警告或信息性消息时发生。</span><span class="sxs-lookup"><span data-stu-id="0a969-334">Occurs when Oracle sends a warning or an informational message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a969-335">适用于 Oracle 的.NET Framework 数据提供程序使用 Oracle 调用接口 (OCI)，每当数据提供程序收到成功与信息消息，因为<xref:System.Data.OracleClient.OracleConnection.InfoMessage>生成事件。</span><span class="sxs-lookup"><span data-stu-id="0a969-335">Because the .NET Framework Data Provider for Oracle uses the Oracle Call Interface (OCI), whenever the data provider receives a Success With Info message, an <xref:System.Data.OracleClient.OracleConnection.InfoMessage> event is generated.</span></span> <span data-ttu-id="0a969-336">示例将创建包含语法错误的存储的过程。</span><span class="sxs-lookup"><span data-stu-id="0a969-336">An example would be creating a stored procedure that contains a syntax error.</span></span> <span data-ttu-id="0a969-337">调用<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>方法将成功。</span><span class="sxs-lookup"><span data-stu-id="0a969-337">The call to the <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> method would succeed.</span></span> <span data-ttu-id="0a969-338">但是<xref:System.Data.OracleClient.OracleConnection.InfoMessage>将通知你语法错误生成事件。</span><span class="sxs-lookup"><span data-stu-id="0a969-338">However an <xref:System.Data.OracleClient.OracleConnection.InfoMessage> event would be generated informing you of the syntax error.</span></span>  
  
 <span data-ttu-id="0a969-339">想要处理警告或信息性消息由服务器发送客户端应创建<xref:System.Data.OracleClient.OracleInfoMessageEventHandler>委托来侦听此事件。</span><span class="sxs-lookup"><span data-stu-id="0a969-339">Clients who want to process warnings or informational messages sent by the server should create an <xref:System.Data.OracleClient.OracleInfoMessageEventHandler> delegate to listen to this event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a969-340">使用 <see cref="P:System.Data.OracleClient.OracleConnection.ConnectionString" /> 指定的属性设置打开一个到数据库的连接。</span><span class="sxs-lookup"><span data-stu-id="0a969-340">Opens a connection to a database with the property settings specified by the <see cref="P:System.Data.OracleClient.OracleConnection.ConnectionString" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a969-341"><xref:System.Data.OracleClient.OracleConnection>从连接池中绘制的开放连接，如果有的话。</span><span class="sxs-lookup"><span data-stu-id="0a969-341">The <xref:System.Data.OracleClient.OracleConnection> draws an open connection from the connection pool if one is available.</span></span> <span data-ttu-id="0a969-342">否则，它在建立新连接到数据库。</span><span class="sxs-lookup"><span data-stu-id="0a969-342">Otherwise, it establishes a new connection to the database.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a969-343">如果<xref:System.Data.OracleClient.OracleConnection>超出范围，它表示的连接不会关闭自动。</span><span class="sxs-lookup"><span data-stu-id="0a969-343">If the <xref:System.Data.OracleClient.OracleConnection> goes out of scope, the connection it represents does not close automatically.</span></span> <span data-ttu-id="0a969-344">因此，必须显式关闭连接通过调用<xref:System.Data.OracleClient.OracleConnection.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="0a969-344">Therefore, you must explicitly close the connection by calling <xref:System.Data.OracleClient.OracleConnection.Close%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a969-345">连接未打开。</span><span class="sxs-lookup"><span data-stu-id="0a969-345">The connection is not open.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="0a969-346">不能更改数据库。</span><span class="sxs-lookup"><span data-stu-id="0a969-346">Cannot change the database.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a969-347">获取包含客户端所连接到的服务器的版本的字符串。</span><span class="sxs-lookup"><span data-stu-id="0a969-347">Gets a string containing the version of the server to which the client is connected.</span></span></summary>
        <value><span data-ttu-id="0a969-348">连接的服务器的版本。</span><span class="sxs-lookup"><span data-stu-id="0a969-348">The version of the connected server.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a969-349"><xref:System.Data.OracleClient.OracleConnection.ServerVersion%2A>属性是在 Oracle 版本格式。</span><span class="sxs-lookup"><span data-stu-id="0a969-349">The <xref:System.Data.OracleClient.OracleConnection.ServerVersion%2A> property is in Oracle version format.</span></span> <span data-ttu-id="0a969-350">例如，对于 Oracle8 版本的格式是窗体中的字符串"8.1.7.0.0 Oracle8 释放 8.1.7.0.0-生产。"</span><span class="sxs-lookup"><span data-stu-id="0a969-350">For example, the format for an Oracle8 release is a string in the form "8.1.7.0.0 Oracle8 Release 8.1.7.0.0 - Production."</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a969-351">下面的示例创建<xref:System.Data.OracleClient.OracleConnection>并显示部分只读属性。</span><span class="sxs-lookup"><span data-stu-id="0a969-351">The following example creates an <xref:System.Data.OracleClient.OracleConnection> and displays some of its read-only properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleConnection.ServerVersion#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.ServerVersion/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.ServerVersion#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.ServerVersion/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a969-352">连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="0a969-352">The connection is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a969-353">获取连接的当前状态。</span><span class="sxs-lookup"><span data-stu-id="0a969-353">Gets the current state of the connection.</span></span></summary>
        <value><span data-ttu-id="0a969-354"><see cref="T:System.Data.ConnectionState" /> 值的按位组合。</span><span class="sxs-lookup"><span data-stu-id="0a969-354">A bitwise combination of the <see cref="T:System.Data.ConnectionState" /> values.</span></span> <span data-ttu-id="0a969-355">默认值为 <see langword="Closed" />。</span><span class="sxs-lookup"><span data-stu-id="0a969-355">The default is <see langword="Closed" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a969-356">允许的状态更改是：</span><span class="sxs-lookup"><span data-stu-id="0a969-356">The allowed state changes are:</span></span>  
  
-   <span data-ttu-id="0a969-357">从`Closed`到`Open`，使用`Open`方法<xref:System.Data.OracleClient.OracleConnection>对象。</span><span class="sxs-lookup"><span data-stu-id="0a969-357">From `Closed` to `Open`, using the `Open` method of the <xref:System.Data.OracleClient.OracleConnection> object.</span></span>  
  
-   <span data-ttu-id="0a969-358">从`Open`到`Closed`，使用<xref:System.Data.OracleClient.OracleConnection.Close%2A>方法<xref:System.Data.OracleClient.OracleConnection>对象。</span><span class="sxs-lookup"><span data-stu-id="0a969-358">From `Open` to `Closed`, using the <xref:System.Data.OracleClient.OracleConnection.Close%2A> method of the <xref:System.Data.OracleClient.OracleConnection> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a969-359">下面的示例创建派生类的实例<xref:System.Data.OracleClient.OracleConnection>，设置其<xref:System.Data.IDbConnection.ConnectionString%2A>，并显示其<xref:System.Data.OracleClient.OracleConnection.State%2A>。</span><span class="sxs-lookup"><span data-stu-id="0a969-359">The following example creates an instance of a derived class, <xref:System.Data.OracleClient.OracleConnection>, sets its <xref:System.Data.IDbConnection.ConnectionString%2A>, and displays its <xref:System.Data.OracleClient.OracleConnection.State%2A>.</span></span>  
  
 [!code-csharp[Classic WebData OracleConnection.State#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.State/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.State#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.State/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a969-360">创建作为当前实例副本的新对象。</span><span class="sxs-lookup"><span data-stu-id="0a969-360">Creates a new object that is a copy of the current instance.</span></span></summary>
        <returns><span data-ttu-id="0a969-361">作为此实例副本的新对象。</span><span class="sxs-lookup"><span data-stu-id="0a969-361">A new object that is a copy of this instance..</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a969-362">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0a969-362">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0a969-363">它只能在 <xref:System.Data.OracleClient.OracleConnection> 实例强制转换为 <xref:System.ICloneable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0a969-363">It can be used only when the <xref:System.Data.OracleClient.OracleConnection> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>