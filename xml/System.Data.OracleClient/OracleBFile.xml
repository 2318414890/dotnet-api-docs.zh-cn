<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OracleBFile.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5459475433844047b61ade7ae3edf80506077e29a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">459475433844047b61ade7ae3edf80506077e29a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleBFile">
          <source>Represents a managed <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> object designed to work with the Oracle <ph id="ph2">&lt;see langword="BFILE" /&gt;</ph> data type.</source>
          <target state="translated">表示托管 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 对象，该对象的设计旨在与 Oracle <ph id="ph2">&lt;see langword="BFILE" /&gt;</ph> 数据类型配合使用。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleBFile">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>The Oracle <ph id="ph1">`BFILE`</ph> data type is an Oracle <ph id="ph2">`LOB`</ph> data type that contains a reference to binary data with a maximum size of 4 gigabytes.</source>
          <target state="translated">Oracle<ph id="ph1">`BFILE`</ph>数据类型是一种 Oracle<ph id="ph2">`LOB`</ph>数据类型，包含最大大小为 4 千兆字节的二进制数据的引用。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>An Oracle <ph id="ph1">`BFILE`</ph> differs from other Oracle <ph id="ph2">`LOB`</ph> data types in that its data is stored in a physical file in the operating system instead of on the server.</source>
          <target state="translated">Oracle<ph id="ph1">`BFILE`</ph>不同于其他 Oracle<ph id="ph2">`LOB`</ph>数据类型，因为其数据存储在服务器上的物理文件中而不是操作系统。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>Note that the <ph id="ph1">`BFILE`</ph> data type provides read-only access to data.</source>
          <target state="translated">请注意，<ph id="ph1">`BFILE`</ph>数据类型提供对数据的只读访问。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>Therefore, write-oriented methods inherited from the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> class are not supported.</source>
          <target state="translated">因此，面向写的方法继承自<ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>不支持类。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>Other characteristics of a <ph id="ph1">`BFILE`</ph> data type that distinguish it from a <ph id="ph2">`LOB`</ph> data type are that it:</source>
          <target state="translated">其他特征<ph id="ph1">`BFILE`</ph>将它从区分开来的数据类型<ph id="ph2">`LOB`</ph>数据类型是：</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>Contains unstructured data.</source>
          <target state="translated">包含非结构化数据。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>Supports server-side chunking.</source>
          <target state="translated">支持服务器端分块。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>Uses reference copy semantics.</source>
          <target state="translated">使用引用复制语义。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>For example, if you perform a copy operation on a <ph id="ph1">`BFILE`</ph>, only the <ph id="ph2">`BFILE`</ph> locator (which is a reference to the file) is copied.</source>
          <target state="translated">例如，如果在执行复制操作<ph id="ph1">`BFILE`</ph>，则只<ph id="ph2">`BFILE`</ph>复制定位符 （这是对文件的引用）。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>The data in the file is not copied.</source>
          <target state="translated">而不会复制文件中的数据。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>The <ph id="ph1">`BFILE`</ph> data type should be used for referencing <ph id="ph2">`LOB`</ph>s that are large in size, and therefore, not practical to store in the database.</source>
          <target state="translated"><ph id="ph1">`BFILE`</ph>数据类型应该用于引用<ph id="ph2">`LOB`</ph>s 较大的大小，因此，在数据库中存储不可行。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>There is client, server, and communication overhead for using a <ph id="ph1">`BFILE`</ph> data type compared to the <ph id="ph2">`LOB`</ph> data type.</source>
          <target state="translated">没有使用的客户端、 服务器和通信开销<ph id="ph1">`BFILE`</ph>数据类型相比<ph id="ph2">`LOB`</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>It is more efficient to access a <ph id="ph1">`BFILE`</ph> if you only need to obtain a small amount of data.</source>
          <target state="translated">它会更加高效访问<ph id="ph1">`BFILE`</ph>如果你只需以获取少量的数据。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>It is more efficient to access database-resident <ph id="ph1">`LOB`</ph>s if you need to obtain the entire object.</source>
          <target state="translated">访问驻留在数据库中的更高效<ph id="ph1">`LOB`</ph>s 如果你需要获取整个对象。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>Each non-NULL <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object is associated with two entities that define the location of the underlying physical file:</source>
          <target state="translated">每个非 NULL<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>对象都与两个定义基础物理文件的位置的实体关联：</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>An Oracle DIRECTORY object, which is a database alias for a directory in the file system, and</source>
          <target state="translated">一个 Oracle DIRECTORY 对象，它是文件系统中一个目录的数据库别名，以及</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>The file name of the underlying physical file, which is located in the directory associated with the DIRECTORY object.</source>
          <target state="translated">基础物理文件的文件名，它位于与 DIRECTORY 对象关联的目录中。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>After a <ph id="ph1">`BFILE`</ph> is created, you can retrieve its locator in the form of an <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object using the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A&gt;</ph> methods.</source>
          <target state="translated">后<ph id="ph1">`BFILE`</ph>是创建，你可以检索其定位符形式<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>对象使用<ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;</ph>或<ph id="ph4">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>To obtain an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object, call the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A&gt;</ph> method.</source>
          <target state="translated">若要获取<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>对象，请调用<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>The physical file that an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object is associated with does not need to exist until you attempt to access it.</source>
          <target state="translated">物理文件<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>对象所关联与不需要存在，直到你尝试访问它。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>An application can bind an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> to a nonexistent file, create the physical file in the expected location, and then call <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph>.</source>
          <target state="translated">应用程序可以将绑定<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>到不存在的文件，在预期位置中，创建物理文件，然后调用<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>Any attempt to access a closed <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> using the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> methods reopens an <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> stream automatically.</source>
          <target state="translated">任何尝试访问已关闭<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>使用<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph>或<ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph>方法重新打开<ph id="ph4">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>自动流式传输。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>The following C# example demonstrates how you can create a <ph id="ph1">`BFILE`</ph> in an Oracle table, and then retrieve it in the form of an <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object.</source>
          <target state="translated">下面的 C# 示例演示如何创建<ph id="ph1">`BFILE`</ph>在 Oracle 表，，然后检索它的形式<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>The example demonstrates the use of the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph> object and the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph><ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> methods.</source>
          <target state="translated">该示例演示如何使用<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph>对象和<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph><ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph>和<ph id="ph4">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>For more information about creating and using an Oracle <ph id="ph1">`BFILE`</ph>, see the appropriate topic in your Oracle documentation.</source>
          <target state="translated">有关详细信息，有关创建和使用 Oracle <ph id="ph1">`BFILE`</ph>，请参阅 Oracle 文档中的相应主题。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>The <ph id="ph1">`BeginWrite`</ph>, <ph id="ph2">`EndWrite`</ph>, and <ph id="ph3">`WriteByte`</ph> methods, which are inherited from the <ph id="ph4">`System.IO.Stream`</ph> class, are not supported because the <ph id="ph5">`BFILE`</ph> data type is read-only.</source>
          <target state="translated"><ph id="ph1">`BeginWrite`</ph>， <ph id="ph2">`EndWrite`</ph>，和<ph id="ph3">`WriteByte`</ph>方法，继承自<ph id="ph4">`System.IO.Stream`</ph>类中，不支持，因为<ph id="ph5">`BFILE`</ph>数据类型是只读的。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.CanRead">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see langword="BFILE" /&gt;</ph> stream can be read.</source>
          <target state="translated">获取一个值，该值指示 <ph id="ph1">&lt;see langword="BFILE" /&gt;</ph> 流是否可读。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.CanRead">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if a <ph id="ph2">&lt;see langword="BFILE" /&gt;</ph> is closed or disposed; otherwise <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="false" /&gt;</ph> 已关闭或已释放，则为 <ph id="ph2">&lt;see langword="BFILE" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.CanRead">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph> for <ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleBFile.Null" /&gt;</ph>.</source>
          <target state="translated">对于 <ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleBFile.Null" /&gt;</ph>，总是为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.CanSeek">
          <source>Gets a value indicating whether forward-seek and backward-seek operations can be performed.</source>
          <target state="translated">获取一个值，该值指示能否执行向前和向后查找操作。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.CanSeek">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if a <ph id="ph2">&lt;see langword="BFILE" /&gt;</ph> is closed or disposed; otherwise <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="false" /&gt;</ph> 已关闭或已释放，则为 <ph id="ph2">&lt;see langword="BFILE" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.CanSeek">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph> for <ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleBFile.Null" /&gt;</ph>.</source>
          <target state="translated">对于 <ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleBFile.Null" /&gt;</ph>，总是为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.CanWrite">
          <source>Gets a value indicating whether the object supports writing.</source>
          <target state="translated">获取一个值，该值指示对象是否支持写入。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.CanWrite">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> because the Oracle <ph id="ph2">&lt;see langword="BFILE" /&gt;</ph> data type is read-only.</source>
          <target state="translated">因为 Oracle <ph id="ph1">&lt;see langword="false" /&gt;</ph> 数据类型是只读的，所以始终返回 <ph id="ph2">&lt;see langword="BFILE" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Clone">
          <source>Creates a copy of this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> object associated with the same physical file as the original.</source>
          <target state="translated">创建此 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 对象的副本，该副本所关联的物理文件与原始对象所关联的相同。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> object associated with the same physical file as the original <ph id="ph2">&lt;see langword="OracleBFile" /&gt;</ph> object.</source>
          <target state="translated">一个新 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 对象，该对象所关联的物理文件与原始 <ph id="ph2">&lt;see langword="OracleBFile" /&gt;</ph> 对象所关联的相同。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Clone">
          <source>The properties of the new <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object initially have the same values as those of the original object.</source>
          <target state="translated">新属性<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>对象最初具有与原始对象相同的值。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Clone">
          <source>However, after the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Clone%2A&gt;</ph> is complete, each <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object is independent from the other.</source>
          <target state="translated">但是之后,<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Clone%2A&gt;</ph>已完成，每个<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>对象是相互独立。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Clone">
          <source>For example, changing the value of the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Position%2A&gt;</ph> property on the original <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> does not change the value of <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile.Position%2A&gt;</ph> on the copy.</source>
          <target state="translated">例如，更改的值<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Position%2A&gt;</ph>原始属性<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>不会更改的值<ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile.Position%2A&gt;</ph>的副本。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.Connection">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleConnection" /&gt;</ph> used by this instance of the <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph>.</source>
          <target state="translated">获取由该 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleConnection" /&gt;</ph> 实例使用的 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.Connection">
          <source>The connection to a data source.</source>
          <target state="translated">到数据源的连接。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.Connection">
          <source>The default is a null value.</source>
          <target state="translated">默认值为 null 。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleBFile">
          <source>Copies data from this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> to a destination <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          <target state="translated">将数据从此 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 复制到目标 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The destination <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph></source>
          <target state="translated">目标 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>Copies the entire contents of this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> to the beginning of a destination <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 的全部内容复制到目标 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 的开始位置。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The number of bytes copied.</source>
          <target state="translated">已复制的字节数。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The underlying data types of the source <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> and the destination <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> must be compatible.</source>
          <target state="translated">基础数据源类型的<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>和目标<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>必须兼容。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>For example, you cannot copy binary data to a destination <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> that has a character data type.</source>
          <target state="translated">例如，不能将二进制数据复制到目标<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>，其字符数据类型。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>You must have write access to the destination <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> for the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.CopyTo%2A&gt;</ph> operation to execute correctly.</source>
          <target state="translated">你必须具有写入访问权限目标<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>为<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.CopyTo%2A&gt;</ph>操作才能正确执行。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The destination <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph> is a null object reference.</source>
          <target state="translated">目标 <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph> 为空对象引用。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The destination is a null <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph>.</source>
          <target state="translated">该目标为空 <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The connection with which this <ph id="ph1">&lt;see langword="OracleBFile" /&gt;</ph> is associated is closed.</source>
          <target state="translated">与该 <ph id="ph1">&lt;see langword="OracleBFile" /&gt;</ph> 相关联的连接已关闭。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The <ph id="ph1">&lt;see langword="OracleBFile" /&gt;</ph> object is closed or disposed.</source>
          <target state="translated">已关闭或已释放 <ph id="ph1">&lt;see langword="OracleBFile" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The destination <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          <target state="translated">目标 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The offset to which to copy.</source>
          <target state="translated">要复制到的偏移量。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>Copies the entire contents of this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> to a destination <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> at the specified offset.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 的全部内容复制到目标 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 中指定的偏移位置。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The number of bytes copied.</source>
          <target state="translated">已复制的字节数。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The underlying data types of the source <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> and the destination <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> must be compatible.</source>
          <target state="translated">基础数据源类型的<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>和目标<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>必须兼容。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>For example, you cannot copy binary data to a destination <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> that has a character data type.</source>
          <target state="translated">例如，不能将二进制数据复制到目标<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>，其字符数据类型。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>You must have write access to the destination <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> for the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.CopyTo%2A&gt;</ph> operation to execute correctly.</source>
          <target state="translated">你必须具有写入访问权限目标<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>为<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.CopyTo%2A&gt;</ph>操作才能正确执行。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The destination <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph> is a null object reference.</source>
          <target state="translated">目标 <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph> 为空对象引用。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The destination is a null <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph>.</source>
          <target state="translated">该目标为空 <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The connection with which this <ph id="ph1">&lt;see langword="OracleBFile" /&gt;</ph> is associated is closed.</source>
          <target state="translated">与该 <ph id="ph1">&lt;see langword="OracleBFile" /&gt;</ph> 相关联的连接已关闭。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The <ph id="ph1">&lt;see langword="OracleBFile" /&gt;</ph> object is closed or disposed.</source>
          <target state="translated">已关闭或已释放 <ph id="ph1">&lt;see langword="OracleBFile" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The offset from which to copy.</source>
          <target state="translated">要从中复制的偏移量。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The destination <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          <target state="translated">目标 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The offset to which to copy.</source>
          <target state="translated">要复制到的偏移量。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The quantity of data, in bytes, to copy.</source>
          <target state="translated">要复制的数据数量（以字节为单位）。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>Copies from this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> to a destination <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> with the specified amount of data, the source offset, and the destination offset.</source>
          <target state="translated">通过指定数据数量、源偏移量和目标偏移量，从此 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 复制到目标 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The number of bytes copied.</source>
          <target state="translated">已复制的字节数。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The underlying data types of the source <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> and the destination <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> must be compatible.</source>
          <target state="translated">基础数据源类型的<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>和目标<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>必须兼容。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>For example, you cannot copy binary data to a destination <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> that has a character data type.</source>
          <target state="translated">例如，不能将二进制数据复制到目标<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>，其字符数据类型。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>You must have write access to the destination <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> for the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.CopyTo%2A&gt;</ph> operation to execute correctly.</source>
          <target state="translated">你必须具有写入访问权限目标<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>为<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.CopyTo%2A&gt;</ph>操作才能正确执行。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The value of the amount parameter is less than zero or greater than 4 gigabytes.</source>
          <target state="translated">数量参数的值小于零或大于 4 GB。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The destination <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph> is a null object reference.</source>
          <target state="translated">目标 <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph> 为空对象引用。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The destination is a null <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph>.</source>
          <target state="translated">该目标为空 <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The connection with which this <ph id="ph1">&lt;see langword="OracleBFile" /&gt;</ph> is associated is closed.</source>
          <target state="translated">与该 <ph id="ph1">&lt;see langword="OracleBFile" /&gt;</ph> 相关联的连接已关闭。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The <ph id="ph1">&lt;see langword="OracleBFile" /&gt;</ph> object is closed or disposed.</source>
          <target state="translated">已关闭或已释放 <ph id="ph1">&lt;see langword="OracleBFile" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.DirectoryName">
          <source>Gets the name of the DIRECTORY object, with which an <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> object is associated.</source>
          <target state="translated">获取与 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 对象相关联的 DIRECTORY 对象的名称。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.DirectoryName">
          <source>The name of the DIRECTORY object.</source>
          <target state="translated">DIRECTORY 对象的名称。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.DirectoryName">
          <source>Each non-NULL <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object is associated with two entities that define the location of underlying physical file:</source>
          <target state="translated">每个非 NULL<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>对象都与两个定义基础物理文件的位置的实体关联：</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.DirectoryName">
          <source>An Oracle DIRECTORY object, which is a database alias for a directory in the file system, and</source>
          <target state="translated">一个 Oracle DIRECTORY 对象，它是文件系统中一个目录的数据库别名，以及</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.DirectoryName">
          <source>The file name of the underlying physical file, which is located in the directory associated with the DIRECTORY object.</source>
          <target state="translated">基础物理文件的文件名，它位于与 DIRECTORY 对象关联的目录中。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.DirectoryName">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A&gt;</ph> property returns the name of the DIRECTORY object from the Oracle database.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A&gt;</ph>属性返回的目录对象的名称从 Oracle 数据库。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.DirectoryName">
          <source>For more information about creating and using an Oracle <ph id="ph1">`BFILE`</ph>, see the appropriate topic in your Oracle documentation.</source>
          <target state="translated">有关详细信息，有关创建和使用 Oracle <ph id="ph1">`BFILE`</ph>，请参阅 Oracle 文档中的相应主题。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.DirectoryName">
          <source>Attempted to call <ph id="ph1">&lt;see langword="DirectoryName" /&gt;</ph> on a closed or disposed <ph id="ph2">&lt;see langword="OracleBFile" /&gt;</ph> object.</source>
          <target state="translated">尝试对已关闭或已释放的 <ph id="ph1">&lt;see langword="DirectoryName" /&gt;</ph> 对象调用 <ph id="ph2">&lt;see langword="OracleBFile" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.FileExists">
          <source>Gets a value indicating whether a physical file containing <ph id="ph1">&lt;see langword="BFILE" /&gt;</ph> data exists in the operating system.</source>
          <target state="translated">获取一个值，该值指示操作系统中是否存在包含 <ph id="ph1">&lt;see langword="BFILE" /&gt;</ph> 数据的物理文件。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.FileExists">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a physical file containing <ph id="ph2">&lt;see langword="BFILE" /&gt;</ph> data exists; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果存在包含 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 数据的物理文件，则为 <ph id="ph2">&lt;see langword="BFILE" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.FileExists">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> object is closed or disposed.</source>
          <target state="translated">已关闭或已释放 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.FileExists">
          <source>The connection with which a <ph id="ph1">&lt;see langword="BFILE" /&gt;</ph> is associated is closed.</source>
          <target state="translated">与 <ph id="ph1">&lt;see langword="BFILE" /&gt;</ph> 相关联的连接已关闭。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.FileName">
          <source>Gets the name of the <ph id="ph1">&lt;see langword="BFILE" /&gt;</ph> without the path.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see langword="BFILE" /&gt;</ph> 的名称（不带路径）。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.FileName">
          <source>The name of the BFILE.</source>
          <target state="translated">BFILE 的名称。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.FileName">
          <source>For <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Null&gt;</ph>, an empty string is returned.</source>
          <target state="translated">有关<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Null&gt;</ph>，则返回空字符串。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.FileName">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> object is closed or disposed.</source>
          <target state="translated">已关闭或已释放 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Flush">
          <source>Not currently supported.</source>
          <target state="translated">目前尚不支持。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.IsNull">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> is a <ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleBFile.Null" /&gt;</ph> stream.</source>
          <target state="translated">获取一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 是否为一个 <ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleBFile.Null" /&gt;</ph> 流。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.IsNull">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> is a <ph id="ph3">&lt;see cref="F:System.Data.OracleClient.OracleBFile.Null" /&gt;</ph> stream; otherwise <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 是 <ph id="ph3">&lt;see cref="F:System.Data.OracleClient.OracleBFile.Null" /&gt;</ph> 流，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.Length">
          <source>Gets a value that returns the length in bytes of the physical file with which the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> object is associated.</source>
          <target state="translated">获取一个值，该值返回与 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 对象关联的物理文件的长度（以字节为单位）。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.Length">
          <source>A long value representing the length of the physical file in bytes.</source>
          <target state="translated">用字节表示物理文件长度的长值。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.Length">
          <source>Methods were called after the stream was closed or disposed.</source>
          <target state="translated">关闭或释放该流后，调用方法。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="F:System.Data.OracleClient.OracleBFile.Null">
          <source>Represents a null <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> object that is not bound to a physical file.</source>
          <target state="translated">表示空 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 对象，该对象没有绑定到物理文件。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.OracleClient.OracleBFile.Null">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Null&gt;</ph> can be useful when you want to perform a comparison operation on an <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> to determine nullability.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Null&gt;</ph> 如果你想要执行的比较运算上可<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>以确定可为 null。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.OracleClient.OracleBFile.Null">
          <source>Any attempt to perform a read operation on a <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Null&gt;</ph> object succeeds, but does not return any data.</source>
          <target state="translated">任何试图在上执行读取的操作<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Null&gt;</ph>对象成功，但不返回任何数据。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.OracleClient.OracleBFile.Null">
          <source>Any attempt to perform a write operation on a <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Null&gt;</ph> object generates an exception.</source>
          <target state="translated">任何试图在上执行写入操作<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Null&gt;</ph>对象生成异常。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.OracleClient.OracleBFile.Null">
          <source>Selecting a <ph id="ph1">`BFILE`</ph> column that contains a null value returns <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Null&gt;</ph>.</source>
          <target state="translated">选择<ph id="ph1">`BFILE`</ph>包含一个 null 值的列返回<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Null&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.Position">
          <source>Gets the current read position in the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> stream.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 流中的当前读取位置。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.Position">
          <source>The current position within the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 流中的当前位置。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.Position">
          <source>Seeking to any location beyond the length of the stream is not supported.</source>
          <target state="translated">不支持查找到流的长度超出任何位置。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.Position">
          <source>The <ph id="ph1">`Position`</ph> property does not keep track of the number of bytes from the stream that have been consumed, skipped, or both.</source>
          <target state="translated"><ph id="ph1">`Position`</ph>属性不会不跟踪的从和 / 或已用完，跳过，流的字节数。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.Position">
          <source>Attempted to set a position with a negative value or greater than the length of the stream.</source>
          <target state="translated">尝试用一个负值或大于该流长度的值设置位置。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.Position">
          <source>Methods were called after the stream was closed or disposed.</source>
          <target state="translated">关闭或释放该流后，调用方法。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>An array of bytes.</source>
          <target state="translated">字节数组。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>When this method returns, the buffer contains the specified byte array with the values between <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> and (<bpt id="p2">&lt;c&gt;</bpt>offset<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept>) replaced by the bytes read from the current source.</source>
          <target state="translated">此方法返回时，该缓冲区包含指定的字节数组，该数组的 <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> 和 (<bpt id="p2">&lt;c&gt;</bpt>offset<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept>) 之间的值由从当前源中读取的字节替换。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The zero-based byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin storing the data read from the current stream.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> 中从零开始的字节偏移量，从此处开始存储从当前流中读取的数据。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to be read from the current stream.</source>
          <target state="translated">要从当前流中最多读取的字节数。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Reads a sequence of bytes from the current <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> stream and advances the position within the stream by the number of bytes read.</source>
          <target state="translated">从当前 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 流中读取字节序列，并在该流中按照读取的字节数提升位置。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The total number of bytes read into the buffer.</source>
          <target state="translated">读入缓冲区中的总字节数。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>This may be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the file has been reached.</source>
          <target state="translated">如果当前可用的字节数没有那么多，则总字节数可能小于请求的字节数，或者如果已到达文件的末尾，则为零。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> method read a maximum of <ph id="ph2">`count`</ph> bytes from the current stream and store them in <ph id="ph3">`buffer`</ph> beginning at <ph id="ph4">`offset`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph>方法读取的最多<ph id="ph2">`count`</ph>字节从当前流，并且将它们存储在<ph id="ph3">`buffer`</ph>开始<ph id="ph4">`offset`</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The current position within the stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the stream remains unchanged.</source>
          <target state="translated">流中的当前位置高级通过读取; 的字节数但是，如果发生异常，将流中的当前位置保持不变。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> returns the number of bytes read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> 返回读取的字节数。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The return value is zero only if the position is currently at the end of the stream.</source>
          <target state="translated">仅当位置当前在流末尾，则返回值为零。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> will block until at least one byte of data can be read, in the event that no data is available.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> 将一直阻止到至少一个字节的数据可供读取的事件中不会提供数据。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> returns 0 only when the end of the file has been reached.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> 仅当已到达文件末尾时返回 0。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> is free to return fewer bytes than requested even if the end of the stream has not been reached.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> 可以自由地返回少于所请求的字节，即使尚未达到流结尾。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Any attempt to access a closed <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> using the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> methods reopens an <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> stream automatically.</source>
          <target state="translated">任何尝试访问已关闭<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>使用<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph>或<ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph>方法重新打开<ph id="ph4">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>自动流式传输。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The following C# example assumes this schema in an Oracle table:</source>
          <target state="translated">下面的 C# 示例假定在 Oracle 表中的此架构：</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The example demonstrates using the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> methods to access an <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object.</source>
          <target state="translated">该示例演示如何使用<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph>方法，以访问<ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The sum of <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is larger than the buffer length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 的总和大于缓冲区长度。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 为负数。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The connection with which a <ph id="ph1">&lt;see langword="BFILE" /&gt;</ph> is associated is closed.</source>
          <target state="translated">与 <ph id="ph1">&lt;see langword="BFILE" /&gt;</ph> 相关联的连接已关闭。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">出现 I/O 错误。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Methods were called after the stream was closed or disposed.</source>
          <target state="translated">关闭或释放该流后，调用方法。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>A byte offset relative to origin.</source>
          <target state="translated">相对于 origin 的字节偏移量。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> is negative, the new position will precede the position specified by <bpt id="p2">&lt;c&gt;</bpt>origin<ept id="p2">&lt;/c&gt;</ept> by the number of bytes specified by <bpt id="p3">&lt;c&gt;</bpt>offset<ept id="p3">&lt;/c&gt;</ept>.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> 为负，则新位置将位于 <bpt id="p2">&lt;c&gt;</bpt>origin<ept id="p2">&lt;/c&gt;</ept> 指定的位置之前 <bpt id="p3">&lt;c&gt;</bpt>offset<ept id="p3">&lt;/c&gt;</ept> 指定的字节数。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> is zero, the new position will be the position specified by <bpt id="p2">&lt;c&gt;</bpt>origin<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> 为零，则新位置将是 <bpt id="p2">&lt;c&gt;</bpt>origin<ept id="p2">&lt;/c&gt;</ept> 指定的位置。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> is positive, the new position will follow the position specified by <bpt id="p2">&lt;c&gt;</bpt>origin<ept id="p2">&lt;/c&gt;</ept> by the number of bytes specified by <bpt id="p3">&lt;c&gt;</bpt>offset<ept id="p3">&lt;/c&gt;</ept>.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> 为正，则新位置将位于 <bpt id="p2">&lt;c&gt;</bpt>origin<ept id="p2">&lt;/c&gt;</ept> 指定的位置之后 <bpt id="p3">&lt;c&gt;</bpt>offset<ept id="p3">&lt;/c&gt;</ept> 指定的字节数。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>A value of type <ph id="ph1">&lt;see langword="System.IO.SeekOrigin" /&gt;</ph> indicating the reference point used to obtain the new position.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="System.IO.SeekOrigin" /&gt;</ph> 类型的值，指示用于获取新位置的参考点。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Sets the position on the current <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> stream.</source>
          <target state="translated">在当前 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 流上设置位置。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The new position within the current stream.</source>
          <target state="translated">当前流中的新位置。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <ph id="ph1">`offset`</ph> is negative, the new position is required to precede the position specified by <ph id="ph2">`origin`</ph> by the number of bytes specified by <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`offset`</ph>为负，则要求新位置指定的位置之前<ph id="ph2">`origin`</ph>按指定的字节数<ph id="ph3">`offset`</ph>。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <ph id="ph1">`offset`</ph> is zero, the new position is required to be the position specified by <ph id="ph2">`origin`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`offset`</ph>为零，则要求指定的位置的新位置，位于<ph id="ph2">`origin`</ph>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <ph id="ph1">`offset`</ph> is positive, the new position is required to follow the position specified by <ph id="ph2">`origin`</ph> by the number of bytes specified by <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`offset`</ph>为正，则要求按照指定的位置新位置位于<ph id="ph2">`origin`</ph>按指定的字节数<ph id="ph3">`offset`</ph>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Seeking to any location beyond the length of the stream is not supported.</source>
          <target state="translated">不支持查找到流的长度超出任何位置。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Any attempt to access a closed <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> using the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> methods reopens an <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> stream automatically.</source>
          <target state="translated">任何尝试访问已关闭<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>使用<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph>或<ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph>方法重新打开<ph id="ph4">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>自动流式传输。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The following C# example assumes this schema in an Oracle table:</source>
          <target state="translated">下面的 C# 示例假定在 Oracle 表中的此架构：</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The example demonstrates using the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> methods to access an <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object.</source>
          <target state="translated">该示例演示如何使用<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph>方法，以访问<ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Attempted to set a position with a negative value or greater than the length of the stream.</source>
          <target state="translated">尝试用一个负值或大于该流长度的值设置位置。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Methods were called after the stream was closed or disposed.</source>
          <target state="translated">关闭或释放该流后，调用方法。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)">
          <source>The alias of the directory object that contains a physical file.</source>
          <target state="translated">包含物理文件的目录对象的别名。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)">
          <source>The name of the file in the operating system.</source>
          <target state="translated">操作系统中文件的名称。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)">
          <source>Binds the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> object to a different file in the operating system.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 对象绑定到操作系统中的其他文件。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.SetFileName%2A&gt;</ph> operation must be within a transaction to succeed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.SetFileName%2A&gt;</ph>操作必须在事务才能成功。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)">
          <source>Simply calling <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.SetFileName%2A&gt;</ph> on a <ph id="ph2">`BFILE`</ph> associates the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object with a different file, but does not update the Oracle table.</source>
          <target state="translated">只需调用<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.SetFileName%2A&gt;</ph>上<ph id="ph2">`BFILE`</ph>将相关联<ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>对象与另一个文件，但不是更新 Oracle 表。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)">
          <source>To update the Oracle table after calling <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.SetFileName%2A&gt;</ph>, you must call the <ph id="ph2">`Update`</ph> method of the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> and then commit the transaction.</source>
          <target state="translated">若要在调用后更新 Oracle 表<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.SetFileName%2A&gt;</ph>，必须调用<ph id="ph2">`Update`</ph>方法<ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>然后提交事务。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)">
          <source>Once you retrieve the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.FileName%2A&gt;</ph> property, they are cached in the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object and are unaffected by any cloned <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> objects' calls to <ph id="ph5">&lt;xref:System.Data.OracleClient.OracleBFile.SetFileName%2A&gt;</ph>, or by any changes to the <ph id="ph6">`BFILE`</ph> in the database.</source>
          <target state="translated">一旦您检索<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.FileName%2A&gt;</ph>属性，则它们将缓存在<ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>对象并不会受到任何克隆<ph id="ph4">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>对对象调用<ph id="ph5">&lt;xref:System.Data.OracleClient.OracleBFile.SetFileName%2A&gt;</ph>，或到所做的任何更改<ph id="ph6">`BFILE`</ph>数据库中。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)">
          <source>In other words, they might not represent the actual values of the <ph id="ph1">`BFILE`</ph> object in the server.</source>
          <target state="translated">换而言之，它们可能无法反映的实际值<ph id="ph1">`BFILE`</ph>服务器中的对象。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)">
          <source>Furthermore, retrieving either property (<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.FileName%2A&gt;</ph>) causes both property values to be retrieved from the server and cached in the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object.</source>
          <target state="translated">此外，检索这两个属性 (<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.FileName%2A&gt;</ph>) 会导致两个属性值被从服务器检索并缓存在<ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)">
          <source>The following C# example assumes this schema in an Oracle table:</source>
          <target state="translated">下面的 C# 示例假定在 Oracle 表中的此架构：</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)">
          <source>The example demonstrates using the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.SetFileName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> methods to access an <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object.</source>
          <target state="translated">该示例演示如何使用<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.SetFileName%2A&gt;</ph>，<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph>方法，以访问<ph id="ph4">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)">
          <source>The operation must be within a transaction.</source>
          <target state="translated">该操作必须在事务中。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.SetLength(System.Int64)">
          <source>Not currently supported.</source>
          <target state="translated">目前尚不支持。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.SetLength(System.Int64)">
          <source>Not currently supported.</source>
          <target state="translated">目前尚不支持。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.SetLength(System.Int64)">
          <source>The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.</source>
          <target state="translated">当调用的方法不受支持时，或者当尝试读取、搜索或写入不支持所调用功能的流时引发的异常。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.Value">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> data.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> 类型的 <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph>（它包含 <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 数据）。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.Value">
          <source>An <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> 类型的 <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph>（它包含 <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 数据）。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.Value">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Value%2A&gt;</ph> property reads the entire <ph id="ph2">`BFILE`</ph> at one time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Value%2A&gt;</ph>属性读取整个<ph id="ph2">`BFILE`</ph>一次。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.Value">
          <source>A benefit of using <ph id="ph1">`BFILE`</ph>s is the ability to retrieve large amounts of data in chunks at the client.</source>
          <target state="translated">使用的优点<ph id="ph1">`BFILE`</ph>s 是能够检索大量在客户端的小区块中的数据。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.Value">
          <source>However, when you use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Value%2A&gt;</ph>, you obtain all the data for the BFILE column as one contiguous chunk, which can significantly increase application overhead.</source>
          <target state="translated">但是，当使用<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Value%2A&gt;</ph>，作为一个连续的区块，这可以显著提高应用程序开销获取 BFILE 列的所有数据。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Not currently supported.</source>
          <target state="translated">目前尚不支持。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Not currently supported.</source>
          <target state="translated">目前尚不支持。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Not currently supported.</source>
          <target state="translated">目前尚不支持。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Not currently supported.</source>
          <target state="translated">目前尚不支持。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.</source>
          <target state="translated">当调用的方法不受支持时，或者当尝试读取、搜索或写入不支持所调用功能的流时引发的异常。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>