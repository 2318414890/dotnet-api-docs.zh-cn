<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="GroupCollection.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac588745e6fd7ac5403f750a8bd7fe3115e386d3db4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">88745e6fd7ac5403f750a8bd7fe3115e386d3db4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Returns the set of captured groups in a single match.</source>
          <target state="translated">返回一次匹配中捕获的组的集。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> class is a zero-based collection class that consists of one or more <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> objects that provide information about captured groups in a regular expression match.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph>类是从零开始的集合类包含一个或多个<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph>提供了一些信息的对象已捕获的组中的正则表达式匹配项。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>The collection is immutable (read-only) and has no public constructor.</source>
          <target state="translated">该集合是不可变 （只读） 并且没有公共构造函数。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>A <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> object is returned by the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph>会返回对象<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>The collection contains one or more <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group?displayProperty=nameWithType&gt;</ph> objects.</source>
          <target state="translated">集合包含一个或多个<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group?displayProperty=nameWithType&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>If the match is successful, the first element in the collection contains the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object that corresponds to the entire match.</source>
          <target state="translated">如果匹配成功，包含集合中的第一个元素<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph>对应于整个匹配项的对象。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Each subsequent element represents a captured group, if the regular expression includes capturing groups.</source>
          <target state="translated">每个后续元素表示一个捕获的组，如果正则表达式包括捕获组。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Matches from numbered (unnamed) capturing groups appear in numeric order before matches from named capturing groups.</source>
          <target state="translated">从编号 （未命名） 的捕获组的匹配项将显示在之前的匹配项的数字顺序从命名的捕获组。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>If the match is unsuccessful, the collection contains a single <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group?displayProperty=nameWithType&gt;</ph> object whose <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group.Success%2A&gt;</ph> property is <ph id="ph3">`false`</ph> and whose <ph id="ph4">&lt;xref:System.Text.RegularExpressions.Capture.Value%2A&gt;</ph> property equals <ph id="ph5">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果匹配不成功，则集合包含单个<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group?displayProperty=nameWithType&gt;</ph>对象，其<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group.Success%2A&gt;</ph>属性是<ph id="ph3">`false`</ph>并且其<ph id="ph4">&lt;xref:System.Text.RegularExpressions.Capture.Value%2A&gt;</ph>属性等于<ph id="ph5">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>For more information, see the "Grouping Constructs and Regular Expression Objects" section in the <bpt id="p1">[</bpt>Grouping Constructs<ept id="p1">](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md)</ept> article.</source>
          <target state="translated">有关详细信息，请参阅中的"分组构造和正则表达式对象"一节<bpt id="p1">[</bpt>分组构造<ept id="p1">](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md)</ept>文章。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>To iterate through the members of the collection, you should use the collection iteration construct provided by your language (such as <ph id="ph1">`foreach`</ph> in C# and <ph id="ph2">`For Each`</ph>…<ph id="ph3">`Next`</ph></source>
          <target state="translated">若要循环访问集合的成员，应使用由你的语言提供的集合迭代构造 (如<ph id="ph1">`foreach`</ph>在 C# 和<ph id="ph2">`For Each`</ph>...<ph id="ph3">`Next`</ph></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>in Visual Basic) instead of retrieving the enumerator that is returned by the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">在 Visual Basic 中) 而不是检索的枚举器返回<ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>In addition, you can access individual numbered captured groups from the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29&gt;</ph> property (the indexer in C#), and you can access individual named captured groups from the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29&gt;</ph> property.</source>
          <target state="translated">此外，你可以访问各个已编号的捕获的组从<ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29&gt;</ph>属性 （索引器在 C# 中），并且可以访问各个已命名的捕获的组从<ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Note that you can retrieve an array that contains the numbers and names of all capturing groups by calling the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.GetGroupNames%2A?displayProperty=nameWithType&gt;</ph> methods, respectively.</source>
          <target state="translated">请注意，你可以检索通过调用包含数字和所有捕获的组名称的数组<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.GetGroupNames%2A?displayProperty=nameWithType&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Both are instance methods and require that you instantiate a <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph> object that represents the regular expression to be matched.</source>
          <target state="translated">两个实例方法，并需要您实例化<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph>表示要匹配的正则表达式的对象。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>The following example uses a regular expression with capturing groups to extract information about trademarks and registered trademarks used in text.</source>
          <target state="translated">下面的示例使用正则表达式捕获组来提取有关商标和注册的商标文本中使用信息。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>The regular expression pattern is <ph id="ph1">`\b(\w+?)([\u00AE\u2122])`</ph>, which is interpreted as shown in the following table.</source>
          <target state="translated">正则表达式模式<ph id="ph1">`\b(\w+?)([\u00AE\u2122])`</ph>，这可以解释为下表中所示。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Pattern</source>
          <target state="translated">模式</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Look for a word boundary.</source>
          <target state="translated">查找在单词边界。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Look for one or more word characters.</source>
          <target state="translated">查找一个或多个单词字符。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Together, these form the trademarked name.</source>
          <target state="translated">在一起，这些对象会形成商标字的名称。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>(Note that this regular expression assumes that a trademark consists of a single word.) This is the first capturing group.</source>
          <target state="translated">（请注意，此正则表达式假定商标包含单个单词。）这是第一个捕获组。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Look for either the ® or the ™ character.</source>
          <target state="translated">查找这两® 或™ 字符。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>This is the second capturing group.</source>
          <target state="translated">这是第二个捕获组。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>For each match, the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> contains three <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> objects.</source>
          <target state="translated">对于每个匹配项，<ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph>包含三种<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>The first object contains the string that matches the entire regular expression.</source>
          <target state="translated">第一个对象包含与整个正则表达式匹配的字符串。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>The second object, which represents the first captured group, contains the product name.</source>
          <target state="translated">第二个对象，它表示第一个捕获的组，包含产品名称。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>The third object, which represents the second captured group, contains the trademark or registered trademark symbol.</source>
          <target state="translated">第三个对象，它表示第二个捕获的组，包含商标或注册商标符号。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>The array the collection is to be copied into.</source>
          <target state="translated">要将集合复制到其中的数组。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>The position in the destination array where the copying is to begin.</source>
          <target state="translated">目标数组中开始复制的位置。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>Copies all the elements of the collection to the given array beginning at the given index.</source>
          <target state="translated">将集合的所有元素复制到给定数组中（从给定索引处开始）。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>Because the entire collection is copied into the array starting at the given index, the destination array must be at least as large as the collection.</source>
          <target state="translated">整个集合复制到数组中从给定索引处开始，因为目标数组都必须具有至少与集合一样大。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>This member is not present in the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.</source>
          <target state="translated">此成员中不存在<ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>If you are developing applications that target the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, use the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">如果你正在开发应用程序面向<ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>，使用<ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=nameWithType&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>The following example extracts each word from a sentence and captures it in a capturing group, The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.CopyTo%2A&gt;</ph> method is then used to copy the elements in each match's <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> object to an array that contains the capturing groups from all matches.</source>
          <target state="translated">下面的示例从一个句子中提取每个单词，并在捕获组中，捕获该<ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.CopyTo%2A&gt;</ph>方法然后用于每个匹配项中的元素复制<ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph>从所有匹配项进行分组到一个数组，包含捕获的对象。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>The individual captured words are then displayed to the console.</source>
          <target state="translated">捕获的各个单词将显示到控制台。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>The regular expression is defined as follows:</source>
          <target state="translated">正则表达式定义，如下所示：</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>Pattern</source>
          <target state="translated">模式</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>Match a word boundary.</source>
          <target state="translated">与字边界匹配。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>Match one or more non-white space characters.</source>
          <target state="translated">匹配一个或多个非空白字符。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>Assign them to the first capturing group.</source>
          <target state="translated">将它们分配给第一个捕获组。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>Match a word boundary.</source>
          <target state="translated">与字边界匹配。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is outside the bounds of <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> 在 <ph id="ph2">&lt;paramref name="array" /&gt;</ph> 的界限外。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> plus <ph id="ph2">&lt;see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /&gt;</ph> is outside the bounds of <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> 以及 <ph id="ph2">&lt;see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /&gt;</ph> 在 <ph id="ph3">&lt;paramref name="array" /&gt;</ph> 的界限外。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.GroupCollection.Count">
          <source>Returns the number of groups in the collection.</source>
          <target state="translated">返回集合中的组数。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Count">
          <source>The number of groups in the collection.</source>
          <target state="translated">集合中的组数。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Count">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> object always has at least one member.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph>对象始终包含至少一个成员。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Count">
          <source>If a match is unsuccessful, the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> object that contains a single member.</source>
          <target state="translated">如果成功，则匹配<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType&gt;</ph>属性返回<ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph>包含单个成员的对象。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
          <source>Provides an enumerator that iterates through the collection.</source>
          <target state="translated">提供一个循环访问集合的枚举器。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
          <source>An enumerator that contains all <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.Group" /&gt;</ph> objects in the <ph id="ph2">&lt;see cref="T:System.Text.RegularExpressions.GroupCollection" /&gt;</ph>.</source>
          <target state="translated">一个枚举器，其中包含 <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.Group" /&gt;</ph> 中的所有 <ph id="ph2">&lt;see cref="T:System.Text.RegularExpressions.GroupCollection" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
          <source>Instead of calling the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A&gt;</ph> method to retrieve an enumerator that lets you iterate through the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> objects in the collection, you should use the group iteration construct (such as <ph id="ph3">`foreach`</ph> in C# and <ph id="ph4">`For Each`</ph>…<ph id="ph5">`Next`</ph></source>
          <target state="translated">而不是调用<ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A&gt;</ph>方法来检索的枚举数可以循环访问<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph>对象在集合中，应使用的组迭代构造 (如<ph id="ph3">`foreach`</ph>在 C# 和<ph id="ph4">`For Each`</ph>...<ph id="ph5">`Next`</ph></target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
          <source>in Visual Basic) that is provided by your programming language.</source>
          <target state="translated">在 Visual Basic 中) 是由您的编程语言提供。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.GroupCollection.IsReadOnly">
          <source>Gets a value that indicates whether the collection is read-only.</source>
          <target state="translated">获取一个值，指示集合是否为只读集合。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> in all cases.</source>
          <target state="translated">在所有情况下均为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
          <source>Gets a value that indicates whether access to the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.GroupCollection" /&gt;</ph> is synchronized (thread-safe).</source>
          <target state="translated">获取一个值，该值指示是否同步对 <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.GroupCollection" /&gt;</ph> 的访问（线程安全）。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> in all cases.</source>
          <target state="translated">在所有情况下均为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
          <source>This member is not present in the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.</source>
          <target state="translated">此成员中不存在<ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
          <source>If you are developing applications that target the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, use the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=nameWithType&gt;</ph> property instead.</source>
          <target state="translated">如果你正在开发应用程序面向<ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>，使用<ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=nameWithType&gt;</ph>属性改为。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Enables access to a single member of the collection by integer or string index.</source>
          <target state="translated">允许通过整数索引或字符串索引访问集合的单个成员。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>The zero-based index of the collection member to be retrieved.</source>
          <target state="translated">要检索的集合成员的索引（从零开始）。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>Enables access to a member of the collection by integer index.</source>
          <target state="translated">允许通过整数索引访问集合成员。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>The member of the collection specified by <ph id="ph1">&lt;paramref name="groupnum" /&gt;</ph>.</source>
          <target state="translated">由 <ph id="ph1">&lt;paramref name="groupnum" /&gt;</ph> 指定的集合的成员。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29&gt;</ph> property is the index (in C#) or the default property (in Visual Basic) of the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29&gt;</ph>属性为 （在 C# 中) 的索引或的默认属性 （在 Visual Basic 中)<ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>It allows you to enumerate the members of the collection by using a <ph id="ph1">`foreach`</ph> statement in C# or a <ph id="ph2">`For Each`</ph> statement in Visual Basic.</source>
          <target state="translated">它允许你通过使用枚举集合的成员<ph id="ph1">`foreach`</ph>C# 中的语句或<ph id="ph2">`For Each`</ph>在 Visual Basic 中的语句。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>You can also use this property to retrieve individual captured groups by their index number.</source>
          <target state="translated">此属性还可用于按其索引号检索单个捕获的组。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>You can retrieve an array that contains the numbers of all capturing groups in a regular expression by calling the instance <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">你可以检索通过调用该实例包含正则表达式中的所有捕获组的数字的数组<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>You can also map named capturing groups to their numbers by calling the instance <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.GroupNumberFromName%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">你还可以将命名的捕获组通过调用实例映射到其数字<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.GroupNumberFromName%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>You can determine the number of items in the collection by retrieving the value of the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Count%2A&gt;</ph> property.</source>
          <target state="translated">你可以通过检索的值确定集合中的项的数目<ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Count%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>Valid values for the <ph id="ph1">`groupnum`</ph> parameter range from 0 to one less than the number of items in the collection.</source>
          <target state="translated">有效值为<ph id="ph1">`groupnum`</ph>参数范围从 0 到减 1 所得的集合中的项数。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType&gt;</ph> property always has at least one member.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph>返回对象<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType&gt;</ph>属性始终具有至少一个成员。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>If the regular expression engine cannot find any matches in a particular input string, the single <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object in the collection has its <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType&gt;</ph> property set to <ph id="ph3">`false`</ph> and its <ph id="ph4">`Group.Value`</ph> property set to <ph id="ph5">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果正则表达式引擎找不到任何匹配项，在特定的输入字符串中单个<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph>集合中的对象具有其<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType&gt;</ph>属性设置为<ph id="ph3">`false`</ph>及其<ph id="ph4">`Group.Value`</ph>属性设置为<ph id="ph5">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>If <ph id="ph1">`groupnum`</ph> is not the index of a member of the collection, or if <ph id="ph2">`groupnum`</ph> is the index of a capturing group that has not been matched in the input string, the method returns a <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object whose <ph id="ph4">&lt;xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph5">`false`</ph> and whose <ph id="ph6">`Group.Value`</ph> property is <ph id="ph7">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">`groupnum`</ph>不是索引的一个成员的集合，或者如果<ph id="ph2">`groupnum`</ph>是具有不在中找到匹配输入字符串，该方法返回的捕获组的索引<ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph>对象，其<ph id="ph4">&lt;xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType&gt;</ph>属性是<ph id="ph5">`false`</ph>并且其<ph id="ph6">`Group.Value`</ph>属性是<ph id="ph7">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>The following example defines a regular expression that consists of two numbered groups.</source>
          <target state="translated">下面的示例定义所组成的两个带编号的组的正则表达式。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>The first group captures one or more consecutive digits.</source>
          <target state="translated">第一个组捕获一个或多个连续的数字。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>The second group matches a single character.</source>
          <target state="translated">第二个组匹配单个字符。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>Because the regular expression engine looks for zero or one occurrence of the first group, it does not always find a match even if the regular expression match is successful.</source>
          <target state="translated">因为正则表达式引擎查找第一个组的零个或一个匹配项时，它不会不始终发现匹配项即使正则表达式匹配成功。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>The example then illustrates the result when the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29&gt;</ph> property is used to retrieve an unmatched group, a matched group, and a group that is not defined in the regular expression.</source>
          <target state="translated">该示例然后阐释结果时<ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29&gt;</ph>属性用于检索不匹配的组、 匹配的组和正则表达式中未定义的组。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>The example defines a regular expression pattern <ph id="ph1">`(\d+)*(\w)\2`</ph>, which is interpreted as shown in the following table.</source>
          <target state="translated">该示例定义正则表达式模式<ph id="ph1">`(\d+)*(\w)\2`</ph>，这可以解释为下表中所示。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>Pattern</source>
          <target state="translated">模式</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>Match one or more occurrence of a decimal digit.</source>
          <target state="translated">匹配一个或多个匹配项的一个十进制数字。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>This is the first capturing group.</source>
          <target state="translated">这是第一个捕获组。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>Match this pattern either zero or one time.</source>
          <target state="translated">与此模式匹配零个或一个时间。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>This is the second capturing group.</source>
          <target state="translated">这是第二个捕获组。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>Match the string captured by the second capturing group.</source>
          <target state="translated">与第二个捕获组捕获的字符串匹配。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>The name of a capturing group.</source>
          <target state="translated">捕获组的名称。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Enables access to a member of the collection by string index.</source>
          <target state="translated">允许通过字符串索引访问集合成员。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>The member of the collection specified by <ph id="ph1">&lt;paramref name="groupname" /&gt;</ph>.</source>
          <target state="translated">由 <ph id="ph1">&lt;paramref name="groupname" /&gt;</ph> 指定的集合的成员。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source><ph id="ph1">`groupName`</ph> can be either the name of a capturing group that is defined by the <ph id="ph2">`(?&lt;`</ph><bpt id="p1">*</bpt>name<ept id="p1">*</ept><ph id="ph3">`&gt;)`</ph> element in a regular expression, or the string representation of the number of a capturing group that is defined by a grouping construct.</source>
          <target state="translated"><ph id="ph1">`groupName`</ph> 可以通过定义的捕获组名<ph id="ph2">`(?&lt;`</ph><bpt id="p1">*</bpt>名称<ept id="p1">*</ept><ph id="ph3">`&gt;)`</ph>正则表达式或由一组定义的捕获组数的字符串表示形式中的元素构造。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>For more information about groups in regular expressions, see <bpt id="p1">[</bpt>Grouping Constructs<ept id="p1">](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md)</ept>.</source>
          <target state="translated">有关正则表达式中的组的详细信息，请参阅<bpt id="p1">[</bpt>分组构造<ept id="p1">](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md)</ept>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>You can retrieve the names of all the captured groups in a <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph> object by calling the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.GetGroupNames%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">你可以检索中的所有捕获组的名称<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph>对象通过调用<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.GetGroupNames%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>You can also map the numbers of capturing groups in a regular expression to their names by calling the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">您还可以映射通过调用捕获其名称的正则表达式中的组数字<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Individual names from the array can then be passed to the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29&gt;</ph> property to retrieve the captured string.</source>
          <target state="translated">然后，从数组的各个名称可以传递给<ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29&gt;</ph>属性来检索捕获的字符串。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>If <ph id="ph1">`groupname`</ph> is not the name of a capturing group in the collection, or if <ph id="ph2">`groupname`</ph> is the name of a capturing group that has not been matched in the input string, the method returns a <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object whose <ph id="ph4">&lt;xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph5">`false`</ph> and whose <ph id="ph6">`Group.Value`</ph> property is <ph id="ph7">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">`groupname`</ph>不是在集合中，捕获组的名称或如果<ph id="ph2">`groupname`</ph>是具有不在中找到匹配输入字符串，该方法返回的捕获组的名称<ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph>对象，其<ph id="ph4">&lt;xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType&gt;</ph>属性是<ph id="ph5">`false`</ph>并且其<ph id="ph6">`Group.Value`</ph>属性是<ph id="ph7">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>The following example defines a regular expression that consists of two named groups.</source>
          <target state="translated">下面的示例定义所组成的两个已命名的组的正则表达式。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>The first group, <ph id="ph1">`numbers`</ph>, captures one or more consecutive digits.</source>
          <target state="translated">第一个组， <ph id="ph1">`numbers`</ph>，捕获一个或多个连续的数字。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>The second group, <ph id="ph1">`letter`</ph>, matches a single character.</source>
          <target state="translated">第二个组中， <ph id="ph1">`letter`</ph>，单个字符匹配。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Because the regular expression engine looks for zero or one occurrence of the pattern defined by the <ph id="ph1">`numbers`</ph> group, the <ph id="ph2">`numbers`</ph> group is not always present even if a match is successful.</source>
          <target state="translated">因为正则表达式引擎将查找的零个或一个匹配项的定义的模式<ph id="ph1">`numbers`</ph>组，<ph id="ph2">`numbers`</ph>组并不总是存在即使匹配是否成功。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>The example then illustrates the result when the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29&gt;</ph> property is used to retrieve an unmatched group, a matched group, and a group that is not defined in the regular expression.</source>
          <target state="translated">该示例然后阐释结果时<ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29&gt;</ph>属性用于检索不匹配的组、 匹配的组和正则表达式中未定义的组。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>The example defines a regular expression pattern <ph id="ph1">`(?&lt;numbers&gt;\d+)*(?&lt;letter&gt;\w)\k&lt;letter&gt;`</ph>, which is interpreted as shown in the following table.</source>
          <target state="translated">该示例定义正则表达式模式<ph id="ph1">`(?&lt;numbers&gt;\d+)*(?&lt;letter&gt;\w)\k&lt;letter&gt;`</ph>，这可以解释为下表中所示。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Pattern</source>
          <target state="translated">模式</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Match one or more occurrence of a decimal digit.</source>
          <target state="translated">匹配一个或多个匹配项的一个十进制数字。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Name this the <ph id="ph1">`numbers`</ph> capturing group.</source>
          <target state="translated">命名此<ph id="ph1">`numbers`</ph>捕获组。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Match this pattern either zero or one time.</source>
          <target state="translated">与此模式匹配零个或一个时间。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Match a single word character.</source>
          <target state="translated">匹配单个单词字符。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Name this the <ph id="ph1">`letter`</ph> capturing group.</source>
          <target state="translated">命名此<ph id="ph1">`letter`</ph>捕获组。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Match the string captured by the <ph id="ph1">`letter`</ph> capturing group.</source>
          <target state="translated">匹配由捕获的字符串<ph id="ph1">`letter`</ph>捕获组。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.GroupCollection" /&gt;</ph>.</source>
          <target state="translated">获取可用于同步对 <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.GroupCollection" /&gt;</ph> 的访问的对象。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
          <source>A copy of the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.Match" /&gt;</ph> object to synchronize.</source>
          <target state="translated">要同步的 <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.Match" /&gt;</ph> 对象的副本。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
          <source>This member is not present in the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.</source>
          <target state="translated">此成员中不存在<ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
          <source>If you are developing applications that target the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, use the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=nameWithType&gt;</ph> property instead.</source>
          <target state="translated">如果你正在开发应用程序面向<ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>，使用<ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=nameWithType&gt;</ph>属性改为。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>