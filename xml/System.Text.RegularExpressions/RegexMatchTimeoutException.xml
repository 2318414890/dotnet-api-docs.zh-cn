<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RegexMatchTimeoutException.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58487b3300cbd8c8bb36ab11ea6e97138765bae9c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8487b3300cbd8c8bb36ab11ea6e97138765bae9c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>The exception that is thrown when the execution time of a regular expression pattern-matching method exceeds its time-out interval.</source>
          <target state="translated">正则表达式模式匹配方法的执行时间超出其超时时间间隔时引发的异常。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>The presence of a <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> exception generally indicates one of the following conditions:</source>
          <target state="translated">是否存在<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>异常通常指示下列条件之一：</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>The regular expression engine is backtracking excessively as it attempts to match the input text to the regular expression pattern.</source>
          <target state="translated">因为它尝试匹配输入的文本与正则表达式模式，过度回溯正则表达式引擎。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>The time-out interval has been set too low, especially given high machine load.</source>
          <target state="translated">超时间隔已设置得过低，尤其是考虑高机负载。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>The way in which an exception handler handles an exception depends on the cause of the exception:</source>
          <target state="translated">在其中的异常处理程序处理异常的方式取决于导致异常：</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>If the time-out results from excessive backtracking, your exception handler should abandon the attempt to match the input and inform the user that a time-out has occurred in the regular expression pattern-matching method.</source>
          <target state="translated">如果超时导致的过多使用回溯，则异常处理程序应放弃尝试匹配输入，并通知用户在正则表达式模式匹配方法中发生超时。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>If possible, information about the regular expression pattern, which is available from the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern%2A&gt;</ph> property, and the input that caused excessive backtracking, which is available from the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Input%2A&gt;</ph> property, should be logged so that the issue can be investigated and the regular expression pattern modified.</source>
          <target state="translated">如果可能的正则表达式模式，即从可用信息<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern%2A&gt;</ph>属性，并导致过多使用回溯，即从可用的输入<ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Input%2A&gt;</ph>，以便可以是此问题，则应记录属性，调查和修改正则表达式模式。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>Time-outs due to excessive backtracking are always reproducible.</source>
          <target state="translated">由于过多使用回溯的超时值始终是可重现的。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>If the time-out results from setting the time-out threshold too low, you can increase the time-out interval and retry the matching operation.</source>
          <target state="translated">如果超时结果从将超时阈值设置得太低，你可以增大超时间隔，然后重试匹配操作。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>The current time-out interval is available from the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A&gt;</ph> property.</source>
          <target state="translated">当前的超时间隔是可从<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>When a <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> exception is thrown, the regular expression engine maintains its state so that any future invocations return the same result, as if the exception did not occur.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>引发异常的正则表达式引擎会保留其状态，以便任何将来的调用返回相同的结果，就像没有发生异常。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>The recommended pattern is to wait for a brief, random time interval after the exception is thrown before calling the matching method again.</source>
          <target state="translated">建议的模式是等待简要的随机时间间隔后再次调用匹配方法之前引发异常。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>This can be repeated several times.</source>
          <target state="translated">这可以重复多次。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>However, the number of repetitions should be small in case the time-out is caused by excessive backtracking.</source>
          <target state="translated">但是，如果超时导致的过多使用回溯，重复次数应很小。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>The example in the next section illustrates both techniques for handling a <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>.</source>
          <target state="translated">下一节中的示例阐释用来处理这两种技术<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>The following example illustrates two possible approaches to handling the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> exception.</source>
          <target state="translated">下面的示例演示两种可能的方法，来处理<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>异常。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>A constant whose value is two seconds defines the maximum time-out interval.</source>
          <target state="translated">其值为两秒的常数定义的最大超时间隔。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType&gt;</ph> method is initially called with a time-out interval of one second.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType&gt;</ph>方法已最初调用的超时间隔为 1 秒。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>Each <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> exception causes the time-out interval to be increased by one second and results in another call to the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.IsMatch%2A?displayProperty=nameWithType&gt;</ph> method if the current time-out interval is less than the maximum time-out interval.</source>
          <target state="translated">每个<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>异常会导致超时间隔，以增加一个第二个和另一个调用将导致<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.IsMatch%2A?displayProperty=nameWithType&gt;</ph>方法如果当前的超时间隔小于最大超时间隔。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>However, if the current time-out interval exceeds the maximum time-out interval, the exception handler writes information to the event log and abandons the processing of the regular expression.</source>
          <target state="translated">但是，如果当前的超时间隔超过最大超时间隔，异常处理程序将信息写入事件日志，并放弃的正则表达式处理。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> class with a system-supplied message.</source>
          <target state="translated">使用由系统提供的消息初始化 <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor">
          <source>This is the default constructor of the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> class.</source>
          <target state="translated">这是默认构造函数的<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error.</source>
          <target state="translated">此构造函数将新实例的 <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> 属性初始化为系统提供的错误描述消息。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor">
          <source>This message is localized for the current system culture.</source>
          <target state="translated">此消息针对当前系统区域性进行了本地化。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String)">
          <source>A string that describes the exception.</source>
          <target state="translated">描述异常的字符串。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> class with the specified message string.</source>
          <target state="translated">使用指定的消息字符串初始化 <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String)">
          <source>The <ph id="ph1">`message`</ph> string is assigned to the <ph id="ph2">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">`message`</ph>字符串分配给<ph id="ph2">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String)">
          <source>The string should be localized for the current culture.</source>
          <target state="translated">应为当前区域性本地化的字符串。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that contains the serialized data.</source>
          <target state="translated">包含序列化数据的对象。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The stream that contains the serialized data.</source>
          <target state="translated">包含序列化数据的流。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">用序列化数据初始化 <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is not called directly by your code to instantiate the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> object.</source>
          <target state="translated">此构造函数不直接由你的代码以实例化调用<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Instead, it is called by the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IFormatter.Deserialize%2A?displayProperty=nameWithType&gt;</ph> method when deserializing the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> object from a stream.</source>
          <target state="translated">相反，它由<ph id="ph1">&lt;xref:System.Runtime.Serialization.IFormatter.Deserialize%2A?displayProperty=nameWithType&gt;</ph>方法反序列化时<ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>从流对象。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
          <source>A string that describes the exception.</source>
          <target state="translated">描述异常的字符串。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">导致当前异常的异常。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
          <source>Typically, you use this overload to handle an exception in a <ph id="ph1">`try/catch`</ph> block.</source>
          <target state="translated">通常情况下，使用此重载来处理的异常<ph id="ph1">`try/catch`</ph>块。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">`innerException`</ph> parameter should be a reference to the exception object handled in the <ph id="ph2">`catch`</ph> block, or it can be <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`innerException`</ph>参数应为对在中处理的异常对象的引用<ph id="ph2">`catch`</ph>块，也可以是<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
          <source>This value is then assigned to the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> object's <ph id="ph2">&lt;xref:System.Exception.InnerException%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">然后将此值分配给<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>对象的<ph id="ph2">&lt;xref:System.Exception.InnerException%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">`message`</ph> string is assigned to the <ph id="ph2">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">`message`</ph>字符串分配给<ph id="ph2">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
          <source>The string should be localized for the current culture.</source>
          <target state="translated">应为当前区域性本地化的字符串。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)">
          <source>The input text processed by the regular expression engine when the time-out occurred.</source>
          <target state="translated">发生超时时由正则表达式引擎处理的输入文本。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)">
          <source>The pattern used by the regular expression engine when the time-out occurred.</source>
          <target state="translated">发生超时时由正则表达式引擎使用的模式。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)">
          <source>The time-out interval.</source>
          <target state="translated">超时间隔。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> class with information about the regular expression pattern, the input text, and the time-out interval.</source>
          <target state="translated">使用有关正则表达式模式、输入文本和超时间隔的信息初始化 <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)">
          <source>The <ph id="ph1">`regexInput`</ph>, <ph id="ph2">`regexPattern`</ph>, and <ph id="ph3">`matchTimeout`</ph> values are assigned to the <ph id="ph4">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Input%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A&gt;</ph> properties of the new <ph id="ph7">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`regexInput`</ph>， <ph id="ph2">`regexPattern`</ph>，和<ph id="ph3">`matchTimeout`</ph>值将赋给<ph id="ph4">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Input%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern%2A&gt;</ph>，和<ph id="ph6">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A&gt;</ph>的新属性<ph id="ph7">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input">
          <source>Gets the input text that the regular expression engine was processing when the time-out occurred.</source>
          <target state="translated">获取超时发生时正则表达式引擎正在处理的输入文本。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input">
          <source>The regular expression input text.</source>
          <target state="translated">正则表达式输入文本。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input">
          <source>This property reflects the value of the <ph id="ph1">`regexInput`</ph> parameter of the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.%23ctor%28System.String%2CSystem.String%2CSystem.TimeSpan%29&gt;</ph> constructor.</source>
          <target state="translated">此属性将反映出值的<ph id="ph1">`regexInput`</ph>参数<ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.%23ctor%28System.String%2CSystem.String%2CSystem.TimeSpan%29&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input">
          <source>If this parameter is not explicitly initialized in a constructor call, its value is <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果此参数不显式初始化构造函数调用中，其值是<ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input">
          <source>When the exception is thrown by the regular expression engine, the value of the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Input%2A&gt;</ph> property reflects the entire input string passed to the regular expression engine.</source>
          <target state="translated">默认情况下，异常由正则表达式引擎的值<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Input%2A&gt;</ph>属性反映的整个输入的字符串传递给正则表达式引擎。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input">
          <source>It does not reflect a partial string, such as the substring that the engine searches in the call to a method such as <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">它不反映部分的字符串，如在引擎中的方法调用如搜索的子字符串<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout">
          <source>Gets the time-out interval for a regular expression match.</source>
          <target state="translated">获取正则表达式匹配的超时间隔。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout">
          <source>The time-out interval.</source>
          <target state="translated">超时间隔。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout">
          <source>This property reflects the value of the <ph id="ph1">`matchTimeout`</ph> parameter of the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.%23ctor%28System.String%2CSystem.String%2CSystem.TimeSpan%29&gt;</ph> constructor.</source>
          <target state="translated">此属性将反映出值的<ph id="ph1">`matchTimeout`</ph>参数<ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.%23ctor%28System.String%2CSystem.String%2CSystem.TimeSpan%29&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout">
          <source>If the parameter is not properly initialized in a constructor call, its value is <ph id="ph1">`Timespan.FromTicks(-1)`</ph>.</source>
          <target state="translated">如果一个构造函数调用中未正确初始化参数，其值是<ph id="ph1">`Timespan.FromTicks(-1)`</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout">
          <source>The value of this property reflects the time-out interval set in the call to the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph> constructor or static method.</source>
          <target state="translated">此属性的值反映在调用中设置的超时间隔<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph>构造函数或静态方法。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout">
          <source>It does not reflect the exact interval that has elapsed from the beginning of the method call to the time the exception is thrown.</source>
          <target state="translated">它不反映从开始处，将引发异常的方法调用的时间已过的确切时间间隔。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern">
          <source>Gets the regular expression pattern that was used in the matching operation when the time-out occurred.</source>
          <target state="translated">获取超时发生时用于匹配操作的正则表达式模式。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern">
          <source>The regular expression pattern.</source>
          <target state="translated">正则表达式模式。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern">
          <source>This property reflects the value of the <ph id="ph1">`regexPattern`</ph> parameter of the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.%23ctor%28System.String%2CSystem.String%2CSystem.TimeSpan%29&gt;</ph> constructor.</source>
          <target state="translated">此属性将反映出值的<ph id="ph1">`regexPattern`</ph>参数<ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.%23ctor%28System.String%2CSystem.String%2CSystem.TimeSpan%29&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern">
          <source>If the parameter is not properly initialized in a constructor call, its value is <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果一个构造函数调用中未正确初始化参数，其值是<ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object to populate with data.</source>
          <target state="translated">要填充数据的对象。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The destination for this serialization.</source>
          <target state="translated">此序列化的目标。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object with the data needed to serialize a <ph id="ph2">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> object.</source>
          <target state="translated">使用序列化 <ph id="ph2">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> 对象所需的数据填充 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface object.</source>
          <target state="translated">可以使用它时，才<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>实例被强制转换为<ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>界面对象。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Any objects that are included in the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> object are automatically tracked and serialized by the formatter.</source>
          <target state="translated">中包含的任何对象<ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>对象会自动跟踪和序列化格式化程序。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>