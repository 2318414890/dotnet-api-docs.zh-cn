<Type Name="Regex" FullName="System.Text.RegularExpressions.Regex">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bb2051ea3f84d7f65cf8d414a93bce613dcad0ff" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36608488" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Regex : System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Regex extends System.Object implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.Regex" />
  <TypeSignature Language="VB.NET" Value="Public Class Regex&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Regex : System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Regex = class&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="98b34-101">表示不可变的正则表达式。</span>
      <span class="sxs-lookup">
        <span data-stu-id="98b34-101">Represents an immutable regular expression.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-102"><xref:System.Text.RegularExpressions.Regex>类表示.NET Framework 的正则表达式引擎。</span><span class="sxs-lookup"><span data-stu-id="98b34-102">The <xref:System.Text.RegularExpressions.Regex> class represents the .NET Framework's regular expression engine.</span></span> <span data-ttu-id="98b34-103">可以使用它可以快速分析大量文本以找到特定的字符模式;若要提取、 编辑、 替换或删除文本子字符串;并将提取的字符串添加到集合，以便生成报告。</span><span class="sxs-lookup"><span data-stu-id="98b34-103">It can be used to quickly parse large amounts of text to find specific character patterns; to extract, edit, replace, or delete text substrings; and to add the extracted strings to a collection to generate a report.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="98b34-104">如果您的主要兴趣是通过确定是否符合特定模式验证一个字符串，则可以使用<xref:System.Configuration.RegexStringValidator?displayProperty=nameWithType>类。</span><span class="sxs-lookup"><span data-stu-id="98b34-104">If your primary interest is to validate a string by determining whether it conforms to a particular pattern, you can use the <xref:System.Configuration.RegexStringValidator?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="98b34-105">若要使用正则表达式，你定义你想要通过使用中所述的语法来标识在文本流中的模式[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-105">To use regular expressions, you define the pattern that you want to identify in a text stream by using the syntax documented in [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span> <span data-ttu-id="98b34-106">接下来，你可以根据需要实例化<xref:System.Text.RegularExpressions.Regex>对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-106">Next, you can optionally instantiate a <xref:System.Text.RegularExpressions.Regex> object.</span></span> <span data-ttu-id="98b34-107">最后，你调用执行某项操作，如替换与正则表达式模式匹配的文本或标识模式匹配的方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-107">Finally, you call a method that performs some operation, such as replacing text that matches the regular expression pattern, or identifying a pattern match.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="98b34-108">一些常见的正则表达式模式，请参阅[正则表达式示例](~/docs/standard/base-types/regular-expression-examples.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-108">For some common regular expression patterns, see [Regular Expression Examples](~/docs/standard/base-types/regular-expression-examples.md).</span></span> <span data-ttu-id="98b34-109">也有大量的正则表达式模式，如在一个联机库[常规 Expressions.info](https://www.regular-expressions.info/examples.html)。</span><span class="sxs-lookup"><span data-stu-id="98b34-109">There are also a number of online libraries of regular expression patterns, such as the one at [Regular-Expressions.info](https://www.regular-expressions.info/examples.html).</span></span>  
  
<a name="remarks"></a> <span data-ttu-id="98b34-110">有关使用<xref:System.Text.RegularExpressions.Regex>类，请参阅本主题中的下列部分：</span><span class="sxs-lookup"><span data-stu-id="98b34-110">For more information about using the <xref:System.Text.RegularExpressions.Regex> class, see the following sections in this topic:</span></span>  
  
-   [<span data-ttu-id="98b34-111">正则表达式 vs。字符串方法</span><span class="sxs-lookup"><span data-stu-id="98b34-111">Regex vs. String Methods</span></span>](#regex_vs_string)  
  
-   [<span data-ttu-id="98b34-112">静态 vs。实例方法</span><span class="sxs-lookup"><span data-stu-id="98b34-112">Static vs. Instance Methods</span></span>](#static_vs_instance)  
  
-   [<span data-ttu-id="98b34-113">执行正则表达式操作</span><span class="sxs-lookup"><span data-stu-id="98b34-113">Performing Regular Expression Operations</span></span>](#regex_ops)  
  
-   [<span data-ttu-id="98b34-114">定义超时值</span><span class="sxs-lookup"><span data-stu-id="98b34-114">Defining a Time-Out Value</span></span>](#define_timeout)  
  
 <span data-ttu-id="98b34-115">若要详细了解正则表达式语言，请参阅[正则表达式语言 - 快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)，或下载和打印下面的小册子之一：</span><span class="sxs-lookup"><span data-stu-id="98b34-115">For more information about the regular expression language, see [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md) or download and print one of these brochures:</span></span>  
  
 [<span data-ttu-id="98b34-116">快速参考（Word (.docx) 格式）</span><span class="sxs-lookup"><span data-stu-id="98b34-116">Quick Reference in Word (.docx) format</span></span>](https://download.microsoft.com/download/D/2/4/D240EBF6-A9BA-4E4F-A63F-AEB6DA0B921C/Regular%20expressions%20quick%20reference.docx)  
 [<span data-ttu-id="98b34-117">快速参考（PDF (.pdf) 格式）</span><span class="sxs-lookup"><span data-stu-id="98b34-117">Quick Reference in PDF (.pdf) format</span></span>](https://download.microsoft.com/download/D/2/4/D240EBF6-A9BA-4E4F-A63F-AEB6DA0B921C/Regular%20expressions%20quick%20reference.pdf)  
  
<a name="regex_vs_string"></a>   
## <a name="regex-vs-string-methods"></a><span data-ttu-id="98b34-118">正则表达式 vs。字符串方法</span><span class="sxs-lookup"><span data-stu-id="98b34-118">Regex vs. String Methods</span></span>  
 <span data-ttu-id="98b34-119"><xref:System.String?displayProperty=nameWithType>类包括几个可用于执行使用文本模式匹配的搜索和比较的方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-119">The <xref:System.String?displayProperty=nameWithType> class includes several search and comparison methods that you can use to perform pattern matching with text.</span></span> <span data-ttu-id="98b34-120">例如， <xref:System.String.Contains%2A?displayProperty=nameWithType>， <xref:System.String.EndsWith%2A?displayProperty=nameWithType>，和<xref:System.String.StartsWith%2A?displayProperty=nameWithType>方法确定的字符串实例是否包含指定的子字符串; 与<xref:System.String.IndexOf%2A?displayProperty=nameWithType>， <xref:System.String.IndexOfAny%2A?displayProperty=nameWithType>， <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType>，和<xref:System.String.LastIndexOfAny%2A?displayProperty=nameWithType>方法返回的起始指定的子字符串的字符串中的位置。</span><span class="sxs-lookup"><span data-stu-id="98b34-120">For example, the <xref:System.String.Contains%2A?displayProperty=nameWithType>, <xref:System.String.EndsWith%2A?displayProperty=nameWithType>, and <xref:System.String.StartsWith%2A?displayProperty=nameWithType> methods determine whether a string instance contains a specified substring; and the <xref:System.String.IndexOf%2A?displayProperty=nameWithType>, <xref:System.String.IndexOfAny%2A?displayProperty=nameWithType>, <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType>, and <xref:System.String.LastIndexOfAny%2A?displayProperty=nameWithType> methods return the starting position of a specified substring in a string.</span></span> <span data-ttu-id="98b34-121">使用的方法<xref:System.String?displayProperty=nameWithType>类搜索特定字符串时。</span><span class="sxs-lookup"><span data-stu-id="98b34-121">Use the methods of the <xref:System.String?displayProperty=nameWithType> class when you are searching for a specific string.</span></span> <span data-ttu-id="98b34-122">使用<xref:System.Text.RegularExpressions.Regex>类搜索字符串中的特定模式时。</span><span class="sxs-lookup"><span data-stu-id="98b34-122">Use the <xref:System.Text.RegularExpressions.Regex> class when you are searching for a specific pattern in a string.</span></span> <span data-ttu-id="98b34-123">有关详细信息和示例，请参阅[.NET Framework 正则表达式](~/docs/standard/base-types/regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-123">For more information and examples, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md).</span></span>  
  
 [<span data-ttu-id="98b34-124">返回到备注</span><span class="sxs-lookup"><span data-stu-id="98b34-124">Back to Remarks</span></span>](#remarks)  
  
<a name="static_vs_instance"></a>   
## <a name="static-vs-instance-methods"></a><span data-ttu-id="98b34-125">静态 vs。实例方法</span><span class="sxs-lookup"><span data-stu-id="98b34-125">Static vs. Instance Methods</span></span>  
 <span data-ttu-id="98b34-126">定义正则表达式模式后，可以将其提供给正则表达式引擎为两种方法之一：</span><span class="sxs-lookup"><span data-stu-id="98b34-126">After you define a regular expression pattern, you can provide it to the regular expression engine in either of two ways:</span></span>  
  
-   <span data-ttu-id="98b34-127">通过实例化<xref:System.Text.RegularExpressions.Regex>表示正则表达式的对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-127">By instantiating a <xref:System.Text.RegularExpressions.Regex> object that represents the regular expression.</span></span> <span data-ttu-id="98b34-128">若要执行此操作，你可以传递到正则表达式模式<xref:System.Text.RegularExpressions.Regex.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-128">To do this, you pass the regular expression pattern to a <xref:System.Text.RegularExpressions.Regex.%23ctor%2A> constructor.</span></span> <span data-ttu-id="98b34-129">A<xref:System.Text.RegularExpressions.Regex>对象是不可变; 当实例化<xref:System.Text.RegularExpressions.Regex>对象正则表达式中，对象的正则表达式不能更改。</span><span class="sxs-lookup"><span data-stu-id="98b34-129">A <xref:System.Text.RegularExpressions.Regex> object is immutable; when you instantiate a <xref:System.Text.RegularExpressions.Regex> object with a regular expression, that object's regular expression cannot be changed.</span></span>  
  
-   <span data-ttu-id="98b34-130">通过提供的正则表达式和要搜索的文本`static`(`Shared`在 Visual Basic 中)<xref:System.Text.RegularExpressions.Regex>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-130">By supplying both the regular expression and the text to search to a `static` (`Shared` in Visual Basic) <xref:System.Text.RegularExpressions.Regex> method.</span></span> <span data-ttu-id="98b34-131">这使你可以使用正则表达式而不显式创建<xref:System.Text.RegularExpressions.Regex>对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-131">This enables you to use a regular expression without explicitly creating a <xref:System.Text.RegularExpressions.Regex> object.</span></span>  
  
 <span data-ttu-id="98b34-132">所有<xref:System.Text.RegularExpressions.Regex>模式标识方法均同时包括静态和实例重载。</span><span class="sxs-lookup"><span data-stu-id="98b34-132">All <xref:System.Text.RegularExpressions.Regex> pattern identification methods include both static and instance overloads.</span></span>  
  
 <span data-ttu-id="98b34-133">正则表达式引擎必须编译的特定模式，然后才能使用模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-133">The regular expression engine must compile a particular pattern before the pattern can be used.</span></span> <span data-ttu-id="98b34-134">因为<xref:System.Text.RegularExpressions.Regex>对象不可变，这是一个一次性的过程中发生时<xref:System.Text.RegularExpressions.Regex>调用类构造函数或静态方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-134">Because <xref:System.Text.RegularExpressions.Regex> objects are immutable, this is a one-time procedure that occurs when a <xref:System.Text.RegularExpressions.Regex> class constructor or a static method is called.</span></span> <span data-ttu-id="98b34-135">若要消除重复编译单个正则表达式的需求，正则表达式引擎将缓存静态方法调用中使用的已编译的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="98b34-135">To eliminate the need to repeatedly compile a single regular expression, the regular expression engine caches the compiled regular expressions used in static method calls.</span></span> <span data-ttu-id="98b34-136">因此，正则表达式模式匹配方法提供水平相当的性能，适用于静态和实例方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-136">As a result, regular expression pattern-matching methods offer comparable performance for static and instance methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="98b34-137">在.NET Framework 版本 1.0 和 1.1 中，所有已编译的正则表达式，它们是否已使用实例或静态方法中调用，缓存。</span><span class="sxs-lookup"><span data-stu-id="98b34-137">In the .NET Framework versions 1.0 and 1.1, all compiled regular expressions, whether they were used in instance or static method calls, were cached.</span></span> <span data-ttu-id="98b34-138">从.NET Framework 2.0 开始，只有静态方法调用中使用正则表达式进行缓存。</span><span class="sxs-lookup"><span data-stu-id="98b34-138">Starting with the .NET Framework 2.0, only regular expressions used in static method calls are cached.</span></span>  
  
 <span data-ttu-id="98b34-139">但是，缓存会产生负面影响以下两种情况中的性能：</span><span class="sxs-lookup"><span data-stu-id="98b34-139">However, caching can adversely affect performance in the following two cases:</span></span>  
  
-   <span data-ttu-id="98b34-140">当有大量的正则表达式使用静态方法调用。</span><span class="sxs-lookup"><span data-stu-id="98b34-140">When you use static method calls with a large number of regular expressions.</span></span> <span data-ttu-id="98b34-141">默认情况下，正则表达式引擎将缓存 15 个最近使用的静态正则表达式。</span><span class="sxs-lookup"><span data-stu-id="98b34-141">By default, the regular expression engine caches the 15 most recently used static regular expressions.</span></span> <span data-ttu-id="98b34-142">如果你的应用程序使用 15 个以上的静态正则表达式，则必须重新编译某些正则表达式。</span><span class="sxs-lookup"><span data-stu-id="98b34-142">If your application uses more than 15 static regular expressions, some regular expressions must be recompiled.</span></span> <span data-ttu-id="98b34-143">若要防止此类重新编译，你可以增加<xref:System.Text.RegularExpressions.Regex.CacheSize%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="98b34-143">To prevent this recompilation, you can increase the <xref:System.Text.RegularExpressions.Regex.CacheSize%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="98b34-144">当您实例化新<xref:System.Text.RegularExpressions.Regex>以前编译的正则表达式的对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-144">When you instantiate new <xref:System.Text.RegularExpressions.Regex> objects with regular expressions that have previously been compiled.</span></span> <span data-ttu-id="98b34-145">例如，下面的代码定义在文本流中找到重复的单词的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="98b34-145">For example, the following code defines a regular expression to locate duplicated words in a text stream.</span></span> <span data-ttu-id="98b34-146">虽然本示例使用单个正则表达式，它实例化一个新<xref:System.Text.RegularExpressions.Regex>对象来处理每行文本。</span><span class="sxs-lookup"><span data-stu-id="98b34-146">Although the example uses a single regular expression, it instantiates a new <xref:System.Text.RegularExpressions.Regex> object to process each line of text.</span></span> <span data-ttu-id="98b34-147">这会导致与循环的每个迭代重新编译的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="98b34-147">This results in the recompilation of the regular expression with each iteration of the loop.</span></span>  
  
     [!code-csharp[System.Text.RegularExpressions.Class.Caching#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.class.caching/cs/caching1.cs#1)]
     [!code-vb[System.Text.RegularExpressions.Class.Caching#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.class.caching/vb/caching1.vb#1)]  
  
     <span data-ttu-id="98b34-148">若要防止重新编译，你应实例化单个<xref:System.Text.RegularExpressions.Regex>中重写下面的示例所示，需要的所有代码访问的对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-148">To prevent recompilation, you should instantiate a single <xref:System.Text.RegularExpressions.Regex> object that is accessible to all code that requires it, as shown in the following rewritten example.</span></span>  
  
     [!code-csharp[System.Text.RegularExpressions.Class.Caching#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.class.caching/cs/caching1.cs#2)]
     [!code-vb[System.Text.RegularExpressions.Class.Caching#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.class.caching/vb/caching1.vb#2)]  
  
 [<span data-ttu-id="98b34-149">返回到备注</span><span class="sxs-lookup"><span data-stu-id="98b34-149">Back to Remarks</span></span>](#remarks)  
  
<a name="regex_ops"></a>   
## <a name="performing-regular-expression-operations"></a><span data-ttu-id="98b34-150">执行正则表达式操作</span><span class="sxs-lookup"><span data-stu-id="98b34-150">Performing Regular Expression Operations</span></span>  
 <span data-ttu-id="98b34-151">你是否决定实例化<xref:System.Text.RegularExpressions.Regex>对象并调用其方法或调用静态方法，<xref:System.Text.RegularExpressions.Regex>类提供了以下的模式匹配功能：</span><span class="sxs-lookup"><span data-stu-id="98b34-151">Whether you decide to instantiate a <xref:System.Text.RegularExpressions.Regex> object and call its methods or call static methods, the <xref:System.Text.RegularExpressions.Regex> class offers the following pattern-matching functionality:</span></span>  
  
-   <span data-ttu-id="98b34-152">匹配项的验证。</span><span class="sxs-lookup"><span data-stu-id="98b34-152">Validation of a match.</span></span> <span data-ttu-id="98b34-153">你调用<xref:System.Text.RegularExpressions.Regex.IsMatch%2A>方法来确定是否存在匹配项。</span><span class="sxs-lookup"><span data-stu-id="98b34-153">You call the <xref:System.Text.RegularExpressions.Regex.IsMatch%2A> method to determine whether a match is present.</span></span>  
  
-   <span data-ttu-id="98b34-154">检索集合中的单个匹配项。</span><span class="sxs-lookup"><span data-stu-id="98b34-154">Retrieval of a single match.</span></span> <span data-ttu-id="98b34-155">你调用<xref:System.Text.RegularExpressions.Regex.Match%2A>方法来检索<xref:System.Text.RegularExpressions.Match>表示在一个字符串或字符串的一部分中第一个匹配项的对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-155">You call the <xref:System.Text.RegularExpressions.Regex.Match%2A> method to retrieve a <xref:System.Text.RegularExpressions.Match> object that represents the first match in a string or in part of a string.</span></span> <span data-ttu-id="98b34-156">可通过调用检索后续匹配项<xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-156">Subsequent matches can be retrieved by calling the <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="98b34-157">检索集合中的所有匹配项。</span><span class="sxs-lookup"><span data-stu-id="98b34-157">Retrieval of all matches.</span></span> <span data-ttu-id="98b34-158">你调用<xref:System.Text.RegularExpressions.Regex.Matches%2A>方法来检索<xref:System.Text.RegularExpressions.MatchCollection?displayProperty=nameWithType>表示在一个字符串或字符串的一部分中找到的所有匹配项的对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-158">You call the <xref:System.Text.RegularExpressions.Regex.Matches%2A> method to retrieve a <xref:System.Text.RegularExpressions.MatchCollection?displayProperty=nameWithType> object that represents all the matches found in a string or in part of a string.</span></span>  
  
-   <span data-ttu-id="98b34-159">替换匹配的文本。</span><span class="sxs-lookup"><span data-stu-id="98b34-159">Replacement of matched text.</span></span> <span data-ttu-id="98b34-160">你调用<xref:System.Text.RegularExpressions.Regex.Replace%2A>方法用于替换匹配的文本。</span><span class="sxs-lookup"><span data-stu-id="98b34-160">You call the <xref:System.Text.RegularExpressions.Regex.Replace%2A> method to replace matched text.</span></span> <span data-ttu-id="98b34-161">也可由正则表达式定义的替换文本。</span><span class="sxs-lookup"><span data-stu-id="98b34-161">The replacement text can also be defined by a regular expression.</span></span> <span data-ttu-id="98b34-162">此外，某些<xref:System.Text.RegularExpressions.Regex.Replace%2A>方法包括<xref:System.Text.RegularExpressions.MatchEvaluator>参数，它允许你以编程方式定义的替换文本。</span><span class="sxs-lookup"><span data-stu-id="98b34-162">In addition, some of the <xref:System.Text.RegularExpressions.Regex.Replace%2A> methods include a <xref:System.Text.RegularExpressions.MatchEvaluator> parameter that enables you to programmatically define the replacement text.</span></span>  
  
-   <span data-ttu-id="98b34-163">创建从输入字符串的部分构成的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-163">Creation of a string array that is formed from parts of an input string.</span></span> <span data-ttu-id="98b34-164">你调用<xref:System.Text.RegularExpressions.Regex.Split%2A>拆分输入的字符串由正则表达式定义的位置处的方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-164">You call the <xref:System.Text.RegularExpressions.Regex.Split%2A> method to split an input string at positions that are defined by the regular expression.</span></span>  
  
 <span data-ttu-id="98b34-165">其模式匹配方法，除了<xref:System.Text.RegularExpressions.Regex>类包括了一些特殊用途方法：</span><span class="sxs-lookup"><span data-stu-id="98b34-165">In addition to its pattern-matching methods, the <xref:System.Text.RegularExpressions.Regex> class includes several special-purpose methods:</span></span>  
  
-   <span data-ttu-id="98b34-166"><xref:System.Text.RegularExpressions.Regex.Escape%2A>方法可转义可能被解释为正则表达式或输入的字符串中的正则表达式运算符的任何字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-166">The <xref:System.Text.RegularExpressions.Regex.Escape%2A> method escapes any characters that may be interpreted as regular expression operators in a regular expression or input string.</span></span>  
  
-   <span data-ttu-id="98b34-167"><xref:System.Text.RegularExpressions.Regex.Unescape%2A>方法中删除这些转义符。</span><span class="sxs-lookup"><span data-stu-id="98b34-167">The <xref:System.Text.RegularExpressions.Regex.Unescape%2A> method removes these escape characters.</span></span>  
  
-   <span data-ttu-id="98b34-168"><xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>方法创建该程序集包含预定义的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="98b34-168">The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method creates an assembly that contains predefined regular expressions.</span></span> <span data-ttu-id="98b34-169">.NET Framework 包含这些特殊用途中的程序集的示例<xref:System.Web.RegularExpressions?displayProperty=nameWithType>命名空间。</span><span class="sxs-lookup"><span data-stu-id="98b34-169">The .NET Framework contains examples of these special-purpose assemblies in the <xref:System.Web.RegularExpressions?displayProperty=nameWithType> namespace.</span></span>  
  
 [<span data-ttu-id="98b34-170">返回到备注</span><span class="sxs-lookup"><span data-stu-id="98b34-170">Back to Remarks</span></span>](#remarks)  
  
<a name="define_timeout"></a>   
## <a name="defining-a-time-out-value"></a><span data-ttu-id="98b34-171">定义超时值</span><span class="sxs-lookup"><span data-stu-id="98b34-171">Defining a Time-Out Value</span></span>  
 <span data-ttu-id="98b34-172">.NET Framework 支持一种提供大量强大功能和灵活性在模式匹配的齐全正则表达式语言。</span><span class="sxs-lookup"><span data-stu-id="98b34-172">The .NET Framework supports a full-featured regular expression language that provides substantial power and flexibility in pattern matching.</span></span> <span data-ttu-id="98b34-173">但是的功能和灵活性是需要付出代价： 性能不佳的风险。</span><span class="sxs-lookup"><span data-stu-id="98b34-173">However, the power and flexibility come at a cost: the risk of poor performance.</span></span> <span data-ttu-id="98b34-174">执行效果不佳的正则表达式是非常简单，若要创建的。</span><span class="sxs-lookup"><span data-stu-id="98b34-174">Regular expressions that perform poorly are surprisingly easy to create.</span></span> <span data-ttu-id="98b34-175">在某些情况下，可以显示依赖于过度回溯的约束的正则表达式操作停止响应时在处理与正则表达式模式近似匹配的文本。</span><span class="sxs-lookup"><span data-stu-id="98b34-175">In some cases, regular expression operations that rely on excessive backtracking can appear to stop responding when they process text that nearly matches the regular expression pattern.</span></span> <span data-ttu-id="98b34-176">有关.NET Framework 正则表达式引擎的详细信息，请参阅[的正则表达式行为的详细信息](~/docs/standard/base-types/details-of-regular-expression-behavior.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-176">For more information about the .NET Framework regular expression engine, see [Details of Regular Expression Behavior](~/docs/standard/base-types/details-of-regular-expression-behavior.md).</span></span> <span data-ttu-id="98b34-177">有关过多使用回溯的详细信息，请参阅[回溯](~/docs/standard/base-types/backtracking-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-177">For more information about excessive backtracking, see [Backtracking](~/docs/standard/base-types/backtracking-in-regular-expressions.md).</span></span>  
  
 <span data-ttu-id="98b34-178">从开始[!INCLUDE[net_v45](~/includes/net-v45-md.md)]，你可以定义超时间隔的正则表达式匹配项。</span><span class="sxs-lookup"><span data-stu-id="98b34-178">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can define a time-out interval for regular expression matches.</span></span> <span data-ttu-id="98b34-179">如果正则表达式引擎不能识别在此时间间隔内的匹配项，该匹配操作将引发<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-179">If the regular expression engine cannot identify a match within this time interval, the matching operation throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="98b34-180">在大多数情况下，这样可以防止正则表达式引擎尝试匹配与正则表达式模式近似匹配的文本而浪费的处理能力。</span><span class="sxs-lookup"><span data-stu-id="98b34-180">In most cases, this prevents the regular expression engine from wasting processing power by trying to match text that nearly matches the regular expression pattern.</span></span> <span data-ttu-id="98b34-181">它还可能表示，但是，该超时间隔设置得过低，或当前机负载已导致性能的整体性能降低。</span><span class="sxs-lookup"><span data-stu-id="98b34-181">It also could indicate, however, that the timeout interval has been set too low, or that the current machine load has caused an overall degradation in performance.</span></span>  
  
 <span data-ttu-id="98b34-182">如何处理的异常取决于异常的原因。</span><span class="sxs-lookup"><span data-stu-id="98b34-182">How you handle the exception depends on the cause of the exception.</span></span> <span data-ttu-id="98b34-183">如果因为超时间隔设置得太低，则会发生异常，或者由于过多机负载，您可以增大超时间隔，然后重试匹配操作。</span><span class="sxs-lookup"><span data-stu-id="98b34-183">If the exception occurs because the time-out interval is set too low or because of excessive machine load, you can increase the time-out interval and retry the matching operation.</span></span> <span data-ttu-id="98b34-184">如果因为正则表达式依赖于过度回溯的约束，则会发生异常，你可以假定匹配项不存在，并且 （可选） 你可以记录将帮助你修改正则表达式模式的信息。</span><span class="sxs-lookup"><span data-stu-id="98b34-184">If the exception occurs because the regular expression relies on excessive backtracking, you can assume that a match does not exist, and, optionally, you can log information that will help you modify the regular expression pattern.</span></span>  
  
 <span data-ttu-id="98b34-185">你可以通过调用设置的超时间隔<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>时实例化正则表达式对象的构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-185">You can set a time-out interval by calling the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> constructor when you instantiate a regular expression object.</span></span> <span data-ttu-id="98b34-186">对于静态方法，你可以通过调用具有匹配方法的重载中设置的超时间隔`matchTimeout`参数。</span><span class="sxs-lookup"><span data-stu-id="98b34-186">For static methods, you can set a time-out interval by calling an overload of a matching method that has a `matchTimeout` parameter.</span></span> <span data-ttu-id="98b34-187">如果未显式设置超时值，按如下方式确定的默认超时值：</span><span class="sxs-lookup"><span data-stu-id="98b34-187">If you do not set a time-out value explicitly, the default time-out value  is determined as follows:</span></span>  
  
-   <span data-ttu-id="98b34-188">通过使用应用程序级超时值，如果一个存在。</span><span class="sxs-lookup"><span data-stu-id="98b34-188">By using the application-wide time-out value, if one exists.</span></span> <span data-ttu-id="98b34-189">这可以是适用于的应用程序域中任何超时值<xref:System.Text.RegularExpressions.Regex>实例化对象或调用静态方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-189">This can be any time-out value that applies to the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is instantiated or the static method call is made.</span></span> <span data-ttu-id="98b34-190">你可以通过调用设置整个应用程序范围超时值<xref:System.AppDomain.SetData%2A?displayProperty=nameWithType>方法将指定的字符串表示形式<xref:System.TimeSpan>"REGEX_DEFAULT_MATCH_TIMEOUT"属性值。</span><span class="sxs-lookup"><span data-stu-id="98b34-190">You can set the application-wide time-out value by calling the <xref:System.AppDomain.SetData%2A?displayProperty=nameWithType> method to assign the string representation of a <xref:System.TimeSpan> value to the "REGEX_DEFAULT_MATCH_TIMEOUT" property.</span></span>  
  
-   <span data-ttu-id="98b34-191">通过使用的值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout>，如果未不设置任何应用程序级超时值。</span><span class="sxs-lookup"><span data-stu-id="98b34-191">By using the value <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout>, if no application-wide time-out value has been set.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="98b34-192">我们建议在所有正则表达式模式匹配操作设置超时值。</span><span class="sxs-lookup"><span data-stu-id="98b34-192">We recommend that you set a time-out value in all regular expression pattern-matching operations.</span></span> <span data-ttu-id="98b34-193">有关详细信息，请参阅[正则表达式的最佳实践](~/docs/standard/base-types/best-practices.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-193">For more information, see [Best Practices for Regular Expressions](~/docs/standard/base-types/best-practices.md).</span></span>  
  
 [<span data-ttu-id="98b34-194">返回到备注</span><span class="sxs-lookup"><span data-stu-id="98b34-194">Back to Remarks</span></span>](#remarks)  
  
   
  
## Examples  
 <span data-ttu-id="98b34-195">下面的示例使用正则表达式来检查重复出现的字符串中的单词。</span><span class="sxs-lookup"><span data-stu-id="98b34-195">The following example uses a regular expression to check for repeated occurrences of words in a string.</span></span> <span data-ttu-id="98b34-196">正则表达式`\b(?<word>\w+)\s+(\k<word>)\b`可以解释为下表中所示。</span><span class="sxs-lookup"><span data-stu-id="98b34-196">The regular expression `\b(?<word>\w+)\s+(\k<word>)\b` can be interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="98b34-197">模式</span><span class="sxs-lookup"><span data-stu-id="98b34-197">Pattern</span></span>|<span data-ttu-id="98b34-198">描述</span><span class="sxs-lookup"><span data-stu-id="98b34-198">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="98b34-199">开始在字边界匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-199">Start the match at a word boundary.</span></span>|  
|`(?<word>\w+)`|<span data-ttu-id="98b34-200">匹配一个或多个单词字符，最多在单词边界。</span><span class="sxs-lookup"><span data-stu-id="98b34-200">Match one or more word characters up to a word boundary.</span></span> <span data-ttu-id="98b34-201">命名此捕获的组`word`。</span><span class="sxs-lookup"><span data-stu-id="98b34-201">Name this captured group `word`.</span></span>|  
|`\s+`|<span data-ttu-id="98b34-202">匹配一个或多个空白字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-202">Match one or more white-space characters.</span></span>|  
|`(\k<word>)`|<span data-ttu-id="98b34-203">与名为捕获的组匹配`word`。</span><span class="sxs-lookup"><span data-stu-id="98b34-203">Match the captured group that is named `word`.</span></span>|  
|`\b`|<span data-ttu-id="98b34-204">与字边界匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-204">Match a word boundary.</span></span>|  
  
 [!code-cpp[Regex_Words#0](~/samples/snippets/cpp/VS_Snippets_CLR/Regex_Words/CPP/words.cpp#0)]
 [!code-csharp[Regex_Words#0](~/samples/snippets/csharp/VS_Snippets_CLR/Regex_Words/CS/words.cs#0)]
 [!code-vb[Regex_Words#0](~/samples/snippets/visualbasic/VS_Snippets_CLR/Regex_Words/VB/words.vb#0)]  
  
 <span data-ttu-id="98b34-205">下面的示例演示如何使用正则表达式以检查是否一个字符串，表示货币值或具有表示货币值的正确格式。</span><span class="sxs-lookup"><span data-stu-id="98b34-205">The following example illustrates the use of a regular expression to check whether a string either represents a currency value or has the correct format to represent a currency value.</span></span> <span data-ttu-id="98b34-206">在这种情况下，正则表达式从动态生成<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A?displayProperty=nameWithType>， <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A>， <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A?displayProperty=nameWithType>， <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>，和<xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType>用户的当前区域性的属性。</span><span class="sxs-lookup"><span data-stu-id="98b34-206">In this case, the regular expression is built dynamically from the <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>, and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties for the user's current culture.</span></span> <span data-ttu-id="98b34-207">如果使用系统的当前区域性为 EN-US，生成的正则表达式是`^\s*[\+-]?\s?\$?\s?(\d*\.?\d{2}?){1}$`。</span><span class="sxs-lookup"><span data-stu-id="98b34-207">If the system's current culture is en-US, the resulting regular expression is `^\s*[\+-]?\s?\$?\s?(\d*\.?\d{2}?){1}$`.</span></span> <span data-ttu-id="98b34-208">下表中所示，可以解释此正则表达式。</span><span class="sxs-lookup"><span data-stu-id="98b34-208">This regular expression can be interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="98b34-209">模式</span><span class="sxs-lookup"><span data-stu-id="98b34-209">Pattern</span></span>|<span data-ttu-id="98b34-210">描述</span><span class="sxs-lookup"><span data-stu-id="98b34-210">Description</span></span>|  
|-------------|-----------------|  
|`^`|<span data-ttu-id="98b34-211">在该字符串的开头处开始。</span><span class="sxs-lookup"><span data-stu-id="98b34-211">Start at the beginning of the string.</span></span>|  
|`\s*`|<span data-ttu-id="98b34-212">匹配零个或多个空白字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-212">Match zero or more white-space characters.</span></span>|  
|`[\+-]?`|<span data-ttu-id="98b34-213">匹配正号或负号的零个或一个匹配的项。</span><span class="sxs-lookup"><span data-stu-id="98b34-213">Match zero or one occurrence of either the positive sign or the negative sign.</span></span>|  
|`\s?`|<span data-ttu-id="98b34-214">匹配零个或一个空白字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-214">Match zero or one white-space character.</span></span>|  
|`\$?`|<span data-ttu-id="98b34-215">匹配零个或一个匹配项的美元符号。</span><span class="sxs-lookup"><span data-stu-id="98b34-215">Match zero or one occurrence of the dollar sign.</span></span>|  
|`\s?`|<span data-ttu-id="98b34-216">匹配零个或一个空白字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-216">Match zero or one white-space character.</span></span>|  
|`\d*`|<span data-ttu-id="98b34-217">匹配零个或多个十进制数字。</span><span class="sxs-lookup"><span data-stu-id="98b34-217">Match zero or more decimal digits.</span></span>|  
|`\.?`|<span data-ttu-id="98b34-218">匹配零个或一个小数点符号。</span><span class="sxs-lookup"><span data-stu-id="98b34-218">Match zero or one decimal point symbol.</span></span>|  
|`\d{2}?`|<span data-ttu-id="98b34-219">匹配两个十进制数字零个或一个时间。</span><span class="sxs-lookup"><span data-stu-id="98b34-219">Match two decimal digits zero or one time.</span></span>|  
|`(\d*\.?\d{2}?){1}`|<span data-ttu-id="98b34-220">匹配以下模式： 至少一次隔开小数点符号的整数和小数位数。</span><span class="sxs-lookup"><span data-stu-id="98b34-220">Match the pattern of integral and fractional digits separated by a decimal point symbol at least one time.</span></span>|  
|`$`|<span data-ttu-id="98b34-221">匹配字符串的末尾。</span><span class="sxs-lookup"><span data-stu-id="98b34-221">Match the end of the string.</span></span>|  
  
 <span data-ttu-id="98b34-222">在这种情况下，正则表达式假定有效货币字符串不包含组分隔符符号，并且它具有任何小数位数或小数位数由当前区域性的定义数<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="98b34-222">In this case, the regular expression assumes that a valid currency string does not contain group separator symbols, and that it has either no fractional digits or the number of fractional digits defined by the current culture's <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A> property.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.class/cs/regex_example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.class/vb/regex_example1.vb#1)]  
  
 <span data-ttu-id="98b34-223">此示例中的正则表达式动态生成的因为我们不知道在设计时是否当前区域性的货币符号、 十进制的登录或正值和负值迹象可能被错误解释为正则正则表达式引擎表达式语言运算符。</span><span class="sxs-lookup"><span data-stu-id="98b34-223">Because the regular expression in this example is built dynamically, we do not know at design time whether the current culture's currency symbol, decimal sign, or positive and negative signs might be misinterpreted by the regular expression engine as regular expression language operators.</span></span> <span data-ttu-id="98b34-224">若要防止任何错误解释，该示例，将传递到每个动态生成的字符串<xref:System.Text.RegularExpressions.Regex.Escape%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-224">To prevent any misinterpretation, the example passes each dynamically generated string to the <xref:System.Text.RegularExpressions.Regex.Escape%2A> method.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="98b34-225">
        <see cref="T:System.Text.RegularExpressions.Regex" />类是不可变 （只读） 和线程安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="98b34-225">The <see cref="T:System.Text.RegularExpressions.Regex" /> class is immutable (read-only) and thread safe.</span>
      </span>
      <span data-ttu-id="98b34-226">
        <see cref="T:System.Text.RegularExpressions.Regex" /> 可以在任何线程上创建和线程间共享对象。</span>
      <span class="sxs-lookup">
        <span data-stu-id="98b34-226">
          <see cref="T:System.Text.RegularExpressions.Regex" /> objects can be created on any thread and shared between threads.</span>
      </span>
      <span data-ttu-id="98b34-227">有关详细信息，请参阅 [线程 Safety](~/docs/standard/base-types/thread-safety-in-regular-expressions.md)。</span>
      <span class="sxs-lookup">
        <span data-stu-id="98b34-227">For more information, see [Thread Safety](~/docs/standard/base-types/thread-safety-in-regular-expressions.md).</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Configuration.RegexStringValidator" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="98b34-228">初始化 <see cref="T:System.Text.RegularExpressions.Regex" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-228">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.Regex" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Regex ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Regex();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="98b34-229">初始化 <see cref="T:System.Text.RegularExpressions.Regex" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-229">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.Regex" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-230">请注意，此构造函数都受到保护;仅可以由派生自的类调用<xref:System.Text.RegularExpressions.Regex>类。</span><span class="sxs-lookup"><span data-stu-id="98b34-230">Note that this constructor is protected; it can only be called by classes derived from the <xref:System.Text.RegularExpressions.Regex> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Regex (string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Regex(System::String ^ pattern);" />
      <MemberSignature Language="F#" Value="new System.Text.RegularExpressions.Regex : string -&gt; System.Text.RegularExpressions.Regex" Usage="new System.Text.RegularExpressions.Regex pattern" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pattern">
          <span data-ttu-id="98b34-231">要匹配的正则表达式模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-231">The regular expression pattern to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-232">为指定的正则表达式初始化 <see cref="T:System.Text.RegularExpressions.Regex" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-232">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.Regex" /> class for the specified regular expression.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-233">`pattern`参数包含以符号方式描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-233">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="98b34-234">有关正则表达式的详细信息，请参阅[.NET Framework 正则表达式](~/docs/standard/base-types/regular-expressions.md)和[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)主题。</span><span class="sxs-lookup"><span data-stu-id="98b34-234">For more information about regular expressions, see the [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md) topics.</span></span>  
  
 <span data-ttu-id="98b34-235">调用<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%29>构造函数是等效于调用<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%29>构造函数的值与<xref:System.Text.RegularExpressions.RegexOptions.None>为`options`自变量。</span><span class="sxs-lookup"><span data-stu-id="98b34-235">Calling the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%29> constructor is equivalent to calling the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%29> constructor with a value of <xref:System.Text.RegularExpressions.RegexOptions.None> for the `options` argument.</span></span>  
  
 <span data-ttu-id="98b34-236">A<xref:System.Text.RegularExpressions.Regex>对象是不可变，这意味着，它可以用于仅在创建它时定义的匹配模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-236">A <xref:System.Text.RegularExpressions.Regex> object is immutable, which means that it can be used only for the match pattern you define when you create it.</span></span> <span data-ttu-id="98b34-237">但是，它可以是没有正在重新编译的情况下使用任意次数。</span><span class="sxs-lookup"><span data-stu-id="98b34-237">However, it can be used any number of times without being recompiled.</span></span>  
  
 <span data-ttu-id="98b34-238">此构造函数实例化尝试定义中的任意字母字符的区分大小写匹配的正则表达式对象`pattern`。</span><span class="sxs-lookup"><span data-stu-id="98b34-238">This constructor instantiates a regular expression object that attempts a case-sensitive match of any alphabetical characters defined in `pattern`.</span></span> <span data-ttu-id="98b34-239">对于不区分大小写的匹配项，使用<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-239">For a case-insensitive match, use the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-240">下面的示例演示如何使用此构造函数来实例化正则表达式相匹配任何单词的开头字母"a"或"t"。</span><span class="sxs-lookup"><span data-stu-id="98b34-240">The following example illustrates how to use this constructor to instantiate a regular expression that matches any word that begins with the letters "a" or "t".</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Constructors#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Constructors/cs/constructors1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Constructors#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Constructors/vb/constructors1.vb#1)]  
  
 <span data-ttu-id="98b34-241">请注意，正则表达式模式不匹配的单词"The"开头的文本，因为比较是区分大小写，默认情况下。</span><span class="sxs-lookup"><span data-stu-id="98b34-241">Note that the regular expression pattern cannot match the word "The" at the beginning of the text, because comparisons are case-sensitive by default.</span></span> <span data-ttu-id="98b34-242">不区分大小写的比较的示例，请参阅<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%29>构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-242">For an example of case-insensitive comparison, see the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98b34-243">出现正则表达式分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-243">A regular expression parsing error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-244">
            <paramref name="pattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-244">
              <paramref name="pattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="98b34-245">
            <para>此构造函数创建<see cref="T:System.Text.RegularExpressions.Regex" />使用在其中创建的应用程序域的默认超时值的对象。如果没有为应用程序域中，定义一个超时值<see cref="T:System.Text.RegularExpressions.Regex" />对象使用的值<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，这会阻止该操作超时。用于创建建议的构造函数<see cref="T:System.Text.RegularExpressions.Regex" />对象是<see cref="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />，可以在其中你设置的超时间隔。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-245">
              <para>This constructor creates a <see cref="T:System.Text.RegularExpressions.Regex" /> object that uses the default time-out value of the application domain in which it is created. If a time-out value has not been defined for the application domain,  the <see cref="T:System.Text.RegularExpressions.Regex" /> object uses the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the operation from timing out. The recommended constructor for creating a <see cref="T:System.Text.RegularExpressions.Regex" /> object is <see cref="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Regex (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Regex(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Text.RegularExpressions.Regex : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Text.RegularExpressions.Regex" Usage="new System.Text.RegularExpressions.Regex (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="98b34-246">包含串行化模式和 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 信息的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-246">The object that contains a serialized pattern and <see cref="T:System.Text.RegularExpressions.RegexOptions" /> information.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="98b34-247">此序列化的目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-247">The destination for this serialization.</span>
          </span>
          <span data-ttu-id="98b34-248">（未使用此参数；指定 <see langword="null" />。）</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-248">(This parameter is not used; specify <see langword="null" />.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-249">使用序列化数据初始化 <see cref="T:System.Text.RegularExpressions.Regex" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-249">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.Regex" /> class by using serialized data.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98b34-250">出现正则表达式分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-250">A regular expression parsing error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-251">
            <paramref name="info" /> 包含的模式为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-251">The pattern that <paramref name="info" /> contains is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98b34-252">
            <paramref name="info" /> 包含无效的 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 标志。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-252">
              <paramref name="info" /> contains an invalid <see cref="T:System.Text.RegularExpressions.RegexOptions" /> flag.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Regex (string pattern, System.Text.RegularExpressions.RegexOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern, valuetype System.Text.RegularExpressions.RegexOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String, options As RegexOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Regex(System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options);" />
      <MemberSignature Language="F#" Value="new System.Text.RegularExpressions.Regex : string * System.Text.RegularExpressions.RegexOptions -&gt; System.Text.RegularExpressions.Regex" Usage="new System.Text.RegularExpressions.Regex (pattern, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
      </Parameters>
      <Docs>
        <param name="pattern">
          <span data-ttu-id="98b34-253">要匹配的正则表达式模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-253">The regular expression pattern to match.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="98b34-254">修改正则表达式的枚举值的按位组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-254">A bitwise combination of the enumeration values that modify the regular expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-255">使用修改模式的选项为指定的正则表达式初始化 <see cref="T:System.Text.RegularExpressions.Regex" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-255">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.Regex" /> class for the specified regular expression, with options that modify the pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-256">`pattern`参数包含以符号方式描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-256">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="98b34-257">有关正则表达式的详细信息，请参阅[.NET Framework 正则表达式](~/docs/standard/base-types/regular-expressions.md)和[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)主题。</span><span class="sxs-lookup"><span data-stu-id="98b34-257">For more information about regular expressions, see the [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md) topics.</span></span>  
  
 <span data-ttu-id="98b34-258">A<xref:System.Text.RegularExpressions.Regex>对象是不可变，这意味着，它可以用于仅在创建它时定义的匹配参数。</span><span class="sxs-lookup"><span data-stu-id="98b34-258">A <xref:System.Text.RegularExpressions.Regex> object is immutable, which means that it can be used only for the match parameters you define when you create it.</span></span> <span data-ttu-id="98b34-259">但是，它可以是没有正在重新编译的情况下使用任意次数。</span><span class="sxs-lookup"><span data-stu-id="98b34-259">However, it can be used any number of times without being recompiled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-260">下面的示例演示如何使用此构造函数来实例化正则表达式相匹配任何单词的开头字母"a"或"t"。</span><span class="sxs-lookup"><span data-stu-id="98b34-260">The following example illustrates how to use this constructor to instantiate a regular expression that matches any word that begins with the letters "a" or "t".</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Constructors#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Constructors/cs/Constructors2.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Regex.Constructors#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Constructors/vb/Constructors2.vb#2)]  
  
 <span data-ttu-id="98b34-261">请注意，match 集合包括单词"The"的文本开头，因为`options`参数定义了不区分大小写的比较。</span><span class="sxs-lookup"><span data-stu-id="98b34-261">Note that the match collection includes the word "The" that begins the text because the `options` parameter has defined case-insensitive comparisons.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98b34-262">出现正则表达式分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-262">A regular expression parsing error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-263">
            <paramref name="pattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-263">
              <paramref name="pattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98b34-264">
            <paramref name="options" /> 包含无效标志。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-264">
              <paramref name="options" /> contains an invalid flag.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="98b34-265">
            <para>此构造函数创建<see cref="T:System.Text.RegularExpressions.Regex" />使用在其中创建的应用程序域的默认超时值的对象。如果没有为应用程序域中，定义一个超时值<see cref="T:System.Text.RegularExpressions.Regex" />对象使用的值<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，这会阻止该操作超时。用于创建建议的构造函数<see cref="T:System.Text.RegularExpressions.Regex" />对象是<see cref="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />，可以在其中你设置的超时间隔。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-265">
              <para>This constructor creates a <see cref="T:System.Text.RegularExpressions.Regex" /> object that uses the default time-out value of the application domain in which it is created. If a time-out value has not been defined for the application domain, the <see cref="T:System.Text.RegularExpressions.Regex" /> object uses the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the operation from timing out. The recommended constructor for creating a <see cref="T:System.Text.RegularExpressions.Regex" /> object is <see cref="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Regex (string pattern, System.Text.RegularExpressions.RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String, options As RegexOptions, matchTimeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Regex(System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="new System.Text.RegularExpressions.Regex : string * System.Text.RegularExpressions.RegexOptions * TimeSpan -&gt; System.Text.RegularExpressions.Regex" Usage="new System.Text.RegularExpressions.Regex (pattern, options, matchTimeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="pattern">
          <span data-ttu-id="98b34-266">要匹配的正则表达式模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-266">The regular expression pattern to match.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="98b34-267">修改正则表达式的枚举值的按位组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-267">A bitwise combination of the enumeration values that modify the regular expression.</span>
          </span>
        </param>
        <param name="matchTimeout">
          <span data-ttu-id="98b34-268">超时间隔；若要指示该方法不应超时，则为 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-268">A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> to indicate that the method should not time out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-269">使用修改模式的选项和指定在超时前多久模式匹配方法应进行匹配尝试的值为指定正则表达式初始化 <see cref="T:System.Text.RegularExpressions.Regex" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-269">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.Regex" /> class for the specified regular expression, with options that modify the pattern and a value that specifies how long a pattern matching method should attempt a match before it times out.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-270">`pattern`参数包含以符号方式描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-270">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="98b34-271">有关正则表达式的详细信息，请参阅[.NET Framework 正则表达式](~/docs/standard/base-types/regular-expressions.md)和[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)主题。</span><span class="sxs-lookup"><span data-stu-id="98b34-271">For more information about regular expressions, see the [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md) topics.</span></span>  
  
 <span data-ttu-id="98b34-272">A<xref:System.Text.RegularExpressions.Regex>对象是不可变，这意味着，它可以仅用于进行创建时定义的匹配模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-272">A <xref:System.Text.RegularExpressions.Regex> object is immutable, which means that it can be used only for the match pattern that you define when you create it.</span></span> <span data-ttu-id="98b34-273">但是，它可以是没有正在重新编译的情况下使用任意次数。</span><span class="sxs-lookup"><span data-stu-id="98b34-273">However, it can be used any number of times without being recompiled.</span></span>  
  
 <span data-ttu-id="98b34-274">`matchTimeout`参数指定多长时间模式匹配方法应尝试超时之前找到匹配项。如果未找到匹配项是在该时间段内，该模式匹配方法将引发<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-274">The `matchTimeout` parameter specifies how long a pattern-matching method should try to find a match before it times out. If no match is found in that time interval, the pattern-matching method throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="98b34-275">`matchTimeout` 重写为应用程序域中定义任何默认超时值<xref:System.Text.RegularExpressions.Regex>创建对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-275">`matchTimeout` overrides any default time-out value defined for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="98b34-276">观察的实例模式匹配方法`matchTimeout`超时间隔包括以下：</span><span class="sxs-lookup"><span data-stu-id="98b34-276">The instance pattern-matching methods that observe the `matchTimeout` time-out interval include the following:</span></span>  
  
-   <xref:System.Text.RegularExpressions.Regex.IsMatch%2A>  
  
-   <xref:System.Text.RegularExpressions.Regex.Match%2A>  
  
-   <xref:System.Text.RegularExpressions.Regex.Matches%2A>  
  
-   <xref:System.Text.RegularExpressions.Regex.Replace%2A>  
  
-   <xref:System.Text.RegularExpressions.Regex.Split%2A>  
  
-   <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="98b34-277">将设置的超时间隔可防止依赖于从似乎停止响应时它们处理输入的过度回溯的正则表达式，该字符串包含接近匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-277">Setting a time-out interval prevents regular expressions that rely on excessive backtracking from appearing to stop responding when they process input that contains near matches.</span></span> <span data-ttu-id="98b34-278">有关详细信息，请参阅[正则表达式的最佳实践](~/docs/standard/base-types/best-practices.md)和[回溯](~/docs/standard/base-types/backtracking-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-278">For more information, see [Best Practices for Regular Expressions](~/docs/standard/base-types/best-practices.md) and [Backtracking](~/docs/standard/base-types/backtracking-in-regular-expressions.md).</span></span> <span data-ttu-id="98b34-279">若要设置的合理的超时间隔，请考虑以下因素：</span><span class="sxs-lookup"><span data-stu-id="98b34-279">To set a reasonable time-out interval, consider the following factors:</span></span>  
  
-   <span data-ttu-id="98b34-280">长度和复杂性的正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-280">The length and complexity of the regular expression pattern.</span></span> <span data-ttu-id="98b34-281">长而复杂的正则表达式需要比更简短和简单的更多时间。</span><span class="sxs-lookup"><span data-stu-id="98b34-281">Longer and more complex regular expressions require more time than shorter and simpler ones.</span></span>  
  
-   <span data-ttu-id="98b34-282">预期的机负载。</span><span class="sxs-lookup"><span data-stu-id="98b34-282">The expected machine load.</span></span> <span data-ttu-id="98b34-283">处理在具有高的 CPU 和内存利用率系统上花费更多时间。</span><span class="sxs-lookup"><span data-stu-id="98b34-283">Processing takes more time on systems that have high CPU and memory utilization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-284">下面的示例调用<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>构造函数实例化<xref:System.Text.RegularExpressions.Regex>化超时值为 1 秒的对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-284">The following example calls the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> constructor to instantiate a <xref:System.Text.RegularExpressions.Regex> object with a time-out value of one second.</span></span> <span data-ttu-id="98b34-285">正则表达式模式 `(a+)+$`（与行尾的一个或多个“a”字符的一个或多个序列匹配）受过度回溯的约束。</span><span class="sxs-lookup"><span data-stu-id="98b34-285">The regular expression pattern `(a+)+$`, which matches one or more sequences of one or more "a" characters at the end of a line, is subject to excessive backtracking.</span></span> <span data-ttu-id="98b34-286">如果<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>是引发，该示例会增大到三秒最大值的超时值。</span><span class="sxs-lookup"><span data-stu-id="98b34-286">If a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> is thrown, the example increases the time-out value up to the maximum value of three seconds.</span></span> <span data-ttu-id="98b34-287">否则，它放弃尝试匹配模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-287">Otherwise, it abandons the attempt to match the pattern.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ctor/cs/ctor1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ctor/vb/ctor1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98b34-288">出现正则表达式分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-288">A regular expression parsing error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-289">
            <paramref name="pattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-289">
              <paramref name="pattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98b34-290">
            <paramref name="options" /> 不是有效的 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-290">
              <paramref name="options" /> is not a valid <see cref="T:System.Text.RegularExpressions.RegexOptions" /> value.</span>
          </span>
          <span data-ttu-id="98b34-291">- 或 -  <paramref name="matchTimeout" /> 为负、零或大于 24 天左右。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-291">-or-  <paramref name="matchTimeout" /> is negative, zero, or greater than approximately 24 days.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="98b34-292">
            <para>我们建议你设置<paramref name="matchTimeout" />为适当的值，如两秒的参数。如果通过指定禁用超时<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，正则表达式引擎提供略有更好的性能。但是，你应禁用超时仅在以下情况:-当由正则表达式处理的输入源自已知且受信任的来源或由静态文本。这不包括已被动态由用户输入的文本。 -当进行全面测试正则表达式模式以确保它有效地处理匹配，非匹配项，并不久匹配。 -当正则表达式模式不包含任何已知会引起过多回溯，处理接近的匹配项时的语言元素。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-292">
              <para>We recommend that you set the <paramref name="matchTimeout" /> parameter to an appropriate value, such as two seconds. If you disable time-outs by specifying <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, the regular expression engine offers slightly better performance. However, you should disable time-outs only under the following conditions:  -   When the input processed by a regular expression is derived from a known and trusted source or consists of static text. This excludes text that has been dynamically input by users.  -   When the regular expression pattern has been thoroughly tested to ensure that it efficiently handles matches, non-matches, and near matches.  -   When the regular expression pattern contains no language elements that are known to cause excessive backtracking when processing a near match.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CacheSize">
      <MemberSignature Language="C#" Value="public static int CacheSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CacheSize" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Regex.CacheSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CacheSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CacheSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheSize : int with get, set" Usage="System.Text.RegularExpressions.Regex.CacheSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98b34-293">获取或设置已编译的正则表达式的当前静态缓存中的最大项数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-293">Gets or sets the maximum number of entries in the current static cache of compiled regular expressions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="98b34-294">静态缓存中的最大项数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-294">The maximum number of entries in the static cache.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-295"><xref:System.Text.RegularExpressions.Regex>类维护静态方法调用中使用的已编译正则表达式的内部缓存。</span><span class="sxs-lookup"><span data-stu-id="98b34-295">The <xref:System.Text.RegularExpressions.Regex> class maintains an internal cache of compiled regular expressions used in static method calls.</span></span> <span data-ttu-id="98b34-296">如果在集运算中指定的值小于当前缓存大小，直到缓存大小是否等于指定的值会丢弃缓存项。</span><span class="sxs-lookup"><span data-stu-id="98b34-296">If the value specified in a set operation is less than the current cache size, cache entries are discarded until the cache size is equal to the specified value.</span></span>  
  
 <span data-ttu-id="98b34-297">默认情况下，缓存包含 15 个已编译的静态正则表达式。</span><span class="sxs-lookup"><span data-stu-id="98b34-297">By default, the cache holds 15 compiled static regular expressions.</span></span> <span data-ttu-id="98b34-298">你的应用程序通常将不需要修改缓存大小。</span><span class="sxs-lookup"><span data-stu-id="98b34-298">Your application typically will not have to modify the size of the cache.</span></span> <span data-ttu-id="98b34-299">使用<xref:System.Text.RegularExpressions.Regex.CacheSize%2A>属性仅当你想要关闭缓存或如果你具有较大的缓存。</span><span class="sxs-lookup"><span data-stu-id="98b34-299">Use the <xref:System.Text.RegularExpressions.Regex.CacheSize%2A> property only when you want to turn off caching or when you have an unusually large cache.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98b34-300">集运算中的值小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-300">The value in a set operation is less than zero.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="98b34-301">
            <para>在之前的.NET Framework [！INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]，正则表达式用于静态和实例方法调用已缓存。从 [！静态方法调用会缓存中使用的 INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]，仅正则表达式。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-301">
              <para>In the .NET Framework prior to the [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)], regular expressions used in both static and instance method calls were cached. Beginning with the [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)], only regular expressions used in static method calls are cached.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="capnames">
      <MemberSignature Language="C#" Value="protected internal System.Collections.Hashtable capnames;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly class System.Collections.Hashtable capnames" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.Regex.capnames" />
      <MemberSignature Language="VB.NET" Value="Protected Friend capnames As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected public: System::Collections::Hashtable ^ capnames;" />
      <MemberSignature Language="F#" Value="val mutable capnames : System.Collections.Hashtable" Usage="System.Text.RegularExpressions.Regex.capnames" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98b34-302">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-302">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CapNames">
      <MemberSignature Language="C#" Value="protected System.Collections.IDictionary CapNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary CapNames" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Regex.CapNames" />
      <MemberSignature Language="VB.NET" Value="Protected Property CapNames As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IDictionary ^ CapNames { System::Collections::IDictionary ^ get(); void set(System::Collections::IDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CapNames : System.Collections.IDictionary with get, set" Usage="System.Text.RegularExpressions.Regex.CapNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98b34-303">获取或设置将命名捕获组映射到其索引值的字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-303">Gets or sets a dictionary that maps named capturing groups to their index values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="98b34-304">将命名捕获组映射到其索引值的字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-304">A dictionary that maps named capturing groups to their index values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-305">请注意，此属性受保护;仅可以从类派生自<xref:System.Text.RegularExpressions.Regex>类。</span><span class="sxs-lookup"><span data-stu-id="98b34-305">Note that this property is protected; it can only be accessed from a class derived from the <xref:System.Text.RegularExpressions.Regex> class.</span></span>  
  
 <span data-ttu-id="98b34-306">设置操作尝试将分配给属性的值转换<xref:System.Collections.Hashtable>对象; 如果此转换失败，则会调用<xref:System.Collections.Hashtable.%23ctor%28System.Collections.IDictionary%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-306">A set operation attempts to convert the value assigned to the property to a <xref:System.Collections.Hashtable> object; if this conversion fails, it calls the <xref:System.Collections.Hashtable.%23ctor%28System.Collections.IDictionary%29?displayProperty=nameWithType> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-307">向设置操作中的 <see cref="P:System.Text.RegularExpressions.Regex.CapNames" /> 属性分配的值是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-307">The value assigned to the <see cref="P:System.Text.RegularExpressions.Regex.CapNames" /> property in a set operation is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="caps">
      <MemberSignature Language="C#" Value="protected internal System.Collections.Hashtable caps;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly class System.Collections.Hashtable caps" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.Regex.caps" />
      <MemberSignature Language="VB.NET" Value="Protected Friend caps As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected public: System::Collections::Hashtable ^ caps;" />
      <MemberSignature Language="F#" Value="val mutable caps : System.Collections.Hashtable" Usage="System.Text.RegularExpressions.Regex.caps" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98b34-308">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-308">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caps">
      <MemberSignature Language="C#" Value="protected System.Collections.IDictionary Caps { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Caps" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Regex.Caps" />
      <MemberSignature Language="VB.NET" Value="Protected Property Caps As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IDictionary ^ Caps { System::Collections::IDictionary ^ get(); void set(System::Collections::IDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Caps : System.Collections.IDictionary with get, set" Usage="System.Text.RegularExpressions.Regex.Caps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98b34-309">获取或设置将编号捕获组映射到其索引值的字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-309">Gets or sets a dictionary that maps numbered capturing groups to their index values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="98b34-310">将编号捕获组映射到其索引值的字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-310">A dictionary that maps numbered capturing groups to their index values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-311">请注意，此属性受保护;仅可以从类派生自<xref:System.Text.RegularExpressions.Regex>类。</span><span class="sxs-lookup"><span data-stu-id="98b34-311">Note that this property is protected; it can only be accessed from a class derived from the <xref:System.Text.RegularExpressions.Regex> class.</span></span>  
  
 <span data-ttu-id="98b34-312">设置操作尝试将分配给属性的值转换<xref:System.Collections.Hashtable>对象; 如果此转换失败，则会调用<xref:System.Collections.Hashtable.%23ctor%28System.Collections.IDictionary%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-312">A set operation attempts to convert the value assigned to the property to a <xref:System.Collections.Hashtable> object; if this conversion fails, it calls the <xref:System.Collections.Hashtable.%23ctor%28System.Collections.IDictionary%29?displayProperty=nameWithType> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-313">向设置操作中的 <see cref="P:System.Text.RegularExpressions.Regex.Caps" /> 属性分配的值是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-313">The value assigned to the <see cref="P:System.Text.RegularExpressions.Regex.Caps" /> property in a set operation is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="capsize">
      <MemberSignature Language="C#" Value="protected internal int capsize;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly int32 capsize" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.Regex.capsize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend capsize As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected public: int capsize;" />
      <MemberSignature Language="F#" Value="val mutable capsize : int" Usage="System.Text.RegularExpressions.Regex.capsize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98b34-314">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-314">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="capslist">
      <MemberSignature Language="C#" Value="protected internal string[] capslist;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly string[] capslist" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.Regex.capslist" />
      <MemberSignature Language="VB.NET" Value="Protected Friend capslist As String() " />
      <MemberSignature Language="C++ CLI" Value="protected public: cli::array &lt;System::String ^&gt; ^ capslist;" />
      <MemberSignature Language="F#" Value="val mutable capslist : string[]" Usage="System.Text.RegularExpressions.Regex.capslist" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98b34-315">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-315">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CompileToAssembly">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="98b34-316">编译正则表达式，并将其保存到单个程序集的磁盘中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-316">Compiles regular expressions and saves them to disk in a single assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="98b34-317">在.NET Core 上调用`Regex.CompileToAssembly`方法引发<xref:System.PlatformNotSupportedException>; 不支持写出程序集。</span><span class="sxs-lookup"><span data-stu-id="98b34-317">On .NET Core, calls to the `Regex.CompileToAssembly` method throw a <xref:System.PlatformNotSupportedException>; writing out an assembly is not supported.</span></span>
  
       ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompileToAssembly">
      <MemberSignature Language="C#" Value="public static void CompileToAssembly (System.Text.RegularExpressions.RegexCompilationInfo[] regexinfos, System.Reflection.AssemblyName assemblyname);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompileToAssembly(class System.Text.RegularExpressions.RegexCompilationInfo[] regexinfos, class System.Reflection.AssemblyName assemblyname) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CompileToAssembly(cli::array &lt;System::Text::RegularExpressions::RegexCompilationInfo ^&gt; ^ regexinfos, System::Reflection::AssemblyName ^ assemblyname);" />
      <MemberSignature Language="F#" Value="static member CompileToAssembly : System.Text.RegularExpressions.RegexCompilationInfo[] * System.Reflection.AssemblyName -&gt; unit" Usage="System.Text.RegularExpressions.Regex.CompileToAssembly (regexinfos, assemblyname)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regexinfos" Type="System.Text.RegularExpressions.RegexCompilationInfo[]" />
        <Parameter Name="assemblyname" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="regexinfos">
          <span data-ttu-id="98b34-318">描述要编译的正则表达式的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-318">An array that describes the regular expressions to compile.</span>
          </span>
        </param>
        <param name="assemblyname">
          <span data-ttu-id="98b34-319">程序集的文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-319">The file name of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-320">将一个或多个指定的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象编译为命名程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-320">Compiles one or more specified <see cref="T:System.Text.RegularExpressions.Regex" /> objects to a named assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-321"><xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%29>方法中定义的每个正则表达式中生成.NET Framework 程序集`regexinfos`由类表示数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-321">The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%29> method generates a .NET Framework assembly in which each regular expression defined in the `regexinfos` array is represented by a class.</span></span> <span data-ttu-id="98b34-322">通常情况下，<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%29>从单独的应用程序生成一个程序集的已编译的正则表达式调用方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-322">Typically, the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%29> method is called from a separate application that generates an assembly of compiled regular expressions.</span></span> <span data-ttu-id="98b34-323">包含在程序集中的每个正则表达式具有以下特征：</span><span class="sxs-lookup"><span data-stu-id="98b34-323">Each regular expression included in the assembly has the following characteristics:</span></span>  
  
-   <span data-ttu-id="98b34-324">派生自<xref:System.Text.RegularExpressions.Regex>类。</span><span class="sxs-lookup"><span data-stu-id="98b34-324">It is derived from the <xref:System.Text.RegularExpressions.Regex> class.</span></span>  
  
-   <span data-ttu-id="98b34-325">它分配由定义的完全限定的名称`fullnamespace`和`name`其相应的参数<xref:System.Text.RegularExpressions.RegexCompilationInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-325">It is assigned the fully qualified name that is defined by the `fullnamespace` and `name` parameters of its corresponding <xref:System.Text.RegularExpressions.RegexCompilationInfo> object.</span></span>  
  
-   <span data-ttu-id="98b34-326">它具有一个默认 （或无参数） 构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-326">It has a default (or parameterless) constructor.</span></span>  
  
 <span data-ttu-id="98b34-327">通常，在一个程序集或独立于创建该程序集的代码的应用程序找到实例化并使用已编译的正则表达式的代码。</span><span class="sxs-lookup"><span data-stu-id="98b34-327">Ordinarily, the code that instantiates and uses the compiled regular expression is found in an assembly or application that is separate from the code that creates the assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-328">下面的示例创建名为 RegexLib.dll 程序集。</span><span class="sxs-lookup"><span data-stu-id="98b34-328">The following example creates an assembly named RegexLib.dll.</span></span> <span data-ttu-id="98b34-329">程序集包括两个已编译的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="98b34-329">The assembly includes two compiled regular expressions.</span></span> <span data-ttu-id="98b34-330">首先， `Utilities.RegularExpressions.DuplicatedString`，两个相同的连续单词匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-330">The first, `Utilities.RegularExpressions.DuplicatedString`, matches two identical contiguous words.</span></span> <span data-ttu-id="98b34-331">第二个， `Utilities.RegularExpressions.EmailAddress`，检查字符串是否具有正确的格式应为电子邮件地址。</span><span class="sxs-lookup"><span data-stu-id="98b34-331">The second, `Utilities.RegularExpressions.EmailAddress`, checks whether a string has the correct format to be an email address.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.CompileToAssembly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.CompileToAssembly/cs/Compile1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.CompileToAssembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.CompileToAssembly/vb/Compile1.vb#1)]  
  
 <span data-ttu-id="98b34-332">然后，检查字符串中的重复单词的正则表达式是实例化，并使用下面的示例。</span><span class="sxs-lookup"><span data-stu-id="98b34-332">The regular expression that checks a string for duplicate words is then instantiated and used by the following example.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.CompileToAssembly#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.CompileToAssembly/cs/Compile2.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Regex.CompileToAssembly#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.CompileToAssembly/vb/Compile2.vb#2)]  
  
 <span data-ttu-id="98b34-333">此第二个示例成功编译要求对 RegexLib.dll （由第一个示例创建程序集） 的引用添加到项目。</span><span class="sxs-lookup"><span data-stu-id="98b34-333">Successful compilation of this second example requires a reference to RegexLib.dll (the assembly created by the first example) to be added to the project.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98b34-334">
            <paramref name="assemblyname" /> 参数的 <see cref="P:System.Reflection.AssemblyName.Name" /> 属性值是一个空字符串或 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-334">The value of the <paramref name="assemblyname" /> parameter's <see cref="P:System.Reflection.AssemblyName.Name" /> property is an empty or null string.</span>
          </span>
          <span data-ttu-id="98b34-335">- 或 -  <paramref name="regexinfos" /> 中的一个或多个对象的正则表达式模式包含无效语法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-335">-or-  The regular expression pattern of one or more objects in <paramref name="regexinfos" /> contains invalid syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-336">
            <paramref name="assemblyname" /> 或 <paramref name="regexinfos" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-336">
              <paramref name="assemblyname" /> or <paramref name="regexinfos" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="98b34-337">仅 .NET Core：不支持创建已编译的正则表达式的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-337">.NET Core only: Creating an assembly of compiled regular expressions is not supported.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="98b34-338">
            <para>如果你正在开发的系统上 [！INCLUDE[net_v45](~/includes/net-v45-md.md)] 或安装其单点发行版，你确定目标 [！INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]，并且你使用<see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" />方法来创建该程序集包含已编译的正则表达式。尝试使用正则表达式之一在于，其在系统上的程序集 [！INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 引发异常。若要解决此问题，可以执行以下任一操作:-生成包含已编译的正则表达式具有的系统上的程序集 [！INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 改为更高版本的安装。 -而不是调用<see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" />和检索已编译的正则表达式从程序集，使用任一静态或实例<see cref="T:System.Text.RegularExpressions.Regex" />方法<see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" />选项在实例化<see cref="T:System.Text.RegularExpressions.Regex" />对象或调用正则表达式模式匹配方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-338">
              <para>If you are developing on a system that has [!INCLUDE[net_v45](~/includes/net-v45-md.md)] or its point releases installed, you target [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], and you use the <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> method to create an assembly that contains compiled regular expressions. Trying to use one of the regular expressions in that assembly on a system that has [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] throws an exception. To work around this problem, you can do either of the following:  -   Build the assembly that contains the compiled regular expressions on a system that has [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] instead of later versions installed.  -   Instead of calling <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> and retrieving the compiled regular expression from an assembly, use either static or instance <see cref="T:System.Text.RegularExpressions.Regex" /> methods with the <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> option when you instantiate a <see cref="T:System.Text.RegularExpressions.Regex" /> object or call a regular expression pattern matching method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CompileToAssembly">
      <MemberSignature Language="C#" Value="public static void CompileToAssembly (System.Text.RegularExpressions.RegexCompilationInfo[] regexinfos, System.Reflection.AssemblyName assemblyname, System.Reflection.Emit.CustomAttributeBuilder[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompileToAssembly(class System.Text.RegularExpressions.RegexCompilationInfo[] regexinfos, class System.Reflection.AssemblyName assemblyname, class System.Reflection.Emit.CustomAttributeBuilder[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CompileToAssembly(cli::array &lt;System::Text::RegularExpressions::RegexCompilationInfo ^&gt; ^ regexinfos, System::Reflection::AssemblyName ^ assemblyname, cli::array &lt;System::Reflection::Emit::CustomAttributeBuilder ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CompileToAssembly : System.Text.RegularExpressions.RegexCompilationInfo[] * System.Reflection.AssemblyName * System.Reflection.Emit.CustomAttributeBuilder[] -&gt; unit" Usage="System.Text.RegularExpressions.Regex.CompileToAssembly (regexinfos, assemblyname, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regexinfos" Type="System.Text.RegularExpressions.RegexCompilationInfo[]" />
        <Parameter Name="assemblyname" Type="System.Reflection.AssemblyName" />
        <Parameter Name="attributes" Type="System.Reflection.Emit.CustomAttributeBuilder[]" />
      </Parameters>
      <Docs>
        <param name="regexinfos">
          <span data-ttu-id="98b34-339">描述要编译的正则表达式的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-339">An array that describes the regular expressions to compile.</span>
          </span>
        </param>
        <param name="assemblyname">
          <span data-ttu-id="98b34-340">程序集的文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-340">The file name of the assembly.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="98b34-341">定义要应用于程序集的特性的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-341">An array that defines the attributes to apply to the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-342">将一个或多个指定的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象编译为具有指定特性的命名程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-342">Compiles one or more specified <see cref="T:System.Text.RegularExpressions.Regex" /> objects to a named assembly with the specified attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-343"><xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%2CSystem.Reflection.Emit.CustomAttributeBuilder%5B%5D%29>方法中定义的每个正则表达式中生成.NET Framework 程序集`regexinfos`由类表示数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-343">The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%2CSystem.Reflection.Emit.CustomAttributeBuilder%5B%5D%29> method generates a .NET Framework assembly in which each regular expression defined in the `regexinfos` array is represented by a class.</span></span> <span data-ttu-id="98b34-344">通常情况下，<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%2CSystem.Reflection.Emit.CustomAttributeBuilder%5B%5D%29>从单独的应用程序生成一个程序集的已编译的正则表达式调用方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-344">Typically, the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%2CSystem.Reflection.Emit.CustomAttributeBuilder%5B%5D%29> method is called from a separate application that generates an assembly of compiled regular expressions.</span></span> <span data-ttu-id="98b34-345">包含在程序集中的每个正则表达式具有以下特征：</span><span class="sxs-lookup"><span data-stu-id="98b34-345">Each regular expression included in the assembly has the following characteristics:</span></span>  
  
-   <span data-ttu-id="98b34-346">派生自<xref:System.Text.RegularExpressions.Regex>类。</span><span class="sxs-lookup"><span data-stu-id="98b34-346">It is derived from the <xref:System.Text.RegularExpressions.Regex> class.</span></span>  
  
-   <span data-ttu-id="98b34-347">它分配由定义的完全限定的名称`fullnamespace`和`name`其相应的参数<xref:System.Text.RegularExpressions.RegexCompilationInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-347">It is assigned the fully qualified name that is defined by the `fullnamespace` and `name` parameters of its corresponding <xref:System.Text.RegularExpressions.RegexCompilationInfo> object.</span></span>  
  
-   <span data-ttu-id="98b34-348">它具有一个默认 （或无参数） 构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-348">It has a default (or parameterless) constructor.</span></span>  
  
 <span data-ttu-id="98b34-349">通常，在一个程序集或独立于创建该程序集的代码的应用程序找到实例化并使用已编译的正则表达式的代码。</span><span class="sxs-lookup"><span data-stu-id="98b34-349">Ordinarily, the code that instantiates and uses the compiled regular expression is found in an assembly or application that is separate from the code that creates the assembly.</span></span>  
  
 <span data-ttu-id="98b34-350">因为<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>方法而不是使用特定语言的类定义关键字的方法调用从生成.NET Framework 程序集 (如`class`在 C# 或`Class`...`End Class`</span><span class="sxs-lookup"><span data-stu-id="98b34-350">Because the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates a .NET Framework assembly from a method call instead of using a particular language's class definition keyword (such as `class` in C# or `Class`…`End Class`</span></span> <span data-ttu-id="98b34-351">在 Visual Basic 中)，它不允许.NET Framework 属性分配给程序集，通过开发语言的标准属性语法。</span><span class="sxs-lookup"><span data-stu-id="98b34-351">in Visual Basic), it does not allow .NET Framework attributes to be assigned to the assembly by using the development language's standard attribute syntax.</span></span> <span data-ttu-id="98b34-352">`attributes`参数提供一种方法来定义应用于程序集的属性。</span><span class="sxs-lookup"><span data-stu-id="98b34-352">The `attributes` parameter provides an alternative method for defining the attributes that apply to the assembly.</span></span> <span data-ttu-id="98b34-353">你想要应用于程序集的每个属性，请执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="98b34-353">For each attribute that you want to apply to the assembly, do the following:</span></span>  
  
1.  <span data-ttu-id="98b34-354">创建的数组<xref:System.Type>表示你想要调用的特性构造函数的参数类型的对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-354">Create an array of <xref:System.Type> objects representing the parameter types of the attribute constructor that you want to call.</span></span>  
  
2.  <span data-ttu-id="98b34-355">检索<xref:System.Type>表示你想要应用于新的程序集的属性类的对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-355">Retrieve a <xref:System.Type> object representing the attribute class that you want to apply to the new assembly.</span></span>  
  
3.  <span data-ttu-id="98b34-356">调用<xref:System.Type.GetConstructor%2A>方法的属性<xref:System.Type>对象以检索<xref:System.Reflection.ConstructorInfo>表示你想要调用的特性构造函数的对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-356">Call the <xref:System.Type.GetConstructor%2A> method of the attribute <xref:System.Type> object to retrieve a <xref:System.Reflection.ConstructorInfo> object representing the attribute constructor that you want to call.</span></span> <span data-ttu-id="98b34-357">传递<xref:System.Type.GetConstructor%2A>方法数组的<xref:System.Type>表示构造函数的参数类型的对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-357">Pass the <xref:System.Type.GetConstructor%2A> method the array of <xref:System.Type> objects that represents the constructor's parameter types.</span></span>  
  
4.  <span data-ttu-id="98b34-358">创建<xref:System.Object>定义要传递到该特性的构造函数的参数的数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-358">Create a <xref:System.Object> array that defines the parameters to pass to the attribute's constructor.</span></span>  
  
5.  <span data-ttu-id="98b34-359">实例化<xref:System.Reflection.Emit.CustomAttributeBuilder>对象向其构造函数传递<xref:System.Reflection.ConstructorInfo>在步骤 3 中检索对象和<xref:System.Object>步骤 4 中创建的数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-359">Instantiate a <xref:System.Reflection.Emit.CustomAttributeBuilder> object by passing its constructor the <xref:System.Reflection.ConstructorInfo> object retrieved in step 3 and the <xref:System.Object> array created in step 4.</span></span>  
  
 <span data-ttu-id="98b34-360">然后可以将传递这些数组<xref:System.Reflection.Emit.CustomAttributeBuilder>对象而不是`attributes`参数<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%2CSystem.Reflection.Emit.CustomAttributeBuilder%5B%5D%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-360">You can then pass an array of these <xref:System.Reflection.Emit.CustomAttributeBuilder> objects instead of the `attributes` parameter to the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%2CSystem.Reflection.Emit.CustomAttributeBuilder%5B%5D%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-361">下面的示例创建名为 RegexLib.dll 程序集，并将应用<xref:System.Reflection.AssemblyTitleAttribute>属性设为它。</span><span class="sxs-lookup"><span data-stu-id="98b34-361">The following example creates an assembly named RegexLib.dll and applies the <xref:System.Reflection.AssemblyTitleAttribute> attribute to it.</span></span> <span data-ttu-id="98b34-362">程序集包括两个已编译的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="98b34-362">The assembly includes two compiled regular expressions.</span></span> <span data-ttu-id="98b34-363">首先， `Utilities.RegularExpressions.DuplicatedString`，两个相同的连续单词匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-363">The first, `Utilities.RegularExpressions.DuplicatedString`, matches two identical contiguous words.</span></span> <span data-ttu-id="98b34-364">第二个， `Utilities.RegularExpressions.EmailAddress`，检查字符串是否具有正确的格式应为电子邮件地址。</span><span class="sxs-lookup"><span data-stu-id="98b34-364">The second, `Utilities.RegularExpressions.EmailAddress`, checks whether a string has the correct format to be an email address.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.CompileToAssembly#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.CompileToAssembly/cs/Compile3.cs#3)]
 [!code-vb[System.Text.RegularExpressions.Regex.CompileToAssembly#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.CompileToAssembly/vb/Compile3.vb#3)]  
  
 <span data-ttu-id="98b34-365">你可以验证<xref:System.Reflection.AssemblyTitleAttribute>属性已通过检查其清单如 ILDasm 的反射实用程序应用于程序集。</span><span class="sxs-lookup"><span data-stu-id="98b34-365">You can verify that the <xref:System.Reflection.AssemblyTitleAttribute> attribute has been applied to the assembly by examining its manifest with a reflection utility such as ILDasm.</span></span>  
  
 <span data-ttu-id="98b34-366">然后，检查字符串中的重复单词的正则表达式是实例化，并使用下面的示例。</span><span class="sxs-lookup"><span data-stu-id="98b34-366">The regular expression that checks a string for duplicate words is then instantiated and used by the following example.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.CompileToAssembly#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.CompileToAssembly/cs/Compile2.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Regex.CompileToAssembly#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.CompileToAssembly/vb/Compile2.vb#2)]  
  
 <span data-ttu-id="98b34-367">此第二个示例成功编译要求对 RegexLib.dll （由第一个示例创建程序集） 的引用添加到项目。</span><span class="sxs-lookup"><span data-stu-id="98b34-367">Successful compilation of this second example requires a reference to RegexLib.dll (the assembly created by the first example) to be added to the project.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98b34-368">
            <paramref name="assemblyname" /> 参数的 <see cref="P:System.Reflection.AssemblyName.Name" /> 属性值是一个空字符串或 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-368">The value of the <paramref name="assemblyname" /> parameter's <see cref="P:System.Reflection.AssemblyName.Name" /> property is an empty or null string.</span>
          </span>
          <span data-ttu-id="98b34-369">- 或 -  <paramref name="regexinfos" /> 中的一个或多个对象的正则表达式模式包含无效语法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-369">-or-  The regular expression pattern of one or more objects in <paramref name="regexinfos" /> contains invalid syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-370">
            <paramref name="assemblyname" /> 或 <paramref name="regexinfos" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-370">
              <paramref name="assemblyname" /> or <paramref name="regexinfos" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="98b34-371">仅 .NET Core：不支持创建已编译的正则表达式的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-371">.NET Core only: Creating an assembly of compiled regular expressions is not supported.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="98b34-372">
            <para>如果你正在开发的系统上 [！INCLUDE[net_v45](~/includes/net-v45-md.md)] 或安装其单点发行版，你确定目标 [！INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]，并且你使用<see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" />方法来创建该程序集包含已编译的正则表达式。尝试使用正则表达式之一在于，其在系统上的程序集 [！INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 引发异常。若要解决此问题，可以执行以下任一操作:-生成包含已编译的正则表达式具有的系统上的程序集 [！INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 改为更高版本的安装。 -而不是调用<see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" />和检索已编译的正则表达式从程序集，使用任一静态或实例<see cref="T:System.Text.RegularExpressions.Regex" />方法<see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" />选项在实例化<see cref="T:System.Text.RegularExpressions.Regex" />对象或调用正则表达式模式匹配方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-372">
              <para>If you are developing on a system that has [!INCLUDE[net_v45](~/includes/net-v45-md.md)] or its point releases installed, you target [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], and you use the <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> method to create an assembly that contains compiled regular expressions. Trying to use one of the regular expressions in that assembly on a system that has [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] throws an exception. To work around this problem, you can do either of the following:  -   Build the assembly that contains the compiled regular expressions on a system that has [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] instead of later versions installed.  -   Instead of calling <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> and retrieving the compiled regular expression from an assembly, use either static or instance <see cref="T:System.Text.RegularExpressions.Regex" /> methods with the <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> option when you instantiate a <see cref="T:System.Text.RegularExpressions.Regex" /> object or call a regular expression pattern matching method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CompileToAssembly">
      <MemberSignature Language="C#" Value="public static void CompileToAssembly (System.Text.RegularExpressions.RegexCompilationInfo[] regexinfos, System.Reflection.AssemblyName assemblyname, System.Reflection.Emit.CustomAttributeBuilder[] attributes, string resourceFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompileToAssembly(class System.Text.RegularExpressions.RegexCompilationInfo[] regexinfos, class System.Reflection.AssemblyName assemblyname, class System.Reflection.Emit.CustomAttributeBuilder[] attributes, string resourceFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[],System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CompileToAssembly(cli::array &lt;System::Text::RegularExpressions::RegexCompilationInfo ^&gt; ^ regexinfos, System::Reflection::AssemblyName ^ assemblyname, cli::array &lt;System::Reflection::Emit::CustomAttributeBuilder ^&gt; ^ attributes, System::String ^ resourceFile);" />
      <MemberSignature Language="F#" Value="static member CompileToAssembly : System.Text.RegularExpressions.RegexCompilationInfo[] * System.Reflection.AssemblyName * System.Reflection.Emit.CustomAttributeBuilder[] * string -&gt; unit" Usage="System.Text.RegularExpressions.Regex.CompileToAssembly (regexinfos, assemblyname, attributes, resourceFile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regexinfos" Type="System.Text.RegularExpressions.RegexCompilationInfo[]" />
        <Parameter Name="assemblyname" Type="System.Reflection.AssemblyName" />
        <Parameter Name="attributes" Type="System.Reflection.Emit.CustomAttributeBuilder[]" />
        <Parameter Name="resourceFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="regexinfos">
          <span data-ttu-id="98b34-373">描述要编译的正则表达式的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-373">An array that describes the regular expressions to compile.</span>
          </span>
        </param>
        <param name="assemblyname">
          <span data-ttu-id="98b34-374">程序集的文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-374">The file name of the assembly.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="98b34-375">定义要应用于程序集的特性的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-375">An array that defines the attributes to apply to the assembly.</span>
          </span>
        </param>
        <param name="resourceFile">
          <span data-ttu-id="98b34-376">要包含在程序集中的 Win32 资源文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-376">The name of the Win32 resource file to include in the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-377">将一个或多个指定的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象和一个指定的资源文件编译为具有指定特性的命名程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-377">Compiles one or more specified <see cref="T:System.Text.RegularExpressions.Regex" /> objects and a specified resource file to a named assembly with the specified attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-378">[\]，程序集名称、 CustomAttributeBuilder\<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%2CSystem.Reflection.Emit.CustomAttributeBuilder%5B%5D%2CSystem.String%29 > 方法中定义的每个正则表达式中生成.NET Framework 程序集`regexinfos`由类表示数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-378">The [\], AssemblyName, CustomAttributeBuilder\<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%2CSystem.Reflection.Emit.CustomAttributeBuilder%5B%5D%2CSystem.String%29> method generates a .NET Framework assembly in which each regular expression defined in the `regexinfos` array is represented by a class.</span></span> <span data-ttu-id="98b34-379">通常情况下，[\]，程序集名称、 CustomAttributeBuilder\<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%2CSystem.Reflection.Emit.CustomAttributeBuilder%5B%5D%2CSystem.String%29 > 从单独的应用程序生成一个程序集的已编译的正则表达式调用方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-379">Typically, the [\], AssemblyName, CustomAttributeBuilder\<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%2CSystem.Reflection.Emit.CustomAttributeBuilder%5B%5D%2CSystem.String%29> method is called from a separate application that generates an assembly of compiled regular expressions.</span></span> <span data-ttu-id="98b34-380">包含在程序集中的每个正则表达式具有以下特征：</span><span class="sxs-lookup"><span data-stu-id="98b34-380">Each regular expression included in the assembly has the following characteristics:</span></span>  
  
-   <span data-ttu-id="98b34-381">派生自<xref:System.Text.RegularExpressions.Regex>类。</span><span class="sxs-lookup"><span data-stu-id="98b34-381">It is derived from the <xref:System.Text.RegularExpressions.Regex> class.</span></span>  
  
-   <span data-ttu-id="98b34-382">它分配由定义的完全限定的名称`fullnamespace`和`name`其相应的参数<xref:System.Text.RegularExpressions.RegexCompilationInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-382">It is assigned the fully qualified name that is defined by the `fullnamespace` and `name` parameters of its corresponding <xref:System.Text.RegularExpressions.RegexCompilationInfo> object.</span></span>  
  
-   <span data-ttu-id="98b34-383">它具有一个默认 （或无参数） 构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-383">It has a default (or parameterless) constructor.</span></span>  
  
 <span data-ttu-id="98b34-384">通常，在一个程序集或独立于创建该程序集的代码的应用程序找到实例化并使用已编译的正则表达式的代码。</span><span class="sxs-lookup"><span data-stu-id="98b34-384">Ordinarily, the code that instantiates and uses the compiled regular expression is found in an assembly or application that is separate from the code that creates the assembly.</span></span>  
  
 <span data-ttu-id="98b34-385">因为<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>方法而不是使用特定语言的类定义关键字的方法调用从生成.NET Framework 程序集 (如`class`在 C# 或`Class`...`End Class`</span><span class="sxs-lookup"><span data-stu-id="98b34-385">Because the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates a .NET Framework assembly from a method call instead of using a particular language's class definition keyword (such as `class` in C# or `Class`…`End Class`</span></span> <span data-ttu-id="98b34-386">在 Visual Basic 中)，它不允许.NET Framework 属性分配给程序集，通过开发语言的标准属性语法。</span><span class="sxs-lookup"><span data-stu-id="98b34-386">in Visual Basic), it does not allow .NET Framework attributes to be assigned to the assembly by using the development language's standard attribute syntax.</span></span> <span data-ttu-id="98b34-387">`attributes`参数提供一种方法来定义应用于程序集的属性。</span><span class="sxs-lookup"><span data-stu-id="98b34-387">The `attributes` parameter provides an alternative method for defining the attributes that apply to the assembly.</span></span> <span data-ttu-id="98b34-388">你想要应用于程序集的每个属性，请执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="98b34-388">For each attribute that you want to apply to the assembly, do the following:</span></span>  
  
1.  <span data-ttu-id="98b34-389">创建的数组<xref:System.Type>表示你想要调用的特性构造函数的参数类型的对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-389">Create an array of <xref:System.Type> objects representing the parameter types of the attribute constructor that you want to call.</span></span>  
  
2.  <span data-ttu-id="98b34-390">检索<xref:System.Type>表示你想要应用于新的程序集的属性类的对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-390">Retrieve a <xref:System.Type> object representing the attribute class that you want to apply to the new assembly.</span></span>  
  
3.  <span data-ttu-id="98b34-391">调用<xref:System.Type.GetConstructor%2A>方法的属性<xref:System.Type>对象以检索<xref:System.Reflection.ConstructorInfo>表示你想要调用的特性构造函数的对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-391">Call the <xref:System.Type.GetConstructor%2A> method of the attribute <xref:System.Type> object to retrieve a <xref:System.Reflection.ConstructorInfo> object representing the attribute constructor that you want to call.</span></span> <span data-ttu-id="98b34-392">传递<xref:System.Type.GetConstructor%2A>方法数组的<xref:System.Type>表示构造函数的参数类型的对象</span><span class="sxs-lookup"><span data-stu-id="98b34-392">Pass the <xref:System.Type.GetConstructor%2A> method the array of <xref:System.Type> objects that represents the constructor's parameter types</span></span>  
  
4.  <span data-ttu-id="98b34-393">创建<xref:System.Object>定义要传递到该特性的构造函数的参数的数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-393">Create a <xref:System.Object> array that defines the parameters to pass to the attribute's constructor.</span></span>  
  
5.  <span data-ttu-id="98b34-394">实例化<xref:System.Reflection.Emit.CustomAttributeBuilder>对象向其构造函数传递<xref:System.Reflection.ConstructorInfo>在步骤 3 中检索对象和<xref:System.Object>步骤 4 中创建的数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-394">Instantiate a <xref:System.Reflection.Emit.CustomAttributeBuilder> object by passing its constructor the <xref:System.Reflection.ConstructorInfo> object retrieved in step 3 and the <xref:System.Object> array created in step 4.</span></span>  
  
 <span data-ttu-id="98b34-395">然后可以将传递这些数组<xref:System.Reflection.Emit.CustomAttributeBuilder>对象而不是`attributes`参数 [\]，程序集名称、 CustomAttributeBuilder\<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%2CSystem.Reflection.Emit.CustomAttributeBuilder%5B%5D%2CSystem.String%29 > 方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-395">You can then pass an array of these <xref:System.Reflection.Emit.CustomAttributeBuilder> objects instead of the `attributes` parameter to the [\], AssemblyName, CustomAttributeBuilder\<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%2CSystem.Reflection.Emit.CustomAttributeBuilder%5B%5D%2CSystem.String%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98b34-396">
            <paramref name="assemblyname" /> 参数的 <see cref="P:System.Reflection.AssemblyName.Name" /> 属性值是一个空字符串或 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-396">The value of the <paramref name="assemblyname" /> parameter's <see cref="P:System.Reflection.AssemblyName.Name" /> property is an empty or null string.</span>
          </span>
          <span data-ttu-id="98b34-397">- 或 -  <paramref name="regexinfos" /> 中的一个或多个对象的正则表达式模式包含无效语法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-397">-or-  The regular expression pattern of one or more objects in <paramref name="regexinfos" /> contains invalid syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-398">
            <paramref name="assemblyname" /> 或 <paramref name="regexinfos" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-398">
              <paramref name="assemblyname" /> or <paramref name="regexinfos" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="98b34-399">
            <paramref name="resourceFile" /> 参数指定了无效的 Win32 资源文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-399">The <paramref name="resourceFile" /> parameter designates an invalid Win32 resource file.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="98b34-400">找不到 <paramref name="resourceFile" /> 参数指定的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-400">The file designated by the <paramref name="resourceFile" /> parameter cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="98b34-401">仅 .NET Core：不支持创建已编译的正则表达式的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-401">.NET Core only: Creating an assembly of compiled regular expressions is not supported.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="98b34-402">
            <para>如果你正在开发的系统上 [！INCLUDE[net_v45](~/includes/net-v45-md.md)] 或安装其单点发行版，你确定目标 [！INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]，并且你使用<see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" />方法来创建该程序集包含已编译的正则表达式。尝试使用正则表达式之一在于，其在系统上的程序集 [！INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 引发异常。若要解决此问题，可以执行以下任一操作:-生成包含已编译的正则表达式具有的系统上的程序集 [！INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 改为更高版本的安装。 -而不是调用<see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" />和检索已编译的正则表达式从程序集，使用任一静态或实例<see cref="T:System.Text.RegularExpressions.Regex" />方法<see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" />选项在实例化<see cref="T:System.Text.RegularExpressions.Regex" />对象或调用正则表达式模式匹配方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-402">
              <para>If you are developing on a system that has [!INCLUDE[net_v45](~/includes/net-v45-md.md)] or its point releases installed, you target [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], and you use the <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> method to create an assembly that contains compiled regular expressions. Trying to use one of the regular expressions in that assembly on a system that has [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] throws an exception. To work around this problem, you can do either of the following:  -   Build the assembly that contains the compiled regular expressions on a system that has [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] instead of later versions installed.  -   Instead of calling <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> and retrieving the compiled regular expression from an assembly, use either static or instance <see cref="T:System.Text.RegularExpressions.Regex" /> methods with the <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> option when you instantiate a <see cref="T:System.Text.RegularExpressions.Regex" /> object or call a regular expression pattern matching method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Escape">
      <MemberSignature Language="C#" Value="public static string Escape (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Escape(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Escape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Escape (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Escape(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Escape : string -&gt; string" Usage="System.Text.RegularExpressions.Regex.Escape str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="98b34-403">包含要转换的文本的输入字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-403">The input string that contains the text to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-404">通过替换为转义码来转义最小的字符集（\\、\*、+、?、|、{、[、(、)、^、$、.、# 和空白）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-404">Escapes a minimal set of characters (\\, \*, +, ?, |, {, [, (,), ^, $,., #, and white space) by replacing them with their escape codes.</span>
          </span>
          <span data-ttu-id="98b34-405">这将指示正则表达式引擎按原义解释这些字符而不是解释为元字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-405">This instructs the regular expression engine to interpret these characters literally rather than as metacharacters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-406">由转换为转义形式的元字符组成的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-406">A string of characters with metacharacters converted to their escaped form.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-407"><xref:System.Text.RegularExpressions.Regex.Escape%2A> 将字符串转换，因此正则表达式引擎将解释为字符文本它可能包含任何元字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-407"><xref:System.Text.RegularExpressions.Regex.Escape%2A> converts a string so that the regular expression engine will interpret any metacharacters that it may contain as character literals.</span></span> <span data-ttu-id="98b34-408">例如，考虑正则表达式设计用于提取由左和右括号 （[和]） 从文本分隔的注释。</span><span class="sxs-lookup"><span data-stu-id="98b34-408">For example, consider a regular expression that is designed to extract comments that are delimited by straight opening and closing brackets ([ and ]) from text.</span></span> <span data-ttu-id="98b34-409">在下面的示例中，正则表达式"[(.\*?)]"被解释为字符类。</span><span class="sxs-lookup"><span data-stu-id="98b34-409">In the following example, the regular expression "[(.\*?)]" is interpreted as a character class.</span></span> <span data-ttu-id="98b34-410">而不是匹配输入文本中嵌入的注释，正则表达式匹配每个打开或右括号、 句点、 星号或问号。</span><span class="sxs-lookup"><span data-stu-id="98b34-410">Rather than matching comments embedded in the input text, the regular expression matches each opening or closing parenthesis, period, asterisk, or question mark.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Escape#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Escape/cs/Escape1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Escape#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Escape/vb/Escape1.vb#1)]  
  
 <span data-ttu-id="98b34-411">但是，如果将其传递到转义左大括号<xref:System.Text.RegularExpressions.Regex.Escape%2A>方法，正则表达式会成功匹配输入字符串中嵌入的注释中。</span><span class="sxs-lookup"><span data-stu-id="98b34-411">However, if the opening bracket is escaped by passing it to the <xref:System.Text.RegularExpressions.Regex.Escape%2A> method, the regular expression succeeds in matching comments that are embedded in the input string.</span></span> <span data-ttu-id="98b34-412">下面的示例阐释了这一点。</span><span class="sxs-lookup"><span data-stu-id="98b34-412">The following example illustrates this.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Escape#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Escape/cs/Escape1.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Regex.Escape#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Escape/vb/Escape1.vb#2)]  
  
 <span data-ttu-id="98b34-413">在正则表达式中使用静态文本定义，也可通过在前面加反斜杠符号转义的字符都会被解释按原义而不是为元字符 (\\) 以及通过调用<xref:System.Text.RegularExpressions.Regex.Escape%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-413">In a regular expression that is defined by using static text, characters that are to be interpreted literally rather than as metacharacters can be escaped by preceding them with a backslash symbol (\\) as well as by calling the <xref:System.Text.RegularExpressions.Regex.Escape%2A> method.</span></span> <span data-ttu-id="98b34-414">使用在设计时，不知道的字符以动态方式定义正则表达式中调用<xref:System.Text.RegularExpressions.Regex.Escape%2A>方法是确保，正则表达式引擎将单个字符解释为文本而不是特别重要比为元字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-414">In a regular expression that is defined dynamically using characters that are not known at design time, calling the <xref:System.Text.RegularExpressions.Regex.Escape%2A> method is particularly important to ensure that the regular expression engine interprets individual characters as literals rather than as metacharacters.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="98b34-415">如果正则表达式模式包含的数字符号 （#） 或文本空白字符，则必须进行转义如果输入的文本分析与<xref:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace?displayProperty=nameWithType>选项处于启用状态。</span><span class="sxs-lookup"><span data-stu-id="98b34-415">If a regular expression pattern includes either the number sign (#) or literal white-space characters, they must be escaped if input text is parsed with the <xref:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace?displayProperty=nameWithType> option enabled.</span></span>  
  
 <span data-ttu-id="98b34-416">虽然<xref:System.Text.RegularExpressions.Regex.Escape%2A>方法可转义直接打开方括号 ([)，并打开大括号 （{） 字符，它未转义其对应的结束字符 (] 和})。</span><span class="sxs-lookup"><span data-stu-id="98b34-416">While the <xref:System.Text.RegularExpressions.Regex.Escape%2A> method escapes the straight opening bracket ([) and opening brace ({) characters, it does not escape their corresponding closing characters (] and }).</span></span> <span data-ttu-id="98b34-417">在大多数情况下，这些转义没有必要。</span><span class="sxs-lookup"><span data-stu-id="98b34-417">In most cases, escaping these is not necessary.</span></span> <span data-ttu-id="98b34-418">如果其相应的开始字符不以右括号或大括号，正则表达式引擎将按原义解释它。</span><span class="sxs-lookup"><span data-stu-id="98b34-418">If a closing bracket or brace is not preceded by its corresponding opening character, the regular expression engine interprets it literally.</span></span> <span data-ttu-id="98b34-419">如果左括号或大括号被解释为元字符，正则表达式引擎会将解释第一个对应的结束字符为元字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-419">If an opening braket or brace is interpreted as a metacharacter, the regular expression engine interprets the first corresponding closing character as a metacharacter.</span></span> <span data-ttu-id="98b34-420">如果这不是所需的行为，应通过显式预先计算反斜杠转义右括号或大括号 (\\) 字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-420">If this is not the desired behavior, the closing bracket or brace should be escaped by explicitly prepending the backslash (\\) character.</span></span> <span data-ttu-id="98b34-421">有关说明，请参阅示例部分。</span><span class="sxs-lookup"><span data-stu-id="98b34-421">For an illustration, see the Example section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-422">下面的示例从文本中提取注释。</span><span class="sxs-lookup"><span data-stu-id="98b34-422">The following example extracts comments from text.</span></span> <span data-ttu-id="98b34-423">该示例假定，由开始注释符号，并由用户选择结束注释符号分隔的注释。</span><span class="sxs-lookup"><span data-stu-id="98b34-423">It assumes that the comments are delimited by a begin comment symbol and an end comment symbol that is selected by the user.</span></span> <span data-ttu-id="98b34-424">注释符号将按原义解释，因为它们传递给<xref:System.Text.RegularExpressions.Regex.Escape%2A>方法，以确保，它们不能被错误解释为元字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-424">Because the comment symbols are to be interpreted literally, they are passed to the <xref:System.Text.RegularExpressions.Regex.Escape%2A> method to ensure that they cannot be misinterpreted as metacharacters.</span></span> <span data-ttu-id="98b34-425">此外，此示例显式检查用户输入的结束注释符号是否为右括号 (]) 或大括号 （}）。</span><span class="sxs-lookup"><span data-stu-id="98b34-425">In addition, the example explicitly checks whether the end comment symbol entered by the user is a closing bracket (]) or brace (}).</span></span> <span data-ttu-id="98b34-426">如果是，反斜杠字符 (\\) 前面预置的大括号或大括号，以便它按原义解释。</span><span class="sxs-lookup"><span data-stu-id="98b34-426">If it is, a backslash character (\\) is prepended to the bracket or brace so that it is interpreted literally.</span></span> <span data-ttu-id="98b34-427">请注意，此示例还使用<xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType>集合以显示注释，而不是其开始和结束注释符号以及注释。</span><span class="sxs-lookup"><span data-stu-id="98b34-427">Note that the example also uses the <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType> collection to display the comment only, rather than the comment together with its opening and closing comment symbols.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Escape#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Escape/cs/Escape3.cs#3)]
 [!code-vb[System.Text.RegularExpressions.Regex.Escape#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Escape/vb/Escape3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-428">
            <paramref name="str" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-428">
              <paramref name="str" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.RegularExpressions.Regex.Unescape(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="factory">
      <MemberSignature Language="C#" Value="protected internal System.Text.RegularExpressions.RegexRunnerFactory factory;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly class System.Text.RegularExpressions.RegexRunnerFactory factory" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.Regex.factory" />
      <MemberSignature Language="VB.NET" Value="Protected Friend factory As RegexRunnerFactory " />
      <MemberSignature Language="C++ CLI" Value="protected public: System::Text::RegularExpressions::RegexRunnerFactory ^ factory;" />
      <MemberSignature Language="F#" Value="val mutable factory : System.Text.RegularExpressions.RegexRunnerFactory" Usage="System.Text.RegularExpressions.Regex.factory" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexRunnerFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98b34-429">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-429">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGroupNames">
      <MemberSignature Language="C#" Value="public string[] GetGroupNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetGroupNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.GetGroupNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGroupNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetGroupNames();" />
      <MemberSignature Language="F#" Value="member this.GetGroupNames : unit -&gt; string[]" Usage="regex.GetGroupNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="98b34-430">返回正则表达式的捕获组名数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-430">Returns an array of capturing group names for the regular expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-431">组名的字符串数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-431">A string array of group names.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-432">组名称的集合包含在表达式中的命名捕获组使用的字符串的集合。</span><span class="sxs-lookup"><span data-stu-id="98b34-432">The collection of group names contains the set of strings used to name capturing groups in the expression.</span></span> <span data-ttu-id="98b34-433">即使未显式命名捕获组，它们会自动分配数字的名称 ("0"、"1"、"2"、"3"，依此类推）。</span><span class="sxs-lookup"><span data-stu-id="98b34-433">Even if capturing groups are not explicitly named, they are automatically assigned numerical names ("0", "1", "2", "3", and so on).</span></span> <span data-ttu-id="98b34-434">"0"名为组表示由正则表达式模式匹配的所有文本。</span><span class="sxs-lookup"><span data-stu-id="98b34-434">The "0" named group represents all text matched by the regular expression pattern.</span></span> <span data-ttu-id="98b34-435">已编号的组在集合中，位于显式命名的组，并且已命名的组显示在正则表达式模式中定义的顺序。</span><span class="sxs-lookup"><span data-stu-id="98b34-435">Numbered groups precede explicitly named groups in the collection, and named groups appear in the order in which they are defined in the regular expression pattern.</span></span>  
  
 <span data-ttu-id="98b34-436">你可以使用<xref:System.Array.Length%2A>上返回此方法来确定的正则表达式中的组数的数组的属性。</span><span class="sxs-lookup"><span data-stu-id="98b34-436">You can use the <xref:System.Array.Length%2A> property on the array returned by this method to determine the number of groups in a regular expression.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-437">下面的示例定义通用`ShowMatches`显示的正则表达式组和其匹配的文本名称的方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-437">The following example defines a general-purpose `ShowMatches` method that displays the names of regular expression groups and their matched text.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.GetGroupNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.getgroupnames/cs/getgroupnames1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.GetGroupNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.getgroupnames/vb/getgroupnames1.vb#1)]  
  
 <span data-ttu-id="98b34-438">在此情况下，正则表达式模式`\b(?<FirstWord>\w+)\s?((\w+)\s)*(?<LastWord>\w+)?(?<Punctuation>\p{Po})`旨在分析简单句子，并以确定其第一个字，最后一个单词和结束标点符号。</span><span class="sxs-lookup"><span data-stu-id="98b34-438">In this case, the regular expression pattern `\b(?<FirstWord>\w+)\s?((\w+)\s)*(?<LastWord>\w+)?(?<Punctuation>\p{Po})` is intended to parse a simple sentence, and to identify its first word, last word, and ending punctuation mark.</span></span> <span data-ttu-id="98b34-439">下表演示了如何解释正则表达式模式：</span><span class="sxs-lookup"><span data-stu-id="98b34-439">The following table shows how the regular expression pattern is interpreted:</span></span>  
  
|<span data-ttu-id="98b34-440">模式</span><span class="sxs-lookup"><span data-stu-id="98b34-440">Pattern</span></span>|<span data-ttu-id="98b34-441">描述</span><span class="sxs-lookup"><span data-stu-id="98b34-441">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="98b34-442">在单词边界处开始匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-442">Begin the match at a word boundary.</span></span>|  
|`(?<FirstWord>\w+)`|<span data-ttu-id="98b34-443">匹配一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-443">Match one or more word characters.</span></span> <span data-ttu-id="98b34-444">这是`FirstWord`已命名的组。</span><span class="sxs-lookup"><span data-stu-id="98b34-444">This is the `FirstWord` named group.</span></span>|  
|<span data-ttu-id="98b34-445">\s？</span><span class="sxs-lookup"><span data-stu-id="98b34-445">\s?</span></span>|<span data-ttu-id="98b34-446">匹配零个或一个空白字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-446">Match zero or one white-space characters.</span></span>|  
|<span data-ttu-id="98b34-447">(\w+)</span><span class="sxs-lookup"><span data-stu-id="98b34-447">(\w+)</span></span>|<span data-ttu-id="98b34-448">匹配一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-448">Match one or more word characters.</span></span> <span data-ttu-id="98b34-449">这是第二个捕获组。</span><span class="sxs-lookup"><span data-stu-id="98b34-449">This is the second capturing group.</span></span>|  
|<span data-ttu-id="98b34-450">\s</span><span class="sxs-lookup"><span data-stu-id="98b34-450">\s</span></span>|<span data-ttu-id="98b34-451">与空白字符匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-451">Match a white-space character.</span></span>|  
|<span data-ttu-id="98b34-452">((\w+)\s)\*</span><span class="sxs-lookup"><span data-stu-id="98b34-452">((\w+)\s)\*</span></span>|<span data-ttu-id="98b34-453">匹配一个或多个单词字符后跟一个空白空格的零个或多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="98b34-453">Match zero or more occurrences of one or more word characters followed by a white space.</span></span> <span data-ttu-id="98b34-454">这是第一个捕获组。</span><span class="sxs-lookup"><span data-stu-id="98b34-454">This is the first capturing group.</span></span>|  
|<span data-ttu-id="98b34-455">(?\<LastWord > \w+)？</span><span class="sxs-lookup"><span data-stu-id="98b34-455">(?\<LastWord>\w+)?</span></span>|<span data-ttu-id="98b34-456">匹配一个或多个单词字符的零个或一个匹配的项。</span><span class="sxs-lookup"><span data-stu-id="98b34-456">Match zero or one occurrence of one or more word characters.</span></span> <span data-ttu-id="98b34-457">这是`LastWord`已命名的组。</span><span class="sxs-lookup"><span data-stu-id="98b34-457">This is the `LastWord` named group.</span></span>|  
|<span data-ttu-id="98b34-458">(?\<标点 > \p{Po})</span><span class="sxs-lookup"><span data-stu-id="98b34-458">(?\<Punctuation>\p{Po})</span></span>|<span data-ttu-id="98b34-459">匹配一个字符的 Unicode 类别是标点，其他。</span><span class="sxs-lookup"><span data-stu-id="98b34-459">Match a character whose Unicode category is Punctuation, Other.</span></span> <span data-ttu-id="98b34-460">这是`Punctuation`已命名的组。</span><span class="sxs-lookup"><span data-stu-id="98b34-460">This is the `Punctuation` named group.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.RegularExpressions.GroupCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetGroupNumbers">
      <MemberSignature Language="C#" Value="public int[] GetGroupNumbers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetGroupNumbers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.GetGroupNumbers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGroupNumbers () As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ GetGroupNumbers();" />
      <MemberSignature Language="F#" Value="member this.GetGroupNumbers : unit -&gt; int[]" Usage="regex.GetGroupNumbers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="98b34-461">返回与数组中的组名相对应的捕获组号的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-461">Returns an array of capturing group numbers that correspond to group names in an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-462">组号的整数数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-462">An integer array of group numbers.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-463">数，可以访问未命名和已命名的捕获组。</span><span class="sxs-lookup"><span data-stu-id="98b34-463">Both unnamed and named capturing groups can be accessed by number.</span></span> <span data-ttu-id="98b34-464">未命名的组是从左到右从 1 开始编号的。</span><span class="sxs-lookup"><span data-stu-id="98b34-464">Unnamed groups are numbered from left to right starting with 1.</span></span> <span data-ttu-id="98b34-465">（索引为 0 （零） 中的捕获组表示匹配作为一个整体。）已命名的组进行然后编号从左到右开头一个更大的数字比数未命名捕获组。</span><span class="sxs-lookup"><span data-stu-id="98b34-465">(The capturing group in index 0 (zero) represents the match as a whole.)  Named groups are then numbered from left to right starting with a number that is one greater than the number of unnamed capturing groups.</span></span>  
  
 <span data-ttu-id="98b34-466">通过字符串名称来引用其数量，而不是通过一组可提供更快的访问。</span><span class="sxs-lookup"><span data-stu-id="98b34-466">Referencing a group by its number instead of by string name can provide faster access.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-467">下面的示例定义正则表达式， `\b((?<word>\w+)\s*)+(?<end>[.?!])`，匹配的语句。</span><span class="sxs-lookup"><span data-stu-id="98b34-467">The following example defines a regular expression, `\b((?<word>\w+)\s*)+(?<end>[.?!])`, that matches a sentence.</span></span> <span data-ttu-id="98b34-468">正则表达式包含三个捕获组： 捕获各个单词，连同可能遵循其; 空白字符的未命名的组名为的组`word`捕获句子; 中的各单词和一组名为`end`捕获结束句子标点。</span><span class="sxs-lookup"><span data-stu-id="98b34-468">The regular expression includes three capturing groups: an unnamed group that captures an individual word along with a space character that may follow it; a group named `word` that captures the individual words in the sentence; and a group named `end` that captures the punctuation that ends the sentence.</span></span> <span data-ttu-id="98b34-469">该示例通过调用<xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A>方法以获取所有捕获的数字进行分组，，然后显示其捕获的字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-469">The example calls the <xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A> method to get the numbers of all capturing groups, and then displays their captured string.</span></span> <span data-ttu-id="98b34-470">此外，<xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A>方法用于指示特定编号的组是否对应于指定的一组。</span><span class="sxs-lookup"><span data-stu-id="98b34-470">In addition, the <xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A> method is used to indicate whether a particular numbered group corresponds to a named group.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.GetGroupNumbers#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.getgroupnumbers/cs/getgroupnumbers1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.GetGroupNumbers#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.getgroupnumbers/vb/getgroupnumbers1.vb#1)]  
  
 <span data-ttu-id="98b34-471">正则表达式模式可以解释为下表中所示内容。</span><span class="sxs-lookup"><span data-stu-id="98b34-471">The regular expression pattern is interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="98b34-472">模式</span><span class="sxs-lookup"><span data-stu-id="98b34-472">Pattern</span></span>|<span data-ttu-id="98b34-473">描述</span><span class="sxs-lookup"><span data-stu-id="98b34-473">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="98b34-474">在单词边界处开始匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-474">Begin the match at a word boundary.</span></span>|  
|`(?<word>\w+)`|<span data-ttu-id="98b34-475">匹配一个或多个单词字符并将匹配的字符串分配给名为的组`word`。</span><span class="sxs-lookup"><span data-stu-id="98b34-475">Match one or more word characters and assign the matched strings to a group named `word`.</span></span>|  
|`\s*`|<span data-ttu-id="98b34-476">匹配零个或多个空白字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-476">Match zero or more white-space characters.</span></span>|  
|`((?<word>\w+)\s*)`|<span data-ttu-id="98b34-477">分配`word`跟任何的捕获的组捕获到第一个捕获组的空白字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-477">Assign the `word` captured group followed by any captured white-space characters to the first captured group.</span></span>|  
|`((?<word>\w+)\s*)+`|<span data-ttu-id="98b34-478">匹配一个或多个次后跟任何空白字符的一个或多个单词字符的模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-478">Match the pattern of one or more word characters followed by any white-space characters one or more times.</span></span>|  
|`(?<end>[.?!])`|<span data-ttu-id="98b34-479">匹配句号、问号或感叹号。</span><span class="sxs-lookup"><span data-stu-id="98b34-479">Match a period, question mark, or exclamation point.</span></span> <span data-ttu-id="98b34-480">分配到的匹配的字符`end`捕获组。</span><span class="sxs-lookup"><span data-stu-id="98b34-480">Assign the matched character to the `end` capturing group.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.RegularExpressions.GroupCollection" />
      </Docs>
    </Member>
    <Member MemberName="GroupNameFromNumber">
      <MemberSignature Language="C#" Value="public string GroupNameFromNumber (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GroupNameFromNumber(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupNameFromNumber (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GroupNameFromNumber(int i);" />
      <MemberSignature Language="F#" Value="member this.GroupNameFromNumber : int -&gt; string" Usage="regex.GroupNameFromNumber i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="98b34-481">要转换为相应组名的组号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-481">The group number to convert to the corresponding group name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-482">获取与指定组号相对应的组名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-482">Gets the group name that corresponds to the specified group number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-483">包含与指定组号关联的组名的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-483">A string that contains the group name associated with the specified group number.</span>
          </span>
          <span data-ttu-id="98b34-484">如果没有与 <paramref name="i" /> 对应的组名，此方法会返回 <see cref="F:System.String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-484">If there is no group name that corresponds to <paramref name="i" />, the method returns <see cref="F:System.String.Empty" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-485">正则表达式模式可能包含命名或已编号捕获组，其中描述在模式匹配的子表达式。</span><span class="sxs-lookup"><span data-stu-id="98b34-485">A regular expression pattern may contain either named or numbered capturing groups, which delineate subexpressions within a pattern match.</span></span> <span data-ttu-id="98b34-486">已编号的组分隔的语法 (*子表达式*) 和分配根据其顺序正则表达式中的数字。</span><span class="sxs-lookup"><span data-stu-id="98b34-486">Numbered groups are delimited by the syntax (*subexpression*) and are assigned numbers based on their order in the regular expression.</span></span> <span data-ttu-id="98b34-487">已命名的组分隔的语法 (？`<`*名称*`>`*子表达式*) 或 (？*名称**子表达式*)，其中*名称*是子表达式将标识所依据的名称。</span><span class="sxs-lookup"><span data-stu-id="98b34-487">Named groups are delimited by the syntax (?`<`*name*`>`*subexpression*) or (?'*name*'*subexpression*), where *name* is the name by which the subexpression will be identified.</span></span> <span data-ttu-id="98b34-488">（有关详细信息，请参阅[分组构造](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md)。）<xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A>方法标识已命名的组和已编号的组通过其在正则表达式的序号位置。</span><span class="sxs-lookup"><span data-stu-id="98b34-488">(For more information, see [Grouping Constructs](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md).) The <xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A> method identifies both named groups and numbered groups by their ordinal positions in the regular expression.</span></span> <span data-ttu-id="98b34-489">序号位置零始终表示整个正则表达式。</span><span class="sxs-lookup"><span data-stu-id="98b34-489">Ordinal position zero always represents the entire regular expression.</span></span> <span data-ttu-id="98b34-490">所有编号组将然后计算之前已命名的组，而不考虑其在正则表达式模式中的实际位置。</span><span class="sxs-lookup"><span data-stu-id="98b34-490">All numbered groups are then counted before named groups, regardless of their actual position in the regular expression pattern.</span></span>  
  
 <span data-ttu-id="98b34-491">如果`i`是数的命名组，该方法返回组的名称。</span><span class="sxs-lookup"><span data-stu-id="98b34-491">If `i` is the number of a named group, the method returns the name of the group.</span></span> <span data-ttu-id="98b34-492">如果`i`是数的未命名的组中，该方法返回的字符串表示形式数。</span><span class="sxs-lookup"><span data-stu-id="98b34-492">If `i` is the number of an unnamed group, the method returns the string representation of the number.</span></span> <span data-ttu-id="98b34-493">例如，如果`i`为 1，该方法返回"1"。</span><span class="sxs-lookup"><span data-stu-id="98b34-493">For example, if `i` is 1, the method returns "1".</span></span> <span data-ttu-id="98b34-494">如果`i`不是数字的捕获组，该方法返回<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="98b34-494">If `i` is not the number of a capturing group, the method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="98b34-495">如果找到模式匹配，则此方法返回的值随后可检索<xref:System.Text.RegularExpressions.Group>对象，表示从捕获的组<xref:System.Text.RegularExpressions.GroupCollection.Item%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="98b34-495">If a pattern match is found, the value returned by this method can then be used to retrieve the <xref:System.Text.RegularExpressions.Group> object that represents the captured group from the <xref:System.Text.RegularExpressions.GroupCollection.Item%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="98b34-496"><xref:System.Text.RegularExpressions.GroupCollection>会返回对象<xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="98b34-496">The <xref:System.Text.RegularExpressions.GroupCollection> object is returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-497">下面的示例定义匹配包含美国城市名称、 状态名称和邮政编码的地址行的正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-497">The following example defines a regular expression pattern that matches an address line containing a U.S. city name, state name, and zip code.</span></span> <span data-ttu-id="98b34-498">该示例使用<xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A>方法来检索捕获组的名称。</span><span class="sxs-lookup"><span data-stu-id="98b34-498">The example uses the <xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A> method to retrieve the names of capturing groups.</span></span> <span data-ttu-id="98b34-499">它然后使用这些名称的匹配项中检索相应的捕获的组。</span><span class="sxs-lookup"><span data-stu-id="98b34-499">It then uses these names to retrieve the corresponding captured groups for matches.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.GroupNameFromNumber#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.groupnamefromnumber/cs/groupnamefromnumberex.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.GroupNameFromNumber#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.groupnamefromnumber/vb/groupnamefromnumberex.vb#1)]  
  
 <span data-ttu-id="98b34-500">以下表达式所定义的正则表达式模式：</span><span class="sxs-lookup"><span data-stu-id="98b34-500">The regular expression pattern is defined by the following expression:</span></span>  
  
 `(?<city>[A-Za-z\s]+), (?<state>[A-Za-z]{2}) (?<zip>\d{5}(-\d{4})?)`  
  
 <span data-ttu-id="98b34-501">下表演示了如何解释正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-501">The following table shows how the regular expression pattern is interpreted.</span></span>  
  
|<span data-ttu-id="98b34-502">模式</span><span class="sxs-lookup"><span data-stu-id="98b34-502">Pattern</span></span>|<span data-ttu-id="98b34-503">描述</span><span class="sxs-lookup"><span data-stu-id="98b34-503">Description</span></span>|  
|-------------|-----------------|  
|`(?<city>[A-Za-z\s]+)`|<span data-ttu-id="98b34-504">匹配一个或多个字母字符或空白字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-504">Match one or more alphabetic or white-space character.</span></span> <span data-ttu-id="98b34-505">将此捕获的组的名称分配`city`。</span><span class="sxs-lookup"><span data-stu-id="98b34-505">Assign this captured group the name `city`.</span></span>|  
|`,`|<span data-ttu-id="98b34-506">匹配后跟一个空白字符的逗号 （，）。</span><span class="sxs-lookup"><span data-stu-id="98b34-506">Match a comma (,) followed by a white-space character.</span></span>|  
|`(?<state>[A-Za-z]{2})`|<span data-ttu-id="98b34-507">匹配两个字母的字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-507">Match two alphabetic characters.</span></span> <span data-ttu-id="98b34-508">将此捕获的组的名称分配`state`。</span><span class="sxs-lookup"><span data-stu-id="98b34-508">Assign this captured group the name `state`.</span></span> <span data-ttu-id="98b34-509">此组应跟一个空白字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-509">This group should be followed by a white-space character.</span></span>|  
|`(?<zip>\d{5}(-\d{4})?)`|<span data-ttu-id="98b34-510">匹配跟的连字符后跟四个数字的零个或一个匹配项的五个数字。</span><span class="sxs-lookup"><span data-stu-id="98b34-510">Match five numeric digits followed by either zero or one occurrence of a hyphen followed by four digits.</span></span> <span data-ttu-id="98b34-511">将此捕获的组的名称分配`zip`。</span><span class="sxs-lookup"><span data-stu-id="98b34-511">Assign this captured group the name `zip`.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.RegularExpressions.GroupCollection" />
        <altmember cref="M:System.Text.RegularExpressions.Regex.GetGroupNumbers" />
      </Docs>
    </Member>
    <Member MemberName="GroupNumberFromName">
      <MemberSignature Language="C#" Value="public int GroupNumberFromName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GroupNumberFromName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupNumberFromName (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GroupNumberFromName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GroupNumberFromName : string -&gt; int" Usage="regex.GroupNumberFromName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="98b34-512">要转换为相应组号的组名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-512">The group name to convert to the corresponding group number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-513">返回与指定组名相对应的组号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-513">Returns the group number that corresponds to the specified group name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-514">与指定组名相对应的组号，如果 <paramref name="name" /> 不是有效组名，则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-514">The group number that corresponds to the specified group name, or -1 if <paramref name="name" /> is not a valid group name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-515">正则表达式模式可能包含命名或已编号捕获组，其中描述在模式匹配的子表达式。</span><span class="sxs-lookup"><span data-stu-id="98b34-515">A regular expression pattern may contain either named or numbered capturing groups, which delineate subexpressions within a pattern match.</span></span> <span data-ttu-id="98b34-516">已编号的组分隔的语法 (*子表达式*) 和分配根据其顺序正则表达式中的数字。</span><span class="sxs-lookup"><span data-stu-id="98b34-516">Numbered groups are delimited by the syntax (*subexpression*) and are assigned numbers based on their order in the regular expression.</span></span> <span data-ttu-id="98b34-517">已命名的组分隔的语法 (？`<`*名称*`>`*子表达式*) 或 (？*名称**子表达式*)，其中*名称*是子表达式将标识所依据的名称。</span><span class="sxs-lookup"><span data-stu-id="98b34-517">Named groups are delimited by the syntax (?`<`*name*`>`*subexpression*) or (?'*name*'*subexpression*), where *name* is the name by which the subexpression will be identified.</span></span> <span data-ttu-id="98b34-518">（有关详细信息，请参阅[分组构造](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md)。）<xref:System.Text.RegularExpressions.Regex.GroupNumberFromName%2A>方法标识已命名的组和已编号的组通过其在正则表达式的序号位置。</span><span class="sxs-lookup"><span data-stu-id="98b34-518">(For more information, see [Grouping Constructs](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md).) The <xref:System.Text.RegularExpressions.Regex.GroupNumberFromName%2A> method identifies both named groups and numbered groups by their ordinal positions in the regular expression.</span></span> <span data-ttu-id="98b34-519">序号位置零始终表示整个正则表达式。</span><span class="sxs-lookup"><span data-stu-id="98b34-519">Ordinal position zero always represents the entire regular expression.</span></span> <span data-ttu-id="98b34-520">所有编号组将然后计算之前已命名的组，而不考虑其在正则表达式模式中的实际位置。</span><span class="sxs-lookup"><span data-stu-id="98b34-520">All numbered groups are then counted before named groups, regardless of their actual position in the regular expression pattern.</span></span>  
  
 <span data-ttu-id="98b34-521">如果`name`是组号显示在正则表达式模式中，该方法将返回该数字的字符串表示。</span><span class="sxs-lookup"><span data-stu-id="98b34-521">If `name` is the string representation of a group number that is present in the regular expression pattern, the method returns that number.</span></span> <span data-ttu-id="98b34-522">如果`name`对应于命名捕获在正则表达式模式中存在的组，该方法返回其对应的编号。</span><span class="sxs-lookup"><span data-stu-id="98b34-522">If `name` corresponds to a named capturing group that is present in the regular expression pattern, the method returns its corresponding number.</span></span> <span data-ttu-id="98b34-523">比较`name`使用组名称是区分大小写。</span><span class="sxs-lookup"><span data-stu-id="98b34-523">The comparison of `name` with the group name is case-sensitive.</span></span> <span data-ttu-id="98b34-524">如果`name`不对应到捕获组的名称或数字字符串表示形式的捕获组，该方法将返回-1。</span><span class="sxs-lookup"><span data-stu-id="98b34-524">If `name` does not correspond to the name of a capturing group or to the string representation of the number of a capturing group, the method returns -1.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-525">
            <paramref name="name" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-525">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.RegularExpressions.GroupCollection" />
        <altmember cref="M:System.Text.RegularExpressions.Regex.GetGroupNames" />
      </Docs>
    </Member>
    <Member MemberName="InfiniteMatchTimeout">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan InfiniteMatchTimeout;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan InfiniteMatchTimeout" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InfiniteMatchTimeout As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan InfiniteMatchTimeout;" />
      <MemberSignature Language="F#" Value=" staticval mutable InfiniteMatchTimeout : TimeSpan" Usage="System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98b34-526">指定模式匹配操作不应超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-526">Specifies that a pattern-matching operation should not time out.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-527"><xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>类构造函数和多个静态匹配方法使用<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout>常量，以指示尝试查找模式匹配应不会超时。</span><span class="sxs-lookup"><span data-stu-id="98b34-527">The <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> class constructor and a number of static matching methods use the <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout> constant to indicate that the attempt to find a pattern match should not time out.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="98b34-528">将正则表达式引擎的超时值设置为<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout>可能会导致依赖于过度回溯能够看上去像在处理与正则表达式模式近似匹配的文本时停止响应的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="98b34-528">Setting the regular expression engine's time-out value to <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout> can cause regular expressions that rely on excessive backtracking to appear to stop responding when processing text that nearly matches the regular expression pattern.</span></span> <span data-ttu-id="98b34-529">如果禁用超时值时，应确保你正则表达式不依赖于过度回溯的约束和处理与正则表达式模式近似匹配的文本。</span><span class="sxs-lookup"><span data-stu-id="98b34-529">If you disable time-outs, you should ensure that your regular expression does not rely on excessive backtracking and that it handles text that nearly matches the regular expression pattern.</span></span>  
>   
>  <span data-ttu-id="98b34-530">有关处理回溯的详细信息，请参阅[回溯](~/docs/standard/base-types/backtracking-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-530">For more information about handling backtracking, see [Backtracking](~/docs/standard/base-types/backtracking-in-regular-expressions.md).</span></span>  
  
 <span data-ttu-id="98b34-531"><xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout>常量可以提供的值作为`matchTimeout`自变量的以下成员：</span><span class="sxs-lookup"><span data-stu-id="98b34-531">The <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout> constant can be supplied as the value of the `matchTimeout` argument of the following members:</span></span>  
  
-   <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>  
  
-   <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29?displayProperty=nameWithType>  
  
-   <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>  
  
-   <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>  
  
-   <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>  
  
-   <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>  
  
-   <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>  
  
-   <xref:System.Text.RegularExpressions.Regex.Split%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.RegularExpressions.Regex.MatchTimeout" />
      </Docs>
    </Member>
    <Member MemberName="InitializeReferences">
      <MemberSignature Language="C#" Value="protected void InitializeReferences ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InitializeReferences() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.InitializeReferences" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InitializeReferences ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InitializeReferences();" />
      <MemberSignature Language="F#" Value="member this.InitializeReferences : unit -&gt; unit" Usage="regex.InitializeReferences " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="98b34-532">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-532">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="98b34-533">引用已初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-533">References have already been initialized.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="internalMatchTimeout">
      <MemberSignature Language="C#" Value="protected internal TimeSpan internalMatchTimeout;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly valuetype System.TimeSpan internalMatchTimeout" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.Regex.internalMatchTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Friend internalMatchTimeout As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="protected public: TimeSpan internalMatchTimeout;" />
      <MemberSignature Language="F#" Value="val mutable internalMatchTimeout : TimeSpan" Usage="System.Text.RegularExpressions.Regex.internalMatchTimeout" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.OptionalField(VersionAdded=2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98b34-534">操作超时之前在一个模式匹配操作中可以经过的最长时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-534">The maximum amount of time that can elapse in a pattern-matching operation before the operation times out.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsMatch">
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="98b34-535">指示正则表达式在输入字符串中是否找到匹配项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-535">Indicates whether the regular expression finds a match in the input string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsMatch">
      <MemberSignature Language="C#" Value="public bool IsMatch (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsMatch(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.IsMatch(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsMatch (input As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsMatch(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.IsMatch : string -&gt; bool" Usage="regex.IsMatch input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-536">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-536">The string to search for a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-537">指示 <see cref="T:System.Text.RegularExpressions.Regex" /> 构造函数中指定的正则表达式在指定的输入字符串中是否找到了匹配项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-537">Indicates whether the regular expression specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor finds a match in a specified input string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-538">如果正则表达式找到匹配项，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-538">
              <see langword="true" /> if the regular expression finds a match; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-539"><xref:System.Text.RegularExpressions.Regex.IsMatch%2A>方法通常用于验证字符串或以确保符合特定模式的字符串而不检索该字符串以进行后续操作。</span><span class="sxs-lookup"><span data-stu-id="98b34-539">The <xref:System.Text.RegularExpressions.Regex.IsMatch%2A> method is typically used to validate a string or to ensure that a string conforms to a particular pattern without retrieving that string for subsequent manipulation.</span></span> <span data-ttu-id="98b34-540">如果你想要确定是否一个或多个字符串与正则表达式模式匹配，然后检索成员以进行后续操作，调用<xref:System.Text.RegularExpressions.Regex.Match%2A>或<xref:System.Text.RegularExpressions.Regex.Matches%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-540">If you want to determine whether one or more strings match a regular expression pattern and then retrieve them for subsequent manipulation, call the <xref:System.Text.RegularExpressions.Regex.Match%2A> or <xref:System.Text.RegularExpressions.Regex.Matches%2A> method.</span></span>  
  
 <span data-ttu-id="98b34-541"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果匹配操作的执行时间超出指定的超时间隔将引发异常<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-541">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the matching operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="98b34-542">如果该操作超过应用程序域建立在其中任何超时值时调用的构造函数未设置的超时间隔，如果引发异常<xref:System.Text.RegularExpressions.Regex>创建对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-542">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="98b34-543">如果在中定义无超时<xref:System.Text.RegularExpressions.Regex>构造函数调用或在应用程序域的属性中，或如果超时值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-543">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-544">下面的示例演示如何使用<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%29>方法来确定字符串是否是有效的部件号。</span><span class="sxs-lookup"><span data-stu-id="98b34-544">The following example illustrates the use of the <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%29> method to determine whether a string is a valid part number.</span></span> <span data-ttu-id="98b34-545">正则表达式假定部件号具有特定的格式，其中包含的三个连字符分隔的字符集。</span><span class="sxs-lookup"><span data-stu-id="98b34-545">The regular expression assumes that the part number has a specific format that consists of three sets of characters separated by hyphens.</span></span> <span data-ttu-id="98b34-546">第一组，其中包含四个字符，必须以字母数字字符后跟两个数字字符后跟字母数字字符组成。</span><span class="sxs-lookup"><span data-stu-id="98b34-546">The first set, which contains four characters, must consist of an alphanumeric character followed by two numeric characters followed by an alphanumeric character.</span></span> <span data-ttu-id="98b34-547">第二组，包含三个字符，必须为数字。</span><span class="sxs-lookup"><span data-stu-id="98b34-547">The second set, which consists of three characters, must be numeric.</span></span> <span data-ttu-id="98b34-548">第三个集，其中包含四个字符，必须具有三个数字字符后跟字母数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-548">The third set, which consists of four characters, must have three numeric characters followed by an alphanumeric character.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.IsMatch#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/cs/ismatch2.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Regex.IsMatch#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/vb/ismatch2.vb#2)]  
  
 <span data-ttu-id="98b34-549">正则表达式模式为：</span><span class="sxs-lookup"><span data-stu-id="98b34-549">The regular expression pattern is:</span></span>  
  
```  
^[a-zA-Z0-9]\d{2}[a-zA-Z0-9](-\d{3}){2}[A-Za-z0-9]$  
```  
  
 <span data-ttu-id="98b34-550">下表演示了如何解释正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-550">The following table shows how the regular expression pattern is interpreted.</span></span>  
  
|<span data-ttu-id="98b34-551">模式</span><span class="sxs-lookup"><span data-stu-id="98b34-551">Pattern</span></span>|<span data-ttu-id="98b34-552">描述</span><span class="sxs-lookup"><span data-stu-id="98b34-552">Description</span></span>|  
|-------------|-----------------|  
|`^`|<span data-ttu-id="98b34-553">处开始匹配行的开头。</span><span class="sxs-lookup"><span data-stu-id="98b34-553">Begin the match at the beginning of the line.</span></span>|  
|`[a-zA-Z0-9]`|<span data-ttu-id="98b34-554">匹配的单个字母字符 (`a`通过`z`或`A`通过`Z`) 或数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-554">Match a single alphabetic character (`a` through `z` or `A` through `Z`) or numeric character.</span></span>|  
|`\d{2}`|<span data-ttu-id="98b34-555">匹配两个数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-555">Match two numeric characters.</span></span>|  
|`[a-zA-Z0-9]`|<span data-ttu-id="98b34-556">匹配的单个字母字符 (`a`通过`z`或`A`通过`Z`) 或数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-556">Match a single alphabetic character (`a` through `z` or `A` through `Z`) or numeric character.</span></span>|  
|`-`|<span data-ttu-id="98b34-557">匹配连字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-557">Match a hyphen.</span></span>|  
|`\d{3}`|<span data-ttu-id="98b34-558">匹配 3 个数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-558">Match exactly three numeric characters.</span></span>|  
|`(-\d{3}){2}`|<span data-ttu-id="98b34-559">找到连字符后跟三个数字字符，并将匹配此模式的两个匹配项。</span><span class="sxs-lookup"><span data-stu-id="98b34-559">Find a hyphen followed by three numeric characters, and match two occurrences of this pattern.</span></span>|  
|`[a-zA-Z0-9]`|<span data-ttu-id="98b34-560">匹配的单个字母字符 (`a`通过`z`或`A`通过`Z`) 或数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-560">Match a single alphabetic character (`a` through `z` or `A` through `Z`) or numeric character.</span></span>|  
|`$`|<span data-ttu-id="98b34-561">处结束匹配行的末尾。</span><span class="sxs-lookup"><span data-stu-id="98b34-561">End the match at the end of the line.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-562">
            <paramref name="input" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-562">
              <paramref name="input" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-563">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-563">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-564">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-564">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsMatch">
      <MemberSignature Language="C#" Value="public bool IsMatch (string input, int startat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsMatch(string input, int32 startat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsMatch (input As String, startat As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsMatch(System::String ^ input, int startat);" />
      <MemberSignature Language="F#" Value="member this.IsMatch : string * int -&gt; bool" Usage="regex.IsMatch (input, startat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="startat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-565">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-565">The string to search for a match.</span>
          </span>
        </param>
        <param name="startat">
          <span data-ttu-id="98b34-566">开始搜索的字符位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-566">The character position at which to start the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-567">指示 <see cref="T:System.Text.RegularExpressions.Regex" /> 构造函数中指定的正则表达式在指定的输入字符串中，从该字符串中的指定起始位置开始是否找到了匹配项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-567">Indicates whether the regular expression specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor finds a match in the specified input string, beginning at the specified starting position in the string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-568">如果正则表达式找到匹配项，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-568">
              <see langword="true" /> if the regular expression finds a match; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-569"><xref:System.Text.RegularExpressions.Regex.IsMatch%2A>方法通常用于验证字符串或以确保符合特定模式的字符串而不检索该字符串以进行后续操作。</span><span class="sxs-lookup"><span data-stu-id="98b34-569">The <xref:System.Text.RegularExpressions.Regex.IsMatch%2A> method is typically used to validate a string or to ensure that a string conforms to a particular pattern without retrieving that string for subsequent manipulation.</span></span> <span data-ttu-id="98b34-570">如果你想要确定是否一个或多个字符串与正则表达式模式匹配，然后检索成员以进行后续操作，调用<xref:System.Text.RegularExpressions.Regex.Match%2A>或<xref:System.Text.RegularExpressions.Regex.Matches%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-570">If you want to determine whether one or more strings match a regular expression pattern and then retrieve them for subsequent manipulation, call the <xref:System.Text.RegularExpressions.Regex.Match%2A> or <xref:System.Text.RegularExpressions.Regex.Matches%2A> method.</span></span>  
  
 <span data-ttu-id="98b34-571"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果匹配操作的执行时间超出指定的超时间隔将引发异常<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-571">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the matching operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="98b34-572">如果该操作超过应用程序域建立在其中任何超时值时调用的构造函数未设置的超时间隔，如果引发异常<xref:System.Text.RegularExpressions.Regex>创建对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-572">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="98b34-573">如果在中定义无超时<xref:System.Text.RegularExpressions.Regex>构造函数调用或在应用程序域的属性中，或如果超时值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-573">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-574">下面的示例演示如何使用<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.Int32%29>方法来确定字符串是否是有效的部件号。</span><span class="sxs-lookup"><span data-stu-id="98b34-574">The following example illustrates the use of the <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.Int32%29> method to determine whether a string is a valid part number.</span></span> <span data-ttu-id="98b34-575">它搜索跟随字符串中的冒号 （:） 字符的部件号。</span><span class="sxs-lookup"><span data-stu-id="98b34-575">It searches for a part number that follows a colon (:) character in a string.</span></span> <span data-ttu-id="98b34-576"><xref:System.String.IndexOf%28System.Char%29>方法用于确定冒号字符，然后传递到的位置<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.Int32%29>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-576">The <xref:System.String.IndexOf%28System.Char%29> method is used to determine the position of the colon character, which is then passed to the <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="98b34-577">正则表达式假定部件号具有特定的格式，其中包含的三个连字符分隔的字符集。</span><span class="sxs-lookup"><span data-stu-id="98b34-577">The regular expression assumes that the part number has a specific format that consists of three sets of characters separated by hyphens.</span></span> <span data-ttu-id="98b34-578">第一组，其中包含四个字符，必须以字母数字字符后跟两个数字字符后跟字母数字字符组成。</span><span class="sxs-lookup"><span data-stu-id="98b34-578">The first set, which contains four characters, must consist of an alphanumeric character followed by two numeric characters followed by an alphanumeric character.</span></span> <span data-ttu-id="98b34-579">第二组，包含三个字符，必须为数字。</span><span class="sxs-lookup"><span data-stu-id="98b34-579">The second set, which consists of three characters, must be numeric.</span></span> <span data-ttu-id="98b34-580">第三个集，其中包含四个字符，必须具有三个数字字符后跟字母数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-580">The third set, which consists of four characters, must have three numeric characters followed by an alphanumeric character.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.IsMatch#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/cs/ismatch3.cs#3)]
 [!code-vb[System.Text.RegularExpressions.Regex.IsMatch#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/vb/ismatch3.vb#3)]  
  
 <span data-ttu-id="98b34-581">正则表达式模式为：</span><span class="sxs-lookup"><span data-stu-id="98b34-581">The regular expression pattern is:</span></span>  
  
```  
[a-zA-Z0-9]\d{2}[a-zA-Z0-9](-\d{3}){2}[A-Za-z0-9]$  
```  
  
 <span data-ttu-id="98b34-582">下表演示了如何解释正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-582">The following table shows how the regular expression pattern is interpreted.</span></span>  
  
|<span data-ttu-id="98b34-583">模式</span><span class="sxs-lookup"><span data-stu-id="98b34-583">Pattern</span></span>|<span data-ttu-id="98b34-584">描述</span><span class="sxs-lookup"><span data-stu-id="98b34-584">Description</span></span>|  
|-------------|-----------------|  
|`[a-zA-Z0-9]`|<span data-ttu-id="98b34-585">匹配的单个字母字符 (`a`通过`z`或`A`通过`Z`) 或数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-585">Match a single alphabetic character (`a` through `z` or `A` through `Z`) or numeric character.</span></span>|  
|`\d{2}`|<span data-ttu-id="98b34-586">匹配两个数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-586">Match two numeric characters.</span></span>|  
|`[a-zA-Z0-9]`|<span data-ttu-id="98b34-587">匹配的单个字母字符 (`a`通过`z`或`A`通过`Z`) 或数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-587">Match a single alphabetic character (`a` through `z` or `A` through `Z`) or numeric character.</span></span>|  
|`-`|<span data-ttu-id="98b34-588">匹配连字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-588">Match a hyphen.</span></span>|  
|`\d{3}`|<span data-ttu-id="98b34-589">匹配 3 个数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-589">Match exactly three numeric characters.</span></span>|  
|`(-\d{3}){2}`|<span data-ttu-id="98b34-590">找到连字符后跟三个数字字符，并将匹配此模式的两个匹配项。</span><span class="sxs-lookup"><span data-stu-id="98b34-590">Find a hyphen followed by three numeric characters, and match two occurrences of this pattern.</span></span>|  
|`[a-zA-Z0-9]`|<span data-ttu-id="98b34-591">匹配的单个字母字符 (`a`通过`z`或`A`通过`Z`) 或数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-591">Match a single alphabetic character (`a` through `z` or `A` through `Z`) or numeric character.</span></span>|  
|`$`|<span data-ttu-id="98b34-592">处结束匹配行的末尾。</span><span class="sxs-lookup"><span data-stu-id="98b34-592">End the match at the end of the line.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-593">
            <paramref name="input" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-593">
              <paramref name="input" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98b34-594">
            <paramref name="startat" /> 小于零或大于 <paramref name="input" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-594">
              <paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-595">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-595">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-596">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-596">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsMatch">
      <MemberSignature Language="C#" Value="public static bool IsMatch (string input, string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMatch(string input, string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMatch (input As String, pattern As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsMatch(System::String ^ input, System::String ^ pattern);" />
      <MemberSignature Language="F#" Value="static member IsMatch : string * string -&gt; bool" Usage="System.Text.RegularExpressions.Regex.IsMatch (input, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-597">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-597">The string to search for a match.</span>
          </span>
        </param>
        <param name="pattern">
          <span data-ttu-id="98b34-598">要匹配的正则表达式模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-598">The regular expression pattern to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-599">指示所指定的正则表达式在指定的输入字符串中是否找到了匹配项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-599">Indicates whether the specified regular expression finds a match in the specified input string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-600">如果正则表达式找到匹配项，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-600">
              <see langword="true" /> if the regular expression finds a match; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-601"><xref:System.Text.RegularExpressions.Regex.IsMatch%2A>方法通常用于验证字符串或以确保符合特定模式的字符串而不检索该字符串以进行后续操作。</span><span class="sxs-lookup"><span data-stu-id="98b34-601">The <xref:System.Text.RegularExpressions.Regex.IsMatch%2A> method is typically used to validate a string or to ensure that a string conforms to a particular pattern without retrieving that string for subsequent manipulation.</span></span> <span data-ttu-id="98b34-602">如果你想要确定是否一个或多个字符串与正则表达式模式匹配，然后检索成员以进行后续操作，调用<xref:System.Text.RegularExpressions.Regex.Match%2A>或<xref:System.Text.RegularExpressions.Regex.Matches%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-602">If you want to determine whether one or more strings match a regular expression pattern and then retrieve them for subsequent manipulation, call the <xref:System.Text.RegularExpressions.Regex.Match%2A> or <xref:System.Text.RegularExpressions.Regex.Matches%2A> method.</span></span>  
  
 <span data-ttu-id="98b34-603">静态<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%29>方法相当于构造<xref:System.Text.RegularExpressions.Regex>与指定的正则表达式模式的对象`pattern`并调用<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%29>实例方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-603">The static <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%29> method is equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the regular expression pattern specified by `pattern` and calling the <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%29> instance method.</span></span> <span data-ttu-id="98b34-604">此正则表达式模式由正则表达式引擎缓存以便进行快速检索。</span><span class="sxs-lookup"><span data-stu-id="98b34-604">This regular expression pattern is cached for rapid retrieval by the regular expression engine.</span></span>  
  
 <span data-ttu-id="98b34-605">`pattern`参数包含以符号方式描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-605">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="98b34-606">有关正则表达式的详细信息，请参阅[.NET Framework 正则表达式](~/docs/standard/base-types/regular-expressions.md)和[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-606">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="98b34-607"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果匹配操作的执行时间超出指定的方法称为应用程序域的超时间隔将引发异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-607">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the matching operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="98b34-608">如果没有超时设置定义在应用程序域的属性中，或者如果超时值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-608">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-609">下面的示例演示如何使用<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%29>方法来确定字符串是否是有效的部件号。</span><span class="sxs-lookup"><span data-stu-id="98b34-609">The following example illustrates the use of the <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%29> method to determine whether a string is a valid part number.</span></span> <span data-ttu-id="98b34-610">正则表达式假定部件号具有特定的格式，其中包含的三个连字符分隔的字符集。</span><span class="sxs-lookup"><span data-stu-id="98b34-610">The regular expression assumes that the part number has a specific format that consists of three sets of characters separated by hyphens.</span></span> <span data-ttu-id="98b34-611">第一组，其中包含四个字符，必须以字母数字字符后跟两个数字字符后跟字母数字字符组成。</span><span class="sxs-lookup"><span data-stu-id="98b34-611">The first set, which contains four characters, must consist of an alphanumeric character followed by two numeric characters followed by an alphanumeric character.</span></span> <span data-ttu-id="98b34-612">第二组，包含三个字符，必须为数字。</span><span class="sxs-lookup"><span data-stu-id="98b34-612">The second set, which consists of three characters, must be numeric.</span></span> <span data-ttu-id="98b34-613">第三个集，其中包含四个字符，必须具有三个数字字符后跟字母数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-613">The third set, which consists of four characters, must have three numeric characters followed by an alphanumeric character.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.IsMatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/cs/ismatch1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.IsMatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/vb/ismatch1.vb#1)]  
  
 <span data-ttu-id="98b34-614">正则表达式模式为：</span><span class="sxs-lookup"><span data-stu-id="98b34-614">The regular expression pattern is:</span></span>  
  
```  
^[a-zA-Z0-9]\d{2}[a-zA-Z0-9](-\d{3}){2}[A-Za-z0-9]$  
```  
  
 <span data-ttu-id="98b34-615">下表演示了如何解释正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-615">The following table shows how the regular expression pattern is interpreted.</span></span>  
  
|<span data-ttu-id="98b34-616">模式</span><span class="sxs-lookup"><span data-stu-id="98b34-616">Pattern</span></span>|<span data-ttu-id="98b34-617">描述</span><span class="sxs-lookup"><span data-stu-id="98b34-617">Description</span></span>|  
|-------------|-----------------|  
|`^`|<span data-ttu-id="98b34-618">处开始匹配行的开头。</span><span class="sxs-lookup"><span data-stu-id="98b34-618">Begin the match at the beginning of the line.</span></span>|  
|`[a-zA-Z0-9]`|<span data-ttu-id="98b34-619">匹配的单个字母字符 (`a`通过`z`或`A`通过`Z`) 或数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-619">Match a single alphabetic character (`a` through `z` or `A` through `Z`) or numeric character.</span></span>|  
|`\d{2}`|<span data-ttu-id="98b34-620">匹配两个数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-620">Match two numeric characters.</span></span>|  
|`[a-zA-Z0-9]`|<span data-ttu-id="98b34-621">匹配的单个字母字符 (`a`通过`z`或`A`通过`Z`) 或数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-621">Match a single alphabetic character (`a` through `z` or `A` through `Z`) or numeric character.</span></span>|  
|`-`|<span data-ttu-id="98b34-622">匹配连字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-622">Match a hyphen.</span></span>|  
|`\d{3}`|<span data-ttu-id="98b34-623">匹配 3 个数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-623">Match exactly three numeric characters.</span></span>|  
|`(-\d{3}){2}`|<span data-ttu-id="98b34-624">找到连字符后跟三个数字字符，并将匹配此模式的两个匹配项。</span><span class="sxs-lookup"><span data-stu-id="98b34-624">Find a hyphen followed by three numeric characters, and match two occurrences of this pattern.</span></span>|  
|`[a-zA-Z0-9]`|<span data-ttu-id="98b34-625">匹配的单个字母字符 (`a`通过`z`或`A`通过`Z`) 或数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-625">Match a single alphabetic character (`a` through `z` or `A` through `Z`) or numeric character.</span></span>|  
|`$`|<span data-ttu-id="98b34-626">处结束匹配行的末尾。</span><span class="sxs-lookup"><span data-stu-id="98b34-626">End the match at the end of the line.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98b34-627">出现正则表达式分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-627">A regular expression parsing error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-628">
            <paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-628">
              <paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-629">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-629">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-630">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-630">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="98b34-631">
            <para>此方法等同于在其中调用该方法的应用程序域的默认超时值的时间间隔后超时。如果没有为应用程序域，值定义超时值<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，它防止超时，方法使用。建议的静态方法用于验证模式匹配是<see cref="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />，可以在其中你设置的超时间隔。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-631">
              <para>This method times out after an interval that is equal to the default time-out value of the application domain in which the method is called. If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used. The recommended static method for verifying a pattern match is <see cref="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsMatch">
      <MemberSignature Language="C#" Value="public static bool IsMatch (string input, string pattern, System.Text.RegularExpressions.RegexOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMatch(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMatch (input As String, pattern As String, options As RegexOptions) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsMatch(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options);" />
      <MemberSignature Language="F#" Value="static member IsMatch : string * string * System.Text.RegularExpressions.RegexOptions -&gt; bool" Usage="System.Text.RegularExpressions.Regex.IsMatch (input, pattern, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-632">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-632">The string to search for a match.</span>
          </span>
        </param>
        <param name="pattern">
          <span data-ttu-id="98b34-633">要匹配的正则表达式模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-633">The regular expression pattern to match.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="98b34-634">枚举值的一个按位组合，这些枚举值提供匹配选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-634">A bitwise combination of the enumeration values that provide options for matching.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-635">指示所指定的正则表达式是否使用指定的匹配选项在指定的输入字符串中找到了匹配项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-635">Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-636">如果正则表达式找到匹配项，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-636">
              <see langword="true" /> if the regular expression finds a match; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-637"><xref:System.Text.RegularExpressions.Regex.IsMatch%2A>方法通常用于验证字符串或以确保符合特定模式的字符串而不检索该字符串以进行后续操作。</span><span class="sxs-lookup"><span data-stu-id="98b34-637">The <xref:System.Text.RegularExpressions.Regex.IsMatch%2A> method is typically used to validate a string or to ensure that a string conforms to a particular pattern without retrieving that string for subsequent manipulation.</span></span> <span data-ttu-id="98b34-638">如果你想要确定是否一个或多个字符串与正则表达式模式匹配，然后检索成员以进行后续操作，调用<xref:System.Text.RegularExpressions.Regex.Match%2A>或<xref:System.Text.RegularExpressions.Regex.Matches%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-638">If you want to determine whether one or more strings match a regular expression pattern and then retrieve them for subsequent manipulation, call the <xref:System.Text.RegularExpressions.Regex.Match%2A> or <xref:System.Text.RegularExpressions.Regex.Matches%2A> method.</span></span>  
  
 <span data-ttu-id="98b34-639">静态<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29>方法相当于构造<xref:System.Text.RegularExpressions.Regex>与指定的正则表达式模式的对象`pattern`和指定的正则表达式选项`options`并调用<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%29>实例方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-639">The static <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29> method is equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the regular expression pattern specified by `pattern` and the regular expression options specified by `options` and calling the <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%29> instance method.</span></span> <span data-ttu-id="98b34-640">此正则表达式模式由正则表达式引擎缓存以便进行快速检索。</span><span class="sxs-lookup"><span data-stu-id="98b34-640">This regular expression pattern is cached for rapid retrieval by the regular expression engine.</span></span>  
  
 <span data-ttu-id="98b34-641">`pattern`参数包含以符号方式描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-641">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="98b34-642">有关正则表达式的详细信息，请参阅[.NET Framework 正则表达式](~/docs/standard/base-types/regular-expressions.md)和[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-642">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="98b34-643"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果匹配操作的执行时间超出指定的方法称为应用程序域的超时间隔将引发异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-643">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the matching operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="98b34-644">如果没有超时设置定义在应用程序域的属性中，或者如果超时值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-644">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-645">下面的示例演示如何使用<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%29>方法来确定字符串是否是有效的部件号。</span><span class="sxs-lookup"><span data-stu-id="98b34-645">The following example illustrates the use of the <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%29> method to determine whether a string is a valid part number.</span></span> <span data-ttu-id="98b34-646">正则表达式假定部件号具有特定的格式，其中包含的三个连字符分隔的字符集。</span><span class="sxs-lookup"><span data-stu-id="98b34-646">The regular expression assumes that the part number has a specific format that consists of three sets of characters separated by hyphens.</span></span> <span data-ttu-id="98b34-647">第一组，其中包含四个字符，必须以字母数字字符后跟两个数字字符后跟字母数字字符组成。</span><span class="sxs-lookup"><span data-stu-id="98b34-647">The first set, which contains four characters, must consist of an alphanumeric character followed by two numeric characters followed by an alphanumeric character.</span></span> <span data-ttu-id="98b34-648">第二组，包含三个字符，必须为数字。</span><span class="sxs-lookup"><span data-stu-id="98b34-648">The second set, which consists of three characters, must be numeric.</span></span> <span data-ttu-id="98b34-649">第三个集，其中包含四个字符，必须具有三个数字字符后跟字母数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-649">The third set, which consists of four characters, must have three numeric characters followed by an alphanumeric character.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.IsMatch#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/cs/ismatch4.cs#4)]
 [!code-vb[System.Text.RegularExpressions.Regex.IsMatch#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/vb/ismatch4.vb#4)]  
  
 <span data-ttu-id="98b34-650">正则表达式模式为：</span><span class="sxs-lookup"><span data-stu-id="98b34-650">The regular expression pattern is:</span></span>  
  
```  
^[A-Z0-9]\d{2}[A-Z0-9](-\d{3}){2}[A-Z0-9]$  
```  
  
 <span data-ttu-id="98b34-651">下表演示了如何解释正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-651">The following table shows how the regular expression pattern is interpreted.</span></span>  
  
|<span data-ttu-id="98b34-652">模式</span><span class="sxs-lookup"><span data-stu-id="98b34-652">Pattern</span></span>|<span data-ttu-id="98b34-653">描述</span><span class="sxs-lookup"><span data-stu-id="98b34-653">Description</span></span>|  
|-------------|-----------------|  
|`^`|<span data-ttu-id="98b34-654">从字符串开头开始匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-654">Begin the match at the beginning of the string.</span></span>|  
|`[A-Z0-9]`|<span data-ttu-id="98b34-655">匹配任何单个字母字符`A`通过`Z`，或任意数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-655">Match any single alphabetic character from `A` through `Z`, or any numeric character.</span></span>|  
|`\d{2}`|<span data-ttu-id="98b34-656">匹配两个数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-656">Match two numeric characters.</span></span>|  
|`[A-Z0-9]`|<span data-ttu-id="98b34-657">匹配任何单个字母字符`A`通过`Z`，或任意数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-657">Match any single alphabetic character from `A` through `Z`, or any numeric character.</span></span>|  
|`-`|<span data-ttu-id="98b34-658">匹配连字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-658">Match a hyphen.</span></span>|  
|`\d{3}`|<span data-ttu-id="98b34-659">匹配 3 个数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-659">Match exactly three numeric characters.</span></span>|  
|`(-\d{3}){2}`|<span data-ttu-id="98b34-660">找到连字符后跟三个数字字符，并将匹配此模式的两个匹配项...</span><span class="sxs-lookup"><span data-stu-id="98b34-660">Find a hyphen followed by three numeric characters, and match two occurrences of this pattern..</span></span>|  
|`[A-Z0-9]`|<span data-ttu-id="98b34-661">匹配任何单个字母字符`A`通过`Z`，或任意数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-661">Match any single alphabetic character from `A` through `Z`, or any numeric character.</span></span>|  
|`$`|<span data-ttu-id="98b34-662">在字符串的结尾结束匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-662">End the match at the end of the string.</span></span>|  
  
 <span data-ttu-id="98b34-663">调用<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29>方法替换`options`参数设置为<xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType>等效于定义以下正则表达式：</span><span class="sxs-lookup"><span data-stu-id="98b34-663">Calling the <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29> method with the `options` parameter set to <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType> is equivalent to defining the following regular expression:</span></span>  
  
```  
[a-zA-Z0-9]\d{2}[a-zA-Z0-9](-\d{3}){2}[A-Za-z0-9]  
```  
  
 <span data-ttu-id="98b34-664">有关比较，请参阅示例<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-664">For comparison, see the example for the <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98b34-665">出现正则表达式分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-665">A regular expression parsing error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-666">
            <paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-666">
              <paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98b34-667">
            <paramref name="options" /> 不是有效的 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-667">
              <paramref name="options" /> is not a valid <see cref="T:System.Text.RegularExpressions.RegexOptions" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-668">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-668">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-669">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-669">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="98b34-670">
            <para>此方法等同于调用它的应用程序域的默认超时值的时间间隔后超时。如果没有为应用程序域，值定义超时值<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，它防止超时，方法使用。建议的静态方法用于验证模式匹配是<see cref="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />，可以在其中你设置的超时间隔。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-670">
              <para>This method times out after an interval that is equal to the default time-out value of the application domain in which it is called. If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used. The recommended static method for verifying a pattern match is <see cref="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsMatch">
      <MemberSignature Language="C#" Value="public static bool IsMatch (string input, string pattern, System.Text.RegularExpressions.RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMatch(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMatch (input As String, pattern As String, options As RegexOptions, matchTimeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsMatch(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="static member IsMatch : string * string * System.Text.RegularExpressions.RegexOptions * TimeSpan -&gt; bool" Usage="System.Text.RegularExpressions.Regex.IsMatch (input, pattern, options, matchTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-671">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-671">The string to search for a match.</span>
          </span>
        </param>
        <param name="pattern">
          <span data-ttu-id="98b34-672">要匹配的正则表达式模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-672">The regular expression pattern to match.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="98b34-673">枚举值的一个按位组合，这些枚举值提供匹配选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-673">A bitwise combination of the enumeration values that provide options for matching.</span>
          </span>
        </param>
        <param name="matchTimeout">
          <span data-ttu-id="98b34-674">超时间隔；若要指示该方法不应超时，则为 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-674">A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> to indicate that the method should not time out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-675">指示所指定的正则表达式是否使用指定的匹配选项和超时间隔在指定的输入字符串中找到了匹配项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-675">Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options and time-out interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-676">如果正则表达式找到匹配项，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-676">
              <see langword="true" /> if the regular expression finds a match; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-677"><xref:System.Text.RegularExpressions.Regex.IsMatch%2A>方法通常用于验证字符串或以确保符合特定模式的字符串而不检索该字符串以进行后续操作。</span><span class="sxs-lookup"><span data-stu-id="98b34-677">The <xref:System.Text.RegularExpressions.Regex.IsMatch%2A> method is typically used to validate a string or to ensure that a string conforms to a particular pattern without retrieving that string for subsequent manipulation.</span></span> <span data-ttu-id="98b34-678">如果你想要确定是否一个或多个字符串与正则表达式模式匹配，然后检索成员以进行后续操作，调用<xref:System.Text.RegularExpressions.Regex.Match%2A>或<xref:System.Text.RegularExpressions.Regex.Matches%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-678">If you want to determine whether one or more strings match a regular expression pattern and then retrieve them for subsequent manipulation, call the <xref:System.Text.RegularExpressions.Regex.Match%2A> or <xref:System.Text.RegularExpressions.Regex.Matches%2A> method.</span></span>  
  
 <span data-ttu-id="98b34-679">静态<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>方法相当于构造<xref:System.Text.RegularExpressions.Regex>与指定的正则表达式模式的对象`pattern`和指定的正则表达式选项`options`并调用<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%29>实例方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-679">The static <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> method is equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the regular expression pattern specified by `pattern` and the regular expression options specified by `options` and calling the <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%29> instance method.</span></span> <span data-ttu-id="98b34-680">此正则表达式模式由正则表达式引擎缓存以便进行快速检索。</span><span class="sxs-lookup"><span data-stu-id="98b34-680">This regular expression pattern is cached for rapid retrieval by the regular expression engine.</span></span>  
  
 <span data-ttu-id="98b34-681">`pattern`参数包含以符号方式描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-681">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="98b34-682">有关正则表达式的详细信息，请参阅[.NET Framework 正则表达式](~/docs/standard/base-types/regular-expressions.md)和[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-682">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="98b34-683">`matchTimeout`参数指定如何长时间模式匹配方法应尝试超时之前找到匹配项。将设置的超时间隔可防止依赖于从似乎停止响应时它们处理输入的过度回溯的正则表达式，该字符串包含接近匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-683">The `matchTimeout` parameter specifies how long a pattern matching method should try to find a match before it times out. Setting a time-out interval prevents regular expressions that rely on excessive backtracking from appearing to stop responding when they process input that contains near matches.</span></span> <span data-ttu-id="98b34-684">有关详细信息，请参阅[正则表达式的最佳实践](~/docs/standard/base-types/best-practices.md)和[回溯](~/docs/standard/base-types/backtracking-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-684">For more information, see [Best Practices for Regular Expressions](~/docs/standard/base-types/best-practices.md) and [Backtracking](~/docs/standard/base-types/backtracking-in-regular-expressions.md).</span></span> <span data-ttu-id="98b34-685">如果未找到匹配项是在该时间段内，该方法将引发<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-685">If no match is found in that time interval, the method throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="98b34-686">`matchTimeout` 重写任何应用程序域执行此方法定义的默认超时值。</span><span class="sxs-lookup"><span data-stu-id="98b34-686">`matchTimeout` overrides any default time-out value defined for the application domain in which the method executes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-687">下面的示例演示如何使用<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>方法来确定字符串是否是有效的部件号。</span><span class="sxs-lookup"><span data-stu-id="98b34-687">The following example illustrates the use of the <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> method to determine whether a string is a valid part number.</span></span> <span data-ttu-id="98b34-688">正则表达式假定部件号具有特定的格式，其中包含的三个连字符分隔的字符集。</span><span class="sxs-lookup"><span data-stu-id="98b34-688">The regular expression assumes that the part number has a specific format that consists of three sets of characters separated by hyphens.</span></span> <span data-ttu-id="98b34-689">第一组，其中包含四个字符，必须以字母数字字符后跟两个数字字符后跟字母数字字符组成。</span><span class="sxs-lookup"><span data-stu-id="98b34-689">The first set, which contains four characters, must consist of an alphanumeric character followed by two numeric characters followed by an alphanumeric character.</span></span> <span data-ttu-id="98b34-690">第二组，包含三个字符，必须为数字。</span><span class="sxs-lookup"><span data-stu-id="98b34-690">The second set, which consists of three characters, must be numeric.</span></span> <span data-ttu-id="98b34-691">第三个集，其中包含四个字符，必须具有三个数字字符后跟字母数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-691">The third set, which consists of four characters, must have three numeric characters followed by an alphanumeric character.</span></span> <span data-ttu-id="98b34-692">正则表达式模式匹配的涉及方应该包括最小搜索输入字符串，因此该方法设置的超时间隔为 500 毫秒。</span><span class="sxs-lookup"><span data-stu-id="98b34-692">Matching the regular expression pattern should involve minimal searching through the input string, so the method sets a time-out interval of 500 milliseconds.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.IsMatch#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/cs/ismatch5.cs#5)]
 [!code-vb[System.Text.RegularExpressions.Regex.IsMatch#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/vb/ismatch5.vb#5)]  
  
 <span data-ttu-id="98b34-693">正则表达式模式为：</span><span class="sxs-lookup"><span data-stu-id="98b34-693">The regular expression pattern is:</span></span>  
  
```  
^[A-Z0-9]\d{2}[A-Z0-9](-\d{3}){2}[A-Z0-9]$  
```  
  
 <span data-ttu-id="98b34-694">下表演示了如何解释正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-694">The following table shows how the regular expression pattern is interpreted.</span></span>  
  
|<span data-ttu-id="98b34-695">模式</span><span class="sxs-lookup"><span data-stu-id="98b34-695">Pattern</span></span>|<span data-ttu-id="98b34-696">描述</span><span class="sxs-lookup"><span data-stu-id="98b34-696">Description</span></span>|  
|-------------|-----------------|  
|`^`|<span data-ttu-id="98b34-697">从字符串开头开始匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-697">Begin the match at the beginning of the string.</span></span>|  
|`[A-Z0-9]`|<span data-ttu-id="98b34-698">匹配任何单个字母字符`A`通过`Z`，或任意数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-698">Match any single alphabetic character from `A` through `Z`, or any numeric character.</span></span>|  
|`\d{2}`|<span data-ttu-id="98b34-699">匹配两个数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-699">Match two numeric characters.</span></span>|  
|`[A-Z0-9]`|<span data-ttu-id="98b34-700">匹配任何单个字母字符`A`通过`Z`，或任意数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-700">Match any single alphabetic character from `A` through `Z`, or any numeric character.</span></span>|  
|`-`|<span data-ttu-id="98b34-701">匹配连字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-701">Match a hyphen.</span></span>|  
|`\d{3}`|<span data-ttu-id="98b34-702">匹配 3 个数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-702">Match exactly three numeric characters.</span></span>|  
|`(-\d{3}){2}`|<span data-ttu-id="98b34-703">找到连字符后跟三个数字字符，并将匹配此模式的两个匹配项。</span><span class="sxs-lookup"><span data-stu-id="98b34-703">Find a hyphen followed by three numeric characters, and match two occurrences of this pattern.</span></span>|  
|`[A-Z0-9]`|<span data-ttu-id="98b34-704">匹配任何单个字母字符`A`通过`Z`，或任意数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-704">Match any single alphabetic character from `A` through `Z`, or any numeric character.</span></span>|  
|`$`|<span data-ttu-id="98b34-705">在字符串的结尾结束匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-705">End the match at the end of the string.</span></span>|  
  
 <span data-ttu-id="98b34-706">调用<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>方法替换`options`参数设置为<xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType>等效于定义以下正则表达式：</span><span class="sxs-lookup"><span data-stu-id="98b34-706">Calling the <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> method with the `options` parameter set to <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType> is equivalent to defining the following regular expression:</span></span>  
  
```  
[a-zA-Z0-9]\d{2}[a-zA-Z0-9](-\d{3}){2}[A-Za-z0-9]  
```  
  
 <span data-ttu-id="98b34-707">有关比较，请参阅示例<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-707">For comparison, see the example for the <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98b34-708">出现正则表达式分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-708">A regular expression parsing error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-709">
            <paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-709">
              <paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98b34-710">
            <paramref name="options" /> 不是有效的 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-710">
              <paramref name="options" /> is not a valid <see cref="T:System.Text.RegularExpressions.RegexOptions" /> value.</span>
          </span>
          <span data-ttu-id="98b34-711">- 或 -  <paramref name="matchTimeout" /> 为负、零或大于 24 天左右。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-711">-or-  <paramref name="matchTimeout" /> is negative, zero, or greater than approximately 24 days.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-712">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-712">A time-out occurred.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="98b34-713">
            <para>我们建议你设置<paramref name="matchTimeout" />为适当的值，如两秒的参数。如果通过指定禁用超时<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，正则表达式引擎提供略有更好的性能。但是，你应禁用超时仅在以下情况:-当由正则表达式处理的输入源自已知且受信任的来源或由静态文本。这不包括已被动态由用户输入的文本。 -当进行全面测试正则表达式模式以确保它有效地处理匹配，非匹配项，并不久匹配。 -当正则表达式模式不包含任何已知会引起过多回溯，处理接近的匹配项时的语言元素。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-713">
              <para>We recommend that you set the <paramref name="matchTimeout" /> parameter to an appropriate value, such as two seconds. If you disable time-outs by specifying <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, the regular expression engine offers slightly better performance. However, you should disable time-outs only under the following conditions:  -   When the input processed by a regular expression is derived from a known and trusted source or consists of static text. This excludes text that has been dynamically input by users.  -   When the regular expression pattern has been thoroughly tested to ensure that it efficiently handles matches, non-matches, and near matches.  -   When the regular expression pattern contains no language elements that are known to cause excessive backtracking when processing a near match.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="98b34-714">在输入字符串中搜索匹配正则表达式模式的子字符串，并将第一个匹配项作为单个 <see cref="T:System.Text.RegularExpressions.Match" /> 对象返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-714">Searches an input string for a substring that matches a regular expression pattern and returns the first occurrence as a single <see cref="T:System.Text.RegularExpressions.Match" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.Match Match (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.RegularExpressions.Match Match(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Match(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (input As String) As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::RegularExpressions::Match ^ Match(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Match : string -&gt; System.Text.RegularExpressions.Match" Usage="regex.Match input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-715">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-715">The string to search for a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-716">在指定的输入字符串中搜索 <see cref="T:System.Text.RegularExpressions.Regex" /> 构造函数中指定的正则表达式的第一个匹配项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-716">Searches the specified input string for the first occurrence of the regular expression specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-717">一个包含有关匹配的信息的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-717">An object that contains information about the match.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-718"><xref:System.Text.RegularExpressions.Regex.Match%28System.String%29>方法返回与在输入字符串中的正则表达式模式匹配的第一个子字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-718">The <xref:System.Text.RegularExpressions.Regex.Match%28System.String%29> method returns the first substring that matches a regular expression pattern in an input string.</span></span> <span data-ttu-id="98b34-719">有关用于生成正则表达式模式的语言元素的信息，请参阅[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-719">For information about the language elements used to build a regular expression pattern, see [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="98b34-720">你可以确定是否正则表达式模式已在输入字符串中找到通过检查返回的值<xref:System.Text.RegularExpressions.Match>对象的<xref:System.Text.RegularExpressions.Group.Success%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="98b34-720">You can determine whether the regular expression pattern has been found in the input string by checking the value of the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Group.Success%2A> property.</span></span> <span data-ttu-id="98b34-721">如果找到匹配项，返回<xref:System.Text.RegularExpressions.Match>对象的<xref:System.Text.RegularExpressions.Capture.Value%2A>属性包含的子字符串从`input`匹配正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-721">If a match is found, the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Capture.Value%2A> property contains the substring from `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="98b34-722">如果不找到任何匹配，其值是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="98b34-722">If no match is found, its value is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="98b34-723">此方法返回中的第一个子字符串`input`匹配正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-723">This method returns the first substring in `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="98b34-724">您可以通过重复调用返回检索后续匹配项<xref:System.Text.RegularExpressions.Match>对象的<xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-724">You can retrieve subsequent matches by repeatedly calling the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="98b34-725">您还可以通过调用来检索单个方法调用中的所有匹配项<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-725">You can also retrieve all matches in a single method call by calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="98b34-726"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果匹配操作的执行时间超出指定的超时间隔将引发异常<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-726">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the matching operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="98b34-727">如果该操作超过应用程序域建立在其中任何超时值时调用的构造函数未设置的超时间隔，如果引发异常<xref:System.Text.RegularExpressions.Regex>创建对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-727">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="98b34-728">如果在中定义无超时<xref:System.Text.RegularExpressions.Regex>构造函数调用或在应用程序域的属性中，或如果超时值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-728">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-729">下面的示例查找正则表达式模式匹配在字符串中，然后列出匹配组捕获的内容，捕获位置。</span><span class="sxs-lookup"><span data-stu-id="98b34-729">The following example finds regular expression pattern matches in a string, then lists the matched groups, captures, and capture positions.</span></span>  
  
 [!code-cpp[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/cpp/VS_Snippets_CLR/regex match, nextmatch, groups, captures/cpp/snippet8.cpp#8)]
 [!code-csharp[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/csharp/VS_Snippets_CLR/regex match, nextmatch, groups, captures/cs/snippet8.cs#8)]
 [!code-vb[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/regex match, nextmatch, groups, captures/vb/snippet8.vb#8)]  
  
 <span data-ttu-id="98b34-730">正则表达式模式`(\w+)\s+(car)`匹配单词"car"以及它前面的单词出现的次数。</span><span class="sxs-lookup"><span data-stu-id="98b34-730">The regular expression pattern `(\w+)\s+(car)` matches occurrences of the word "car" along with the word that precedes it.</span></span> <span data-ttu-id="98b34-731">它可以解释为下表中所示。</span><span class="sxs-lookup"><span data-stu-id="98b34-731">It is interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="98b34-732">模式</span><span class="sxs-lookup"><span data-stu-id="98b34-732">Pattern</span></span>|<span data-ttu-id="98b34-733">描述</span><span class="sxs-lookup"><span data-stu-id="98b34-733">Description</span></span>|  
|-------------|-----------------|  
|`(\w+)`|<span data-ttu-id="98b34-734">匹配一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-734">Match one or more word characters.</span></span> <span data-ttu-id="98b34-735">这是第一个捕获组。</span><span class="sxs-lookup"><span data-stu-id="98b34-735">This is the first capturing group.</span></span>|  
|`\s+`|<span data-ttu-id="98b34-736">匹配一个或多个空白字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-736">Match one or more white-space characters.</span></span>|  
|<span data-ttu-id="98b34-737">(car)</span><span class="sxs-lookup"><span data-stu-id="98b34-737">(car)</span></span>|<span data-ttu-id="98b34-738">与匹配的文本字符串"car"。</span><span class="sxs-lookup"><span data-stu-id="98b34-738">Match the literal string "car".</span></span> <span data-ttu-id="98b34-739">这是第二个捕获组。</span><span class="sxs-lookup"><span data-stu-id="98b34-739">This is the second capturing group.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-740">
            <paramref name="input" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-740">
              <paramref name="input" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-741">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-741">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-742">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-742">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.RegularExpressions.Match.NextMatch" />
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.Match Match (string input, int startat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.RegularExpressions.Match Match(string input, int32 startat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (input As String, startat As Integer) As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::RegularExpressions::Match ^ Match(System::String ^ input, int startat);" />
      <MemberSignature Language="F#" Value="member this.Match : string * int -&gt; System.Text.RegularExpressions.Match" Usage="regex.Match (input, startat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="startat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-743">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-743">The string to search for a match.</span>
          </span>
        </param>
        <param name="startat">
          <span data-ttu-id="98b34-744">开始搜索的字符位置（从零开始）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-744">The zero-based character position at which to start the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-745">从输入字符串中的指定起始位置开始，在该字符串中搜索正则表达式的第一个匹配项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-745">Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position in the string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-746">一个包含有关匹配的信息的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-746">An object that contains information about the match.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-747"><xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29>方法返回与匹配正则表达式模式中，启动时或之后的第一个子字符串`startat`字符位置，在输入字符串中。</span><span class="sxs-lookup"><span data-stu-id="98b34-747">The <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29> method returns the first substring that matches a regular expression pattern, starting at or after the `startat` character position, in an input string.</span></span> <span data-ttu-id="98b34-748">有关用于生成正则表达式模式的语言元素的信息，请参阅[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-748">For information about the language elements used to build a regular expression pattern, see [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="98b34-749">为其正则表达式模式<xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29>方法搜索定义通过调用之一<xref:System.Text.RegularExpressions.Regex>类构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-749">The regular expression pattern for which the <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29> method searches is defined by the call to one of the <xref:System.Text.RegularExpressions.Regex> class constructors.</span></span> <span data-ttu-id="98b34-750">有关可以形成正则表达式模式的元素的详细信息，请参阅[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-750">For more information about the elements that can form a regular expression pattern, see [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="98b34-751">你可以选择指定字符串中的起始位置，通过使用`startat`参数。</span><span class="sxs-lookup"><span data-stu-id="98b34-751">You can optionally specify a starting position in the string by using the `startat` parameter.</span></span> <span data-ttu-id="98b34-752">当正则表达式引擎分析从左到右 （默认值） 时，匹配和扫描移动向右中, 指定的字符开始`startat`。</span><span class="sxs-lookup"><span data-stu-id="98b34-752">When the regular expression engine parses from left to right (the default), the match and the scan move rightward, starting at the character specified in `startat`.</span></span> <span data-ttu-id="98b34-753">正则表达式引擎从右到左的分析时 (当正则表达式模式构造与<xref:System.Text.RegularExpressions.RegexOptions.RightToLeft?displayProperty=nameWithType>选项)，匹配和扫描在相反方向中移动，开头处的字符`startat`-1。</span><span class="sxs-lookup"><span data-stu-id="98b34-753">When the regular expression engine parses from right to left (when the regular expression pattern is constructed with the <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft?displayProperty=nameWithType> option), the match and scan move in the opposite direction and begin with the character at `startat` -1.</span></span> <span data-ttu-id="98b34-754">如果未指定的起始位置，默认情况下开始执行搜索`startat`位置。</span><span class="sxs-lookup"><span data-stu-id="98b34-754">If you do not specify a starting position, the search begins at the default `startat` position.</span></span> <span data-ttu-id="98b34-755">如果正则表达式搜索从左到右，默认值`startat`位置位于左末尾`input`; 如果搜索从右到左，默认值`startat`位置位于的右端`input`。</span><span class="sxs-lookup"><span data-stu-id="98b34-755">If the regular expression searches from left to right, the default `startat` position is at the left end of `input`; if it searches from right to left, the default `startat` position is at the right end of `input`.</span></span>  
  
 <span data-ttu-id="98b34-756">如果你想要限制匹配项，以便它在字符串中特定的字符位置开始，并且正则表达式引擎不会扫描匹配项的字符串的其余部分，锚定正则表达式和`\G`（在从左到右的左侧模式中，或从右到左模式右侧)。</span><span class="sxs-lookup"><span data-stu-id="98b34-756">If you want to restrict a match so that it begins at a particular character position in the string and the regular expression engine does not scan the remainder of the string for a match, anchor the regular expression with a `\G` (at the left for a left-to-right pattern, or at the right for a right-to-left pattern).</span></span> <span data-ttu-id="98b34-757">这会限制匹配，因此它必须从处开始完全`startat`。</span><span class="sxs-lookup"><span data-stu-id="98b34-757">This restricts the match so it must start exactly at `startat`.</span></span>  
  
 <span data-ttu-id="98b34-758">你可以确定是否正则表达式模式已在输入字符串中找到通过检查返回的值<xref:System.Text.RegularExpressions.Match>对象的<xref:System.Text.RegularExpressions.Group.Success%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="98b34-758">You can determine whether the regular expression pattern has been found in the input string by checking the value of the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Group.Success%2A> property.</span></span> <span data-ttu-id="98b34-759">如果找到匹配项，返回<xref:System.Text.RegularExpressions.Match>对象的<xref:System.Text.RegularExpressions.Capture.Value%2A>属性包含的子字符串从`input`匹配正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-759">If a match is found, the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Capture.Value%2A> property contains the substring from `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="98b34-760">如果不找到任何匹配，其值是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="98b34-760">If no match is found, its value is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="98b34-761">此方法返回找到时或之后的第一个子字符串`startat`的字符位置`input`匹配正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-761">This method returns the first substring found at or after the `startat` character position in `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="98b34-762">您可以通过重复调用返回检索后续匹配项<xref:System.Text.RegularExpressions.Match>对象的<xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-762">You can retrieve subsequent matches by repeatedly calling the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="98b34-763">您还可以通过调用来检索单个方法调用中的所有匹配项<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-763">You can also retrieve all matches in a single method call by calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="98b34-764"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果匹配操作的执行时间超出指定的超时间隔将引发异常<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-764">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the matching operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="98b34-765">如果操作超过为应用程序域中建立的任何超时值时调用的构造函数未设置的超时间隔，如果引发异常<xref:System.Text.RegularExpressions.Regex>创建对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-765">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exeeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="98b34-766">如果在中定义无超时<xref:System.Text.RegularExpressions.Regex>构造函数调用或在应用程序域的属性中，或如果超时值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-766">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-767">
            <paramref name="input" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-767">
              <paramref name="input" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98b34-768">
            <paramref name="startat" /> 小于零或大于 <paramref name="input" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-768">
              <paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-769">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-769">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-770">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-770">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.RegularExpressions.Match.NextMatch" />
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.Match Match (string input, string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.Match Match(string input, string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Match (input As String, pattern As String) As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::Match ^ Match(System::String ^ input, System::String ^ pattern);" />
      <MemberSignature Language="F#" Value="static member Match : string * string -&gt; System.Text.RegularExpressions.Match" Usage="System.Text.RegularExpressions.Regex.Match (input, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-771">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-771">The string to search for a match.</span>
          </span>
        </param>
        <param name="pattern">
          <span data-ttu-id="98b34-772">要匹配的正则表达式模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-772">The regular expression pattern to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-773">在指定的输入字符串中搜索指定的正则表达式的第一个匹配项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-773">Searches the specified input string for the first occurrence of the specified regular expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-774">一个包含有关匹配的信息的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-774">An object that contains information about the match.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-775"><xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%29>方法返回与在输入字符串中的正则表达式模式匹配的第一个子字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-775">The <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%29> method returns the first substring that matches a regular expression pattern in an input string.</span></span> <span data-ttu-id="98b34-776">有关用于生成正则表达式模式的语言元素的信息，请参阅[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-776">For information about the language elements used to build a regular expression pattern, see [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="98b34-777">静态<xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%29>方法相当于构造<xref:System.Text.RegularExpressions.Regex>对象使用指定的正则表达式模式，并调用实例<xref:System.Text.RegularExpressions.Regex.Match%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-777">The static <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%29> method is equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the specified regular expression pattern and calling the instance <xref:System.Text.RegularExpressions.Regex.Match%28System.String%29> method.</span></span> <span data-ttu-id="98b34-778">在这种情况下，正则表达式引擎将缓存的正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-778">In this case, the regular expression engine caches the regular expression pattern.</span></span>  
  
 <span data-ttu-id="98b34-779">`pattern`参数包含以符号方式描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-779">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="98b34-780">有关正则表达式的详细信息，请参阅[.NET Framework 正则表达式](~/docs/standard/base-types/regular-expressions.md)和[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-780">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="98b34-781">你可以确定是否正则表达式模式已在输入字符串中找到通过检查返回的值<xref:System.Text.RegularExpressions.Match>对象的<xref:System.Text.RegularExpressions.Group.Success%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="98b34-781">You can determine whether the regular expression pattern has been found in the input string by checking the value of the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Group.Success%2A> property.</span></span> <span data-ttu-id="98b34-782">如果找到匹配项，返回<xref:System.Text.RegularExpressions.Match>对象的<xref:System.Text.RegularExpressions.Capture.Value%2A>属性包含的子字符串从`input`匹配正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-782">If a match is found, the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Capture.Value%2A> property contains the substring from `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="98b34-783">如果不找到任何匹配，其值是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="98b34-783">If no match is found, its value is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="98b34-784">此方法返回中的第一个子字符串`input`匹配正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-784">This method returns the first substring in `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="98b34-785">您可以通过重复调用返回检索后续匹配项<xref:System.Text.RegularExpressions.Match>对象的<xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-785">You can retrieve subsequent matches by repeatedly calling the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="98b34-786">您还可以通过调用来检索单个方法调用中的所有匹配项<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-786">You can also retrieve all matches in a single method call by calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="98b34-787"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果匹配操作的执行时间超出指定的方法称为应用程序域的超时间隔将引发异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-787">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the matching operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="98b34-788">如果没有超时设置定义在应用程序域的属性中，或者如果超时值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-788">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-789">下面的示例调用<xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%29>方法来查找至少包含一个的第一个单词`z`字符，然后调用<xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType>方法查找任何其他匹配项。</span><span class="sxs-lookup"><span data-stu-id="98b34-789">The following example calls the <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%29> method to find the first word that contains at least one `z` character, and then calls the <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> method to find any additional matches.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Match#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.match/cs/match1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Match#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.match/vb/match1.vb#1)]  
  
 <span data-ttu-id="98b34-790">正则表达式模式 `\b\w*z+\w*\b` 的含义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="98b34-790">The regular expression pattern `\b\w*z+\w*\b` is interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="98b34-791">模式</span><span class="sxs-lookup"><span data-stu-id="98b34-791">Pattern</span></span>|<span data-ttu-id="98b34-792">描述</span><span class="sxs-lookup"><span data-stu-id="98b34-792">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="98b34-793">在单词边界处开始匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-793">Begin the match at a word boundary.</span></span>|  
|`\w*`|<span data-ttu-id="98b34-794">匹配零个、 一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-794">Match zero, one, or more word characters.</span></span>|  
|`z+`|<span data-ttu-id="98b34-795">匹配一个或多个匹配项的`z`字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-795">Match one or more occurrences of the `z` character.</span></span>|  
|`\w*`|<span data-ttu-id="98b34-796">匹配零个、 一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-796">Match zero, one, or more word characters.</span></span>|  
|`\b`|<span data-ttu-id="98b34-797">在单词边界处结束匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-797">End the match at a word boundary.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98b34-798">出现正则表达式分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-798">A regular expression parsing error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-799">
            <paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-799">
              <paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-800">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-800">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-801">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-801">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="98b34-802">
            <para>此方法等同于调用它的应用程序域的默认超时值的时间间隔后超时。如果没有为应用程序域，值定义超时值<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，它防止超时，方法使用。建议的静态方法用于检索模式匹配是<see cref="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)" />，可以在其中你设置的超时间隔。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-802">
              <para>This method times out after an interval that is equal to the default time-out value of the application domain in which it is called. If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used. The recommended static method for retrieving a pattern match is <see cref="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)" />, which lets you set the time-out interval.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Text.RegularExpressions.Match.NextMatch" />
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.Match Match (string input, int beginning, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.RegularExpressions.Match Match(string input, int32 beginning, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (input As String, beginning As Integer, length As Integer) As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::RegularExpressions::Match ^ Match(System::String ^ input, int beginning, int length);" />
      <MemberSignature Language="F#" Value="member this.Match : string * int * int -&gt; System.Text.RegularExpressions.Match" Usage="regex.Match (input, beginning, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="beginning" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-803">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-803">The string to search for a match.</span>
          </span>
        </param>
        <param name="beginning">
          <span data-ttu-id="98b34-804">输入字符串中从零开始的字符位置，它定义要搜索的最左侧的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-804">The zero-based character position in the input string that defines the leftmost position to be searched.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="98b34-805">子字符串中包含在搜索中的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-805">The number of characters in the substring to include in the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-806">从指定的起始位置开始，在输入字符串中搜索正则表达式的第一个匹配项，并且仅搜索指定数量的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-806">Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position and searching only the specified number of characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-807">一个包含有关匹配的信息的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-807">An object that contains information about the match.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-808"><xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%2CSystem.Int32%29>方法返回与输入字符串的部分中的正则表达式模式匹配的第一个子字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-808">The <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%2CSystem.Int32%29> method returns the first substring that matches a regular expression pattern in a portion of an input string.</span></span> <span data-ttu-id="98b34-809">有关用于生成正则表达式模式的语言元素的信息，请参阅[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-809">For information about the language elements used to build a regular expression pattern, see [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="98b34-810">为其正则表达式模式<xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%2CSystem.Int32%29>方法搜索定义通过调用之一<xref:System.Text.RegularExpressions.Regex>类构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-810">The regular expression pattern for which the <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%2CSystem.Int32%29> method searches is defined by the call to one of the <xref:System.Text.RegularExpressions.Regex> class constructors.</span></span> <span data-ttu-id="98b34-811">有关可以形成正则表达式模式的元素的详细信息，请参阅[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-811">For more information about the elements that can form a regular expression pattern, see [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="98b34-812"><xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%2CSystem.Int32%29>方法搜索的部分`input`由定义`beginning`和`length`正则表达式模式的参数。</span><span class="sxs-lookup"><span data-stu-id="98b34-812">The <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%2CSystem.Int32%29> method searches the portion of `input` defined by the `beginning` and `length` parameters for the regular expression pattern.</span></span> <span data-ttu-id="98b34-813">`beginning` 始终定义要包括在搜索中的最左侧字符的索引和`length`定义要搜索的字符最大数目。</span><span class="sxs-lookup"><span data-stu-id="98b34-813">`beginning` always defines the index of the leftmost character to include in the search, and `length` defines the maximum number of characters to search.</span></span> <span data-ttu-id="98b34-814">它们一起定义的搜索的范围。</span><span class="sxs-lookup"><span data-stu-id="98b34-814">Together, they define the range of the search.</span></span> <span data-ttu-id="98b34-815">如果搜索继续从左到右 （默认值），正则表达式引擎将从索引处的字符搜索`beginning`到索引处的字符`beginning`  +  `length` – 1。</span><span class="sxs-lookup"><span data-stu-id="98b34-815">If the search proceeds from left to right (the default), the regular expression engine searches from the character at index `beginning` to the character at index `beginning` + `length` – 1.</span></span> <span data-ttu-id="98b34-816">如果通过实例化正则表达式引擎<xref:System.Text.RegularExpressions.RegexOptions.RightToLeft?displayProperty=nameWithType>选项，以使则继续搜索从右到左、 从索引处的字符的正则表达式引擎搜索`beginning`  +  `length` – 1 到字符索引处`beginning`。</span><span class="sxs-lookup"><span data-stu-id="98b34-816">If the regular expression engine was instantiated by using the <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft?displayProperty=nameWithType> option so that the search proceeds from right to left, the regular expression engine searches from the character at index `beginning` + `length` – 1 to the character at index `beginning`.</span></span> <span data-ttu-id="98b34-817">此方法返回在此范围内找到第一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="98b34-817">This method returns the first match that it finds within this range.</span></span> <span data-ttu-id="98b34-818">您可以通过重复调用返回检索后续匹配项<xref:System.Text.RegularExpressions.Match>对象的<xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-818">You can retrieve subsequent matches by repeatedly calling the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="98b34-819">你可以确定是否正则表达式模式已在输入字符串中找到通过检查返回的值<xref:System.Text.RegularExpressions.Match>对象的<xref:System.Text.RegularExpressions.Group.Success%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="98b34-819">You can determine whether the regular expression pattern has been found in the input string by checking the value of the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Group.Success%2A> property.</span></span> <span data-ttu-id="98b34-820">如果找到匹配项，返回<xref:System.Text.RegularExpressions.Match>对象的<xref:System.Text.RegularExpressions.Capture.Value%2A>属性包含的子字符串从`input`匹配正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-820">If a match is found, the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Capture.Value%2A> property contains the substring from `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="98b34-821">如果不找到任何匹配，其值是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="98b34-821">If no match is found, its value is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="98b34-822"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果匹配操作的执行时间超出指定的超时间隔将引发异常<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-822">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the matching operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="98b34-823">如果该操作超过应用程序域建立在其中任何超时值时调用的构造函数未设置超时值，如果引发异常<xref:System.Text.RegularExpressions.Regex>创建对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-823">If you do not set a time-out value when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="98b34-824">如果在中定义无超时<xref:System.Text.RegularExpressions.Regex>构造函数调用或在应用程序域的属性中，或如果超时值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-824">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-825">
            <paramref name="input" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-825">
              <paramref name="input" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98b34-826">
            <paramref name="beginning" /> 小于零或大于 <paramref name="input" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-826">
              <paramref name="beginning" /> is less than zero or greater than the length of <paramref name="input" />.</span>
          </span>
          <span data-ttu-id="98b34-827">- 或 -  <paramref name="length" /> 小于零或大于 <paramref name="input" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-827">-or-  <paramref name="length" /> is less than zero or greater than the length of <paramref name="input" />.</span>
          </span>
          <span data-ttu-id="98b34-828">- 或 -  <paramref name="beginning" /><see langword="+" /><paramref name="length" /><see langword="–1" /> 表示 <paramref name="input" /> 范围外的某个位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-828">-or-  <paramref name="beginning" /><see langword="+" /><paramref name="length" /><see langword="–1" /> identifies a position that is outside the range of <paramref name="input" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-829">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-829">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-830">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-830">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.RegularExpressions.Match.NextMatch" />
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.Match Match (string input, string pattern, System.Text.RegularExpressions.RegexOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.Match Match(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Match (input As String, pattern As String, options As RegexOptions) As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::Match ^ Match(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options);" />
      <MemberSignature Language="F#" Value="static member Match : string * string * System.Text.RegularExpressions.RegexOptions -&gt; System.Text.RegularExpressions.Match" Usage="System.Text.RegularExpressions.Regex.Match (input, pattern, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-831">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-831">The string to search for a match.</span>
          </span>
        </param>
        <param name="pattern">
          <span data-ttu-id="98b34-832">要匹配的正则表达式模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-832">The regular expression pattern to match.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="98b34-833">枚举值的一个按位组合，这些枚举值提供匹配选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-833">A bitwise combination of the enumeration values that provide options for matching.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-834">使用指定的匹配选项在输入字符串中搜索指定的正则表达式的第一个匹配项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-834">Searches the input string for the first occurrence of the specified regular expression, using the specified matching options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-835">一个包含有关匹配的信息的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-835">An object that contains information about the match.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-836"><xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29>方法返回与在输入字符串中的正则表达式模式匹配的第一个子字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-836">The <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29> method returns the first substring that matches a regular expression pattern in an input string.</span></span> <span data-ttu-id="98b34-837">有关用于生成正则表达式模式的语言元素的信息，请参阅[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-837">For information about the language elements used to build a regular expression pattern, see [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="98b34-838">静态<xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29>方法相当于构造<xref:System.Text.RegularExpressions.Regex>对象<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%29>构造函数并调用实例<xref:System.Text.RegularExpressions.Regex.Match%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-838">The static <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29> method is equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%29> constructor and calling the instance <xref:System.Text.RegularExpressions.Regex.Match%28System.String%29> method.</span></span>  
  
 <span data-ttu-id="98b34-839">`pattern`参数包含以符号方式描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-839">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="98b34-840">有关正则表达式的详细信息，请参阅[.NET Framework 正则表达式](~/docs/standard/base-types/regular-expressions.md)和[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-840">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="98b34-841">你可以确定是否正则表达式模式已在输入字符串中找到通过检查返回的值<xref:System.Text.RegularExpressions.Match>对象的<xref:System.Text.RegularExpressions.Group.Success%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="98b34-841">You can determine whether the regular expression pattern has been found in the input string by checking the value of the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Group.Success%2A> property.</span></span> <span data-ttu-id="98b34-842">如果找到匹配项，返回<xref:System.Text.RegularExpressions.Match>对象的<xref:System.Text.RegularExpressions.Capture.Value%2A>属性包含的子字符串从`input`匹配正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-842">If a match is found, the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Capture.Value%2A> property contains the substring from `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="98b34-843">如果不找到任何匹配，其值是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="98b34-843">If no match is found, its value is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="98b34-844">此方法返回在中找到的第一个子字符串`input`匹配正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-844">This method returns the first substring found in `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="98b34-845">您可以通过重复调用返回检索后续匹配项<xref:System.Text.RegularExpressions.Match>对象的<xref:System.Text.RegularExpressions.Match.NextMatch%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-845">You can retrieve subsequent matches by repeatedly calling the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Match.NextMatch%2A> method.</span></span> <span data-ttu-id="98b34-846">您还可以通过调用来检索单个方法调用中的所有匹配项<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-846">You can also retrieve all matches in a single method call by calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="98b34-847"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果匹配操作的执行时间超出指定的方法称为应用程序域的超时间隔将引发异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-847">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the matching operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="98b34-848">如果没有超时设置定义在应用程序域的属性中，或者如果超时值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-848">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-849">下面的示例定义匹配以字母开头的单词的正则表达式"a"。</span><span class="sxs-lookup"><span data-stu-id="98b34-849">The following example defines a regular expression that matches words beginning with the letter "a".</span></span> <span data-ttu-id="98b34-850">它使用<xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType>选项以确保正则表达式定位与这两个大写字符"a"和一个小写字母开头的单词"a"。</span><span class="sxs-lookup"><span data-stu-id="98b34-850">It uses the <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType> option to ensure that the regular expression locates words beginning with both an uppercase "a" and a lowercase "a".</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Match#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.match/cs/match2.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Regex.Match#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.match/vb/match2.vb#2)]  
  
 <span data-ttu-id="98b34-851">正则表达式模式 `\ba\w*\b` 的含义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="98b34-851">The regular expression pattern `\ba\w*\b` is interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="98b34-852">模式</span><span class="sxs-lookup"><span data-stu-id="98b34-852">Pattern</span></span>|<span data-ttu-id="98b34-853">描述</span><span class="sxs-lookup"><span data-stu-id="98b34-853">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="98b34-854">在单词边界处开始匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-854">Begin the match at a word boundary.</span></span>|  
|`a`|<span data-ttu-id="98b34-855">匹配字符"a"。</span><span class="sxs-lookup"><span data-stu-id="98b34-855">Match the character "a".</span></span>|  
|`\w*`|<span data-ttu-id="98b34-856">匹配零个、 一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-856">Match zero, one, or more word characters.</span></span>|  
|`\b`|<span data-ttu-id="98b34-857">在单词边界处结束匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-857">End the match at a word boundary.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98b34-858">出现正则表达式分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-858">A regular expression parsing error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-859">
            <paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-859">
              <paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98b34-860">
            <paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-860">
              <paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-861">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-861">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-862">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-862">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="98b34-863">
            <para>此方法等同于调用它的应用程序域的默认超时值的时间间隔后超时。如果没有为应用程序域，值定义超时值<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，它防止超时，方法使用。建议的静态方法用于检索模式匹配是<see cref="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)" />，可以在其中你设置的超时间隔。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-863">
              <para>This method times out after an interval that is equal to the default time-out value of the application domain in which it is called. If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used. The recommended static method for retrieving a pattern match is <see cref="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)" />, which lets you set the time-out interval.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Text.RegularExpressions.Match.NextMatch" />
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.Match Match (string input, string pattern, System.Text.RegularExpressions.RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.Match Match(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Match (input As String, pattern As String, options As RegexOptions, matchTimeout As TimeSpan) As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::Match ^ Match(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="static member Match : string * string * System.Text.RegularExpressions.RegexOptions * TimeSpan -&gt; System.Text.RegularExpressions.Match" Usage="System.Text.RegularExpressions.Regex.Match (input, pattern, options, matchTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-864">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-864">The string to search for a match.</span>
          </span>
        </param>
        <param name="pattern">
          <span data-ttu-id="98b34-865">要匹配的正则表达式模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-865">The regular expression pattern to match.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="98b34-866">枚举值的一个按位组合，这些枚举值提供匹配选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-866">A bitwise combination of the enumeration values that provide options for matching.</span>
          </span>
        </param>
        <param name="matchTimeout">
          <span data-ttu-id="98b34-867">超时间隔；若要指示该方法不应超时，则为 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-867">A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> to indicate that the method should not time out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-868">使用指定的匹配选项和超时间隔在输入字符串中搜索指定的正则表达式的第一个匹配项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-868">Searches the input string for the first occurrence of the specified regular expression, using the specified matching options and time-out interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-869">一个包含有关匹配的信息的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-869">An object that contains information about the match.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-870"><xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>方法返回与在输入字符串中的正则表达式模式匹配的第一个子字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-870">The <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> method returns the first substring that matches a regular expression pattern in an input string.</span></span> <span data-ttu-id="98b34-871">有关用于生成正则表达式模式的语言元素的信息，请参阅[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-871">For information about the language elements used to build a regular expression pattern, see [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="98b34-872">静态<xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>方法相当于构造<xref:System.Text.RegularExpressions.Regex>对象<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>构造函数并调用实例<xref:System.Text.RegularExpressions.Regex.Match%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-872">The static <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> method is equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> constructor and calling the instance <xref:System.Text.RegularExpressions.Regex.Match%28System.String%29> method.</span></span>  
  
 <span data-ttu-id="98b34-873">`pattern`参数包含以符号方式描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-873">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="98b34-874">有关正则表达式的详细信息，请参阅[.NET Framework 正则表达式](~/docs/standard/base-types/regular-expressions.md)和[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-874">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="98b34-875">你可以确定是否正则表达式模式已在输入字符串中找到通过检查返回的值<xref:System.Text.RegularExpressions.Match>对象的<xref:System.Text.RegularExpressions.Group.Success%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="98b34-875">You can determine whether the regular expression pattern has been found in the input string by checking the value of the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Group.Success%2A> property.</span></span> <span data-ttu-id="98b34-876">如果找到匹配项，返回<xref:System.Text.RegularExpressions.Match>对象的<xref:System.Text.RegularExpressions.Capture.Value%2A>属性包含的子字符串从`input`匹配正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-876">If a match is found, the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Capture.Value%2A> property contains the substring from `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="98b34-877">如果不找到任何匹配，其值是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="98b34-877">If no match is found, its value is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="98b34-878">此方法返回在中找到的第一个子字符串`input`匹配正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-878">This method returns the first substring found in `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="98b34-879">您可以通过重复调用返回检索后续匹配项<xref:System.Text.RegularExpressions.Match>对象的<xref:System.Text.RegularExpressions.Match.NextMatch%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-879">You can retrieve subsequent matches by repeatedly calling the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Match.NextMatch%2A> method.</span></span> <span data-ttu-id="98b34-880">您还可以通过调用来检索单个方法调用中的所有匹配项<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-880">You can also retrieve all matches in a single method call by calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="98b34-881">`matchTimeout`参数指定如何长时间模式匹配方法应尝试超时之前找到匹配项。将设置的超时间隔可防止依赖于从似乎停止响应时它们处理输入的过度回溯的正则表达式，该字符串包含接近匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-881">The `matchTimeout` parameter specifies how long a pattern matching method should try to find a match before it times out. Setting a time-out interval prevents regular expressions that rely on excessive backtracking from appearing to stop responding when they process input that contains near matches.</span></span> <span data-ttu-id="98b34-882">有关详细信息，请参阅[正则表达式的最佳实践](~/docs/standard/base-types/best-practices.md)和[回溯](~/docs/standard/base-types/backtracking-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-882">For more information, see [Best Practices for Regular Expressions](~/docs/standard/base-types/best-practices.md) and [Backtracking](~/docs/standard/base-types/backtracking-in-regular-expressions.md).</span></span> <span data-ttu-id="98b34-883">如果未找到匹配项是在该时间段内，该方法将引发<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-883">If no match is found in that time interval, the method throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="98b34-884">`matchTimeout` 重写任何应用程序域执行此方法定义的默认超时值。</span><span class="sxs-lookup"><span data-stu-id="98b34-884">`matchTimeout` overrides any default time-out value defined for the application domain in which the method executes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98b34-885">出现正则表达式分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-885">A regular expression parsing error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-886">
            <paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-886">
              <paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98b34-887">
            <paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-887">
              <paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span>
          </span>
          <span data-ttu-id="98b34-888">- 或 -  <paramref name="matchTimeout" /> 为负、零或大于 24 天左右。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-888">-or-  <paramref name="matchTimeout" /> is negative, zero, or greater than approximately 24 days.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-889">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-889">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-890">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-890">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="98b34-891">
            <para>我们建议你设置<paramref name="matchTimeout" />为适当的值，如两秒的参数。如果通过指定禁用超时<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，正则表达式引擎提供略有更好的性能。但是，你应禁用超时仅在以下情况:-当由正则表达式处理的输入源自已知且受信任的来源或由静态文本。这不包括已被动态由用户输入的文本。 -当进行全面测试正则表达式模式以确保它有效地处理匹配，非匹配项，并不久匹配。 -当正则表达式模式不包含任何已知会引起过多回溯，处理接近的匹配项时的语言元素。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-891">
              <para>We recommend that you set the <paramref name="matchTimeout" /> parameter to an appropriate value, such as two seconds. If you disable time-outs by specifying <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, the regular expression engine offers slightly better performance. However, you should disable time-outs only under the following conditions:  -   When the input processed by a regular expression is derived from a known and trusted source or consists of static text. This excludes text that has been dynamically input by users.  -   When the regular expression pattern has been thoroughly tested to ensure that it efficiently handles matches, non-matches, and near matches.  -   When the regular expression pattern contains no language elements that are known to cause excessive backtracking when processing a near match.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Matches">
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="98b34-892">在输入字符串中搜索正则表达式的所有匹配项并返回所有匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-892">Searches an input string for all occurrences of a regular expression and returns all the matches.</span>
          </span>
        </summary>
        <block subset="none" type="usage">
          <span data-ttu-id="98b34-893">
            <para>当匹配尝试重复通过调用<see cref="Overload:System.Text.RegularExpressions.Regex.Matches" />方法，正则表达式引擎提供空匹配特殊处理。通常情况下，正则表达式引擎开始完全上一个匹配的地方开始下一个匹配项的搜索。但是，空的匹配项后, 正则表达式引擎使提升一个字符然后再尝试下一个匹配项。此行为保证正则表达式引擎将进度访问的字符串。否则为因为空匹配不会导致任何向前移动，与上一个匹配项，相同的位置将开始下一个匹配项，它将重复匹配同一个空字符串。在下面的示例中，正则表达式模式<c>\*</c>搜索的零个或多个字母"a"字符串"abaabb"中。如示例所示，生成输出<see cref="T:System.Text.RegularExpressions.MatchCollection" />对象包含六个<see cref="T:System.Text.RegularExpressions.Match" />对象。第一个匹配尝试找到第一个"a"。完全其中第一个匹配结束时，在第一个 b; 之前在第二个匹配项开始它查找"a"的零个匹配项，并返回一个空字符串。第三个匹配项不开始恰好第二个匹配结束的地方，因为第二个匹配返回空字符串。相反，它从一个字符开始，在后第一个"b"。第三个匹配查找两个匹配项的"a"，并返回"aa"。第四个匹配尝试结束的地方开始第三个匹配项之前第二个"b"，, 并返回一个空字符串。第五个匹配尝试再次前移一个字符，以便它在第三个"b"之前开始，并返回一个空字符串。第六个匹配项之后在最后一个"b"开始，并且再次返回空字符串。 [！ code-csharp[System.Text.RegularExpressions.Regex.Matches#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/emptymatches1.cs#9)][！ code-vb[System.Text.RegularExpressions.Regex.Matches#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/emptymatches1.vb#9)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-893">
              <para>When a match attempt is repeated by calling the <see cref="Overload:System.Text.RegularExpressions.Regex.Matches" /> method, the regular expression engine gives empty matches special treatment. Usually, the regular expression engine begins the search for the next match exactly where the previous match left off. However, after an empty match, the regular expression engine advances by one character before trying the next match. This behavior guarantees that the regular expression engine will progress through the string. Otherwise, because an empty match does not result in any forward movement, the next match would start in exactly the same place as the previous match, and it would match the same empty string repeatedly.  In the following example, the regular expression pattern <c>a\*</c> searches for zero or more occurrences of the letter "a" in the string "abaabb". As the output from the example shows, the resulting <see cref="T:System.Text.RegularExpressions.MatchCollection" /> object contains six <see cref="T:System.Text.RegularExpressions.Match" /> objects. The first match attempt finds the first "a". The second match starts exactly where the first match ends, before the first b; it finds zero occurrences of "a" and returns an empty string. The third match does not begin exactly where the second match ended, because the second match returned an empty string. Instead, it begins one character later, after the first "b". The third match finds two occurrences of "a" and returns "aa". The fourth match attempt begins where the third match ended, before the second "b", and returns an empty string. The fifth match attempt again advances one character so that it begins before the third "b" and returns an empty string. The sixth match begins after the last "b" and returns an empty string again.  [!code-csharp[System.Text.RegularExpressions.Regex.Matches#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/emptymatches1.cs#9)] [!code-vb[System.Text.RegularExpressions.Regex.Matches#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/emptymatches1.vb#9)]</para>
            </span>
          </span>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.MatchCollection Matches (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.RegularExpressions.MatchCollection Matches(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Matches(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Matches (input As String) As MatchCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::RegularExpressions::MatchCollection ^ Matches(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Matches : string -&gt; System.Text.RegularExpressions.MatchCollection" Usage="regex.Matches input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.MatchCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-894">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-894">The string to search for a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-895">在指定的输入字符串中搜索正则表达式的所有匹配项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-895">Searches the specified input string for all occurrences of a regular expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-896">搜索操作找到的 <see cref="T:System.Text.RegularExpressions.Match" /> 对象的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-896">A collection of the <see cref="T:System.Text.RegularExpressions.Match" /> objects found by the search.</span>
          </span>
          <span data-ttu-id="98b34-897">如果未找到匹配项，则此方法将返回一个空集合对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-897">If no matches are found, the method returns an empty collection object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-898"><xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29>方法类似于是<xref:System.Text.RegularExpressions.Regex.Match%28System.String%29>输入字符串，而不是单个匹配项中找到方法，但它返回有关所有匹配项的信息。</span><span class="sxs-lookup"><span data-stu-id="98b34-898">The <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29> method is similar to the <xref:System.Text.RegularExpressions.Regex.Match%28System.String%29> method, except that it returns information about all the matches found in the input string, instead of a single match.</span></span> <span data-ttu-id="98b34-899">它等效于以下代码：</span><span class="sxs-lookup"><span data-stu-id="98b34-899">It is equivalent to the following code:</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Matches#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matchespattern.cs#5)]
 [!code-vb[System.Text.RegularExpressions.Regex.Matches#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matchespattern.vb#5)]  
  
 <span data-ttu-id="98b34-900">此集合包含仅与匹配的并且在第一个非-匹配终止。</span><span class="sxs-lookup"><span data-stu-id="98b34-900">The collection includes only matches and terminates at the first non-match.</span></span>  
  
 <span data-ttu-id="98b34-901">为其正则表达式模式<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29>方法搜索定义通过调用之一<xref:System.Text.RegularExpressions.Regex>类构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-901">The regular expression pattern for which the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29> method searches is defined by the call to one of the <xref:System.Text.RegularExpressions.Regex> class constructors.</span></span> <span data-ttu-id="98b34-902">有关可以形成正则表达式模式的元素的详细信息，请参阅[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-902">For more information about the elements that can form a regular expression pattern, see [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="98b34-903"><xref:System.Text.RegularExpressions.Regex.Matches%2A>方法使用延迟计算来填充返回<xref:System.Text.RegularExpressions.MatchCollection>对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-903">The <xref:System.Text.RegularExpressions.Regex.Matches%2A> method uses lazy evaluation to populate the returned <xref:System.Text.RegularExpressions.MatchCollection> object.</span></span> <span data-ttu-id="98b34-904">访问此集合的成员，如<xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType>和<xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType>会导致立即填充的集合。</span><span class="sxs-lookup"><span data-stu-id="98b34-904">Accessing members of this collection such as <xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType> and <xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType> causes the collection to be populated immediately.</span></span> <span data-ttu-id="98b34-905">若要充分利用迟缓计算，应循环集合通过使用一个构造，如`foreach`在 C# 和`For Each`...`Next`</span><span class="sxs-lookup"><span data-stu-id="98b34-905">To take advantage of lazy evaluation, you should iterate the collection by using a construct such as `foreach` in C# and `For Each`…`Next`</span></span> <span data-ttu-id="98b34-906">口。</span><span class="sxs-lookup"><span data-stu-id="98b34-906">in Visual Basic.</span></span>  
  
 <span data-ttu-id="98b34-907">由于其迟缓计算中，调用<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29>方法不会引发<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-907">Because of its lazy evaluation, calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29> method does not throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="98b34-908">但是，将引发异常，在执行操作时<xref:System.Text.RegularExpressions.MatchCollection>如果通过此方法返回的对象<xref:System.Text.RegularExpressions.Regex.MatchTimeout%2A>属性不是<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>和匹配的操作超出超时时间间隔。</span><span class="sxs-lookup"><span data-stu-id="98b34-908">However, the exception is thrown when an operation is performed on the <xref:System.Text.RegularExpressions.MatchCollection> object returned by this method, if the <xref:System.Text.RegularExpressions.Regex.MatchTimeout%2A> property is not <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> and a matching operation exceeds the time-out interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-909">下面的示例使用<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29>的方法来确定任何句子中的单词以"es"结尾。</span><span class="sxs-lookup"><span data-stu-id="98b34-909">The following example uses the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29> method to identify any words in a sentence that end in "es".</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Matches#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matches1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Matches#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matches1.vb#1)]  
  
 <span data-ttu-id="98b34-910">正则表达式模式 `\b\w+es\b` 的定义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="98b34-910">The regular expression pattern `\b\w+es\b` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="98b34-911">模式</span><span class="sxs-lookup"><span data-stu-id="98b34-911">Pattern</span></span>|<span data-ttu-id="98b34-912">描述</span><span class="sxs-lookup"><span data-stu-id="98b34-912">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="98b34-913">在单词边界处开始匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-913">Begin the match at a word boundary.</span></span>|  
|`\w+`|<span data-ttu-id="98b34-914">匹配一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-914">Match one or more word characters.</span></span>|  
|`es`|<span data-ttu-id="98b34-915">与匹配的文本字符串"es"。</span><span class="sxs-lookup"><span data-stu-id="98b34-915">Match the literal string "es".</span></span>|  
|`\b`|<span data-ttu-id="98b34-916">在单词边界处结束匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-916">End the match at a word boundary.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-917">
            <paramref name="input" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-917">
              <paramref name="input" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.MatchCollection Matches (string input, int startat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.RegularExpressions.MatchCollection Matches(string input, int32 startat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Matches (input As String, startat As Integer) As MatchCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::RegularExpressions::MatchCollection ^ Matches(System::String ^ input, int startat);" />
      <MemberSignature Language="F#" Value="member this.Matches : string * int -&gt; System.Text.RegularExpressions.MatchCollection" Usage="regex.Matches (input, startat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.MatchCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="startat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-918">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-918">The string to search for a match.</span>
          </span>
        </param>
        <param name="startat">
          <span data-ttu-id="98b34-919">在输入字符串中开始搜索的字符位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-919">The character position in the input string at which to start the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-920">从字符串中的指定起始位置开始，在指定的输入字符串中搜索正则表达式的所有匹配项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-920">Searches the specified input string for all occurrences of a regular expression, beginning at the specified starting position in the string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-921">搜索操作找到的 <see cref="T:System.Text.RegularExpressions.Match" /> 对象的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-921">A collection of the <see cref="T:System.Text.RegularExpressions.Match" /> objects found by the search.</span>
          </span>
          <span data-ttu-id="98b34-922">如果未找到匹配项，则此方法将返回一个空集合对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-922">If no matches are found, the method returns an empty collection object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-923"><xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.Int32%29>方法类似于是<xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29>输入字符串，而不是单个匹配项中找到方法，但它返回有关所有匹配项的信息。</span><span class="sxs-lookup"><span data-stu-id="98b34-923">The  <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.Int32%29> method is similar to the  <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29> method, except that it returns information about all the matches found in the input string, instead of a single match.</span></span> <span data-ttu-id="98b34-924">它等效于以下代码：</span><span class="sxs-lookup"><span data-stu-id="98b34-924">It is equivalent to the following code:</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Matches#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matchespattern.cs#6)]
 [!code-vb[System.Text.RegularExpressions.Regex.Matches#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matchespattern.vb#6)]  
  
 <span data-ttu-id="98b34-925">为其正则表达式模式<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.Int32%29>方法搜索定义通过调用之一<xref:System.Text.RegularExpressions.Regex>类构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-925">The regular expression pattern for which the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.Int32%29> method searches is defined by the call to one of the <xref:System.Text.RegularExpressions.Regex> class constructors.</span></span> <span data-ttu-id="98b34-926">有关可以形成正则表达式模式的元素的详细信息，请参阅[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-926">For more information about the elements that can form a regular expression pattern, see [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="98b34-927"><xref:System.Text.RegularExpressions.Regex.Matches%2A>方法使用延迟计算来填充返回<xref:System.Text.RegularExpressions.MatchCollection>对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-927">The <xref:System.Text.RegularExpressions.Regex.Matches%2A> method uses lazy evaluation to populate the returned <xref:System.Text.RegularExpressions.MatchCollection> object.</span></span> <span data-ttu-id="98b34-928">访问此集合的成员，如<xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType>和<xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType>会导致立即填充的集合。</span><span class="sxs-lookup"><span data-stu-id="98b34-928">Accessing members of this collection such as <xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType> and <xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType> causes the collection to be populated immediately.</span></span> <span data-ttu-id="98b34-929">若要充分利用迟缓计算，应循环集合通过使用一个构造，如`foreach`在 C# 和`For Each`...`Next`</span><span class="sxs-lookup"><span data-stu-id="98b34-929">To take advantage of lazy evaluation, you should iterate the collection by using a construct such as `foreach` in C# and `For Each`…`Next`</span></span> <span data-ttu-id="98b34-930">口。</span><span class="sxs-lookup"><span data-stu-id="98b34-930">in Visual Basic.</span></span>  
  
 <span data-ttu-id="98b34-931">由于其迟缓计算中，调用<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.Int32%29>方法不会引发<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-931">Because of its lazy evaluation, calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.Int32%29> method does not throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="98b34-932">但是，将引发异常，在执行操作时<xref:System.Text.RegularExpressions.MatchCollection>如果通过此方法返回的对象<xref:System.Text.RegularExpressions.Regex.MatchTimeout%2A>属性不是<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>和匹配的操作超出超时时间间隔...</span><span class="sxs-lookup"><span data-stu-id="98b34-932">However, the exception is thrown when an operation is performed on the <xref:System.Text.RegularExpressions.MatchCollection> object returned by this method, if the <xref:System.Text.RegularExpressions.Regex.MatchTimeout%2A> property is not <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> and a matching operation exceeds the time-out interval..</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-933">下面的示例使用<xref:System.Text.RegularExpressions.Regex.Match%28System.String%29>方法以查找以"es"结尾，然后调用句子中的第一个单词<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.Int32%29>的方法来确定任何其他单词以"es"结尾。</span><span class="sxs-lookup"><span data-stu-id="98b34-933">The following example uses the <xref:System.Text.RegularExpressions.Regex.Match%28System.String%29> method to find the first word in a sentence that ends in "es", and then calls the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.Int32%29> method to identify any additional words that end in "es".</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Matches#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matches3.cs#3)]
 [!code-vb[System.Text.RegularExpressions.Regex.Matches#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matches3.vb#3)]  
  
 <span data-ttu-id="98b34-934">正则表达式模式 `\b\w+es\b` 的定义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="98b34-934">The regular expression pattern `\b\w+es\b` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="98b34-935">模式</span><span class="sxs-lookup"><span data-stu-id="98b34-935">Pattern</span></span>|<span data-ttu-id="98b34-936">描述</span><span class="sxs-lookup"><span data-stu-id="98b34-936">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="98b34-937">在单词边界处开始匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-937">Begin the match at a word boundary.</span></span>|  
|`\w+`|<span data-ttu-id="98b34-938">匹配一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-938">Match one or more word characters.</span></span>|  
|`es`|<span data-ttu-id="98b34-939">与匹配的文本字符串"es"。</span><span class="sxs-lookup"><span data-stu-id="98b34-939">Match the literal string "es".</span></span>|  
|`\b`|<span data-ttu-id="98b34-940">在单词边界处结束匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-940">End the match at a word boundary.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-941">
            <paramref name="input" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-941">
              <paramref name="input" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98b34-942">
            <paramref name="startat" /> 小于零或大于 <paramref name="input" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-942">
              <paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.MatchCollection Matches (string input, string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.MatchCollection Matches(string input, string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Matches (input As String, pattern As String) As MatchCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::MatchCollection ^ Matches(System::String ^ input, System::String ^ pattern);" />
      <MemberSignature Language="F#" Value="static member Matches : string * string -&gt; System.Text.RegularExpressions.MatchCollection" Usage="System.Text.RegularExpressions.Regex.Matches (input, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.MatchCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-943">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-943">The string to search for a match.</span>
          </span>
        </param>
        <param name="pattern">
          <span data-ttu-id="98b34-944">要匹配的正则表达式模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-944">The regular expression pattern to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-945">在指定的输入字符串中搜索指定的正则表达式的所有匹配项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-945">Searches the specified input string for all occurrences of a specified regular expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-946">搜索操作找到的 <see cref="T:System.Text.RegularExpressions.Match" /> 对象的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-946">A collection of the <see cref="T:System.Text.RegularExpressions.Match" /> objects found by the search.</span>
          </span>
          <span data-ttu-id="98b34-947">如果未找到匹配项，则此方法将返回一个空集合对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-947">If no matches are found, the method returns an empty collection object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-948"><xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29>方法类似于是<xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%29>输入字符串，而不是单个匹配项中找到方法，但它返回有关所有匹配项的信息。</span><span class="sxs-lookup"><span data-stu-id="98b34-948">The <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29> method is similar to the <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%29> method, except that it returns information about all the matches found in the input string, instead of a single match.</span></span> <span data-ttu-id="98b34-949">它等效于以下代码：</span><span class="sxs-lookup"><span data-stu-id="98b34-949">It is equivalent to the following code:</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Matches#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matchespattern.cs#7)]
 [!code-vb[System.Text.RegularExpressions.Regex.Matches#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matchespattern.vb#7)]  
  
 <span data-ttu-id="98b34-950">静态`Matches`方法是构造等效<xref:System.Text.RegularExpressions.Regex>对象使用指定的正则表达式模式，并调用实例方法`Matches`。</span><span class="sxs-lookup"><span data-stu-id="98b34-950">The static `Matches` methods are equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the specified regular expression pattern and calling the instance method `Matches`.</span></span>  
  
 <span data-ttu-id="98b34-951">`pattern`参数包含以符号方式描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-951">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="98b34-952">有关正则表达式的详细信息，请参阅[.NET Framework 正则表达式](~/docs/standard/base-types/regular-expressions.md)和[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-952">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="98b34-953"><xref:System.Text.RegularExpressions.Regex.Matches%2A>方法使用延迟计算来填充返回<xref:System.Text.RegularExpressions.MatchCollection>对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-953">The <xref:System.Text.RegularExpressions.Regex.Matches%2A> method uses lazy evaluation to populate the returned <xref:System.Text.RegularExpressions.MatchCollection> object.</span></span> <span data-ttu-id="98b34-954">访问此集合的成员，如<xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType>和<xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType>会导致立即填充的集合。</span><span class="sxs-lookup"><span data-stu-id="98b34-954">Accessing members of this collection such as <xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType> and <xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType> causes the collection to be populated immediately.</span></span> <span data-ttu-id="98b34-955">若要充分利用迟缓计算，应循环集合通过使用一个构造，如`foreach`在 C# 和`For Each`...`Next`</span><span class="sxs-lookup"><span data-stu-id="98b34-955">To take advantage of lazy evaluation, you should iterate the collection by using a construct such as `foreach` in C# and `For Each`…`Next`</span></span> <span data-ttu-id="98b34-956">口。</span><span class="sxs-lookup"><span data-stu-id="98b34-956">in Visual Basic.</span></span>  
  
 <span data-ttu-id="98b34-957">由于其迟缓计算中，调用<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29>方法不会引发<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-957">Because of its lazy evaluation, calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29> method does not throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="98b34-958">但是，将引发异常，在执行操作时<xref:System.Text.RegularExpressions.MatchCollection>如果由当前的应用程序域和匹配操作的"REGEX_DEFAULT_MATCH_TIMEOUT"属性定义超时间隔，此方法中，返回的对象超出此超时时间间隔。</span><span class="sxs-lookup"><span data-stu-id="98b34-958">However, the exception is thrown when an operation is performed on the <xref:System.Text.RegularExpressions.MatchCollection> object returned by this method, if a time-out interval is defined by the "REGEX_DEFAULT_MATCH_TIMEOUT" property of the current application domain and a matching operation exceeds this time-out interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-959">下面的示例使用<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29>的方法来确定以"es"结尾的句子中的任何单词。</span><span class="sxs-lookup"><span data-stu-id="98b34-959">The following example uses the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29> method to identify any word in a sentence that ends in "es".</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Matches#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matches2.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Regex.Matches#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matches2.vb#2)]  
  
 <span data-ttu-id="98b34-960">正则表达式模式 `\b\w+es\b` 的定义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="98b34-960">The regular expression pattern `\b\w+es\b` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="98b34-961">模式</span><span class="sxs-lookup"><span data-stu-id="98b34-961">Pattern</span></span>|<span data-ttu-id="98b34-962">描述</span><span class="sxs-lookup"><span data-stu-id="98b34-962">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="98b34-963">在单词边界处开始匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-963">Begin the match at a word boundary.</span></span>|  
|`\w+`|<span data-ttu-id="98b34-964">匹配一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-964">Match one or more word characters.</span></span>|  
|`es`|<span data-ttu-id="98b34-965">与匹配的文本字符串"es"。</span><span class="sxs-lookup"><span data-stu-id="98b34-965">Match the literal string "es".</span></span>|  
|`\b`|<span data-ttu-id="98b34-966">在单词边界处结束匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-966">End the match at a word boundary.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98b34-967">出现正则表达式分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-967">A regular expression parsing error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-968">
            <paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-968">
              <paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="98b34-969">
            <para>此方法等同于调用它的应用程序域的默认超时值的时间间隔后超时。如果没有为应用程序域，值定义超时值<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，它防止超时，方法使用。建议的静态方法用于检索多个模式匹配是<see cref="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />，它可让你指定超时间隔。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-969">
              <para>This method times out after an interval that is equal to the default time-out value of the application domain in which it is called. If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used. The recommended static method for retrieving multiple pattern matches is <see cref="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you specify the time-out interval.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.MatchCollection Matches (string input, string pattern, System.Text.RegularExpressions.RegexOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.MatchCollection Matches(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Matches (input As String, pattern As String, options As RegexOptions) As MatchCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::MatchCollection ^ Matches(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options);" />
      <MemberSignature Language="F#" Value="static member Matches : string * string * System.Text.RegularExpressions.RegexOptions -&gt; System.Text.RegularExpressions.MatchCollection" Usage="System.Text.RegularExpressions.Regex.Matches (input, pattern, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.MatchCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-970">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-970">The string to search for a match.</span>
          </span>
        </param>
        <param name="pattern">
          <span data-ttu-id="98b34-971">要匹配的正则表达式模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-971">The regular expression pattern to match.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="98b34-972">枚举值的按位组合，这些枚举值指定用于匹配的选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-972">A bitwise combination of the enumeration values that specify options for matching.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-973">使用指定的匹配选项在指定的输入字符串中搜索指定的正则表达式的所有匹配项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-973">Searches the specified input string for all occurrences of a specified regular expression, using the specified matching options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-974">搜索操作找到的 <see cref="T:System.Text.RegularExpressions.Match" /> 对象的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-974">A collection of the <see cref="T:System.Text.RegularExpressions.Match" /> objects found by the search.</span>
          </span>
          <span data-ttu-id="98b34-975">如果未找到匹配项，则此方法将返回一个空集合对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-975">If no matches are found, the method returns an empty collection object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-976"><xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29>方法类似于是<xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29>输入字符串，而不是单个匹配项中找到方法，但它返回有关所有匹配项的信息。</span><span class="sxs-lookup"><span data-stu-id="98b34-976">The <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29> method is similar to the <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29> method, except that it returns information about all the matches found in the input string, instead of a single match.</span></span> <span data-ttu-id="98b34-977">它等效于以下代码：</span><span class="sxs-lookup"><span data-stu-id="98b34-977">It is equivalent to the following code:</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Matches#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matchespattern.cs#8)]
 [!code-vb[System.Text.RegularExpressions.Regex.Matches#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matchespattern.vb#8)]  
  
 <span data-ttu-id="98b34-978">静态`Matches`方法是构造等效<xref:System.Text.RegularExpressions.Regex>对象使用指定的正则表达式模式，并调用实例方法`Matches`。</span><span class="sxs-lookup"><span data-stu-id="98b34-978">The static `Matches` methods are equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the specified regular expression pattern and calling the instance method `Matches`.</span></span>  
  
 <span data-ttu-id="98b34-979">`pattern`参数包含以符号方式描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-979">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="98b34-980">有关正则表达式的详细信息，请参阅[.NET Framework 正则表达式](~/docs/standard/base-types/regular-expressions.md)和[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-980">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="98b34-981"><xref:System.Text.RegularExpressions.Regex.Matches%2A>方法使用延迟计算来填充返回<xref:System.Text.RegularExpressions.MatchCollection>对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-981">The <xref:System.Text.RegularExpressions.Regex.Matches%2A> method uses lazy evaluation to populate the returned <xref:System.Text.RegularExpressions.MatchCollection> object.</span></span> <span data-ttu-id="98b34-982">访问此集合的成员，如<xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType>和<xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType>会导致立即填充的集合。</span><span class="sxs-lookup"><span data-stu-id="98b34-982">Accessing members of this collection such as <xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType> and <xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType> causes the collection to be populated immediately.</span></span> <span data-ttu-id="98b34-983">若要充分利用迟缓计算，应循环集合通过使用一个构造，如`foreach`在 C# 和`For Each`...`Next`</span><span class="sxs-lookup"><span data-stu-id="98b34-983">To take advantage of lazy evaluation, you should iterate the collection by using a construct such as `foreach` in C# and `For Each`…`Next`</span></span> <span data-ttu-id="98b34-984">口。</span><span class="sxs-lookup"><span data-stu-id="98b34-984">in Visual Basic.</span></span>  
  
 <span data-ttu-id="98b34-985">由于其迟缓计算中，调用<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29>方法不会引发<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-985">Because of its lazy evaluation, calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29> method does not throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="98b34-986">但是，将引发异常，在执行操作时<xref:System.Text.RegularExpressions.MatchCollection>如果由当前的应用程序域和匹配操作的"REGEX_DEFAULT_MATCH_TIMEOUT"属性定义超时间隔，此方法中，返回的对象超出此超时时间间隔。</span><span class="sxs-lookup"><span data-stu-id="98b34-986">However, the exception is thrown when an operation is performed on the <xref:System.Text.RegularExpressions.MatchCollection> object returned by this method, if a time-out interval is defined by the "REGEX_DEFAULT_MATCH_TIMEOUT" property of the current application domain and a matching operation exceeds this time-out interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-987">下面的示例调用<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29>的方法来确定句子中以"es"结尾，然后调用任何 word<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29>方法来执行将模式与输入字符串不区分大小写比较。</span><span class="sxs-lookup"><span data-stu-id="98b34-987">The following example calls the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29> method to identify any word in a sentence that ends in "es", and then calls the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29> method to perform a case-insensitive comparison of the pattern with the input string.</span></span> <span data-ttu-id="98b34-988">如输出所示，两种方法将返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="98b34-988">As the output shows, the two methods return different results.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Matches#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matches4.cs#4)]
 [!code-vb[System.Text.RegularExpressions.Regex.Matches#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matches4.vb#4)]  
  
 <span data-ttu-id="98b34-989">正则表达式模式 `\b\w+es\b` 的定义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="98b34-989">The regular expression pattern `\b\w+es\b` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="98b34-990">模式</span><span class="sxs-lookup"><span data-stu-id="98b34-990">Pattern</span></span>|<span data-ttu-id="98b34-991">描述</span><span class="sxs-lookup"><span data-stu-id="98b34-991">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="98b34-992">在单词边界处开始匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-992">Begin the match at a word boundary.</span></span>|  
|`\w+`|<span data-ttu-id="98b34-993">匹配一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-993">Match one or more word characters.</span></span>|  
|`es`|<span data-ttu-id="98b34-994">与匹配的文本字符串"es"。</span><span class="sxs-lookup"><span data-stu-id="98b34-994">Match the literal string "es".</span></span>|  
|`\b`|<span data-ttu-id="98b34-995">在单词边界处结束匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-995">End the match at a word boundary.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98b34-996">出现正则表达式分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-996">A regular expression parsing error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-997">
            <paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-997">
              <paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98b34-998">
            <paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-998">
              <paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="98b34-999">
            <para>此方法等同于调用它的应用程序域的默认超时值的时间间隔后超时。如果没有为应用程序域，值定义超时值<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，它防止超时，方法使用。建议的静态方法用于检索多个模式匹配是<see cref="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />，可以在其中你设置的超时间隔。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-999">
              <para>This method times out after an interval that is equal to the default time-out value of the application domain in which it is called. If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used. The recommended static method for retrieving multiple pattern matches is <see cref="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.MatchCollection Matches (string input, string pattern, System.Text.RegularExpressions.RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.MatchCollection Matches(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Matches (input As String, pattern As String, options As RegexOptions, matchTimeout As TimeSpan) As MatchCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::MatchCollection ^ Matches(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="static member Matches : string * string * System.Text.RegularExpressions.RegexOptions * TimeSpan -&gt; System.Text.RegularExpressions.MatchCollection" Usage="System.Text.RegularExpressions.Regex.Matches (input, pattern, options, matchTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.MatchCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-1000">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1000">The string to search for a match.</span>
          </span>
        </param>
        <param name="pattern">
          <span data-ttu-id="98b34-1001">要匹配的正则表达式模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1001">The regular expression pattern to match.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="98b34-1002">枚举值的按位组合，这些枚举值指定用于匹配的选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1002">A bitwise combination of the enumeration values that specify options for matching.</span>
          </span>
        </param>
        <param name="matchTimeout">
          <span data-ttu-id="98b34-1003">超时间隔；若要指示该方法不应超时，则为 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1003">A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> to indicate that the method should not time out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-1004">使用指定的匹配选项和超时间隔在指定的输入字符串中搜索指定的正则表达式的所有匹配项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1004">Searches the specified input string for all occurrences of a specified regular expression, using the specified matching options and time-out interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-1005">搜索操作找到的 <see cref="T:System.Text.RegularExpressions.Match" /> 对象的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1005">A collection of the <see cref="T:System.Text.RegularExpressions.Match" /> objects found by the search.</span>
          </span>
          <span data-ttu-id="98b34-1006">如果未找到匹配项，则此方法将返回一个空集合对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1006">If no matches are found, the method returns an empty collection object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-1007"><xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>方法类似于是<xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>输入字符串，而不是单个匹配项中找到方法，但它返回有关所有匹配项的信息。</span><span class="sxs-lookup"><span data-stu-id="98b34-1007">The <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> method is similar to the <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> method, except that it returns information about all the matches found in the input string, instead of a single match.</span></span> <span data-ttu-id="98b34-1008">它等效于以下代码：</span><span class="sxs-lookup"><span data-stu-id="98b34-1008">It is equivalent to the following code:</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Matches#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matchespattern.cs#10)]
 [!code-vb[System.Text.RegularExpressions.Regex.Matches#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matchespattern.vb#10)]  
  
 <span data-ttu-id="98b34-1009">静态`Matches`方法是构造等效<xref:System.Text.RegularExpressions.Regex>对象使用指定的正则表达式模式，并调用实例方法`Matches`。</span><span class="sxs-lookup"><span data-stu-id="98b34-1009">The static `Matches` methods are equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the specified regular expression pattern and calling the instance method `Matches`.</span></span>  
  
 <span data-ttu-id="98b34-1010">`pattern`参数包含以符号方式描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1010">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="98b34-1011">有关正则表达式的详细信息，请参阅[.NET Framework 正则表达式](~/docs/standard/base-types/regular-expressions.md)和[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-1011">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="98b34-1012"><xref:System.Text.RegularExpressions.Regex.Matches%2A>方法使用延迟计算来填充返回<xref:System.Text.RegularExpressions.MatchCollection>对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-1012">The <xref:System.Text.RegularExpressions.Regex.Matches%2A> method uses lazy evaluation to populate the returned <xref:System.Text.RegularExpressions.MatchCollection> object.</span></span> <span data-ttu-id="98b34-1013">访问此集合的成员，如<xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType>和<xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType>会导致立即填充的集合。</span><span class="sxs-lookup"><span data-stu-id="98b34-1013">Accessing members of this collection such as <xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType> and <xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType> causes the collection to be populated immediately.</span></span> <span data-ttu-id="98b34-1014">若要充分利用迟缓计算，应循环集合通过使用一个构造，如`foreach`在 C# 和`For Each`...`Next`</span><span class="sxs-lookup"><span data-stu-id="98b34-1014">To take advantage of lazy evaluation, you should iterate the collection by using a construct such as `foreach` in C# and `For Each`…`Next`</span></span> <span data-ttu-id="98b34-1015">口。</span><span class="sxs-lookup"><span data-stu-id="98b34-1015">in Visual Basic.</span></span>  
  
 <span data-ttu-id="98b34-1016">由于其迟缓计算中，调用<xref:System.Text.RegularExpressions.Regex.Matches%2A>方法不会引发<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-1016">Because of its lazy evaluation, calling the <xref:System.Text.RegularExpressions.Regex.Matches%2A> method does not throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="98b34-1017">但是，在执行操作时引发异常<xref:System.Text.RegularExpressions.MatchCollection>在匹配操作超出指定的此超时时间间隔，此方法返回的对象`matchTimeout`参数。</span><span class="sxs-lookup"><span data-stu-id="98b34-1017">However, an exception is thrown when an operation is performed on the <xref:System.Text.RegularExpressions.MatchCollection> object returned by this method, if a matching operation exceeds this time-out interval specified by the`matchTimeout` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-1018">下面的示例调用<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>方法来执行匹配任何单词以"es"结尾的句子中的区分大小写比较。</span><span class="sxs-lookup"><span data-stu-id="98b34-1018">The following example calls the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> method to perform a case-sensitive comparison that matches any word in a sentence that ends in "es".</span></span> <span data-ttu-id="98b34-1019">然后，它调用<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>方法来执行将模式与输入字符串不区分大小写比较。</span><span class="sxs-lookup"><span data-stu-id="98b34-1019">It then calls the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> method to perform a case-insensitive comparison of the pattern with the input string.</span></span> <span data-ttu-id="98b34-1020">在这两种情况下，超时间隔设置为 1 秒。</span><span class="sxs-lookup"><span data-stu-id="98b34-1020">In both cases, the time-out interval is set to one second.</span></span> <span data-ttu-id="98b34-1021">如输出所示，两种方法将返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="98b34-1021">As the output shows, the two methods return different results.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Matches#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matches5.cs#11)]
 [!code-vb[System.Text.RegularExpressions.Regex.Matches#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matches5.vb#11)]  
  
 <span data-ttu-id="98b34-1022">正则表达式模式 `\b\w+es\b` 的定义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="98b34-1022">The regular expression pattern `\b\w+es\b` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="98b34-1023">模式</span><span class="sxs-lookup"><span data-stu-id="98b34-1023">Pattern</span></span>|<span data-ttu-id="98b34-1024">描述</span><span class="sxs-lookup"><span data-stu-id="98b34-1024">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="98b34-1025">在单词边界处开始匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-1025">Begin the match at a word boundary.</span></span>|  
|`\w+`|<span data-ttu-id="98b34-1026">匹配一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1026">Match one or more word characters.</span></span>|  
|`es`|<span data-ttu-id="98b34-1027">与匹配的文本字符串"es"。</span><span class="sxs-lookup"><span data-stu-id="98b34-1027">Match the literal string "es".</span></span>|  
|`\b`|<span data-ttu-id="98b34-1028">在单词边界处结束匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-1028">End the match at a word boundary.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98b34-1029">出现正则表达式分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1029">A regular expression parsing error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-1030">
            <paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1030">
              <paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98b34-1031">
            <paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1031">
              <paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span>
          </span>
          <span data-ttu-id="98b34-1032">- 或 -  <paramref name="matchTimeout" /> 为负、零或大于 24 天左右。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1032">-or-  <paramref name="matchTimeout" /> is negative, zero, or greater than approximately 24 days.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="98b34-1033">
            <para>我们建议你设置<paramref name="matchTimeout" />为适当的值，如两秒的参数。如果通过指定禁用超时<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，正则表达式引擎提供略有更好的性能。但是，你应禁用超时仅在以下情况:-当由正则表达式处理的输入源自已知且受信任的来源或由静态文本。这不包括已被动态由用户输入的文本。 -当进行全面测试正则表达式模式以确保它有效地处理匹配，非匹配项，并不久匹配。 -当正则表达式模式不包含任何已知会引起过多回溯，处理接近的匹配项时的语言元素。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1033">
              <para>We recommend that you set the <paramref name="matchTimeout" /> parameter to an appropriate value, such as two seconds. If you disable time-outs by specifying <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, the regular expression engine offers slightly better performance. However, you should disable time-outs only under the following conditions:  -   When the input processed by a regular expression is derived from a known and trusted source or consists of static text. This excludes text that has been dynamically input by users.  -   When the regular expression pattern has been thoroughly tested to ensure that it efficiently handles matches, non-matches, and near matches.  -   When the regular expression pattern contains no language elements that are known to cause excessive backtracking when processing a near match.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="MatchTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan MatchTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MatchTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Regex.MatchTimeout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MatchTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MatchTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.MatchTimeout : TimeSpan" Usage="System.Text.RegularExpressions.Regex.MatchTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98b34-1034">获取当前实例的超时间隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1034">Gets the time-out interval of the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="98b34-1035">在 <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> 引发之前或如果时间超期被禁用 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> ，在样式匹配操作符中可以经过的最长时间间隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1035">The maximum time interval that can elapse in a pattern-matching operation before a <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> is thrown, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> if time-outs are disabled.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-1036"><xref:System.Text.RegularExpressions.Regex.MatchTimeout%2A>属性定义的近似的最大时间间隔<xref:System.Text.RegularExpressions.Regex>实例，该操作超时前执行单个匹配操作。正则表达式引擎将引发<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>在经过超时间隔后其下一步计时检查过程中的异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-1036">The <xref:System.Text.RegularExpressions.Regex.MatchTimeout%2A> property defines the approximate maximum time interval for a <xref:System.Text.RegularExpressions.Regex> instance to execute a single matching operation before the operation times out. The regular expression engine throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception during its next timing check after the time-out interval has elapsed.</span></span> <span data-ttu-id="98b34-1037">这可以防止正则表达式引擎处理中需要过度回溯的约束的输入的字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1037">This prevents the regular expression engine from processing input strings that require excessive backtracking.</span></span> <span data-ttu-id="98b34-1038">有关详细信息，请参阅[回溯](~/docs/standard/base-types/backtracking-in-regular-expressions.md)和[正则表达式的最佳实践](~/docs/standard/base-types/best-practices.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-1038">For more information, see [Backtracking](~/docs/standard/base-types/backtracking-in-regular-expressions.md) and [Best Practices for Regular Expressions](~/docs/standard/base-types/best-practices.md).</span></span>  
  
 <span data-ttu-id="98b34-1039">此属性是只读的。</span><span class="sxs-lookup"><span data-stu-id="98b34-1039">This property is read-only.</span></span> <span data-ttu-id="98b34-1040">其值设置为个人的显式<xref:System.Text.RegularExpressions.Regex>对象通过调用<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType>构造函数，则还可以将其值设置为所有<xref:System.Text.RegularExpressions.Regex>匹配应用程序域中的操作通过调用<xref:System.AppDomain.SetData%2A?displayProperty=nameWithType>方法并提供<xref:System.TimeSpan>值"REGEX_DEFAULT_MATCH_TIMEOUT"属性，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="98b34-1040">You can set its value explicitly for an individual <xref:System.Text.RegularExpressions.Regex> object by calling the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor; and you can set its value for all <xref:System.Text.RegularExpressions.Regex> matching operations in an application domain by calling the <xref:System.AppDomain.SetData%2A?displayProperty=nameWithType> method and providing a <xref:System.TimeSpan> value for the "REGEX_DEFAULT_MATCH_TIMEOUT" property, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.MatchTimeout#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matchtimeout/cs/regexmatchtimeout1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.MatchTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matchtimeout/vb/regexmatchtimeout1.vb#1)]  
  
 <span data-ttu-id="98b34-1041">如果你未显式设置的超时间隔，默认值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>是使用，和匹配操作不会超时。</span><span class="sxs-lookup"><span data-stu-id="98b34-1041">If you do not explicitly set a time-out interval, the default value <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> is used, and matching operations do not time out.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.RegexOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.RegularExpressions.RegexOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Regex.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As RegexOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::RegularExpressions::RegexOptions Options { System::Text::RegularExpressions::RegexOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Text.RegularExpressions.RegexOptions" Usage="System.Text.RegularExpressions.Regex.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98b34-1042">获取传递给 <see cref="T:System.Text.RegularExpressions.Regex" /> 构造函数的选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1042">Gets the options that were passed into the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="98b34-1043">
            <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 枚举 的一个或多个成员表示传递至 <see cref="T:System.Text.RegularExpressions.Regex" /> 构造函数的选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1043">One or more members of the <see cref="T:System.Text.RegularExpressions.RegexOptions" /> enumeration that represent options that were passed to the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-1044">值<xref:System.Text.RegularExpressions.Regex.Options%2A>属性包含的一个或多个成员<xref:System.Text.RegularExpressions.RegexOptions>枚举。</span><span class="sxs-lookup"><span data-stu-id="98b34-1044">The value of the <xref:System.Text.RegularExpressions.Regex.Options%2A> property consists of one or more members of the <xref:System.Text.RegularExpressions.RegexOptions> enumeration.</span></span> <span data-ttu-id="98b34-1045">如果在中不定义的任何选项<xref:System.Text.RegularExpressions.Regex>类构造函数，其值是<xref:System.Text.RegularExpressions.RegexOptions.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="98b34-1045">If no options were defined in the <xref:System.Text.RegularExpressions.Regex> class constructor, its value is <xref:System.Text.RegularExpressions.RegexOptions.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="98b34-1046">中详细地讨论了可用选项[正则表达式选项](~/docs/standard/base-types/regular-expression-options.md)主题。</span><span class="sxs-lookup"><span data-stu-id="98b34-1046">The available options are discussed in detail in the [Regular Expression Options](~/docs/standard/base-types/regular-expression-options.md) topic.</span></span>  
  
 <span data-ttu-id="98b34-1047">请注意，<xref:System.Text.RegularExpressions.Regex.Options%2A>属性不会反映在正则表达式中定义的内联选项模式本身。</span><span class="sxs-lookup"><span data-stu-id="98b34-1047">Note that the <xref:System.Text.RegularExpressions.Regex.Options%2A> property does not reflect inline options defined in the regular expression pattern itself.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="98b34-1048">
            <para>
              <see cref="T:System.Text.RegularExpressions.Regex" /> 是由正则表达式的基类<see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />方法。这些已编译的正则表达式使用的基类实现<see cref="P:System.Text.RegularExpressions.Regex.Options" />属性。如果从派生类中，调用<see cref="P:System.Text.RegularExpressions.Regex.Options" />属性返回传递给选项<paramref name="options" />参数<see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" />用于定义正则表达式的类构造函数。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1048">
              <para>
                <see cref="T:System.Text.RegularExpressions.Regex" /> is the base class of regular expressions created by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. These compiled regular expressions use the base class implementation of the <see cref="P:System.Text.RegularExpressions.Regex.Options" /> property. If called from a derived class, the <see cref="P:System.Text.RegularExpressions.Regex.Options" /> property returns the options that were passed to the <paramref name="options" /> parameter of the <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> class constructor that was used to define the regular expression.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Text.RegularExpressions.RegexOptions" />
      </Docs>
    </Member>
    <Member MemberName="pattern">
      <MemberSignature Language="C#" Value="protected internal string pattern;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly string pattern" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.Regex.pattern" />
      <MemberSignature Language="VB.NET" Value="Protected Friend pattern As String " />
      <MemberSignature Language="C++ CLI" Value="protected public: System::String ^ pattern;" />
      <MemberSignature Language="F#" Value="val mutable pattern : string" Usage="System.Text.RegularExpressions.Regex.pattern" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98b34-1049">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1049">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Replace">
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="98b34-1050">在指定的输入字符串内，使用指定的替换字符串替换与某个正则表达式模式匹配的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1050">In a specified input string, replaces strings that match a regular expression pattern with a specified replacement string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string input, string replacement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(string input, string replacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, replacement As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ input, System::String ^ replacement);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * string -&gt; string" Usage="regex.Replace (input, replacement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="replacement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-1051">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1051">The string to search for a match.</span>
          </span>
        </param>
        <param name="replacement">
          <span data-ttu-id="98b34-1052">替换字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1052">The replacement string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-1053">在指定的输入字符串内，使用指定的替换字符串替换与某个正则表达式模式匹配的所有的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1053">In a specified input string, replaces all strings that match a regular expression pattern with a specified replacement string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-1054">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被替换字符串代替。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1054">A new string that is identical to the input string, except that the replacement string takes the place of each matched string.</span>
          </span>
          <span data-ttu-id="98b34-1055">如果正则表达式模式与当前实例不匹配，则此方法返回未更改的当前实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1055">If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-1056">开头开始搜索匹配项`input`字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1056">The search for matches starts at the beginning of the `input` string.</span></span> <span data-ttu-id="98b34-1057">正则表达式是当前的构造函数定义的模式<xref:System.Text.RegularExpressions.Regex>对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-1057">The regular expression is the pattern defined by the constructor for the current <xref:System.Text.RegularExpressions.Regex> object.</span></span>  
  
 <span data-ttu-id="98b34-1058">`replacement`参数指定是替换中的每个匹配项的字符串`input`。</span><span class="sxs-lookup"><span data-stu-id="98b34-1058">The `replacement` parameter specifies the string that is to replace each match in `input`.</span></span> <span data-ttu-id="98b34-1059">`replacement` 可以包含文字文本的任意组合和[替换](~/docs/standard/base-types/substitutions-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-1059">`replacement` can consist of any combination of literal text and [substitutions](~/docs/standard/base-types/substitutions-in-regular-expressions.md).</span></span> <span data-ttu-id="98b34-1060">例如，替换模式`a*${test}b`插入字符串"*"跟由匹配的子字符串`test`捕获组，如果有的话后, 跟字符串"b"。</span><span class="sxs-lookup"><span data-stu-id="98b34-1060">For example, the replacement pattern `a*${test}b` inserts the string "a*" followed by the substring that is matched by the `test` capturing group, if any, followed by the string "b".</span></span> <span data-ttu-id="98b34-1061">\* 字符不被识别为元字符在替换模式中。</span><span class="sxs-lookup"><span data-stu-id="98b34-1061">The \* character is not recognized as a metacharacter within a replacement pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="98b34-1062">替换是替换模式中识别的唯一的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1062">Substitutions are the only regular expression language elements that are recognized in a replacement pattern.</span></span> <span data-ttu-id="98b34-1063">所有其他正则表达式语言元素，包括[字符转义](~/docs/standard/base-types/character-escapes-in-regular-expressions.md)、 在仅正则表达式模式中允许和不在替换模式中识别。</span><span class="sxs-lookup"><span data-stu-id="98b34-1063">All other regular expression language elements, including [character escapes](~/docs/standard/base-types/character-escapes-in-regular-expressions.md), are allowed in regular expression patterns only and are not recognized in replacement patterns.</span></span>  
  
 <span data-ttu-id="98b34-1064"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果替换操作的执行时间超出指定的超时间隔将引发异常<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-1064">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="98b34-1065">如果该操作超过应用程序域建立在其中任何超时值时调用的构造函数未设置的超时间隔，如果引发异常<xref:System.Text.RegularExpressions.Regex>创建对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-1065">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="98b34-1066">如果在中定义无超时<xref:System.Text.RegularExpressions.Regex>构造函数调用或在应用程序域的属性中，或如果超时值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，不会引发异常</span><span class="sxs-lookup"><span data-stu-id="98b34-1066">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown</span></span>  
  
 <span data-ttu-id="98b34-1067">因为该方法返回`input`如果没有匹配项，保持不变，你可以使用<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法来确定该方法是否已发生与输入字符串的任何替换。</span><span class="sxs-lookup"><span data-stu-id="98b34-1067">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-1068">下面的示例定义正则表达式， `\s+`，与一个或多个空白字符相匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-1068">The following example defines a regular expression, `\s+`, that matches one or more white-space characters.</span></span> <span data-ttu-id="98b34-1069">替换字符串中，""，将它们替换为单个空格字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1069">The replacement string, " ", replaces them with a single space character.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replaceexample5.cs#5)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replaceexample5.vb#5)]  
  
 <span data-ttu-id="98b34-1070">下面的示例定义正则表达式， `(\p{Sc}\s?)?(\d+\.?((?<=\.)\d+)?)(?(1)|\s?\p{Sc})?`，和一个替换模式， `$2`，，从中移除一个前导或尾随的货币符号的数字值。</span><span class="sxs-lookup"><span data-stu-id="98b34-1070">The following example defines a regular expression, `(\p{Sc}\s?)?(\d+\.?((?<=\.)\d+)?)(?(1)|\s?\p{Sc})?`, and a replacement pattern, `$2`, that removes either a leading or a trailing currency symbol from a numeric value.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replaceexample7.cs#7)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replaceexample7.vb#7)]  
  
 <span data-ttu-id="98b34-1071">正则表达式模式可以解释为下表中所示内容。</span><span class="sxs-lookup"><span data-stu-id="98b34-1071">The regular expression is interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="98b34-1072">模式</span><span class="sxs-lookup"><span data-stu-id="98b34-1072">Pattern</span></span>|<span data-ttu-id="98b34-1073">描述</span><span class="sxs-lookup"><span data-stu-id="98b34-1073">Description</span></span>|  
|-------------|-----------------|  
|`\p{Sc}`|<span data-ttu-id="98b34-1074">匹配货币符号。</span><span class="sxs-lookup"><span data-stu-id="98b34-1074">Match a currency symbol.</span></span> <span data-ttu-id="98b34-1075">`{Sc}` 表示任何字符的 Unicode 符号、 货币类别的成员。</span><span class="sxs-lookup"><span data-stu-id="98b34-1075">`{Sc}` denotes any character that is a member of the Unicode Symbol, Currency category.</span></span>|  
|`\s?`|<span data-ttu-id="98b34-1076">匹配零个或一个空白字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1076">Match zero or one white-space character.</span></span>|  
|`(\p{Sc}\s?)?`|<span data-ttu-id="98b34-1077">匹配零个或一个匹配项的货币符号后跟零个或一个空白字符的组合。</span><span class="sxs-lookup"><span data-stu-id="98b34-1077">Match zero or one occurrence of the combination of a currency symbol followed by zero or one white-space character.</span></span> <span data-ttu-id="98b34-1078">这是第一个捕获组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1078">This is the first capturing group.</span></span>|  
|`\d+`|<span data-ttu-id="98b34-1079">匹配一个或多个十进制数字。</span><span class="sxs-lookup"><span data-stu-id="98b34-1079">Match one or more decimal digits.</span></span>|  
|`\.?`|<span data-ttu-id="98b34-1080">匹配零个或一个匹配项的句点 （用作小数分隔符字符）。</span><span class="sxs-lookup"><span data-stu-id="98b34-1080">Match zero or one occurrence of a period (used as a decimal separator character).</span></span>|  
|`((?<=\.)\d+)?`|<span data-ttu-id="98b34-1081">如果一段时间是前一个字符，则匹配一个或多个十进制数字。</span><span class="sxs-lookup"><span data-stu-id="98b34-1081">If a period is the previous character, match one or more decimal digits.</span></span> <span data-ttu-id="98b34-1082">此模式可以匹配零个或一个时间。</span><span class="sxs-lookup"><span data-stu-id="98b34-1082">This pattern can be matched either zero or one time.</span></span>|  
|`(\d+\.?((?<=\.)\d+)?)`|<span data-ttu-id="98b34-1083">匹配一个或多个十进制数字，后面再跟一个可选的句点和其他十进制数字的模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-1083">Match the pattern of one or more decimal digits followed by an optional period and additional decimal digits.</span></span> <span data-ttu-id="98b34-1084">这是第二个捕获组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1084">This is the second capturing group.</span></span> <span data-ttu-id="98b34-1085">调用<xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%29>方法会整个匹配项替换为此捕获组的值。</span><span class="sxs-lookup"><span data-stu-id="98b34-1085">The call to the <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%29> method replaces the entire match with the value of this captured group.</span></span>|  
|`(?(1)&#124;\s?\p{Sc})?`|<span data-ttu-id="98b34-1086">如果第一个捕获的组存在，则匹配空字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1086">If the first captured group exists, match an empty string.</span></span> <span data-ttu-id="98b34-1087">否则，匹配零个或一个空白字符，再后跟货币符号。</span><span class="sxs-lookup"><span data-stu-id="98b34-1087">Otherwise, match zero or one white-space character followed by a currency symbol.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-1088">
            <paramref name="input" /> 或 <paramref name="replacement" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1088">
              <paramref name="input" /> or <paramref name="replacement" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-1089">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1089">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-1090">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1090">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string input, System.Text.RegularExpressions.MatchEvaluator evaluator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(string input, class System.Text.RegularExpressions.MatchEvaluator evaluator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, evaluator As MatchEvaluator) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ input, System::Text::RegularExpressions::MatchEvaluator ^ evaluator);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * System.Text.RegularExpressions.MatchEvaluator -&gt; string" Usage="regex.Replace (input, evaluator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="evaluator" Type="System.Text.RegularExpressions.MatchEvaluator" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-1091">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1091">The string to search for a match.</span>
          </span>
        </param>
        <param name="evaluator">
          <span data-ttu-id="98b34-1092">一个自定义方法，该方法检查每个匹配项，然后返回原始的匹配字符串或替换字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1092">A custom method that examines each match and returns either the original matched string or a replacement string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-1093">在指定的输入字符串中，使用由 <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> 委托返回的字符串替换与指定的正则表达式匹配的所有字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1093">In a specified input string, replaces all strings that match a specified regular expression with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-1094">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被一个替换字符串代替。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1094">A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</span>
          </span>
          <span data-ttu-id="98b34-1095">如果正则表达式模式与当前实例不匹配，则此方法返回未更改的当前实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1095">If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-1096"><xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.Text.RegularExpressions.MatchEvaluator%29?displayProperty=nameWithType>方法可用于替换正则表达式匹配，如果以下任何条件为 true:</span><span class="sxs-lookup"><span data-stu-id="98b34-1096">The <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.Text.RegularExpressions.MatchEvaluator%29?displayProperty=nameWithType> method is useful for replacing a regular expression match if any of the following conditions is true:</span></span>  
  
-   <span data-ttu-id="98b34-1097">正则表达式替换模式中不能轻松地指定替换字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1097">The replacement string cannot readily be specified by a regular expression replacement pattern.</span></span>  
  
-   <span data-ttu-id="98b34-1098">通过在匹配的字符串上完成某些处理生成的替换字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1098">The replacement string results from some processing done on the matched string.</span></span>  
  
-   <span data-ttu-id="98b34-1099">替换字符串的结果从有条件处理。</span><span class="sxs-lookup"><span data-stu-id="98b34-1099">The replacement string results from conditional processing.</span></span>  
  
 <span data-ttu-id="98b34-1100">此方法等效于调用<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29?displayProperty=nameWithType>方法并传递每个<xref:System.Text.RegularExpressions.Match>在返回的对象<xref:System.Text.RegularExpressions.MatchCollection>集合到`evaluator`委托。</span><span class="sxs-lookup"><span data-stu-id="98b34-1100">The method is equivalent to calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29?displayProperty=nameWithType> method and passing each <xref:System.Text.RegularExpressions.Match> object in the returned <xref:System.Text.RegularExpressions.MatchCollection> collection to the `evaluator` delegate.</span></span>  
  
 <span data-ttu-id="98b34-1101">正则表达式是当前的构造函数定义的模式<xref:System.Text.RegularExpressions.Regex>对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-1101">The regular expression is the pattern defined by the constructor for the current <xref:System.Text.RegularExpressions.Regex> object.</span></span>  
  
 <span data-ttu-id="98b34-1102">`evaluator`参数是你定义的自定义方法的委托，用于检查每个匹配项。</span><span class="sxs-lookup"><span data-stu-id="98b34-1102">The `evaluator` parameter is the delegate for a custom method that you define and that examines each match.</span></span> <span data-ttu-id="98b34-1103">自定义的方法必须具有以下签名以匹配<xref:System.Text.RegularExpressions.MatchEvaluator>委托。</span><span class="sxs-lookup"><span data-stu-id="98b34-1103">The custom method must have the following signature to match the <xref:System.Text.RegularExpressions.MatchEvaluator> delegate.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/syntax1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/syntax1.vb#1)]  
  
 <span data-ttu-id="98b34-1104">你自定义的方法返回替换匹配的输入的字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1104">Your custom method returns a string that replaces the matched input.</span></span>  
  
 <span data-ttu-id="98b34-1105"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果替换操作的执行时间超出指定的超时间隔将引发异常<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-1105">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="98b34-1106">如果该操作超过应用程序域建立在其中任何超时值时调用的构造函数未设置的超时间隔，如果引发异常<xref:System.Text.RegularExpressions.Regex>创建对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-1106">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="98b34-1107">如果在中定义无超时<xref:System.Text.RegularExpressions.Regex>构造函数调用或在应用程序域的属性中，或如果超时值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，不会引发异常</span><span class="sxs-lookup"><span data-stu-id="98b34-1107">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown</span></span>  
  
 <span data-ttu-id="98b34-1108">因为该方法返回`input`如果没有匹配项，保持不变，你可以使用<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法来确定该方法是否已发生与输入字符串的任何替换。</span><span class="sxs-lookup"><span data-stu-id="98b34-1108">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-1109">下面的代码示例显示原始字符串、 匹配原始字符串中的每个单词、 将转换后的字符串转换为大写，然后显示每个匹配项的第一个字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1109">The following code example displays an original string, matches each word in the original string, converts the first character of each match to uppercase, then displays the converted string.</span></span>  
  
 [!code-csharp[Regex.Replace-Instance#1](~/samples/snippets/csharp/VS_Snippets_CLR/Regex.Replace-Instance/cs/sample.cs#1)]
 [!code-vb[Regex.Replace-Instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Regex.Replace-Instance/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-1110">
            <paramref name="input" /> 或 <paramref name="evaluator" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1110">
              <paramref name="input" /> or <paramref name="evaluator" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-1111">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1111">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-1112">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1112">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.RegularExpressions.MatchEvaluator" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string input, string replacement, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(string input, string replacement, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, replacement As String, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ input, System::String ^ replacement, int count);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * string * int -&gt; string" Usage="regex.Replace (input, replacement, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="replacement" Type="System.String" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-1113">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1113">The string to search for a match.</span>
          </span>
        </param>
        <param name="replacement">
          <span data-ttu-id="98b34-1114">替换字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1114">The replacement string.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="98b34-1115">可进行替换的最大次数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1115">The maximum number of times the replacement can occur.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-1116">在指定输入字符串内，使用指定替换字符串替换与某个正则表达式模式匹配的字符串（其数目为指定的最大数目）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1116">In a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-1117">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被替换字符串代替。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1117">A new string that is identical to the input string, except that the replacement string takes the place of each matched string.</span>
          </span>
          <span data-ttu-id="98b34-1118">如果正则表达式模式与当前实例不匹配，则此方法返回未更改的当前实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1118">If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-1119">开头开始搜索匹配项`input`字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1119">The search for matches starts at the beginning of the `input` string.</span></span> <span data-ttu-id="98b34-1120">正则表达式是由当前的构造函数定义的模式<xref:System.Text.RegularExpressions.Regex>对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-1120">The regular expression is the pattern that is defined by the constructor for the current <xref:System.Text.RegularExpressions.Regex> object.</span></span> <span data-ttu-id="98b34-1121">如果`count`为负，替换继续到字符串的末尾。</span><span class="sxs-lookup"><span data-stu-id="98b34-1121">If `count` is negative, replacements continue to the end of the string.</span></span> <span data-ttu-id="98b34-1122">如果`count`超过了匹配项的数目，则替换所有匹配项。</span><span class="sxs-lookup"><span data-stu-id="98b34-1122">If `count` exceeds the number of matches, all matches are replaced.</span></span>  
  
 <span data-ttu-id="98b34-1123">`replacement`参数指定的字符串，用于替换第一个`count`中匹配`input`。</span><span class="sxs-lookup"><span data-stu-id="98b34-1123">The `replacement` parameter specifies the string that is to replace the first `count` matches in `input`.</span></span> <span data-ttu-id="98b34-1124">`replacement` 可以包含文字文本的任意组合和[替换](~/docs/standard/base-types/substitutions-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-1124">`replacement` can consist of any combination of literal text and [substitutions](~/docs/standard/base-types/substitutions-in-regular-expressions.md).</span></span> <span data-ttu-id="98b34-1125">例如，替换模式`a*${test}b`插入字符串"*"跟由匹配的子字符串`test`捕获组，如果有的话后, 跟字符串"b"。</span><span class="sxs-lookup"><span data-stu-id="98b34-1125">For example, the replacement pattern `a*${test}b` inserts the string "a*" followed by the substring that is matched by the `test` capturing group, if any, followed by the string "b".</span></span> <span data-ttu-id="98b34-1126">\* 字符不被识别为元字符在替换模式中。</span><span class="sxs-lookup"><span data-stu-id="98b34-1126">The \* character is not recognized as a metacharacter within a replacement pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="98b34-1127">替换是替换模式中识别的唯一的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1127">Substitutions are the only regular expression language elements that are recognized in a replacement pattern.</span></span> <span data-ttu-id="98b34-1128">所有其他正则表达式语言元素，包括[字符转义](~/docs/standard/base-types/character-escapes-in-regular-expressions.md)、 在仅正则表达式模式中允许和不在替换模式中识别。</span><span class="sxs-lookup"><span data-stu-id="98b34-1128">All other regular expression language elements, including [character escapes](~/docs/standard/base-types/character-escapes-in-regular-expressions.md), are allowed in regular expression patterns only and are not recognized in replacement patterns.</span></span>  
  
 <span data-ttu-id="98b34-1129"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果替换操作的执行时间超出指定的超时间隔将引发异常<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-1129">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="98b34-1130">如果该操作超过应用程序域建立在其中任何超时值时调用的构造函数未设置的超时间隔，如果引发异常<xref:System.Text.RegularExpressions.Regex>创建对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-1130">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="98b34-1131">如果在中定义无超时<xref:System.Text.RegularExpressions.Regex>构造函数调用或在应用程序域的属性中，或如果超时值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，不会引发异常</span><span class="sxs-lookup"><span data-stu-id="98b34-1131">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown</span></span>  
  
 <span data-ttu-id="98b34-1132">因为该方法返回`input`如果没有匹配项，保持不变，你可以使用<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法来确定该方法是否已发生与输入字符串的任何替换。</span><span class="sxs-lookup"><span data-stu-id="98b34-1132">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-1133">下面的示例将重复字符的前五个匹配项替换为单个字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1133">The following example replaces the first five occurrences of duplicated characters with a single character.</span></span> <span data-ttu-id="98b34-1134">正则表达式模式`(\w)\1`匹配的单个字符的连续匹配项并将第一个匹配项分配给第一个捕获组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1134">The regular expression pattern `(\w)\1` matches consecutive occurrences of a single character and assigns the first occurrence to the first capturing group.</span></span> <span data-ttu-id="98b34-1135">替换模式`$1`整个匹配项替换第一个捕获组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1135">The replacement pattern `$1` replaces the entire match with the first captured group.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replaceexample8.cs#8)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replaceexample8.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-1136">
            <paramref name="input" /> 或 <paramref name="replacement" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1136">
              <paramref name="input" /> or <paramref name="replacement" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-1137">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1137">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-1138">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1138">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static string Replace (string input, string pattern, string replacement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Replace(string input, string pattern, string replacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Replace (input As String, pattern As String, replacement As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Replace(System::String ^ input, System::String ^ pattern, System::String ^ replacement);" />
      <MemberSignature Language="F#" Value="static member Replace : string * string * string -&gt; string" Usage="System.Text.RegularExpressions.Regex.Replace (input, pattern, replacement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="replacement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-1139">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1139">The string to search for a match.</span>
          </span>
        </param>
        <param name="pattern">
          <span data-ttu-id="98b34-1140">要匹配的正则表达式模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1140">The regular expression pattern to match.</span>
          </span>
        </param>
        <param name="replacement">
          <span data-ttu-id="98b34-1141">替换字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1141">The replacement string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-1142">在指定的输入字符串内，使用指定的替换字符串替换与指定正则表达式匹配的所有字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1142">In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-1143">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被替换字符串代替。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1143">A new string that is identical to the input string, except that the replacement string takes the place of each matched string.</span>
          </span>
          <span data-ttu-id="98b34-1144">如果 <paramref name="pattern" /> 与当前实例不匹配，则此方法返回未更改的当前实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1144">If <paramref name="pattern" /> is not matched in the current instance, the method returns the current instance unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-1145">静态`Replace`方法是构造等效<xref:System.Text.RegularExpressions.Regex>对象使用指定的正则表达式模式，并调用实例方法`Replace`。</span><span class="sxs-lookup"><span data-stu-id="98b34-1145">The static `Replace` methods are equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the specified regular expression pattern and calling the instance method `Replace`.</span></span>  
  
 <span data-ttu-id="98b34-1146">`pattern`参数包含以符号方式描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1146">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="98b34-1147">有关正则表达式的详细信息，请参阅[.NET Framework 正则表达式](~/docs/standard/base-types/regular-expressions.md)和[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-1147">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span> <span data-ttu-id="98b34-1148">开头开始搜索匹配项`input`字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1148">The search for matches starts at the beginning of the `input` string.</span></span>  
  
 <span data-ttu-id="98b34-1149">`replacement`参数指定是替换中的每个匹配项的字符串`input`。</span><span class="sxs-lookup"><span data-stu-id="98b34-1149">The `replacement` parameter specifies the string that is to replace each match in `input`.</span></span> <span data-ttu-id="98b34-1150">`replacement` 可以包含文字文本的任意组合和[替换](~/docs/standard/base-types/substitutions-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-1150">`replacement` can consist of any combination of literal text and [substitutions](~/docs/standard/base-types/substitutions-in-regular-expressions.md).</span></span> <span data-ttu-id="98b34-1151">例如，替换模式`a*${test}b`插入字符串"*"跟由匹配的子字符串`test`捕获组，如果有的话后, 跟字符串"b"。</span><span class="sxs-lookup"><span data-stu-id="98b34-1151">For example, the replacement pattern `a*${test}b` inserts the string "a*" followed by the substring that is matched by the `test` capturing group, if any, followed by the string "b".</span></span> <span data-ttu-id="98b34-1152">\* 字符不被识别为元字符在替换模式中。</span><span class="sxs-lookup"><span data-stu-id="98b34-1152">The \* character is not recognized as a metacharacter within a replacement pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="98b34-1153">替换是替换模式中识别的唯一的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1153">Substitutions are the only regular expression language elements that are recognized in a replacement pattern.</span></span> <span data-ttu-id="98b34-1154">所有其他正则表达式语言元素，包括[字符转义](~/docs/standard/base-types/character-escapes-in-regular-expressions.md)、 在仅正则表达式模式中允许和不在替换模式中识别。</span><span class="sxs-lookup"><span data-stu-id="98b34-1154">All other regular expression language elements, including [character escapes](~/docs/standard/base-types/character-escapes-in-regular-expressions.md), are allowed in regular expression patterns only and are not recognized in replacement patterns.</span></span>  
  
 <span data-ttu-id="98b34-1155"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果替换操作的执行时间超出指定的方法称为应用程序域的超时间隔将引发异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-1155">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="98b34-1156">如果没有超时设置定义在应用程序域的属性中，或者如果超时值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-1156">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
 <span data-ttu-id="98b34-1157">因为该方法返回`input`如果没有匹配项，保持不变，你可以使用<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法来确定该方法是否已发生与输入字符串的任何替换。</span><span class="sxs-lookup"><span data-stu-id="98b34-1157">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-1158">下面的示例定义正则表达式， `\s+`，与一个或多个空白字符相匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-1158">The following example defines a regular expression, `\s+`, that matches one or more white-space characters.</span></span> <span data-ttu-id="98b34-1159">替换字符串中，""，将它们替换为单个空格字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1159">The replacement string, " ", replaces them with a single space character.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replaceexample6.cs#6)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replaceexample6.vb#6)]  
  
 <span data-ttu-id="98b34-1160">下面的示例使用<xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.String%29>方法将替换为本地文件路径的 UNC 路径中的本地计算机和驱动器名称。</span><span class="sxs-lookup"><span data-stu-id="98b34-1160">The following example uses the <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.String%29> method to replace the local machine and drive names in a UNC path with a local file path.</span></span> <span data-ttu-id="98b34-1161">正则表达式使用<xref:System.Environment.MachineName%2A?displayProperty=nameWithType>属性以包含本地计算机的名称和<xref:System.Environment.GetLogicalDrives%2A?displayProperty=nameWithType>方法将包含的逻辑驱动器的名称。</span><span class="sxs-lookup"><span data-stu-id="98b34-1161">The regular expression uses the <xref:System.Environment.MachineName%2A?displayProperty=nameWithType> property to include the name of the local computer, and the <xref:System.Environment.GetLogicalDrives%2A?displayProperty=nameWithType> method to include the names of the logical drives.</span></span> <span data-ttu-id="98b34-1162">若要成功运行该示例，应将文本字符串"MyMachine"替换你本地计算机的名称。</span><span class="sxs-lookup"><span data-stu-id="98b34-1162">To run the example successfully, you should replace the literal string "MyMachine" with your local machine name.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replace3.cs#3)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replace3.vb#3)]  
  
 <span data-ttu-id="98b34-1163">以下表达式所定义的正则表达式模式：</span><span class="sxs-lookup"><span data-stu-id="98b34-1163">The regular expression pattern is defined by the following expression:</span></span>  
  
 `"\\\\(?i:" + Environment.MachineName + ")(?:\.\w+)*\\((?i:[" + driveNames + "]))\$"`  
  
 <span data-ttu-id="98b34-1164">下表演示了如何解释正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-1164">The following table shows how the regular expression pattern is interpreted.</span></span>  
  
|<span data-ttu-id="98b34-1165">模式</span><span class="sxs-lookup"><span data-stu-id="98b34-1165">Pattern</span></span>|<span data-ttu-id="98b34-1166">描述</span><span class="sxs-lookup"><span data-stu-id="98b34-1166">Description</span></span>|  
|-------------|-----------------|  
|`\\\\`|<span data-ttu-id="98b34-1167">匹配两个连续反斜杠 (`\`) 字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1167">Match two consecutive backslash (`\`) characters.</span></span> <span data-ttu-id="98b34-1168">反斜杠字符解释为转义符，因为每个反斜杠必须使用另一个反斜杠进行转义。</span><span class="sxs-lookup"><span data-stu-id="98b34-1168">Because the backslash character is interpreted as the escape character, each backslash must be escaped with another backslash.</span></span>|  
|`(?i:" + Environment.MachineName + ")`|<span data-ttu-id="98b34-1169">执行返回的字符串不区分大小写的匹配<xref:System.Environment.MachineName%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="98b34-1169">Perform a case-insensitive match of the string that is returned by the <xref:System.Environment.MachineName%2A?displayProperty=nameWithType> property.</span></span>|  
|`(?:\.\w+)*`|<span data-ttu-id="98b34-1170">匹配句号 (`.`) 字符后跟一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1170">Match the period (`.`) character followed by one or more word characters.</span></span> <span data-ttu-id="98b34-1171">此匹配可以出现零次或多次。</span><span class="sxs-lookup"><span data-stu-id="98b34-1171">This match can occur zero or more times.</span></span> <span data-ttu-id="98b34-1172">不捕获匹配的子表达式。</span><span class="sxs-lookup"><span data-stu-id="98b34-1172">The matched subexpression is not captured.</span></span>|  
|`\\`|<span data-ttu-id="98b34-1173">匹配一个反斜杠 (`\`) 字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1173">Match a backslash (`\`) character.</span></span>|  
|`((?i:[" + driveNames + "]))`|<span data-ttu-id="98b34-1174">执行不区分大小写的匹配项，包含单个驱动器字母的字符类。</span><span class="sxs-lookup"><span data-stu-id="98b34-1174">Perform a case-insensitive match of the character class that consists of the individual drive lettters.</span></span> <span data-ttu-id="98b34-1175">此匹配项是第一个捕获子表达式。</span><span class="sxs-lookup"><span data-stu-id="98b34-1175">This match is the first captured subexpression.</span></span>|  
|`\$`|<span data-ttu-id="98b34-1176">匹配文本的美元符号 (`$`) 字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1176">Match the literal dollar sign (`$`) character.</span></span>|  
  
 <span data-ttu-id="98b34-1177">替换模式`$1`用第一个捕获子表达式替换整个匹配项。</span><span class="sxs-lookup"><span data-stu-id="98b34-1177">The replacement pattern `$1` replaces the entire match with the first captured subexpression.</span></span> <span data-ttu-id="98b34-1178">也就是说，它可以用的驱动器号替换 UNC 机和驱动器名称。</span><span class="sxs-lookup"><span data-stu-id="98b34-1178">That is, it replaces the UNC machine and drive name with the drive letter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98b34-1179">出现正则表达式分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1179">A regular expression parsing error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-1180">
            <paramref name="input" />、<paramref name="pattern" /> 或 <paramref name="replacement" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1180">
              <paramref name="input" />, <paramref name="pattern" />, or <paramref name="replacement" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-1181">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1181">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-1182">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1182">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="98b34-1183">
            <para>此方法等同于调用它的应用程序域的默认超时值的时间间隔后超时。如果没有为应用程序域，值定义超时值<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，它防止超时，方法使用。建议的静态方法，用于更换有模式匹配是<see cref="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />，可以在其中你设置的超时间隔。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1183">
              <para>This method times out after an interval that is equal to the default time-out value of the application domain in which it is called. If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used. The recommended static method for replacing a pattern match is <see cref="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static string Replace (string input, string pattern, System.Text.RegularExpressions.MatchEvaluator evaluator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Replace(string input, string pattern, class System.Text.RegularExpressions.MatchEvaluator evaluator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Replace (input As String, pattern As String, evaluator As MatchEvaluator) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Replace(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::MatchEvaluator ^ evaluator);" />
      <MemberSignature Language="F#" Value="static member Replace : string * string * System.Text.RegularExpressions.MatchEvaluator -&gt; string" Usage="System.Text.RegularExpressions.Regex.Replace (input, pattern, evaluator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="evaluator" Type="System.Text.RegularExpressions.MatchEvaluator" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-1184">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1184">The string to search for a match.</span>
          </span>
        </param>
        <param name="pattern">
          <span data-ttu-id="98b34-1185">要匹配的正则表达式模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1185">The regular expression pattern to match.</span>
          </span>
        </param>
        <param name="evaluator">
          <span data-ttu-id="98b34-1186">一个自定义方法，该方法检查每个匹配项，然后返回原始的匹配字符串或替换字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1186">A custom method that examines each match and returns either the original matched string or a replacement string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-1187">在指定的输入字符串中，使用由 <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> 委托返回的字符串替换与指定的正则表达式匹配的所有字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1187">In a specified input string, replaces all strings that match a specified regular expression with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-1188">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被一个替换字符串代替。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1188">A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</span>
          </span>
          <span data-ttu-id="98b34-1189">如果 <paramref name="pattern" /> 与当前实例不匹配，则此方法返回未更改的当前实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1189">If <paramref name="pattern" /> is not matched in the current instance, the method returns the current instance unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-1190"><xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%29?displayProperty=nameWithType>方法可用于替换正则表达式匹配，如果以下任何条件为 true:</span><span class="sxs-lookup"><span data-stu-id="98b34-1190">The <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%29?displayProperty=nameWithType> method is useful for replacing a regular expression match if any of the following conditions is true:</span></span>  
  
-   <span data-ttu-id="98b34-1191">正则表达式替换模式中不能轻松地指定替换字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1191">The replacement string cannot readily be specified by a regular expression replacement pattern.</span></span>  
  
-   <span data-ttu-id="98b34-1192">通过在匹配的字符串上完成某些处理生成的替换字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1192">The replacement string results from some processing done on the matched string.</span></span>  
  
-   <span data-ttu-id="98b34-1193">替换字符串的结果从有条件处理。</span><span class="sxs-lookup"><span data-stu-id="98b34-1193">The replacement string results from conditional processing.</span></span>  
  
 <span data-ttu-id="98b34-1194">此方法等效于调用<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29?displayProperty=nameWithType>方法并传递每个<xref:System.Text.RegularExpressions.Match>在返回的对象<xref:System.Text.RegularExpressions.MatchCollection>集合到`evaluator`委托。</span><span class="sxs-lookup"><span data-stu-id="98b34-1194">The method is equivalent to calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29?displayProperty=nameWithType> method and passing each <xref:System.Text.RegularExpressions.Match> object in the returned <xref:System.Text.RegularExpressions.MatchCollection> collection to the `evaluator` delegate.</span></span>  
  
 <span data-ttu-id="98b34-1195">`pattern`参数包含以符号方式描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1195">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="98b34-1196">有关正则表达式的详细信息，请参阅[.NET Framework 正则表达式](~/docs/standard/base-types/regular-expressions.md)和[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-1196">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="98b34-1197">`evaluator`参数是你定义的自定义方法的委托，用于检查每个匹配项。</span><span class="sxs-lookup"><span data-stu-id="98b34-1197">The `evaluator` parameter is the delegate for a custom method that you define and that examines each match.</span></span> <span data-ttu-id="98b34-1198">自定义的方法必须具有以下签名以匹配<xref:System.Text.RegularExpressions.MatchEvaluator>委托。</span><span class="sxs-lookup"><span data-stu-id="98b34-1198">The custom method must have the following signature to match the <xref:System.Text.RegularExpressions.MatchEvaluator> delegate.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/syntax1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/syntax1.vb#1)]  
  
 <span data-ttu-id="98b34-1199">你自定义的方法返回替换匹配的输入的字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1199">Your custom method returns a string that replaces the matched input.</span></span>  
  
 <span data-ttu-id="98b34-1200"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果替换操作的执行时间超出指定的方法称为应用程序域的超时间隔将引发异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-1200">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="98b34-1201">如果没有超时设置定义在应用程序域的属性中，或者如果超时值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-1201">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
 <span data-ttu-id="98b34-1202">因为该方法返回`input`如果没有匹配项，保持不变，你可以使用<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法来确定该方法是否已发生与输入字符串的任何替换。</span><span class="sxs-lookup"><span data-stu-id="98b34-1202">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-1203">下面的示例使用正则表达式，从字符串提取各个单词，然后使用<xref:System.Text.RegularExpressions.MatchEvaluator>要调用一个名为方法委托`WordScramble`打乱单词中的单个字母。</span><span class="sxs-lookup"><span data-stu-id="98b34-1203">The following example uses a regular expression to extract the individual words from a string, and then uses a <xref:System.Text.RegularExpressions.MatchEvaluator> delegate to call a method named `WordScramble` that scrambles the individual letters in the word.</span></span> <span data-ttu-id="98b34-1204">若要这样做，`WordScramble`方法创建一个数组，包含匹配项中的字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1204">To do this, the `WordScramble` method creates an array that contains the characters in the match.</span></span> <span data-ttu-id="98b34-1205">它还用随机浮点数将创建它填充的并行数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1205">It also creates a parallel array that it populates with random floating-point numbers.</span></span> <span data-ttu-id="98b34-1206">这些数组进行排序通过调用<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29?displayProperty=nameWithType>方法，并已排序的数组的自变量作为提供<xref:System.String>类构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-1206">The arrays are sorted by calling the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29?displayProperty=nameWithType> method, and the sorted array is provided as an argument to a <xref:System.String> class constructor.</span></span> <span data-ttu-id="98b34-1207">然后返回此新创建的字符串`WordScramble`方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-1207">This newly created string is then returned by the `WordScramble` method.</span></span> <span data-ttu-id="98b34-1208">正则表达式模式`\w+`匹配一个或多个单词字符; 正则表达式引擎将继续添加字符到匹配项，直到它遇到非单词字符，例如空白字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1208">The regular expression pattern `\w+` matches one or more word characters; the regular expression engine will continue to add characters to the match until it encounters a non-word character, such as a white-space character.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replace5.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replace5.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98b34-1209">出现正则表达式分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1209">A regular expression parsing error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-1210">
            <paramref name="input" />、<paramref name="pattern" /> 或 <paramref name="evaluator" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1210">
              <paramref name="input" />, <paramref name="pattern" />, or <paramref name="evaluator" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-1211">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1211">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-1212">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1212">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="98b34-1213">
            <para>此方法等同于调用它的应用程序域的默认超时值的时间间隔后超时。如果没有为应用程序域，值定义超时值<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，它防止超时，方法使用。建议的静态方法用于评估和替换模式匹配是<see cref="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />，可以在其中你设置的超时间隔。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1213">
              <para>This method times out after an interval that is equal to the default time-out value of the application domain in which it is called. If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used. The recommended static method for evaluating and replacing a pattern match is <see cref="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Text.RegularExpressions.MatchEvaluator" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string input, System.Text.RegularExpressions.MatchEvaluator evaluator, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(string input, class System.Text.RegularExpressions.MatchEvaluator evaluator, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, evaluator As MatchEvaluator, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ input, System::Text::RegularExpressions::MatchEvaluator ^ evaluator, int count);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * System.Text.RegularExpressions.MatchEvaluator * int -&gt; string" Usage="regex.Replace (input, evaluator, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="evaluator" Type="System.Text.RegularExpressions.MatchEvaluator" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-1214">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1214">The string to search for a match.</span>
          </span>
        </param>
        <param name="evaluator">
          <span data-ttu-id="98b34-1215">一个自定义方法，该方法检查每个匹配项，然后返回原始的匹配字符串或替换字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1215">A custom method that examines each match and returns either the original matched string or a replacement string.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="98b34-1216">进行替换的最大次数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1216">The maximum number of times the replacement will occur.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-1217">在指定的输入字符串内，使用 <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> 委托返回的字符串替换与某个正则表达式模式匹配的字符串（其数目为指定的最大数目）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1217">In a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-1218">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被一个替换字符串代替。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1218">A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</span>
          </span>
          <span data-ttu-id="98b34-1219">如果正则表达式模式与当前实例不匹配，则此方法返回未更改的当前实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1219">If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-1220"><xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Int32%29?displayProperty=nameWithType>方法可用于替换正则表达式匹配，如果以下任何条件为 true:</span><span class="sxs-lookup"><span data-stu-id="98b34-1220">The <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Int32%29?displayProperty=nameWithType> method is useful for replacing a regular expression match if any of the following conditions is true:</span></span>  
  
-   <span data-ttu-id="98b34-1221">正则表达式替换模式中不能轻松地指定替换字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1221">The replacement string cannot readily be specified by a regular expression replacement pattern.</span></span>  
  
-   <span data-ttu-id="98b34-1222">通过在匹配的字符串上完成某些处理生成的替换字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1222">The replacement string results from some processing done on the matched string.</span></span>  
  
-   <span data-ttu-id="98b34-1223">替换字符串的结果从有条件处理。</span><span class="sxs-lookup"><span data-stu-id="98b34-1223">The replacement string results from conditional processing.</span></span>  
  
 <span data-ttu-id="98b34-1224">此方法等效于调用<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29?displayProperty=nameWithType>方法并传递第一个`count`<xref:System.Text.RegularExpressions.Match>中返回的对象<xref:System.Text.RegularExpressions.MatchCollection>集合到`evaluator`委托。</span><span class="sxs-lookup"><span data-stu-id="98b34-1224">The method is equivalent to calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29?displayProperty=nameWithType> method and passing the first `count`<xref:System.Text.RegularExpressions.Match> objects in the returned <xref:System.Text.RegularExpressions.MatchCollection> collection to the `evaluator` delegate.</span></span>  
  
 <span data-ttu-id="98b34-1225">正则表达式是当前的构造函数定义的模式<xref:System.Text.RegularExpressions.Regex>对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-1225">The regular expression is the pattern defined by the constructor for the current <xref:System.Text.RegularExpressions.Regex> object.</span></span>  
  
 <span data-ttu-id="98b34-1226">`evaluator`参数是你定义的自定义方法的委托，用于检查每个匹配项。</span><span class="sxs-lookup"><span data-stu-id="98b34-1226">The `evaluator` parameter is the delegate for a custom method that you define and that examines each match.</span></span> <span data-ttu-id="98b34-1227">自定义的方法必须具有以下签名以匹配<xref:System.Text.RegularExpressions.MatchEvaluator>委托。</span><span class="sxs-lookup"><span data-stu-id="98b34-1227">The custom method must have the following signature to match the <xref:System.Text.RegularExpressions.MatchEvaluator> delegate.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/syntax1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/syntax1.vb#1)]  
  
 <span data-ttu-id="98b34-1228">你自定义的方法返回替换匹配的输入的字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1228">Your custom method returns a string that replaces the matched input.</span></span>  
  
 <span data-ttu-id="98b34-1229"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果替换操作的执行时间超出指定的超时间隔将引发异常<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-1229">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="98b34-1230">如果该操作超过应用程序域建立在其中任何超时值时调用的构造函数未设置的超时间隔，如果引发异常<xref:System.Text.RegularExpressions.Regex>创建对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-1230">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="98b34-1231">如果在中定义无超时<xref:System.Text.RegularExpressions.Regex>构造函数调用或在应用程序域的属性中，或如果超时值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，不会引发异常</span><span class="sxs-lookup"><span data-stu-id="98b34-1231">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown</span></span>  
  
 <span data-ttu-id="98b34-1232">因为该方法返回`input`如果没有匹配项，保持不变，你可以使用<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法来确定该方法是否已发生与输入字符串的任何替换。</span><span class="sxs-lookup"><span data-stu-id="98b34-1232">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-1233">下面的示例使用正则表达式来有意拼错一半的单词列表中。</span><span class="sxs-lookup"><span data-stu-id="98b34-1233">The following example uses a regular expression to deliberately misspell half of the words in a list.</span></span> <span data-ttu-id="98b34-1234">它使用正则表达式`\w*(ie|ei)\w*`与包含字符"ie"或"ei"的单词匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-1234">It uses the regular expression `\w*(ie|ei)\w*` to match words that include the characters "ie" or "ei".</span></span> <span data-ttu-id="98b34-1235">通过第一个一半匹配字来`ReverseLetter`方法，反过来，使用<xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29>方法，以撤消"i"和"e"中匹配的字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1235">It passes the first half of the matching words to the `ReverseLetter` method, which, in turn, uses the <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29> method to reverse "i" and "e" in the matched string.</span></span> <span data-ttu-id="98b34-1236">其他单词保持不变。</span><span class="sxs-lookup"><span data-stu-id="98b34-1236">The remaining words remain unchanged.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replace7.cs#11)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replace7.vb#11)]  
  
 <span data-ttu-id="98b34-1237">正则表达式 `\w*(ie|ei)\w*` 的定义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="98b34-1237">The regular expression `\w*(ie|ei)\w*` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="98b34-1238">模式</span><span class="sxs-lookup"><span data-stu-id="98b34-1238">Pattern</span></span>|<span data-ttu-id="98b34-1239">描述</span><span class="sxs-lookup"><span data-stu-id="98b34-1239">Description</span></span>|  
|-------------|-----------------|  
|`\w*`|<span data-ttu-id="98b34-1240">匹配零个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1240">Match zero or more word characters.</span></span>|  
|`(ie&#124;ei)`|<span data-ttu-id="98b34-1241">匹配"ie"或"ei"。</span><span class="sxs-lookup"><span data-stu-id="98b34-1241">Match either "ie" or "ei".</span></span>|  
|`\w*`|<span data-ttu-id="98b34-1242">匹配零个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1242">Match zero or more word characters.</span></span>|  
  
 <span data-ttu-id="98b34-1243">正则表达式模式`([ie])([ie])`中`ReverseLetter`方法中 diphthong"ie"或"ei"匹配的第一个"i"或"e"，并将字母分配给第一个捕获组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1243">The regular expression pattern `([ie])([ie])` in the `ReverseLetter` method matches the first "i" or "e" in the diphthong "ie" or "ei" and assigns the letter to the first capturing group.</span></span> <span data-ttu-id="98b34-1244">它将匹配的第二个"i"或"e"，并将号分配给第二个捕获组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1244">It matches the second "i" or "e" and assigns the letter to the second capturing group.</span></span> <span data-ttu-id="98b34-1245">两个字符然后通过调用<xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.String%29>使用替换模式的方法`$2$1`。</span><span class="sxs-lookup"><span data-stu-id="98b34-1245">The two characters are then reversed by calling the <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.String%29> method with the replacement pattern `$2$1`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-1246">
            <paramref name="input" /> 或 <paramref name="evaluator" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1246">
              <paramref name="input" /> or <paramref name="evaluator" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-1247">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1247">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-1248">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1248">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.RegularExpressions.MatchEvaluator" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string input, string replacement, int count, int startat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(string input, string replacement, int32 count, int32 startat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, replacement As String, count As Integer, startat As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ input, System::String ^ replacement, int count, int startat);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * string * int * int -&gt; string" Usage="regex.Replace (input, replacement, count, startat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="replacement" Type="System.String" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="startat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-1249">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1249">The string to search for a match.</span>
          </span>
        </param>
        <param name="replacement">
          <span data-ttu-id="98b34-1250">替换字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1250">The replacement string.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="98b34-1251">可进行替换的最大次数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1251">Maximum number of times the replacement can occur.</span>
          </span>
        </param>
        <param name="startat">
          <span data-ttu-id="98b34-1252">输入字符串中开始执行搜索的字符位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1252">The character position in the input string where the search begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-1253">在指定输入子字符串内，使用指定替换字符串替换与某个正则表达式模式匹配的字符串（其数目为指定的最大数目）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1253">In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-1254">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被替换字符串代替。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1254">A new string that is identical to the input string, except that the replacement string takes the place of each matched string.</span>
          </span>
          <span data-ttu-id="98b34-1255">如果正则表达式模式与当前实例不匹配，则此方法返回未更改的当前实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1255">If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-1256">开始搜索匹配项`input`字符串中指定的位置`startat`参数。</span><span class="sxs-lookup"><span data-stu-id="98b34-1256">The search for matches starts in the `input` string at the position specified by the `startat` parameter.</span></span> <span data-ttu-id="98b34-1257">正则表达式是当前的构造函数定义的模式<xref:System.Text.RegularExpressions.Regex>对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-1257">The regular expression is the pattern defined by the constructor for the current <xref:System.Text.RegularExpressions.Regex> object.</span></span> <span data-ttu-id="98b34-1258">如果`count`为负，替换继续到字符串的末尾。</span><span class="sxs-lookup"><span data-stu-id="98b34-1258">If `count` is negative, replacements continue to the end of the string.</span></span> <span data-ttu-id="98b34-1259">如果`count`超过了匹配项的数目，则替换所有匹配项。</span><span class="sxs-lookup"><span data-stu-id="98b34-1259">If `count` exceeds the number of matches, all matches are replaced.</span></span>  
  
 <span data-ttu-id="98b34-1260">`replacement`参数指定是替换中的每个匹配项的字符串`input`。</span><span class="sxs-lookup"><span data-stu-id="98b34-1260">The `replacement` parameter specifies the string that is to replace each match in `input`.</span></span> <span data-ttu-id="98b34-1261">`replacement` 可以包含文字文本的任意组合和[替换](~/docs/standard/base-types/substitutions-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-1261">`replacement` can consist of any combination of literal text and [substitutions](~/docs/standard/base-types/substitutions-in-regular-expressions.md).</span></span> <span data-ttu-id="98b34-1262">例如，替换模式`a*${test}b`插入字符串"*"跟由匹配的子字符串`test`捕获组，如果有的话后, 跟字符串"b"。</span><span class="sxs-lookup"><span data-stu-id="98b34-1262">For example, the replacement pattern `a*${test}b` inserts the string "a*" followed by the substring that is matched by the `test` capturing group, if any, followed by the string "b".</span></span> <span data-ttu-id="98b34-1263">\* 字符不被识别为元字符在替换模式中。</span><span class="sxs-lookup"><span data-stu-id="98b34-1263">The \* character is not recognized as a metacharacter within a replacement pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="98b34-1264">替换是替换模式中识别的唯一的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1264">Substitutions are the only regular expression language elements that are recognized in a replacement pattern.</span></span> <span data-ttu-id="98b34-1265">所有其他正则表达式语言元素，包括[字符转义](~/docs/standard/base-types/character-escapes-in-regular-expressions.md)、 在仅正则表达式模式中允许和不在替换模式中识别。</span><span class="sxs-lookup"><span data-stu-id="98b34-1265">All other regular expression language elements, including [character escapes](~/docs/standard/base-types/character-escapes-in-regular-expressions.md), are allowed in regular expression patterns only and are not recognized in replacement patterns.</span></span>  
  
 <span data-ttu-id="98b34-1266"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果替换操作的执行时间超出指定的超时间隔将引发异常<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-1266">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="98b34-1267">如果该操作超过应用程序域建立在其中任何超时值时调用的构造函数未设置的超时间隔，如果引发异常<xref:System.Text.RegularExpressions.Regex>创建对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-1267">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="98b34-1268">如果在中定义无超时<xref:System.Text.RegularExpressions.Regex>构造函数调用或在应用程序域的属性中，或如果超时值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，不会引发异常</span><span class="sxs-lookup"><span data-stu-id="98b34-1268">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown</span></span>  
  
 <span data-ttu-id="98b34-1269">因为该方法返回`input`如果没有匹配项，保持不变，你可以使用<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法来确定该方法是否已发生与输入字符串的任何替换。</span><span class="sxs-lookup"><span data-stu-id="98b34-1269">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-1270">下面的示例 double-spaces 除字符串的第一行。</span><span class="sxs-lookup"><span data-stu-id="98b34-1270">The following example double-spaces all but the first line of a string.</span></span> <span data-ttu-id="98b34-1271">它定义正则表达式模式， `^.*$`，可匹配的文本，调用一行<xref:System.Text.RegularExpressions.Regex.Match%28System.String%29>方法可以进行匹配的字符串，并使用的第一行`Match.Index`和`Match.Count`属性来确定第二个的起始位置行。</span><span class="sxs-lookup"><span data-stu-id="98b34-1271">It defines a regular expression pattern, `^.*$`, that matches a line of text, calls the <xref:System.Text.RegularExpressions.Regex.Match%28System.String%29> method to match the first line of the string, and uses the `Match.Index` and `Match.Count` properties to determine the starting position of the second line.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replaceexample9.cs#9)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replaceexample9.vb#9)]  
  
 <span data-ttu-id="98b34-1272">正则表达式模式 `^.*$` 的定义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="98b34-1272">The regular expression pattern `^.*$` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="98b34-1273">模式</span><span class="sxs-lookup"><span data-stu-id="98b34-1273">Pattern</span></span>|<span data-ttu-id="98b34-1274">描述</span><span class="sxs-lookup"><span data-stu-id="98b34-1274">Description</span></span>|  
|-------------|-----------------|  
|`^`|<span data-ttu-id="98b34-1275">匹配行的开头。</span><span class="sxs-lookup"><span data-stu-id="98b34-1275">Match the start of a line.</span></span> <span data-ttu-id="98b34-1276">(请注意，<xref:System.Text.RegularExpressions.Regex>通过实例化对象<xref:System.Text.RegularExpressions.RegexOptions.Multiline?displayProperty=nameWithType>选项; 否则，此字符类将仅匹配输入字符串的开头。)</span><span class="sxs-lookup"><span data-stu-id="98b34-1276">(Note that the <xref:System.Text.RegularExpressions.Regex> object was instantiated by using the <xref:System.Text.RegularExpressions.RegexOptions.Multiline?displayProperty=nameWithType> option; otherwise, this character class would only match the beginning of the input string.)</span></span>|  
|`.*`|<span data-ttu-id="98b34-1277">零次或多次匹配任何字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1277">Match any character zero or more times.</span></span>|  
|`$`|<span data-ttu-id="98b34-1278">匹配行的末尾。</span><span class="sxs-lookup"><span data-stu-id="98b34-1278">Match the end of a line.</span></span> <span data-ttu-id="98b34-1279">(请注意，<xref:System.Text.RegularExpressions.Regex>通过实例化对象<xref:System.Text.RegularExpressions.RegexOptions.Multiline?displayProperty=nameWithType>选项; 否则，此字符类将仅匹配输入字符串的开头。)</span><span class="sxs-lookup"><span data-stu-id="98b34-1279">(Note that the <xref:System.Text.RegularExpressions.Regex> object was instantiated by using the <xref:System.Text.RegularExpressions.RegexOptions.Multiline?displayProperty=nameWithType> option; otherwise, this character class would only match the beginning of the input string.)</span></span>|  
  
 <span data-ttu-id="98b34-1280">替换字符串 (`vbCrLf + "$&"`在 Visual Basic 中， `"\n$&"` C# 中) 添加一个新行之前匹配的字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1280">The replacement string (`vbCrLf + "$&"` in Visual Basic, `"\n$&"` in C#) adds a new line before the matched string.</span></span> <span data-ttu-id="98b34-1281">请注意，`\n`在 C# 示例将解释为换行字符由 C# 编译器; 它不表示正则表达式字符转义。</span><span class="sxs-lookup"><span data-stu-id="98b34-1281">Note that `\n` in the C# example is interpreted as the newline character by the C# compiler; it does not represent a regular expression character escape.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-1282">
            <paramref name="input" /> 或 <paramref name="replacement" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1282">
              <paramref name="input" /> or <paramref name="replacement" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98b34-1283">
            <paramref name="startat" /> 小于零或大于 <paramref name="input" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1283">
              <paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-1284">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1284">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-1285">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1285">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static string Replace (string input, string pattern, string replacement, System.Text.RegularExpressions.RegexOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Replace(string input, string pattern, string replacement, valuetype System.Text.RegularExpressions.RegexOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Replace (input As String, pattern As String, replacement As String, options As RegexOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Replace(System::String ^ input, System::String ^ pattern, System::String ^ replacement, System::Text::RegularExpressions::RegexOptions options);" />
      <MemberSignature Language="F#" Value="static member Replace : string * string * string * System.Text.RegularExpressions.RegexOptions -&gt; string" Usage="System.Text.RegularExpressions.Regex.Replace (input, pattern, replacement, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="replacement" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-1286">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1286">The string to search for a match.</span>
          </span>
        </param>
        <param name="pattern">
          <span data-ttu-id="98b34-1287">要匹配的正则表达式模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1287">The regular expression pattern to match.</span>
          </span>
        </param>
        <param name="replacement">
          <span data-ttu-id="98b34-1288">替换字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1288">The replacement string.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="98b34-1289">枚举值的一个按位组合，这些枚举值提供匹配选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1289">A bitwise combination of the enumeration values that provide options for matching.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-1290">在指定的输入字符串内，使用指定的替换字符串替换与指定正则表达式匹配的所有字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1290">In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string.</span>
          </span>
          <span data-ttu-id="98b34-1291">指定的选项将修改匹配操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1291">Specified options modify the matching operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-1292">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被替换字符串代替。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1292">A new string that is identical to the input string, except that the replacement string takes the place of each matched string.</span>
          </span>
          <span data-ttu-id="98b34-1293">如果 <paramref name="pattern" /> 与当前实例不匹配，则此方法返回未更改的当前实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1293">If <paramref name="pattern" /> is not matched in the current instance, the method returns the current instance unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-1294">静态`Replace`方法是构造等效<xref:System.Text.RegularExpressions.Regex>对象使用指定的正则表达式模式，并调用实例方法`Replace`。</span><span class="sxs-lookup"><span data-stu-id="98b34-1294">The static `Replace` methods are equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the specified regular expression pattern and calling the instance method `Replace`.</span></span>  
  
 <span data-ttu-id="98b34-1295">`pattern`参数包含以符号方式描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1295">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="98b34-1296">有关正则表达式的详细信息，请参阅[.NET Framework 正则表达式](~/docs/standard/base-types/regular-expressions.md)和[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-1296">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span> <span data-ttu-id="98b34-1297">如果指定<xref:System.Text.RegularExpressions.RegexOptions.RightToLeft>为`options`参数，在输入字符串末尾开始和向左移动的匹配项的搜索; 否则为搜索输入字符串的开头开始，并向右移动。</span><span class="sxs-lookup"><span data-stu-id="98b34-1297">If you specify <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft> for the `options` parameter, the search for matches begins at the end of the input string and moves left; otherwise, the search begins at the start of the input string and moves right.</span></span>  
  
 <span data-ttu-id="98b34-1298">`replacement`参数指定是替换中的每个匹配项的字符串`input`。</span><span class="sxs-lookup"><span data-stu-id="98b34-1298">The `replacement` parameter specifies the string that is to replace each match in `input`.</span></span> <span data-ttu-id="98b34-1299">`replacement` 可以包含文字文本的任意组合和[替换](~/docs/standard/base-types/substitutions-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-1299">`replacement` can consist of any combination of literal text and [substitutions](~/docs/standard/base-types/substitutions-in-regular-expressions.md).</span></span> <span data-ttu-id="98b34-1300">例如，替换模式`a*${test}b`插入字符串"*"跟由匹配的子字符串`test`捕获组，如果有的话后, 跟字符串"b"。</span><span class="sxs-lookup"><span data-stu-id="98b34-1300">For example, the replacement pattern `a*${test}b` inserts the string "a*" followed by the substring that is matched by the `test` capturing group, if any, followed by the string "b".</span></span> <span data-ttu-id="98b34-1301">\* 字符不被识别为元字符在替换模式中。</span><span class="sxs-lookup"><span data-stu-id="98b34-1301">The \* character is not recognized as a metacharacter within a replacement pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="98b34-1302">替换是替换模式中识别的唯一的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1302">Substitutions are the only regular expression language elements that are recognized in a replacement pattern.</span></span> <span data-ttu-id="98b34-1303">所有其他正则表达式语言元素，包括[字符转义](~/docs/standard/base-types/character-escapes-in-regular-expressions.md)、 在仅正则表达式模式中允许和不在替换模式中识别。</span><span class="sxs-lookup"><span data-stu-id="98b34-1303">All other regular expression language elements, including [character escapes](~/docs/standard/base-types/character-escapes-in-regular-expressions.md), are allowed in regular expression patterns only and are not recognized in replacement patterns.</span></span>  
  
 <span data-ttu-id="98b34-1304"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果替换操作的执行时间超出指定的方法称为应用程序域的超时间隔将引发异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-1304">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="98b34-1305">如果没有超时设置定义在应用程序域的属性中，或者如果超时值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-1305">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
 <span data-ttu-id="98b34-1306">因为该方法返回`input`如果没有匹配项，保持不变，你可以使用<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法来确定该方法是否已发生与输入字符串的任何替换。</span><span class="sxs-lookup"><span data-stu-id="98b34-1306">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-1307">下面的示例使用<xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29>方法将替换为本地文件路径的 UNC 路径中的本地计算机和驱动器名称。</span><span class="sxs-lookup"><span data-stu-id="98b34-1307">The following example uses the <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29> method to replace the local machine and drive names in a UNC path with a local file path.</span></span> <span data-ttu-id="98b34-1308">正则表达式使用<xref:System.Environment.MachineName%2A?displayProperty=nameWithType>属性以包含本地计算机的名称和<xref:System.Environment.GetLogicalDrives%2A?displayProperty=nameWithType>方法将包含的逻辑驱动器的名称。</span><span class="sxs-lookup"><span data-stu-id="98b34-1308">The regular expression uses the <xref:System.Environment.MachineName%2A?displayProperty=nameWithType> property to include the name of the local computer, and the <xref:System.Environment.GetLogicalDrives%2A?displayProperty=nameWithType> method to include the names of the logical drives.</span></span> <span data-ttu-id="98b34-1309">所有正则表达式字符串比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="98b34-1309">All regular expression string comparisons are case-insensitive.</span></span> <span data-ttu-id="98b34-1310">若要成功运行该示例，应将文本字符串"MyMachine"替换你本地计算机的名称。</span><span class="sxs-lookup"><span data-stu-id="98b34-1310">To run the example successfully, you should replace the literal string "MyMachine" with your local machine name.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replace4.cs#4)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replace4.vb#4)]  
  
 <span data-ttu-id="98b34-1311">以下表达式所定义的正则表达式模式：</span><span class="sxs-lookup"><span data-stu-id="98b34-1311">The regular expression pattern is defined by the following expression:</span></span>  
  
 `"\\\\" + Environment.MachineName + "(?:\.\w+)*\\([" + driveNames + "])\$"`  
  
 <span data-ttu-id="98b34-1312">下表演示了如何解释正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-1312">The following table shows how the regular expression pattern is interpreted.</span></span>  
  
|<span data-ttu-id="98b34-1313">模式</span><span class="sxs-lookup"><span data-stu-id="98b34-1313">Pattern</span></span>|<span data-ttu-id="98b34-1314">描述</span><span class="sxs-lookup"><span data-stu-id="98b34-1314">Description</span></span>|  
|-------------|-----------------|  
|`\\\\`|<span data-ttu-id="98b34-1315">匹配两个连续反斜杠 (`\`) 字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1315">Match two consecutive backslash (`\`) characters.</span></span> <span data-ttu-id="98b34-1316">反斜杠字符解释为转义符，因为每个反斜杠必须使用另一个反斜杠进行转义。</span><span class="sxs-lookup"><span data-stu-id="98b34-1316">Because the backslash character is interpreted as the escape character, each backslash must be escaped with another backslash.</span></span>|  
|`+ Environment.MachineName +`|<span data-ttu-id="98b34-1317">返回的字符串匹配<xref:System.Environment.MachineName%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="98b34-1317">Match the string that is returned by the <xref:System.Environment.MachineName%2A?displayProperty=nameWithType> property.</span></span>|  
|`(?:\.\w+)*`|<span data-ttu-id="98b34-1318">匹配句号 (`.`) 字符后跟一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1318">Match the period (`.`) character followed by one or more word characters.</span></span> <span data-ttu-id="98b34-1319">此匹配可以出现零次或多次。</span><span class="sxs-lookup"><span data-stu-id="98b34-1319">This match can occur zero or more times.</span></span> <span data-ttu-id="98b34-1320">不捕获匹配的子表达式。</span><span class="sxs-lookup"><span data-stu-id="98b34-1320">The matched subexpression is not captured.</span></span>|  
|`\\`|<span data-ttu-id="98b34-1321">匹配一个反斜杠 (`\`) 字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1321">Match a backslash (`\`) character.</span></span>|  
|`([" + driveNames + "])`|<span data-ttu-id="98b34-1322">匹配单个驱动器字母组成的字符类。</span><span class="sxs-lookup"><span data-stu-id="98b34-1322">Match the character class that consists of the individual drive letters.</span></span> <span data-ttu-id="98b34-1323">此匹配项是第一个捕获子表达式。</span><span class="sxs-lookup"><span data-stu-id="98b34-1323">This match is the first captured subexpression.</span></span>|  
|`\$`|<span data-ttu-id="98b34-1324">匹配文本的美元符号 (`$`) 字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1324">Match the literal dollar sign (`$`) character.</span></span>|  
  
 <span data-ttu-id="98b34-1325">替换模式`$1`用第一个捕获子表达式替换整个匹配项。</span><span class="sxs-lookup"><span data-stu-id="98b34-1325">The replacement pattern `$1` replaces the entire match with the first captured subexpression.</span></span> <span data-ttu-id="98b34-1326">也就是说，它可以用的驱动器号替换 UNC 机和驱动器名称。</span><span class="sxs-lookup"><span data-stu-id="98b34-1326">That is, it replaces the UNC machine and drive name with the drive letter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98b34-1327">出现正则表达式分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1327">A regular expression parsing error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-1328">
            <paramref name="input" />、<paramref name="pattern" /> 或 <paramref name="replacement" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1328">
              <paramref name="input" />, <paramref name="pattern" />, or <paramref name="replacement" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98b34-1329">
            <paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1329">
              <paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-1330">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1330">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-1331">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1331">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="98b34-1332">
            <para>此方法等同于调用它的应用程序域的默认超时值的时间间隔后超时。如果没有为应用程序域，值定义超时值<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，它防止超时，方法使用。建议的静态方法，用于更换有模式匹配是<see cref="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />，可以在其中你设置的超时间隔。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1332">
              <para>This method times out after an interval that is equal to the default time-out value of the application domain in which it is called. If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used. The recommended static method for replacing a pattern match is <see cref="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Text.RegularExpressions.RegexOptions" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static string Replace (string input, string pattern, System.Text.RegularExpressions.MatchEvaluator evaluator, System.Text.RegularExpressions.RegexOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Replace(string input, string pattern, class System.Text.RegularExpressions.MatchEvaluator evaluator, valuetype System.Text.RegularExpressions.RegexOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Replace (input As String, pattern As String, evaluator As MatchEvaluator, options As RegexOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Replace(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::MatchEvaluator ^ evaluator, System::Text::RegularExpressions::RegexOptions options);" />
      <MemberSignature Language="F#" Value="static member Replace : string * string * System.Text.RegularExpressions.MatchEvaluator * System.Text.RegularExpressions.RegexOptions -&gt; string" Usage="System.Text.RegularExpressions.Regex.Replace (input, pattern, evaluator, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="evaluator" Type="System.Text.RegularExpressions.MatchEvaluator" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-1333">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1333">The string to search for a match.</span>
          </span>
        </param>
        <param name="pattern">
          <span data-ttu-id="98b34-1334">要匹配的正则表达式模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1334">The regular expression pattern to match.</span>
          </span>
        </param>
        <param name="evaluator">
          <span data-ttu-id="98b34-1335">一个自定义方法，该方法检查每个匹配项，然后返回原始的匹配字符串或替换字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1335">A custom method that examines each match and returns either the original matched string or a replacement string.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="98b34-1336">枚举值的一个按位组合，这些枚举值提供匹配选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1336">A bitwise combination of the enumeration values that provide options for matching.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-1337">在指定的输入字符串中，使用由 <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> 委托返回的字符串替换与指定的正则表达式匹配的所有字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1337">In a specified input string, replaces all strings that match a specified regular expression with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate.</span>
          </span>
          <span data-ttu-id="98b34-1338">指定的选项将修改匹配操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1338">Specified options modify the matching operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-1339">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被一个替换字符串代替。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1339">A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</span>
          </span>
          <span data-ttu-id="98b34-1340">如果 <paramref name="pattern" /> 与当前实例不匹配，则此方法返回未更改的当前实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1340">If <paramref name="pattern" /> is not matched in the current instance, the method returns the current instance unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-1341"><xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType>方法可用于替换中的正则表达式匹配项，如果以下任何条件为 true:</span><span class="sxs-lookup"><span data-stu-id="98b34-1341">The <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType> method is useful for replacing a regular expression match in if any of the following conditions is true:</span></span>  
  
-   <span data-ttu-id="98b34-1342">正则表达式替换模式中不能轻松地指定替换字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1342">The replacement string cannot readily be specified by a regular expression replacement pattern.</span></span>  
  
-   <span data-ttu-id="98b34-1343">通过在匹配的字符串上完成某些处理生成的替换字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1343">The replacement string results from some processing done on the matched string.</span></span>  
  
-   <span data-ttu-id="98b34-1344">替换字符串的结果从有条件处理。</span><span class="sxs-lookup"><span data-stu-id="98b34-1344">The replacement string results from conditional processing.</span></span>  
  
 <span data-ttu-id="98b34-1345">此方法等效于调用<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType>方法并传递每个<xref:System.Text.RegularExpressions.Match>在返回的对象<xref:System.Text.RegularExpressions.MatchCollection>集合到`evaluator`委托。</span><span class="sxs-lookup"><span data-stu-id="98b34-1345">The method is equivalent to calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType> method and passing each <xref:System.Text.RegularExpressions.Match> object in the returned <xref:System.Text.RegularExpressions.MatchCollection> collection to the `evaluator` delegate.</span></span>  
  
 <span data-ttu-id="98b34-1346">`pattern`参数包含以符号方式描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1346">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="98b34-1347">有关正则表达式的详细信息，请参阅[.NET Framework 正则表达式](~/docs/standard/base-types/regular-expressions.md)和[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-1347">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="98b34-1348">`evaluator`参数是你定义的自定义方法的委托，用于检查每个匹配项。</span><span class="sxs-lookup"><span data-stu-id="98b34-1348">The `evaluator` parameter is the delegate for a custom method that you define and that examines each match.</span></span> <span data-ttu-id="98b34-1349">自定义的方法必须具有以下签名以匹配<xref:System.Text.RegularExpressions.MatchEvaluator>委托。</span><span class="sxs-lookup"><span data-stu-id="98b34-1349">The custom method must have the following signature to match the <xref:System.Text.RegularExpressions.MatchEvaluator> delegate.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/syntax1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/syntax1.vb#1)]  
  
 <span data-ttu-id="98b34-1350">你自定义的方法返回替换匹配的输入的字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1350">Your custom method returns a string that replaces the matched input.</span></span>  
  
 <span data-ttu-id="98b34-1351">如果指定<xref:System.Text.RegularExpressions.RegexOptions.RightToLeft>为`options`参数，在输入字符串末尾开始和向左移动的匹配项的搜索; 否则为搜索输入字符串的开头开始，并向右移动。</span><span class="sxs-lookup"><span data-stu-id="98b34-1351">If you specify <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft> for the `options` parameter, the search for matches begins at the end of the input string and moves left; otherwise, the search begins at the start of the input string and moves right.</span></span>  
  
 <span data-ttu-id="98b34-1352"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果替换操作的执行时间超出指定的方法称为应用程序域的超时间隔将引发异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-1352">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="98b34-1353">如果没有超时设置定义在应用程序域的属性中，或者如果超时值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-1353">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
 <span data-ttu-id="98b34-1354">因为该方法返回`input`如果没有匹配项，保持不变，你可以使用<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法来确定该方法是否已发生与输入字符串的任何替换。</span><span class="sxs-lookup"><span data-stu-id="98b34-1354">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-1355">下面的示例使用正则表达式，从字符串提取各个单词，然后使用<xref:System.Text.RegularExpressions.MatchEvaluator>要调用一个名为方法委托`WordScramble`打乱单词中的单个字母。</span><span class="sxs-lookup"><span data-stu-id="98b34-1355">The following example uses a regular expression to extract the individual words from a string, and then uses a <xref:System.Text.RegularExpressions.MatchEvaluator> delegate to call a method named `WordScramble` that scrambles the individual letters in the word.</span></span> <span data-ttu-id="98b34-1356">若要这样做，`WordScramble`方法创建一个数组，包含匹配项中的字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1356">To do this, the `WordScramble` method creates an array that contains the characters in the match.</span></span> <span data-ttu-id="98b34-1357">它还用随机浮点数将创建它填充的并行数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1357">It also creates a parallel array that it populates with random floating-point numbers.</span></span> <span data-ttu-id="98b34-1358">这些数组进行排序通过调用<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29?displayProperty=nameWithType>方法，并已排序的数组的自变量作为提供<xref:System.String>类构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-1358">The arrays are sorted by calling the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29?displayProperty=nameWithType> method, and the sorted array is provided as an argument to a <xref:System.String> class constructor.</span></span> <span data-ttu-id="98b34-1359">然后返回此新创建的字符串`WordScramble`方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-1359">This newly created string is then returned by the `WordScramble` method.</span></span> <span data-ttu-id="98b34-1360">正则表达式模式`\w+`匹配一个或多个单词字符; 正则表达式引擎将继续添加字符到匹配项，直到它遇到非单词字符，例如空白字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1360">The regular expression pattern `\w+` matches one or more word characters; the regular expression engine will continue to add characters to the match until it encounters a non-word character, such as a white-space character.</span></span> <span data-ttu-id="98b34-1361">调用<xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Text.RegularExpressions.RegexOptions%29>方法包括<xref:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace?displayProperty=nameWithType>选项，以便在正则表达式模式中的注释`\w+  # Matches all the characters in a word.`正则表达式引擎将忽略。</span><span class="sxs-lookup"><span data-stu-id="98b34-1361">The call to the <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Text.RegularExpressions.RegexOptions%29> method includes the <xref:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace?displayProperty=nameWithType> option so that the comment in the regular expression pattern `\w+  # Matches all the characters in a word.` is ignored by the regular expression engine.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replace6.cs#10)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replace6.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98b34-1362">出现正则表达式分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1362">A regular expression parsing error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-1363">
            <paramref name="input" />、<paramref name="pattern" /> 或 <paramref name="evaluator" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1363">
              <paramref name="input" />, <paramref name="pattern" />, or <paramref name="evaluator" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98b34-1364">
            <paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1364">
              <paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-1365">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1365">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-1366">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1366">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.RegularExpressions.MatchEvaluator" />
        <altmember cref="T:System.Text.RegularExpressions.RegexOptions" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string input, System.Text.RegularExpressions.MatchEvaluator evaluator, int count, int startat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(string input, class System.Text.RegularExpressions.MatchEvaluator evaluator, int32 count, int32 startat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, evaluator As MatchEvaluator, count As Integer, startat As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ input, System::Text::RegularExpressions::MatchEvaluator ^ evaluator, int count, int startat);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * System.Text.RegularExpressions.MatchEvaluator * int * int -&gt; string" Usage="regex.Replace (input, evaluator, count, startat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="evaluator" Type="System.Text.RegularExpressions.MatchEvaluator" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="startat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-1367">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1367">The string to search for a match.</span>
          </span>
        </param>
        <param name="evaluator">
          <span data-ttu-id="98b34-1368">一个自定义方法，该方法检查每个匹配项，然后返回原始的匹配字符串或替换字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1368">A custom method that examines each match and returns either the original matched string or a replacement string.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="98b34-1369">进行替换的最大次数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1369">The maximum number of times the replacement will occur.</span>
          </span>
        </param>
        <param name="startat">
          <span data-ttu-id="98b34-1370">输入字符串中开始执行搜索的字符位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1370">The character position in the input string where the search begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-1371">在指定的输入子字符串内，使用 <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> 委托返回的字符串替换与某个正则表达式模式匹配的字符串（其数目为指定的最大数目）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1371">In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-1372">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被一个替换字符串代替。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1372">A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</span>
          </span>
          <span data-ttu-id="98b34-1373">如果正则表达式模式与当前实例不匹配，则此方法返回未更改的当前实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1373">If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-1374"><xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType>方法可用于替换正则表达式匹配，如果以下任何条件为 true:</span><span class="sxs-lookup"><span data-stu-id="98b34-1374">The <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method is useful for replacing a regular expression match if any of the following conditions is true:</span></span>  
  
-   <span data-ttu-id="98b34-1375">正则表达式替换模式中不能轻松地指定替换字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1375">The replacement string cannot readily be specified by a regular expression replacement pattern.</span></span>  
  
-   <span data-ttu-id="98b34-1376">通过在匹配的字符串上完成某些处理生成的替换字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1376">The replacement string results from some processing done on the matched string.</span></span>  
  
-   <span data-ttu-id="98b34-1377">替换字符串的结果从有条件处理。</span><span class="sxs-lookup"><span data-stu-id="98b34-1377">The replacement string results from conditional processing.</span></span>  
  
 <span data-ttu-id="98b34-1378">此方法等效于调用<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>方法并传递第一个`count`<xref:System.Text.RegularExpressions.Match>中返回的对象<xref:System.Text.RegularExpressions.MatchCollection>集合到`evaluator`委托。</span><span class="sxs-lookup"><span data-stu-id="98b34-1378">The method is equivalent to calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method and passing the first `count`<xref:System.Text.RegularExpressions.Match> objects in the returned <xref:System.Text.RegularExpressions.MatchCollection> collection to the `evaluator` delegate.</span></span>  
  
 <span data-ttu-id="98b34-1379">正则表达式是当前的构造函数定义的模式<xref:System.Text.RegularExpressions.Regex>对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-1379">The regular expression is the pattern defined by the constructor for the current <xref:System.Text.RegularExpressions.Regex> object.</span></span>  
  
 <span data-ttu-id="98b34-1380">`evaluator`参数是你定义的自定义方法的委托，用于检查每个匹配项。</span><span class="sxs-lookup"><span data-stu-id="98b34-1380">The `evaluator` parameter is the delegate for a custom method that you define and that examines each match.</span></span> <span data-ttu-id="98b34-1381">自定义的方法必须具有以下签名以匹配<xref:System.Text.RegularExpressions.MatchEvaluator>委托。</span><span class="sxs-lookup"><span data-stu-id="98b34-1381">The custom method must have the following signature to match the <xref:System.Text.RegularExpressions.MatchEvaluator> delegate.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/syntax1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/syntax1.vb#1)]  
  
 <span data-ttu-id="98b34-1382">你自定义的方法返回替换匹配的输入的字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1382">Your custom method returns a string that replaces the matched input.</span></span>  
  
 <span data-ttu-id="98b34-1383"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果替换操作的执行时间超出指定的超时间隔将引发异常<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-1383">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="98b34-1384">如果该操作超过应用程序域建立在其中任何超时值时调用的构造函数未设置的超时间隔，如果引发异常<xref:System.Text.RegularExpressions.Regex>创建对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-1384">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="98b34-1385">如果在中定义无超时<xref:System.Text.RegularExpressions.Regex>构造函数调用或在应用程序域的属性中，或如果超时值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，不会引发异常</span><span class="sxs-lookup"><span data-stu-id="98b34-1385">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown</span></span>  
  
 <span data-ttu-id="98b34-1386">因为该方法返回`input`如果没有匹配项，保持不变，你可以使用<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法来确定该方法是否已发生与输入字符串的任何替换。</span><span class="sxs-lookup"><span data-stu-id="98b34-1386">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-1387">
            <paramref name="input" /> 或 <paramref name="evaluator" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1387">
              <paramref name="input" /> or <paramref name="evaluator" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98b34-1388">
            <paramref name="startat" /> 小于零或大于 <paramref name="input" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1388">
              <paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-1389">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1389">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-1390">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1390">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.RegularExpressions.MatchEvaluator" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static string Replace (string input, string pattern, string replacement, System.Text.RegularExpressions.RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Replace(string input, string pattern, string replacement, valuetype System.Text.RegularExpressions.RegexOptions options, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Replace (input As String, pattern As String, replacement As String, options As RegexOptions, matchTimeout As TimeSpan) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Replace(System::String ^ input, System::String ^ pattern, System::String ^ replacement, System::Text::RegularExpressions::RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="static member Replace : string * string * string * System.Text.RegularExpressions.RegexOptions * TimeSpan -&gt; string" Usage="System.Text.RegularExpressions.Regex.Replace (input, pattern, replacement, options, matchTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="replacement" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-1391">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1391">The string to search for a match.</span>
          </span>
        </param>
        <param name="pattern">
          <span data-ttu-id="98b34-1392">要匹配的正则表达式模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1392">The regular expression pattern to match.</span>
          </span>
        </param>
        <param name="replacement">
          <span data-ttu-id="98b34-1393">替换字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1393">The replacement string.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="98b34-1394">枚举值的一个按位组合，这些枚举值提供匹配选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1394">A bitwise combination of the enumeration values that provide options for matching.</span>
          </span>
        </param>
        <param name="matchTimeout">
          <span data-ttu-id="98b34-1395">超时间隔；若要指示该方法不应超时，则为 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1395">A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> to indicate that the method should not time out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-1396">在指定的输入字符串内，使用指定的替换字符串替换与指定正则表达式匹配的所有字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1396">In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string.</span>
          </span>
          <span data-ttu-id="98b34-1397">如果未找到匹配项，则其他参数指定修改匹配操作的选项和超时间隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1397">Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-1398">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被替换字符串代替。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1398">A new string that is identical to the input string, except that the replacement string takes the place of each matched string.</span>
          </span>
          <span data-ttu-id="98b34-1399">如果 <paramref name="pattern" /> 与当前实例不匹配，则此方法返回未更改的当前实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1399">If <paramref name="pattern" /> is not matched in the current instance, the method returns the current instance unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-1400">静态`Replace`方法是构造等效<xref:System.Text.RegularExpressions.Regex>对象使用指定的正则表达式模式，并调用实例方法`Replace`。</span><span class="sxs-lookup"><span data-stu-id="98b34-1400">The static `Replace` methods are equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the specified regular expression pattern and calling the instance method `Replace`.</span></span>  
  
 <span data-ttu-id="98b34-1401">`pattern`参数包含以符号方式描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1401">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="98b34-1402">有关正则表达式的详细信息，请参阅[.NET Framework 正则表达式](~/docs/standard/base-types/regular-expressions.md)和[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-1402">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span> <span data-ttu-id="98b34-1403">如果指定<xref:System.Text.RegularExpressions.RegexOptions.RightToLeft>为`options`参数，在输入字符串末尾开始和向左移动的匹配项的搜索; 否则为搜索输入字符串的开头开始，并向右移动。</span><span class="sxs-lookup"><span data-stu-id="98b34-1403">If you specify <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft> for the `options` parameter, the search for matches begins at the end of the input string and moves left; otherwise, the search begins at the start of the input string and moves right.</span></span>  
  
 <span data-ttu-id="98b34-1404">`replacement`参数指定是替换中的每个匹配项的字符串`input`。</span><span class="sxs-lookup"><span data-stu-id="98b34-1404">The `replacement` parameter specifies the string that is to replace each match in `input`.</span></span> <span data-ttu-id="98b34-1405">`replacement` 可以包含文字文本的任意组合和[替换](~/docs/standard/base-types/substitutions-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-1405">`replacement` can consist of any combination of literal text and [substitutions](~/docs/standard/base-types/substitutions-in-regular-expressions.md).</span></span> <span data-ttu-id="98b34-1406">例如，替换模式`a*${test}b`插入字符串"*"跟由匹配的子字符串`test`捕获组，如果有的话后, 跟字符串"b"。</span><span class="sxs-lookup"><span data-stu-id="98b34-1406">For example, the replacement pattern `a*${test}b` inserts the string "a*" followed by the substring that is matched by the `test` capturing group, if any, followed by the string "b".</span></span> <span data-ttu-id="98b34-1407">\* 字符不被识别为元字符在替换模式中。</span><span class="sxs-lookup"><span data-stu-id="98b34-1407">The \* character is not recognized as a metacharacter within a replacement pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="98b34-1408">替换是替换模式中识别的唯一的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1408">Substitutions are the only regular expression language elements that are recognized in a replacement pattern.</span></span> <span data-ttu-id="98b34-1409">所有其他正则表达式语言元素，包括[字符转义](~/docs/standard/base-types/character-escapes-in-regular-expressions.md)、 在仅正则表达式模式中允许和不在替换模式中识别。</span><span class="sxs-lookup"><span data-stu-id="98b34-1409">All other regular expression language elements, including [character escapes](~/docs/standard/base-types/character-escapes-in-regular-expressions.md), are allowed in regular expression patterns only and are not recognized in replacement patterns.</span></span>  
  
 <span data-ttu-id="98b34-1410">`matchTimeout`参数指定如何长时间模式匹配方法应尝试超时之前找到匹配项。将设置的超时间隔可防止依赖于从似乎停止响应时它们处理输入的过度回溯的正则表达式，该字符串包含接近匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-1410">The `matchTimeout` parameter specifies how long a pattern matching method should try to find a match before it times out. Setting a time-out interval prevents regular expressions that rely on excessive backtracking from appearing to stop responding when they process input that contains near matches.</span></span> <span data-ttu-id="98b34-1411">有关详细信息，请参阅[正则表达式的最佳实践](~/docs/standard/base-types/best-practices.md)和[回溯](~/docs/standard/base-types/backtracking-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-1411">For more information, see [Best Practices for Regular Expressions](~/docs/standard/base-types/best-practices.md) and [Backtracking](~/docs/standard/base-types/backtracking-in-regular-expressions.md).</span></span> <span data-ttu-id="98b34-1412">如果未找到匹配项是在该时间段内，该方法将引发<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-1412">If no match is found in that time interval, the method throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="98b34-1413">`matchTimeout` 重写任何应用程序域执行此方法定义的默认超时值。</span><span class="sxs-lookup"><span data-stu-id="98b34-1413">`matchTimeout` overrides any default time-out value defined for the application domain in which the method executes.</span></span>  
  
 <span data-ttu-id="98b34-1414">因为该方法返回`input`如果没有匹配项，保持不变，你可以使用<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法来确定该方法是否已发生与输入字符串的任何替换。</span><span class="sxs-lookup"><span data-stu-id="98b34-1414">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-1415">下面的示例使用<xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>方法将替换为本地文件路径的 UNC 路径中的本地计算机和驱动器名称。</span><span class="sxs-lookup"><span data-stu-id="98b34-1415">The following example uses the <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> method to replace the local machine and drive names in a UNC path with a local file path.</span></span> <span data-ttu-id="98b34-1416">正则表达式使用<xref:System.Environment.MachineName%2A?displayProperty=nameWithType>属性以包含本地计算机的名称和<xref:System.Environment.GetLogicalDrives%2A?displayProperty=nameWithType>方法将包含的逻辑驱动器的名称。</span><span class="sxs-lookup"><span data-stu-id="98b34-1416">The regular expression uses the <xref:System.Environment.MachineName%2A?displayProperty=nameWithType> property to include the name of the local computer and the <xref:System.Environment.GetLogicalDrives%2A?displayProperty=nameWithType> method to include the names of the logical drives.</span></span> <span data-ttu-id="98b34-1417">所有正则表达式字符串比较是区分大小写，并在 0.5 秒中找不到匹配项，任何单个替换操作将会超时。</span><span class="sxs-lookup"><span data-stu-id="98b34-1417">All regular expression string comparisons are case-insensitive, and any single replacement operation times out if a match cannot be found in 0.5 second.</span></span> <span data-ttu-id="98b34-1418">若要成功运行该示例，应将文本字符串"MyMachine"替换你本地计算机的名称。</span><span class="sxs-lookup"><span data-stu-id="98b34-1418">To run the example successfully, you should replace the literal string "MyMachine" with your local machine name.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replace12.cs#12)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replace12.vb#12)]  
  
 <span data-ttu-id="98b34-1419">以下表达式所定义的正则表达式模式：</span><span class="sxs-lookup"><span data-stu-id="98b34-1419">The regular expression pattern is defined by the following expression:</span></span>  
  
 `"\\\\" + Environment.MachineName + "(?:\.\w+)*\\([" + driveNames + "])\$"`  
  
 <span data-ttu-id="98b34-1420">下表演示了如何解释正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="98b34-1420">The following table shows how the regular expression pattern is interpreted.</span></span>  
  
|<span data-ttu-id="98b34-1421">模式</span><span class="sxs-lookup"><span data-stu-id="98b34-1421">Pattern</span></span>|<span data-ttu-id="98b34-1422">描述</span><span class="sxs-lookup"><span data-stu-id="98b34-1422">Description</span></span>|  
|-------------|-----------------|  
|`\\\\`|<span data-ttu-id="98b34-1423">匹配两个连续反斜杠 (`\`) 字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1423">Match two consecutive backslash (`\`) characters.</span></span> <span data-ttu-id="98b34-1424">反斜杠字符解释为转义符，因为每个反斜杠必须使用另一个反斜杠进行转义。</span><span class="sxs-lookup"><span data-stu-id="98b34-1424">Because the backslash character is interpreted as the escape character, each backslash must be escaped with another backslash.</span></span>|  
|`+ Environment.MachineName +`|<span data-ttu-id="98b34-1425">返回的字符串匹配<xref:System.Environment.MachineName%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="98b34-1425">Match the string that is returned by the <xref:System.Environment.MachineName%2A?displayProperty=nameWithType> property.</span></span>|  
|`(?:\.\w+)*`|<span data-ttu-id="98b34-1426">匹配句号 (`.`) 字符后跟一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1426">Match the period (`.`) character followed by one or more word characters.</span></span> <span data-ttu-id="98b34-1427">此匹配可以出现零次或多次。</span><span class="sxs-lookup"><span data-stu-id="98b34-1427">This match can occur zero or more times.</span></span> <span data-ttu-id="98b34-1428">不捕获匹配的子表达式。</span><span class="sxs-lookup"><span data-stu-id="98b34-1428">The matched subexpression is not captured.</span></span>|  
|`\\`|<span data-ttu-id="98b34-1429">匹配一个反斜杠 (`\`) 字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1429">Match a backslash (`\`) character.</span></span>|  
|`([" + driveNames + "])`|<span data-ttu-id="98b34-1430">匹配单个驱动器字母组成的字符类。</span><span class="sxs-lookup"><span data-stu-id="98b34-1430">Match the character class that consists of the individual drive letters.</span></span> <span data-ttu-id="98b34-1431">此匹配项是第一个捕获子表达式。</span><span class="sxs-lookup"><span data-stu-id="98b34-1431">This match is the first captured subexpression.</span></span>|  
|`\$`|<span data-ttu-id="98b34-1432">匹配文本的美元符号 (`$`) 字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1432">Match the literal dollar sign (`$`) character.</span></span>|  
  
 <span data-ttu-id="98b34-1433">替换模式`$1`用第一个捕获子表达式替换整个匹配项。</span><span class="sxs-lookup"><span data-stu-id="98b34-1433">The replacement pattern `$1` replaces the entire match with the first captured subexpression.</span></span> <span data-ttu-id="98b34-1434">也就是说，它可以用的驱动器号替换 UNC 机和驱动器名称。</span><span class="sxs-lookup"><span data-stu-id="98b34-1434">That is, it replaces the UNC machine and drive name with the drive letter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98b34-1435">出现正则表达式分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1435">A regular expression parsing error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-1436">
            <paramref name="input" />、<paramref name="pattern" /> 或 <paramref name="replacement" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1436">
              <paramref name="input" />, <paramref name="pattern" />, or <paramref name="replacement" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98b34-1437">
            <paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1437">
              <paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span>
          </span>
          <span data-ttu-id="98b34-1438">- 或 -  <paramref name="matchTimeout" /> 为负、零或大于 24 天左右。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1438">-or-  <paramref name="matchTimeout" /> is negative, zero, or greater than approximately 24 days.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-1439">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1439">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-1440">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1440">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="98b34-1441">
            <para>我们建议你设置<paramref name="matchTimeout" />为适当的值，如两秒的参数。如果通过指定禁用超时<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，正则表达式引擎提供略有更好的性能。但是，你应禁用超时仅在以下情况:-当由正则表达式处理的输入源自已知且受信任的来源或由静态文本。这不包括已被动态由用户输入的文本。 -当进行全面测试正则表达式模式以确保它有效地处理匹配，非匹配项，并不久匹配。 -当正则表达式模式不包含任何已知会引起过多回溯，处理接近的匹配项时的语言元素。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1441">
              <para>We recommend that you set the <paramref name="matchTimeout" /> parameter to an appropriate value, such as two seconds. If you disable time-outs by specifying <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, the regular expression engine offers slightly better performance. However, you should disable time-outs only under the following conditions:  -   When the input processed by a regular expression is derived from a known and trusted source or consists of static text. This excludes text that has been dynamically input by users.  -   When the regular expression pattern has been thoroughly tested to ensure that it efficiently handles matches, non-matches, and near matches.  -   When the regular expression pattern contains no language elements that are known to cause excessive backtracking when processing a near match.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Text.RegularExpressions.RegexOptions" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static string Replace (string input, string pattern, System.Text.RegularExpressions.MatchEvaluator evaluator, System.Text.RegularExpressions.RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Replace(string input, string pattern, class System.Text.RegularExpressions.MatchEvaluator evaluator, valuetype System.Text.RegularExpressions.RegexOptions options, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Replace (input As String, pattern As String, evaluator As MatchEvaluator, options As RegexOptions, matchTimeout As TimeSpan) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Replace(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::MatchEvaluator ^ evaluator, System::Text::RegularExpressions::RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="static member Replace : string * string * System.Text.RegularExpressions.MatchEvaluator * System.Text.RegularExpressions.RegexOptions * TimeSpan -&gt; string" Usage="System.Text.RegularExpressions.Regex.Replace (input, pattern, evaluator, options, matchTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="evaluator" Type="System.Text.RegularExpressions.MatchEvaluator" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-1442">要搜索匹配项的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1442">The string to search for a match.</span>
          </span>
        </param>
        <param name="pattern">
          <span data-ttu-id="98b34-1443">要匹配的正则表达式模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1443">The regular expression pattern to match.</span>
          </span>
        </param>
        <param name="evaluator">
          <span data-ttu-id="98b34-1444">一个自定义方法，该方法检查每个匹配项，然后返回原始的匹配字符串或替换字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1444">A custom method that examines each match and returns either the original matched string or a replacement string.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="98b34-1445">枚举值的一个按位组合，这些枚举值提供匹配选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1445">A bitwise combination of enumeration values that provide options for matching.</span>
          </span>
        </param>
        <param name="matchTimeout">
          <span data-ttu-id="98b34-1446">超时间隔；若要指示该方法不应超时，则为 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1446">A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> to indicate that the method should not time out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-1447">在指定的输入字符串中，使用由 <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> 委托返回的字符串替换与指定的正则表达式匹配的所有子字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1447">In a specified input string, replaces all substrings that match a specified regular expression with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate.</span>
          </span>
          <span data-ttu-id="98b34-1448">如果未找到匹配项，则其他参数指定修改匹配操作的选项和超时间隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1448">Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-1449">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被替换字符串代替。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1449">A new string that is identical to the input string, except that the replacement string takes the place of each matched string.</span>
          </span>
          <span data-ttu-id="98b34-1450">如果 <paramref name="pattern" /> 与当前实例不匹配，则此方法返回未更改的当前实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1450">If <paramref name="pattern" /> is not matched in the current instance, the method returns the current instance unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-1451"><xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType>方法可用于替换正则表达式匹配，如果以下任何条件为 true:</span><span class="sxs-lookup"><span data-stu-id="98b34-1451">The <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType> method is useful for replacing a regular expression match if any of the following conditions is true:</span></span>  
  
-   <span data-ttu-id="98b34-1452">如果正则表达式替换模式中不能轻松地指定替换字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1452">If the replacement string cannot readily be specified by a regular expression replacement pattern.</span></span>  
  
-   <span data-ttu-id="98b34-1453">如果某些处理的替换字符串结果执行对匹配的字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1453">If the replacement string results from some processing performed on the matched string.</span></span>  
  
-   <span data-ttu-id="98b34-1454">如果从有条件处理结果的替换字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1454">If the replacement string results from conditional processing.</span></span>  
  
 <span data-ttu-id="98b34-1455">此方法等效于调用<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType>方法并传递每个<xref:System.Text.RegularExpressions.Match>在返回的对象<xref:System.Text.RegularExpressions.MatchCollection>集合到`evaluator`委托。</span><span class="sxs-lookup"><span data-stu-id="98b34-1455">The method is equivalent to calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType> method and passing each <xref:System.Text.RegularExpressions.Match> object in the returned <xref:System.Text.RegularExpressions.MatchCollection> collection to the `evaluator` delegate.</span></span>  
  
 <span data-ttu-id="98b34-1456">`pattern`参数包含以符号方式描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1456">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="98b34-1457">有关正则表达式的详细信息，请参阅[.NET Framework 正则表达式](~/docs/standard/base-types/regular-expressions.md)和[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-1457">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="98b34-1458">`evaluator`参数是你定义的自定义方法的委托，用于检查每个匹配项。</span><span class="sxs-lookup"><span data-stu-id="98b34-1458">The `evaluator` parameter is the delegate for a custom method that you define and that examines each match.</span></span> <span data-ttu-id="98b34-1459">自定义的方法必须具有以下签名以匹配<xref:System.Text.RegularExpressions.MatchEvaluator>委托。</span><span class="sxs-lookup"><span data-stu-id="98b34-1459">The custom method must have the following signature to match the <xref:System.Text.RegularExpressions.MatchEvaluator> delegate.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/syntax1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/syntax1.vb#1)]  
  
 <span data-ttu-id="98b34-1460">你自定义的方法返回替换匹配的输入的字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1460">Your custom method returns a string that replaces the matched input.</span></span>  
  
 <span data-ttu-id="98b34-1461">如果指定<xref:System.Text.RegularExpressions.RegexOptions.RightToLeft>为`options`参数，在输入字符串末尾开始和向左移动的匹配项的搜索; 否则为搜索输入字符串的开头开始，并向右移动。</span><span class="sxs-lookup"><span data-stu-id="98b34-1461">If you specify <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft> for the `options` parameter, the search for matches begins at the end of the input string and moves left; otherwise, the search begins at the start of the input string and moves right.</span></span>  
  
 <span data-ttu-id="98b34-1462">`matchTimeout`参数指定如何长时间模式匹配方法应尝试超时之前找到匹配项。将设置的超时间隔可防止依赖于从到出现的过度回溯的正则表达式"停止响应时它们处理输入，其中包含接近匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-1462">The `matchTimeout` parameter specifies how long a pattern matching method should try to find a match before it times out. Setting a time-out interval prevents regular expressions that rely on excessive backtracking from appearing to "stop responding when they process input that contains near matches.</span></span> <span data-ttu-id="98b34-1463">有关详细信息，请参阅[正则表达式的最佳实践](~/docs/standard/base-types/best-practices.md)和[回溯](~/docs/standard/base-types/backtracking-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-1463">For more information, see [Best Practices for Regular Expressions](~/docs/standard/base-types/best-practices.md) and [Backtracking](~/docs/standard/base-types/backtracking-in-regular-expressions.md).</span></span> <span data-ttu-id="98b34-1464">如果未找到匹配项是在该时间段内，该方法将引发<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-1464">If no match is found in that time interval, the method throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="98b34-1465">`matchTimeout` 重写任何应用程序域执行此方法定义的默认超时值。</span><span class="sxs-lookup"><span data-stu-id="98b34-1465">`matchTimeout` overrides any default time-out value defined for the application domain in which the method executes.</span></span>  
  
 <span data-ttu-id="98b34-1466">因为该方法返回`input`如果没有匹配项，保持不变，你可以使用<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法来确定该方法是否已发生与输入字符串的任何替换。</span><span class="sxs-lookup"><span data-stu-id="98b34-1466">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98b34-1467">下面的示例使用正则表达式，从字符串提取各个单词，然后使用<xref:System.Text.RegularExpressions.MatchEvaluator>要调用一个名为方法委托`WordScramble`打乱单词中的单个字母。</span><span class="sxs-lookup"><span data-stu-id="98b34-1467">The following example uses a regular expression to extract the individual words from a string, and then uses a <xref:System.Text.RegularExpressions.MatchEvaluator> delegate to call a method named `WordScramble` that scrambles the individual letters in the word.</span></span> <span data-ttu-id="98b34-1468">若要这样做，`WordScramble`方法创建一个数组，包含匹配项中的字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1468">To do this, the `WordScramble` method creates an array that contains the characters in the match.</span></span> <span data-ttu-id="98b34-1469">它还用随机浮点数将创建它填充的并行数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1469">It also creates a parallel array that it populates with random floating-point numbers.</span></span> <span data-ttu-id="98b34-1470">这些数组进行排序通过调用<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29?displayProperty=nameWithType>方法，并已排序的数组的自变量作为提供<xref:System.String>类构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-1470">The arrays are sorted by calling the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29?displayProperty=nameWithType> method, and the sorted array is provided as an argument to a <xref:System.String> class constructor.</span></span> <span data-ttu-id="98b34-1471">然后返回此新创建的字符串`WordScramble`方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-1471">This newly created string is then returned by the `WordScramble` method.</span></span> <span data-ttu-id="98b34-1472">正则表达式模式`\w+`匹配一个或多个单词字符; 正则表达式引擎将继续添加字符到匹配项，直到它遇到非单词字符，例如空白字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1472">The regular expression pattern `\w+` matches one or more word characters; the regular expression engine will continue to add characters to the match until it encounters a non-word character, such as a white-space character.</span></span> <span data-ttu-id="98b34-1473">调用<xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Text.RegularExpressions.RegexOptions%29>方法包括<xref:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace?displayProperty=nameWithType>选项，以便在正则表达式模式中的注释`\w+  # Matches all the characters in a word.`正则表达式引擎将忽略。</span><span class="sxs-lookup"><span data-stu-id="98b34-1473">The call to the <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Text.RegularExpressions.RegexOptions%29> method includes the <xref:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace?displayProperty=nameWithType> option so that the comment in the regular expression pattern `\w+  # Matches all the characters in a word.` is ignored by the regular expression engine.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replace13.cs#13)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replace13.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98b34-1474">出现正则表达式分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1474">A regular expression parsing error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-1475">
            <paramref name="input" />、<paramref name="pattern" /> 或 <paramref name="evaluator" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1475">
              <paramref name="input" />, <paramref name="pattern" />, or <paramref name="evaluator" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98b34-1476">
            <paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1476">
              <paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span>
          </span>
          <span data-ttu-id="98b34-1477">- 或 -  <paramref name="matchTimeout" /> 为负、零或大于 24 天左右。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1477">-or-  <paramref name="matchTimeout" /> is negative, zero, or greater than approximately 24 days.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-1478">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1478">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-1479">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1479">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="98b34-1480">
            <para>我们建议你设置<paramref name="matchTimeout" />为适当的值，如两秒的参数。如果通过指定禁用超时<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，正则表达式引擎提供略有更好的性能。但是，你应禁用超时仅在以下情况:-当由正则表达式处理的输入源自已知且受信任的来源或由静态文本。这不包括已被动态由用户输入的文本。 -当进行全面测试正则表达式模式以确保它有效地处理匹配，非匹配项，并不久匹配。 -当正则表达式模式不包含任何已知会引起过多回溯，处理接近的匹配项时的语言元素。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1480">
              <para>We recommend that you set the <paramref name="matchTimeout" /> parameter to an appropriate value, such as two seconds. If you disable time-outs by specifying <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, the regular expression engine offers slightly better performance. However, you should disable time-outs only under the following conditions:  -   When the input processed by a regular expression is derived from a known and trusted source or consists of static text. This excludes text that has been dynamically input by users.  -   When the regular expression pattern has been thoroughly tested to ensure that it efficiently handles matches, non-matches, and near matches.  -   When the regular expression pattern contains no language elements that are known to cause excessive backtracking when processing a near match.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Text.RegularExpressions.RegexOptions" />
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public bool RightToLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Regex.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RightToLeft { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeft : bool" Usage="System.Text.RegularExpressions.Regex.RightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98b34-1481">获取一个值，该值指示正则表达式是否从右向左进行搜索。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1481">Gets a value that indicates whether the regular expression searches from right to left.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="98b34-1482">如果正则表达式从右向左进行搜索，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1482">
              <see langword="true" /> if the regular expression searches from right to left; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-1483"><xref:System.Text.RegularExpressions.Regex.RightToLeft%2A> 是`true`如果<xref:System.Text.RegularExpressions.Regex>实例已创建与<xref:System.Text.RegularExpressions.RegexOptions.RightToLeft>选项。</span><span class="sxs-lookup"><span data-stu-id="98b34-1483"><xref:System.Text.RegularExpressions.Regex.RightToLeft%2A> is `true` if the <xref:System.Text.RegularExpressions.Regex> instance was created with the <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft> option.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="roptions">
      <MemberSignature Language="C#" Value="protected internal System.Text.RegularExpressions.RegexOptions roptions;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly valuetype System.Text.RegularExpressions.RegexOptions roptions" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.Regex.roptions" />
      <MemberSignature Language="VB.NET" Value="Protected Friend roptions As RegexOptions " />
      <MemberSignature Language="C++ CLI" Value="protected public: System::Text::RegularExpressions::RegexOptions roptions;" />
      <MemberSignature Language="F#" Value="val mutable roptions : System.Text.RegularExpressions.RegexOptions" Usage="System.Text.RegularExpressions.Regex.roptions" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98b34-1484">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1484">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Split">
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="98b34-1485">在由正则表达式匹配定义的位置将输入字符串拆分为一个子字符串数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1485">Splits an input string into an array of substrings at the positions defined by a regular expression match.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Split(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (input As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ Split(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Split : string -&gt; string[]" Usage="regex.Split input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-1486">要拆分的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1486">The string to split.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-1487">在由 <see cref="T:System.Text.RegularExpressions.Regex" /> 构造函数指定的正则表达式模式所定义的位置，将输入字符串拆分为子字符串数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1487">Splits an input string into an array of substrings at the positions defined by a regular expression pattern specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-1488">字符串数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1488">An array of strings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-1489"><xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>方法都是类似于<xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType>方法，只不过<xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>将在由正则表达式而不是一组字符的分隔符处字符串拆分。</span><span class="sxs-lookup"><span data-stu-id="98b34-1489">The <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> methods are similar to the <xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType> method, except that <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> splits the string at a delimiter determined by a regular expression instead of a set of characters.</span></span> <span data-ttu-id="98b34-1490">字符串被拆分为多的次数。</span><span class="sxs-lookup"><span data-stu-id="98b34-1490">The string is split as many times as possible.</span></span> <span data-ttu-id="98b34-1491">如果不找到任何分隔符，则返回值将包含其值为原始输入的字符串的一个元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1491">If no delimiter is found, the return value contains one element whose value is the original input string.</span></span>  
  
 <span data-ttu-id="98b34-1492">如果多个匹配项是彼此相邻，空字符串将插入到数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1492">If multiple matches are adjacent to one another, an empty string is inserted into the array.</span></span> <span data-ttu-id="98b34-1493">例如，拆分上一个连字符的字符串会导致返回的数组，以在其中找到两个相邻的连字符，如以下代码所示的位置中包含一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1493">For example, splitting a string on a single hyphen causes the returned array to include an empty string in the position where two adjacent hyphens are found, as the following code shows.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split1.vb#1)]  
  
 <span data-ttu-id="98b34-1494">如果开头或输入字符串的末尾找到匹配项，则是数组的开头或末尾返回包含一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1494">If a match is found at the beginning or the end of the input string, an empty string is included at the beginning or the end of the returned array.</span></span> <span data-ttu-id="98b34-1495">下面的示例使用正则表达式模式`\d+`拆分输入的字符串上数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1495">The following example uses the regular expression pattern `\d+` to split an input string on numeric characters.</span></span> <span data-ttu-id="98b34-1496">因为字符串开始和结尾匹配数字字符，则返回的数组的第一个和最后一个元素的值是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="98b34-1496">Because the string begins and ends with matching numeric characters, the value of the first and last element of the returned array is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split21.cs#21)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split21.vb#21)]  
  
 <span data-ttu-id="98b34-1497">如果在使用捕获括号<xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>表达式，任何捕获的文本包含在生成的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1497">If capturing parentheses are used in a <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> expression, any captured text is included in the resulting string array.</span></span> <span data-ttu-id="98b34-1498">例如，如果你拆分的字符串"plum-pear"连字符上放置在捕获括号中，返回的数组将包括一个包含连字符的字符串元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1498">For example, if you split the string "plum-pear" on a hyphen placed within capturing parentheses, the returned array includes a string element that contains the hyphen.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split2.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split2.vb#2)]  
  
 <span data-ttu-id="98b34-1499">但是，如果正则表达式模式包含多个组的捕获括号，此方法的行为取决于.NET Framework 的版本。</span><span class="sxs-lookup"><span data-stu-id="98b34-1499">However, when the regular expression pattern includes multiple sets of capturing parentheses, the behavior of this method depends on the version of the .NET Framework.</span></span> <span data-ttu-id="98b34-1500">在.NET Framework 1.0 和 1.1 中，如果捕获括号中的第一个集内找不到匹配项从其他捕获括号捕获的文本不是包括在返回的数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1500">In the .NET Framework 1.0 and 1.1, if a match is not found within the first set of capturing parentheses, captured text from additional capturing parentheses is not included in the returned array.</span></span> <span data-ttu-id="98b34-1501">从.NET Framework 2.0 开始，所有捕获的文本是也添加到返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="98b34-1501">Starting with the .NET Framework 2.0, all captured text is also added to the returned array.</span></span> <span data-ttu-id="98b34-1502">例如，下面的代码使用两个组捕获括号提取日期，包括日期分隔符，从日期字符串的元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1502">For example, the following code uses two sets of capturing parentheses to extract the elements of a date, including the date delimiters, from a date string.</span></span> <span data-ttu-id="98b34-1503">第一组捕获括号捕获该连字符，和第二组捕获正斜杠。</span><span class="sxs-lookup"><span data-stu-id="98b34-1503">The first set of capturing parentheses captures the hyphen, and the second set captures the forward slash.</span></span> <span data-ttu-id="98b34-1504">如果编译和在.NET Framework 1.0 或 1.1 下运行的代码示例，它会将排除的斜杠字符;如果它是编译，并且在.NET Framework 2.0 或更高版本下运行，它包括它们。</span><span class="sxs-lookup"><span data-stu-id="98b34-1504">If the example code is compiled and run under the .NET Framework 1.0 or 1.1, it excludes the slash characters; if it is compiled and run under the .NET Framework 2.0 or later versions, it includes them.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split3.cs#3)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split3.vb#3)]  
  
 <span data-ttu-id="98b34-1505">如果正则表达式可以匹配空字符串，<xref:System.Text.RegularExpressions.Regex.Split%28System.String%29>将字符串拆分为一个单字符字符串数组，因为可以在每个位置找到空字符串分隔符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1505">If the regular expression can match the empty string, <xref:System.Text.RegularExpressions.Regex.Split%28System.String%29> will split the string into an array of single-character strings because the empty string delimiter can be found at every location.</span></span> <span data-ttu-id="98b34-1506">例如:</span><span class="sxs-lookup"><span data-stu-id="98b34-1506">For example:</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split11.cs#11)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split11.vb#11)]  
  
 <span data-ttu-id="98b34-1507">请注意，返回的数组也包含空字符串的开头和结尾的数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1507">Note that the returned array also includes an empty string at the beginning and end of the array.</span></span>  
  
 <span data-ttu-id="98b34-1508"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果拆分操作的执行时间超出指定的超时间隔将引发异常<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-1508">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the split operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="98b34-1509">如果该操作超过应用程序域建立在其中任何超时值时调用的构造函数未设置的超时间隔，如果引发异常<xref:System.Text.RegularExpressions.Regex>创建对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-1509">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="98b34-1510">如果在中定义无超时<xref:System.Text.RegularExpressions.Regex>构造函数调用或在应用程序域的属性中，或如果超时值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，不会引发异常</span><span class="sxs-lookup"><span data-stu-id="98b34-1510">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-1511">
            <paramref name="input" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1511">
              <paramref name="input" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-1512">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1512">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-1513">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1513">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (string input, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(string input, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (input As String, count As Integer) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ Split(System::String ^ input, int count);" />
      <MemberSignature Language="F#" Value="member this.Split : string * int -&gt; string[]" Usage="regex.Split (input, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-1514">要拆分的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1514">The string to be split.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="98b34-1515">可拆分的最大次数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1515">The maximum number of times the split can occur.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-1516">在由 <see cref="T:System.Text.RegularExpressions.Regex" /> 构造函数中指定的正则表达式定义的位置，将输入字符串拆分为子字符串数组指定的最大次数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1516">Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-1517">字符串数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1517">An array of strings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-1518"><xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>方法都是类似于<xref:System.String.Split%2A?displayProperty=nameWithType>方法，只不过<xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>将在由正则表达式而不是一组字符的分隔符处字符串拆分。</span><span class="sxs-lookup"><span data-stu-id="98b34-1518">The <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> methods are similar to the <xref:System.String.Split%2A?displayProperty=nameWithType> method, except that <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> splits the string at a delimiter determined by a regular expression instead of a set of characters.</span></span> <span data-ttu-id="98b34-1519">`count`参数指定到其中的子字符串的最大数目`input`字符串可以拆分; 最后一个字符串包含字符串拆分其余部分。</span><span class="sxs-lookup"><span data-stu-id="98b34-1519">The `count` parameter specifies the maximum number of substrings into which the `input` string can be split; the last string contains the unsplit remainder of the string.</span></span> <span data-ttu-id="98b34-1520">A`count`为零的值提供许多次数尽可能拆分的默认行为。</span><span class="sxs-lookup"><span data-stu-id="98b34-1520">A `count` value of zero provides the default behavior of splitting as many times as possible.</span></span>  
  
 <span data-ttu-id="98b34-1521">如果多个匹配项是彼此相邻或的开头或末尾找到匹配项`input`，和找到的匹配项的数目是至少两个小于`count`，空字符串插入到数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1521">If multiple matches are adjacent to one another or if a match is found at the beginning or end of `input`, and the number of matches found is at least two less than `count`, an empty string is inserted into the array.</span></span> <span data-ttu-id="98b34-1522">也就是说，或导致的相邻匹配项的开头或输入字符串末尾的匹配项的空字符串中将计入确定是否数匹配子字符串等于`count`。</span><span class="sxs-lookup"><span data-stu-id="98b34-1522">That is, empty strings that result from adjacent matches or from matches at the beginning or end of the input string are counted in determining whether the number of matched substrings equals `count`.</span></span> <span data-ttu-id="98b34-1523">在下面的示例中，正则表达式`/d+`用于拆分输入的字符串中包括到最多三个子字符串的一个或多个十进制数字。</span><span class="sxs-lookup"><span data-stu-id="98b34-1523">In the following example, the regular expression `/d+` is used to split an input string that includes one or more decimal digits into a maximum of three substrings.</span></span> <span data-ttu-id="98b34-1524">由于输入字符串的开头匹配正则表达式模式，第一个数组元素都包含<xref:System.String.Empty?displayProperty=nameWithType>，第二个包含第一组在输入字符串中的字母字符，并且第三个包含字符串的其余部分第三个匹配项后的。</span><span class="sxs-lookup"><span data-stu-id="98b34-1524">Because the beginning of the input string matches the regular expression pattern, the first array element contains <xref:System.String.Empty?displayProperty=nameWithType>, the second contains the first set of alphabetic characters in the input string, and the third contains the remainder of the string that follows the third match.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split25.cs#25)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split25.vb#25)]  
  
 <span data-ttu-id="98b34-1525">如果正则表达式中使用捕获括号，任何捕获的文本包括在拆分字符串的数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1525">If capturing parentheses are used in a regular expression, any captured text is included in the array of split strings.</span></span> <span data-ttu-id="98b34-1526">但是，任何包含捕获的文本的数组元素将不计算确定是否匹配项的数目已达到`count`。</span><span class="sxs-lookup"><span data-stu-id="98b34-1526">However, any array elements that contain captured text are not counted in determining whether the number of matches has reached `count`.</span></span> <span data-ttu-id="98b34-1527">例如，显示拆分到四个七个元素的数组，如以下代码中的子字符串结果的最大值的字符串"apple-apricot-plum-pear-香蕉"。</span><span class="sxs-lookup"><span data-stu-id="98b34-1527">For example, splitting the string "apple-apricot-plum-pear-banana" into a maximum of four substrings results in a seven-element array, as the following code shows.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split4.cs#4)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split4.vb#4)]  
  
 <span data-ttu-id="98b34-1528">但是，如果正则表达式模式包含多个组的捕获括号，此方法的行为取决于.NET Framework 的版本。</span><span class="sxs-lookup"><span data-stu-id="98b34-1528">However, when the regular expression pattern includes multiple sets of capturing parentheses, the behavior of this method depends on the version of the .NET Framework.</span></span> <span data-ttu-id="98b34-1529">在.NET Framework 1.0 和 1.1 中，从第一组捕获括号仅捕获的文本将包括在返回的数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1529">In the .NET Framework 1.0 and 1.1, only captured text from the first set of capturing parentheses is included in the returned array.</span></span> <span data-ttu-id="98b34-1530">从.NET Framework 2.0 开始，所有捕获的文本已添加到返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="98b34-1530">Starting with the .NET Framework 2.0, all captured text is added to the returned array.</span></span> <span data-ttu-id="98b34-1531">但是，包含捕获的文本中返回的数组的元素将不计算确定是否数匹配子字符串等于`count`。</span><span class="sxs-lookup"><span data-stu-id="98b34-1531">However, elements in the returned array that contain captured text are not counted in determining whether the number of matched substrings equals `count`.</span></span> <span data-ttu-id="98b34-1532">例如，在下面的代码中，正则表达式使用两个组捕获括号以从日期字符串中提取日期的元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1532">For example, in the following code, a regular expression uses two sets of capturing parentheses to extract the elements of a date from a date string.</span></span> <span data-ttu-id="98b34-1533">第一组捕获括号捕获该连字符，和第二组捕获正斜杠。</span><span class="sxs-lookup"><span data-stu-id="98b34-1533">The first set of capturing parentheses captures the hyphen, and the second set captures the forward slash.</span></span> <span data-ttu-id="98b34-1534">调用<xref:System.Text.RegularExpressions.Regex.Split%28System.String%2CSystem.Int32%29>方法然后指定最多两个元素中返回的数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1534">The call to the <xref:System.Text.RegularExpressions.Regex.Split%28System.String%2CSystem.Int32%29> method then specifies a maximum of two elements in the returned array.</span></span> <span data-ttu-id="98b34-1535">如果编译和在.NET Framework 1.0 或 1.1 下运行的代码示例，该方法返回的两个元素字符串数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1535">If the example code is compiled and run under the .NET Framework 1.0 or 1.1, the method returns a two-element string array.</span></span> <span data-ttu-id="98b34-1536">如果它是编译，并且在.NET Framework 2.0 或更高版本下运行，则该方法返回的三元素字符串数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1536">If it is compiled and run under the .NET Framework 2.0 or later versions, the method returns a three-element string array.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split5.cs#5)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split5.vb#5)]  
  
 <span data-ttu-id="98b34-1537">如果正则表达式可以匹配空字符串，<xref:System.Text.RegularExpressions.Regex.Split%28System.String%2CSystem.Int32%29>将字符串拆分为一个单字符字符串数组，因为可以在每个位置找到空字符串分隔符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1537">If the regular expression can match the empty string, <xref:System.Text.RegularExpressions.Regex.Split%28System.String%2CSystem.Int32%29> will split the string into an array of single-character strings because the empty string delimiter can be found at every location.</span></span> <span data-ttu-id="98b34-1538">下面的示例将字符串"字符"拆分成，因为输入字符串中是为有许多元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1538">The following example splits the string "characters" into as many elements as there are in the input string.</span></span> <span data-ttu-id="98b34-1539">Null 字符串与输入字符串的开头匹配，因为返回数组的开头插入一个 null 字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1539">Because the null string matches the beginning of the input string, a null string is inserted at the beginning of the returned array.</span></span> <span data-ttu-id="98b34-1540">这将导致第 10 个元素包含的输入字符串末尾的两个字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1540">This causes the tenth element to consist of the two characters at the end of the input string.</span></span>  
  
 [!code-vb[System.Text.RegularExpressions.Regex.Split#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split12.vb#12)]  
  
 <span data-ttu-id="98b34-1541"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果拆分操作的执行时间超出指定的超时间隔将引发异常<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-1541">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the split operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="98b34-1542">如果该操作超过应用程序域建立在其中任何超时值时调用的构造函数未设置的超时间隔，如果引发异常<xref:System.Text.RegularExpressions.Regex>创建对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-1542">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="98b34-1543">如果在中定义无超时<xref:System.Text.RegularExpressions.Regex>构造函数调用或在应用程序域的属性中，或如果超时值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，不会引发异常</span><span class="sxs-lookup"><span data-stu-id="98b34-1543">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-1544">
            <paramref name="input" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1544">
              <paramref name="input" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-1545">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1545">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-1546">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1546">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public static string[] Split (string input, string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] Split(string input, string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Split (input As String, pattern As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ Split(System::String ^ input, System::String ^ pattern);" />
      <MemberSignature Language="F#" Value="static member Split : string * string -&gt; string[]" Usage="System.Text.RegularExpressions.Regex.Split (input, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-1547">要拆分的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1547">The string to split.</span>
          </span>
        </param>
        <param name="pattern">
          <span data-ttu-id="98b34-1548">要匹配的正则表达式模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1548">The regular expression pattern to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-1549">在由正则表达式模式定义的位置将输入字符串拆分为一个子字符串数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1549">Splits an input string into an array of substrings at the positions defined by a regular expression pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-1550">字符串数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1550">An array of strings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-1551"><xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>方法都是类似于<xref:System.String.Split%2A?displayProperty=nameWithType>方法，只不过<xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>将在由正则表达式而不是一组字符的分隔符处字符串拆分。</span><span class="sxs-lookup"><span data-stu-id="98b34-1551">The <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> methods are similar to the <xref:System.String.Split%2A?displayProperty=nameWithType> method, except that <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> splits the string at a delimiter determined by a regular expression instead of a set of characters.</span></span> <span data-ttu-id="98b34-1552">`input`字符串拆分为尽可能多的次数。</span><span class="sxs-lookup"><span data-stu-id="98b34-1552">The `input` string is split as many times as possible.</span></span> <span data-ttu-id="98b34-1553">如果`pattern`中找不到`input`字符串，返回的值包含一个元素，其值是原始`input`字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1553">If `pattern` is not found in the `input` string, the return value contains one element whose value is the original `input` string.</span></span>  
  
 <span data-ttu-id="98b34-1554">`pattern`参数包含以符号方式描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1554">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="98b34-1555">有关正则表达式的详细信息，请参阅[.NET Framework 正则表达式](~/docs/standard/base-types/regular-expressions.md)和[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-1555">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="98b34-1556">编译为静态的调用中使用的正则表达式<xref:System.Text.RegularExpressions.Regex.Split%2A>方法会自动缓存。</span><span class="sxs-lookup"><span data-stu-id="98b34-1556">Compiled regular expressions used in calls to static <xref:System.Text.RegularExpressions.Regex.Split%2A> methods are automatically cached.</span></span> <span data-ttu-id="98b34-1557">若要自行管理的已编译的正则表达式的生存期，使用该实例<xref:System.Text.RegularExpressions.Regex.Split%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-1557">To manage the lifetime of compiled regular expressions yourself, use the instance <xref:System.Text.RegularExpressions.Regex.Split%2A> methods.</span></span>  
  
 <span data-ttu-id="98b34-1558">如果多个匹配项是彼此相邻，空字符串将插入到数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1558">If multiple matches are adjacent to one another, an empty string is inserted into the array.</span></span> <span data-ttu-id="98b34-1559">例如，拆分上一个连字符的字符串会导致返回的数组，以在其中找到两个相邻的连字符，如以下代码所示的位置中包含一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1559">For example, splitting a string on a single hyphen causes the returned array to include an empty string in the position where two adjacent hyphens are found, as the following code shows.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split8.cs#8)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split8.vb#8)]  
  
 <span data-ttu-id="98b34-1560">如果开头或输入字符串的末尾找到匹配项，则是数组的开头或末尾返回包含一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1560">If a match is found at the beginning or the end of the input string, an empty string is included at the beginning or the end of the returned array.</span></span> <span data-ttu-id="98b34-1561">下面的示例使用正则表达式模式`\d+`拆分输入的字符串上数字字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1561">The following example uses the regular expression pattern `\d+` to split an input string on numeric characters.</span></span> <span data-ttu-id="98b34-1562">因为字符串开始和结尾匹配数字字符，则返回的数组的第一个和最后一个元素的值是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="98b34-1562">Because the string begins and ends with matching numeric characters, the value of the first and last element of the returned array is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split22.cs#22)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split22.vb#22)]  
  
 <span data-ttu-id="98b34-1563">如果在使用捕获括号<xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>表达式，任何捕获的文本包含在生成的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1563">If capturing parentheses are used in a <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> expression, any captured text is included in the resulting string array.</span></span> <span data-ttu-id="98b34-1564">例如，如果你拆分的字符串"plum-pear"连字符上放置在捕获括号中，返回的数组将包括一个包含连字符的字符串元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1564">For example, if you split the string "plum-pear" on a hyphen placed within capturing parentheses, the returned array includes a string element that contains the hyphen.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split9.cs#9)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split9.vb#9)]  
  
 <span data-ttu-id="98b34-1565">但是，如果正则表达式模式包含多个组的捕获括号，此方法的行为取决于.NET Framework 的版本。</span><span class="sxs-lookup"><span data-stu-id="98b34-1565">However, when the regular expression pattern includes multiple sets of capturing parentheses, the behavior of this method depends on the version of the .NET Framework.</span></span> <span data-ttu-id="98b34-1566">在.NET Framework 1.0 和 1.1 中，如果捕获括号中的第一个集内找不到匹配项从其他捕获括号捕获的文本不是包括在返回的数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1566">In the .NET Framework 1.0 and 1.1, if a match is not found within the first set of capturing parentheses, captured text from additional capturing parentheses is not included in the returned array.</span></span> <span data-ttu-id="98b34-1567">从.NET Framework 2.0 开始，所有捕获的文本是也添加到返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="98b34-1567">Starting with the .NET Framework 2.0, all captured text is also added to the returned array.</span></span> <span data-ttu-id="98b34-1568">例如，下面的代码使用两个组捕获括号提取日期，包括日期分隔符，从日期字符串的元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1568">For example, the following code uses two sets of capturing parentheses to extract the elements of a date, including the date delimiters, from a date string.</span></span> <span data-ttu-id="98b34-1569">第一组捕获括号捕获该连字符，和第二组捕获正斜杠。</span><span class="sxs-lookup"><span data-stu-id="98b34-1569">The first set of capturing parentheses captures the hyphen, and the second set captures the forward slash.</span></span> <span data-ttu-id="98b34-1570">如果编译和在.NET Framework 1.0 或 1.1 下运行的代码示例，它会将排除的斜杠字符;如果它是编译，并且在.NET Framework 2.0 或更高版本下运行，它包括它们。</span><span class="sxs-lookup"><span data-stu-id="98b34-1570">If the example code is compiled and run under the .NET Framework 1.0 or 1.1, it excludes the slash characters; if it is compiled and run under the .NET Framework 2.0 or later versions, it includes them.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split10.cs#10)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split10.vb#10)]  
  
 <span data-ttu-id="98b34-1571">如果正则表达式可以匹配空字符串，<xref:System.Text.RegularExpressions.Regex.Split%2A>将字符串拆分为一个单字符字符串数组，因为可以在每个位置找到空字符串分隔符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1571">If the regular expression can match the empty string, <xref:System.Text.RegularExpressions.Regex.Split%2A> will split the string into an array of single-character strings because the empty string delimiter can be found at every location.</span></span> <span data-ttu-id="98b34-1572">例如:</span><span class="sxs-lookup"><span data-stu-id="98b34-1572">For example:</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split13.cs#13)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split13.vb#13)]  
  
 <span data-ttu-id="98b34-1573">请注意，返回的数组也包含空字符串的开头和结尾的数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1573">Note that the returned array also includes an empty string at the beginning and end of the array.</span></span>  
  
 <span data-ttu-id="98b34-1574"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果拆分操作的执行时间超出从中调用该方法的应用程序域为指定的超时间隔将引发异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-1574">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the split operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="98b34-1575">如果没有超时设置定义在应用程序域的属性中，或者如果超时值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-1575">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98b34-1576">出现正则表达式分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1576">A regular expression parsing error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-1577">
            <paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1577">
              <paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-1578">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1578">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-1579">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1579">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="98b34-1580">
            <para>此方法等同于在其中调用该方法的应用程序域的默认超时值的时间间隔后超时。如果没有为应用程序域，值定义超时值<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，它防止超时，方法使用。建议的静态方法将拆分上模式匹配的文本是<see cref="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />，可以在其中你设置的超时间隔。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1580">
              <para>This method times out after an interval that is equal to the default time-out value of the application domain in which the method is called. If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used. The recommended static method for splitting text on a pattern match is <see cref="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (string input, int count, int startat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(string input, int32 count, int32 startat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (input As String, count As Integer, startat As Integer) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ Split(System::String ^ input, int count, int startat);" />
      <MemberSignature Language="F#" Value="member this.Split : string * int * int -&gt; string[]" Usage="regex.Split (input, count, startat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="startat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-1581">要拆分的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1581">The string to be split.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="98b34-1582">可拆分的最大次数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1582">The maximum number of times the split can occur.</span>
          </span>
        </param>
        <param name="startat">
          <span data-ttu-id="98b34-1583">输入字符串中将开始搜索的字符位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1583">The character position in the input string where the search will begin.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-1584">在由 <see cref="T:System.Text.RegularExpressions.Regex" /> 构造函数中指定的正则表达式定义的位置，将输入字符串拆分为子字符串数组指定的最大次数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1584">Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor.</span>
          </span>
          <span data-ttu-id="98b34-1585">从输入字符串的指定字符位置开始搜索正则表达式模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1585">The search for the regular expression pattern starts at a specified character position in the input string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-1586">字符串数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1586">An array of strings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-1587"><xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>方法都是类似于<xref:System.String.Split%2A?displayProperty=nameWithType>方法，只不过<xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>将在由正则表达式而不是一组字符的分隔符处字符串拆分。</span><span class="sxs-lookup"><span data-stu-id="98b34-1587">The <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> methods are similar to the <xref:System.String.Split%2A?displayProperty=nameWithType> method, except that <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> splits the string at a delimiter determined by a regular expression instead of a set of characters.</span></span> <span data-ttu-id="98b34-1588">`count`参数指定到其中的子字符串的最大数目`input`字符串被拆分; 最后一个字符串包含字符串拆分其余部分。</span><span class="sxs-lookup"><span data-stu-id="98b34-1588">The `count` parameter specifies the maximum number of substrings into which the `input` string is split; the last string contains the unsplit remainder of the string.</span></span> <span data-ttu-id="98b34-1589">A`count`为零的值提供许多次数尽可能拆分的默认行为。</span><span class="sxs-lookup"><span data-stu-id="98b34-1589">A `count` value of zero provides the default behavior of splitting as many times as possible.</span></span> <span data-ttu-id="98b34-1590">`startat`参数定义的第一个分隔符搜索开始处的点 （可用于跳过前导空格）。</span><span class="sxs-lookup"><span data-stu-id="98b34-1590">The `startat` parameter defines the point at which the search for the first delimiter begins (this can be used for skipping leading white space).</span></span>  
  
 <span data-ttu-id="98b34-1591">如果从不找到任何匹配项`count`+ 1 位置在字符串中，该方法返回包含的单一元素数组`input`字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1591">If no matches are found from the `count`+1 position in the string, the method returns a one-element array that contains the `input` string.</span></span> <span data-ttu-id="98b34-1592">如果找到一个或多个匹配项，返回的数组的第一个元素将包含中的匹配项前一个字符的第一个字符的字符串的第一个部分。</span><span class="sxs-lookup"><span data-stu-id="98b34-1592">If one or more matches are found, the first element of the returned array contains the first portion of the string from the first character up to one character before the match.</span></span>  
  
 <span data-ttu-id="98b34-1593">如果多个匹配项是彼此相邻，找到的匹配项的数目是至少两个小于`count`，空字符串插入到数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1593">If multiple matches are adjacent to one another and the number of matches found is at least two less than `count`, an empty string is inserted into the array.</span></span> <span data-ttu-id="98b34-1594">同样，如果在找到匹配项`startat`字符串中的第一个字符时，返回的数组的第一个元素为空字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1594">Similarly, if a match is found at `startat`, which is the first character in the string, the first element of the returned array is an empty string.</span></span> <span data-ttu-id="98b34-1595">也就是说，所产生的相邻匹配空字符串中将计入确定是否数匹配子字符串等于`count`。</span><span class="sxs-lookup"><span data-stu-id="98b34-1595">That is, empty strings that result from adjacent matches are counted in determining whether the number of matched substrings equals `count`.</span></span> <span data-ttu-id="98b34-1596">在下面的示例中，正则表达式`\d+`用于在字符串中，查找数字字符的第一个子字符串的起始位置，然后将字符串分隔的最大值处该位置开始的三次。</span><span class="sxs-lookup"><span data-stu-id="98b34-1596">In the following example, the regular expression `\d+` is used to find the starting position of the first substring of numeric characters in a string, and then to split the string a maximum of three times starting at that position.</span></span> <span data-ttu-id="98b34-1597">正则表达式模式与输入字符串的开头匹配，因为返回的字符串数组包含一个空字符串、 五个字符的字母字符串，以及字符串的其余部分</span><span class="sxs-lookup"><span data-stu-id="98b34-1597">Because the regular expression pattern matches the beginning of the input string, the returned string array consists of an empty string, a five-character alphabetic string, and the remainder of the string,</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split26.cs#26)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split26.vb#26)]  
  
 <span data-ttu-id="98b34-1598">如果正则表达式中使用捕获括号，任何捕获的文本包括在拆分字符串的数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1598">If capturing parentheses are used in a regular expression, any captured text is included in the array of split strings.</span></span> <span data-ttu-id="98b34-1599">但是，任何包含捕获的文本的数组元素将不计算确定是否匹配项的数目已达到`count`。</span><span class="sxs-lookup"><span data-stu-id="98b34-1599">However, any array elements that contain captured text are not counted in determining whether the number of matches has reached `count`.</span></span> <span data-ttu-id="98b34-1600">例如，拆分字符串"apple-apricot-plum-pear-pomegranate-pineapple-peach"到最多四个子字符串的开头字符 15 中则字符串将导致一个七个元素的数组，如以下代码所示。</span><span class="sxs-lookup"><span data-stu-id="98b34-1600">For example, splitting the string '"apple-apricot-plum-pear-pomegranate-pineapple-peach" into a maximum of four substrings beginning at character 15 in the string results in a seven-element array, as the following code shows.</span></span>  
  
 [!code-vb[System.Text.RegularExpressions.Regex.Split#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split6.vb#6)]  
  
 <span data-ttu-id="98b34-1601">但是，如果正则表达式模式包含多个组的捕获括号，此方法的行为取决于.NET Framework 的版本。</span><span class="sxs-lookup"><span data-stu-id="98b34-1601">However, when the regular expression pattern includes multiple sets of capturing parentheses, the behavior of this method depends on the version of the .NET Framework.</span></span> <span data-ttu-id="98b34-1602">在.NET Framework 1.0 和 1.1 中，如果捕获括号中的第一个集内找不到匹配项从其他捕获括号捕获的文本不是包括在返回的数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1602">In .NET Framework 1.0 and 1.1, if a match is not found within the first set of capturing parentheses, captured text from additional capturing parentheses is not included in the returned array.</span></span> <span data-ttu-id="98b34-1603">从.NET Framework 2.0 开始，所有捕获的文本是也添加到返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="98b34-1603">Starting with the .NET Framework 2.0, all captured text is also added to the returned array.</span></span> <span data-ttu-id="98b34-1604">例如，下面的代码使用两个组捕获括号提取字符串中的各单词。</span><span class="sxs-lookup"><span data-stu-id="98b34-1604">For example, the following code uses two sets of capturing parentheses to extract the individual words in a string.</span></span> <span data-ttu-id="98b34-1605">第一组捕获括号捕获该连字符，和第二组捕获的竖线。</span><span class="sxs-lookup"><span data-stu-id="98b34-1605">The first set of capturing parentheses captures the hyphen, and the second set captures the vertical bar.</span></span> <span data-ttu-id="98b34-1606">如果编译和在.NET Framework 1.0 或 1.1 下运行的代码示例，它会将排除垂直条字符;如果它是编译，并且在.NET Framework 2.0 或更高版本下运行，它包括它们。</span><span class="sxs-lookup"><span data-stu-id="98b34-1606">If the example code is compiled and run under the .NET Framework 1.0 or 1.1, it excludes the vertical bar characters; if it is compiled and run under the .NET Framework 2.0 or later versions, it includes them.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split7.cs#7)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split7.vb#7)]  
  
 <span data-ttu-id="98b34-1607">如果正则表达式可以匹配空字符串，<xref:System.Text.RegularExpressions.Regex.Split%2A>将字符串拆分为一个单字符字符串数组，因为可以在每个位置找到空字符串分隔符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1607">If the regular expression can match the empty string, <xref:System.Text.RegularExpressions.Regex.Split%2A> will split the string into an array of single-character strings because the empty string delimiter can be found at every location.</span></span> <span data-ttu-id="98b34-1608">下面的示例： 将字符串"字符"拆分成尽可能多的元素，因为包含输入的字符串，以字符为起始"a"。</span><span class="sxs-lookup"><span data-stu-id="98b34-1608">The following example splits the string "characters" into as many elements as the input string contains, starting with the character "a".</span></span> <span data-ttu-id="98b34-1609">Null 字符串与输入字符串的末尾匹配，因为在返回数组的末尾插入一个 null 字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1609">Because the null string matches the end of the input string, a null string is inserted at the end of the returned array.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split14.cs#14)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split14.vb#14)]  
  
 <span data-ttu-id="98b34-1610"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果拆分操作的执行时间超出指定的超时间隔将引发异常<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="98b34-1610">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the split operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="98b34-1611">如果该操作超过应用程序域建立在其中任何超时值时调用的构造函数未设置的超时间隔，如果引发异常<xref:System.Text.RegularExpressions.Regex>创建对象。</span><span class="sxs-lookup"><span data-stu-id="98b34-1611">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="98b34-1612">如果在中定义无超时<xref:System.Text.RegularExpressions.Regex>构造函数调用或在应用程序域的属性中，或如果超时值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，不会引发异常</span><span class="sxs-lookup"><span data-stu-id="98b34-1612">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-1613">
            <paramref name="input" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1613">
              <paramref name="input" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98b34-1614">
            <paramref name="startat" /> 小于零或大于 <paramref name="input" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1614">
              <paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-1615">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1615">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-1616">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1616">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public static string[] Split (string input, string pattern, System.Text.RegularExpressions.RegexOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] Split(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Split (input As String, pattern As String, options As RegexOptions) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ Split(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options);" />
      <MemberSignature Language="F#" Value="static member Split : string * string * System.Text.RegularExpressions.RegexOptions -&gt; string[]" Usage="System.Text.RegularExpressions.Regex.Split (input, pattern, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-1617">要拆分的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1617">The string to split.</span>
          </span>
        </param>
        <param name="pattern">
          <span data-ttu-id="98b34-1618">要匹配的正则表达式模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1618">The regular expression pattern to match.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="98b34-1619">枚举值的一个按位组合，这些枚举值提供匹配选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1619">A bitwise combination of the enumeration values that provide options for matching.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-1620">在由指定正则表达式模式定义的位置将输入字符串拆分为一个子字符串数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1620">Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern.</span>
          </span>
          <span data-ttu-id="98b34-1621">指定的选项将修改匹配操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1621">Specified options modify the matching operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-1622">字符串数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1622">An array of strings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-1623"><xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>方法都是类似于<xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType>方法，只不过<xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>将在由正则表达式而不是一组字符的分隔符处字符串拆分。</span><span class="sxs-lookup"><span data-stu-id="98b34-1623">The <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> methods are similar to the <xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType> method, except that <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> splits the string at a delimiter determined by a regular expression instead of a set of characters.</span></span> <span data-ttu-id="98b34-1624">字符串被拆分为多的次数。</span><span class="sxs-lookup"><span data-stu-id="98b34-1624">The string is split as many times as possible.</span></span> <span data-ttu-id="98b34-1625">如果不找到任何分隔符，则返回值将包含一个元素，其值是原始`input`字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1625">If no delimiter is found, the return value contains one element whose value is the original `input` string.</span></span>  
  
 <span data-ttu-id="98b34-1626">`pattern`参数包含以符号方式描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1626">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="98b34-1627">有关正则表达式的详细信息，请参阅[.NET Framework 正则表达式](~/docs/standard/base-types/regular-expressions.md)和[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-1627">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="98b34-1628">编译为静态的调用中使用的正则表达式<xref:System.Text.RegularExpressions.Regex.Split%2A>方法会自动缓存。</span><span class="sxs-lookup"><span data-stu-id="98b34-1628">Compiled regular expressions used in calls to static <xref:System.Text.RegularExpressions.Regex.Split%2A> methods are automatically cached.</span></span> <span data-ttu-id="98b34-1629">若要自行管理的已编译的正则表达式的生存期，使用该实例<xref:System.Text.RegularExpressions.Regex.Split%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-1629">To manage the lifetime of compiled regular expressions yourself, use the instance <xref:System.Text.RegularExpressions.Regex.Split%2A> methods.</span></span>  
  
 <span data-ttu-id="98b34-1630">如果多个匹配项是彼此相邻，空字符串将插入到数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1630">If multiple matches are adjacent to one another, an empty string is inserted into the array.</span></span> <span data-ttu-id="98b34-1631">例如，拆分上一个连字符的字符串会导致返回的数组，以在其中找到两个相邻的连字符的位置中包含一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1631">For example, splitting a string on a single hyphen causes the returned array to include an empty string in the position where two adjacent hyphens are found.</span></span>  
  
 <span data-ttu-id="98b34-1632">如果开头或输入字符串的末尾找到匹配项，则是数组的开头或末尾返回包含一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1632">If a match is found at the beginning or the end of the input string, an empty string is included at the beginning or the end of the returned array.</span></span> <span data-ttu-id="98b34-1633">下面的示例使用正则表达式模式`[a-z]+`拆分输入的字符串上任意大写或小写字母字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1633">The following example uses the regular expression pattern `[a-z]+` to split an input string on any uppercase or lowercase alphabetic character.</span></span> <span data-ttu-id="98b34-1634">因为字符串开始和结尾匹配字母字符，则返回的数组的第一个和最后一个元素的值是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="98b34-1634">Because the string begins and ends with matching alphabetic characters, the value of the first and last element of the returned array is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split24.cs#24)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split24.vb#24)]  
  
 <span data-ttu-id="98b34-1635">如果在使用捕获括号<xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>表达式，任何捕获的文本包含在生成的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1635">If capturing parentheses are used in a <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> expression, any captured text is included in the resulting string array.</span></span> <span data-ttu-id="98b34-1636">例如，如果你拆分的字符串"plum-pear"连字符上放置在捕获括号中，返回的数组将包括一个包含连字符的字符串元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1636">For example, if you split the string "plum-pear" on a hyphen placed within capturing parentheses, the returned array includes a string element that contains the hyphen.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split9.cs#9)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split9.vb#9)]  
  
 <span data-ttu-id="98b34-1637">但是，如果正则表达式模式包含多个组的捕获括号，此方法的行为取决于.NET Framework 的版本。</span><span class="sxs-lookup"><span data-stu-id="98b34-1637">However, when the regular expression pattern includes multiple sets of capturing parentheses, the behavior of this method depends on the version of the .NET Framework.</span></span> <span data-ttu-id="98b34-1638">在.NET Framework 1.0 和 1.1 中，如果捕获括号中的第一个集内找不到匹配项从其他捕获括号捕获的文本不是包括在返回的数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1638">In the .NET Framework 1.0 and 1.1, if a match is not found within the first set of capturing parentheses, captured text from additional capturing parentheses is not included in the returned array.</span></span> <span data-ttu-id="98b34-1639">从.NET Framework 2.0 开始，所有捕获的文本是也添加到返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="98b34-1639">Starting with the .NET Framework 2.0, all captured text is also added to the returned array.</span></span> <span data-ttu-id="98b34-1640">例如，下面的代码使用两个组捕获括号提取日期，包括日期分隔符，从日期字符串的元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1640">For example, the following code uses two sets of capturing parentheses to extract the elements of a date, including the date delimiters, from a date string.</span></span> <span data-ttu-id="98b34-1641">第一组捕获括号捕获该连字符，和第二组捕获正斜杠。</span><span class="sxs-lookup"><span data-stu-id="98b34-1641">The first set of capturing parentheses captures the hyphen, and the second set captures the forward slash.</span></span> <span data-ttu-id="98b34-1642">如果编译和在.NET Framework 1.0 或 1.1 下运行的代码示例，它会将排除的斜杠字符;如果它是编译，并且在.NET Framework 2.0 或更高版本下运行，它包括它们。</span><span class="sxs-lookup"><span data-stu-id="98b34-1642">If the example code is compiled and run under the .NET Framework 1.0 or 1.1, it excludes the slash characters; if it is compiled and run under the .NET Framework 2.0 or later versions, it includes them.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split10.cs#10)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split10.vb#10)]  
  
 <span data-ttu-id="98b34-1643">如果正则表达式可以匹配空字符串，<xref:System.Text.RegularExpressions.Regex.Split%2A>将字符串拆分为一个单字符字符串数组，因为可以在每个位置找到空字符串分隔符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1643">If the regular expression can match the empty string, <xref:System.Text.RegularExpressions.Regex.Split%2A> will split the string into an array of single-character strings because the empty string delimiter can be found at every location.</span></span>  
  
 <span data-ttu-id="98b34-1644"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果拆分操作的执行时间超出从中调用该方法的应用程序域为指定的超时间隔将引发异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-1644">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the split operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="98b34-1645">如果没有超时设置定义在应用程序域的属性中，或者如果超时值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-1645">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98b34-1646">出现正则表达式分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1646">A regular expression parsing error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-1647">
            <paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1647">
              <paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98b34-1648">
            <paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1648">
              <paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-1649">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1649">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-1650">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1650">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="98b34-1651">
            <para>此方法等同于在其中调用该方法的应用程序域的默认超时值的时间间隔后超时。如果没有为应用程序域，值定义超时值<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，它防止超时，方法使用。建议的静态方法将拆分上模式匹配的文本是<see cref="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />，可以在其中你设置的超时间隔。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1651">
              <para>This method times out after an interval that is equal to the default time-out value of the application domain in which the method is called. If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used. The recommended static method for splitting text on a pattern match is <see cref="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public static string[] Split (string input, string pattern, System.Text.RegularExpressions.RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] Split(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Split (input As String, pattern As String, options As RegexOptions, matchTimeout As TimeSpan) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ Split(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="static member Split : string * string * System.Text.RegularExpressions.RegexOptions * TimeSpan -&gt; string[]" Usage="System.Text.RegularExpressions.Regex.Split (input, pattern, options, matchTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="98b34-1652">要拆分的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1652">The string to split.</span>
          </span>
        </param>
        <param name="pattern">
          <span data-ttu-id="98b34-1653">要匹配的正则表达式模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1653">The regular expression pattern to match.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="98b34-1654">枚举值的一个按位组合，这些枚举值提供匹配选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1654">A bitwise combination of the enumeration values that provide options for matching.</span>
          </span>
        </param>
        <param name="matchTimeout">
          <span data-ttu-id="98b34-1655">超时间隔；若要指示该方法不应超时，则为 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1655">A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> to indicate that the method should not time out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-1656">在由指定正则表达式模式定义的位置将输入字符串拆分为一个子字符串数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1656">Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern.</span>
          </span>
          <span data-ttu-id="98b34-1657">如果未找到匹配项，则其他参数指定修改匹配操作的选项和超时间隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1657">Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-1658">字符串数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1658">A string array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-1659"><xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>方法都是类似于<xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType>方法，只不过<xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>将在由正则表达式而不是一组字符的分隔符处字符串拆分。</span><span class="sxs-lookup"><span data-stu-id="98b34-1659">The <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> methods are similar to the <xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType> method, except that <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> splits the string at a delimiter determined by a regular expression instead of a set of characters.</span></span> <span data-ttu-id="98b34-1660">字符串被拆分为多的次数。</span><span class="sxs-lookup"><span data-stu-id="98b34-1660">The string is split as many times as possible.</span></span> <span data-ttu-id="98b34-1661">如果不找到任何分隔符，则返回值将包含一个元素，其值是原始`input`字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1661">If no delimiter is found, the return value contains one element whose value is the original `input` string.</span></span>  
  
 <span data-ttu-id="98b34-1662">`pattern`参数包含以符号方式描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1662">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="98b34-1663">有关正则表达式的详细信息，请参阅[.NET Framework 正则表达式](~/docs/standard/base-types/regular-expressions.md)和[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-1663">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="98b34-1664">编译为静态的调用中使用的正则表达式<xref:System.Text.RegularExpressions.Regex.Split%2A>方法会自动缓存。</span><span class="sxs-lookup"><span data-stu-id="98b34-1664">Compiled regular expressions used in calls to static <xref:System.Text.RegularExpressions.Regex.Split%2A> methods are automatically cached.</span></span> <span data-ttu-id="98b34-1665">若要自行管理的已编译的正则表达式的生存期，使用该实例<xref:System.Text.RegularExpressions.Regex.Split%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="98b34-1665">To manage the lifetime of compiled regular expressions yourself, use the instance <xref:System.Text.RegularExpressions.Regex.Split%2A> methods.</span></span>  
  
 <span data-ttu-id="98b34-1666">如果多个匹配项是彼此相邻，空字符串将插入到数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1666">If multiple matches are adjacent to one another, an empty string is inserted into the array.</span></span> <span data-ttu-id="98b34-1667">例如，拆分上一个连字符的字符串会导致返回的数组，以在其中找到两个相邻的连字符的位置中包含一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1667">For example, splitting a string on a single hyphen causes the returned array to include an empty string in the position where two adjacent hyphens are found.</span></span>  
  
 <span data-ttu-id="98b34-1668">如果开头或输入字符串的末尾找到匹配项，则是数组的开头或末尾返回包含一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="98b34-1668">If a match is found at the beginning or the end of the input string, an empty string is included at the beginning or the end of the returned array.</span></span> <span data-ttu-id="98b34-1669">下面的示例使用正则表达式模式`[a-z]+`拆分输入的字符串上任意大写或小写字母字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1669">The following example uses the regular expression pattern `[a-z]+` to split an input string on any uppercase or lowercase alphabetic character.</span></span> <span data-ttu-id="98b34-1670">因为字符串开始和结尾匹配字母字符，则返回的数组的第一个和最后一个元素的值是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="98b34-1670">Because the string begins and ends with matching alphabetic characters, the value of the first and last element of the returned array is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split23.cs#23)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split23.vb#23)]  
  
 <span data-ttu-id="98b34-1671">如果在使用捕获括号<xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>表达式，任何捕获的文本包含在生成的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1671">If capturing parentheses are used in a <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> expression, any captured text is included in the resulting string array.</span></span> <span data-ttu-id="98b34-1672">例如，如果你拆分的字符串"plum-pear"连字符上放置在捕获括号中，返回的数组将包括一个包含连字符的字符串元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1672">For example, if you split the string "plum-pear" on a hyphen placed within capturing parentheses, the returned array includes a string element that contains the hyphen.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split9.cs#9)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split9.vb#9)]  
  
 <span data-ttu-id="98b34-1673">但是，如果正则表达式模式包含多个组的捕获括号，此方法的行为取决于.NET Framework 的版本。</span><span class="sxs-lookup"><span data-stu-id="98b34-1673">However, when the regular expression pattern includes multiple sets of capturing parentheses, the behavior of this method depends on the version of the .NET Framework.</span></span> <span data-ttu-id="98b34-1674">在.NET Framework 1.0 和 1.1 中，如果捕获括号中的第一个集内找不到匹配项从其他捕获括号捕获的文本不是包括在返回的数组。</span><span class="sxs-lookup"><span data-stu-id="98b34-1674">In the .NET Framework 1.0 and 1.1, if a match is not found within the first set of capturing parentheses, captured text from additional capturing parentheses is not included in the returned array.</span></span> <span data-ttu-id="98b34-1675">从.NET Framework 2.0 开始，所有捕获的文本是也添加到返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="98b34-1675">Starting with the .NET Framework 2.0, all captured text is also added to the returned array.</span></span> <span data-ttu-id="98b34-1676">例如，下面的代码使用两个组捕获括号提取日期，包括日期分隔符，从日期字符串的元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1676">For example, the following code uses two sets of capturing parentheses to extract the elements of a date, including the date delimiters, from a date string.</span></span> <span data-ttu-id="98b34-1677">第一组捕获括号捕获该连字符，和第二组捕获正斜杠。</span><span class="sxs-lookup"><span data-stu-id="98b34-1677">The first set of capturing parentheses captures the hyphen, and the second set captures the forward slash.</span></span> <span data-ttu-id="98b34-1678">如果编译和在.NET Framework 1.0 或 1.1 下运行的代码示例，它会将排除的斜杠字符;如果它是编译，并且在.NET Framework 2.0 或更高版本下运行，它包括它们。</span><span class="sxs-lookup"><span data-stu-id="98b34-1678">If the example code is compiled and run under the .NET Framework 1.0 or 1.1, it excludes the slash characters; if it is compiled and run under the .NET Framework 2.0 or later versions, it includes them.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split10.cs#10)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split10.vb#10)]  
  
 <span data-ttu-id="98b34-1679">如果正则表达式可以匹配空字符串，<xref:System.Text.RegularExpressions.Regex.Split%2A>将字符串拆分为一个单字符字符串数组，因为可以在每个位置找到空字符串分隔符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1679">If the regular expression can match the empty string, <xref:System.Text.RegularExpressions.Regex.Split%2A> will split the string into an array of single-character strings because the empty string delimiter can be found at every location.</span></span>  
  
 <span data-ttu-id="98b34-1680">`matchTimeout`参数指定如何长时间模式匹配方法应尝试超时之前找到匹配项。将设置的超时间隔可防止依赖于从似乎停止响应时它们处理输入的过度回溯的正则表达式，该字符串包含接近匹配。</span><span class="sxs-lookup"><span data-stu-id="98b34-1680">The `matchTimeout` parameter specifies how long a pattern matching method should try to find a match before it times out. Setting a time-out interval prevents regular expressions that rely on excessive backtracking from appearing to stop responding when they process input that contains near matches.</span></span> <span data-ttu-id="98b34-1681">有关详细信息，请参阅[正则表达式的最佳实践](~/docs/standard/base-types/best-practices.md)和[回溯](~/docs/standard/base-types/backtracking-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-1681">For more information, see [Best Practices for Regular Expressions](~/docs/standard/base-types/best-practices.md) and [Backtracking](~/docs/standard/base-types/backtracking-in-regular-expressions.md).</span></span> <span data-ttu-id="98b34-1682">如果未找到匹配项是在该时间段内，该方法将引发<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>异常。</span><span class="sxs-lookup"><span data-stu-id="98b34-1682">If no match is found in that time interval, the method throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="98b34-1683">`matchTimeout` 重写任何应用程序域执行此方法定义的默认超时值。</span><span class="sxs-lookup"><span data-stu-id="98b34-1683">`matchTimeout` overrides any default time-out value defined for the application domain in which the method executes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98b34-1684">出现正则表达式分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1684">A regular expression parsing error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-1685">
            <paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1685">
              <paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98b34-1686">
            <paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1686">
              <paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span>
          </span>
          <span data-ttu-id="98b34-1687">- 或 -  <paramref name="matchTimeout" /> 为负、零或大于 24 天左右。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1687">-or-  <paramref name="matchTimeout" /> is negative, zero, or greater than approximately 24 days.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="98b34-1688">发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1688">A time-out occurred.</span>
          </span>
          <span data-ttu-id="98b34-1689">有关超时的详细信息，请参阅“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1689">For more information about time-outs, see the Remarks section.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="98b34-1690">
            <para>我们建议你设置<paramref name="matchTimeout" />为适当的值，如两秒的参数。如果通过指定禁用超时<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，正则表达式引擎提供略有更好的性能。但是，你应禁用超时仅在以下情况:-当由正则表达式处理的输入源自已知且受信任的来源或由静态文本。这不包括已被动态由用户输入的文本。 -当进行全面测试正则表达式模式以确保它有效地处理匹配，非匹配项，并不久匹配。 -当正则表达式模式不包含任何已知会引起过多回溯，处理接近的匹配项时的语言元素。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1690">
              <para>We recommend that you set the <paramref name="matchTimeout" /> parameter to an appropriate value, such as two seconds. If you disable time-outs by specifying <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, the regular expression engine offers slightly better performance. However, you should disable time-outs only under the following conditions:  -   When the input processed by a regular expression is derived from a known and trusted source or consists of static text. This excludes text that has been dynamically input by users.  -   When the regular expression pattern has been thoroughly tested to ensure that it efficiently handles matches, non-matches, and near matches.  -   When the regular expression pattern contains no language elements that are known to cause excessive backtracking when processing a near match.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (si As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si">
          <span data-ttu-id="98b34-1691">要用序列化信息填充的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1691">The object to populate with serialization information.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="98b34-1692">存储和检索序列化数据的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1692">The place to store and retrieve serialized data.</span>
          </span>
          <span data-ttu-id="98b34-1693">此参数保留以供将来使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1693">This parameter is reserved for future use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-1694">使用所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象来反序列化当前 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1694">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data necessary to deserialize the current <see cref="T:System.Text.RegularExpressions.Regex" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="regex.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="98b34-1695">返回传入 <see langword="Regex" /> 构造函数的正则表达式模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1695">Returns the regular expression pattern that was passed into the <see langword="Regex" /> constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-1696">传入 <see langword="Regex" /> 构造函数的 <paramref name="pattern" /> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1696">The <paramref name="pattern" /> parameter that was passed into the <see langword="Regex" /> constructor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-1697">`pattern`参数包含以符号方式描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="98b34-1697">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="98b34-1698">有关正则表达式的详细信息，请参阅[.NET Framework 正则表达式](~/docs/standard/base-types/regular-expressions.md)和[正则表达式语言-快速参考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="98b34-1698">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="98b34-1699">
            <para>
              <see cref="T:System.Text.RegularExpressions.Regex" /> 是由正则表达式的基类<see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />方法。这些已编译的正则表达式使用<see cref="M:System.Text.RegularExpressions.Regex.ToString" />基本类的实现。如果从派生类中，调用<see cref="M:System.Text.RegularExpressions.Regex.ToString" />方法返回的字符串传递到<paramref name="pattern" />参数<see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" />用于定义正则表达式的类构造函数。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1699">
              <para>
                <see cref="T:System.Text.RegularExpressions.Regex" /> is the base class of regular expressions created by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. These compiled regular expressions use the <see cref="M:System.Text.RegularExpressions.Regex.ToString" /> implementation of the base class. If called from a derived class, the <see cref="M:System.Text.RegularExpressions.Regex.ToString" /> method returns the string that was passed to the <paramref name="pattern" /> parameter of the <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> class constructor that was used to define the regular expression.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Unescape">
      <MemberSignature Language="C#" Value="public static string Unescape (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Unescape(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Unescape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Unescape (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Unescape(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Unescape : string -&gt; string" Usage="System.Text.RegularExpressions.Regex.Unescape str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="98b34-1700">包含要转换的文本的输入字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1700">The input string containing the text to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-1701">转换输入字符串中的任何转义字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1701">Converts any escaped characters in the input string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-1702">包含任何转换为非转义形式的转义字符的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1702">A string of characters with any escaped characters converted to their unescaped form.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98b34-1703"><xref:System.Text.RegularExpressions.Regex.Unescape%2A>方法执行以下两个转换之一：</span><span class="sxs-lookup"><span data-stu-id="98b34-1703">The <xref:System.Text.RegularExpressions.Regex.Unescape%2A> method performs one of the following two transformations:</span></span>  
  
-   <span data-ttu-id="98b34-1704">它反转由执行的转换<xref:System.Text.RegularExpressions.Regex.Escape%2A>方法删除的转义字符 ("\\") 从每个方法进行转义的字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1704">It reverses the transformation performed by the <xref:System.Text.RegularExpressions.Regex.Escape%2A> method by removing the escape character ("\\") from each character escaped by the method.</span></span> <span data-ttu-id="98b34-1705">其中包括\\，\*，+，？， &#124;，{，[，（、）、 ^、 $、。，# 和空白字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1705">These include the \\, \*, +, ?, &#124;, {, [, (,), ^, $,., #, and white space characters.</span></span> <span data-ttu-id="98b34-1706">此外，<xref:System.Text.RegularExpressions.Regex.Unescape%2A>方法反转义右括号 (]) 和右大括号 （}） 字符。</span><span class="sxs-lookup"><span data-stu-id="98b34-1706">In addition, the <xref:System.Text.RegularExpressions.Regex.Unescape%2A> method unescapes the closing bracket (]) and closing brace (}) characters.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="98b34-1707"><xref:System.Text.RegularExpressions.Regex.Unescape%2A> 完全无法撤消转义的字符串，因为它无法推导出的字符转义确切地说，</span><span class="sxs-lookup"><span data-stu-id="98b34-1707"><xref:System.Text.RegularExpressions.Regex.Unescape%2A> cannot reverse an escaped string perfectly because it cannot deduce precisely which characters were escaped,</span></span>  
  
-   <span data-ttu-id="98b34-1708">它的表示形式不可打印的字符替换字符本身。</span><span class="sxs-lookup"><span data-stu-id="98b34-1708">It replaces the representation of unprintable characters with the characters themselves.</span></span> <span data-ttu-id="98b34-1709">例如，它可以 \a 替换 \x07。</span><span class="sxs-lookup"><span data-stu-id="98b34-1709">For example, it replaces \a with \x07.</span></span> <span data-ttu-id="98b34-1710">它将替换字符表示形式是 \a、 \b、 \e、 \n、 \r、 \f、 \t 和 \v。</span><span class="sxs-lookup"><span data-stu-id="98b34-1710">The character representations it replaces are \a, \b, \e, \n, \r, \f, \t, and \v.</span></span>  
  
 <span data-ttu-id="98b34-1711">如果<xref:System.Text.RegularExpressions.Regex.Unescape%2A>方法遇到其他的转义序列，它无法转换，如 \w 或 \s，则会引发<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="98b34-1711">If the <xref:System.Text.RegularExpressions.Regex.Unescape%2A> method encounters other escape sequences that it cannot convert, such as \w or \s, it throws an <xref:System.ArgumentException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98b34-1712">
            <paramref name="str" /> 包括无法识别的转义序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1712">
              <paramref name="str" /> includes an unrecognized escape sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98b34-1713">
            <paramref name="str" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1713">
              <paramref name="str" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.RegularExpressions.Regex.Escape(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UseOptionC">
      <MemberSignature Language="C#" Value="protected bool UseOptionC ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool UseOptionC() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.UseOptionC" />
      <MemberSignature Language="VB.NET" Value="Protected Function UseOptionC () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool UseOptionC();" />
      <MemberSignature Language="F#" Value="member this.UseOptionC : unit -&gt; bool" Usage="regex.UseOptionC " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="98b34-1714">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1714">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-1715">如果 <see cref="P:System.Text.RegularExpressions.Regex.Options" /> 属性包含 <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> 选项，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1715">
              <see langword="true" /> if the <see cref="P:System.Text.RegularExpressions.Regex.Options" /> property contains the <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> option; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseOptionR">
      <MemberSignature Language="C#" Value="protected bool UseOptionR ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool UseOptionR() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.UseOptionR" />
      <MemberSignature Language="VB.NET" Value="Protected Function UseOptionR () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool UseOptionR();" />
      <MemberSignature Language="F#" Value="member this.UseOptionR : unit -&gt; bool" Usage="regex.UseOptionR " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="98b34-1716">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1716">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98b34-1717">如果 <see cref="P:System.Text.RegularExpressions.Regex.Options" /> 属性包含 <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" /> 选项，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1717">
              <see langword="true" /> if the <see cref="P:System.Text.RegularExpressions.Regex.Options" /> property contains the <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" /> option; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateMatchTimeout">
      <MemberSignature Language="C#" Value="protected internal static void ValidateMatchTimeout (TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig void ValidateMatchTimeout(valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.ValidateMatchTimeout(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Shared Sub ValidateMatchTimeout (matchTimeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; static void ValidateMatchTimeout(TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="static member ValidateMatchTimeout : TimeSpan -&gt; unit" Usage="System.Text.RegularExpressions.Regex.ValidateMatchTimeout matchTimeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matchTimeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="matchTimeout">
          <span data-ttu-id="98b34-1718">要检查的超时间隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1718">The time-out interval to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98b34-1719">检查超时间隔是否在可接受的范围内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98b34-1719">Checks whether a time-out interval is within an acceptable range.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>