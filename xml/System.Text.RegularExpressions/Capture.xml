<Type Name="Capture" FullName="System.Text.RegularExpressions.Capture">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8dfeb69aa0ac9f45e2436969c276f2960db7be09" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30529161" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Capture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Capture extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.Capture" />
  <TypeSignature Language="VB.NET" Value="Public Class Capture" />
  <TypeSignature Language="C++ CLI" Value="public ref class Capture" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="89cf3-101">表示来自单个成功子表达式捕获的结果。</span>
      <span class="sxs-lookup">
        <span data-stu-id="89cf3-101">Represents the results from a single successful subexpression capture.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89cf3-102">A<xref:System.Text.RegularExpressions.Capture>对象是不可变，并且没有公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="89cf3-102">A <xref:System.Text.RegularExpressions.Capture> object is immutable and has no public constructor.</span></span> <span data-ttu-id="89cf3-103">通过返回实例<xref:System.Text.RegularExpressions.CaptureCollection>对象，即通过`Match.Captures`和<xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="89cf3-103">Instances are returned through the <xref:System.Text.RegularExpressions.CaptureCollection> object, which is returned by the `Match.Captures` and <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="89cf3-104">但是，`Match.Captures`属性提供相同的匹配项有关的信息<xref:System.Text.RegularExpressions.Match>对象。</span><span class="sxs-lookup"><span data-stu-id="89cf3-104">However, the `Match.Captures` property provides information about the same match as the <xref:System.Text.RegularExpressions.Match> object.</span></span>  
  
 <span data-ttu-id="89cf3-105">如果您不会将应用于捕获组，<xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType>属性返回<xref:System.Text.RegularExpressions.CaptureCollection>与单个<xref:System.Text.RegularExpressions.Capture>提供相同的捕获有关的信息的对象<xref:System.Text.RegularExpressions.Group>对象。</span><span class="sxs-lookup"><span data-stu-id="89cf3-105">If you do not apply a  to a capturing group, the <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> property returns a <xref:System.Text.RegularExpressions.CaptureCollection> with a single <xref:System.Text.RegularExpressions.Capture> object that provides information about the same capture as the <xref:System.Text.RegularExpressions.Group> object.</span></span> <span data-ttu-id="89cf3-106">如果您对一个捕获组应用限定符`Group.Index`， `Group.Length`，和`Group.Value`属性提供仅涉及最后的捕获组的信息，而<xref:System.Text.RegularExpressions.Capture>中的对象<xref:System.Text.RegularExpressions.CaptureCollection>提供所有相关信息子表达式捕获。</span><span class="sxs-lookup"><span data-stu-id="89cf3-106">If you do apply a quantifier to a capturing group, the `Group.Index`, `Group.Length`, and `Group.Value` properties provide information only about the last captured group, whereas the <xref:System.Text.RegularExpressions.Capture> objects in the <xref:System.Text.RegularExpressions.CaptureCollection> provide information about all subexpression captures.</span></span> <span data-ttu-id="89cf3-107">说明如示例所示。</span><span class="sxs-lookup"><span data-stu-id="89cf3-107">The example provides an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89cf3-108">下面的示例定义正则表达式相匹配包含除外一段时间没有标点符号的句子 ("。")。</span><span class="sxs-lookup"><span data-stu-id="89cf3-108">The following example defines a regular expression that matches sentences that contain no punctuation except for a period (".").</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/vb/example1.vb#1)]  
  
 <span data-ttu-id="89cf3-109">正则表达式模式 `((\w+)[\s.])+` 的定义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="89cf3-109">The regular expression pattern `((\w+)[\s.])+` is defined as shown in the following table.</span></span> <span data-ttu-id="89cf3-110">请注意，在此正则表达式中，限定符 （+） 应用于整个正则表达式。</span><span class="sxs-lookup"><span data-stu-id="89cf3-110">Note that in this regular expression, a quantifier (+) is applied to the entire regular expression.</span></span>  
  
|<span data-ttu-id="89cf3-111">模式</span><span class="sxs-lookup"><span data-stu-id="89cf3-111">Pattern</span></span>|<span data-ttu-id="89cf3-112">描述</span><span class="sxs-lookup"><span data-stu-id="89cf3-112">Description</span></span>|  
|-------------|-----------------|  
|`(\w+)`|<span data-ttu-id="89cf3-113">匹配一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="89cf3-113">Match one or more word characters.</span></span> <span data-ttu-id="89cf3-114">这是第二个捕获组。</span><span class="sxs-lookup"><span data-stu-id="89cf3-114">This is the second capturing group.</span></span>|  
|`[\s.])`|<span data-ttu-id="89cf3-115">匹配空白字符或句点 ("。")。</span><span class="sxs-lookup"><span data-stu-id="89cf3-115">Match a white-space character or period (".").</span></span>|  
|`((\w+)[\s.])`|<span data-ttu-id="89cf3-116">匹配一个或多个单词字符，再后跟空白字符或句号 ("。")。</span><span class="sxs-lookup"><span data-stu-id="89cf3-116">Match one or more word characters followed by a white-space character or period (".").</span></span> <span data-ttu-id="89cf3-117">这是第一个捕获组。</span><span class="sxs-lookup"><span data-stu-id="89cf3-117">This is the first capturing group.</span></span>|  
|`((\w+)[\s.])+`|<span data-ttu-id="89cf3-118">匹配一个或多个以下模式： 一个单词字符或字符后跟空白字符或句点 ("。")。</span><span class="sxs-lookup"><span data-stu-id="89cf3-118">Match one or more occurrences of a word character or characters followed by a white-space character or period (".").</span></span>|  
  
 <span data-ttu-id="89cf3-119">在此示例中，输入的字符串包含两个句子。</span><span class="sxs-lookup"><span data-stu-id="89cf3-119">In this example, the input string consists of two sentences.</span></span> <span data-ttu-id="89cf3-120">如输出所示，第一个句子包括只有一个单词，因此<xref:System.Text.RegularExpressions.CaptureCollection>对象具有单个<xref:System.Text.RegularExpressions.Capture>对象，表示相同的捕获<xref:System.Text.RegularExpressions.Group>对象。</span><span class="sxs-lookup"><span data-stu-id="89cf3-120">As the output shows, the first sentence consists of only one word, so the <xref:System.Text.RegularExpressions.CaptureCollection> object has a single <xref:System.Text.RegularExpressions.Capture> object that represents the same capture as the <xref:System.Text.RegularExpressions.Group> object.</span></span> <span data-ttu-id="89cf3-121">第二个句子包含多个单词，因此<xref:System.Text.RegularExpressions.Group>对象只包含有关最后一个匹配的子表达式的信息。</span><span class="sxs-lookup"><span data-stu-id="89cf3-121">The second sentence consists of multiple words, so the <xref:System.Text.RegularExpressions.Group> objects only contain information about the last matched subexpression.</span></span> <span data-ttu-id="89cf3-122">组 1，它表示的第一个捕获，包含具有结算期间该句中最后一个单词。</span><span class="sxs-lookup"><span data-stu-id="89cf3-122">Group 1, which represents the first capture, contains the last word in the sentence that has a closing period.</span></span> <span data-ttu-id="89cf3-123">组 2，它表示第二个捕获，包含该句中最后一个单词。</span><span class="sxs-lookup"><span data-stu-id="89cf3-123">Group 2, which represents the second capture, contains the last word in the sentence.</span></span> <span data-ttu-id="89cf3-124">但是，<xref:System.Text.RegularExpressions.Capture>在组的对象<xref:System.Text.RegularExpressions.CaptureCollection>对象捕获每个子表达式匹配项。</span><span class="sxs-lookup"><span data-stu-id="89cf3-124">However, the <xref:System.Text.RegularExpressions.Capture> objects in the group's <xref:System.Text.RegularExpressions.CaptureCollection> object capture each subexpression match.</span></span> <span data-ttu-id="89cf3-125"><xref:System.Text.RegularExpressions.Capture>的捕获的第一个捕获组的集合中的对象包含有关每个已捕获的单词和空白字符或句点的信息。</span><span class="sxs-lookup"><span data-stu-id="89cf3-125">The <xref:System.Text.RegularExpressions.Capture> objects in the first capturing group's collection of captures contain information about each captured word and white-space character or period.</span></span> <span data-ttu-id="89cf3-126"><xref:System.Text.RegularExpressions.Capture>的捕获的第二个捕获组的集合中的对象包含有关每个已捕获的单词的信息。</span><span class="sxs-lookup"><span data-stu-id="89cf3-126">The <xref:System.Text.RegularExpressions.Capture> objects in the second capturing group's collection of captures contain information about each captured word.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.RegularExpressions.CaptureCollection" />
  </Docs>
  <Members>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89cf3-127">原始字符串中发现捕获的子字符串的第一个字符的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf3-127">The position in the original string where the first character of the captured substring is found.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89cf3-128">原始字符串中发现捕获的子字符串的从零开始的起始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf3-128">The zero-based starting position in the original string where the captured substring is found.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89cf3-129">获取捕获的子字符串的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf3-129">Gets the length of the captured substring.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89cf3-130">捕获的子字符串的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf3-130">The length of the captured substring.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Capture.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="89cf3-131">通过调用 <see cref="P:System.Text.RegularExpressions.Capture.Value" /> 属性，从输入的字符串中检索捕获的子字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf3-131">Retrieves the captured substring from the input string by calling the <see cref="P:System.Text.RegularExpressions.Capture.Value" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89cf3-132">通过匹配捕获的子字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf3-132">The substring that was captured by the match.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89cf3-133">`ToString` 是实际到一个内部调用<xref:System.Text.RegularExpressions.Capture.Value%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="89cf3-133">`ToString` is actually an internal call to the <xref:System.Text.RegularExpressions.Capture.Value%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89cf3-134">获取输入的字符串中的捕获的子字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf3-134">Gets the captured substring from the input string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89cf3-135">通过匹配捕获的子字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf3-135">The substring that is captured by the match.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89cf3-136">如果调用<xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType>或<xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType>方法未能找到匹配项，则返回的值`Match.Value`属性是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="89cf3-136">If a call to the <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> or <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> method fails to find a match, the value of the returned `Match.Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="89cf3-137">如果正则表达式引擎不能与捕获组匹配。</span><span class="sxs-lookup"><span data-stu-id="89cf3-137">If the regular expression engine is unable to match a capturing group.</span></span> <span data-ttu-id="89cf3-138">返回值`Group.Value`属性是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="89cf3-138">the value of the returned `Group.Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="89cf3-139">请参阅方面的演示的第二个示例。</span><span class="sxs-lookup"><span data-stu-id="89cf3-139">See the second example for an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89cf3-140">下面的示例定义正则表达式相匹配包含除外一段时间没有标点符号的句子 ("。")。</span><span class="sxs-lookup"><span data-stu-id="89cf3-140">The following example defines a regular expression that matches sentences that contain no punctuation except for a period (".").</span></span> <span data-ttu-id="89cf3-141">`Match.Value`属性将显示结果字符串，其中包括匹配句子，每个匹配项。</span><span class="sxs-lookup"><span data-stu-id="89cf3-141">The `Match.Value` property displays the result string, which consists of a matched sentence, for each match.</span></span> <span data-ttu-id="89cf3-142">`Group.Value`属性显示每个捕获组的结果字符串; 它包含由该捕获组捕获的最后一个字符串。</span><span class="sxs-lookup"><span data-stu-id="89cf3-142">The `Group.Value` property displays the result string for each capturing group; it consists of the last string captured by that capturing group.</span></span> <span data-ttu-id="89cf3-143"><xref:System.Text.RegularExpressions.Capture.Value%2A?displayProperty=nameWithType>属性显示每个捕获的结果字符串。</span><span class="sxs-lookup"><span data-stu-id="89cf3-143">The <xref:System.Text.RegularExpressions.Capture.Value%2A?displayProperty=nameWithType> property displays the result string for each capture.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/vb/example1.vb#1)]  
  
 <span data-ttu-id="89cf3-144">正则表达式模式 `((\w+)[\s.])+` 的定义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="89cf3-144">The regular expression pattern `((\w+)[\s.])+` is defined as shown in the following table.</span></span> <span data-ttu-id="89cf3-145">请注意，在此正则表达式中，限定符 （+） 应用于整个正则表达式。</span><span class="sxs-lookup"><span data-stu-id="89cf3-145">Note that in this regular expression, a quantifier (+) is applied to the entire regular expression.</span></span>  
  
|<span data-ttu-id="89cf3-146">模式</span><span class="sxs-lookup"><span data-stu-id="89cf3-146">Pattern</span></span>|<span data-ttu-id="89cf3-147">描述</span><span class="sxs-lookup"><span data-stu-id="89cf3-147">Description</span></span>|  
|-------------|-----------------|  
|`(\w+)`|<span data-ttu-id="89cf3-148">匹配一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="89cf3-148">Match one or more word characters.</span></span> <span data-ttu-id="89cf3-149">这是第二个捕获组。</span><span class="sxs-lookup"><span data-stu-id="89cf3-149">This is the second capturing group.</span></span>|  
|`[\s.])`|<span data-ttu-id="89cf3-150">匹配空白字符或句点 ("。")。</span><span class="sxs-lookup"><span data-stu-id="89cf3-150">Match a white-space character or period (".").</span></span>|  
|`((\w+)[\s.])`|<span data-ttu-id="89cf3-151">匹配一个或多个单词字符，再后跟空白字符或句号 ("。")。</span><span class="sxs-lookup"><span data-stu-id="89cf3-151">Match one or more word characters followed by a white-space character or period (".").</span></span> <span data-ttu-id="89cf3-152">这是第一个捕获组。</span><span class="sxs-lookup"><span data-stu-id="89cf3-152">This is the first capturing group.</span></span>|  
|`((\w+)[\s.])+`|<span data-ttu-id="89cf3-153">匹配一个或多个以下模式： 一个单词字符或字符后跟空白字符或句点 ("。")。</span><span class="sxs-lookup"><span data-stu-id="89cf3-153">Match one or more occurrences of a word character or characters followed by a white-space character or period (".").</span></span>|  
  
 <span data-ttu-id="89cf3-154">在此示例中，输入的字符串包含两个句子。</span><span class="sxs-lookup"><span data-stu-id="89cf3-154">In this example, the input string consists of two sentences.</span></span> <span data-ttu-id="89cf3-155">如输出所示，第一个句子包括只有一个单词，因此<xref:System.Text.RegularExpressions.CaptureCollection>对象具有单个<xref:System.Text.RegularExpressions.Capture>对象，表示相同的捕获<xref:System.Text.RegularExpressions.Group>对象。</span><span class="sxs-lookup"><span data-stu-id="89cf3-155">As the output shows, the first sentence consists of only one word, so the <xref:System.Text.RegularExpressions.CaptureCollection> object has a single <xref:System.Text.RegularExpressions.Capture> object that represents the same capture as the <xref:System.Text.RegularExpressions.Group> object.</span></span> <span data-ttu-id="89cf3-156">第二个句子包含多个单词，因此<xref:System.Text.RegularExpressions.Group>对象只包含有关最后一个匹配的子表达式的信息。</span><span class="sxs-lookup"><span data-stu-id="89cf3-156">The second sentence consists of multiple words, so the <xref:System.Text.RegularExpressions.Group> objects only contain information about the last matched subexpression.</span></span> <span data-ttu-id="89cf3-157">组 1，它表示的第一个捕获，包含具有结算期间该句中最后一个单词。</span><span class="sxs-lookup"><span data-stu-id="89cf3-157">Group 1, which represents the first capture, contains the last word in the sentence that has a closing period.</span></span> <span data-ttu-id="89cf3-158">组 2，它表示第二个捕获，包含该句中最后一个单词。</span><span class="sxs-lookup"><span data-stu-id="89cf3-158">Group 2, which represents the second capture, contains the last word in the sentence.</span></span> <span data-ttu-id="89cf3-159">但是，<xref:System.Text.RegularExpressions.Capture>在组的对象<xref:System.Text.RegularExpressions.CaptureCollection>对象捕获每个子表达式匹配项。</span><span class="sxs-lookup"><span data-stu-id="89cf3-159">However, the <xref:System.Text.RegularExpressions.Capture> objects in the group's <xref:System.Text.RegularExpressions.CaptureCollection> object capture each subexpression match.</span></span> <span data-ttu-id="89cf3-160"><xref:System.Text.RegularExpressions.Capture>的捕获的第一个捕获组的集合中的对象包含有关每个已捕获的单词和空白字符或句点的信息。</span><span class="sxs-lookup"><span data-stu-id="89cf3-160">The <xref:System.Text.RegularExpressions.Capture> objects in the first capturing group's collection of captures contain information about each captured word and white-space character or period.</span></span> <span data-ttu-id="89cf3-161"><xref:System.Text.RegularExpressions.Capture>的捕获的第二个捕获组的集合中的对象包含有关每个已捕获的单词的信息。</span><span class="sxs-lookup"><span data-stu-id="89cf3-161">The <xref:System.Text.RegularExpressions.Capture> objects in the second capturing group's collection of captures contain information about each captured word.</span></span>  
  
 <span data-ttu-id="89cf3-162">下面的示例使用正则表达式模式中， `^([a-z]+)(\d+)*\.([a-z]+(\d)*)$`，用于匹配由句点分隔的两个部分组成的产品编号。</span><span class="sxs-lookup"><span data-stu-id="89cf3-162">The following example uses a regular expression pattern, `^([a-z]+)(\d+)*\.([a-z]+(\d)*)$`, to match a product number that consists of two parts separated by a period.</span></span> <span data-ttu-id="89cf3-163">这两个部分包含字母字符后跟可选的数字。</span><span class="sxs-lookup"><span data-stu-id="89cf3-163">Both parts consist of alphabetic characters followed by optional numbers.</span></span> <span data-ttu-id="89cf3-164">因为第一个输入的字符串与模式，则返回的值不匹配<xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType>对象的`Value`属性是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="89cf3-164">Because the first input string does not match the pattern, the value of the returned <xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType> object's `Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="89cf3-165">同样，当正则表达式模式不能与捕获组，相应的值匹配时<xref:System.Text.RegularExpressions.Group>对象的`Value`属性是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="89cf3-165">Similarly, when the regular expression pattern is unable to match a capturing group, the value of the corresponding <xref:System.Text.RegularExpressions.Group> object's `Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Value#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.value/cs/value1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Value#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.value/vb/value1.vb#1)]  
  
 <span data-ttu-id="89cf3-166">下表中所示，正则表达式模式的定义：</span><span class="sxs-lookup"><span data-stu-id="89cf3-166">The regular expression pattern is defined as shown in the following table:</span></span>  
  
|<span data-ttu-id="89cf3-167">模式</span><span class="sxs-lookup"><span data-stu-id="89cf3-167">Pattern</span></span>|<span data-ttu-id="89cf3-168">描述</span><span class="sxs-lookup"><span data-stu-id="89cf3-168">Description</span></span>|  
|-------------|-----------------|  
|`^`|<span data-ttu-id="89cf3-169">从字符串开头开始匹配。</span><span class="sxs-lookup"><span data-stu-id="89cf3-169">Begin the match at the beginning of the string.</span></span>|  
|`([a-z]+)`|<span data-ttu-id="89cf3-170">匹配一个或多个匹配项的任意字符在从 a 到 z。</span><span class="sxs-lookup"><span data-stu-id="89cf3-170">Match one or more occurrences of any character from a to z.</span></span> <span data-ttu-id="89cf3-171">因为正则表达式引擎传递<xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType>选项，此比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="89cf3-171">Because the regular expression engine is passed the <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType> option, this comparison is case-insensitive.</span></span> <span data-ttu-id="89cf3-172">这是第一个捕获组。</span><span class="sxs-lookup"><span data-stu-id="89cf3-172">This is the first capturing group.</span></span>|  
|`(\d+)?`|<span data-ttu-id="89cf3-173">匹配零个或一个匹配项的一个或多个十进制数字。</span><span class="sxs-lookup"><span data-stu-id="89cf3-173">Match zero or one occurrence of one or more decimal digits.</span></span> <span data-ttu-id="89cf3-174">这是第二个捕获组。</span><span class="sxs-lookup"><span data-stu-id="89cf3-174">This is the second capturing group.</span></span>|  
|`\.`|<span data-ttu-id="89cf3-175">匹配文本句点字符。</span><span class="sxs-lookup"><span data-stu-id="89cf3-175">Match a literal period character.</span></span>|  
|`([a-z]+`|<span data-ttu-id="89cf3-176">匹配一个或多个匹配项的任意字符在从 a 到 z。</span><span class="sxs-lookup"><span data-stu-id="89cf3-176">Match one or more occurrences of any character from a to z.</span></span> <span data-ttu-id="89cf3-177">比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="89cf3-177">The comparison is case-insensitive.</span></span>|  
|`(\d)*`|<span data-ttu-id="89cf3-178">匹配零个或多个十进制数字。</span><span class="sxs-lookup"><span data-stu-id="89cf3-178">Match zero or more decimal digits.</span></span> <span data-ttu-id="89cf3-179">单个匹配的数字是四个捕获组。</span><span class="sxs-lookup"><span data-stu-id="89cf3-179">A single matched digit is the fourth capturing group.</span></span>|  
|`([a-z]+(\d)*)`|<span data-ttu-id="89cf3-180">匹配一个或多个字母的字符从 a 到 z 跟零个、 一个或多个十进制数。</span><span class="sxs-lookup"><span data-stu-id="89cf3-180">Match one or more alphabetic characters from a to z followed by zero, one, or more decimal digits.</span></span> <span data-ttu-id="89cf3-181">这是第四个捕获组。</span><span class="sxs-lookup"><span data-stu-id="89cf3-181">This is the fourth capturing group.</span></span>|  
|`$`|<span data-ttu-id="89cf3-182">推断字符串的末尾匹配。</span><span class="sxs-lookup"><span data-stu-id="89cf3-182">Conclude the match at the end of the string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>