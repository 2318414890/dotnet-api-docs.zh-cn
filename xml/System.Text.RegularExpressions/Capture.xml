<Type Name="Capture" FullName="System.Text.RegularExpressions.Capture">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="09b082d3a1c891b9213c4f07c241d2934e1a1111" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39778266" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Capture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Capture extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.Capture" />
  <TypeSignature Language="VB.NET" Value="Public Class Capture" />
  <TypeSignature Language="C++ CLI" Value="public ref class Capture" />
  <TypeSignature Language="F#" Value="type Capture = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c1eef-101">表示来自单个成功子表达式捕获的结果。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c1eef-101">Represents the results from a single successful subexpression capture.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1eef-102">一个<xref:System.Text.RegularExpressions.Capture>对象是不可变，并且没有公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="c1eef-102">A <xref:System.Text.RegularExpressions.Capture> object is immutable and has no public constructor.</span></span> <span data-ttu-id="c1eef-103">通过返回实例<xref:System.Text.RegularExpressions.CaptureCollection>对象，该返回的对象`Match.Captures`和<xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="c1eef-103">Instances are returned through the <xref:System.Text.RegularExpressions.CaptureCollection> object, which is returned by the `Match.Captures` and <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="c1eef-104">但是，`Match.Captures`属性提供相同的匹配项有关的信息<xref:System.Text.RegularExpressions.Match>对象。</span><span class="sxs-lookup"><span data-stu-id="c1eef-104">However, the `Match.Captures` property provides information about the same match as the <xref:System.Text.RegularExpressions.Match> object.</span></span>  
  
 <span data-ttu-id="c1eef-105">如果不适用于捕获组<xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType>属性返回<xref:System.Text.RegularExpressions.CaptureCollection>与单个<xref:System.Text.RegularExpressions.Capture>提供相同的捕获有关的信息的对象<xref:System.Text.RegularExpressions.Group>对象。</span><span class="sxs-lookup"><span data-stu-id="c1eef-105">If you do not apply a  to a capturing group, the <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> property returns a <xref:System.Text.RegularExpressions.CaptureCollection> with a single <xref:System.Text.RegularExpressions.Capture> object that provides information about the same capture as the <xref:System.Text.RegularExpressions.Group> object.</span></span> <span data-ttu-id="c1eef-106">如果您对一个捕获组应用限定符`Group.Index`， `Group.Length`，并`Group.Value`属性提供仅有关最后捕获的组的信息，而<xref:System.Text.RegularExpressions.Capture>中的对象<xref:System.Text.RegularExpressions.CaptureCollection>提供所有信息捕获子表达式。</span><span class="sxs-lookup"><span data-stu-id="c1eef-106">If you do apply a quantifier to a capturing group, the `Group.Index`, `Group.Length`, and `Group.Value` properties provide information only about the last captured group, whereas the <xref:System.Text.RegularExpressions.Capture> objects in the <xref:System.Text.RegularExpressions.CaptureCollection> provide information about all subexpression captures.</span></span> <span data-ttu-id="c1eef-107">说明如示例所示。</span><span class="sxs-lookup"><span data-stu-id="c1eef-107">The example provides an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1eef-108">下面的示例定义正则表达式匹配包含除句点以外没有标点符号的句子 ("。")。</span><span class="sxs-lookup"><span data-stu-id="c1eef-108">The following example defines a regular expression that matches sentences that contain no punctuation except for a period (".").</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/vb/example1.vb#1)]  
  
 <span data-ttu-id="c1eef-109">正则表达式模式 `((\w+)[\s.])+` 的定义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="c1eef-109">The regular expression pattern `((\w+)[\s.])+` is defined as shown in the following table.</span></span> <span data-ttu-id="c1eef-110">请注意，在此正则表达式，限定符 （+） 应用于整个正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c1eef-110">Note that in this regular expression, a quantifier (+) is applied to the entire regular expression.</span></span>  
  
|<span data-ttu-id="c1eef-111">模式</span><span class="sxs-lookup"><span data-stu-id="c1eef-111">Pattern</span></span>|<span data-ttu-id="c1eef-112">描述</span><span class="sxs-lookup"><span data-stu-id="c1eef-112">Description</span></span>|  
|-------------|-----------------|  
|`(\w+)`|<span data-ttu-id="c1eef-113">匹配一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="c1eef-113">Match one or more word characters.</span></span> <span data-ttu-id="c1eef-114">这是第二个捕获组。</span><span class="sxs-lookup"><span data-stu-id="c1eef-114">This is the second capturing group.</span></span>|  
|`[\s.])`|<span data-ttu-id="c1eef-115">匹配空白字符或句点 ("。")。</span><span class="sxs-lookup"><span data-stu-id="c1eef-115">Match a white-space character or period (".").</span></span>|  
|`((\w+)[\s.])`|<span data-ttu-id="c1eef-116">匹配一个或多个单词字符后跟空白字符或句点 ("。")。</span><span class="sxs-lookup"><span data-stu-id="c1eef-116">Match one or more word characters followed by a white-space character or period (".").</span></span> <span data-ttu-id="c1eef-117">这是第一个捕获组。</span><span class="sxs-lookup"><span data-stu-id="c1eef-117">This is the first capturing group.</span></span>|  
|`((\w+)[\s.])+`|<span data-ttu-id="c1eef-118">匹配一个或多个单词字符或字符后跟空白字符或句点 ("。")。</span><span class="sxs-lookup"><span data-stu-id="c1eef-118">Match one or more occurrences of a word character or characters followed by a white-space character or period (".").</span></span>|  
  
 <span data-ttu-id="c1eef-119">在此示例中，输入的字符串包含两个句子。</span><span class="sxs-lookup"><span data-stu-id="c1eef-119">In this example, the input string consists of two sentences.</span></span> <span data-ttu-id="c1eef-120">如输出所示，第一个句子包含只有一个单词，因此<xref:System.Text.RegularExpressions.CaptureCollection>对象具有单个<xref:System.Text.RegularExpressions.Capture>对象，表示相同的捕获<xref:System.Text.RegularExpressions.Group>对象。</span><span class="sxs-lookup"><span data-stu-id="c1eef-120">As the output shows, the first sentence consists of only one word, so the <xref:System.Text.RegularExpressions.CaptureCollection> object has a single <xref:System.Text.RegularExpressions.Capture> object that represents the same capture as the <xref:System.Text.RegularExpressions.Group> object.</span></span> <span data-ttu-id="c1eef-121">第二个句子包含多个单词，因此<xref:System.Text.RegularExpressions.Group>对象只包含有关最后一个匹配的子表达式的信息。</span><span class="sxs-lookup"><span data-stu-id="c1eef-121">The second sentence consists of multiple words, so the <xref:System.Text.RegularExpressions.Group> objects only contain information about the last matched subexpression.</span></span> <span data-ttu-id="c1eef-122">组 1，表示第一次捕获，包含用于关闭周期的句子中最后一个单词。</span><span class="sxs-lookup"><span data-stu-id="c1eef-122">Group 1, which represents the first capture, contains the last word in the sentence that has a closing period.</span></span> <span data-ttu-id="c1eef-123">组 2，它表示第二个捕获，包含该句中最后一个单词。</span><span class="sxs-lookup"><span data-stu-id="c1eef-123">Group 2, which represents the second capture, contains the last word in the sentence.</span></span> <span data-ttu-id="c1eef-124">但是，<xref:System.Text.RegularExpressions.Capture>组中的对象<xref:System.Text.RegularExpressions.CaptureCollection>对象捕获每个的子表达式匹配项。</span><span class="sxs-lookup"><span data-stu-id="c1eef-124">However, the <xref:System.Text.RegularExpressions.Capture> objects in the group's <xref:System.Text.RegularExpressions.CaptureCollection> object capture each subexpression match.</span></span> <span data-ttu-id="c1eef-125"><xref:System.Text.RegularExpressions.Capture>的捕获的第一个捕获组的集合中的对象包含有关每个已捕获的单词以及空白字符或句号的信息。</span><span class="sxs-lookup"><span data-stu-id="c1eef-125">The <xref:System.Text.RegularExpressions.Capture> objects in the first capturing group's collection of captures contain information about each captured word and white-space character or period.</span></span> <span data-ttu-id="c1eef-126"><xref:System.Text.RegularExpressions.Capture>的捕获的第二个捕获组的集合中的对象包含有关每个已捕获的单词的信息。</span><span class="sxs-lookup"><span data-stu-id="c1eef-126">The <xref:System.Text.RegularExpressions.Capture> objects in the second capturing group's collection of captures contain information about each captured word.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.RegularExpressions.CaptureCollection" />
  </Docs>
  <Members>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Text.RegularExpressions.Capture.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c1eef-127">原始字符串中发现捕获的子字符串的第一个字符的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1eef-127">The position in the original string where the first character of the captured substring is found.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c1eef-128">原始字符串中发现捕获的子字符串的从零开始的起始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1eef-128">The zero-based starting position in the original string where the captured substring is found.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Text.RegularExpressions.Capture.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c1eef-129">获取捕获的子字符串的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1eef-129">Gets the length of the captured substring.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c1eef-130">捕获的子字符串的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1eef-130">The length of the captured substring.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Capture.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="capture.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c1eef-131">通过调用 <see cref="P:System.Text.RegularExpressions.Capture.Value" /> 属性，从输入的字符串中检索捕获的子字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1eef-131">Retrieves the captured substring from the input string by calling the <see cref="P:System.Text.RegularExpressions.Capture.Value" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1eef-132">通过匹配捕获的子字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1eef-132">The substring that was captured by the match.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1eef-133">`ToString` 是实际的内部调用到<xref:System.Text.RegularExpressions.Capture.Value%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="c1eef-133">`ToString` is actually an internal call to the <xref:System.Text.RegularExpressions.Capture.Value%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Text.RegularExpressions.Capture.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c1eef-134">获取输入的字符串中的捕获的子字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1eef-134">Gets the captured substring from the input string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c1eef-135">通过匹配捕获的子字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1eef-135">The substring that is captured by the match.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1eef-136">如果调用<xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType>或<xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType>方法无法找到匹配项，则返回的值`Match.Value`属性是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c1eef-136">If a call to the <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> or <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> method fails to find a match, the value of the returned `Match.Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c1eef-137">如果正则表达式引擎不能与捕获组匹配。</span><span class="sxs-lookup"><span data-stu-id="c1eef-137">If the regular expression engine is unable to match a capturing group.</span></span> <span data-ttu-id="c1eef-138">所返回的值`Group.Value`属性是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c1eef-138">the value of the returned `Group.Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c1eef-139">请参阅说明第二个示例。</span><span class="sxs-lookup"><span data-stu-id="c1eef-139">See the second example for an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1eef-140">下面的示例定义正则表达式匹配包含除句点以外没有标点符号的句子 ("。")。</span><span class="sxs-lookup"><span data-stu-id="c1eef-140">The following example defines a regular expression that matches sentences that contain no punctuation except for a period (".").</span></span> <span data-ttu-id="c1eef-141">`Match.Value`属性将显示结果字符串，其中包括匹配句子中，每个匹配项。</span><span class="sxs-lookup"><span data-stu-id="c1eef-141">The `Match.Value` property displays the result string, which consists of a matched sentence, for each match.</span></span> <span data-ttu-id="c1eef-142">`Group.Value`属性将显示每个捕获组的结果字符串; 它包含由该捕获组捕获的最后一个字符串。</span><span class="sxs-lookup"><span data-stu-id="c1eef-142">The `Group.Value` property displays the result string for each capturing group; it consists of the last string captured by that capturing group.</span></span> <span data-ttu-id="c1eef-143"><xref:System.Text.RegularExpressions.Capture.Value%2A?displayProperty=nameWithType>属性将显示每个捕获的结果字符串。</span><span class="sxs-lookup"><span data-stu-id="c1eef-143">The <xref:System.Text.RegularExpressions.Capture.Value%2A?displayProperty=nameWithType> property displays the result string for each capture.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/vb/example1.vb#1)]  
  
 <span data-ttu-id="c1eef-144">正则表达式模式 `((\w+)[\s.])+` 的定义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="c1eef-144">The regular expression pattern `((\w+)[\s.])+` is defined as shown in the following table.</span></span> <span data-ttu-id="c1eef-145">请注意，在此正则表达式，限定符 （+） 应用于整个正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c1eef-145">Note that in this regular expression, a quantifier (+) is applied to the entire regular expression.</span></span>  
  
|<span data-ttu-id="c1eef-146">模式</span><span class="sxs-lookup"><span data-stu-id="c1eef-146">Pattern</span></span>|<span data-ttu-id="c1eef-147">描述</span><span class="sxs-lookup"><span data-stu-id="c1eef-147">Description</span></span>|  
|-------------|-----------------|  
|`(\w+)`|<span data-ttu-id="c1eef-148">匹配一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="c1eef-148">Match one or more word characters.</span></span> <span data-ttu-id="c1eef-149">这是第二个捕获组。</span><span class="sxs-lookup"><span data-stu-id="c1eef-149">This is the second capturing group.</span></span>|  
|`[\s.])`|<span data-ttu-id="c1eef-150">匹配空白字符或句点 ("。")。</span><span class="sxs-lookup"><span data-stu-id="c1eef-150">Match a white-space character or period (".").</span></span>|  
|`((\w+)[\s.])`|<span data-ttu-id="c1eef-151">匹配一个或多个单词字符后跟空白字符或句点 ("。")。</span><span class="sxs-lookup"><span data-stu-id="c1eef-151">Match one or more word characters followed by a white-space character or period (".").</span></span> <span data-ttu-id="c1eef-152">这是第一个捕获组。</span><span class="sxs-lookup"><span data-stu-id="c1eef-152">This is the first capturing group.</span></span>|  
|`((\w+)[\s.])+`|<span data-ttu-id="c1eef-153">匹配一个或多个单词字符或字符后跟空白字符或句点 ("。")。</span><span class="sxs-lookup"><span data-stu-id="c1eef-153">Match one or more occurrences of a word character or characters followed by a white-space character or period (".").</span></span>|  
  
 <span data-ttu-id="c1eef-154">在此示例中，输入的字符串包含两个句子。</span><span class="sxs-lookup"><span data-stu-id="c1eef-154">In this example, the input string consists of two sentences.</span></span> <span data-ttu-id="c1eef-155">如输出所示，第一个句子包含只有一个单词，因此<xref:System.Text.RegularExpressions.CaptureCollection>对象具有单个<xref:System.Text.RegularExpressions.Capture>对象，表示相同的捕获<xref:System.Text.RegularExpressions.Group>对象。</span><span class="sxs-lookup"><span data-stu-id="c1eef-155">As the output shows, the first sentence consists of only one word, so the <xref:System.Text.RegularExpressions.CaptureCollection> object has a single <xref:System.Text.RegularExpressions.Capture> object that represents the same capture as the <xref:System.Text.RegularExpressions.Group> object.</span></span> <span data-ttu-id="c1eef-156">第二个句子包含多个单词，因此<xref:System.Text.RegularExpressions.Group>对象只包含有关最后一个匹配的子表达式的信息。</span><span class="sxs-lookup"><span data-stu-id="c1eef-156">The second sentence consists of multiple words, so the <xref:System.Text.RegularExpressions.Group> objects only contain information about the last matched subexpression.</span></span> <span data-ttu-id="c1eef-157">组 1，表示第一次捕获，包含用于关闭周期的句子中最后一个单词。</span><span class="sxs-lookup"><span data-stu-id="c1eef-157">Group 1, which represents the first capture, contains the last word in the sentence that has a closing period.</span></span> <span data-ttu-id="c1eef-158">组 2，它表示第二个捕获，包含该句中最后一个单词。</span><span class="sxs-lookup"><span data-stu-id="c1eef-158">Group 2, which represents the second capture, contains the last word in the sentence.</span></span> <span data-ttu-id="c1eef-159">但是，<xref:System.Text.RegularExpressions.Capture>组中的对象<xref:System.Text.RegularExpressions.CaptureCollection>对象捕获每个的子表达式匹配项。</span><span class="sxs-lookup"><span data-stu-id="c1eef-159">However, the <xref:System.Text.RegularExpressions.Capture> objects in the group's <xref:System.Text.RegularExpressions.CaptureCollection> object capture each subexpression match.</span></span> <span data-ttu-id="c1eef-160"><xref:System.Text.RegularExpressions.Capture>的捕获的第一个捕获组的集合中的对象包含有关每个已捕获的单词以及空白字符或句号的信息。</span><span class="sxs-lookup"><span data-stu-id="c1eef-160">The <xref:System.Text.RegularExpressions.Capture> objects in the first capturing group's collection of captures contain information about each captured word and white-space character or period.</span></span> <span data-ttu-id="c1eef-161"><xref:System.Text.RegularExpressions.Capture>的捕获的第二个捕获组的集合中的对象包含有关每个已捕获的单词的信息。</span><span class="sxs-lookup"><span data-stu-id="c1eef-161">The <xref:System.Text.RegularExpressions.Capture> objects in the second capturing group's collection of captures contain information about each captured word.</span></span>  
  
 <span data-ttu-id="c1eef-162">下面的示例使用的正则表达式模式`^([a-z]+)(\d+)*\.([a-z]+(\d)*)$`，以匹配由句点分隔的两个部分组成的产品号。</span><span class="sxs-lookup"><span data-stu-id="c1eef-162">The following example uses a regular expression pattern, `^([a-z]+)(\d+)*\.([a-z]+(\d)*)$`, to match a product number that consists of two parts separated by a period.</span></span> <span data-ttu-id="c1eef-163">这两个部分包含字母字符后跟可选的数字。</span><span class="sxs-lookup"><span data-stu-id="c1eef-163">Both parts consist of alphabetic characters followed by optional numbers.</span></span> <span data-ttu-id="c1eef-164">因为第一个输入的字符串与模式，所返回的值不匹配<xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType>对象的`Value`属性是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c1eef-164">Because the first input string does not match the pattern, the value of the returned <xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType> object's `Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c1eef-165">同样，当正则表达式模式不能与捕获组，相应的值匹配时<xref:System.Text.RegularExpressions.Group>对象的`Value`属性是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c1eef-165">Similarly, when the regular expression pattern is unable to match a capturing group, the value of the corresponding <xref:System.Text.RegularExpressions.Group> object's `Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Value#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.value/cs/value1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Value#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.value/vb/value1.vb#1)]  
  
 <span data-ttu-id="c1eef-166">正则表达式模式的定义如下表所示：</span><span class="sxs-lookup"><span data-stu-id="c1eef-166">The regular expression pattern is defined as shown in the following table:</span></span>  
  
|<span data-ttu-id="c1eef-167">模式</span><span class="sxs-lookup"><span data-stu-id="c1eef-167">Pattern</span></span>|<span data-ttu-id="c1eef-168">描述</span><span class="sxs-lookup"><span data-stu-id="c1eef-168">Description</span></span>|  
|-------------|-----------------|  
|`^`|<span data-ttu-id="c1eef-169">从字符串开头开始匹配。</span><span class="sxs-lookup"><span data-stu-id="c1eef-169">Begin the match at the beginning of the string.</span></span>|  
|`([a-z]+)`|<span data-ttu-id="c1eef-170">匹配一个或多个匹配项的从任意字符到 z。</span><span class="sxs-lookup"><span data-stu-id="c1eef-170">Match one or more occurrences of any character from a to z.</span></span> <span data-ttu-id="c1eef-171">由于传递正则表达式引擎<xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType>选项时，此比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="c1eef-171">Because the regular expression engine is passed the <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType> option, this comparison is case-insensitive.</span></span> <span data-ttu-id="c1eef-172">这是第一个捕获组。</span><span class="sxs-lookup"><span data-stu-id="c1eef-172">This is the first capturing group.</span></span>|  
|`(\d+)?`|<span data-ttu-id="c1eef-173">匹配零个或一个匹配项的一个或多个十进制数字。</span><span class="sxs-lookup"><span data-stu-id="c1eef-173">Match zero or one occurrence of one or more decimal digits.</span></span> <span data-ttu-id="c1eef-174">这是第二个捕获组。</span><span class="sxs-lookup"><span data-stu-id="c1eef-174">This is the second capturing group.</span></span>|  
|`\.`|<span data-ttu-id="c1eef-175">匹配文本句点字符。</span><span class="sxs-lookup"><span data-stu-id="c1eef-175">Match a literal period character.</span></span>|  
|`([a-z]+`|<span data-ttu-id="c1eef-176">匹配一个或多个匹配项的从任意字符到 z。</span><span class="sxs-lookup"><span data-stu-id="c1eef-176">Match one or more occurrences of any character from a to z.</span></span> <span data-ttu-id="c1eef-177">比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="c1eef-177">The comparison is case-insensitive.</span></span>|  
|`(\d)*`|<span data-ttu-id="c1eef-178">匹配零个或多个十进制数字。</span><span class="sxs-lookup"><span data-stu-id="c1eef-178">Match zero or more decimal digits.</span></span> <span data-ttu-id="c1eef-179">匹配一位数是第四个捕获组。</span><span class="sxs-lookup"><span data-stu-id="c1eef-179">A single matched digit is the fourth capturing group.</span></span>|  
|`([a-z]+(\d)*)`|<span data-ttu-id="c1eef-180">匹配一个或多个字母字符到 z 后跟零个、 一个或多个十进制数。</span><span class="sxs-lookup"><span data-stu-id="c1eef-180">Match one or more alphabetic characters from a to z followed by zero, one, or more decimal digits.</span></span> <span data-ttu-id="c1eef-181">这是第四个捕获组。</span><span class="sxs-lookup"><span data-stu-id="c1eef-181">This is the fourth capturing group.</span></span>|  
|`$`|<span data-ttu-id="c1eef-182">得出结论： 在字符串的末尾匹配。</span><span class="sxs-lookup"><span data-stu-id="c1eef-182">Conclude the match at the end of the string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>