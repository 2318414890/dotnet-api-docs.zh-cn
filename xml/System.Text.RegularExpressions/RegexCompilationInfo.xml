<Type Name="RegexCompilationInfo" FullName="System.Text.RegularExpressions.RegexCompilationInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="731a068feb7a24b5a370b0ee36313a7a143e71c7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RegexCompilationInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RegexCompilationInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.RegexCompilationInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class RegexCompilationInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegexCompilationInfo" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="bea2a-101">提供有关使用正则表达式将正则表达式编译为独立程序集的信息。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bea2a-101">Provides information about a regular expression that is used to compile a regular expression to a stand-alone assembly.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bea2a-102">数组<xref:System.Text.RegularExpressions.RegexCompilationInfo>对象传递给<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>方法以提供有关要包括在程序集中的每个正则表达式的信息。</span><span class="sxs-lookup"><span data-stu-id="bea2a-102">An array of <xref:System.Text.RegularExpressions.RegexCompilationInfo> objects is passed to the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method to provide information about each regular expression to be included in the assembly.</span></span> <span data-ttu-id="bea2a-103">包含在程序集中每个编译正则表达式表示为从派生的类<xref:System.Text.RegularExpressions.Regex>。</span><span class="sxs-lookup"><span data-stu-id="bea2a-103">Each compiled regular expression that is included in the assembly is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>.</span></span> <span data-ttu-id="bea2a-104">属性<xref:System.Text.RegularExpressions.RegexCompilationInfo>类型定义正则表达式的类名、 其完全限定的名称 （即，其命名空间和类型名称），其正则表达式模式、 任何其他选项 （如是否正则表达式不区分大小写），并指定正则表达式引擎搜索匹配项的多长时间的超时间隔。</span><span class="sxs-lookup"><span data-stu-id="bea2a-104">The properties of the <xref:System.Text.RegularExpressions.RegexCompilationInfo> type define the regular expression's class name, its fully qualified name (that is, its namespace and its type name), its regular expression pattern, any additional options (such as whether the regular expression is case-insensitive), and a time-out interval that specifies how long the regular expression engine should search for a match.</span></span>  
  
 <span data-ttu-id="bea2a-105">可以实例化<xref:System.Text.RegularExpressions.RegexCompilationInfo>通过调用其重载的类构造函数的对象。</span><span class="sxs-lookup"><span data-stu-id="bea2a-105">You can instantiate a <xref:System.Text.RegularExpressions.RegexCompilationInfo> object by calling its overloaded class constructor.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bea2a-106">初始化 <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-106">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String, options As RegexOptions, name As String, fullnamespace As String, ispublic As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegexCompilationInfo(System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, System::String ^ name, System::String ^ fullnamespace, bool ispublic);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fullnamespace" Type="System.String" />
        <Parameter Name="ispublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pattern">
          <span data-ttu-id="bea2a-107">要编译的正则表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-107">The regular expression to compile.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="bea2a-108">编译正则表达式时使用的正则表达式选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-108">The regular expression options to use when compiling the regular expression.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="bea2a-109">表示已编译的正则表达式的类型名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-109">The name of the type that represents the compiled regular expression.</span>
          </span>
        </param>
        <param name="fullnamespace">
          <span data-ttu-id="bea2a-110">新类型所属的命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-110">The namespace to which the new type belongs.</span>
          </span>
        </param>
        <param name="ispublic">
          <span data-ttu-id="bea2a-111">若要使所编译的正则表达式对公共可见，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-111">
              <see langword="true" /> to make the compiled regular expression publicly visible; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bea2a-112">初始化 <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> 类的新实例，该类包含有关要在程序集内包括的正则表达式的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-112">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> class that contains information about a regular expression to be included in an assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bea2a-113">每个参数的<xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>构造函数直接对应的属性<xref:System.Text.RegularExpressions.RegexCompilationInfo>类。</span><span class="sxs-lookup"><span data-stu-id="bea2a-113">Each parameter of the <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> constructor directly corresponds to a property of the <xref:System.Text.RegularExpressions.RegexCompilationInfo> class.</span></span> <span data-ttu-id="bea2a-114">因为所有的属性是读/写，也可以直接分配它们的值。</span><span class="sxs-lookup"><span data-stu-id="bea2a-114">Because all properties are read/write, their values can also be assigned directly.</span></span>  
  
 <span data-ttu-id="bea2a-115"><xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>方法将生成该程序集包含已编译的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bea2a-115">The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions.</span></span> <span data-ttu-id="bea2a-116">因此，不应指定<xref:System.Text.RegularExpressions.RegexOptions.Compiled>为的值之一`options`。</span><span class="sxs-lookup"><span data-stu-id="bea2a-116">Therefore, you should not specify <xref:System.Text.RegularExpressions.RegexOptions.Compiled> as one of the values of `options`.</span></span>  
  
 <span data-ttu-id="bea2a-117">如果`ispublic`是`true`，已编译的正则表达式类提供公共可访问性。</span><span class="sxs-lookup"><span data-stu-id="bea2a-117">If `ispublic` is `true`, the compiled regular expression class is given public accessibility.</span></span> <span data-ttu-id="bea2a-118">也就是说，它可以执行的任何程序集中的代码中实例化。</span><span class="sxs-lookup"><span data-stu-id="bea2a-118">That is, it can be instantiated from code that executes in any assembly.</span></span> <span data-ttu-id="bea2a-119">如果`ispublic`是`false`，给定的已编译的正则表达式类`internal`（在 C# 中) 或`Friend`（在 Visual Basic) 可访问性。</span><span class="sxs-lookup"><span data-stu-id="bea2a-119">If `ispublic` is `false`, the compiled regular expression class is given `internal` (in C#) or `Friend` (in Visual Basic) accessibility.</span></span> <span data-ttu-id="bea2a-120">也就是说，它可以只能从与正则表达式类相同的程序集中执行的代码实例化。</span><span class="sxs-lookup"><span data-stu-id="bea2a-120">That is, it can be instantiated only from code that executes in the same assembly as the regular expression class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bea2a-121">下面的示例创建并在两个步骤中使用已编译的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bea2a-121">The following example creates and uses a compiled regular expression in two steps.</span></span>  
  
 <span data-ttu-id="bea2a-122">在第一个步骤中，编译并执行下面的代码示例。</span><span class="sxs-lookup"><span data-stu-id="bea2a-122">In the first step, compile and execute the following code example.</span></span> <span data-ttu-id="bea2a-123"><xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%2A>构造函数中的代码示例定义已编译的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bea2a-123">The <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%2A> constructor in the code example defines a compiled regular expression.</span></span> <span data-ttu-id="bea2a-124">正在执行代码的结果是名为 FishRegex.dll 包含名为的已编译的正则表达式类型的程序集`FishRegex`。</span><span class="sxs-lookup"><span data-stu-id="bea2a-124">The result of executing the code is an assembly named FishRegex.dll that contains a compiled regular expression type named `FishRegex`.</span></span>  
  
 [!code-csharp[sys.txt.rgxCompInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.rgxCompInfo/cs/genFishRegex.cs#1)]
 [!code-vb[sys.txt.rgxCompInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.rgxCompInfo/vb/genFishRegex.vb#1)]  
  
 <span data-ttu-id="bea2a-125">在第二个步骤中，编译下面的代码示例使用 FishRegex.dll，对的引用，然后运行生成的可执行文件。</span><span class="sxs-lookup"><span data-stu-id="bea2a-125">In the second step, compile the following code example using a reference to FishRegex.dll, and then run the resulting executable file.</span></span> <span data-ttu-id="bea2a-126">按使用的可执行文件匹配的目标字符串`FishRegex`键入，并在目标字符串中显示匹配、 组、 捕获组和的匹配项的索引位置。</span><span class="sxs-lookup"><span data-stu-id="bea2a-126">The executable file matches a target string by using the `FishRegex` type, and displays the match, group, capture group, and index position of the matches in the target string.</span></span>  
  
 [!code-csharp[sys.txt.rgxCompInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.rgxCompInfo/cs/useFishRegex.cs#2)]
 [!code-vb[sys.txt.rgxCompInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.rgxCompInfo/vb/useFishRegex.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bea2a-127">
            <paramref name="name" /> 为 <see cref="F:System.String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-127">
              <paramref name="name" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bea2a-128">
            <paramref name="pattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-128">
              <paramref name="pattern" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="bea2a-129">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-129">-or-</span>
          </span>
          <span data-ttu-id="bea2a-130">
            <paramref name="name" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-130">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="bea2a-131">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-131">-or-</span>
          </span>
          <span data-ttu-id="bea2a-132">
            <paramref name="fullnamespace" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-132">
              <paramref name="fullnamespace" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="bea2a-133">此构造函数创建已编译的正则表达式使用在其中创建的应用程序域的默认超时值。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bea2a-133">This constructor creates a compiled regular expression that uses the default time-out value of the application domain in which it is created.</span>
            </span>
            <span data-ttu-id="bea2a-134">如果应用程序域定义了超时值，已编译的正则表达式使用的值<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，这将阻止从超时的模式匹配操作。创建已编译的正则表达式的建议构造函数是<see cref="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />，可以在其中你设置的超时间隔。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bea2a-134">If a time-out value is defined for the application domain, the compiled regular expression uses the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents a pattern-matching operation from timing out. The recommended constructor for creating a compiled regular expression is <see cref="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />, which lets you set the time-out interval.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String, options As RegexOptions, name As String, fullnamespace As String, ispublic As Boolean, matchTimeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegexCompilationInfo(System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, System::String ^ name, System::String ^ fullnamespace, bool ispublic, TimeSpan matchTimeout);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fullnamespace" Type="System.String" />
        <Parameter Name="ispublic" Type="System.Boolean" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="pattern">
          <span data-ttu-id="bea2a-135">要编译的正则表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-135">The regular expression to compile.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="bea2a-136">编译正则表达式时使用的正则表达式选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-136">The regular expression options to use when compiling the regular expression.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="bea2a-137">表示已编译的正则表达式的类型名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-137">The name of the type that represents the compiled regular expression.</span>
          </span>
        </param>
        <param name="fullnamespace">
          <span data-ttu-id="bea2a-138">新类型所属的命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-138">The namespace to which the new type belongs.</span>
          </span>
        </param>
        <param name="ispublic">
          <span data-ttu-id="bea2a-139">若要使所编译的正则表达式对公共可见，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-139">
              <see langword="true" /> to make the compiled regular expression publicly visible; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="matchTimeout">
          <span data-ttu-id="bea2a-140">正则表达式的默认超时间隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-140">The default time-out interval for the regular expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bea2a-141">初始化 <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> 类的新实例，该类包含有关要在程序集内包括的指定的超时值的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-141">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> class that contains information about a regular expression with a specified time-out value to be included in an assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bea2a-142">每个参数的<xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>构造函数直接对应的属性<xref:System.Text.RegularExpressions.RegexCompilationInfo>类。</span><span class="sxs-lookup"><span data-stu-id="bea2a-142">Each parameter of the <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> constructor directly corresponds to a property of the <xref:System.Text.RegularExpressions.RegexCompilationInfo> class.</span></span> <span data-ttu-id="bea2a-143">因为所有的属性是读/写，也可以直接分配它们的值。</span><span class="sxs-lookup"><span data-stu-id="bea2a-143">Because all properties are read/write, their values can also be assigned directly.</span></span>  
  
 <span data-ttu-id="bea2a-144"><xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>方法将生成该程序集包含已编译的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bea2a-144">The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions.</span></span> <span data-ttu-id="bea2a-145">因此，不应指定<xref:System.Text.RegularExpressions.RegexOptions.Compiled>为的值之一`options`。</span><span class="sxs-lookup"><span data-stu-id="bea2a-145">Therefore, you should not specify <xref:System.Text.RegularExpressions.RegexOptions.Compiled> as one of the values of `options`.</span></span>  
  
 <span data-ttu-id="bea2a-146">如果`ispublic`是`true`，已编译的正则表达式类提供公共可访问性。</span><span class="sxs-lookup"><span data-stu-id="bea2a-146">If `ispublic` is `true`, the compiled regular expression class is given public accessibility.</span></span> <span data-ttu-id="bea2a-147">也就是说，它可以执行的任何程序集中的代码中实例化。</span><span class="sxs-lookup"><span data-stu-id="bea2a-147">That is, it can be instantiated from code that executes in any assembly.</span></span> <span data-ttu-id="bea2a-148">如果`ispublic`是`false`，给定的已编译的正则表达式类`internal`（在 C# 中) 或`Friend`（在 Visual Basic) 可访问性。</span><span class="sxs-lookup"><span data-stu-id="bea2a-148">If `ispublic` is `false`, the compiled regular expression class is given `internal` (in C#) or `Friend` (in Visual Basic) accessibility.</span></span> <span data-ttu-id="bea2a-149">也就是说，它可以只能从与正则表达式类相同的程序集中执行的代码实例化。</span><span class="sxs-lookup"><span data-stu-id="bea2a-149">That is, it can be instantiated only from code that executes in the same assembly as the regular expression class.</span></span>  
  
 <span data-ttu-id="bea2a-150">`matchTimeout`参数定义已编译的正则表达式的默认超时间隔。</span><span class="sxs-lookup"><span data-stu-id="bea2a-150">The `matchTimeout` parameter defines the default time-out interval for the compiled regular expression.</span></span> <span data-ttu-id="bea2a-151">此值表示的近似之前在操作超时时并且正则表达式引擎将引发，已编译的正则表达式对象将执行单个匹配操作的时间量<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>在其下一步的计时检查过程中的异常.</span><span class="sxs-lookup"><span data-stu-id="bea2a-151">This value represents the approximate amount of time that a compiled regular expression object will execute a single matching operation before the operation times out and the regular expression engine throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception during its next timing check.</span></span> <span data-ttu-id="bea2a-152">超时值有关的其他信息，请参阅<xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bea2a-152">For additional information about the time-out value, see the <xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="bea2a-153">我们建议你始终设置已编译的正则表达式的默认超时值。</span><span class="sxs-lookup"><span data-stu-id="bea2a-153">We recommend that you always set a default time-out value for a compiled regular expression.</span></span> <span data-ttu-id="bea2a-154">正则表达式库的使用者可以在通过传递的情况下重写该超时值<xref:System.TimeSpan>值，该值表示此构造函数重载的新的超时间隔。</span><span class="sxs-lookup"><span data-stu-id="bea2a-154">Consumers of your regular expression library can override that time-out value by passing a <xref:System.TimeSpan> value that represents the new time-out interval to this constructor overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bea2a-155">下面的示例定义名为单个编译的正则表达式`DuplicateChars`标识的输入字符串中的相同字符的两个或多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="bea2a-155">The following example defines a single compiled regular expression named `DuplicateChars` that identifies two or more occurrences of the same character in an input string.</span></span> <span data-ttu-id="bea2a-156">已编译的正则表达式具有默认超时值为 2 秒。</span><span class="sxs-lookup"><span data-stu-id="bea2a-156">The compiled regular expression has a default time-out of 2 seconds.</span></span> <span data-ttu-id="bea2a-157">执行该示例时，它会创建一个名为包含已编译的正则表达式的 RegexLib.dll 类库。</span><span class="sxs-lookup"><span data-stu-id="bea2a-157">When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1.vb#1)]  
  
 <span data-ttu-id="bea2a-158">正则表达式模式 `(\w)\1+` 的定义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="bea2a-158">The regular expression pattern `(\w)\1+` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="bea2a-159">模式</span><span class="sxs-lookup"><span data-stu-id="bea2a-159">Pattern</span></span>|<span data-ttu-id="bea2a-160">描述</span><span class="sxs-lookup"><span data-stu-id="bea2a-160">Description</span></span>|  
|-------------|-----------------|  
|`(\w)`|<span data-ttu-id="bea2a-161">匹配任何单词字符，并将其分配给第一个捕获组。</span><span class="sxs-lookup"><span data-stu-id="bea2a-161">Match any word character and assign it to the first capturing group.</span></span>|  
|`\1+`|<span data-ttu-id="bea2a-162">匹配一个或多个匹配项的值的第一个捕获组。</span><span class="sxs-lookup"><span data-stu-id="bea2a-162">Match one or more occurrences of the value of the first captured group.</span></span>|  
  
 <span data-ttu-id="bea2a-163">下面的示例使用`DuplicatedChars`正则表达式，以标识字符串数组中的重复字符。</span><span class="sxs-lookup"><span data-stu-id="bea2a-163">The following example uses the `DuplicatedChars` regular expression to identify duplicate characters in a string array.</span></span> <span data-ttu-id="bea2a-164">当它调用`DuplicatedChars`构造函数，它将更改为.5 秒超时间隔。</span><span class="sxs-lookup"><span data-stu-id="bea2a-164">When it calls the `DuplicatedChars` constructor, it changes the time-out interval to .5 seconds.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1a.cs#2)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1a.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bea2a-165">
            <paramref name="name" /> 为 <see cref="F:System.String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-165">
              <paramref name="name" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bea2a-166">
            <paramref name="pattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-166">
              <paramref name="pattern" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="bea2a-167">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-167">-or-</span>
          </span>
          <span data-ttu-id="bea2a-168">
            <paramref name="name" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-168">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="bea2a-169">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-169">-or-</span>
          </span>
          <span data-ttu-id="bea2a-170">
            <paramref name="fullnamespace" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-170">
              <paramref name="fullnamespace" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bea2a-171">
            <paramref name="matchTimeout" /> 为负、零或大于 24 天左右。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-171">
              <paramref name="matchTimeout" /> is negative, zero, or greater than approximately 24 days.</span>
          </span>
        </exception>
        <altmember cref="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout" />
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bea2a-172">获取或设置一个值，该值指示已编译的正则表达式是否具有公共可见性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-172">Gets or sets a value that indicates whether the compiled regular expression has public visibility.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bea2a-173">如果正则表达式具有公共可见性，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-173">
              <see langword="true" /> if the regular expression has public visibility; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bea2a-174">如果<xref:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic%2A>属性是`false`，由当前实例定义的正则表达式类可以仅通过中包含的类的程序集执行的代码实例化。</span><span class="sxs-lookup"><span data-stu-id="bea2a-174">If the <xref:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic%2A> property is `false`, the regular expression class defined by the current instance can be instantiated only by code that is executing in the assembly that contains the class.</span></span> <span data-ttu-id="bea2a-175">但是，因为<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=nameWithType>方法生成包含仅已编译的正则表达式，并且不允许其他代码要添加的程序集时，通常没有理由将此属性的值分配`false`。</span><span class="sxs-lookup"><span data-stu-id="bea2a-175">However, because the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=nameWithType> method generates an assembly that contains only compiled regular expressions and does not allow additional code to be added, there is generally no reason to assign this property a value of `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan MatchTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MatchTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MatchTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bea2a-176">获取或设置正则表达式的默认超时间隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-176">Gets or sets the regular expression's default time-out interval.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bea2a-177">在样式对的操作可经过的默认最长时间间隔时间，在 <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> 引发之前或 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> ，如果挂起被禁用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-177">The default maximum time interval that can elapse in a pattern-matching operation before a <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> is thrown, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> if time-outs are disabled.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bea2a-178"><xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A>属性定义已编译的正则表达式的默认超时时间间隔。</span><span class="sxs-lookup"><span data-stu-id="bea2a-178">The <xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A> property defines the default time-out interval for the compiled regular expression.</span></span> <span data-ttu-id="bea2a-179">此值表示的近似之前在操作超时时并且正则表达式引擎将引发，已编译的正则表达式将执行单个匹配操作的时间量<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>在其下一步的计时检查过程中的异常。</span><span class="sxs-lookup"><span data-stu-id="bea2a-179">This value represents the approximate amount of time that a compiled regular expression will execute a single matching operation before the operation times out and the regular expression engine throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception during its next timing check.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="bea2a-180">我们建议你始终设置已编译的正则表达式的默认超时值。</span><span class="sxs-lookup"><span data-stu-id="bea2a-180">We recommend that you always set a default time-out value for a compiled regular expression.</span></span> <span data-ttu-id="bea2a-181">正则表达式库的使用者可以在通过传递的情况下重写该超时值<xref:System.TimeSpan>值，该值表示已编译的正则表达式的类构造函数的新的超时间隔。</span><span class="sxs-lookup"><span data-stu-id="bea2a-181">Consumers of your regular expression library can override that time-out value by passing a <xref:System.TimeSpan> value that represents the new time-out interval to the compiled regular expression's class constructor.</span></span>  
  
 <span data-ttu-id="bea2a-182">你可以分配到一个默认超时值<xref:System.Text.RegularExpressions.RegexCompilationInfo>处于以下任一对象：</span><span class="sxs-lookup"><span data-stu-id="bea2a-182">You can assign a default time-out value to a <xref:System.Text.RegularExpressions.RegexCompilationInfo> object in any of the following ways:</span></span>  
  
-   <span data-ttu-id="bea2a-183">通过调用<xref:System.AppDomain.SetData%2A?displayProperty=nameWithType>方法并提供的字符串表示形式<xref:System.TimeSpan>"REGEX_DEFAULT_MATCH_TIMEOUT"属性值。</span><span class="sxs-lookup"><span data-stu-id="bea2a-183">By calling the <xref:System.AppDomain.SetData%2A?displayProperty=nameWithType> method and providing the string representation of a <xref:System.TimeSpan> value for the "REGEX_DEFAULT_MATCH_TIMEOUT" property.</span></span>  
  
-   <span data-ttu-id="bea2a-184">通过调用<xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29>构造函数和提供的值`matchTimeout`参数。</span><span class="sxs-lookup"><span data-stu-id="bea2a-184">By calling the <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29> constructor and providing a value for the `matchTimeout` parameter.</span></span>  
  
-   <span data-ttu-id="bea2a-185">通过设置此属性的值。</span><span class="sxs-lookup"><span data-stu-id="bea2a-185">By setting the value of this property.</span></span>  
  
 <span data-ttu-id="bea2a-186">若要设置的合理的超时间隔，请考虑以下因素：</span><span class="sxs-lookup"><span data-stu-id="bea2a-186">To set a reasonable time-out interval, consider the following factors:</span></span>  
  
-   <span data-ttu-id="bea2a-187">长度和复杂性的正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="bea2a-187">The length and complexity of the regular expression pattern.</span></span> <span data-ttu-id="bea2a-188">长而复杂的正则表达式需要比更简短和简单的更多时间。</span><span class="sxs-lookup"><span data-stu-id="bea2a-188">Longer and more complex regular expressions require more time than shorter and simpler ones.</span></span>  
  
-   <span data-ttu-id="bea2a-189">预期的机负载。</span><span class="sxs-lookup"><span data-stu-id="bea2a-189">The expected machine load.</span></span> <span data-ttu-id="bea2a-190">处理在具有高的 CPU 和内存利用率系统上花费更多时间。</span><span class="sxs-lookup"><span data-stu-id="bea2a-190">Processing takes more time on systems with high CPU and memory utilization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bea2a-191">下面的示例定义名为单个编译的正则表达式`DuplicateChars`标识的输入字符串中的相同字符的两个或多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="bea2a-191">The following example defines a single compiled regular expression named `DuplicateChars` that identifies two or more occurrences of the same character in an input string.</span></span> <span data-ttu-id="bea2a-192">已编译的正则表达式具有默认超时值为 2 秒。</span><span class="sxs-lookup"><span data-stu-id="bea2a-192">The compiled regular expression has a default time-out of 2 seconds.</span></span> <span data-ttu-id="bea2a-193">执行该示例时，它会创建一个名为包含已编译的正则表达式的 RegexLib.dll 类库。</span><span class="sxs-lookup"><span data-stu-id="bea2a-193">When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1.vb#1)]  
  
 <span data-ttu-id="bea2a-194">正则表达式模式 `(\w)\1+` 的定义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="bea2a-194">The regular expression pattern `(\w)\1+` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="bea2a-195">模式</span><span class="sxs-lookup"><span data-stu-id="bea2a-195">Pattern</span></span>|<span data-ttu-id="bea2a-196">描述</span><span class="sxs-lookup"><span data-stu-id="bea2a-196">Description</span></span>|  
|-------------|-----------------|  
|`(\w)`|<span data-ttu-id="bea2a-197">匹配任何单词字符，并将其分配给第一个捕获组。</span><span class="sxs-lookup"><span data-stu-id="bea2a-197">Match any word character and assign it to the first capturing group.</span></span>|  
|`\1+`|<span data-ttu-id="bea2a-198">匹配一个或多个匹配项的值的第一个捕获组。</span><span class="sxs-lookup"><span data-stu-id="bea2a-198">Match one or more occurrences of the value of the first captured group.</span></span>|  
  
 <span data-ttu-id="bea2a-199">下面的示例使用`DuplicatedChars`正则表达式，以标识字符串数组中的重复字符。</span><span class="sxs-lookup"><span data-stu-id="bea2a-199">The following example uses the `DuplicatedChars` regular expression to identify duplicate characters in a string array.</span></span> <span data-ttu-id="bea2a-200">当它调用`DuplicatedChars`构造函数，它将更改为.5 秒超时间隔。</span><span class="sxs-lookup"><span data-stu-id="bea2a-200">When it calls the `DuplicatedChars` constructor, it changes the time-out interval to .5 seconds.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1a.cs#2)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1a.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bea2a-201">获取或设置表示已编译的正则表达式的类型名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-201">Gets or sets the name of the type that represents the compiled regular expression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bea2a-202">新类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-202">The name of the new type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bea2a-203"><xref:System.Text.RegularExpressions.RegexCompilationInfo>类用于定义已编译的正则表达式，表示为从派生的类<xref:System.Text.RegularExpressions.Regex>。</span><span class="sxs-lookup"><span data-stu-id="bea2a-203">The <xref:System.Text.RegularExpressions.RegexCompilationInfo> class is used to define a compiled regular expression, which is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>.</span></span> <span data-ttu-id="bea2a-204"><xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A>属性定义的正则表达式类型的类名称和<xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A>和<xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A>属性共同定义其完全限定的名称。</span><span class="sxs-lookup"><span data-stu-id="bea2a-204">The <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> property defines the class name of the regular expression type, and the <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> and <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> properties together define its fully qualified name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bea2a-205">此属性的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-205">The value for this property is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bea2a-206">此属性的值为空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-206">The value for this property is an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bea2a-207">获取或设置新类型所属的命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-207">Gets or sets the namespace to which the new type belongs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bea2a-208">新类型的命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-208">The namespace of the new type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bea2a-209"><xref:System.Text.RegularExpressions.RegexCompilationInfo>类用于定义已编译的正则表达式，表示为从派生的类<xref:System.Text.RegularExpressions.Regex>。</span><span class="sxs-lookup"><span data-stu-id="bea2a-209">The <xref:System.Text.RegularExpressions.RegexCompilationInfo> class is used to define a compiled regular expression, which is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>.</span></span> <span data-ttu-id="bea2a-210"><xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A>属性定义包含已编译的正则表达式类型的命名空间和<xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A>和<xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A>属性共同定义其完全限定的名称。</span><span class="sxs-lookup"><span data-stu-id="bea2a-210">The <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> property defines the namespace that contains the compiled regular expression type, and the <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> and <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> properties together define its fully qualified name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bea2a-211">此属性的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-211">The value for this property is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.RegexOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.RegularExpressions.RegexOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As RegexOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::RegularExpressions::RegexOptions Options { System::Text::RegularExpressions::RegexOptions get(); void set(System::Text::RegularExpressions::RegexOptions value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bea2a-212">获取或设置编译正则表达式时使用的选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-212">Gets or sets the options to use when compiling the regular expression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bea2a-213">枚举值的按位组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-213">A bitwise combination of the enumeration values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bea2a-214"><xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>方法将生成该程序集包含已编译的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bea2a-214">The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions.</span></span> <span data-ttu-id="bea2a-215">因此，你不必指定<xref:System.Text.RegularExpressions.RegexOptions.Compiled>作为此属性的值之一。</span><span class="sxs-lookup"><span data-stu-id="bea2a-215">Therefore, you do not have to specify <xref:System.Text.RegularExpressions.RegexOptions.Compiled> as one of the values of this property.</span></span> <span data-ttu-id="bea2a-216">如果不存在，<xref:System.Text.RegularExpressions.RegexOptions.Compiled>忽略选项。</span><span class="sxs-lookup"><span data-stu-id="bea2a-216">If it is present, the <xref:System.Text.RegularExpressions.RegexOptions.Compiled> option is ignored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public string Pattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pattern" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public Property Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Pattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bea2a-217">获取或设置要编译的正则表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-217">Gets or sets the regular expression to compile.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bea2a-218">要编译的正则表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-218">The regular expression to compile.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bea2a-219"><xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A>属性可以包含任何有效的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bea2a-219">The <xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A> property can contain any valid regular expression.</span></span> <span data-ttu-id="bea2a-220">如果值<xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A>属性不是语法正确的正则表达式模式中，调用<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>方法抛出异常<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="bea2a-220">If the value of the <xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A> property is not a syntactically correct regular expression pattern, the call to the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method throws an <xref:System.ArgumentException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bea2a-221">此属性的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea2a-221">The value for this property is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>