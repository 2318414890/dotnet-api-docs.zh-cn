<Type Name="SignerInfo" FullName="System.Security.Cryptography.Pkcs.SignerInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f6fc648b8beb2d43060279236f68aedd542afb1b" />
    <Meta Name="ms.sourcegitcommit" Value="e7865e39826e7aaf54da4c7042975153813a31c7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/16/2018" />
    <Meta Name="ms.locfileid" Value="31043782" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SignerInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SignerInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Pkcs.SignerInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SignerInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class SignerInfo sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 类表示一个签名者，该签名者与表示 CMS/PKCS #7 消息的 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 对象相关联。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所表示的签名<xref:System.Security.Cryptography.Pkcs.SignerInfo>类可以是通过消息内容或签名。 后一种签名称为*副署*。  
  
 此实现的 CMS/PKCS #7 仅支持一个级别的副署。  也就是说，可以签名的签名，形成副署，但不能重新签署该副署。  
  
 此类没有公共构造函数;因此，它不能公开实例化。 它是只读的类可从访问<xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos%2A?displayProperty=nameWithType>属性。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Certificate As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2 ^ Certificate { System::Security::Cryptography::X509Certificates::X509Certificate2 ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate" /> 属性检索与该签名者信息关联的签名证书。</summary>
        <value>表示签名证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果签名的证书不包括在签名时使用<xref:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption%2A?displayProperty=nameWithType>不会返回属性，则该证书。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Version" />
      </Docs>
    </Member>
    <Member MemberName="CheckHash">
      <MemberSignature Language="C#" Value="public void CheckHash ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckHash() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckHash ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckHash();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> 方法验证 CMS/PKCS #7 消息签名者信息的数据完整性。 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> 是一个专用方法，用于特定的安全基础结构应用程序。在这些应用程序中，在设置 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 对象时，使用者使用 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 枚举的 HashOnly 成员。 由于 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> 方法并不涉及对数字签名进行验证，因此该方法不对签名者信息进行身份验证。 要对 CMS/PKCS #7 消息签名者信息和副署的完整性和可靠性进行通用检查，请使用 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> 或 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> 方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法不提供身份验证的 CMS/PKCS #7 消息签署人的信息。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
        <altmember cref="T:System.Security.Cryptography.Pkcs.CmsSigner" />
        <altmember cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" />
        <altmember cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckSignature">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>验证消息的数字签名。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public void CheckSignature (bool verifySignatureOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckSignature(bool verifySignatureOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckSignature (verifySignatureOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckSignature(bool verifySignatureOnly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verifySignatureOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="verifySignatureOnly">一个指定是否仅验证数字签名的布尔值。 如果 <c>verifySignatureOnly</c> 为 <see langword="true" />，则只验证签名。 如果 <c>verifySignatureOnly</c> 为 <see langword="false" />，则将对数字签名、证书链和证书的用途进行验证。 如果证书没有密钥用法或如果密钥用法支持数字签名或认可，则认为该证书的用途有效。</param>
        <summary>
          <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> 方法对消息的数字签名进行验证，并对证书进行验证（可选）。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果数字签名验证失败或不满足任何验证要求，此方法将引发异常。  
  
 如果需要更复杂的验证，调用方可以指定仅对签名进行验证，然后使用<xref:System.Security.Cryptography.X509Certificates.X509Chain>对象来执行自定义验证。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
        <exception cref="T:System.InvalidOperationException">一个方法调用对于对象的当前状态无效。</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public void CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2Collection extraStore, bool verifySignatureOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckSignature(class System.Security.Cryptography.X509Certificates.X509Certificate2Collection extraStore, bool verifySignatureOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckSignature (extraStore As X509Certificate2Collection, verifySignatureOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckSignature(System::Security::Cryptography::X509Certificates::X509Certificate2Collection ^ extraStore, bool verifySignatureOnly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extraStore" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />
        <Parameter Name="verifySignatureOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="extraStore">可用于验证链的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 对象。 如果没有其他要用于验证链的证书，则应使用 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> 而不应使用 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />。</param>
        <param name="verifySignatureOnly">一个指定是否仅验证数字签名的布尔值。 如果 <c>verifySignatureOnly</c> 为 <see langword="true" />，则只验证签名。 如果 <c>verifySignatureOnly</c> 为 <see langword="false" />，则将对数字签名、证书链和证书的用途进行验证。 如果证书没有密钥用法或如果密钥用法支持数字签名或认可，则认为该证书的用途有效。</param>
        <summary>
          <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> 方法通过使用指定的证书集合对消息的数字签名进行验证，并对证书进行验证（可选）。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果数字签名验证失败或不满足任何验证要求，此方法将引发异常。  
  
 如果需要更复杂的验证，调用方可以指定仅对签名进行验证，然后使用<xref:System.Security.Cryptography.X509Certificates.X509Chain>对象来执行自定义验证。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
        <exception cref="T:System.InvalidOperationException">一个方法调用对于对象的当前状态无效。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ComputeCounterSignature">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>创建副署并将签名添加到 CMS/PKCS #7 消息。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ComputeCounterSignature">
      <MemberSignature Language="C#" Value="public void ComputeCounterSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeCounterSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature" />
      <MemberSignature Language="VB.NET" Value="Public Sub ComputeCounterSignature ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ComputeCounterSignature();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature" /> 方法提示用户选择签名证书、创建副署并向 CMS/PKCS #7 消息添加签名。 副署限制为一层。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此实现的 CMS/PKCS #7 仅支持一个级别的副署。  也就是说，可以签名的签名，形成副署，但不能重新签署该副署。  
  
 此方法会显示在其中选择为此消息的签名者的用户界面。 这要求当前进程是否正在*用户交互模式*，这意味着，<xref:System.Environment.UserInteractive%2A?displayProperty=nameWithType>属性设置为`true`。 进程在用户交互模式中处于正常情况下，除非它为服务进程或在 Web 应用程序内部运行。  
  
 签名者的证书满足以下条件将显示在列表中：  
  
-   该证书具有关联的私钥。  
  
-   该证书将在其有效期内。  
  
-   该证书具有没有密钥用法或支持数字签名或不可否认性的密钥用法。  
  
 签名者的证书选择从 My 存储区。  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 需要以下权限来显示用户界面：  
  
-   <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows?displayProperty=nameWithType>  
  
 访问的签名密钥所需的以下权限：  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags.Open?displayProperty=nameWithType>  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      </Docs>
    </Member>
    <Member MemberName="ComputeCounterSignature">
      <MemberSignature Language="C#" Value="public void ComputeCounterSignature (System.Security.Cryptography.Pkcs.CmsSigner signer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeCounterSignature(class System.Security.Cryptography.Pkcs.CmsSigner signer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ComputeCounterSignature (signer As CmsSigner)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ComputeCounterSignature(System::Security::Cryptography::Pkcs::CmsSigner ^ signer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signer" Type="System.Security.Cryptography.Pkcs.CmsSigner" />
      </Parameters>
      <Docs>
        <param name="signer">表示副署签名者的 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 对象。</param>
        <summary>
          <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)" /> 方法通过使用指定的签名者创建副署并将签名添加到 CMS/PKCS #7 消息。 副署限制为一层。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此实现的 CMS/PKCS #7 仅支持一个级别的副署。  也就是说，可以签名的签名，形成副署，但不能重新签署该副署。  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 访问的签名密钥所需的以下权限：  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags.Open?displayProperty=nameWithType>  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      </Docs>
    </Member>
    <Member MemberName="CounterSignerInfos">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Pkcs.SignerInfoCollection CounterSignerInfos { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Pkcs.SignerInfoCollection CounterSignerInfos" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CounterSignerInfos As SignerInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Pkcs::SignerInfoCollection ^ CounterSignerInfos { System::Security::Cryptography::Pkcs::SignerInfoCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.SignerInfoCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" /> 属性检索与该签名者信息关联的一组副署签名者。</summary>
        <value>一个 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合，表示该签名者信息的副署签名者。 如果没有副署签名者，则此属性为空集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此实现的 CMS/PKCS #7 仅支持一个级别的副署。 也就是说，可以签名的签名，形成副署，但不能重新签署该副署。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Version" />
      </Docs>
    </Member>
    <Member MemberName="DigestAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Oid DigestAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Oid DigestAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DigestAlgorithm As Oid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Oid ^ DigestAlgorithm { System::Security::Cryptography::Oid ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Oid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm" /> 属性检索表示用于计算签名的哈希算法的 <see cref="T:System.Security.Cryptography.Oid" /> 对象。</summary>
        <value>一个 <see cref="T:System.Security.Cryptography.Oid" /> 对象，表示用于计算签名的哈希算法。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Version" />
      </Docs>
    </Member>
    <Member MemberName="GetSignature">
      <MemberSignature Language="C#" Value="public byte[] GetSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignerInfo.GetSignature" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSignature () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetSignature();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>检索当前 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象的签名。</summary>
        <returns>当前 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象的签名。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveCounterSignature">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>从 <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" /> 集合中移除指定的副署。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveCounterSignature">
      <MemberSignature Language="C#" Value="public void RemoveCounterSignature (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveCounterSignature(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveCounterSignature (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveCounterSignature(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要移除的副署的索引（从零开始）。</param>
        <summary>
          <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)" /> 方法移除 <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" /> 集合中指定索引处的副署。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveCounterSignature">
      <MemberSignature Language="C#" Value="public void RemoveCounterSignature (System.Security.Cryptography.Pkcs.SignerInfo counterSignerInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveCounterSignature(class System.Security.Cryptography.Pkcs.SignerInfo counterSignerInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveCounterSignature (counterSignerInfo As SignerInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveCounterSignature(System::Security::Cryptography::Pkcs::SignerInfo ^ counterSignerInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterSignerInfo" Type="System.Security.Cryptography.Pkcs.SignerInfo" />
      </Parameters>
      <Docs>
        <param name="counterSignerInfo">表示被移除的副署的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象。</param>
        <summary>
          <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)" /> 方法移除指定 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象的副署。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">参数值超出了被调用方法定义的允许值范围。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Oid SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Oid SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignerInfo.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureAlgorithm As Oid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Oid ^ SignatureAlgorithm { System::Security::Cryptography::Oid ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Oid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象使用的签名算法的标识符。</summary>
        <value>当前 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象使用的签名算法的标识符。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignedAttributes">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CryptographicAttributeObjectCollection SignedAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CryptographicAttributeObjectCollection SignedAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignedAttributes As CryptographicAttributeObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CryptographicAttributeObjectCollection ^ SignedAttributes { System::Security::Cryptography::CryptographicAttributeObjectCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CryptographicAttributeObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes" /> 属性检索与该签名者信息关联的已签名特性的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合。 已签名特性与其余的消息内容一起进行签名。</summary>
        <value>一个表示已签名特性的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合。 如果没有已签名特性，则该属性为空集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可能包括在签名属性示例<xref:System.Security.Cryptography.CryptographicAttributeObjectCollection>集合检索<xref:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes%2A>属性是<xref:System.Security.Cryptography.Pkcs.Pkcs9SigningTime>签名时间属性。  
  
 签名的特性进行签名的其余部分的<xref:System.Security.Cryptography.Pkcs.SignedCms>消息内容。 这意味着，已成功验证签名的当事方可以确信的这些特性的内容可信的且未更改。  
  
 A<xref:System.Security.Cryptography.Pkcs.Pkcs9ContentType>对象和一个<xref:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest>对象将自动生成并放入<xref:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes%2A>属性每当<xref:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes%2A?displayProperty=nameWithType>相应签名者的属性不为空。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm" />
        <altmember cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Version" />
      </Docs>
    </Member>
    <Member MemberName="SignerIdentifier">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Pkcs.SubjectIdentifier SignerIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Pkcs.SubjectIdentifier SignerIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignerIdentifier As SubjectIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Pkcs::SubjectIdentifier ^ SignerIdentifier { System::Security::Cryptography::Pkcs::SubjectIdentifier ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.SubjectIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier" /> 属性检索与该签名者信息关联的签名者的证书标识符。</summary>
        <value>一个 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> 对象，此对象唯一地标识与该签名者信息关联的证书。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Version" />
      </Docs>
    </Member>
    <Member MemberName="UnsignedAttributes">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CryptographicAttributeObjectCollection UnsignedAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CryptographicAttributeObjectCollection UnsignedAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnsignedAttributes As CryptographicAttributeObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CryptographicAttributeObjectCollection ^ UnsignedAttributes { System::Security::Cryptography::CryptographicAttributeObjectCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CryptographicAttributeObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes" /> 属性检索与 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 内容关联的未签名特性的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 集合。 可对未签名特性进行修改，这不会导致签名无效。</summary>
        <value>表示未签名特性的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合。 如果没有未签名特性，则该属性为空集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 无符号的属性未签名的其余部分的<xref:System.Security.Cryptography.Pkcs.SignedCms>消息内容。 即使当事方成功验证签名，未签名的特性将未修改，并且不应视为具有可靠性或完整性。  
  
 可能包括在无符号属性示例<xref:System.Security.Cryptography.CryptographicAttributeObjectCollection>集合检索<xref:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes%2A>属性是一个副署。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Version" />
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignerInfo.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Version { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Version" /> 属性检索签名者信息版本。</summary>
        <value>指定签名者信息版本的整数值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 版本确定消息是否是 PKCS #7 消息或加密消息语法 (CMS) 的消息。 CMS 是 PKCS #7 的较新超集。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes" />
      </Docs>
    </Member>
  </Members>
</Type>