<Type Name="PackageDigitalSignatureManager" FullName="System.IO.Packaging.PackageDigitalSignatureManager">
  <TypeSignature Language="C#" Value="public sealed class PackageDigitalSignatureManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PackageDigitalSignatureManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageDigitalSignatureManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PackageDigitalSignatureManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageDigitalSignatureManager sealed" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="bbe4d-101">提供一个实用工具类，用来在 <see cref="T:System.IO.Packaging.Package" /> 中创建和验证数字签名。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-101">Provides a utility class for the creation and verification of digital signatures in a <see cref="T:System.IO.Packaging.Package" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbe4d-102"><xref:System.IO.Packaging.PackageDigitalSignatureManager> 在.NET Framework 数字签名类和提供实用工具类，用于在使用带有的数字签名中执行常见任务的体系结构基础上构建<xref:System.IO.Packaging.Package>元素。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-102"><xref:System.IO.Packaging.PackageDigitalSignatureManager> builds on the architecture of .NET Framework digital signature classes and provides a utility class for performing common tasks in using digital signatures with <xref:System.IO.Packaging.Package> elements.</span></span>  
  
 <span data-ttu-id="bbe4d-103">有关包的数字签名的详细信息，请参阅 MSDN 文章数字签名的 Framework 的在开放式打包约定[ http://go.microsoft.com/fwlink/?LinkId=74494 ](http://go.microsoft.com/fwlink/?LinkId=74494)。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-103">For more information about package digital signatures, see the MSDN article Digital Signing Framework of the Open Packaging Conventions available at [http://go.microsoft.com/fwlink/?LinkId=74494](http://go.microsoft.com/fwlink/?LinkId=74494).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbe4d-104">下面的示例演示如何使用<xref:System.IO.Packaging.PackageDigitalSignatureManager>。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-104">The following example shows how to use the <xref:System.IO.Packaging.PackageDigitalSignatureManager>.</span></span>  <span data-ttu-id="bbe4d-105">有关完整的示例，请参阅[使用数字签名示例创建一个包](http://go.microsoft.com/fwlink/?LinkID=159966)。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-105">For the complete sample, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).</span></span>  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.Package" />
    <altmember cref="T:System.IO.Packaging.PackageDigitalSignature" />
    <altmember cref="T:System.Windows.Xps.Packaging.XpsDigitalSignature" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PackageDigitalSignatureManager (System.IO.Packaging.Package package);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Packaging.Package package) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PackageDigitalSignatureManager(System::IO::Packaging::Package ^ package);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
      </Parameters>
      <Docs>
        <param name="package"><span data-ttu-id="bbe4d-106">与此签名管理器关联的包。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-106">The package associated with this signature manager.</span></span></param>
        <summary><span data-ttu-id="bbe4d-107">使用指定的 <see cref="T:System.IO.Packaging.PackageDigitalSignatureManager" /> 初始化 <see cref="T:System.IO.Packaging.Package" /> 类的新实例以供使用。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-107">Initializes a new instance of the <see cref="T:System.IO.Packaging.PackageDigitalSignatureManager" /> class for use with a specified <see cref="T:System.IO.Packaging.Package" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbe4d-108">初始化过程中设置的签名管理器与关联的目标包。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-108">The target package associated with the signature manager is set during initialization.</span></span> <span data-ttu-id="bbe4d-109">设置完成后，无法更改与签名管理器关联的包。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-109">After it is set, the package associated with the signature manager cannot be changed.</span></span> <span data-ttu-id="bbe4d-110">根据需要创建一个新的签名的每个包管理器。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-110">Create a new signature manager for each package as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbe4d-111">下面的示例演示如何使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-111">The following example shows how to use this constructor.</span></span>  <span data-ttu-id="bbe4d-112">有关完整的示例，请参阅[使用数字签名示例创建一个包](http://go.microsoft.com/fwlink/?LinkID=159966)。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-112">For the complete sample, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Packaging.PackageDigitalSignature" />
      </Docs>
    </Member>
    <Member MemberName="CertificateOption">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.CertificateEmbeddingOption CertificateOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Packaging.CertificateEmbeddingOption CertificateOption" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificateOption As CertificateEmbeddingOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::CertificateEmbeddingOption CertificateOption { System::IO::Packaging::CertificateEmbeddingOption get(); void set(System::IO::Packaging::CertificateEmbeddingOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.CertificateEmbeddingOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbe4d-113">获取或设置由 <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" /> 方法使用的 X.509 证书嵌入选项以对包部件进行数字签名。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-113">Gets or sets the X.509 certificate embedding option used by the <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" /> method to digitally sign package parts.</span></span></summary>
        <value><span data-ttu-id="bbe4d-114"><see cref="T:System.IO.Packaging.CertificateEmbeddingOption" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-114">One of the <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbe4d-115">此属性指定当对某个部件进行数字签名时签名者的 X.509 证书将存储的位置。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-115">This property specifies where the signer's X.509 certificate will be stored when digitally signing a part.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbe4d-116">下面的示例演示如何将此属性设置为在包中的部件进行数字签名做准备。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-116">The following example shows how to set this property in preparation to digitally sign the parts within a package.</span></span>  <span data-ttu-id="bbe4d-117">有关完整的示例，请参阅[使用数字签名示例创建一个包](http://go.microsoft.com/fwlink/?LinkID=159966)。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-117">For the complete sample, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Countersign">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bbe4d-118">使用指定的 X.509 证书副署包中的签名。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-118">Countersigns signatures in the package with a specified X.509 certificate.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Countersign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Countersign ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Countersign() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign" />
      <MemberSignature Language="VB.NET" Value="Public Function Countersign () As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Countersign();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbe4d-119">使用用户选定的 X.509 证书副署包中的所有签名。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-119">Countersigns all the signatures in the package with a user-selected X.509 certificate.</span></span></summary>
        <returns><span data-ttu-id="bbe4d-120">作为副署添加的签名；或者，如果无法找到证书或用户已取消证书选择对话框，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-120">The signature that was added as a countersign; or <see langword="null" /> if no certificate could be located or the user canceled the certificate selection dialog.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbe4d-121">如果在调用中不指定任何 X.509 证书，则此方法将打开证书选择对话框，提示用户选择要用于签名的证书。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-121">If no X.509 certificate is specified in the call, this method opens a certificate selection dialog box that prompts the user to choose a certificate to use for signing.</span></span>  
  
 <span data-ttu-id="bbe4d-122">在中设置的窗口句柄<xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A>属性之前调用<xref:System.IO.Packaging.PackageDigitalSignatureManager.Countersign%2A>要使证书选择对话框模式适合给定窗口。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-122">Set the window handle in the <xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A> property before calling <xref:System.IO.Packaging.PackageDigitalSignatureManager.Countersign%2A> to make the Certificate Selection Dialog modal to the given window.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Countersign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Countersign (System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Countersign(class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Countersign (certificate As X509Certificate) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Countersign(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="certificate"><span data-ttu-id="bbe4d-123">要作为副署签名添加的 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-123">The X.509 certificate to add as a countersign signature.</span></span></param>
        <summary><span data-ttu-id="bbe4d-124">使用指定的 X.509 证书副署包中的所有签名。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-124">Countersigns all the signatures in the package with a specified X.509 certificate.</span></span></summary>
        <returns><span data-ttu-id="bbe4d-125">作为副署添加的签名。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-125">The signature that was added as a countersign.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bbe4d-126"><paramref name="certificate" /> 为 <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="bbe4d-126"><paramref name="certificate" /> is <see langword="null" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Countersign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Countersign (System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;Uri&gt; signatures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Countersign(class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; signatures) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})" />
      <MemberSignature Language="VB.NET" Value="Public Function Countersign (certificate As X509Certificate, signatures As IEnumerable(Of Uri)) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Countersign(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ signatures);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="signatures" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
      </Parameters>
      <Docs>
        <param name="certificate"><span data-ttu-id="bbe4d-127">用于对每个指定 <c>signatures</c> 进行副署的 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-127">The X.509 certificate to countersign each of the specified <c>signatures</c>.</span></span></param>
        <param name="signatures"><span data-ttu-id="bbe4d-128">要进行副署的签名的列表。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-128">The list of signatures to countersign.</span></span></param>
        <summary><span data-ttu-id="bbe4d-129">使用给定 X.509 证书对签名的列表进行副署。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-129">Countersigns a list of signatures with a given X.509 certificate.</span></span></summary>
        <returns><span data-ttu-id="bbe4d-130">用于副署每个 <paramref name="signatures" /> 的数字签名。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-130">The digital signature used to countersign each of the <paramref name="signatures" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bbe4d-131"><paramref name="certificate" /> 或 <paramref name="signatures" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-131">Either the <paramref name="certificate" /> or <paramref name="signatures" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bbe4d-132">该包不包含任何已签名的 <see cref="T:System.IO.Packaging.PackagePart" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-132">The package contains no signed <see cref="T:System.IO.Packaging.PackagePart" /> objects.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bbe4d-133">该包不包含任何 <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> 部件。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-133">The package contains no <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> parts.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultHashAlgorithm">
      <MemberSignature Language="C#" Value="public static string DefaultHashAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string DefaultHashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultHashAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DefaultHashAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbe4d-134">获取 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 字符串，该字符串可标识用于创建和验证签名的默认哈希算法。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-134">Gets a [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] string that identifies the default hash algorithm used to create and verify signatures.</span></span></summary>
        <value><span data-ttu-id="bbe4d-135">一个 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 字符串，标识用于创建和验证签名的默认哈希算法。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-135">A [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] string that identifies the default hash algorithm used to create and verify signatures.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbe4d-136">标准的默认哈希算法<xref:System.IO.Packaging.PackageDigitalSignatureManager>类是<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url>([!INCLUDE[TLA#tla_sha1](~/includes/tlasharptla-sha1-md.md)])。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-136">The default hash algorithm for the standard <xref:System.IO.Packaging.PackageDigitalSignatureManager> class is <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> ([!INCLUDE[TLA#tla_sha1](~/includes/tlasharptla-sha1-md.md)]).</span></span>  
  
 <span data-ttu-id="bbe4d-137"><xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>属性获取或设置这用于创建和验证签名的实际的哈希算法。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-137">The <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> property gets or sets the actual hash algorithm this is used to create and verify signatures.</span></span>  
  
 <span data-ttu-id="bbe4d-138"><xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>属性通常用于重置<xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>回临时更改后的默认设置的属性。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-138">The <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A> property is typically used to reset the <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> property back to default after a temporary change.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.Xml.SignedXml" />
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="GetSignature">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature GetSignature (Uri signatureUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature GetSignature(class System.Uri signatureUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSignature (signatureUri As Uri) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ GetSignature(Uri ^ signatureUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signatureUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="signatureUri"><span data-ttu-id="bbe4d-139">要返回的数字签名的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-139">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the digital signature to return.</span></span></param>
        <summary><span data-ttu-id="bbe4d-140">返回给定签名 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] 的数字签名。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-140">Returns the digital signature for a given signature [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span></span></summary>
        <returns><span data-ttu-id="bbe4d-141">指定 <paramref name="signatureUri" /> 的数字签名，或者，如果找不到给定 <paramref name="signatureUri" /> 的签名，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-141">The digital signature for the specified <paramref name="signatureUri" />, or <see langword="null" /> if a signature for the given <paramref name="signatureUri" /> cannot be found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public string HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HashAlgorithm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbe4d-142">获取或设置用于创建和验证签名的 <see cref="T:System.Security.Cryptography.HashAlgorithm" /> 实例的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 标识符。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-142">Gets or sets the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] identifier for the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> instance used to create and verify signatures.</span></span></summary>
        <value><span data-ttu-id="bbe4d-143"><see cref="T:System.Security.Cryptography.Xml.SignedXml" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]标识符<see cref="T:System.Security.Cryptography.HashAlgorithm" />用于创建和验证签名的实例。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-143">The <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] identifier for the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> instance used to create and verify signatures.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbe4d-144">标准数字签名管理器的默认哈希算法标识符是<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url>(<xref:System.Security.Cryptography.SHA1>-安全哈希算法版本 1.0)。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-144">The default hash algorithm identifier for the standard digital signature manager is <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> (<xref:System.Security.Cryptography.SHA1>—Secure Hash Algorithm version 1.0).</span></span>  
  
 <span data-ttu-id="bbe4d-145">除非显式设置，否则为此属性获取相同的值<xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-145">Unless explicitly set otherwise, this property gets the same value as <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>.</span></span>  
  
 <span data-ttu-id="bbe4d-146"><xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>属性通常不会更改不再是默认值。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-146">The <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> property is typically not changed from its default.</span></span> <span data-ttu-id="bbe4d-147">必须更改此属性，仅当使用不同的已知的签名和访问<xref:System.Security.Cryptography.HashAlgorithm>遇到。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-147">This property must be changed only if a signature that uses a different known and accessible <xref:System.Security.Cryptography.HashAlgorithm> is encountered.</span></span>  <span data-ttu-id="bbe4d-148">当已完成，但使用不同的哈希算法的签名，调用<xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>重置<xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>回默认设置的属性。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-148">When finished with the signature that uses a different hash algorithm, call <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A> to reset the <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> property back to default.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bbe4d-149">要设置的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 的字符串为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-149">The string for the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] to set is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bbe4d-150">要设置的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 的字符串为空。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-150">The string for the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] to set is empty.</span></span></exception>
        <altmember cref="T:System.Security.Cryptography.Xml.SignedXml" />
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm" />
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignature.SignatureValue" />
      </Docs>
    </Member>
    <Member MemberName="InvalidSignatureEvent">
      <MemberSignature Language="C#" Value="public event System.IO.Packaging.InvalidSignatureEventHandler InvalidSignatureEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.Packaging.InvalidSignatureEventHandler InvalidSignatureEvent" />
      <MemberSignature Language="DocId" Value="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Event InvalidSignatureEvent As InvalidSignatureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::Packaging::InvalidSignatureEventHandler ^ InvalidSignatureEvent;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.InvalidSignatureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbe4d-151">当 <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> 遇到无效的签名时发生。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-151">Occurs when <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> encounters an invalid signature.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSigned { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbe4d-152">获取一个值，该值指示包是否包含任何签名。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-152">Gets a value that indicates whether the package contains any signatures.</span></span></summary>
        <value>
          <span data-ttu-id="bbe4d-153">如果包中包含签名，则为 <see langword="true" />，否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-153"><see langword="true" /> if the package contains signatures; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbe4d-154"><xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A>属性不会执行签名验证。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-154">The <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A> property does not perform signature validations.</span></span> <span data-ttu-id="bbe4d-155">签名是否存在和<xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A>是`true`，一个或多个签名可能不是有效。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-155">If signatures are present and <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A> is `true`, one or more of the signatures might not be valid.</span></span>  <span data-ttu-id="bbe4d-156">调用<xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures%2A>以确认签名是否有效且未发生更改。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-156">Call <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures%2A> to confirm that the signatures are valid and have not changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbe4d-157">下面的示例演示如何使用<xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A>属性来确定包是否包含数字签名。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-157">The following example shows how to use the <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A> property to determine if a package contains digital signatures.</span></span>  <span data-ttu-id="bbe4d-158">有关完整的示例，请参阅[使用数字签名示例创建一个包](http://go.microsoft.com/fwlink/?LinkID=159966)。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-158">For the complete sample, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).</span></span>  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigvalidate)]
 [!code-vb[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigvalidate)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ParentWindow">
      <MemberSignature Language="C#" Value="public IntPtr ParentWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ParentWindow" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentWindow As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ParentWindow { IntPtr get(); void set(IntPtr value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbe4d-159">获取或设置父窗口的句柄，以显示证书选择对话框。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-159">Gets or sets a handle to the parent window for displaying a certificate selection dialog box.</span></span></summary>
        <value><span data-ttu-id="bbe4d-160">用于显示证书选择对话框的父窗口的句柄。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-160">The handle of the parent window to use to display the certificate selection dialog box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbe4d-161">证书选择对话框中显示仅当<xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>调用不包含证书。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-161">A certificate selection dialog box is presented only if a <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> call contains no certificates.</span></span> <span data-ttu-id="bbe4d-162">如果未不指定任何证书，<xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>将显示证书选择对话框，使用户能够选择要用于签名的证书。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-162">If no certificates are specified, <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> will display a certificate selection dialog box that enables the user to choose which certificate to use for signing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllSignatures">
      <MemberSignature Language="C#" Value="public void RemoveAllSignatures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllSignatures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAllSignatures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAllSignatures();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbe4d-163">从包中删除所有数字签名。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-163">Removes all digital signatures from the package.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbe4d-164">此方法还会从包中删除所有的 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-164">This method also removes all X.509 certificates from the package.</span></span>  <span data-ttu-id="bbe4d-165">移除所有签名和证书后，调用<xref:System.IO.Packaging.Package.Flush%2A>以持久保存到应用商店的所有更改。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-165">After removing all signatures and certificates, call <xref:System.IO.Packaging.Package.Flush%2A> to persist all changes to the store.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.PackageDigitalSignatureManager.Sign" />
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)" />
        <altmember cref="T:System.IO.Packaging.PackageDigitalSignature" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSignature">
      <MemberSignature Language="C#" Value="public void RemoveSignature (Uri signatureUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveSignature(class System.Uri signatureUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSignature (signatureUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveSignature(Uri ^ signatureUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signatureUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="signatureUri"><span data-ttu-id="bbe4d-166">要移除的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 的 <see cref="T:System.IO.Packaging.PackageDigitalSignature" />。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-166">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> to remove.</span></span></param>
        <summary><span data-ttu-id="bbe4d-167">使用给定签名 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] 移除数字签名。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-167">Removes the digital signature with a given signature [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbe4d-168">如果它未被任何其他数字签名引用，则此方法还会删除关联的 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-168">This method also removes the associated X.509 certificate if it is not referenced by any other digital signature.</span></span>  
  
 <span data-ttu-id="bbe4d-169">移除签名后, 调用<xref:System.IO.Packaging.Package.Flush%2A>以保留更改到应用商店。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-169">After removing a signature, call <xref:System.IO.Packaging.Package.Flush%2A> to persist the change to the store.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sign">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bbe4d-170">使用指定的 X.509 证书对包部件的列表进行签名。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-170">Signs a list of package parts with a specified X.509 certificate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bbe4d-171">下面的示例演示的步骤进行数字签名中的部件的列表<xref:System.IO.Packaging.Package>。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-171">The following example shows the steps to digitally sign a list of parts within a <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="bbe4d-172">有关完整的示例，请参阅[使用数字签名示例创建一个包](http://go.microsoft.com/fwlink/?LinkID=159966)。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-172">For the complete sample, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).</span></span>  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri)) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
      </Parameters>
      <Docs>
        <param name="parts"><span data-ttu-id="bbe4d-173">要签名的 <see cref="T:System.IO.Packaging.PackagePart" /> 元素的 [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] 列表。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-173">The list of [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] for the <see cref="T:System.IO.Packaging.PackagePart" /> elements to sign.</span></span></param>
        <summary><span data-ttu-id="bbe4d-174">提示用户提供 X.509 证书，然后将其用于对指定的包部件列表进行数字签名。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-174">Prompts the user for an X.509 certificate, which is then used to digitally sign a specified list of package parts.</span></span></summary>
        <returns><span data-ttu-id="bbe4d-175">用于对 <paramref name="parts" /> 列表进行签名的数字签名。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-175">The digital signature used to sign the list of <paramref name="parts" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbe4d-176">若要使证书选择对话框模式适合特定窗口，将设置<xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A>属性之前调用<xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-176">To make the certificate selection dialog modal to a particular window, set the <xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A> property before calling <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>.</span></span>  
  
 <span data-ttu-id="bbe4d-177"><xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> 将提示输入证书，如果没有任何默认证书存储中。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-177"><xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> will not prompt for certificates if there are none in the default certificate store.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbe4d-178">下面的示例演示如何进行数字签名对包部件的列表。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-178">The following example shows how to digitally sign a list of package parts.</span></span>  <span data-ttu-id="bbe4d-179">有关完整的示例，请参阅[使用数字签名示例创建一个包](http://go.microsoft.com/fwlink/?LinkID=159966)。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-179">For the complete sample, see the [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).</span></span>  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri), certificate As X509Certificate) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts, System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="parts"><span data-ttu-id="bbe4d-180">要签名的 <see cref="T:System.IO.Packaging.PackagePart" /> 元素的 [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] 列表。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-180">The list of [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] for the <see cref="T:System.IO.Packaging.PackagePart" /> elements to sign.</span></span></param>
        <param name="certificate"><span data-ttu-id="bbe4d-181">用于对每个指定 <c>parts</c> 进行数字签名的 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-181">The X.509 certificate to use to digitally sign each of the specified <c>parts</c>.</span></span></param>
        <summary><span data-ttu-id="bbe4d-182">使用给定的 X.509 证书对包部件的列表进行签名。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-182">Signs a list of package parts with a given X.509 certificate.</span></span></summary>
        <returns><span data-ttu-id="bbe4d-183">用于对给定 <paramref name="parts" /> 列表进行签名的数字签名；或者，如果找不到证书或用户在证书选择对话框中单击了“取消”，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-183">The digital signature used to sign the given list of <paramref name="parts" />; or <see langword="null" /> if no certificate could be found or the user clicked "Cancel" in the certificate selection dialog box.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bbe4d-184">下面的示例演示如何进行数字签名中的部件的列表<xref:System.IO.Packaging.Package>。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-184">The following example shows how to digitally sign a list of parts within a <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="bbe4d-185">有关完整示例，请参阅[使用数字签名示例创建一个包](http://go.microsoft.com/fwlink/?LinkID=159966)。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-185">For the complete example, see the [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).</span></span>  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri), certificate As X509Certificate, relationshipSelectors As IEnumerable(Of PackageRelationshipSelector)) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts, System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, System::Collections::Generic::IEnumerable&lt;System::IO::Packaging::PackageRelationshipSelector ^&gt; ^ relationshipSelectors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="relationshipSelectors" Type="System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt;" />
      </Parameters>
      <Docs>
        <param name="parts"><span data-ttu-id="bbe4d-186">要签名的 <see cref="T:System.IO.Packaging.PackagePart" /> 对象的 [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] 列表。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-186">The list of [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] for the <see cref="T:System.IO.Packaging.PackagePart" /> objects to sign.</span></span></param>
        <param name="certificate"><span data-ttu-id="bbe4d-187">用于对每个指定部件和关系进行数字签名的 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-187">The X.509 certificate to use to digitally sign each of the specified parts and relationships.</span></span></param>
        <param name="relationshipSelectors"><span data-ttu-id="bbe4d-188">要签名的 <see cref="T:System.IO.Packaging.PackageRelationship" /> 对象列表。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-188">The list of <see cref="T:System.IO.Packaging.PackageRelationship" /> objects to sign.</span></span></param>
        <summary><span data-ttu-id="bbe4d-189">使用给定的 X.509 证书对包部件和包关系列表进行签名。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-189">Signs a list of package parts and package relationships with a given X.509 certificate.</span></span></summary>
        <returns><span data-ttu-id="bbe4d-190">用于对在 <paramref name="parts" /> 和 <paramref name="relationshipSelectors" /> 列表中指定的元素进行签名的数字签名。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-190">The digital signature used to sign the elements specified in the <paramref name="parts" /> and <paramref name="relationshipSelectors" /> lists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbe4d-191">之间`parts`和`relationshipSelectors`必须有至少一个元素进行签名。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-191">Between `parts` and `relationshipSelectors` there must be at least one element to sign.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbe4d-192">下面的示例演示如何进行数字签名对包部件的列表。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-192">The following example shows how to digitally sign a list of package parts.</span></span>  <span data-ttu-id="bbe4d-193">有关完整的示例，请参阅[使用数字签名示例创建一个包](http://go.microsoft.com/fwlink/?LinkID=159966)。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-193">For the complete sample, see the [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).</span></span>  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bbe4d-194"><paramref name="parts" /> 和 <paramref name="relationshipSelectors" /> 均不指定任何要签名的对象。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-194">Neither <paramref name="parts" /> nor <paramref name="relationshipSelectors" /> specify any objects to sign.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri), certificate As X509Certificate, relationshipSelectors As IEnumerable(Of PackageRelationshipSelector), signatureId As String) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts, System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, System::Collections::Generic::IEnumerable&lt;System::IO::Packaging::PackageRelationshipSelector ^&gt; ^ relationshipSelectors, System::String ^ signatureId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="relationshipSelectors" Type="System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt;" />
        <Parameter Name="signatureId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parts"><span data-ttu-id="bbe4d-195">要签名的 <see cref="T:System.IO.Packaging.PackagePart" /> 对象的 [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] 列表。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-195">The list of [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] for the <see cref="T:System.IO.Packaging.PackagePart" /> objects to sign.</span></span></param>
        <param name="certificate"><span data-ttu-id="bbe4d-196">用于对每个指定部件和关系进行数字签名的 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-196">The X.509 certificate to use to digitally sign each of the specified parts and relationships.</span></span></param>
        <param name="relationshipSelectors"><span data-ttu-id="bbe4d-197">要签名的 <see cref="T:System.IO.Packaging.PackageRelationship" /> 对象列表。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-197">The list of <see cref="T:System.IO.Packaging.PackageRelationship" /> objects to sign.</span></span></param>
        <param name="signatureId"><span data-ttu-id="bbe4d-198">要与签名关联的标识字符串。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-198">An identification string to associate with the signature.</span></span></param>
        <summary><span data-ttu-id="bbe4d-199">使用给定的 X.509 证书和 [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] 对包部件和包关系列表进行签名。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-199">Signs a list of package parts and package relationships with a given X.509 certificate and [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)].</span></span></summary>
        <returns><span data-ttu-id="bbe4d-200">用于对在 <paramref name="parts" /> 和 <paramref name="relationshipSelectors" /> 列表中指定的元素进行签名的数字签名。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-200">The digital signature used to sign the elements specified in the <paramref name="parts" /> and <paramref name="relationshipSelectors" /> lists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbe4d-201">`parts`列表可以为空或`null`如果`relationshipSelectors`包含至少一个条目。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-201">The `parts` list can be empty or `null` if `relationshipSelectors` contains at least one entry.</span></span>  
  
 <span data-ttu-id="bbe4d-202">`relationshipSelectors`列表可以为空或`null`如果`parts`包含至少一个条目。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-202">The `relationshipSelectors` list can be empty or `null` if `parts` contains at least one entry.</span></span>  
  
 <span data-ttu-id="bbe4d-203">之间`parts`列表和`relationshipSelectors`必须有至少一个元素进行签名。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-203">Between the `parts` list and `relationshipSelectors` there must be at least one element to sign.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbe4d-204">下面的示例演示如何进行数字签名对包部件的列表。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-204">The following example shows how to digitally sign a list of package parts.</span></span>  <span data-ttu-id="bbe4d-205">有关完整的示例，请参阅[使用数字签名示例创建一个包](http://go.microsoft.com/fwlink/?LinkID=159966)。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-205">For the complete sample, see the [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).</span></span>  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bbe4d-206"><paramref name="parts" /> 和 <paramref name="relationshipSelectors" /> 均不指定任何要签名的元素。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-206">Neither <paramref name="parts" /> nor <paramref name="relationshipSelectors" /> specify any elements to sign.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId, System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.DataObject&gt; signatureObjects, System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.Reference&gt; objectReferences);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Cryptography.Xml.DataObject&gt; signatureObjects, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Cryptography.Xml.Reference&gt; objectReferences) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri), certificate As X509Certificate, relationshipSelectors As IEnumerable(Of PackageRelationshipSelector), signatureId As String, signatureObjects As IEnumerable(Of DataObject), objectReferences As IEnumerable(Of Reference)) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts, System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, System::Collections::Generic::IEnumerable&lt;System::IO::Packaging::PackageRelationshipSelector ^&gt; ^ relationshipSelectors, System::String ^ signatureId, System::Collections::Generic::IEnumerable&lt;System::Security::Cryptography::Xml::DataObject ^&gt; ^ signatureObjects, System::Collections::Generic::IEnumerable&lt;System::Security::Cryptography::Xml::Reference ^&gt; ^ objectReferences);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="relationshipSelectors" Type="System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt;" />
        <Parameter Name="signatureId" Type="System.String" />
        <Parameter Name="signatureObjects" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.DataObject&gt;" />
        <Parameter Name="objectReferences" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.Reference&gt;" />
      </Parameters>
      <Docs>
        <param name="parts"><span data-ttu-id="bbe4d-207">要签名的 <see cref="T:System.IO.Packaging.PackagePart" /> 对象的 [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] 列表。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-207">The list of [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] for the <see cref="T:System.IO.Packaging.PackagePart" /> objects to sign.</span></span></param>
        <param name="certificate"><span data-ttu-id="bbe4d-208">用于对每个指定部件和关系进行数字签名的 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-208">The X.509 certificate to use to digitally sign each of the specified parts and relationships.</span></span></param>
        <param name="relationshipSelectors"><span data-ttu-id="bbe4d-209">要签名的 <see cref="T:System.IO.Packaging.PackageRelationship" /> 对象列表。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-209">The list of <see cref="T:System.IO.Packaging.PackageRelationship" /> objects to sign.</span></span></param>
        <param name="signatureId"><span data-ttu-id="bbe4d-210">要与签名关联的标识字符串。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-210">An identification string to associate with the signature.</span></span></param>
        <param name="signatureObjects"><span data-ttu-id="bbe4d-211">要签名的自定义数据对象的列表。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-211">A list of custom data objects to sign.</span></span></param>
        <param name="objectReferences"><span data-ttu-id="bbe4d-212">要签名的自定义对象的引用列表。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-212">A list of references to custom objects to sign.</span></span></param>
        <summary><span data-ttu-id="bbe4d-213">使用指定的 X.509 证书和签名 [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] 对包部件、包关系或自定义对象的列表进行签名。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-213">Signs a list of package parts, package relationships, or custom objects with a specified X.509 certificate and signature [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)].</span></span></summary>
        <returns><span data-ttu-id="bbe4d-214">用于对在 <paramref name="parts" /> 和 <paramref name="relationshipSelectors" /> 列表中指定的元素进行签名的数字签名。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-214">The digital signature used to sign the elements specified in the <paramref name="parts" /> and <paramref name="relationshipSelectors" /> lists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbe4d-215">必须有至少一个元素登录`parts`， `relationshipSelectors`， `signatureObjects`，或`objectReferences`。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-215">There must be at least one element to sign in `parts`, `relationshipSelectors`, `signatureObjects`, or `objectReferences`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bbe4d-216">条款`Object`， `Manifest`， `Reference`， `SignatureProperties`，和`Transform`以下两个 remarks 指元素类型和 W3C XML 签名语法和处理规范所定义的标记，请参阅[ https://www.w3.org/TR/xmldsig-core/](https://www.w3.org/TR/xmldsig-core/).</span><span class="sxs-lookup"><span data-stu-id="bbe4d-216">The terms `Object`, `Manifest`, `Reference`, `SignatureProperties`, and `Transform` in the following two remarks refer to element types and tags defined by the W3C XML-Signature Syntax and Processing specification, see [https://www.w3.org/TR/xmldsig-core/](https://www.w3.org/TR/xmldsig-core/).</span></span>  
  
 <span data-ttu-id="bbe4d-217">此和其他<xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>方法重载使用当前<xref:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping%2A>定义的字典`Transform`将基于此包部件<xref:System.IO.Packaging.PackagePart.ContentType%2A>。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-217">This and other <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> method overloads use the current <xref:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping%2A> dictionary that defines a `Transform` to apply based on the package part <xref:System.IO.Packaging.PackagePart.ContentType%2A>.</span></span>  <span data-ttu-id="bbe4d-218">Microsoft 开放式打包约定 (OPC) 规范当前允许仅两个有效`Transform`算法： C14 和 C14N。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-218">The Microsoft Open Packaging Conventions (OPC) specification currently allows only two valid `Transform` algorithms: C14 and C14N.</span></span>  <span data-ttu-id="bbe4d-219">W3C XML 签名语法和处理标准不允许空`Manifest`标记。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-219">The W3C XML-Signature Syntax and Processing standard does not allow empty `Manifest` tags.</span></span>  <span data-ttu-id="bbe4d-220">开放式打包约定规范还要求<xref:System.IO.Packaging.Package>-特定`Object`同时包含的标记`Manifest`和`SignatureProperties`标记。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-220">Also the Open Packaging Conventions specification requires a <xref:System.IO.Packaging.Package>-specific `Object` tag that contains both `Manifest` and `SignatureProperties` tags.</span></span>  <span data-ttu-id="bbe4d-221">每个`Manifest`标记另外还包含至少一个`Reference`标记。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-221">Each `Manifest` tag additionally also include at least one `Reference` tag.</span></span>  <span data-ttu-id="bbe4d-222">这些标记要求至少一个，对每个签名<xref:System.IO.Packaging.PackagePart>（非空部分标记） 或<xref:System.IO.Packaging.PackageRelationship>(非空`relationshipSelectors`) 即使需要将该签名只是为了登录`signatureObjects`或`objectReferences`。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-222">These tags require that each signature sign at least one <xref:System.IO.Packaging.PackagePart> (non-empty parts tag) or <xref:System.IO.Packaging.PackageRelationship> (non-empty `relationshipSelectors`) even if the signature is needed only to sign `signatureObjects` or `objectReferences`.</span></span>  
  
 <span data-ttu-id="bbe4d-223">这<xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>方法将忽略<xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A>与每个关联属性<xref:System.Security.Cryptography.Xml.Reference>中定义`objectReferences`。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-223">This <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> method ignores the <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A> property associated with each <xref:System.Security.Cryptography.Xml.Reference> defined in `objectReferences`.</span></span>  
  
 <span data-ttu-id="bbe4d-224">这<xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>重载提供了对生成的支持[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]需要自定义的签名`Object`标记。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-224">This <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> overload provides support for generation of [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] signatures that require custom `Object` tags.</span></span>  <span data-ttu-id="bbe4d-225">对于所提供的`Object`标记来进行了签名，相应`Reference`标记必须提供了[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]，它指定`Object`本地片段语法中的标记。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-225">For any provided `Object` tag to be signed, a corresponding `Reference` tag must be provided with a [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] that specifies the `Object` tag in local fragment syntax.</span></span>  <span data-ttu-id="bbe4d-226">例如如果`Object`标记具有 ID 为"myObject"中的 URI`Reference`标记将"#myObject"。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-226">For example if the `Object` tag has an ID of "myObject", the URI in the `Reference` tag would be "#myObject".</span></span>  <span data-ttu-id="bbe4d-227">对于未签名对象，不`Reference`是必需的。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-227">For unsigned objects, no `Reference` is required.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bbe4d-228"><paramref name="parts" />、<paramref name="relationshipSelectors" />、<paramref name="signatureObjects" /> 或 <paramref name="objectReferences" /> 均不指定任何要签名的元素。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-228">Neither <paramref name="parts" />, <paramref name="relationshipSelectors" />, <paramref name="signatureObjects" />, nor <paramref name="objectReferences" /> specify any elements to sign.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bbe4d-229">被签名的部件的 <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> 引用一个空的、<see langword="null" /> 或未定义的 <see cref="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" />。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-229">A <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> of a part being signed references an empty, <see langword="null" />, or undefined <see cref="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" />.</span></span></exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="bbe4d-230"><paramref name="signatureId" /> 不是 <see langword="null" />，也不是有效 [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] 架构 ID（例如，它以前导数字开头）。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-230"><paramref name="signatureId" /> is not <see langword="null" /> and is not a valid [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] schema ID (for example, begins with a leading numeric digit).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SignatureOrigin">
      <MemberSignature Language="C#" Value="public Uri SignatureOrigin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SignatureOrigin" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureOrigin As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SignatureOrigin { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbe4d-231">获取签名源部件的 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-231">Gets the [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the signature origin part.</span></span></summary>
        <value><span data-ttu-id="bbe4d-232">签名源部件的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-232">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the signature origin part.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbe4d-233"><xref:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin%2A> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]可能会因包，因为未正式定义的名称。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-233">The <xref:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin%2A> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] can vary by package because the name is not formally defined.</span></span> <span data-ttu-id="bbe4d-234">虽然此实现通常将使用相同的默认值，此属性返回的值将反映任何源已存在，则在当前<xref:System.IO.Packaging.Package>。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-234">While this implementation will generally use the same default value, the value returned by this property will reflect whatever origin is already present in the current <xref:System.IO.Packaging.Package>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureOriginRelationshipType">
      <MemberSignature Language="C#" Value="public static string SignatureOriginRelationshipType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SignatureOriginRelationshipType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SignatureOriginRelationshipType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ SignatureOriginRelationshipType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbe4d-235">获取默认签名源关系的类型。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-235">Gets the type of default signature origin relationship.</span></span></summary>
        <value><span data-ttu-id="bbe4d-236">默认签名源关系的类型。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-236">The type of default signature origin relationship.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Signatures">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Packaging.PackageDigitalSignature&gt; Signatures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IO.Packaging.PackageDigitalSignature&gt; Signatures" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.Signatures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Signatures As ReadOnlyCollection(Of PackageDigitalSignature)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Packaging::PackageDigitalSignature ^&gt; ^ Signatures { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Packaging::PackageDigitalSignature ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Packaging.PackageDigitalSignature&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbe4d-237">获取包中包含的所有签名的集合。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-237">Gets a collection of all the signatures contained in the package.</span></span></summary>
        <value><span data-ttu-id="bbe4d-238">所有 <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-238">A collection of all the <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> objects.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeFormat">
      <MemberSignature Language="C#" Value="public string TimeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TimeFormat" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TimeFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbe4d-239">获取或设置用于创建签名 <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" /> 的日期/时间格式。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-239">Gets or sets the date/time format used to create a signature <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</span></span></summary>
        <value><span data-ttu-id="bbe4d-240">用于创建签名 <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" /> 的日期/时间格式。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-240">The date/time format used to create a signature <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbe4d-241">默认值<xref:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat%2A>是"YYYY MM DDThh:mm:ss.sTZD"。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-241">The default <xref:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat%2A> is "YYYY-MM-DDThh:mm:ss.sTZD".</span></span>  
  
 <span data-ttu-id="bbe4d-242">日期/时间格式遵循在的"W3C 日期和时间格式"规范的语法[ http://www.w3.org/TR/Note-datetime.html ](http://www.w3.org/TR/Note-datetime.html)。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-242">Date/time formats follow the syntax of the "W3C Date and Time Formats" specification at [http://www.w3.org/TR/Note-datetime.html](http://www.w3.org/TR/Note-datetime.html).</span></span> <span data-ttu-id="bbe4d-243">下面显示的组件必须存在，且使用的语法和标点定义。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-243">The components shown below must be present and use the syntax and punctuation as defined.</span></span>  
  
|<span data-ttu-id="bbe4d-244">TimeFormat</span><span class="sxs-lookup"><span data-stu-id="bbe4d-244">TimeFormat</span></span>|<span data-ttu-id="bbe4d-245">描述</span><span class="sxs-lookup"><span data-stu-id="bbe4d-245">Description</span></span>|<span data-ttu-id="bbe4d-246">示例</span><span class="sxs-lookup"><span data-stu-id="bbe4d-246">Example</span></span>|  
|----------------|-----------------|-------------|  
|<span data-ttu-id="bbe4d-247">YYYY</span><span class="sxs-lookup"><span data-stu-id="bbe4d-247">YYYY</span></span>|<span data-ttu-id="bbe4d-248">年</span><span class="sxs-lookup"><span data-stu-id="bbe4d-248">Year</span></span>|<span data-ttu-id="bbe4d-249">2005</span><span class="sxs-lookup"><span data-stu-id="bbe4d-249">2005</span></span>|  
|<span data-ttu-id="bbe4d-250">YYYY MM</span><span class="sxs-lookup"><span data-stu-id="bbe4d-250">YYYY-MM</span></span>|<span data-ttu-id="bbe4d-251">年份和月份</span><span class="sxs-lookup"><span data-stu-id="bbe4d-251">Year and month</span></span>|<span data-ttu-id="bbe4d-252">2005-07</span><span class="sxs-lookup"><span data-stu-id="bbe4d-252">2005-07</span></span>|  
|<span data-ttu-id="bbe4d-253">YYYY-MM-DD</span><span class="sxs-lookup"><span data-stu-id="bbe4d-253">YYYY-MM-DD</span></span>|<span data-ttu-id="bbe4d-254">完成日期</span><span class="sxs-lookup"><span data-stu-id="bbe4d-254">Complete date</span></span>|<span data-ttu-id="bbe4d-255">2005-07-28</span><span class="sxs-lookup"><span data-stu-id="bbe4d-255">2005-07-28</span></span>|  
|<span data-ttu-id="bbe4d-256">YYYY-MM-DDThh:mmTZD</span><span class="sxs-lookup"><span data-stu-id="bbe4d-256">YYYY-MM-DDThh:mmTZD</span></span>|<span data-ttu-id="bbe4d-257">完成日期加上小时和分钟数</span><span class="sxs-lookup"><span data-stu-id="bbe4d-257">Complete date plus hours and minutes</span></span>|<span data-ttu-id="bbe4d-258">2005-07-28T19:20-01:00</span><span class="sxs-lookup"><span data-stu-id="bbe4d-258">2005-07-28T19:20-01:00</span></span>|  
|<span data-ttu-id="bbe4d-259">YYYY-MM-DDThh:mm:ssTZD</span><span class="sxs-lookup"><span data-stu-id="bbe4d-259">YYYY-MM-DDThh:mm:ssTZD</span></span>|<span data-ttu-id="bbe4d-260">完成日期加上小时、 分钟和秒</span><span class="sxs-lookup"><span data-stu-id="bbe4d-260">Complete date plus hours, minutes, and seconds</span></span>|<span data-ttu-id="bbe4d-261">2005-07-28T19:20:45-01:00</span><span class="sxs-lookup"><span data-stu-id="bbe4d-261">2005-07-28T19:20:45-01:00</span></span>|  
|<span data-ttu-id="bbe4d-262">YYYY-MM-DDThh:mm:ss.sTZD</span><span class="sxs-lookup"><span data-stu-id="bbe4d-262">YYYY-MM-DDThh:mm:ss.sTZD</span></span>|<span data-ttu-id="bbe4d-263">完成日期加上小时、 分钟和秒用小数部分</span><span class="sxs-lookup"><span data-stu-id="bbe4d-263">Complete date plus hours, minutes, and seconds with a decimal fraction</span></span>|<span data-ttu-id="bbe4d-264">2005-07-28T19:20:45.75-01:00</span><span class="sxs-lookup"><span data-stu-id="bbe4d-264">2005-07-28T19:20:45.75-01:00</span></span>|  
  
 <span data-ttu-id="bbe4d-265">其中：</span><span class="sxs-lookup"><span data-stu-id="bbe4d-265">where:</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="bbe4d-266">YYYY</span><span class="sxs-lookup"><span data-stu-id="bbe4d-266">YYYY</span></span>|<span data-ttu-id="bbe4d-267">四位数年份 (例如 2005)</span><span class="sxs-lookup"><span data-stu-id="bbe4d-267">four-digit year (for example 2005)</span></span>|  
|<span data-ttu-id="bbe4d-268">MM</span><span class="sxs-lookup"><span data-stu-id="bbe4d-268">MM</span></span>|<span data-ttu-id="bbe4d-269">两位数月份 (01 = 年 1 月)</span><span class="sxs-lookup"><span data-stu-id="bbe4d-269">two-digit month (01=January)</span></span>|  
|<span data-ttu-id="bbe4d-270">DD</span><span class="sxs-lookup"><span data-stu-id="bbe4d-270">DD</span></span>|<span data-ttu-id="bbe4d-271">两位数的日期的月份 (01 到 31)</span><span class="sxs-lookup"><span data-stu-id="bbe4d-271">two-digit day of month (01 through 31)</span></span>|  
|<span data-ttu-id="bbe4d-272">Thh</span><span class="sxs-lookup"><span data-stu-id="bbe4d-272">Thh</span></span>|<span data-ttu-id="bbe4d-273">两位数小时 (从 00 到 23，24 小时制)</span><span class="sxs-lookup"><span data-stu-id="bbe4d-273">two-digit hour (00 through 23, 24-hour time)</span></span>|  
|<span data-ttu-id="bbe4d-274">mm</span><span class="sxs-lookup"><span data-stu-id="bbe4d-274">mm</span></span>|<span data-ttu-id="bbe4d-275">两位数分钟 (00 到 59)</span><span class="sxs-lookup"><span data-stu-id="bbe4d-275">two digits of minutes (00 through 59)</span></span>|  
|<span data-ttu-id="bbe4d-276">ss</span><span class="sxs-lookup"><span data-stu-id="bbe4d-276">ss</span></span>|<span data-ttu-id="bbe4d-277">两位数秒 (00 到 59)</span><span class="sxs-lookup"><span data-stu-id="bbe4d-277">two digits of seconds (00 through 59)</span></span>|  
|<span data-ttu-id="bbe4d-278">秒</span><span class="sxs-lookup"><span data-stu-id="bbe4d-278">s</span></span>|<span data-ttu-id="bbe4d-279">一个或多个数字表示的小数值的第二个</span><span class="sxs-lookup"><span data-stu-id="bbe4d-279">one or more digits representing a decimal fracion of a second</span></span>|  
|<span data-ttu-id="bbe4d-280">TZD</span><span class="sxs-lookup"><span data-stu-id="bbe4d-280">TZD</span></span>|<span data-ttu-id="bbe4d-281">时区指示符 (Z 或 + hh: mm 或-hh: mm)</span><span class="sxs-lookup"><span data-stu-id="bbe4d-281">time zone designator (Z or +hh:mm or -hh:mm)</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />
      </Docs>
    </Member>
    <Member MemberName="TransformMapping">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;string,string&gt; TransformMapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, string&gt; TransformMapping" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransformMapping As Dictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::String ^, System::String ^&gt; ^ TransformMapping { System::Collections::Generic::Dictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbe4d-282">获取一个字典，其中包含每个定义的 <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> 及其关联 [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /></span><span class="sxs-lookup"><span data-stu-id="bbe4d-282">Gets a dictionary that contains each defined <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> and its associated [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /></span></span> <span data-ttu-id="bbe4d-283">标识符。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-283">identifier.</span></span></summary>
        <value><span data-ttu-id="bbe4d-284">一个字典，其中包含每个定义<see cref="P:System.IO.Packaging.PackagePart.ContentType" />及其关联[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] <see cref="T:System.Security.Cryptography.Xml.Transform" />。<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /></span><span class="sxs-lookup"><span data-stu-id="bbe4d-284">A dictionary that contains each defined <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> and its associated [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /></span></span> <span data-ttu-id="bbe4d-285">标识符。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-285">identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbe4d-286">在登录操作过程中每个内容类型的关联的转换算法应用之前<xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>执行。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-286">During a sign operation the associated transform algorithm for each content type is applied before the <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> is executed.</span></span>  
  
 <span data-ttu-id="bbe4d-287">默认内容和转换映射包括：</span><span class="sxs-lookup"><span data-stu-id="bbe4d-287">Default content and transform mappings include:</span></span>  
  
|<span data-ttu-id="bbe4d-288">内容</span><span class="sxs-lookup"><span data-stu-id="bbe4d-288">Content</span></span>|<span data-ttu-id="bbe4d-289">ContentType</span><span class="sxs-lookup"><span data-stu-id="bbe4d-289">ContentType</span></span>|<span data-ttu-id="bbe4d-290">转换算法标识符</span><span class="sxs-lookup"><span data-stu-id="bbe4d-290">Transform algorithm identifier</span></span>|  
|-------------|-----------------|------------------------------------|  
|<span data-ttu-id="bbe4d-291">关系</span><span class="sxs-lookup"><span data-stu-id="bbe4d-291">Relationship</span></span>|<span data-ttu-id="bbe4d-292">"application/vnd.openxmlformats-package.relationships+xml"</span><span class="sxs-lookup"><span data-stu-id="bbe4d-292">"application/vnd.openxmlformats-package.relationships+xml"</span></span>|<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>|  
|<span data-ttu-id="bbe4d-293">数字签名</span><span class="sxs-lookup"><span data-stu-id="bbe4d-293">Digital Signature</span></span>|<span data-ttu-id="bbe4d-294">"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml"</span><span class="sxs-lookup"><span data-stu-id="bbe4d-294">"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml"</span></span>|<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyCertificate">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ChainStatusFlags VerifyCertificate (System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ChainStatusFlags VerifyCertificate(class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyCertificate (certificate As X509Certificate) As X509ChainStatusFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ChainStatusFlags VerifyCertificate(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ChainStatusFlags</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="certificate"><span data-ttu-id="bbe4d-295">要验证的 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-295">The X.509 certificate to verify.</span></span></param>
        <summary><span data-ttu-id="bbe4d-296">验证给定的 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-296">Verifies a given X.509 certificate.</span></span></summary>
        <returns>
          <span data-ttu-id="bbe4d-297">如果证书验证成功，则为 <see cref="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError" />（值 0）；否则，为错误标志的按位枚举。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-297"><see cref="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError" /> (value 0) if the certificate verified successfully; otherwise, a bitwise enumeration of error flags.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="VerifySignatures">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.VerifyResult VerifySignatures (bool exitOnFailure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.IO.Packaging.VerifyResult VerifySignatures(bool exitOnFailure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifySignatures (exitOnFailure As Boolean) As VerifyResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::VerifyResult VerifySignatures(bool exitOnFailure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.VerifyResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exitOnFailure" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="exitOnFailure">
          <span data-ttu-id="bbe4d-298">如果首次失败时退出，则为 <see langword="true" />；如果要继续检查所有签名，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-298"><see langword="true" /> to exit on first failure; otherwise, <see langword="false" /> to continue and check all signatures.</span></span></param>
        <summary><span data-ttu-id="bbe4d-299">验证包内所有已签名部件上的签名。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-299">Verifies the signatures on all signed parts within the package.</span></span></summary>
        <returns>
          <span data-ttu-id="bbe4d-300">如果成功验证了所有签名，则为 <see cref="F:System.IO.Packaging.VerifyResult.Success" />（值 0）；否则，为标识错误的枚举。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-300"><see cref="F:System.IO.Packaging.VerifyResult.Success" /> (value 0) if all signatures are verified successfully; otherwise, an enumeration that identifies the error.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbe4d-301">此方法验证仅数字签名;它不验证相关的 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-301">This method verifies only the digital signatures; it does not verify the related X.509 certificates.</span></span>  <span data-ttu-id="bbe4d-302"><xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate%2A>方法可以用于验证的 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-302">The <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate%2A> method can be used to verify the X.509 certificates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbe4d-303">下面的示例演示如何使用此方法来验证在包中的所有已签名的部件。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-303">The following example shows how to use this method to validate all signed parts within a package.</span></span>  <span data-ttu-id="bbe4d-304">有关完整的示例，请参阅[使用数字签名示例创建一个包](http://go.microsoft.com/fwlink/?LinkID=159966)。</span><span class="sxs-lookup"><span data-stu-id="bbe4d-304">For the complete sample, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).</span></span>  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigvalidate)]
 [!code-vb[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigvalidate)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" />
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)" />
        <altmember cref="T:System.IO.Packaging.InvalidSignatureEventHandler" />
      </Docs>
    </Member>
  </Members>
</Type>