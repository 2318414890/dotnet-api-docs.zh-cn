<Type Name="Package" FullName="System.IO.Packaging.Package">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="47bfb470c0f03f400e2a52bbf4de6db097f9ed49" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46645055" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Package : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Package extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.Package" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Package&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Package abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type Package = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="27fcf-101">表示一个可以存储多个数据对象的容器。</span>
      <span class="sxs-lookup">
        <span data-stu-id="27fcf-101">Represents a container that can store multiple data objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-102"><xref:System.IO.Packaging.Package> 是一个抽象类，可用于将对象组织到可移植性和高效访问定义的物理格式的单个实体。</span><span class="sxs-lookup"><span data-stu-id="27fcf-102"><xref:System.IO.Packaging.Package> is an abstract class that can be used to organize objects into a single entity of a defined physical format for portability and efficient access.</span></span>  
  
 <span data-ttu-id="27fcf-103">ZIP 文件是物理的主要格式<xref:System.IO.Packaging.Package>。</span><span class="sxs-lookup"><span data-stu-id="27fcf-103">A ZIP file is the primary physical format for the <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="27fcf-104">其他<xref:System.IO.Packaging.Package>实现可能使用其他物理格式，如 XML 文档时，数据库，或 Web 服务。</span><span class="sxs-lookup"><span data-stu-id="27fcf-104">Other <xref:System.IO.Packaging.Package> implementations might use other physical formats such as an XML document, a database, or Web service.</span></span>  
  
 <span data-ttu-id="27fcf-105">与文件系统，类似的项包含在<xref:System.IO.Packaging.Package>中分层组织文件夹和文件的引用。</span><span class="sxs-lookup"><span data-stu-id="27fcf-105">Like a file system, items contained in a <xref:System.IO.Packaging.Package> are referenced in a hierarchical organization of folders and files.</span></span>  
  
 <span data-ttu-id="27fcf-106">尽管<xref:System.IO.Packaging.Package>本身是一个抽象类，<xref:System.IO.Packaging.ZipPackage>派生的类用作默认情况下<xref:System.IO.Packaging.Package.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="27fcf-106">Although <xref:System.IO.Packaging.Package> itself is an abstract class, the <xref:System.IO.Packaging.ZipPackage> derived class is used as default by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="27fcf-107">一个<xref:System.IO.Packaging.PackagePart>（"部件"） 是表示存储在一个对象的抽象类<xref:System.IO.Packaging.Package>。</span><span class="sxs-lookup"><span data-stu-id="27fcf-107">A <xref:System.IO.Packaging.PackagePart> ("part") is the abstract class that represents an object that is stored in a <xref:System.IO.Packaging.Package>.</span></span>  
  
 <span data-ttu-id="27fcf-108">一个<xref:System.IO.Packaging.PackageRelationship>（"关系"） 定义一个源之间的关联<xref:System.IO.Packaging.Package>或<xref:System.IO.Packaging.PackagePart>和目标对象。</span><span class="sxs-lookup"><span data-stu-id="27fcf-108">A <xref:System.IO.Packaging.PackageRelationship> ("relationship") defines an association between a source <xref:System.IO.Packaging.Package> or <xref:System.IO.Packaging.PackagePart> and a target object.</span></span>  <span data-ttu-id="27fcf-109">一个<xref:System.IO.Packaging.PackageRelationship>可以是两种类型，其中每个可以是以下两种形式之一：</span><span class="sxs-lookup"><span data-stu-id="27fcf-109">A <xref:System.IO.Packaging.PackageRelationship> can be one of two types, each of which can be one of two forms:</span></span>  
  
-   <span data-ttu-id="27fcf-110">包级别关系 (由<xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=nameWithType>方法) 相关<xref:System.IO.Packaging.Package>为：</span><span class="sxs-lookup"><span data-stu-id="27fcf-110">A package-level relationship (created by the <xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=nameWithType> method) relates a <xref:System.IO.Packaging.Package> to either:</span></span>  
  
    -   <span data-ttu-id="27fcf-111">包中的目标部件。</span><span class="sxs-lookup"><span data-stu-id="27fcf-111">A target part in the package.</span></span>  
  
    -   <span data-ttu-id="27fcf-112">目标包外部的资源。</span><span class="sxs-lookup"><span data-stu-id="27fcf-112">A target resource outside the package.</span></span>  
  
-   <span data-ttu-id="27fcf-113">部件级关系 (由<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=nameWithType>方法) 与源<xref:System.IO.Packaging.PackagePart>为：</span><span class="sxs-lookup"><span data-stu-id="27fcf-113">A part-level relationship (created by the <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=nameWithType> method) relates a source <xref:System.IO.Packaging.PackagePart> to either:</span></span>  
  
    -   <span data-ttu-id="27fcf-114">在包中的另一个目标部件。</span><span class="sxs-lookup"><span data-stu-id="27fcf-114">Another target part in the package.</span></span>  
  
    -   <span data-ttu-id="27fcf-115">目标包外部的资源。</span><span class="sxs-lookup"><span data-stu-id="27fcf-115">A target resource outside the package.</span></span>  
  
 <span data-ttu-id="27fcf-116">关系的源<xref:System.IO.Packaging.Package>或源<xref:System.IO.Packaging.PackagePart>被视为此关系的"所有者"。</span><span class="sxs-lookup"><span data-stu-id="27fcf-116">The relationship's source <xref:System.IO.Packaging.Package> or source <xref:System.IO.Packaging.PackagePart> is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="27fcf-117">删除源对象时，也删除源对象拥有的所有关系。</span><span class="sxs-lookup"><span data-stu-id="27fcf-117">When the source object is deleted, all the relationships owned by the source object are also deleted.</span></span>  <span data-ttu-id="27fcf-118">创建或删除的关系的过程不会以物理方式更改以任何方式的源或目标对象。</span><span class="sxs-lookup"><span data-stu-id="27fcf-118">The process of creating or deleting a relationship does not physically change either the source or target objects in any way.</span></span>  
  
 <span data-ttu-id="27fcf-119">一个<xref:System.IO.Packaging.PackageDigitalSignature>（"数字签名"） 是组合的部件和关系表示数字签名中包含<xref:System.IO.Packaging.Package>。</span><span class="sxs-lookup"><span data-stu-id="27fcf-119">A <xref:System.IO.Packaging.PackageDigitalSignature> ("digital signature") is a composition of parts and relationships representing a digital signature included with a <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="27fcf-120">数字签名标识，发起方，并验证已签名的部件和关系包含在<xref:System.IO.Packaging.Package>尚未修改。</span><span class="sxs-lookup"><span data-stu-id="27fcf-120">The digital signature identifies the originator and validates that the signed parts and relationships contained in the <xref:System.IO.Packaging.Package> have not been modified.</span></span>  
  
 <span data-ttu-id="27fcf-121">包还支持数字版权管理 (DRM)，它允许中的内容元素<xref:System.IO.Packaging.Package>进行加密的经过授权的用户授予特定访问权限。</span><span class="sxs-lookup"><span data-stu-id="27fcf-121">Packages also support Digital Rights Management (DRM) which allows content elements in a <xref:System.IO.Packaging.Package> to be encrypted with specific access rights granted to authorized users.</span></span>  
  
 <span data-ttu-id="27fcf-122">基于<xref:System.IO.Packaging.Package>体系结构中，<xref:System.Windows.Xps.Packaging.XpsDocument>是一种包类型设计用来存储文档基于开放式[XML 纸张规范 (XPS)](http://go.microsoft.com/fwlink/?LinkID=65761)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-122">Based on the <xref:System.IO.Packaging.Package> architecture, an <xref:System.Windows.Xps.Packaging.XpsDocument> is a package type designed for storing documents based on the open [XML Paper Specification (XPS)](http://go.microsoft.com/fwlink/?LinkID=65761).</span></span>  
  
 <span data-ttu-id="27fcf-123">.NET Framework 使用包来存储内容、 资源和页面和文档，默认情况下使用标准 ZIP 文件的关系。</span><span class="sxs-lookup"><span data-stu-id="27fcf-123">The .NET Framework uses packages to store content, resources, and relationships for pages and documents using a standard ZIP file by default.</span></span> <span data-ttu-id="27fcf-124">你的应用程序可以使用任何 ZIP 文件，如<xref:System.IO.Packaging>类来存储，并根据需要保护任何类型或单个有效地访问容器中的数据文件数。</span><span class="sxs-lookup"><span data-stu-id="27fcf-124">As with any ZIP file, your application can use the <xref:System.IO.Packaging> classes to store and optionally protect any type or number of data files in a single efficient-to-access container.</span></span>  
  
 <span data-ttu-id="27fcf-125">有关详细信息，请参阅下载的开放式打包约定 (OPC) 规范[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-125">For more information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27fcf-126">下面的示例演示了创建的基本步骤<xref:System.IO.Packaging.Package>。</span><span class="sxs-lookup"><span data-stu-id="27fcf-126">The following example shows the basic steps for creating a <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="27fcf-127">在此示例中，创建一个包以包含文档和文档的一部分显示的图形图像。</span><span class="sxs-lookup"><span data-stu-id="27fcf-127">In this example, a package is created to contain a document together with a graphic image that is displayed as part of the document.</span></span>  <span data-ttu-id="27fcf-128">(这是类似于在其中具有某一 HTML 文件的情况下\<i m G > 引用外部图像文件的标记。)两个<xref:System.IO.Packaging.PackageRelationship>还包含在包中的元素。</span><span class="sxs-lookup"><span data-stu-id="27fcf-128">(This is similar to the case in which an HTML file has an \<IMG> tag that references an external image file.)  Two <xref:System.IO.Packaging.PackageRelationship> elements are also included in the package.</span></span>  <span data-ttu-id="27fcf-129">第一个"包级"关系，定义作为包的根元素的文档部分。</span><span class="sxs-lookup"><span data-stu-id="27fcf-129">The first, a "package-level" relationship, defines the document part as the package's root element.</span></span>  <span data-ttu-id="27fcf-130">第二个"部件级"的关系定义的文档部分 （"源"的部分级关系） 和其使用的图像部分 （"目标"的部分级关系） 之间的关联。</span><span class="sxs-lookup"><span data-stu-id="27fcf-130">A second, "part-level" relationship defines the association between the document part (the "source" of the part-level relationship) and its use of the image part (the "target" of the part-level relationship).</span></span>  <span data-ttu-id="27fcf-131">有关完整示例，请参阅[写入包的示例](http://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-131">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.PackagePart" />
    <altmember cref="T:System.Windows.Xps.Packaging.XpsDocument" />
    <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkID=71255">
      <span data-ttu-id="27fcf-132">开放式打包约定 (OPC) 规范</span>
      <span class="sxs-lookup">
        <span data-stu-id="27fcf-132">Open Packaging Conventions (OPC) Specification</span>
      </span>
    </related>
    <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=74494">
      <span data-ttu-id="27fcf-133">开放打包约定的数字签名框架</span>
      <span class="sxs-lookup">
        <span data-stu-id="27fcf-133">Digital Signing Framework of the Open Packaging Conventions</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="27fcf-134">初始化 <see cref="T:System.IO.Packaging.Package" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-134">Initializes a new instance of the <see cref="T:System.IO.Packaging.Package" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Package (System.IO.FileAccess openFileAccess);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.FileAccess openFileAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (openFileAccess As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Package(System::IO::FileAccess openFileAccess);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.Package : System.IO.FileAccess -&gt; System.IO.Packaging.Package" Usage="new System.IO.Packaging.Package openFileAccess" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="openFileAccess" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="openFileAccess">
          <span data-ttu-id="27fcf-135">包的文件 IO 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-135">The file IO permissions for the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27fcf-136">初始化使用给定的 <see cref="T:System.IO.Packaging.Package" /> 的 <see cref="T:System.IO.FileAccess" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-136">Initializes a new instance of the <see cref="T:System.IO.Packaging.Package" /> class that uses a given <see cref="T:System.IO.FileAccess" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-137"><xref:System.IO.Packaging.Package.%23ctor%2A> 是一个受保护的构造函数的<xref:System.IO.Packaging.Package>抽象基类。</span><span class="sxs-lookup"><span data-stu-id="27fcf-137"><xref:System.IO.Packaging.Package.%23ctor%2A> is a protected constructor of the <xref:System.IO.Packaging.Package> abstract base class.</span></span> <span data-ttu-id="27fcf-138">在派生类中调用时<xref:System.IO.Packaging.Package.%23ctor%2A>构造函数初始化派生类的新实例。</span><span class="sxs-lookup"><span data-stu-id="27fcf-138">When called in a derived class, the <xref:System.IO.Packaging.Package.%23ctor%2A> constructor initializes a new instance of the derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="27fcf-139">
            <paramref name="openFileAccess" /> 的值无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-139">The value for <paramref name="openFileAccess" /> is not valid.</span>
          </span>
        </exception>
        <altmember cref="P:System.IO.Packaging.Package.FileOpenAccess" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Package (System.IO.FileAccess openFileAccess, bool streaming);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.FileAccess openFileAccess, bool streaming) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (openFileAccess As FileAccess, streaming As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Package(System::IO::FileAccess openFileAccess, bool streaming);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.Package : System.IO.FileAccess * bool -&gt; System.IO.Packaging.Package" Usage="new System.IO.Packaging.Package (openFileAccess, streaming)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="openFileAccess" Type="System.IO.FileAccess" />
        <Parameter Name="streaming" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="openFileAccess">
          <span data-ttu-id="27fcf-140">包的文件 IO 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-140">The file IO permissions for the package.</span>
          </span>
        </param>
        <param name="streaming">
          <span data-ttu-id="27fcf-141">如果打开包以进行流式处理，则为 <see langword="true" />，否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-141">
              <see langword="true" /> to open the package for streaming; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27fcf-142">初始化使用给定 <see cref="T:System.IO.Packaging.Package" /> 和流选项的 <see cref="T:System.IO.FileAccess" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-142">Initializes a new instance of the <see cref="T:System.IO.Packaging.Package" /> class that uses a given <see cref="T:System.IO.FileAccess" /> and streaming option.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-143"><xref:System.IO.Packaging.Package.%23ctor%2A> 是一个受保护的构造函数的<xref:System.IO.Packaging.Package>抽象基类的抽象基类。</span><span class="sxs-lookup"><span data-stu-id="27fcf-143"><xref:System.IO.Packaging.Package.%23ctor%2A> is a protected constructor of the <xref:System.IO.Packaging.Package> abstract base abstract base class.</span></span> <span data-ttu-id="27fcf-144">在派生类中调用时<xref:System.IO.Packaging.Package.%23ctor%2A>构造函数初始化派生类的新实例。</span><span class="sxs-lookup"><span data-stu-id="27fcf-144">When called in a derived class, the <xref:System.IO.Packaging.Package.%23ctor%2A> constructor initializes a new instance of the derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="27fcf-145">
            <paramref name="openFileAccess" /> 的值无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-145">The value for <paramref name="openFileAccess" /> is not valid.</span>
          </span>
        </exception>
        <altmember cref="P:System.IO.Packaging.Package.FileOpenAccess" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="package.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="27fcf-146">保存并关闭包和所有基础部件流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-146">Saves and closes the package plus all underlying part streams.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-147">有关<xref:System.IO.Packaging.Package>类<xref:System.IO.Packaging.Package.Close%2A>并<xref:System.IO.Packaging.Package.Dispose%2A>执行相同的操作 — 没有理由来调用<xref:System.IO.Packaging.Package.Dispose%2A>如果调用<xref:System.IO.Packaging.Package.Close%2A>，或进行相反转换。</span><span class="sxs-lookup"><span data-stu-id="27fcf-147">For the <xref:System.IO.Packaging.Package> class <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> perform the same operation—there is no reason to call <xref:System.IO.Packaging.Package.Dispose%2A> if you call <xref:System.IO.Packaging.Package.Close%2A>, or vice-versa.</span></span>  
  
 <span data-ttu-id="27fcf-148"><xref:System.IO.Packaging.Package.Close%2A> 并<xref:System.IO.Packaging.Package.Dispose%2A>在内部调用<xref:System.IO.Packaging.Package.Flush%2A>。</span><span class="sxs-lookup"><span data-stu-id="27fcf-148"><xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> internally call <xref:System.IO.Packaging.Package.Flush%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="27fcf-149">`using`语句 (不同于`using`命名空间指令) 的建议的方法是<xref:System.IO.Packaging.Package.Close%2A>和<xref:System.IO.Packaging.Package.Dispose%2A>包。</span><span class="sxs-lookup"><span data-stu-id="27fcf-149">The `using` statement (different from the `using` namespace directive) is the recommended way to <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> a package.</span></span>  <span data-ttu-id="27fcf-150">[写入包的示例](http://go.microsoft.com/fwlink/?LinkID=160055)并[读取包的示例](http://go.microsoft.com/fwlink/?LinkID=160034)演示了如何关闭和释放使用的包`using`语句。</span><span class="sxs-lookup"><span data-stu-id="27fcf-150">[Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055) and [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034) show how to close and dispose a package by using the `using` statement.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Packaging.PackagePart" />
        <altmember cref="T:System.IO.Packaging.PackageRelationship" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePart">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="27fcf-151">创建新的包部件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-151">Creates a new package part.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-152"><xref:System.IO.Packaging.Package.CreatePart%2A> 初始化一个空<xref:System.IO.Stream>新部分。</span><span class="sxs-lookup"><span data-stu-id="27fcf-152"><xref:System.IO.Packaging.Package.CreatePart%2A> initializes an empty <xref:System.IO.Stream> for the new part.</span></span>  <span data-ttu-id="27fcf-153"><xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType>方法可用于获取对与部件关联的流实例的引用。</span><span class="sxs-lookup"><span data-stu-id="27fcf-153">The <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> method can be used to obtain a reference to the stream instance associated with the part.</span></span>  
  
 <span data-ttu-id="27fcf-154">有关包部件的详细信息，请参阅部分 1.1 可供下载的开放式打包约定 (OPC) 规范[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-154">For more information about package parts, see section 1.1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27fcf-155">下面的示例演示如何创建一个新<xref:System.IO.Packaging.PackagePart>，然后将数据存储到的部分。</span><span class="sxs-lookup"><span data-stu-id="27fcf-155">The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.</span></span>  <span data-ttu-id="27fcf-156">有关完整示例，请参阅[写入包的示例](http://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-156">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePart](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepart)]
 [!code-vb[PackageWrite#PackageWriteCreatePart](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepart)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="27fcf-157">
              <see cref="Overload:System.IO.Packaging.Package.CreatePart" /> 在内部调用派生的类<see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />方法实际创建部件基于在派生类中实现的物理格式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="27fcf-157">
                <see cref="Overload:System.IO.Packaging.Package.CreatePart" /> internally calls the derived class <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> method to actually create the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePart CreatePart(class System.Uri partUri, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePart (partUri As Uri, contentType As String) As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePart ^ CreatePart(Uri ^ partUri, System::String ^ contentType);" />
      <MemberSignature Language="F#" Value="member this.CreatePart : Uri * string -&gt; System.IO.Packaging.PackagePart" Usage="package.CreatePart (partUri, contentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="27fcf-158">新部件的 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-158">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the new part.</span>
          </span>
        </param>
        <param name="contentType">
          <span data-ttu-id="27fcf-159">数据流的内容类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-159">The content type of the data stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27fcf-160">使用给定的 URI 和内容类型创建新的未压缩部件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-160">Creates a new uncompressed part with a given URI and content type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27fcf-161">新创建的部件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-161">The new created part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-162"><xref:System.IO.Packaging.Package.CreatePart%2A> 初始化一个空<xref:System.IO.Stream>新部分。</span><span class="sxs-lookup"><span data-stu-id="27fcf-162"><xref:System.IO.Packaging.Package.CreatePart%2A> initializes an empty <xref:System.IO.Stream> for the new part.</span></span>  <span data-ttu-id="27fcf-163"><xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType>方法可用于获取对与部件关联的流实例的引用。</span><span class="sxs-lookup"><span data-stu-id="27fcf-163">The <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> method can be used to obtain a reference to the stream instance associated with the part.</span></span>  
  
 <span data-ttu-id="27fcf-164">该部件<xref:System.IO.Packaging.PackagePart.CompressionOption%2A>是<xref:System.IO.Packaging.CompressionOption.NotCompressed?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="27fcf-164">The part <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> is <xref:System.IO.Packaging.CompressionOption.NotCompressed?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="27fcf-165">有关包部件的其他信息，请参阅部分 1.1 中可供下载的开放式打包约定 (OPC) 规范[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-165">For additional information about package parts, see section 1.1 in the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27fcf-166">下面的示例演示如何创建一个新<xref:System.IO.Packaging.PackagePart>，然后将数据存储到的部分。</span><span class="sxs-lookup"><span data-stu-id="27fcf-166">The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.</span></span>  <span data-ttu-id="27fcf-167">有关完整示例，请参阅[写入包的示例](http://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-167">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePart](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepart)]
 [!code-vb[PackageWrite#PackageWriteCreatePart](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepart)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27fcf-168">
            <paramref name="partUri" /> 或 <paramref name="contentType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-168">
              <paramref name="partUri" /> or <paramref name="contentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="27fcf-169">
            <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-169">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="27fcf-170">包中已存在具有指定的 <paramref name="partUri" /> 的部件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-170">A part with the specified <paramref name="partUri" /> is already present in the package.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="27fcf-171">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-171">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="27fcf-172">包为只读的（无法添加新部件）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-172">The package is read-only (a new part cannot be added).</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="27fcf-173">
              <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" /> 在内部调用派生的类的<see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />方法实际创建部件基于在派生类中实现的物理格式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="27fcf-173">
                <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> method to actually create the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <altmember cref="T:System.IO.Packaging.ZipPackagePart" />
      </Docs>
    </Member>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePart CreatePart(class System.Uri partUri, string contentType, valuetype System.IO.Packaging.CompressionOption compressionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePart ^ CreatePart(Uri ^ partUri, System::String ^ contentType, System::IO::Packaging::CompressionOption compressionOption);" />
      <MemberSignature Language="F#" Value="member this.CreatePart : Uri * string * System.IO.Packaging.CompressionOption -&gt; System.IO.Packaging.PackagePart" Usage="package.CreatePart (partUri, contentType, compressionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="compressionOption" Type="System.IO.Packaging.CompressionOption" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="27fcf-174">新部件的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-174">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the new part.</span>
          </span>
        </param>
        <param name="contentType">
          <span data-ttu-id="27fcf-175">数据流的内容类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-175">The content type of the data stream.</span>
          </span>
        </param>
        <param name="compressionOption">
          <span data-ttu-id="27fcf-176">数据流的压缩选项、<see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> 或 <see cref="F:System.IO.Packaging.CompressionOption.Normal" /> 压缩。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-176">The compression option for the data stream, <see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> or <see cref="F:System.IO.Packaging.CompressionOption.Normal" /> compression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27fcf-177">使用给定的 URI、内容类型和压缩选项创建新部件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-177">Creates a new part with a given URI, content type, and compression option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27fcf-178">新创建的部件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-178">The new created part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-179">默认情况下<xref:System.IO.Packaging.ZipPackage>派生的类，<xref:System.IO.Packaging.Package.CreatePart%2A>方法仅支持两个`compressionOption`值，<xref:System.IO.Packaging.CompressionOption.NotCompressed>或<xref:System.IO.Packaging.CompressionOption.Normal>压缩。</span><span class="sxs-lookup"><span data-stu-id="27fcf-179">For the default <xref:System.IO.Packaging.ZipPackage> derived class, the <xref:System.IO.Packaging.Package.CreatePart%2A> method only supports two `compressionOption` values, <xref:System.IO.Packaging.CompressionOption.NotCompressed> or <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  <span data-ttu-id="27fcf-180">其他<xref:System.IO.Packaging.CompressionOption>的值<xref:System.IO.Packaging.CompressionOption.Maximum>， <xref:System.IO.Packaging.CompressionOption.Fast>，或<xref:System.IO.Packaging.CompressionOption.SuperFast>使用<xref:System.IO.Packaging.CompressionOption.Normal>压缩。</span><span class="sxs-lookup"><span data-stu-id="27fcf-180">Other <xref:System.IO.Packaging.CompressionOption> values of <xref:System.IO.Packaging.CompressionOption.Maximum>, <xref:System.IO.Packaging.CompressionOption.Fast>, or <xref:System.IO.Packaging.CompressionOption.SuperFast> use <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  
  
 <span data-ttu-id="27fcf-181"><xref:System.IO.Packaging.Package.CreatePart%2A> 创建一个空<xref:System.IO.Stream>新部分。</span><span class="sxs-lookup"><span data-stu-id="27fcf-181"><xref:System.IO.Packaging.Package.CreatePart%2A> creates an empty <xref:System.IO.Stream> for the new part.</span></span>  <span data-ttu-id="27fcf-182"><xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType>方法可用于获取对与部件关联的流实例的引用。</span><span class="sxs-lookup"><span data-stu-id="27fcf-182">The <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> method can be used to obtain a reference to the stream instance associated with the part.</span></span>  
  
 <span data-ttu-id="27fcf-183">有关其他信息，请参阅下载的开放式打包约定 (OPC) 规范[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-183">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27fcf-184">下面的示例演示如何创建一个新<xref:System.IO.Packaging.PackagePart>，然后将数据存储到的部分。</span><span class="sxs-lookup"><span data-stu-id="27fcf-184">The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.</span></span>  <span data-ttu-id="27fcf-185">有关完整示例，请参阅[写入包的示例](http://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-185">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePart](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepart)]
 [!code-vb[PackageWrite#PackageWriteCreatePart](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepart)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27fcf-186">
            <paramref name="partUri" /> 或 <paramref name="contentType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-186">
              <paramref name="partUri" /> or <paramref name="contentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="27fcf-187">
            <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-187">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="27fcf-188">包中已存在具有指定的 <paramref name="partUri" /> 的部件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-188">A part with the specified <paramref name="partUri" /> is already present in the package.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="27fcf-189">
            <paramref name="compressionOption" /> 值无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-189">The <paramref name="compressionOption" /> value is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="27fcf-190">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-190">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="27fcf-191">包为只读的（无法添加新部件）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-191">The package is read-only (a new part cannot be added).</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="27fcf-192">
              <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> 在内部调用派生的类的<see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />方法实际创建部件基于在派生类中实现的物理格式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="27fcf-192">
                <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> method to actually create the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <altmember cref="T:System.IO.Packaging.ZipPackagePart" />
      </Docs>
    </Member>
    <Member MemberName="CreatePartCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Packaging.PackagePart CreatePartCore (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Packaging.PackagePart CreatePartCore(class System.Uri partUri, string contentType, valuetype System.IO.Packaging.CompressionOption compressionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IO::Packaging::PackagePart ^ CreatePartCore(Uri ^ partUri, System::String ^ contentType, System::IO::Packaging::CompressionOption compressionOption);" />
      <MemberSignature Language="F#" Value="abstract member CreatePartCore : Uri * string * System.IO.Packaging.CompressionOption -&gt; System.IO.Packaging.PackagePart" Usage="package.CreatePartCore (partUri, contentType, compressionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="compressionOption" Type="System.IO.Packaging.CompressionOption" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="27fcf-193">正在创建的部件的 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-193">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] for the part being created.</span>
          </span>
        </param>
        <param name="contentType">
          <span data-ttu-id="27fcf-194">数据流的内容类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-194">The content type of the data stream.</span>
          </span>
        </param>
        <param name="compressionOption">
          <span data-ttu-id="27fcf-195">数据流的压缩选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-195">The compression option for the data stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27fcf-196">在派生类中重写时，会在包中创建一个新部件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-196">When overridden in a derived class, creates a new part in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27fcf-197">创建的部件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-197">The created part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-198">派生<xref:System.IO.Packaging.Package.CreatePartCore%2A>方法由调用<xref:System.IO.Packaging.Package.CreatePart%2A>方法创建的部件基于在派生类中实现的物理格式。</span><span class="sxs-lookup"><span data-stu-id="27fcf-198">The derived <xref:System.IO.Packaging.Package.CreatePartCore%2A> method is called by the <xref:System.IO.Packaging.Package.CreatePart%2A> method to create a part based on the physical format implemented in the derived class.</span></span>  
  
 <span data-ttu-id="27fcf-199">默认情况下<xref:System.IO.Packaging.ZipPackage>派生类实现的抽象<xref:System.IO.Packaging.Package>提供和使用类。</span><span class="sxs-lookup"><span data-stu-id="27fcf-199">By default, a <xref:System.IO.Packaging.ZipPackage> derived class implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="27fcf-200">在默认操作中，<xref:System.IO.Packaging.Package.CreatePart%2A>在内部调用<xref:System.IO.Packaging.Package.CreatePartCore%2A>的<xref:System.IO.Packaging.ZipPackage>类，以 ZIP 文件中创建新的部件。</span><span class="sxs-lookup"><span data-stu-id="27fcf-200">In the default operation, <xref:System.IO.Packaging.Package.CreatePart%2A> internally calls <xref:System.IO.Packaging.Package.CreatePartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to create a new part in a ZIP file.</span></span>  
  
 <span data-ttu-id="27fcf-201">默认情况下<xref:System.IO.Packaging.ZipPackage>派生的类，<xref:System.IO.Packaging.Package.CreatePartCore%2A>方法仅支持两个`compressionOption`值，<xref:System.IO.Packaging.CompressionOption.NotCompressed>或<xref:System.IO.Packaging.CompressionOption.Normal>压缩。</span><span class="sxs-lookup"><span data-stu-id="27fcf-201">For the default <xref:System.IO.Packaging.ZipPackage> derived class, the <xref:System.IO.Packaging.Package.CreatePartCore%2A> method only supports two `compressionOption` values, <xref:System.IO.Packaging.CompressionOption.NotCompressed> or <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  <span data-ttu-id="27fcf-202">其他<xref:System.IO.Packaging.CompressionOption>的值<xref:System.IO.Packaging.CompressionOption.Maximum>， <xref:System.IO.Packaging.CompressionOption.Fast>，或<xref:System.IO.Packaging.CompressionOption.SuperFast>使用<xref:System.IO.Packaging.CompressionOption.Normal>压缩。</span><span class="sxs-lookup"><span data-stu-id="27fcf-202">Other <xref:System.IO.Packaging.CompressionOption> values of <xref:System.IO.Packaging.CompressionOption.Maximum>, <xref:System.IO.Packaging.CompressionOption.Fast>, or <xref:System.IO.Packaging.CompressionOption.SuperFast> use <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  
  
 <span data-ttu-id="27fcf-203">有关包模型和包部件的详细信息，请参阅下载的开放式打包约定 (OPC) 规范的第 1 章[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-203">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="27fcf-204">派生<see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />实现应作出任何假设订单或由执行的操作<see cref="Overload:System.IO.Packaging.Package.CreatePart" />调用它的方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="27fcf-204">The derived <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> implementation should make no assumptions about the order or operations performed by the <see cref="Overload:System.IO.Packaging.Package.CreatePart" /> method that calls it.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateRelationship">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="27fcf-205">创建与给定的部件的包级别关系。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-205">Creates a package-level relationship to a given part.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-206">包级别关系定义包和关联的目标部件或资源之间的关联。</span><span class="sxs-lookup"><span data-stu-id="27fcf-206">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="27fcf-207">包级别关系可以是两种形式之一。</span><span class="sxs-lookup"><span data-stu-id="27fcf-207">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="27fcf-208">之间<xref:System.IO.Packaging.Package>到目标<xref:System.IO.Packaging.PackagePart>包内。</span><span class="sxs-lookup"><span data-stu-id="27fcf-208">Between a <xref:System.IO.Packaging.Package> to a target <xref:System.IO.Packaging.PackagePart> inside the package.</span></span>  
  
-   <span data-ttu-id="27fcf-209">之间<xref:System.IO.Packaging.Package>到包外部的目标资源。</span><span class="sxs-lookup"><span data-stu-id="27fcf-209">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="27fcf-210">包关系中包被视为此关系的"所有者"。</span><span class="sxs-lookup"><span data-stu-id="27fcf-210">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="27fcf-211">当删除包时，还删除拥有的包的所有关系。</span><span class="sxs-lookup"><span data-stu-id="27fcf-211">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  <span data-ttu-id="27fcf-212">创建或删除关系的过程不会以物理方式更改目标部件或以任何方式的资源。</span><span class="sxs-lookup"><span data-stu-id="27fcf-212">The process of creating or deleting the relationship does not physically alter the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="27fcf-213">有关其他信息，请参阅下载的开放式打包约定 (OPC) 规范[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-213">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27fcf-214">下面的示例说明了如何创建<xref:System.IO.Packaging.PackageRelationship>之间<xref:System.IO.Packaging.Package>和根文档部分。</span><span class="sxs-lookup"><span data-stu-id="27fcf-214">The following example illustrates creating a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.</span></span>  <span data-ttu-id="27fcf-215">有关完整示例，请参阅[写入包的示例](http://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-215">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackageRelationship](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackagerelationship)]
 [!code-vb[PackageWrite#PackageWriteCreatePackageRelationship](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackagerelationship)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship CreateRelationship(class System.Uri targetUri, valuetype System.IO.Packaging.TargetMode targetMode, string relationshipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ CreateRelationship(Uri ^ targetUri, System::IO::Packaging::TargetMode targetMode, System::String ^ relationshipType);" />
      <MemberSignature Language="F#" Value="member this.CreateRelationship : Uri * System.IO.Packaging.TargetMode * string -&gt; System.IO.Packaging.PackageRelationship" Usage="package.CreateRelationship (targetUri, targetMode, relationshipType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetUri" Type="System.Uri" />
        <Parameter Name="targetMode" Type="System.IO.Packaging.TargetMode" />
        <Parameter Name="relationshipType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetUri">
          <span data-ttu-id="27fcf-216">目标部件的 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-216">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the target part.</span>
          </span>
        </param>
        <param name="targetMode">
          <span data-ttu-id="27fcf-217">指示目标部件对包来说是 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 还是 <see cref="F:System.IO.Packaging.TargetMode.External" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-217">Indicates if the target part is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> or <see cref="F:System.IO.Packaging.TargetMode.External" /> to the package.</span>
          </span>
        </param>
        <param name="relationshipType">
          <span data-ttu-id="27fcf-218">唯一定义关系的角色的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-218">A URI that uniquely defines the role of the relationship.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27fcf-219">使用给定的 URI、目标模式和关系类型创建与部件的包级别关系。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-219">Creates a package-level relationship to a part with a given URI, target mode, and relationship type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27fcf-220">与指定部件的包级别关系。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-220">The package-level relationship to the specified part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-221">包级别关系定义包和关联的目标部件或资源之间的关联。</span><span class="sxs-lookup"><span data-stu-id="27fcf-221">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="27fcf-222">包级别关系可以是两种形式之一。</span><span class="sxs-lookup"><span data-stu-id="27fcf-222">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="27fcf-223">之间<xref:System.IO.Packaging.Package>指向目标部件在包中。</span><span class="sxs-lookup"><span data-stu-id="27fcf-223">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="27fcf-224">之间<xref:System.IO.Packaging.Package>到包外部的目标资源。</span><span class="sxs-lookup"><span data-stu-id="27fcf-224">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="27fcf-225">包关系中包被视为此关系的"所有者"。</span><span class="sxs-lookup"><span data-stu-id="27fcf-225">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="27fcf-226">当删除包时，还删除拥有的包的所有关系。</span><span class="sxs-lookup"><span data-stu-id="27fcf-226">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  
  
 <span data-ttu-id="27fcf-227"><xref:System.IO.Packaging.Package.CreateRelationship%2A> 不会以物理方式更改目标部件或以任何方式的资源。</span><span class="sxs-lookup"><span data-stu-id="27fcf-227"><xref:System.IO.Packaging.Package.CreateRelationship%2A> does not physically change the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="27fcf-228">关系的目标不能为另一个关系。</span><span class="sxs-lookup"><span data-stu-id="27fcf-228">The target of a relationship cannot be another relationship.</span></span>  
  
 <span data-ttu-id="27fcf-229">如果`targetMode`指定为<xref:System.IO.Packaging.TargetMode.Internal>，`targetUri`必须是相对 URI 的格式根据[RFC 3986](http://tools.ietf.org/html/rfc3986)统一资源标识符 (URI) 的通用语法规范。</span><span class="sxs-lookup"><span data-stu-id="27fcf-229">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.Internal>, `targetUri` must be a relative URI that is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="27fcf-230">内部的相对 URI 可以是任一绝对路径开头的正斜杠 （"/"） 字符如"/ page1.xaml"或"/ images/picture4.jpg"，或相对路径，如".../ imagespicture1.jpg"可解析对包根目录 （"/"） 作为基 URI。</span><span class="sxs-lookup"><span data-stu-id="27fcf-230">The internal relative URI can be either an absolute path that starts with a forward slash ("/") character such as "/page1.xaml" or "/images/picture4.jpg", or a relative path such as "../imagespicture1.jpg" that resolves against the package root ("/") as the base URI.</span></span>  
  
 <span data-ttu-id="27fcf-231">如果`targetMode`指定为<xref:System.IO.Packaging.TargetMode.External>，`targetUri`可以是任一绝对或相对 URI 的格式正确根据[RFC 3986](http://tools.ietf.org/html/rfc3986)统一资源标识符 (URI) 的通用语法规范。</span><span class="sxs-lookup"><span data-stu-id="27fcf-231">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.External>, `targetUri` can be either an absolute or relative URI formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="27fcf-232">"http://www.microsoft.com/page2.xml"是绝对 URI 引用的外部目标资源"page2.xml"的一个示例。</span><span class="sxs-lookup"><span data-stu-id="27fcf-232">"http://www.microsoft.com/page2.xml" is an example of an absolute URI that references an external target resource "page2.xml".</span></span>  <span data-ttu-id="27fcf-233">"images/picture1.jpg"是一个相对 URI，还引用外部目标资源"1.jpg"但并解析对包本身的 URI 的示例。</span><span class="sxs-lookup"><span data-stu-id="27fcf-233">"images/picture1.jpg" is an example of a relative URI that also references an external target resource "1.jpg" but which resolves against the URI of the package itself.</span></span>  
  
 <span data-ttu-id="27fcf-234">`relationshipType` 必须是[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]根据构成[RFC 3986](http://tools.ietf.org/html/rfc3986)统一资源标识符 (URI) 的通用语法规范。</span><span class="sxs-lookup"><span data-stu-id="27fcf-234">`relationshipType` must be a [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] that is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="27fcf-235">下表显示了包级别`relationshipType`开放打包约定 (OPC) 规范所定义的 Uri。</span><span class="sxs-lookup"><span data-stu-id="27fcf-235">The following table shows the package-level `relationshipType` URIs defined by the Open Packaging Conventions (OPC) specification.</span></span>  
  
|<span data-ttu-id="27fcf-236">数据包级关系</span><span class="sxs-lookup"><span data-stu-id="27fcf-236">Package-level Relationship</span></span>|<span data-ttu-id="27fcf-237">关系类型 URI</span><span class="sxs-lookup"><span data-stu-id="27fcf-237">Relationship Type URI</span></span>|  
|---------------------------------|---------------------------|  
|<span data-ttu-id="27fcf-238">核心属性</span><span class="sxs-lookup"><span data-stu-id="27fcf-238">Core Properties</span></span>|<span data-ttu-id="27fcf-239">http://schemas.openxmlformats.org/package/2006/relationships/meta 数据/核心-属性</span><span class="sxs-lookup"><span data-stu-id="27fcf-239">http://schemas.openxmlformats.org/package/2006/relationships/meta data/core-properties</span></span>|  
|<span data-ttu-id="27fcf-240">数字签名</span><span class="sxs-lookup"><span data-stu-id="27fcf-240">Digital Signature</span></span>|<span data-ttu-id="27fcf-241">http://schemas.openxmlformats.org/package/2006/relationships/digit al 签名/签名</span><span class="sxs-lookup"><span data-stu-id="27fcf-241">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/signature</span></span>|  
|<span data-ttu-id="27fcf-242">数字签名证书</span><span class="sxs-lookup"><span data-stu-id="27fcf-242">Digital Signature Certificate</span></span>|<span data-ttu-id="27fcf-243">http://schemas.openxmlformats.org/package/2006/relationships/digit al 的签名证书</span><span class="sxs-lookup"><span data-stu-id="27fcf-243">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/certificate</span></span>|  
|<span data-ttu-id="27fcf-244">数字签名源</span><span class="sxs-lookup"><span data-stu-id="27fcf-244">Digital Signature Origin</span></span>|<span data-ttu-id="27fcf-245">http://schemas.openxmlformats.org/package/2006/relationships/digit al 签名/源</span><span class="sxs-lookup"><span data-stu-id="27fcf-245">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/origin</span></span>|  
|<span data-ttu-id="27fcf-246">缩略图</span><span class="sxs-lookup"><span data-stu-id="27fcf-246">Thumbnail</span></span>|<span data-ttu-id="27fcf-247">http://schemas.openxmlformats.org/package/2006/relationships/meta 数据/缩略图</span><span class="sxs-lookup"><span data-stu-id="27fcf-247">http://schemas.openxmlformats.org/package/2006/relationships/meta data/thumbnail</span></span>|  
  
 <span data-ttu-id="27fcf-248">有关打包和包关系的详细信息，请参阅部分 1.3 可供下载的开放式打包约定 (OPC) 规范[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-248">For more information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27fcf-249">下面的示例演示如何使用<xref:System.IO.Packaging.Package.CreateRelationship%2A>来创建<xref:System.IO.Packaging.PackageRelationship>之间<xref:System.IO.Packaging.Package>和根文档部分。</span><span class="sxs-lookup"><span data-stu-id="27fcf-249">The following example illustrates how to use <xref:System.IO.Packaging.Package.CreateRelationship%2A> to create a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.</span></span>  <span data-ttu-id="27fcf-250">有关完整示例，请参阅[写入包的示例](http://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-250">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackagerelationship)]
 [!code-vb[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackagerelationship)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27fcf-251">
            <paramref name="targetUri" /> 或 <paramref name="relationshipType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-251">
              <paramref name="targetUri" /> or <paramref name="relationshipType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="27fcf-252">
            <paramref name="targetUri" /> 部件为 <see cref="T:System.IO.Packaging.PackageRelationship" />，或 <paramref name="targetMode" /> 为 <see cref="F:System.IO.Packaging.TargetMode.Internal" />，而 <paramref name="targetUri" /> 为绝对 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-252">The <paramref name="targetUri" /> part is a <see cref="T:System.IO.Packaging.PackageRelationship" />, or <paramref name="targetMode" /> is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> and <paramref name="targetUri" /> is an absolute URI.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="27fcf-253">
            <paramref name="targetMode" /> 的值无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-253">The value for <paramref name="targetMode" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="27fcf-254">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-254">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="27fcf-255">包为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-255">The package is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.RelationshipExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship CreateRelationship(class System.Uri targetUri, valuetype System.IO.Packaging.TargetMode targetMode, string relationshipType, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ CreateRelationship(Uri ^ targetUri, System::IO::Packaging::TargetMode targetMode, System::String ^ relationshipType, System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.CreateRelationship : Uri * System.IO.Packaging.TargetMode * string * string -&gt; System.IO.Packaging.PackageRelationship" Usage="package.CreateRelationship (targetUri, targetMode, relationshipType, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetUri" Type="System.Uri" />
        <Parameter Name="targetMode" Type="System.IO.Packaging.TargetMode" />
        <Parameter Name="relationshipType" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetUri">
          <span data-ttu-id="27fcf-256">目标部件的 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-256">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the target part.</span>
          </span>
        </param>
        <param name="targetMode">
          <span data-ttu-id="27fcf-257">指示目标部件对包来说是 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 还是 <see cref="F:System.IO.Packaging.TargetMode.External" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-257">Indicates if the target part is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> or <see cref="F:System.IO.Packaging.TargetMode.External" /> to the package.</span>
          </span>
        </param>
        <param name="relationshipType">
          <span data-ttu-id="27fcf-258">唯一定义关系的角色的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-258">A URI that uniquely defines the role of the relationship.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="27fcf-259">唯一 XML 标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-259">A unique XML identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27fcf-260">使用给定的 URI、目标模式、关系类型和 [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] 创建与部件的包级别关系。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-260">Creates a package-level relationship to a part with a given URI, target mode, relationship type, and [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)].</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27fcf-261">与指定部件的包级别关系。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-261">The package-level relationship to the specified part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-262">包级别关系定义包和关联的目标部件或资源之间的关联。</span><span class="sxs-lookup"><span data-stu-id="27fcf-262">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="27fcf-263">包级别关系可以是两种形式之一。</span><span class="sxs-lookup"><span data-stu-id="27fcf-263">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="27fcf-264">之间<xref:System.IO.Packaging.Package>指向目标部件在包中。</span><span class="sxs-lookup"><span data-stu-id="27fcf-264">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="27fcf-265">之间<xref:System.IO.Packaging.Package>到包外部的目标资源。</span><span class="sxs-lookup"><span data-stu-id="27fcf-265">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="27fcf-266">包关系中包被视为此关系的"所有者"。</span><span class="sxs-lookup"><span data-stu-id="27fcf-266">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="27fcf-267">当删除包时，还删除拥有的包的所有关系。</span><span class="sxs-lookup"><span data-stu-id="27fcf-267">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  
  
 <span data-ttu-id="27fcf-268"><xref:System.IO.Packaging.Package.CreateRelationship%2A> 不会以物理方式更改目标部件或以任何方式的资源。</span><span class="sxs-lookup"><span data-stu-id="27fcf-268"><xref:System.IO.Packaging.Package.CreateRelationship%2A> does not physically change the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="27fcf-269">关系的目标不能为另一个关系。</span><span class="sxs-lookup"><span data-stu-id="27fcf-269">The target of a relationship cannot be another relationship.</span></span>  
  
 <span data-ttu-id="27fcf-270">`id` 必须是有效的 XML 标识符。</span><span class="sxs-lookup"><span data-stu-id="27fcf-270">`id` must be a valid XML identifier.</span></span>  <span data-ttu-id="27fcf-271">`id`类型是 xsd:ID，而且必须遵循 XML 架构第 2 部分中所规定的命名约定： 数据类型规范 (请参阅[ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID))。</span><span class="sxs-lookup"><span data-stu-id="27fcf-271">The `id` type is xsd:ID and must follow the naming conventions prescribed in the XML Schema Part 2: Datatypes specification (see [https://www.w3.org/TR/xmlschema-2/#ID](https://www.w3.org/TR/xmlschema-2/#ID)).</span></span>  
  
 <span data-ttu-id="27fcf-272">如果`id`指定为`null`将自动生成的唯一 ID。</span><span class="sxs-lookup"><span data-stu-id="27fcf-272">If `id` is specified as `null` a unique ID will be automatically generated.</span></span>  <span data-ttu-id="27fcf-273">`id`指定一个空字符串无效。</span><span class="sxs-lookup"><span data-stu-id="27fcf-273">An `id` specified by an empty string is not valid.</span></span>  
  
 <span data-ttu-id="27fcf-274">如果`targetMode`指定为<xref:System.IO.Packaging.TargetMode.Internal>，`targetUri`必须是相对 URI 的格式根据[RFC 3986](http://tools.ietf.org/html/rfc3986)统一资源标识符 (URI) 的通用语法规范。</span><span class="sxs-lookup"><span data-stu-id="27fcf-274">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.Internal>, `targetUri` must be a relative URI that is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="27fcf-275">内部的相对 URI 可以是任一绝对路径开头的正斜杠 （"/"） 字符如"/ page1.xaml"或"/ images/picture4.jpg"，或相对路径，如".../ imagespicture1.jpg"可解析对包根目录 （"/"） 作为基 URI。</span><span class="sxs-lookup"><span data-stu-id="27fcf-275">The internal relative URI can be either an absolute path that starts with a forward slash ("/") character such as "/page1.xaml" or "/images/picture4.jpg", or a relative path such as "../imagespicture1.jpg" that resolves against the package root ("/") as the base URI.</span></span>  
  
 <span data-ttu-id="27fcf-276">如果`targetMode`指定为<xref:System.IO.Packaging.TargetMode.External>，`targetUri`可以是任一绝对或相对 URI 的格式正确根据[RFC 3986](http://tools.ietf.org/html/rfc3986)统一资源标识符 (URI) 的通用语法规范。</span><span class="sxs-lookup"><span data-stu-id="27fcf-276">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.External>, `targetUri` can be either an absolute or relative URI formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="27fcf-277">"http://www.microsoft.com/page2.xml"是绝对 URI 引用的外部目标资源"page2.xml"的一个示例。</span><span class="sxs-lookup"><span data-stu-id="27fcf-277">"http://www.microsoft.com/page2.xml" is an example of an absolute URI that references an external target resource "page2.xml".</span></span>  <span data-ttu-id="27fcf-278">"images/picture1.jpg"是一个相对 URI，还引用外部目标资源"1.jpg"但并解析对包本身的 URI 的示例。</span><span class="sxs-lookup"><span data-stu-id="27fcf-278">"images/picture1.jpg" is an example of a relative URI that also references an external target resource "1.jpg" but which resolves against the URI of the package itself.</span></span>  
  
 <span data-ttu-id="27fcf-279">`relationshipType` 必须是一个 URI，它根据形成[RFC 3986](http://tools.ietf.org/html/rfc3986)统一资源标识符 (URI) 的通用语法规范。</span><span class="sxs-lookup"><span data-stu-id="27fcf-279">`relationshipType` must be a URI that is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="27fcf-280">下表显示了包级别`relationshipType`开放打包约定 (OPC) 规范所定义的 Uri。</span><span class="sxs-lookup"><span data-stu-id="27fcf-280">The following table shows the package-level `relationshipType` URIs defined by the Open Packaging Conventions (OPC) specification.</span></span>  
  
|<span data-ttu-id="27fcf-281">数据包级关系</span><span class="sxs-lookup"><span data-stu-id="27fcf-281">Package-level Relationship</span></span>|<span data-ttu-id="27fcf-282">关系类型 URI</span><span class="sxs-lookup"><span data-stu-id="27fcf-282">Relationship Type URI</span></span>|  
|---------------------------------|---------------------------|  
|<span data-ttu-id="27fcf-283">核心属性</span><span class="sxs-lookup"><span data-stu-id="27fcf-283">Core Properties</span></span>|<span data-ttu-id="27fcf-284">http://schemas.openxmlformats.org/package/2006/relationships/meta 数据/核心-属性</span><span class="sxs-lookup"><span data-stu-id="27fcf-284">http://schemas.openxmlformats.org/package/2006/relationships/meta data/core-properties</span></span>|  
|<span data-ttu-id="27fcf-285">数字签名</span><span class="sxs-lookup"><span data-stu-id="27fcf-285">Digital Signature</span></span>|<span data-ttu-id="27fcf-286">http://schemas.openxmlformats.org/package/2006/relationships/digit al 签名/签名</span><span class="sxs-lookup"><span data-stu-id="27fcf-286">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/signature</span></span>|  
|<span data-ttu-id="27fcf-287">数字签名证书</span><span class="sxs-lookup"><span data-stu-id="27fcf-287">Digital Signature Certificate</span></span>|<span data-ttu-id="27fcf-288">http://schemas.openxmlformats.org/package/2006/relationships/digit al 的签名证书</span><span class="sxs-lookup"><span data-stu-id="27fcf-288">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/certificate</span></span>|  
|<span data-ttu-id="27fcf-289">数字签名源</span><span class="sxs-lookup"><span data-stu-id="27fcf-289">Digital Signature Origin</span></span>|<span data-ttu-id="27fcf-290">http://schemas.openxmlformats.org/package/2006/relationships/digit al 签名/源</span><span class="sxs-lookup"><span data-stu-id="27fcf-290">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/origin</span></span>|  
|<span data-ttu-id="27fcf-291">缩略图</span><span class="sxs-lookup"><span data-stu-id="27fcf-291">Thumbnail</span></span>|<span data-ttu-id="27fcf-292">http://schemas.openxmlformats.org/package/2006/relationships/meta 数据/缩略图</span><span class="sxs-lookup"><span data-stu-id="27fcf-292">http://schemas.openxmlformats.org/package/2006/relationships/meta data/thumbnail</span></span>|  
  
 <span data-ttu-id="27fcf-293">有关打包和包关系的其他信息，请参阅部分 1.3 可供下载的开放式打包约定 (OPC) 规范[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-293">For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27fcf-294">下面的示例演示如何使用<xref:System.IO.Packaging.Package.CreateRelationship%2A>来创建<xref:System.IO.Packaging.PackageRelationship>之间<xref:System.IO.Packaging.Package>和根文档部分。</span><span class="sxs-lookup"><span data-stu-id="27fcf-294">The following example illustrates how to use <xref:System.IO.Packaging.Package.CreateRelationship%2A> to create a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.</span></span>  <span data-ttu-id="27fcf-295">有关完整示例，请参阅[写入包的示例](http://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-295">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackagerelationship)]
 [!code-vb[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackagerelationship)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27fcf-296">
            <paramref name="targetUri" /> 或 <paramref name="relationshipType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-296">
              <paramref name="targetUri" /> or <paramref name="relationshipType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="27fcf-297">
            <paramref name="targetUri" /> 部件为 <see cref="T:System.IO.Packaging.PackageRelationship" />，或 <paramref name="targetMode" /> 为 <see cref="F:System.IO.Packaging.TargetMode.Internal" />，而 <paramref name="targetUri" /> 为绝对 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-297">The <paramref name="targetUri" /> part is a <see cref="T:System.IO.Packaging.PackageRelationship" />, or <paramref name="targetMode" /> is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> and <paramref name="targetUri" /> is an absolute URI.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="27fcf-298">
            <paramref name="targetMode" /> 的值无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-298">The value for <paramref name="targetMode" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="27fcf-299">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-299">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="27fcf-300">包为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-300">The package is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="27fcf-301">
            <paramref name="id" /> 不是有效的 XML 标识符；或者包中已存在具有指定的 <paramref name="id" /> 的部件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-301">
              <paramref name="id" /> is not a valid XML identifier; or a part with the specified <paramref name="id" /> already occurs in the package.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.RelationshipExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DeletePart">
      <MemberSignature Language="C#" Value="public void DeletePart (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeletePart(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeletePart (partUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeletePart(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="member this.DeletePart : Uri -&gt; unit" Usage="package.DeletePart partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="27fcf-302">要删除的部件的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-302">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the part to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27fcf-303">使用包中给定的 URI 删除部件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-303">Deletes a part with a given URI from the package.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-304">`partUri` 必须是相对 URI 的绝对路径，这将启动以正斜杠 （"/"） 字符组成。</span><span class="sxs-lookup"><span data-stu-id="27fcf-304">`partUri` must be a relative URI that consists of an absolute path which starts with a forward slash ("/") character.</span></span>  <span data-ttu-id="27fcf-305">绝对路径是相对于包根，并且根据正确[RFC 3986](http://tools.ietf.org/html/rfc3986)统一资源标识符 (URI) 的通用语法规范。</span><span class="sxs-lookup"><span data-stu-id="27fcf-305">The absolute path is relative to the package root and is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="27fcf-306">"/ page1.xaml"和"/ images/picture4.jpg"是有效的部件 Uri 的示例。</span><span class="sxs-lookup"><span data-stu-id="27fcf-306">"/page1.xaml" and "/images/picture4.jpg" are examples of valid part URIs.</span></span>  
  
 <span data-ttu-id="27fcf-307">如果具有指定的部件，会引发任何异常`partUri`不是包中。</span><span class="sxs-lookup"><span data-stu-id="27fcf-307">No exception is raised if a part with the specified `partUri` is not in the package.</span></span>  <span data-ttu-id="27fcf-308">(可以使用<xref:System.IO.Packaging.Package.PartExists%2A>方法，以确定是否具有指定的部件`partUri`包中。)</span><span class="sxs-lookup"><span data-stu-id="27fcf-308">(You can use the <xref:System.IO.Packaging.Package.PartExists%2A> method to determine whether a part with a specified `partUri` is in the package.)</span></span>  
  
 <span data-ttu-id="27fcf-309">有关其他信息，请参阅下载的开放式打包约定 (OPC) 规范[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-309">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27fcf-310">
            <paramref name="partUri" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-310">
              <paramref name="partUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="27fcf-311">
            <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-311">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="27fcf-312">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-312">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="27fcf-313">包为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-313">The package is read-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="27fcf-314">
              <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> 在内部调用派生的类的<see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />方法实际删除部件基于在派生类中实现的物理格式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="27fcf-314">
                <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> method to actually delete the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="Overload:System.IO.Packaging.Package.CreatePart" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="DeletePartCore">
      <MemberSignature Language="C#" Value="protected abstract void DeletePartCore (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DeletePartCore(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub DeletePartCore (partUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void DeletePartCore(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="abstract member DeletePartCore : Uri -&gt; unit" Usage="package.DeletePartCore partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="27fcf-315">要删除的 <see cref="P:System.IO.Packaging.PackagePart.Uri" /> 的 <see cref="T:System.IO.Packaging.PackagePart" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-315">The <see cref="P:System.IO.Packaging.PackagePart.Uri" /> of the <see cref="T:System.IO.Packaging.PackagePart" /> to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27fcf-316">在派生类中重写时，会使用给定的 URI 删除部件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-316">When overridden in a derived class, deletes a part with a given URI.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-317">默认情况下<xref:System.IO.Packaging.ZipPackage>派生类实现的抽象<xref:System.IO.Packaging.Package>提供和使用类。</span><span class="sxs-lookup"><span data-stu-id="27fcf-317">By default, a <xref:System.IO.Packaging.ZipPackage> derived class implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="27fcf-318">在默认操作中，<xref:System.IO.Packaging.Package.DeletePart%2A>在内部调用<xref:System.IO.Packaging.Package.DeletePartCore%2A>的<xref:System.IO.Packaging.ZipPackage>类来执行实际删除基于物理格式在派生类中实现的操作。</span><span class="sxs-lookup"><span data-stu-id="27fcf-318">In the default operation, <xref:System.IO.Packaging.Package.DeletePart%2A> internally calls <xref:System.IO.Packaging.Package.DeletePartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to perform the actual delete operation based on the physical format implemented in the derived class.</span></span>  
  
 <span data-ttu-id="27fcf-319">有关包模型和包部件的详细信息，请参阅下载的开放式打包约定 (OPC) 规范的第 1 章[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-319">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="27fcf-320">在派生的类<see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />调用实现<see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />方法的指定部分基于派生类中实现的物理格式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="27fcf-320">The derived class <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> implementation is called by the <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> method to the specified part based on the physical format implemented in the derived class.</span>
            </span>
            <span data-ttu-id="27fcf-321">派生<see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />实现应作出任何假设订单或由执行的操作<see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />调用它的方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="27fcf-321">The derived <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> implementation should make no assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> method that calls it.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteRelationship">
      <MemberSignature Language="C#" Value="public void DeleteRelationship (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteRelationship(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteRelationship (id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteRelationship(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.DeleteRelationship : string -&gt; unit" Usage="package.DeleteRelationship id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="27fcf-322">要删除的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> 的 <see cref="T:System.IO.Packaging.PackageRelationship" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-322">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the <see cref="T:System.IO.Packaging.PackageRelationship" /> to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27fcf-323">删除包级别关系。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-323">Deletes a package-level relationship.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-324">包级别关系定义包和关联的目标部件或资源之间的关联。</span><span class="sxs-lookup"><span data-stu-id="27fcf-324">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="27fcf-325">包级别关系可以是两种形式之一。</span><span class="sxs-lookup"><span data-stu-id="27fcf-325">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="27fcf-326">之间<xref:System.IO.Packaging.Package>指向目标部件在包中。</span><span class="sxs-lookup"><span data-stu-id="27fcf-326">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="27fcf-327">之间<xref:System.IO.Packaging.Package>到包外部的目标资源。</span><span class="sxs-lookup"><span data-stu-id="27fcf-327">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="27fcf-328">包关系中包被视为此关系的"所有者"。</span><span class="sxs-lookup"><span data-stu-id="27fcf-328">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="27fcf-329">当删除包时，还删除拥有的包的所有关系。</span><span class="sxs-lookup"><span data-stu-id="27fcf-329">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  
  
 <span data-ttu-id="27fcf-330">如果与指定的关系，则会引发任何异常`id`不是包中。</span><span class="sxs-lookup"><span data-stu-id="27fcf-330">No exception is raised if a relationship with the specified `id` is not in the package.</span></span>  
  
 <span data-ttu-id="27fcf-331"><xref:System.IO.Packaging.Package.DeleteRelationship%2A> 不会以物理方式更改以任何方式的目标部件。</span><span class="sxs-lookup"><span data-stu-id="27fcf-331"><xref:System.IO.Packaging.Package.DeleteRelationship%2A> does not physically change the target part in any way.</span></span>  
  
 <span data-ttu-id="27fcf-332">有关包关系的详细信息，请参阅部分 1.3 可供下载的开放式打包约定 (OPC) 规范[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-332">For more information about package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27fcf-333">
            <paramref name="id" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-333">
              <paramref name="id" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="27fcf-334">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-334">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="27fcf-335">包为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-335">The package is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="27fcf-336">
            <paramref name="id" /> 不是有效的 XML 标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-336">
              <paramref name="id" /> is not a valid XML identifier.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="package.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="27fcf-337">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-337">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27fcf-338">刷新并保存所有部件和关系的内容，关闭包，并释放所有资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-338">Flushes and saves the content of all parts and relationships, closes the package, and releases all resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-339">若要确保正确地保存所有更改，<xref:System.IO.Packaging.Package.Dispose%2A>还完成，将刷新，并关闭所有部件和包中包含的关系。</span><span class="sxs-lookup"><span data-stu-id="27fcf-339">To make sure that all changes are correctly saved, <xref:System.IO.Packaging.Package.Dispose%2A> also finalizes, flushes, and closes all parts and relationships that are contained in the package.</span></span>  
  
 <span data-ttu-id="27fcf-340">有关<xref:System.IO.Packaging.Package>类，<xref:System.IO.Packaging.Package.Dispose%2A>并<xref:System.IO.Packaging.Package.Close%2A>执行相同的操作-无需调用<xref:System.IO.Packaging.Package.Dispose%2A>如果调用<xref:System.IO.Packaging.Package.Close%2A>，或反之。</span><span class="sxs-lookup"><span data-stu-id="27fcf-340">For the <xref:System.IO.Packaging.Package> class, <xref:System.IO.Packaging.Package.Dispose%2A> and <xref:System.IO.Packaging.Package.Close%2A> perform the same operation - there is no reason to call <xref:System.IO.Packaging.Package.Dispose%2A> if you call <xref:System.IO.Packaging.Package.Close%2A>, or vice-versa.</span></span>  
  
 <span data-ttu-id="27fcf-341"><xref:System.IO.Packaging.Package.Close%2A> 并<xref:System.IO.Packaging.Package.Dispose%2A>在内部调用<xref:System.IO.Packaging.Package.Flush%2A>。</span><span class="sxs-lookup"><span data-stu-id="27fcf-341"><xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> internally call <xref:System.IO.Packaging.Package.Flush%2A>.</span></span>  
  
 <span data-ttu-id="27fcf-342">分配和管理非内存资源的派生的类应重写此方法来释放资源时<xref:System.IO.Packaging.Package.Dispose%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="27fcf-342">Derived classes that allocate and manage non-memory resources should override this method to release resources when <xref:System.IO.Packaging.Package.Dispose%2A> is called.</span></span> <span data-ttu-id="27fcf-343">此外应调用派生类重写<xref:System.IO.Packaging.Package.Flush%2A>和基本类<xref:System.IO.Packaging.Package.Dispose%2A>方法以确保始终执行的基本类清除。</span><span class="sxs-lookup"><span data-stu-id="27fcf-343">Derived-class overrides should also call <xref:System.IO.Packaging.Package.Flush%2A> and the base-class <xref:System.IO.Packaging.Package.Dispose%2A> method to make sure that base-class cleanup is always performed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="27fcf-344">`using`语句 (不同于`using`命名空间指令) 的建议的方法是<xref:System.IO.Packaging.Package.Close%2A>和<xref:System.IO.Packaging.Package.Dispose%2A>包。</span><span class="sxs-lookup"><span data-stu-id="27fcf-344">The `using` statement (different from the `using` namespace directive) is the recommended way to <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> a package.</span></span> <span data-ttu-id="27fcf-345">[写入包的示例](http://go.microsoft.com/fwlink/?LinkID=160055)演示如何关闭和释放使用的包`using`语句。</span><span class="sxs-lookup"><span data-stu-id="27fcf-345">[Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055) shows how to close and dispose a package by using the `using` statement.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.Package.Flush" />
        <altmember cref="T:System.IO.Packaging.PackagePart" />
        <altmember cref="T:System.IO.Packaging.PackageRelationship" />
      </Docs>
    </Member>
    <Member MemberName="FileOpenAccess">
      <MemberSignature Language="C#" Value="public System.IO.FileAccess FileOpenAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.FileAccess FileOpenAccess" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.Package.FileOpenAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileOpenAccess As FileAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::FileAccess FileOpenAccess { System::IO::FileAccess get(); };" />
      <MemberSignature Language="F#" Value="member this.FileOpenAccess : System.IO.FileAccess" Usage="System.IO.Packaging.Package.FileOpenAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27fcf-346">获取包的文件访问设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-346">Gets the file access setting for the package.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27fcf-347">
            <see cref="T:System.IO.FileAccess" /> 值之一：<see cref="F:System.IO.FileAccess.Read" />、<see cref="F:System.IO.FileAccess.Write" /> 或 <see cref="F:System.IO.FileAccess.ReadWrite" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-347">One of the <see cref="T:System.IO.FileAccess" /> values: <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" />, or <see cref="F:System.IO.FileAccess.ReadWrite" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-348"><xref:System.IO.Packaging.Package.FileOpenAccess%2A> 属性没有默认值。</span><span class="sxs-lookup"><span data-stu-id="27fcf-348">The <xref:System.IO.Packaging.Package.FileOpenAccess%2A> property has no default value.</span></span>  <span data-ttu-id="27fcf-349">中指定文件访问设置<xref:System.IO.Packaging.Package.%23ctor%2A>构造函数调用时创建新的包，或者在<xref:System.IO.Packaging.Package.Open%2A>打开现有的包时调用。</span><span class="sxs-lookup"><span data-stu-id="27fcf-349">The file access setting is specified in the <xref:System.IO.Packaging.Package.%23ctor%2A> constructor call when you create a new package, or in the <xref:System.IO.Packaging.Package.Open%2A> call when you open an existing package.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="27fcf-350">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-350">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="package.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="27fcf-351">保存包中包含的所有部件和关系的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-351">Saves the contents of all parts and relationships that are contained in the package.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-352"><xref:System.IO.Packaging.Package.Flush%2A> 在内部调用派生的类的<xref:System.IO.Packaging.Package.FlushCore%2A>实现来执行实际的特定格式的刷新操作。</span><span class="sxs-lookup"><span data-stu-id="27fcf-352"><xref:System.IO.Packaging.Package.Flush%2A> internally calls the derived class's <xref:System.IO.Packaging.Package.FlushCore%2A> implemetation to perform the actual format-specific flush operation.</span></span>  <span data-ttu-id="27fcf-353">派生的类的<xref:System.IO.Packaging.Package.FlushCore%2A>方法负责实际保存到特定物理派生的类实现的部件和关系的内容。</span><span class="sxs-lookup"><span data-stu-id="27fcf-353">The derived class's <xref:System.IO.Packaging.Package.FlushCore%2A> method is responsible for actually saving the part and relationship content to the specific physical derived class implementation.</span></span>  
  
 <span data-ttu-id="27fcf-354">默认情况下<xref:System.IO.Packaging.ZipPackage>派生的抽象实现<xref:System.IO.Packaging.Package>提供和使用基类。</span><span class="sxs-lookup"><span data-stu-id="27fcf-354">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> base class is provided and used.</span></span> <span data-ttu-id="27fcf-355">在默认操作中，<xref:System.IO.Packaging.Package.Flush%2A>在内部调用<xref:System.IO.Packaging.Package.FlushCore%2A>ZIP 文件包中保存的部件和关系。</span><span class="sxs-lookup"><span data-stu-id="27fcf-355">In the default operation, <xref:System.IO.Packaging.Package.Flush%2A> internally calls <xref:System.IO.Packaging.Package.FlushCore%2A> to save the parts and relationships in a ZIP file package.</span></span>  
  
 <span data-ttu-id="27fcf-356"><xref:System.IO.Packaging.Package.Flush%2A> 自动调用<xref:System.IO.Packaging.Package.Close%2A>和<xref:System.IO.Packaging.Package.Dispose%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="27fcf-356"><xref:System.IO.Packaging.Package.Flush%2A> is called automatically by the <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> methods.</span></span>  <span data-ttu-id="27fcf-357">当<xref:System.IO.Packaging.Package.Close%2A>或<xref:System.IO.Packaging.Package.Dispose%2A>称为无需调用<xref:System.IO.Packaging.Package.Flush%2A>单独。</span><span class="sxs-lookup"><span data-stu-id="27fcf-357">When <xref:System.IO.Packaging.Package.Close%2A> or <xref:System.IO.Packaging.Package.Dispose%2A> is called you do not have to call <xref:System.IO.Packaging.Package.Flush%2A> separately.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="27fcf-358">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-358">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="27fcf-359">包为只读的，无法进行修改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-359">The package is read-only and cannot be modified.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="27fcf-360">
              <see cref="M:System.IO.Packaging.Package.Flush" /> 在内部调用派生的类的<see cref="M:System.IO.Packaging.Package.FlushCore" />方法实际刷新部件基于在派生类中实现的物理格式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="27fcf-360">
                <see cref="M:System.IO.Packaging.Package.Flush" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.FlushCore" /> method to actually flush the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FlushCore">
      <MemberSignature Language="C#" Value="protected abstract void FlushCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FlushCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.FlushCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub FlushCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void FlushCore();" />
      <MemberSignature Language="F#" Value="abstract member FlushCore : unit -&gt; unit" Usage="package.FlushCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="27fcf-361">在派生类中重写时，会将所有部件和关系的内容保存到派生类存储区中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-361">When overridden in a derived class, saves the content of all parts and relationships to the derived class store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-362"><xref:System.IO.Packaging.Package.FlushCore%2A> 由调用<xref:System.IO.Packaging.Package.Flush%2A>方法来执行实际的刷新操作基于派生类中实现的物理格式。</span><span class="sxs-lookup"><span data-stu-id="27fcf-362"><xref:System.IO.Packaging.Package.FlushCore%2A> is called by the <xref:System.IO.Packaging.Package.Flush%2A> method to perform the actual flush operation based on the physical format implemented in the derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="27fcf-363">派生<see cref="M:System.IO.Packaging.Package.FlushCore" />实现应不做任何假设订单或由执行的操作<see cref="M:System.IO.Packaging.Package.Flush" />调用它的方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="27fcf-363">The derived <see cref="M:System.IO.Packaging.Package.FlushCore" /> implementation should not make any assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.Flush" /> method that calls it.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetPart">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePart GetPart (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePart GetPart(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetPart(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPart (partUri As Uri) As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePart ^ GetPart(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="member this.GetPart : Uri -&gt; System.IO.Packaging.PackagePart" Usage="package.GetPart partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="27fcf-364">要返回的部件的 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-364">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the part to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27fcf-365">返回具有给定 URI 的部件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-365">Returns the part with a given URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27fcf-366">具有指定 <paramref name="partUri" /> 的部件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-366">The part with the specified <paramref name="partUri" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-367"><xref:System.InvalidOperationException>如果具有指定的部件，将引发`partUri`不存在。</span><span class="sxs-lookup"><span data-stu-id="27fcf-367">An <xref:System.InvalidOperationException> is thrown if a part with the specified `partUri` does not exist.</span></span>  
  
 <span data-ttu-id="27fcf-368"><xref:System.IO.Packaging.Package.PartExists%2A>方法可以用于确定是否`partUri`引用现有部件。</span><span class="sxs-lookup"><span data-stu-id="27fcf-368">The <xref:System.IO.Packaging.Package.PartExists%2A> method can be used to determine whether `partUri` references an existing part.</span></span>  
  
 <span data-ttu-id="27fcf-369">默认情况下<xref:System.IO.Packaging.ZipPackage>派生的抽象实现<xref:System.IO.Packaging.Package>提供和使用基类。</span><span class="sxs-lookup"><span data-stu-id="27fcf-369">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> base class is provided and used.</span></span>  <span data-ttu-id="27fcf-370">在默认操作中，<xref:System.IO.Packaging.Package.GetPart%2A>在内部调用<xref:System.IO.Packaging.Package.GetPartCore%2A>的<xref:System.IO.Packaging.ZipPackage>类以便从 ZIP 文件返回请求的一部分。</span><span class="sxs-lookup"><span data-stu-id="27fcf-370">In the default operation, <xref:System.IO.Packaging.Package.GetPart%2A> internally calls <xref:System.IO.Packaging.Package.GetPartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to return a requested part from a ZIP file.</span></span>  
  
 <span data-ttu-id="27fcf-371">有关其他信息，请参阅下载的开放式打包约定 (OPC) 规范[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-371">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27fcf-372">下面的示例演示如何查找、 检索和读取包中包含的部分。</span><span class="sxs-lookup"><span data-stu-id="27fcf-372">The following example shows how to locate, retrieve, and read parts that are contained in a package.</span></span>  <span data-ttu-id="27fcf-373">有关完整示例，请参阅[读取包的示例](http://go.microsoft.com/fwlink/?LinkID=160034)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-373">For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).</span></span>  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27fcf-374">
            <paramref name="partUri" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-374">
              <paramref name="partUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="27fcf-375">
            <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-375">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="27fcf-376">包中不存在具有指定 <paramref name="partUri" /> 的部件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-376">A part with the specified <paramref name="partUri" /> is not in the package.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="27fcf-377">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-377">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="27fcf-378">包是只写的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-378">The package is write-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="27fcf-379">
              <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> 在内部调用派生的类<see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />方法实际刷新部件基于在派生类中实现的物理格式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="27fcf-379">
                <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> internally calls the derived class <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> method to actually flush the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.GetParts" />
        <altmember cref="M:System.IO.Packaging.Package.PartExists(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPartCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Packaging.PackagePart GetPartCore (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Packaging.PackagePart GetPartCore(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetPartCore (partUri As Uri) As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IO::Packaging::PackagePart ^ GetPartCore(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="abstract member GetPartCore : Uri -&gt; System.IO.Packaging.PackagePart" Usage="package.GetPartCore partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="27fcf-380">要检索的部件的 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-380">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the part to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27fcf-381">在派生类中重写时，会返回由给定 URI 寻址的部件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-381">When overridden in a derived class, returns the part addressed by a given URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27fcf-382">请求的部件；或者，如果包中不存在具有指定 <paramref name="partUri" /> 的部件，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-382">The requested part; or <see langword="null" />, if a part with the specified <paramref name="partUri" /> is not in the package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-383">默认情况下<xref:System.IO.Packaging.ZipPackage>派生的抽象实现<xref:System.IO.Packaging.Package>提供和使用类。</span><span class="sxs-lookup"><span data-stu-id="27fcf-383">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="27fcf-384">在默认操作中，<xref:System.IO.Packaging.Package.GetPart%2A>在内部调用<xref:System.IO.Packaging.Package.GetPartCore%2A>的<xref:System.IO.Packaging.ZipPackage>类来检索从 ZIP 文件的一部分。</span><span class="sxs-lookup"><span data-stu-id="27fcf-384">In the default operation, <xref:System.IO.Packaging.Package.GetPart%2A> internally calls <xref:System.IO.Packaging.Package.GetPartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to retrieve a part from a ZIP file.</span></span>  
  
 <span data-ttu-id="27fcf-385">有关包模型和包部件的详细信息，请参阅下载的开放式打包约定 (OPC) 规范的第 1 章[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-385">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="27fcf-386">在派生的类<see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />调用实现<see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" />方法访问，并返回的指定的部分基于派生类中实现的物理格式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="27fcf-386">The derived class  <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> implementation is called by the <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> method to access and return the specified part based on the physical format implemented in the derived class.</span>
            </span>
            <span data-ttu-id="27fcf-387">派生<see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />实现应作出任何假设订单或由执行的操作<see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" />调用它的方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="27fcf-387">The derived <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> implementation should make no assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> method that calls it.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.GetPartsCore" />
      </Docs>
    </Member>
    <Member MemberName="GetParts">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePartCollection GetParts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePartCollection GetParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetParts" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParts () As PackagePartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePartCollection ^ GetParts();" />
      <MemberSignature Language="F#" Value="member this.GetParts : unit -&gt; System.IO.Packaging.PackagePartCollection" Usage="package.GetParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="27fcf-388">返回包中所有部件的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-388">Returns a collection of all the parts in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27fcf-389">包中包含的所有 <see cref="T:System.IO.Packaging.PackagePart" /> 元素的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-389">A collection of all the <see cref="T:System.IO.Packaging.PackagePart" /> elements that are contained in the package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-390"><xref:System.IO.Packaging.Package.GetParts%2A> 返回所包含的所有部件的集合中包包括<xref:System.IO.Packaging.PackageRelationship>部件。</span><span class="sxs-lookup"><span data-stu-id="27fcf-390"><xref:System.IO.Packaging.Package.GetParts%2A> returns a collection of all parts that are contained in the package including <xref:System.IO.Packaging.PackageRelationship> parts.</span></span>  
  
 <span data-ttu-id="27fcf-391"><xref:System.IO.Packaging.Package.GetParts%2A> 将永远不会返回`null`; 但是，如果包中不包含任何部分，则返回的集合将包含零个元素。</span><span class="sxs-lookup"><span data-stu-id="27fcf-391"><xref:System.IO.Packaging.Package.GetParts%2A> will never return `null`; however, the returned collection will contain zero elements if the package contains no parts.</span></span>  
  
 <span data-ttu-id="27fcf-392">默认情况下<xref:System.IO.Packaging.ZipPackage>派生的抽象实现<xref:System.IO.Packaging.Package>提供和使用基类。</span><span class="sxs-lookup"><span data-stu-id="27fcf-392">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> base class is provided and used.</span></span>  <span data-ttu-id="27fcf-393">在默认操作中，<xref:System.IO.Packaging.Package.GetParts%2A>调用<xref:System.IO.Packaging.Package.GetPartsCore%2A>方法的<xref:System.IO.Packaging.ZipPackage>类以返回从 ZIP 文件的各个部分。</span><span class="sxs-lookup"><span data-stu-id="27fcf-393">In the default operation, <xref:System.IO.Packaging.Package.GetParts%2A> calls the <xref:System.IO.Packaging.Package.GetPartsCore%2A> method of the <xref:System.IO.Packaging.ZipPackage> class to return the parts from a ZIP file.</span></span>  
  
 <span data-ttu-id="27fcf-394">有关包和包部件的详细信息，请参阅部分 1.1 可供下载的开放式打包约定 (OPC) 规范[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-394">For more information about packages and package parts, see section 1.1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27fcf-395">下面的示例演示如何使用<xref:System.IO.Packaging.Package.GetParts%2A>方法，获取集合中包含的部件<xref:System.IO.Packaging.Package>。</span><span class="sxs-lookup"><span data-stu-id="27fcf-395">The following example shows how to use the <xref:System.IO.Packaging.Package.GetParts%2A> method to obtain a collection of the parts that are contained in a <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="27fcf-396">有关完整的程序源代码，请参阅[使用数字签名示例创建一个包](http://go.microsoft.com/fwlink/?LinkID=159966)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-396">For the complete program source code, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="27fcf-397">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-397">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="27fcf-398">包是只写的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-398">The package is write-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="27fcf-399">
              <see cref="M:System.IO.Packaging.Package.GetParts" /> 在内部调用派生的类<see cref="M:System.IO.Packaging.Package.GetPartsCore" />方法实际刷新部件基于在派生类中实现的物理格式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="27fcf-399">
                <see cref="M:System.IO.Packaging.Package.GetParts" /> internally calls the derived class <see cref="M:System.IO.Packaging.Package.GetPartsCore" /> method to actually flush the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPartsCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Packaging.PackagePart[] GetPartsCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Packaging.PackagePart[] GetPartsCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetPartsCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetPartsCore () As PackagePart()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract cli::array &lt;System::IO::Packaging::PackagePart ^&gt; ^ GetPartsCore();" />
      <MemberSignature Language="F#" Value="abstract member GetPartsCore : unit -&gt; System.IO.Packaging.PackagePart[]" Usage="package.GetPartsCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="27fcf-400">在派生类中重写时，会返回包中所有部件的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-400">When overridden in a derived class, returns an array of all the parts in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27fcf-401">包中包含的所有部件的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-401">An array of all the parts that are contained in the package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-402">在派生的类<xref:System.IO.Packaging.Package.GetPartsCore%2A>调用实现<xref:System.IO.Packaging.Package.GetParts%2A>方法访问，并返回部分数组基于派生类中实现的物理格式。</span><span class="sxs-lookup"><span data-stu-id="27fcf-402">The derived class <xref:System.IO.Packaging.Package.GetPartsCore%2A> implementation is called by the <xref:System.IO.Packaging.Package.GetParts%2A> method to access and return the array of parts based on the physical format implemented in the derived class.</span></span>  
  
 <span data-ttu-id="27fcf-403">默认情况下<xref:System.IO.Packaging.ZipPackage>派生的抽象实现<xref:System.IO.Packaging.Package>提供和使用类。</span><span class="sxs-lookup"><span data-stu-id="27fcf-403">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="27fcf-404">在默认操作中，<xref:System.IO.Packaging.Package.GetParts%2A>在内部调用<xref:System.IO.Packaging.Package.GetPartCore%2A>的<xref:System.IO.Packaging.ZipPackage>类从 ZIP 文件中检索各个部分。</span><span class="sxs-lookup"><span data-stu-id="27fcf-404">In the default operation, <xref:System.IO.Packaging.Package.GetParts%2A> internally calls <xref:System.IO.Packaging.Package.GetPartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to retrieve the parts from a ZIP file.</span></span>  
  
 <span data-ttu-id="27fcf-405">有关包模型和包部件的详细信息，请参阅下载的开放式打包约定 (OPC) 规范的第 1 章[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-405">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="27fcf-406">派生<see cref="M:System.IO.Packaging.Package.GetPartsCore" />实现应作出任何假设订单或由执行的操作<see cref="M:System.IO.Packaging.Package.GetParts" />调用它的方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="27fcf-406">The derived <see cref="M:System.IO.Packaging.Package.GetPartsCore" /> implementation should make no assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.GetParts" /> method that calls it.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship GetRelationship (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship GetRelationship(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationship (id As String) As PackageRelationship" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ GetRelationship(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.GetRelationship : string -&gt; System.IO.Packaging.PackageRelationship" Usage="package.GetRelationship id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="27fcf-407">要返回的关系的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-407">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the relationship to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27fcf-408">返回具有给定标识符的包级别关系。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-408">Returns the package-level relationship with a given identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27fcf-409">具有指定 <paramref name="id" /> 的包级别关系。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-409">The package-level relationship with the specified <paramref name="id" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-410">`id` 必须是有效的 XML 标识符。</span><span class="sxs-lookup"><span data-stu-id="27fcf-410">`id` must be a valid XML identifier.</span></span>  <span data-ttu-id="27fcf-411">`id`类型是 xsd:ID，而且必须遵循 XML 架构第 2 部分中所规定的命名约定： 数据类型规范 (请参阅[ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID))。</span><span class="sxs-lookup"><span data-stu-id="27fcf-411">The `id` type is xsd:ID and must follow the naming conventions prescribed in the XML Schema Part 2: Datatypes specification (see [https://www.w3.org/TR/xmlschema-2/#ID](https://www.w3.org/TR/xmlschema-2/#ID)).</span></span>  
  
 <span data-ttu-id="27fcf-412">有关打包和包关系的其他信息，请参阅部分 1.3 可供下载的开放式打包约定 (OPC) 规范[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-412">For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27fcf-413">
            <paramref name="id" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-413">
              <paramref name="id" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="27fcf-414">
            <paramref name="id" /> 不是有效的 XML 标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-414">
              <paramref name="id" /> is not a valid XML identifier.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="27fcf-415">包中不存在具有指定 <paramref name="id" /> 的关系。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-415">A relationship with the specified <paramref name="id" /> is not in the package.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="27fcf-416">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-416">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="27fcf-417">包是只写的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-417">The package is write-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationships">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationshipCollection GetRelationships ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationshipCollection GetRelationships() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetRelationships" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationships () As PackageRelationshipCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationshipCollection ^ GetRelationships();" />
      <MemberSignature Language="F#" Value="member this.GetRelationships : unit -&gt; System.IO.Packaging.PackageRelationshipCollection" Usage="package.GetRelationships " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationshipCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="27fcf-418">返回所有包级别关系的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-418">Returns a collection of all the package-level relationships.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27fcf-419">包中包含的所有包级别关系的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-419">A collection of all the package-level relationships that are contained in the package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-420"><xref:System.IO.Packaging.Package.GetRelationships%2A> 将永远不会返回`null`; 不过，如果包中不包含任何包级别关系，则返回的集合可能包含零个元素。</span><span class="sxs-lookup"><span data-stu-id="27fcf-420"><xref:System.IO.Packaging.Package.GetRelationships%2A> will never return `null`; however the returned collection may contain zero elements if the package contains no package-level relationships.</span></span>  
  
 <span data-ttu-id="27fcf-421">包级别关系定义包和关联的目标部件或资源之间的关联。</span><span class="sxs-lookup"><span data-stu-id="27fcf-421">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="27fcf-422">包级别关系可以是两种形式之一。</span><span class="sxs-lookup"><span data-stu-id="27fcf-422">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="27fcf-423">之间<xref:System.IO.Packaging.Package>指向目标部件在包中。</span><span class="sxs-lookup"><span data-stu-id="27fcf-423">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="27fcf-424">之间<xref:System.IO.Packaging.Package>到包外部的目标资源。</span><span class="sxs-lookup"><span data-stu-id="27fcf-424">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="27fcf-425">包关系中包被视为此关系的"所有者"。</span><span class="sxs-lookup"><span data-stu-id="27fcf-425">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="27fcf-426">当删除包时，还删除拥有的包的所有关系。</span><span class="sxs-lookup"><span data-stu-id="27fcf-426">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  <span data-ttu-id="27fcf-427">创建或删除关系的过程不会以物理方式更改目标部件或以任何方式的资源。</span><span class="sxs-lookup"><span data-stu-id="27fcf-427">The process of creating or deleting the relationship does not physically alter the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="27fcf-428">有关打包和包关系的其他信息，请参阅部分 1.3 可供下载的开放式打包约定 (OPC) 规范[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-428">For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="27fcf-429">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-429">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="27fcf-430">包是只写的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-430">The package is write-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipsByType">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType (string relationshipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType(string relationshipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipsByType (relationshipType As String) As PackageRelationshipCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationshipCollection ^ GetRelationshipsByType(System::String ^ relationshipType);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipsByType : string -&gt; System.IO.Packaging.PackageRelationshipCollection" Usage="package.GetRelationshipsByType relationshipType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationshipCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationshipType">
          <span data-ttu-id="27fcf-431">在集合中匹配和返回的 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-431">The <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> to match and return in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27fcf-432">返回与给定的 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> 匹配的所有包级别关系的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-432">Returns a collection of all the package-level relationships that match a given <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27fcf-433">与指定的 <paramref name="relationshipType" /> 匹配的包级别关系的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-433">A collection of package-level relationships that match the specified <paramref name="relationshipType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-434"><xref:System.IO.Packaging.Package.GetRelationships%2A> 将永远不会返回`null`; 不过，返回的集合可能包含零个元素，如果没有具有指定的包级别关系`relationshipType`。</span><span class="sxs-lookup"><span data-stu-id="27fcf-434"><xref:System.IO.Packaging.Package.GetRelationships%2A> will never return `null`; however the returned collection may contain zero elements if there are no package-level relationships that match the specified `relationshipType`.</span></span>  
  
 <span data-ttu-id="27fcf-435">下表显示了包级别`relationshipType`开放打包约定 (OPC) 规范所定义的 Uri。</span><span class="sxs-lookup"><span data-stu-id="27fcf-435">The following table shows the package-level `relationshipType` URIs defined by the Open Packaging Conventions (OPC) specification.</span></span>  
  
|<span data-ttu-id="27fcf-436">数据包级关系</span><span class="sxs-lookup"><span data-stu-id="27fcf-436">Package-level Relationship</span></span>|<span data-ttu-id="27fcf-437">关系类型 URI</span><span class="sxs-lookup"><span data-stu-id="27fcf-437">Relationship Type URI</span></span>|  
|---------------------------------|---------------------------|  
|<span data-ttu-id="27fcf-438">核心属性</span><span class="sxs-lookup"><span data-stu-id="27fcf-438">Core Properties</span></span>|<span data-ttu-id="27fcf-439">http://schemas.openxmlformats.org/package/2006/relationships/meta 数据/核心-属性</span><span class="sxs-lookup"><span data-stu-id="27fcf-439">http://schemas.openxmlformats.org/package/2006/relationships/meta data/core-properties</span></span>|  
|<span data-ttu-id="27fcf-440">数字签名</span><span class="sxs-lookup"><span data-stu-id="27fcf-440">Digital Signature</span></span>|<span data-ttu-id="27fcf-441">http://schemas.openxmlformats.org/package/2006/relationships/digit al 签名/签名</span><span class="sxs-lookup"><span data-stu-id="27fcf-441">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/signature</span></span>|  
|<span data-ttu-id="27fcf-442">数字签名证书</span><span class="sxs-lookup"><span data-stu-id="27fcf-442">Digital Signature Certificate</span></span>|<span data-ttu-id="27fcf-443">http://schemas.openxmlformats.org/package/2006/relationships/digit al 的签名证书</span><span class="sxs-lookup"><span data-stu-id="27fcf-443">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/certificate</span></span>|  
|<span data-ttu-id="27fcf-444">数字签名源</span><span class="sxs-lookup"><span data-stu-id="27fcf-444">Digital Signature Origin</span></span>|<span data-ttu-id="27fcf-445">http://schemas.openxmlformats.org/package/2006/relationships/digit al 签名/源</span><span class="sxs-lookup"><span data-stu-id="27fcf-445">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/origin</span></span>|  
|<span data-ttu-id="27fcf-446">缩略图</span><span class="sxs-lookup"><span data-stu-id="27fcf-446">Thumbnail</span></span>|<span data-ttu-id="27fcf-447">http://schemas.openxmlformats.org/package/2006/relationships/meta 数据/缩略图</span><span class="sxs-lookup"><span data-stu-id="27fcf-447">http://schemas.openxmlformats.org/package/2006/relationships/meta data/thumbnail</span></span>|  
  
 <span data-ttu-id="27fcf-448">有关其他信息，请参阅下载的开放式打包约定 (OPC) 规范[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-448">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27fcf-449">下面的示例演示如何检索已为包定义的关系。</span><span class="sxs-lookup"><span data-stu-id="27fcf-449">The following example shows how to retrieve the relationships that have been defined for the package.</span></span>  <span data-ttu-id="27fcf-450">有关完整示例，请参阅[读取包的示例](http://go.microsoft.com/fwlink/?LinkID=160034)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-450">For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).</span></span>  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27fcf-451">
            <paramref name="relationshipType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-451">
              <paramref name="relationshipType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="27fcf-452">
            <paramref name="relationshipType" /> 是一个空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-452">
              <paramref name="relationshipType" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="27fcf-453">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-453">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="27fcf-454">包是只写的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-454">The package is write-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="27fcf-455">打开包。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-455">Opens a package.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-456"><xref:System.IO.Packaging.ZipPackage> 是由默认包类型<xref:System.IO.Packaging.Package.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="27fcf-456"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="27fcf-457">有关其他信息，请参阅下载的开放式打包约定 (OPC) 规范[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-457">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27fcf-458">下面的示例演示如何创建一个新<xref:System.IO.Packaging.Package>包含<xref:System.IO.Packaging.PackageRelationship>和<xref:System.IO.Packaging.PackagePart>一起存储的数据元素。</span><span class="sxs-lookup"><span data-stu-id="27fcf-458">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="27fcf-459">有关完整示例，请参阅[写入包的示例](http://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-459">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member Open : System.IO.Stream -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="27fcf-460">在其上打开包的 IO 流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-460">The IO stream on which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27fcf-461">在给定的 IO 流上打开包。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-461">Opens a package on a given IO stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27fcf-462">打开的包。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-462">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-463"><xref:System.IO.Packaging.ZipPackage> 是由默认包类型<xref:System.IO.Packaging.Package.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="27fcf-463"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="27fcf-464">有关其他信息，请参阅下载的开放式打包约定 (OPC) 规范[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-464">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27fcf-465">
            <paramref name="stream" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-465">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="27fcf-466">要打开的包需要读权限或读/写权限，且指定的 <paramref name="stream" /> 是只写的；或者，要打开的包需要写权限或读/写权限，且指定的 <paramref name="stream" /> 是只写的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-466">The package to open requires read or read/write permission and the specified <paramref name="stream" /> is write-only; or, the package to open requires write or read/write permission and the specified <paramref name="stream" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member Open : string -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="27fcf-467">包的路径和文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-467">The path and file name of the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27fcf-468">打开位于给定路径和文件名的包。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-468">Opens a package at a given path and file name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27fcf-469">打开的包。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-469">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-470"><xref:System.IO.Packaging.ZipPackage> 是由默认包类型<xref:System.IO.Packaging.Package.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="27fcf-470"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="27fcf-471">这<xref:System.IO.Packaging.Package.Open%2A>方法打开包具有默认特性<xref:System.IO.FileMode.OpenOrCreate>， <xref:System.IO.FileAccess.ReadWrite>，和<xref:System.IO.FileShare.None>（若要指定不同的属性使用的另一个 Open 方法重载之一）。</span><span class="sxs-lookup"><span data-stu-id="27fcf-471">This <xref:System.IO.Packaging.Package.Open%2A> method opens the package with default attributes <xref:System.IO.FileMode.OpenOrCreate>, <xref:System.IO.FileAccess.ReadWrite>, and <xref:System.IO.FileShare.None> (to specify different attributes use one of the other Open method overloads).</span></span>  
  
 <span data-ttu-id="27fcf-472">有关其他信息，请参阅下载的开放式打包约定 (OPC) 规范[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-472">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27fcf-473">下面的示例演示如何创建一个新<xref:System.IO.Packaging.Package>包含<xref:System.IO.Packaging.PackageRelationship>和<xref:System.IO.Packaging.PackagePart>一起存储的数据元素。</span><span class="sxs-lookup"><span data-stu-id="27fcf-473">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="27fcf-474">有关完整示例，请参阅[写入包的示例](http://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-474">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27fcf-475">
            <paramref name="path" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-475">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(class System.IO.Stream stream, valuetype System.IO.FileMode packageMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::IO::Stream ^ stream, System::IO::FileMode packageMode);" />
      <MemberSignature Language="F#" Value="static member Open : System.IO.Stream * System.IO.FileMode -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (stream, packageMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="27fcf-476">在其上打开包的 IO 流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-476">The IO stream on which to open the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="27fcf-477">用于打开包的文件模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-477">The file mode in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27fcf-478">使用给定的 IO 流和文件模式打开包。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-478">Opens a package with a given IO stream and file mode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27fcf-479">打开的包。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-479">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-480"><xref:System.IO.Packaging.ZipPackage> 是由默认包类型<xref:System.IO.Packaging.Package.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="27fcf-480"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="27fcf-481">有关其他信息，请参阅下载的开放式打包约定 (OPC) 规范[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-481">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27fcf-482">
            <paramref name="stream" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-482">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="27fcf-483">
            <paramref name="packageMode" /> 值无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-483">
              <paramref name="packageMode" /> value is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="27fcf-484">要打开的包需要读权限或读/写权限，且指定的 <paramref name="stream" /> 是只写的；或者，要打开的包需要写权限或读/写权限，且指定的 <paramref name="stream" /> 是只写的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-484">The package to open requires read or read/write permission and the specified <paramref name="stream" /> is write-only; or, the package to open requires write or read/write permission and the specified <paramref name="stream" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path, valuetype System.IO.FileMode packageMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, packageMode As FileMode) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path, System::IO::FileMode packageMode);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileMode -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (path, packageMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="27fcf-485">包的路径和文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-485">The path and file name of the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="27fcf-486">用于打开包的文件模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-486">The file mode in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27fcf-487">使用给定的文件模式打开位于给定路径的包。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-487">Opens a package at a given path using a given file mode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27fcf-488">打开的包。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-488">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-489"><xref:System.IO.Packaging.ZipPackage> 是由默认包类型<xref:System.IO.Packaging.Package.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="27fcf-489"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="27fcf-490">这<xref:System.IO.Packaging.Package.Open%2A>方法打开包具有默认特性<xref:System.IO.FileAccess.ReadWrite>和<xref:System.IO.FileShare.None>（若要指定不同的属性使用的另一个 Open 方法重载之一）。</span><span class="sxs-lookup"><span data-stu-id="27fcf-490">This <xref:System.IO.Packaging.Package.Open%2A> method opens the package with default attributes <xref:System.IO.FileAccess.ReadWrite> and <xref:System.IO.FileShare.None> (to specify different attributes use one of the other Open method overloads).</span></span>  
  
 <span data-ttu-id="27fcf-491">有关其他信息，请参阅下载的开放式打包约定 (OPC) 规范[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-491">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27fcf-492">下面的示例演示如何创建一个新<xref:System.IO.Packaging.Package>包含<xref:System.IO.Packaging.PackageRelationship>和<xref:System.IO.Packaging.PackagePart>一起存储的数据元素。</span><span class="sxs-lookup"><span data-stu-id="27fcf-492">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="27fcf-493">有关完整示例，请参阅[写入包的示例](http://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-493">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27fcf-494">
            <paramref name="path" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-494">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="27fcf-495">
            <paramref name="packageMode" /> 的值无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-495">Value for <paramref name="packageMode" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(class System.IO.Stream stream, valuetype System.IO.FileMode packageMode, valuetype System.IO.FileAccess packageAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::IO::Stream ^ stream, System::IO::FileMode packageMode, System::IO::FileAccess packageAccess);" />
      <MemberSignature Language="F#" Value="static member Open : System.IO.Stream * System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (stream, packageMode, packageAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
        <Parameter Name="packageAccess" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="27fcf-496">在其上打开包的 IO 流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-496">The IO stream on which to open the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="27fcf-497">用于打开包的文件模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-497">The file mode in which to open the package.</span>
          </span>
        </param>
        <param name="packageAccess">
          <span data-ttu-id="27fcf-498">用于打开包的文件访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-498">The file access in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27fcf-499">使用给定的 IO 流、文件模式和文件访问设置打开包。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-499">Opens a package with a given IO stream, file mode, and file access setting.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27fcf-500">打开的包。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-500">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-501"><xref:System.IO.Packaging.ZipPackage> 是由默认包类型<xref:System.IO.Packaging.Package.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="27fcf-501"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="27fcf-502">有关其他信息，请参阅下载的开放式打包约定 (OPC) 规范[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-502">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27fcf-503">
            <paramref name="stream" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-503">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="27fcf-504">
            <paramref name="packageMode" /> 或 <paramref name="packageAccess" /> 的值无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-504">The value for <paramref name="packageMode" /> or <paramref name="packageAccess" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="27fcf-505">要打开的包需要读权限或读/写权限，且指定的 <paramref name="stream" /> 是只写的；或者，要打开的包需要写权限或读/写权限，且指定的 <paramref name="stream" /> 是只写的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-505">The package to open requires read or read/write permission and the specified <paramref name="stream" /> is write-only; or the package to open requires write or read/write permission and the specified <paramref name="stream" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path, valuetype System.IO.FileMode packageMode, valuetype System.IO.FileAccess packageAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, packageMode As FileMode, packageAccess As FileAccess) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path, System::IO::FileMode packageMode, System::IO::FileAccess packageAccess);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (path, packageMode, packageAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
        <Parameter Name="packageAccess" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="27fcf-506">包的路径和文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-506">The path and file name of the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="27fcf-507">用于打开包的文件模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-507">The file mode in which to open the package.</span>
          </span>
        </param>
        <param name="packageAccess">
          <span data-ttu-id="27fcf-508">用于打开包的文件访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-508">The file access in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27fcf-509">使用给定的文件模式和文件访问设置打开位于给定路径的包。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-509">Opens a package at a given path using a given file mode and file access setting.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27fcf-510">打开的包。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-510">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-511"><xref:System.IO.Packaging.ZipPackage> 是由默认包类型<xref:System.IO.Packaging.Package.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="27fcf-511"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="27fcf-512">这<xref:System.IO.Packaging.Package.Open%2A>方法中打开的包，默认值<xref:System.IO.FileShare.None>特性 (若要指定不同的属性使用<xref:System.IO.Packaging.Package.Open%2A>方法重载)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-512">This <xref:System.IO.Packaging.Package.Open%2A> method opens the package with a default <xref:System.IO.FileShare.None> attribute (to specify a different attribute use the <xref:System.IO.Packaging.Package.Open%2A> method overload).</span></span>  
  
 <span data-ttu-id="27fcf-513">有关其他信息，请参阅下载的开放式打包约定 (OPC) 规范[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-513">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27fcf-514">下面的示例演示如何打开和读取<xref:System.IO.Packaging.Package>，其中包含<xref:System.IO.Packaging.PackageRelationship>和<xref:System.IO.Packaging.PackagePart>一起存储的数据元素。</span><span class="sxs-lookup"><span data-stu-id="27fcf-514">The following example shows how to open and read a <xref:System.IO.Packaging.Package> that contains <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="27fcf-515">有关完整示例，请参阅[读取包的示例](http://go.microsoft.com/fwlink/?LinkID=160034)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-515">For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).</span></span>  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27fcf-516">
            <paramref name="path" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-516">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="27fcf-517">
            <paramref name="packageMode" /> 或 <paramref name="packageAccess" /> 的值无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-517">Value for <paramref name="packageMode" /> or <paramref name="packageAccess" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess, System.IO.FileShare packageShare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path, valuetype System.IO.FileMode packageMode, valuetype System.IO.FileAccess packageAccess, valuetype System.IO.FileShare packageShare) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, packageMode As FileMode, packageAccess As FileAccess, packageShare As FileShare) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path, System::IO::FileMode packageMode, System::IO::FileAccess packageAccess, System::IO::FileShare packageShare);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (path, packageMode, packageAccess, packageShare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
        <Parameter Name="packageAccess" Type="System.IO.FileAccess" />
        <Parameter Name="packageShare" Type="System.IO.FileShare" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="27fcf-518">包的路径和文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-518">The path and file name of the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="27fcf-519">用于打开包的文件模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-519">The file mode in which to open the package.</span>
          </span>
        </param>
        <param name="packageAccess">
          <span data-ttu-id="27fcf-520">用于打开包的文件访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-520">The file access in which to open the package.</span>
          </span>
        </param>
        <param name="packageShare">
          <span data-ttu-id="27fcf-521">用于打开包的文件共享模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-521">The file sharing mode in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27fcf-522">使用给定的文件模式、文件访问和文件共享设置打开位于给定路径的包。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-522">Opens a package at a given path using a given file mode, file access, and file share setting.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27fcf-523">打开的包。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-523">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-524"><xref:System.IO.Packaging.ZipPackage> 是由默认包类型<xref:System.IO.Packaging.Package.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="27fcf-524"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="27fcf-525">有关其他信息，请参阅下载的开放式打包约定 (OPC) 规范[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-525">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27fcf-526">下面的示例演示如何创建一个新<xref:System.IO.Packaging.Package>包含<xref:System.IO.Packaging.PackageRelationship>和<xref:System.IO.Packaging.PackagePart>一起存储的数据元素。</span><span class="sxs-lookup"><span data-stu-id="27fcf-526">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="27fcf-527">有关完整示例，请参阅[写入包的示例](http://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-527">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27fcf-528">
            <paramref name="path" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-528">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="27fcf-529">
            <paramref name="packageMode" />、<paramref name="packageAccess" /> 或 <paramref name="packageShare" /> 的值无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-529">The value for <paramref name="packageMode" />, <paramref name="packageAccess" />, or <paramref name="packageShare" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PackageProperties">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageProperties PackageProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.PackageProperties PackageProperties" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.Package.PackageProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PackageProperties As PackageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::PackageProperties ^ PackageProperties { System::IO::Packaging::PackageProperties ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PackageProperties : System.IO.Packaging.PackageProperties" Usage="System.IO.Packaging.Package.PackageProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27fcf-530">获取包的核心属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-530">Gets the core properties of the package.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27fcf-531">包的核心属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-531">The core properties of the package.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-532">有关核心包属性的其他信息，请参阅部分 3.1 中可供下载的开放式打包约定 (OPC) 规范[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-532">For additional information about core package properties, see section 3.1 in the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="27fcf-533">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-533">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PartExists">
      <MemberSignature Language="C#" Value="public virtual bool PartExists (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PartExists(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.PartExists(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PartExists (partUri As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PartExists(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="abstract member PartExists : Uri -&gt; bool&#xA;override this.PartExists : Uri -&gt; bool" Usage="package.PartExists partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="27fcf-534">要检查的部件的 <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-534">The <see cref="T:System.Uri" /> of the part to check for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27fcf-535">指示具有给定 URI 的部件是否在包中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-535">Indicates whether a part with a given URI is in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27fcf-536">如果具有指定的 <paramref name="partUri" /> 的部件在包中，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-536">
              <see langword="true" /> if a part with the specified <paramref name="partUri" /> is in the package; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-537">`partUri`应以正斜杠字符开头"/"且绝对于包的根目录。</span><span class="sxs-lookup"><span data-stu-id="27fcf-537">The `partUri` should begin with a forward-slash character "/" and be absolute from the root of the package.</span></span>  
  
 <span data-ttu-id="27fcf-538">有关其他信息，请参阅下载的开放式打包约定 (OPC) 规范[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-538">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27fcf-539">
            <paramref name="partUri" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-539">
              <paramref name="partUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="27fcf-540">
            <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-540">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="27fcf-541">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-541">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="27fcf-542">包是只写的（无法读取信息）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-542">The package is write-only (information cannot be read).</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <altmember cref="T:System.IO.Packaging.PackagePart" />
      </Docs>
    </Member>
    <Member MemberName="RelationshipExists">
      <MemberSignature Language="C#" Value="public bool RelationshipExists (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RelationshipExists(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.RelationshipExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RelationshipExists (id As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RelationshipExists(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.RelationshipExists : string -&gt; bool" Usage="package.RelationshipExists id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="27fcf-543">要检查的关系的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-543">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the relationship to check for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27fcf-544">指示具有给定 ID 的包级别关系是否包含在包中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-544">Indicates whether a package-level relationship with a given ID is contained in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27fcf-545">如果具有指定的 <paramref name="id" /> 的包级别关系在包中，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-545">
              <see langword="true" /> if a package-level relationship with the specified <paramref name="id" /> is in the package; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27fcf-546">有关其他信息，请参阅下载的开放式打包约定 (OPC) 规范[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="27fcf-546">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27fcf-547">
            <paramref name="id" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-547">
              <paramref name="id" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="27fcf-548">
            <paramref name="id" /> 不是有效的 XML 标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-548">
              <paramref name="id" /> is not a valid XML identifier.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="27fcf-549">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-549">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="27fcf-550">包是只写的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-550">The package is write-only.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.Packaging.PackageRelationship" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="27fcf-551">此成员支持 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 基础结构，不是为应用程序使用而设计的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-551">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended for application use.</span>
          </span>
          <span data-ttu-id="27fcf-552">改用类型安全的 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27fcf-552">Use the type-safe <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> method instead.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>