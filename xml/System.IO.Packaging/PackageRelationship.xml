<Type Name="PackageRelationship" FullName="System.IO.Packaging.PackageRelationship">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4a6fa63b1c921255feabb5f4e944de73cd92bf24" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33679706" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PackageRelationship" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PackageRelationship extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageRelationship" />
  <TypeSignature Language="VB.NET" Value="Public Class PackageRelationship" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageRelationship" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示源 <see cref="T:System.IO.Packaging.Package" /> 或 <see cref="T:System.IO.Packaging.PackagePart" /> 与可以为 <see cref="T:System.IO.Packaging.PackagePart" /> 或外部资源的目标对象之间的关联。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.IO.Packaging.PackageRelationship>定义之间的关联*源*<xref:System.IO.Packaging.Package>或<xref:System.IO.Packaging.PackagePart>到*目标*<xref:System.IO.Packaging.PackagePart>或外部的资源。  源对象被视为关系"所有者"。  
  
 <xref:System.IO.Packaging.PackageRelationship>类具有没有公共构造函数; 相反，使用两种创建方法：  
  
|||  
|-|-|  
|<xref:System.IO.Packaging.Package>.<xref:System.IO.Packaging.Package.CreateRelationship%2A>|创建的"包级别"关系 — 从到指定的部分或外部的资源包。|  
|<xref:System.IO.Packaging.PackagePart>.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A>|创建"部分级"关系 — 从一部分到另一个部件或外部的资源。|  
  
 由标识源的包或部件<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>的关系属性。  由标识目标部分或外部资源<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>的关系属性。  
  
 创建或删除的关系不会影响以任何方式的源或目标对象。  
  
 如果删除源对象，则也将删除对象拥有的所有关系。  
  
 关系可以在文档和文档之间的导航。  关系还支持文档对象模型服务，例如链接<xref:System.Printing.PrintTicket>到特定文档元素在打印时。  
  
 有关详细信息<xref:System.IO.Packaging.PackageRelationship>元素请参阅中的部分 1.3"关系"*开放式打包约定*规范下载[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取标识关系的字符串。</summary>
        <value>标识关系的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.Id%2A>属性字符串是唯一的所有关系归<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>包或部分。  
  
 <xref:System.IO.Packaging.PackageRelationship.Id%2A>调用中指定**包**。<xref:System.IO.Packaging.Package.CreateRelationship%2A> 或**PackagePart**。<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> 创建关系的方法。  创建关系后，<xref:System.IO.Packaging.PackageRelationship.Id%2A>不能更改。  
  
 <xref:System.IO.Packaging.PackageRelationship.Id%2A>属性字符串是有效的 XML 标识符。 <xref:System.IO.Packaging.PackageRelationship.Id%2A>类型是 xsd:ID 并且必须遵循中规定的命名约定*XML 架构第 2 部分： 数据类型*规范 (请参阅[ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      </Docs>
    </Member>
    <Member MemberName="Package">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.Package Package { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.Package Package" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.Package" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Package As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::Package ^ Package { System::IO::Packaging::Package ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含此关系的 <see cref="T:System.IO.Packaging.Package" />。</summary>
        <value>包含此关系的包。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关详细信息<xref:System.IO.Packaging.Package>元素请参阅*开放式打包约定*规范下载[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipType">
      <MemberSignature Language="C#" Value="public string RelationshipType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.RelationshipType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationshipType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelationshipType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取关系的限定类型名称。</summary>
        <value>关系的限定类型名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A>调用中指定**包**。<xref:System.IO.Packaging.Package.CreateRelationship%2A> 或**PackagePart**。<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> 创建关系的方法。  创建关系后，<xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A>不能更改。  
  
 <xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A> 在 URI 类似的语法中定义并标识的关系的角色。 例如，"http://schemas.microsoft.com/xps/2005/06/required-resource"标识与目标属于"所需的资源。"之间的关系  
  
 **包级关系类型**  
  
|描述|关系类型|  
|-----------------|-----------------------|  
|核心属性|http://schemas.microsoft.com/package/2006/relationships/metadata/core-properties|  
|数字签名|http://schemas.microsoft.com/package/2006/relationships/digital-signature/signature|  
|数字签名证书|http://schemas.microsoft.com/package/2006/relationships/digital-signature/certificate|  
|数字签名来源|http://schemas.microsoft.com/package/2006/relationships/digital-signature/origin|  
|缩略图|http://schemas.microsoft.com/package/2006/relationships/metadata/thumbnail|  
  
 有关包关系的详细信息类型请参阅第 3 章和附录 I*开放式打包约定*规范下载[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.Id" />
      </Docs>
    </Member>
    <Member MemberName="SourceUri">
      <MemberSignature Language="C#" Value="public Uri SourceUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SourceUri" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.SourceUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SourceUri { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取拥有关系的包或部分的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</summary>
        <value>拥有关系的 <see cref="T:System.IO.Packaging.Package" /> 或 <see cref="T:System.IO.Packaging.PackagePart" /> 的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果关系归<xref:System.IO.Packaging.Package>，<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>返回的 URI"/"。  
  
 如果关系归<xref:System.IO.Packaging.PackagePart>，<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>返回的 URI 的一部分。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      </Docs>
    </Member>
    <Member MemberName="TargetMode">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.TargetMode TargetMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Packaging.TargetMode TargetMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.TargetMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetMode As TargetMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::TargetMode TargetMode { System::IO::Packaging::TargetMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.TargetMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示关系的目标是否是到 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 的 <see cref="F:System.IO.Packaging.TargetMode.External" /> 或 <see cref="T:System.IO.Packaging.Package" />。</summary>
        <value>指示 <see cref="P:System.IO.Packaging.PackageRelationship.TargetUri" /> 是否引用到 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 的资源 <see cref="F:System.IO.Packaging.TargetMode.External" /> 或 <see cref="T:System.IO.Packaging.Package" /> 的枚举值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>调用中指定**包**。<xref:System.IO.Packaging.Package.CreateRelationship%2A> 或**PackagePart**。<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> 创建关系的方法。 创建关系后<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>不能更改。  
  
 当<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>是<xref:System.IO.Packaging.TargetMode.Internal>、<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>必须是相对的引用。  对于包级别的关系的相对引用<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>解析相对于拥有和包含关系的源包的包 URI。  (示例源包包 URI:"pack://http:、 www.adatum.com、 files,datapak.package/"。)对于部分级的关系，<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>处于已解决状态相对于拥有关系的源部分 (<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>解释相对于<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>)。  
  
 当<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>是<xref:System.IO.Packaging.TargetMode.External>、<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>可以是相对的引用或完全限定的 URI。  如果<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>是相对的引用，引用将解释位置相对<xref:System.IO.Packaging.Package>，其中包含此关系。  
  
 有关详细信息<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>参阅 1.3.3"关系标记"的*开放式打包约定*规范下载[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
      </Docs>
    </Member>
    <Member MemberName="TargetUri">
      <MemberSignature Language="C#" Value="public Uri TargetUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri TargetUri" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ TargetUri { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取关系的目标资源的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</summary>
        <value>目标资源的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>调用中指定**包**。<xref:System.IO.Packaging.Package.CreateRelationship%2A> 或**PackagePart**。<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> 创建关系的方法。 创建关系后<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>不能更改。  
  
 当<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>是<xref:System.IO.Packaging.TargetMode.Internal>、<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>必须是相对的引用。  对于包级别的关系的相对引用<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>解析相对于拥有和包含关系的源包的包 URI。  (示例源包包 URI:"pack://http:、 www.adatum.com、 files,datapak.package/"。)对于部分级的关系，<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>处于已解决状态相对于拥有关系的源部分 (<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>解释相对于<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>)。  
  
 当<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>是<xref:System.IO.Packaging.TargetMode.External>、<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>可以是相对的引用或完全限定的 URI。  如果<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>是相对的引用，引用将解释位置相对<xref:System.IO.Packaging.Package>，其中包含此关系。  
  
 有关详细信息<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>参阅 1.3.3"关系标记"的*开放式打包约定*规范下载[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetMode" />
      </Docs>
    </Member>
  </Members>
</Type>