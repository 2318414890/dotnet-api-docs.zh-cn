<Type Name="PackageStore" FullName="System.IO.Packaging.PackageStore">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cb63b9884469dab5119b479d4d26748d23cfa155" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56400335" /></Metadata><TypeSignature Language="C#" Value="public static class PackageStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed PackageStore extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageStore" />
  <TypeSignature Language="VB.NET" Value="Public Class PackageStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageStore abstract sealed" />
  <TypeSignature Language="F#" Value="type PackageStore = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="45005-101">表示结合 <see cref="T:System.IO.Packaging.Package" /> 使用的应用程序特定的 <see cref="T:System.IO.Packaging.PackWebRequest" /> 实例的集合。</span><span class="sxs-lookup"><span data-stu-id="45005-101">Represents a collection of application-specific <see cref="T:System.IO.Packaging.Package" /> instances used in combination with <see cref="T:System.IO.Packaging.PackWebRequest" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45005-102"><xref:System.IO.Packaging.PackageStore>定义已打开，而该应用程序中处于活动状态的引用集合的包。</span><span class="sxs-lookup"><span data-stu-id="45005-102">The <xref:System.IO.Packaging.PackageStore> defines a reference collections of package that are open and active in the application.</span></span>  <span data-ttu-id="45005-103">包添加到<xref:System.IO.Packaging.PackageStore>访问是按其键值的 URI。</span><span class="sxs-lookup"><span data-stu-id="45005-103">Packages added to the <xref:System.IO.Packaging.PackageStore> are accessed is by their key URI value.</span></span>  <span data-ttu-id="45005-104"><xref:System.IO.Packaging.PackageStore>支持三种常见用途：</span><span class="sxs-lookup"><span data-stu-id="45005-104">The <xref:System.IO.Packaging.PackageStore> supports three common uses:</span></span>  
  
1.  <span data-ttu-id="45005-105">访问<xref:System.IO.Packaging.PackagePart>通过数据<xref:System.IO.Packaging.PackWebRequest>。</span><span class="sxs-lookup"><span data-stu-id="45005-105">Accessing <xref:System.IO.Packaging.PackagePart> data through <xref:System.IO.Packaging.PackWebRequest>.</span></span>  
  
2.  <span data-ttu-id="45005-106">应用程序获取的实例<xref:System.IO.Packaging.Package>给定包的 URI。</span><span class="sxs-lookup"><span data-stu-id="45005-106">The application obtaining an instance of a <xref:System.IO.Packaging.Package> given the package's URI.</span></span>  
  
3.  <span data-ttu-id="45005-107">访问包，将创建并存储在<xref:System.IO.MemoryStream>。</span><span class="sxs-lookup"><span data-stu-id="45005-107">Accessing packages that are created and stored in a <xref:System.IO.MemoryStream>.</span></span>  
  
 <span data-ttu-id="45005-108">若要提高性能并最大程度减少重复的文件打开/关闭操作的开销<xref:System.IO.Packaging.PackageStore>用于管理的包访问的实例<xref:System.IO.Packaging.PackWebRequest>和直接由应用程序。</span><span class="sxs-lookup"><span data-stu-id="45005-108">To improve performance and minimize the overhead of repeated file open/close operations, the <xref:System.IO.Packaging.PackageStore> is used to manage instances of packages accessed by <xref:System.IO.Packaging.PackWebRequest> and directly by the application.</span></span>  <span data-ttu-id="45005-109">访问在包中，数据时<xref:System.IO.Packaging.Package>地址的请求<xref:System.IO.Packaging.PackagePart><xref:System.IO.Packaging.PackagePart.Uri%2A>首先进行检查以查看该程序包是否已定义且在中打开<xref:System.IO.Packaging.PackageStore>。</span><span class="sxs-lookup"><span data-stu-id="45005-109">When accessing data in a package, the <xref:System.IO.Packaging.Package> address of a requested <xref:System.IO.Packaging.PackagePart> <xref:System.IO.Packaging.PackagePart.Uri%2A> is first checked to see if the package is already defined and open in the <xref:System.IO.Packaging.PackageStore>.</span></span>  <span data-ttu-id="45005-110">如果包定义在中，打开<xref:System.IO.Packaging.PackageStore>，请求可以反复打开和关闭每个请求的包不直接访问部分。</span><span class="sxs-lookup"><span data-stu-id="45005-110">If the package is defined as open in the <xref:System.IO.Packaging.PackageStore>, requested parts can be accessed directly without repeatedly opening and closing the package for each  request.</span></span>  
  
 <span data-ttu-id="45005-111">如果你的应用程序打开的包<xref:System.IO.Packaging.Package.Open%2A?displayProperty=nameWithType>，<xref:System.IO.Packaging.PackageStore.AddPackage%2A>可以调用以添加到包<xref:System.IO.Packaging.PackageStore>。</span><span class="sxs-lookup"><span data-stu-id="45005-111">If your application opens a package with <xref:System.IO.Packaging.Package.Open%2A?displayProperty=nameWithType>, <xref:System.IO.Packaging.PackageStore.AddPackage%2A> can be called to add the package to the <xref:System.IO.Packaging.PackageStore>.</span></span>  <span data-ttu-id="45005-112"><xref:System.IO.Packaging.PackageStore.RemovePackage%2A> 应更高版本调用以从包中删除<xref:System.IO.Packaging.PackageStore>之前调用<xref:System.IO.Packaging.Package.Close%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="45005-112"><xref:System.IO.Packaging.PackageStore.RemovePackage%2A> should later be called to remove the package from the <xref:System.IO.Packaging.PackageStore> prior to calling <xref:System.IO.Packaging.Package.Close%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="45005-113">使用打开 XPS 包<xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A>构造函数将自动添加和删除从<xref:System.IO.Packaging.PackageStore>创建和释放文档时。</span><span class="sxs-lookup"><span data-stu-id="45005-113">XPS packages opened with an <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> constructor are automatically added and removed from the <xref:System.IO.Packaging.PackageStore> when the document is created and disposed.</span></span>  <span data-ttu-id="45005-114">(不需要调用<xref:System.IO.Packaging.PackageStore.AddPackage%2A>或<xref:System.IO.Packaging.PackageStore.RemovePackage%2A>单独打开的 XPS 包与<xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A>构造函数。)</span><span class="sxs-lookup"><span data-stu-id="45005-114">(You do not need to call <xref:System.IO.Packaging.PackageStore.AddPackage%2A> or <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> separately for XPS packages opened with <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> constructors.)</span></span>  
  
 <span data-ttu-id="45005-115">通过访问包的文件 I/O 权限<xref:System.IO.Packaging.PackageStore>仍保持打开时为包设置的 I/O 权限。</span><span class="sxs-lookup"><span data-stu-id="45005-115">The file I/O permissions of a package accessed through the <xref:System.IO.Packaging.PackageStore> remains the same as the I/O permissions set on the package when it is opened.</span></span>  <span data-ttu-id="45005-116"><xref:System.IO.Packaging.PackageStore>仅提供对已添加存储的包的引用。</span><span class="sxs-lookup"><span data-stu-id="45005-116">The <xref:System.IO.Packaging.PackageStore> only provides references to the packages that have been added the store.</span></span>  <span data-ttu-id="45005-117">它是应用程序负责正确打开、 更新和关闭每个包。</span><span class="sxs-lookup"><span data-stu-id="45005-117">It is up to the application to correctly open, update, and close each package.</span></span>  
  
 <span data-ttu-id="45005-118">包添加到<xref:System.IO.Packaging.PackageStore>结合使用时，可以在多线程环境中访问[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]如分析器<xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="45005-118">Packages added to the <xref:System.IO.Packaging.PackageStore> can be accessed in multithreaded environments when they are used in combination with a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] parser such as <xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="45005-119">在多线程环境操作时，应用程序必须锁定之前访问包。</span><span class="sxs-lookup"><span data-stu-id="45005-119">When operating in a multithreaded environment, the application must lock the package before access.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.PackWebRequest" />
    <altmember cref="T:System.IO.Packaging.PackWebResponse" />
  </Docs>
  <Members>
    <Member MemberName="AddPackage">
      <MemberSignature Language="C#" Value="public static void AddPackage (Uri uri, System.IO.Packaging.Package package);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPackage(class System.Uri uri, class System.IO.Packaging.Package package) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPackage(Uri ^ uri, System::IO::Packaging::Package ^ package);" />
      <MemberSignature Language="F#" Value="static member AddPackage : Uri * System.IO.Packaging.Package -&gt; unit" Usage="System.IO.Packaging.PackageStore.AddPackage (uri, package)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="45005-120">要在 <see cref="T:System.IO.Packaging.PackWebRequest" /> 中比较的 <paramref name="package" /> 的键 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="45005-120">The key [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the <paramref name="package" /> to compare in a <see cref="T:System.IO.Packaging.PackWebRequest" />.</span></span></param>
        <param name="package"><span data-ttu-id="45005-121">要添加到存储区的包。</span><span class="sxs-lookup"><span data-stu-id="45005-121">The package to add to the store.</span></span></param>
        <summary><span data-ttu-id="45005-122">将 <see cref="T:System.IO.Packaging.Package" /> 添加到存储区。</span><span class="sxs-lookup"><span data-stu-id="45005-122">Adds a <see cref="T:System.IO.Packaging.Package" /> to the store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45005-123">`packageUri` 定义包的键进行比较，当您调用的 URI <xref:System.IO.Packaging.PackWebRequest>。</span><span class="sxs-lookup"><span data-stu-id="45005-123">`packageUri` defines the package's key URI that is compared when you call <xref:System.IO.Packaging.PackWebRequest>.</span></span>  
  
 <span data-ttu-id="45005-124">如果`packageUri`匹配<xref:System.IO.Packaging.PackagePart.Uri%2A>有关<xref:System.IO.Packaging.PackagePart>中<xref:System.IO.Packaging.PackWebRequest>调用中定义的包<xref:System.IO.Packaging.PackageStore>用于访问所请求的部分。</span><span class="sxs-lookup"><span data-stu-id="45005-124">If the `packageUri` matches the <xref:System.IO.Packaging.PackagePart.Uri%2A> for a <xref:System.IO.Packaging.PackagePart> in a <xref:System.IO.Packaging.PackWebRequest> call, the package defined in the <xref:System.IO.Packaging.PackageStore> is used to access the requested part.</span></span>  
  
 <span data-ttu-id="45005-125">如果`packageUri`不符<xref:System.IO.Packaging.PackagePart.Uri%2A>有关<xref:System.IO.Packaging.PackagePart>中<xref:System.IO.Packaging.PackWebRequest>调用，用指定的 URI 的包会打开用于访问所请求的部分。</span><span class="sxs-lookup"><span data-stu-id="45005-125">If the `packageUri` does not match the <xref:System.IO.Packaging.PackagePart.Uri%2A> for a <xref:System.IO.Packaging.PackagePart> in a <xref:System.IO.Packaging.PackWebRequest> call, the package with the specified URI is opened to access the requested part.</span></span>  
  
 <span data-ttu-id="45005-126">**安全说明**此方法要求<xref:System.Security.Permissions.EnvironmentPermission>的所有自定义<xref:System.IO.Packaging.Package>(非<xref:System.IO.Packaging.ZipPackage>) 类型。</span><span class="sxs-lookup"><span data-stu-id="45005-126">**Security Note** This method demands <xref:System.Security.Permissions.EnvironmentPermission> for all custom <xref:System.IO.Packaging.Package> (non-<xref:System.IO.Packaging.ZipPackage>) types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45005-127">下面的示例显示如何使用 <xref:System.IO.Packaging.PackageStore.AddPackage%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="45005-127">The following example shows how to use the <xref:System.IO.Packaging.PackageStore.AddPackage%2A> method.</span></span>  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewDecrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewdecrypt)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewDecrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewdecrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="45005-128"><paramref name="package" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="45005-128"><paramref name="package" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="45005-129"><paramref name="packageUri" /> 是无效的包 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="45005-129"><paramref name="packageUri" /> is an invalid package [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="45005-130">带有指定 <paramref name="packageUri" /> 的包已位于存储区中。</span><span class="sxs-lookup"><span data-stu-id="45005-130">A package with the specified <paramref name="packageUri" /> is already in the store.</span></span></exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPackage">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package GetPackage (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package GetPackage(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ GetPackage(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="static member GetPackage : Uri -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.PackageStore.GetPackage uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="45005-131">要返回的包的 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="45005-131">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the package to return.</span></span></param>
        <summary><span data-ttu-id="45005-132">从存储区中返回带有指定 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 的 <see cref="T:System.IO.Packaging.Package" />。</span><span class="sxs-lookup"><span data-stu-id="45005-132">Returns the <see cref="T:System.IO.Packaging.Package" /> with a specified [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] from the store.</span></span></summary>
        <returns><span data-ttu-id="45005-133">带有指定 <paramref name="packageUri" /> 的包；或者 <see langword="null" />（如果带有指定 <paramref name="packageUri" /> 的包不在存储区中）。</span><span class="sxs-lookup"><span data-stu-id="45005-133">The package with a specified <paramref name="packageUri" />; or <see langword="null" />, if a package with the specified <paramref name="packageUri" /> is not in the store.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45005-134">`packageUri` 匹配的 Uri 中指定<xref:System.IO.Packaging.PackageStore.AddPackage%2A>方法调用。</span><span class="sxs-lookup"><span data-stu-id="45005-134">`packageUri` is matched to the URIs specified in the <xref:System.IO.Packaging.PackageStore.AddPackage%2A> method call.</span></span>  
  
 <span data-ttu-id="45005-135">**安全说明**此方法要求<xref:System.Security.Permissions.EnvironmentPermission>的所有自定义<xref:System.IO.Packaging.Package>(非<xref:System.IO.Packaging.ZipPackage>) 类型。</span><span class="sxs-lookup"><span data-stu-id="45005-135">**Security Note** This method demands <xref:System.Security.Permissions.EnvironmentPermission> for all custom <xref:System.IO.Packaging.Package> (non-<xref:System.IO.Packaging.ZipPackage>) types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45005-136">下面的示例显示如何使用 <xref:System.IO.Packaging.PackageStore.GetPackage%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="45005-136">The following example shows how to use the <xref:System.IO.Packaging.PackageStore.GetPackage%2A> method.</span></span>  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewopendoc)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewopendoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="45005-137"><paramref name="packageUri" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="45005-137"><paramref name="packageUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="45005-138"><paramref name="packageUri" /> 是无效的包 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="45005-138"><paramref name="packageUri" /> is an invalid package [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</span></span></exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="RemovePackage">
      <MemberSignature Language="C#" Value="public static void RemovePackage (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePackage(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePackage(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="static member RemovePackage : Uri -&gt; unit" Usage="System.IO.Packaging.PackageStore.RemovePackage uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="45005-139">要移除的包的 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="45005-139">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the package to remove.</span></span></param>
        <summary><span data-ttu-id="45005-140">从存储区中移除带有指定 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 的 <see cref="T:System.IO.Packaging.Package" />。</span><span class="sxs-lookup"><span data-stu-id="45005-140">Removes the <see cref="T:System.IO.Packaging.Package" /> with a specified [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] from the store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45005-141">`packageUri` 匹配的 Uri 中指定<xref:System.IO.Packaging.PackageStore.AddPackage%2A>方法调用。</span><span class="sxs-lookup"><span data-stu-id="45005-141">`packageUri` is matched to the URIs specified in the <xref:System.IO.Packaging.PackageStore.AddPackage%2A> method call.</span></span>  
  
 <span data-ttu-id="45005-142">**安全说明**此方法要求<xref:System.Security.Permissions.EnvironmentPermission>的所有自定义<xref:System.IO.Packaging.Package>(非<xref:System.IO.Packaging.ZipPackage>) 类型。</span><span class="sxs-lookup"><span data-stu-id="45005-142">**Security Note** This method demands <xref:System.Security.Permissions.EnvironmentPermission> for all custom <xref:System.IO.Packaging.Package> (non-<xref:System.IO.Packaging.ZipPackage>) types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45005-143">下面的示例显示如何使用 <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="45005-143">The following example shows how to use the <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> method.</span></span>  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewclosedoc)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewclosedoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="45005-144"><paramref name="packageUri" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="45005-144"><paramref name="packageUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="45005-145"><paramref name="packageUri" /> 是无效的包 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="45005-145"><paramref name="packageUri" /> is an invalid package [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</span></span></exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
      </Docs>
    </Member>
  </Members>
</Type>