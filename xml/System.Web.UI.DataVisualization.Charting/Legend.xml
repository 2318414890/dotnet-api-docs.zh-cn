<Type Name="Legend" FullName="System.Web.UI.DataVisualization.Charting.Legend">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eaf9f52c574370ac090061d34136003318bc10aa" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30551111" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Legend : System.Web.UI.DataVisualization.Charting.ChartNamedElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Legend extends System.Web.UI.DataVisualization.Charting.ChartNamedElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.Legend" />
  <TypeSignature Language="VB.NET" Value="Public Class Legend&#xA;Inherits ChartNamedElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class Legend : System::Web::UI::DataVisualization::Charting::ChartNamedElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataVisualization.Charting.ChartNamedElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Enabled")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示图表图像的图例。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Legend>类封装的所有功能<xref:System.Web.UI.DataVisualization.Charting.Chart>控件的图例，并使用公开<xref:System.Web.UI.DataVisualization.Charting.Chart.Legends%2A>集合的根属性<xref:System.Web.UI.DataVisualization.Charting.Chart>对象。  
  
 可以有任意数量的图表图像的图例。  
  
 图例可以：  
  
-   停靠和对齐。  
  
-   显示内部或外部绘制的图表区。  
  
-   自动适应其内容。  
  
-   使用预定义的样式，如行、 列或表。  
  
-   使用阴影、 渐变颜色和背景图像。  
  
-   可调整大小和在图表图像中任意位置放置。  
  
 图例项都由<xref:System.Web.UI.DataVisualization.Charting.LegendItem>对象，并且是默认或自定义项。 自定义项不相关联的数据，并可以添加、 删除和修改使用<xref:System.Web.UI.DataVisualization.Charting.Legend.CustomItems%2A>属性。  
  
 默认项是默认情况下都将自动添加到图例中，并且圆环图和饼形图的绘制的数据点的名称。  
  
 对于所有其他图表类型，默认的项目是绘制的数据序列的名称。 每个系列具有<xref:System.Web.UI.DataVisualization.Charting.Series.Legend%2A>定义将使用将图例的名称的属性。 图例项将不会创建一系列如果<xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.IsVisibleInLegend%2A>属性设置为`false`。 可以使用更改这些默认的项目的文本<xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A>属性。 此属性将允许你指定将替换为相应的值在运行时的预定义的关键字。  
  
 如果你有一个饼图，并设置<xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.Label%2A>属性，它还将设置图例文本设置标签的值。 如果你想要为不同的值设置的文本，则可以设置<xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A>属性。 在大多数情况下，你将想要设置<xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A>属性设置为"#AXISLABEL"或"#VALX"。  
  
 图例系列符号是矩形、 点或线条。 符号类型由图表自动设置，并且依赖于绘制的图表类型。  
  
 默认情况下的图例文本自动调整大小。 你可以通过禁用禁用的图例文本自动调整大小<xref:System.Web.UI.DataVisualization.Charting.Legend.IsTextAutoFit%2A>属性。 当此属性设置为`false`，图例文本的大小由图例的大小属性<xref:System.Web.UI.DataVisualization.Charting.Legend.Font%2A>。 如果<xref:System.Web.UI.DataVisualization.Charting.Legend.IsTextAutoFit%2A>属性已启用，<xref:System.Web.UI.DataVisualization.Charting.Legend.AutoFitMinFontSize%2A>属性确定一个图例项可以有在调整大小时的最小字号。  
  
 <xref:System.Web.UI.DataVisualization.Charting.Legend.TextWrapThreshold%2A>属性定义的文本换行到另一行之前可以在一行显示的字符数限制。 如果你不希望在图例中的文本换行，将的值设置<xref:System.Web.UI.DataVisualization.Charting.Legend.TextWrapThreshold%2A>为零的属性。 默认情况下，当整个图例文本无法容纳在图例中，文本将被截断。 你可以设置<xref:System.Web.UI.DataVisualization.Charting.Legend.TextWrapThreshold%2A>图例以获取文本换行而不被截断。  
  
 如果将图例的内容无法放入给定区域，图例项将被截断。 省略号显示以指示不存在多个项与图例拥有的空间。 若要防止图例项被截断，设置的位置和大小的图例使用<xref:System.Web.UI.DataVisualization.Charting.Legend.Position%2A>属性。 设置图例位置或大小时, 图表可以不再自动放置在图表中的元素。 在某些情况下，许多需要手动定位其他图表元素，以获得所需的外观。  
  
 另一种方法是定义而不是使用默认图例设置自己的单元格的列。  
  
 <xref:System.Web.UI.DataVisualization.Charting.Legend>对象都有一个 CellColumn 集合; 每个 CellColumn 对象表示在图例中的列。 某一单元格列具有<xref:System.Web.UI.DataVisualization.Charting.LegendCellColumn.MaximumWidth%2A>和<xref:System.Web.UI.DataVisualization.Charting.LegendCellColumn.MinimumWidth%2A>属性，可以用于调整列的大小。  
  
 如果图例中包含许多项，<xref:System.Web.UI.DataVisualization.Charting.Legend.InterlacedRows%2A>可以用于提高可读性。 如果此属性设置为 True 时，它将显示你可以使用设置的背景色<xref:System.Web.UI.DataVisualization.Charting.Legend.InterlacedRowsColor%2A>属性。  
  
 默认情况下，图例位于图表右上角。 可以通过修改此位置<xref:System.Web.UI.DataVisualization.Charting.Legend.Docking%2A>和<xref:System.Web.UI.DataVisualization.Charting.Legend.Alignment%2A>将图例的属性。 图例还可以通过使用与图表区相关联<xref:System.Web.UI.DataVisualization.Charting.Legend.DockedToChartArea%2A>属性。 此属性指定应为其停靠图例的图表区的名称。 此外，<xref:System.Web.UI.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A>属性可以用于显示在图表区的图例。  
  
 当<xref:System.Web.UI.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A>设置为 False，<xref:System.Web.UI.DataVisualization.Charting.Legend.MaximumAutoSize%2A>属性定义的最大大小，以百分比表示，可用图表时自动定位图例中图例。 如果你想要调整的宽度或高度的图例已设置的停靠属性后，应设置此属性。  
  
 可以使用修改图例<xref:System.Web.UI.DataVisualization.Charting.Chart.CustomizeLegend>事件。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Legend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Legend.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Legend();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Legend (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Legend.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Legend(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> 对象的名称。</param>
        <summary>使用指定的图例名称初始化 <see cref="T:System.Web.UI.DataVisualization.Charting.AnnotationPathPoint" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public System.Drawing.StringAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.StringAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As StringAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::StringAlignment Alignment { System::Drawing::StringAlignment get(); void set(System::Drawing::StringAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.StringAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例的对齐方式。</summary>
        <value>一个 .NET Framework <see cref="T:System.Drawing.StringAlignment" /> 枚举值，该值表示图例的对齐方式。 默认值为 <see cref="F:System.Drawing.StringAlignment.Near" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 以便它可以对齐图例<xref:System.Drawing.StringAlignment.Near>，<xref:System.Drawing.StringAlignment.Center>或<xref:System.Drawing.StringAlignment.Far>; 也会影响它的对齐<xref:System.Web.UI.DataVisualization.Charting.Legend.Docking%2A>属性设置。  
  
 如果在图例停靠到顶部或底部，<xref:System.Drawing.StringAlignment.Near>停靠到左侧或右侧，则将左侧;<xref:System.Drawing.StringAlignment.Near>正处于顶部。 <xref:System.Drawing.StringAlignment.Far>属性设置为正相反，和将对齐到右侧或底部，具体取决于停靠的位置的图例。  
  
 <xref:System.Drawing.StringAlignment.Center> 始终中心图例中，垂直或水平。  
  
 设置<xref:System.Web.UI.DataVisualization.Charting.Legend.Alignment%2A>属性将产生任何影响，如果<xref:System.Web.UI.DataVisualization.Charting.Legend.Position%2A>属性未设置为<xref:System.Web.UI.DataVisualization.Charting.ElementPosition.Auto%2A>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFitMinFontSize">
      <MemberSignature Language="C#" Value="public int AutoFitMinFontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AutoFitMinFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.AutoFitMinFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFitMinFontSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AutoFitMinFontSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置可用于图例文本自动调整算法的最小字号。</summary>
        <value>一个 <see langword="integer" /> 值，该值表示最小字号。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例的背景色。</summary>
        <value>一个 <see cref="T:System.Drawing.Color" /> 值，表示图例的背景色。 默认颜色为 <see cref="System.Drawing.Color.White" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以将此属性设置为任何有效的 ARGB alpha、 红色、 绿色 (蓝色） 值。  
  
 <xref:System.Web.UI.DataVisualization.Charting.Legend.BackColor%2A>值将为第一种颜色使用如果已指定背景的渐变颜色。  
  
 Alpha 值控制一种颜色的不的透明度。 如果将此颜色设置为"透明"— 也就是说，如果你使用的 alpha 值为 0-无颜色将分配给将图例的背景。 因此，背景将呈透明。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackGradientStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.GradientStyle BackGradientStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.GradientStyle BackGradientStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BackGradientStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackGradientStyle As GradientStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::GradientStyle BackGradientStyle { System::Web::UI::DataVisualization::Charting::GradientStyle get(); void set(System::Web::UI::DataVisualization::Charting::GradientStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.GradientEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.GradientStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例的背景渐变方向。 还确定是否使用渐变。</summary>
        <value>一个 <see cref="T:System.Web.UI.DataVisualization.Charting.GradientStyle" /> 枚举，表示图例的背景渐变的方向。 默认值为 <see cref="F:System.Web.UI.DataVisualization.Charting.GradientStyle.None" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.DataVisualization.Charting.Legend.BackGradientStyle%2A>属性来确定是否图例将显示渐变，并以确定渐变的方向，如果一个使用。  
  
 有关可用模式的列表，请参阅<xref:System.Web.UI.DataVisualization.Charting.GradientStyle>枚举。  
  
 若要使用渐变颜色：  
  
 设置主要颜色的图例背景<xref:System.Web.UI.DataVisualization.Charting.Legend.BackColor%2A>属性。  
  
 设置图例背景辅助颜色<xref:System.Web.UI.DataVisualization.Charting.Legend.BackSecondaryColor%2A>属性。  
  
 将此项设置<xref:System.Web.UI.DataVisualization.Charting.Legend.BackGradientStyle%2A>为所需的渐变样式的属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackHatchStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartHatchStyle BackHatchStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartHatchStyle BackHatchStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BackHatchStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackHatchStyle As ChartHatchStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartHatchStyle BackHatchStyle { System::Web::UI::DataVisualization::Charting::ChartHatchStyle get(); void set(System::Web::UI::DataVisualization::Charting::ChartHatchStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.HatchStyleEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartHatchStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例的阴影类型。</summary>
        <value>一个 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartHatchStyle" /> 枚举，表示图例的阴影类型。 默认值为 <see cref="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.None" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.ChartHatchStyle>枚举指定使用类型的画笔的阴影模式<xref:System.Drawing.Drawing2D.HatchBrush>。 阴影图案由纯色背景色和背景上绘制的直线组成。  
  
 有关可用的阴影样式的列表，请参阅<xref:System.Web.UI.DataVisualization.Charting.ChartHatchStyle>枚举。  
  
 **请注意**阴影行的颜色由<xref:System.Web.UI.DataVisualization.Charting.Legend.BackSecondaryColor%2A>属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImage">
      <MemberSignature Language="C#" Value="public string BackImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BackImage" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BackImage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ImageValueEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例的背景图像。</summary>
        <value>一个 <see langword="string" /> 值，该值表示图像文件的 URL。 默认值为一个空字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性定义的背景图像路径<xref:System.Web.UI.DataVisualization.Charting.Chart>图例中，可以是绝对或相对 URL。  
  
 若要定位图像，请使用<xref:System.Web.UI.DataVisualization.Charting.Legend.BackImageAlignment%2A>和<xref:System.Web.UI.DataVisualization.Charting.Legend.BackImageWrapMode%2A>属性。  
  
 你还可以指定通过设置为"透明"的映像显示的颜色之一<xref:System.Web.UI.DataVisualization.Charting.Legend.BackImageTransparentColor%2A>属性。  
  
 映像可以来源于支持.NET Framework，包括图标的任何有效图形文件。  
  
 背景图像优先于其他后台属性，如渐变颜色。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageAlignment">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BackImageAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageAlignment As ChartImageAlignmentStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartImageAlignmentStyle BackImageAlignment { System::Web::UI::DataVisualization::Charting::ChartImageAlignmentStyle get(); void set(System::Web::UI::DataVisualization::Charting::ChartImageAlignmentStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于 <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled" /> 绘制模式的背景图像对齐方式。</summary>
        <value>一个 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle" /> 枚举值，表示背景图像对齐方式。 默认值为 <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle.TopLeft" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性确定图例; 的背景图像的对齐方式它是仅应用的在<xref:System.Web.UI.DataVisualization.Charting.Legend.BackImageWrapMode%2A>属性设置为<xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageTransparentColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackImageTransparentColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackImageTransparentColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BackImageTransparentColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageTransparentColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackImageTransparentColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在绘制背景图像时，将替换为透明色的颜色。</summary>
        <value>一个将显示为透明效果的 <see cref="T:System.Drawing.Color" /> 值。 默认值为 <see cref="F:System.Drawing.Color.Empty" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageWrapMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BackImageWrapMode" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageWrapMode As ChartImageWrapMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartImageWrapMode BackImageWrapMode { System::Web::UI::DataVisualization::Charting::ChartImageWrapMode get(); void set(System::Web::UI::DataVisualization::Charting::ChartImageWrapMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartImageWrapMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例背景图像的绘制模式。</summary>
        <value>一个 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode" /> 枚举值，表示图例背景图像的绘制模式。 默认值为 <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Tile" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Legend.BackImageWrapMode%2A>属性确定图像的显示方式; 映像可以平铺、 缩放后，等等。  
  
 如果缩放图像，它将拉伸以适合将图例的边界。 如果平铺图像，则从图例的左上角开始，对其重复绘制。  
  
 有关可用包装模式的详细信息，请参阅<xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode>枚举主题。  
  
 如果<xref:System.Web.UI.DataVisualization.Charting.Legend.BackImageWrapMode%2A>属性设置为<xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled>，绘制图像的位置由<xref:System.Web.UI.DataVisualization.Charting.Legend.BackImageAlignment%2A>属性设置。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackSecondaryColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackSecondaryColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackSecondaryColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BackSecondaryColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackSecondaryColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackSecondaryColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例背景的辅助颜色。</summary>
        <value>一个 <see cref="T:System.Drawing.Color" /> 值，该值用于带阴影或渐变填充的背景的辅助颜色。 默认值为 <see cref="F:System.Drawing.Color.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Legend.BackSecondaryColor%2A>属性确定辅助背景色的许多<xref:System.Web.UI.DataVisualization.Charting.Chart>对象，并在应用渐变颜色时使用。  
  
 你可以设置<xref:System.Web.UI.DataVisualization.Charting.Legend.BackSecondaryColor%2A>为任何有效的 ARGB alpha、 红色、 绿色 (蓝色） 值。  
  
 如果使用阴影，则<xref:System.Web.UI.DataVisualization.Charting.Legend.BackSecondaryColor%2A>属性确定图例阴影线的颜色。  
  
 若要使用的图例背景渐变颜色：  
  
-   设置与主要颜色<xref:System.Web.UI.DataVisualization.Charting.Legend.BackColor%2A>属性。  
  
-   设置使用的辅助颜色<xref:System.Web.UI.DataVisualization.Charting.Legend.BackSecondaryColor%2A>属性。  
  
-   设置<xref:System.Web.UI.DataVisualization.Charting.Legend.BackGradientStyle%2A>为所需的渐变样式的属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例的边框颜色。</summary>
        <value>一个 <see cref="T:System.Drawing.Color" /> 值，表示图例的边框色。 默认颜色为 <see cref="F:System.Drawing.Color.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以将此属性设置为任何有效的 ARGB alpha、 红色、 绿色 (蓝色） 值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderDashStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartDashStyle BorderDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartDashStyle BorderDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BorderDashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderDashStyle As ChartDashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartDashStyle BorderDashStyle { System::Web::UI::DataVisualization::Charting::ChartDashStyle get(); void set(System::Web::UI::DataVisualization::Charting::ChartDashStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例的边框样式。</summary>
        <value>一个 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartDashStyle" /> 枚举值，该值确定图表元素的边框样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Legend.BorderDashStyle%2A>属性确定要用于边框的线条样式。 行可以是实体、 线和等。  
  
 有关其他边框样式，请参阅<xref:System.Web.UI.DataVisualization.Charting.ChartDashStyle>枚举主题。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public int BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BorderWidth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例的边框宽度。</summary>
        <value>一个 <see langword="integer" /> 值，该值确定图例边框的宽度（以像素为单位）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请注意，<xref:System.Web.UI.DataVisualization.Charting.Legend.BorderWidth%2A>属性还可以在作为折线图中，自定义图例项显示为"线条"样式和等此类元素中设置行的宽度。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CellColumns">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendCellColumnCollection CellColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.LegendCellColumnCollection CellColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.CellColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CellColumns As LegendCellColumnCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::LegendCellColumnCollection ^ CellColumns { System::Web::UI::DataVisualization::Charting::LegendCellColumnCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.LegendCellColumnCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendCellColumnCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取图例的 <see cref="T:System.Web.UI.DataVisualization.Charting.LegendCellColumnCollection" />。</summary>
        <value>图例的 <see cref="T:System.Web.UI.DataVisualization.Charting.LegendCellColumnCollection" /> 对象。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomItems">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendItemsCollection CustomItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.LegendItemsCollection CustomItems" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.CustomItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomItems As LegendItemsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::LegendItemsCollection ^ CustomItems { System::Web::UI::DataVisualization::Charting::LegendItemsCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.LegendItemCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendItemsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于自定义图例项的 <see cref="T:System.Web.UI.DataVisualization.Charting.LegendItemsCollection" /> 对象。</summary>
        <value>用于自定义图例项的 <see cref="T:System.Web.UI.DataVisualization.Charting.LegendItemsCollection" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此集合属性可用来添加、 删除或修改自定义图例项。  
  
 自定义图例项，与默认图例项不同没有关联的序列或数据点。  
  
 若要修改的图例项，使用<xref:System.Web.UI.DataVisualization.Charting.Chart.CustomizeLegend>事件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Legend.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
        <summary>释放由 <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DockedToChartArea">
      <MemberSignature Language="C#" Value="public string DockedToChartArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DockedToChartArea" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.DockedToChartArea" />
      <MemberSignature Language="VB.NET" Value="Public Property DockedToChartArea As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DockedToChartArea { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("NotSet")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.LegendAreaNameConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例将停靠于其上的 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 的名称。</summary>
        <value>一个 <see langword="string" /> 值，该值表示图例将停靠于其上的 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 的名称。 默认值为空字符串。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Docking">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.Docking Docking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.Docking Docking" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.Docking" />
      <MemberSignature Language="VB.NET" Value="Public Property Docking As Docking" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::Docking Docking { System::Web::UI::DataVisualization::Charting::Docking get(); void set(System::Web::UI::DataVisualization::Charting::Docking value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.Docking</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个确定图例停靠位置的值。</summary>
        <value>一个 <see cref="T:System.Web.UI.DataVisualization.Charting.Docking" /> 枚举值，该值确定图例停靠位置。 默认值为 <see cref="F:System.Web.UI.DataVisualization.Charting.Docking.Right" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Legend>可以停靠到顶部、 左侧、 底部或右侧的整个图表图像或内部或外部的图表区。 如果<xref:System.Web.UI.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A>属性设置为`false`，停靠适用于整个图表图像。 如果<xref:System.Web.UI.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A>属性设置为`true`，停靠适用于<xref:System.Web.UI.DataVisualization.Charting.ChartArea>指定对象<xref:System.Web.UI.DataVisualization.Charting.Legend.DockedToChartArea%2A>属性  
  
 此属性如果不起作用<xref:System.Web.UI.DataVisualization.Charting.Legend.Position%2A>属性未设置为<xref:System.Web.UI.DataVisualization.Charting.ElementPosition.Auto%2A>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个确定图例是否启用的值。</summary>
        <value>
          如果启用图例，则为 <see langword="true" />；否则，为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要隐藏图例，请将此属性设置为`false`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Font), "Microsoft Sans Serif, 8pt")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于设置图例字体属性的 <see cref="T:System.Drawing.Font" /> 对象。</summary>
        <value>一个 <see cref="T:System.Drawing.Font" /> 对象，用于设置图例的字体属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果你尝试更改此属性<xref:System.Drawing.Font>对象在运行时，将产生编译错误。 若要在运行时设置字体属性，你必须创建一个新<xref:System.Drawing.Font>对象。  
  
> [!NOTE]
>  如果设置 Legend.Font.Size 属性中，<xref:System.Web.UI.DataVisualization.Charting.Legend.IsTextAutoFit%2A>属性将设置为 false。 此外，如果你设置<xref:System.Web.UI.DataVisualization.Charting.Legend.IsTextAutoFit%2A>属性为 true，此属性将重置为其默认值，该值是 8 个点。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例文本的颜色。</summary>
        <value>一个 <see cref="T:System.Drawing.Color" /> 值，该值表示图例文本的颜色。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Legend.ForeColor%2A>属性用于设置图例文本颜色。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderSeparator">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle HeaderSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle HeaderSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.HeaderSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderSeparator As LegendSeparatorStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::LegendSeparatorStyle HeaderSeparator { System::Web::UI::DataVisualization::Charting::LegendSeparatorStyle get(); void set(System::Web::UI::DataVisualization::Charting::LegendSeparatorStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle), "None")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例标题的直观分隔符类型。</summary>
        <value>一个 <see cref="T:System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle" /> 枚举值，该值表示图例标头的直观分隔符类型。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderSeparatorColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color HeaderSeparatorColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color HeaderSeparatorColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.HeaderSeparatorColor" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderSeparatorColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color HeaderSeparatorColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例标题分隔符的颜色。</summary>
        <value>一个 <see cref="T:System.Drawing.Color" /> 值，该值表示图例标题的分隔符颜色。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsideChartArea">
      <MemberSignature Language="C#" Value="public string InsideChartArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsideChartArea" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.InsideChartArea" />
      <MemberSignature Language="VB.NET" Value="Public Property InsideChartArea As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsideChartArea { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("NotSet")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.LegendAreaNameConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在其中绘制图例的图表区域的名称。</summary>
        <value>一个 <see langword="string" /> 值，该值表示图表区域的名称。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterlacedRows">
      <MemberSignature Language="C#" Value="public bool InterlacedRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InterlacedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.InterlacedRows" />
      <MemberSignature Language="VB.NET" Value="Public Property InterlacedRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InterlacedRows { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置可指示是否使用交错背景色绘制图例行的标志。</summary>
        <value>一个 <see langword="Boolean" /> 值，该值确定是否使用指定的颜色绘制图例中的交替行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果图例中包含许多项，<xref:System.Web.UI.DataVisualization.Charting.Legend.InterlacedRows%2A>属性可以用于提高可读性。 当此属性设置为`true`，图例将显示交错，可使用设置的行的背景色<xref:System.Web.UI.DataVisualization.Charting.Legend.InterlacedRowsColor%2A>属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InterlacedRowsColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color InterlacedRowsColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color InterlacedRowsColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.InterlacedRowsColor" />
      <MemberSignature Language="VB.NET" Value="Public Property InterlacedRowsColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color InterlacedRowsColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例交替行的背景色。</summary>
        <value>一个 <see cref="T:System.Drawing.Color" /> 值，该值表示图例交替行的背景色。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性是仅当使用交替的行时才适用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDockedInsideChartArea">
      <MemberSignature Language="C#" Value="public bool IsDockedInsideChartArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDockedInsideChartArea" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.IsDockedInsideChartArea" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDockedInsideChartArea As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDockedInsideChartArea { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置可指示图例是停靠在图表区域内还是其外的标志。</summary>
        <value>
          如果图例停靠在图表区域内，则为 <see langword="true" />；如果图例停靠在图表区域外，则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性仅会造成影响，如果<xref:System.Web.UI.DataVisualization.Charting.Legend.DockedToChartArea%2A>属性设置为的名称<xref:System.Web.UI.DataVisualization.Charting.ChartArea>对象。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.DataVisualization.Charting.Legend.Position%2A>属性设置为任何值<xref:System.Web.UI.DataVisualization.Charting.ElementPosition.Auto%2A>、<xref:System.Web.UI.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A>属性有任何影响。 这是因为将图例的位置由<xref:System.Web.UI.DataVisualization.Charting.Legend.Position%2A>属性设置。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEquallySpacedItems">
      <MemberSignature Language="C#" Value="public bool IsEquallySpacedItems { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEquallySpacedItems" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.IsEquallySpacedItems" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEquallySpacedItems As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEquallySpacedItems { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置可指示所有图例项是否均等间距分布的标志。</summary>
        <value>
          如果图例项等间距分布，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTextAutoFit">
      <MemberSignature Language="C#" Value="public bool IsTextAutoFit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTextAutoFit" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.IsTextAutoFit" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTextAutoFit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTextAutoFit { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置指示图例文本是否自动调整大小的标志。</summary>
        <value>
          如果图例文本自动调整大小，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemColumnSeparator">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle ItemColumnSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle ItemColumnSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.ItemColumnSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemColumnSeparator As LegendSeparatorStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::LegendSeparatorStyle ItemColumnSeparator { System::Web::UI::DataVisualization::Charting::LegendSeparatorStyle get(); void set(System::Web::UI::DataVisualization::Charting::LegendSeparatorStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle), "None")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例表列的直观分隔符类型。</summary>
        <value>一个 <see cref="T:System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle" /> 枚举值，该值表示图例表列的直观分隔符类型。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemColumnSeparatorColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ItemColumnSeparatorColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ItemColumnSeparatorColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.ItemColumnSeparatorColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemColumnSeparatorColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ItemColumnSeparatorColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例表列分隔符的颜色。</summary>
        <value>一个 <see cref="T:System.Drawing.Color" /> 值，该值用于绘制图例表列分隔符的颜色。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemColumnSpacing">
      <MemberSignature Language="C#" Value="public int ItemColumnSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemColumnSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.ItemColumnSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemColumnSpacing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ItemColumnSpacing { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(50)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例表列间距。</summary>
        <value>一个 <see langword="integer" /> 值，该值表示表列间距。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Legend.ItemColumnSpacing%2A>图例文本字体的百分比计算属性值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegendItemOrder">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendItemOrder LegendItemOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.LegendItemOrder LegendItemOrder" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.LegendItemOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property LegendItemOrder As LegendItemOrder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::LegendItemOrder LegendItemOrder { System::Web::UI::DataVisualization::Charting::LegendItemOrder get(); void set(System::Web::UI::DataVisualization::Charting::LegendItemOrder value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendItemOrder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于指定图例项显示顺序的标志。 此属性仅对自动添加到图表序列中的图例项有效；对自定义图例项无效。</summary>
        <value>一个 <see cref="T:System.Web.UI.DataVisualization.Charting.LegendItemOrder" /> 枚举值，用于指定图例项显示顺序。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.UI.DataVisualization.Charting.LegendItemOrder>属性设置为<xref:System.Web.UI.DataVisualization.Charting.LegendItemOrder.Auto>，如果使用 StackedColumn、 StackedColumn100、 StackedArea 或 StackedArea100 图表类型，则将自动反转图例。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegendStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendStyle LegendStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.LegendStyle LegendStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.LegendStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property LegendStyle As LegendStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::LegendStyle LegendStyle { System::Web::UI::DataVisualization::Charting::LegendStyle get(); void set(System::Web::UI::DataVisualization::Charting::LegendStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例样式。</summary>
        <value>一个 <see cref="T:System.Web.UI.DataVisualization.Charting.LegendStyle" /> 枚举值，该值可确定图例样式。 默认值为 <see cref="F:System.Web.UI.DataVisualization.Charting.LegendStyle.Table" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，图例显示为一系列的表中的项。 你可以指定是否通过设置宽度还是高度展开表中的项<xref:System.Web.UI.DataVisualization.Charting.Legend.TableStyle%2A>属性。 当<xref:System.Web.UI.DataVisualization.Charting.Legend.TableStyle%2A>属性设置为<xref:System.Web.UI.DataVisualization.Charting.LegendTableStyle.Auto>、<xref:System.Web.UI.DataVisualization.Charting.Chart>控件将确定是否绘制宽表或高的表，具体取决于的对齐方式和定位的图表。 这可能导致图例要绘制使用多个图例项列。  
  
 有三个可能图例样式： 列、 行和表。 请参阅下表中的这些样式的摘要：  
  
|样式|描述|  
|-|-|  
|列|图例项显示在带有多个行的一个列。 最常用情况是左侧或右侧的图表图例停靠。|  
|行|图例项显示在一个行中，包含多个列。 最常用于图例停靠到顶部或底部图表时。|  
|表|图例项将显示使用多个列和行。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumAutoSize">
      <MemberSignature Language="C#" Value="public float MaximumAutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MaximumAutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.MaximumAutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumAutoSize As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float MaximumAutoSize { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(50)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例的最大大小（以图表区域的百分比形式表示）。 此值由自动布局算法使用。</summary>
        <value>A<see langword="float" />值，该值表示图例的最大大小。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果图例停靠到左侧或右侧的图表区中，此属性确定图例，以图表区的百分比的最大宽度。 如果在图例停靠到顶部或底部，此属性确定图例，还以百分比度量的最大高度。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例的名称。</summary>
        <value>一个 <see langword="string" /> 值，该值表示图例的名称。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ElementPosition Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.ElementPosition Position" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As ElementPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ElementPosition ^ Position { System::Web::UI::DataVisualization::Charting::ElementPosition ^ get(); void set(System::Web::UI::DataVisualization::Charting::ElementPosition ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.ElementPositionConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ElementPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置可用于获取或设置图例位置的 <see cref="T:System.Web.UI.DataVisualization.Charting.ElementPosition" /> 对象。</summary>
        <value>一个 <see cref="T:System.Web.UI.DataVisualization.Charting.ElementPosition" /> 值，该值表示图例的位置。 默认值为 <see cref="P:System.Web.UI.DataVisualization.Charting.ElementPosition.Auto" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.Web.UI.DataVisualization.Charting.Legend.Position%2A> 属性自动设置（即 Legend.Position.Auto = `true`）由 <xref:System.Web.UI.DataVisualization.Charting.Chart> 控件计算的图例位置，则考虑 <xref:System.Web.UI.DataVisualization.Charting.Legend.Docking%2A>、<xref:System.Web.UI.DataVisualization.Charting.Legend.Alignment%2A> 和 <xref:System.Web.UI.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> 属性设置。  
  
 如果不自动设置，则将忽略 <xref:System.Web.UI.DataVisualization.Charting.Legend.Docking%2A>、<xref:System.Web.UI.DataVisualization.Charting.Legend.DockedToChartArea%2A> 和 <xref:System.Web.UI.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> 属性，图例位置仅由返回的 <xref:System.Web.UI.DataVisualization.Charting.ElementPosition> 对象的值确定。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ShadowColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ShadowColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.ShadowColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ShadowColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "128, 0, 0, 0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例的阴影颜色。</summary>
        <value>一个 <see cref="T:System.Drawing.Color" /> 值，表示图例的阴影颜色。 默认颜色为 <see cref="P:System.Drawing.Color.Black" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性可以设置为任何有效的 ARGB alpha、 红色、 绿色 (蓝色） 值。  
  
 Alpha 值可以用于实现"真实"隐藏作用;请尝试"128,0,0,0"阴影的颜色值。  
  
 若要实现阴影，设置<xref:System.Web.UI.DataVisualization.Charting.Legend.ShadowOffset%2A>为零 (0) 以外的值的属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowOffset">
      <MemberSignature Language="C#" Value="public int ShadowOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ShadowOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.ShadowOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ShadowOffset { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例的阴影偏移量（以像素为单位）。</summary>
        <value>一个 <see langword="integer" /> 值，该值表示图例的阴影偏移量（以像素为单位）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要实现隐藏，请将此属性设置为零 (0) 以外的值。 正值将导致向下和向右; 移动阴影负值将导致阴影向上和向左移动。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendTableStyle TableStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.LegendTableStyle TableStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.TableStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property TableStyle As LegendTableStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::LegendTableStyle TableStyle { System::Web::UI::DataVisualization::Charting::LegendTableStyle get(); void set(System::Web::UI::DataVisualization::Charting::LegendTableStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendTableStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例表样式。</summary>
        <value>一个 <see cref="T:System.Web.UI.DataVisualization.Charting.LegendTableStyle" /> 枚举值，该值指定图例表样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性才适用如果<xref:System.Web.UI.DataVisualization.Charting.Legend.LegendStyle%2A>属性设置为<xref:System.Web.UI.DataVisualization.Charting.LegendStyle.Table>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextWrapThreshold">
      <MemberSignature Language="C#" Value="public int TextWrapThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextWrapThreshold" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.TextWrapThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property TextWrapThreshold As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TextWrapThreshold { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(25)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置可在文本换行前在图例中连续显示的字符数。</summary>
        <value>一个 <see langword="integer" /> 值，该值表示在文本换行前可在图例中连续显示的字符数。 默认值为 25。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 图例文本超出指定此属性的值，当遇到下一个空格字符时，将自动包装文本。 如果在文本中不有任何空白字符，则不会包装文本。  
  
 设置<xref:System.Web.UI.DataVisualization.Charting.Legend.TextWrapThreshold%2A>为零，以禁用该功能的属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例标题的文本。</summary>
        <value>一个 <see langword="string" /> 值，该值表示图例标题文本。 默认值为零长度的字符串。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleAlignment">
      <MemberSignature Language="C#" Value="public System.Drawing.StringAlignment TitleAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.StringAlignment TitleAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.TitleAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleAlignment As StringAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::StringAlignment TitleAlignment { System::Drawing::StringAlignment get(); void set(System::Drawing::StringAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.StringAlignment), "Center")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.StringAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例标题的对齐方式。</summary>
        <value>一个 <see cref="T:System.Drawing.StringAlignment" /> 枚举值，该值表示图例标题的对齐方式。 默认值为 <see cref="F:System.Drawing.StringAlignment.Center" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleBackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color TitleBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color TitleBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.TitleBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleBackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color TitleBackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例标题的背景色。</summary>
        <value>一个 <see cref="T:System.Drawing.Color" /> 值，该值用于绘制图例标题的背景。 默认值为 <see cref="F:System.Drawing.Color.Empty" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font TitleFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font TitleFont" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.TitleFont" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleFont As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ TitleFont { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Font), "Microsoft Sans Serif, 8pt, style=Bold")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例标题的字体。</summary>
        <value>指示图例标题的字体的 <see cref="T:System.Drawing.Font" /> 对象。 默认值为“Microsoft Sans Serif, 8pt, Bold”。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性可以用于设置图例标题的字体属性。  
  
 如果你尝试更改此属性<xref:System.Drawing.Font>对象在运行时，将产生编译错误。 若要在运行时设置字体属性，你必须创建一个新<xref:System.Drawing.Font>对象。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color TitleForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color TitleForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.TitleForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color TitleForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例标题的文本颜色。</summary>
        <value>一个 <see cref="T:System.Drawing.Color" /> 值，该值用于绘制标题文本颜色。 默认值为 <see cref="P:System.Drawing.Color.Black" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleSeparator">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle TitleSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle TitleSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.TitleSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleSeparator As LegendSeparatorStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::LegendSeparatorStyle TitleSeparator { System::Web::UI::DataVisualization::Charting::LegendSeparatorStyle get(); void set(System::Web::UI::DataVisualization::Charting::LegendSeparatorStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle), "None")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例标题的直观分隔符类型。</summary>
        <value>一个 <see cref="T:System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle" /> 值，该值表示将在标题下方绘制的分隔符的类型。 默认值为 <see cref="F:System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle.None" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleSeparatorColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color TitleSeparatorColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color TitleSeparatorColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.TitleSeparatorColor" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleSeparatorColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color TitleSeparatorColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图例标题分隔符的颜色。</summary>
        <value>一个 <see cref="T:System.Drawing.Color" /> 值，用于绘制图例标题分隔符颜色。 默认值为 <see cref="P:System.Drawing.Color.Black" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>