<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SerialPort.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9575d09f-9d72-4690-889e-b83c405ca45696462b7cc4ed0e9ae5754c7dfbb6cf6b1fff0271.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">96462b7cc4ed0e9ae5754c7dfbb6cf6b1fff0271</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">254e16ae65e82f4aa59360cd8572b36b6b5b2f80</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/05/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.Ports.SerialPort">
          <source>Represents a serial port resource.</source>
          <target state="translated">表示串行端口资源。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Ports.SerialPort">
          <source>Use this class to control a serial port file resource.</source>
          <target state="translated">此类用于控制串行端口文件资源。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Ports.SerialPort">
          <source>This class provides synchronous and event-driven I/O, access to pin and break states, and access to serial driver properties.</source>
          <target state="translated">此类提供同步和事件驱动 I/O、 对插针和中断状态的访问和对串行驱动程序属性的访问。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Ports.SerialPort">
          <source>Additionally, the functionality of this class can be wrapped in an internal <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> object, accessible through the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property, and passed to classes that wrap or use streams.</source>
          <target state="translated">此外，此类的功能可以包装在内部<ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>对象，可通过访问<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph>属性，并将传递给包装或使用流的类。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Ports.SerialPort">
          <source>The <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class supports the following encodings: <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>, <ph id="ph3">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph4">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, <ph id="ph5">&lt;xref:System.Text.UTF32Encoding&gt;</ph>, and any encoding defined in mscorlib.dll where the code page is less than 50000 or the code page is 54936.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类支持以下编码： <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>， <ph id="ph3">&lt;xref:System.Text.UTF8Encoding&gt;</ph>， <ph id="ph4">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>， <ph id="ph5">&lt;xref:System.Text.UTF32Encoding&gt;</ph>，并在其中的代码页是小于 50000 或代码页是 54936 mscorlib.dll 中定义任何编码。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Ports.SerialPort">
          <source>You can use alternate encodings, but you must use the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.ReadByte%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.Write%2A&gt;</ph> method and perform the encoding yourself.</source>
          <target state="translated">你可以使用备用编码，但必须使用<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.ReadByte%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.Write%2A&gt;</ph>方法并执行自己的编码。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Ports.SerialPort">
          <source>You use the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.GetPortNames%2A&gt;</ph> method to retrieve the valid ports for the current computer.</source>
          <target state="translated">你使用<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.GetPortNames%2A&gt;</ph>方法来检索当前计算机的有效端口。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Ports.SerialPort">
          <source>If a <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object becomes blocked during a read operation, do not abort the thread.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>对象将成为在读取操作过程中阻止、 不中止此线程。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Ports.SerialPort">
          <source>Instead, either close the base stream or dispose of the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object.</source>
          <target state="translated">相反，请关闭基流处理或释放<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Ports.SerialPort">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class to allow two users to chat from two separate computers connected by a null modem cable.</source>
          <target state="translated">下面的代码示例演示如何将<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类以允许两个用户聊天从通过空调制解调器缆线连接的两个单独的计算机。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Ports.SerialPort">
          <source>In this example, the users are prompted for the port settings and a username before chatting.</source>
          <target state="translated">在此示例中，将提示用户输入的端口设置和用户名之前的聊天。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Ports.SerialPort">
          <source>Both computers must be executing the program to achieve full functionality of this example.</source>
          <target state="translated">这两台计算机必须执行该程序才能实现此示例的完整功能。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Ports.SerialPort">
          <source>for the ability to call unmanaged code.</source>
          <target state="translated">表示调用非托管的代码的能力。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Ports.SerialPort">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.IO.Ports.SerialPort">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.#ctor">
          <source>This constructor uses default property values when none are specified.</source>
          <target state="translated">未指定时，此构造函数将使用默认属性值。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.#ctor">
          <source>For example, the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.DataBits%2A&gt;</ph> property defaults to 8, the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.Parity%2A&gt;</ph> property defaults to the <ph id="ph3">`None`</ph> enumeration value, the <ph id="ph4">&lt;xref:System.IO.Ports.SerialPort.StopBits%2A&gt;</ph> property defaults to 1, and a default port name of COM1.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.DataBits%2A&gt;</ph>属性默认值为 8，<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.Parity%2A&gt;</ph>属性默认为<ph id="ph3">`None`</ph>枚举值<ph id="ph4">&lt;xref:System.IO.Ports.SerialPort.StopBits%2A&gt;</ph>属性默认为 1，且默认端口名称为 COM1。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.#ctor">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class to allow two users to chat from two separate computers connected by a null modem cable.</source>
          <target state="translated">下面的代码示例演示如何将<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类以允许两个用户聊天从通过空调制解调器缆线连接的两个单独的计算机。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.#ctor">
          <source>In this example, the users are prompted for the port settings and a username before chatting.</source>
          <target state="translated">在此示例中，将提示用户输入的端口设置和用户名之前的聊天。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.#ctor">
          <source>This code example is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class.</source>
          <target state="translated">此代码示例是为提供一个更大的代码示例的一部分<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)">
          <source>An interface to a container.</source>
          <target state="translated">容器的接口。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> class using the specified <ph id="ph2">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> object.</source>
          <target state="translated">使用指定的 <ph id="ph2">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> 对象初始化 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)">
          <source>This constructor uses default property values when none are specified.</source>
          <target state="translated">未指定时，此构造函数将使用默认属性值。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)">
          <source>For example, the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.DataBits%2A&gt;</ph> property defaults to 8, the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.Parity%2A&gt;</ph> property defaults to the <ph id="ph3">`None`</ph> enumeration value, the <ph id="ph4">&lt;xref:System.IO.Ports.SerialPort.StopBits%2A&gt;</ph> property defaults to 1, and a default port name of COM1.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.DataBits%2A&gt;</ph>属性默认值为 8，<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.Parity%2A&gt;</ph>属性默认为<ph id="ph3">`None`</ph>枚举值<ph id="ph4">&lt;xref:System.IO.Ports.SerialPort.StopBits%2A&gt;</ph>属性默认为 1，且默认端口名称为 COM1。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)">
          <source>The specified port could not be found or opened.</source>
          <target state="translated">未能找到或打开指定的端口。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.String)">
          <source>The port to use (for example, COM1).</source>
          <target state="translated">要使用的端口（例如 COM1）。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> class using the specified port name.</source>
          <target state="translated">使用指定的端口名初始化 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.#ctor(System.String)">
          <source>Use this constructor to create a new instance of the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class when you want to specify the port name.</source>
          <target state="translated">使用此构造函数创建的新实例<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类在你想要指定的端口名称。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.String)">
          <source>The specified port could not be found or opened.</source>
          <target state="translated">未能找到或打开指定的端口。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)">
          <source>The port to use (for example, COM1).</source>
          <target state="translated">要使用的端口（例如 COM1）。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)">
          <source>The baud rate.</source>
          <target state="translated">波特率。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> class using the specified port name and baud rate.</source>
          <target state="translated">使用指定的端口名和波特率初始化 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)">
          <source>Use this constructor to create a new instance of the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class when you want to specify the port name and the baud rate.</source>
          <target state="translated">使用此构造函数创建的新实例<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类在你想要指定的端口名和波特率。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)">
          <source>The specified port could not be found or opened.</source>
          <target state="translated">未能找到或打开指定的端口。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)">
          <source>The port to use (for example, COM1).</source>
          <target state="translated">要使用的端口（例如 COM1）。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)">
          <source>The baud rate.</source>
          <target state="translated">波特率。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)">
          <source>One of the <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.Parity" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.Parity" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> class using the specified port name, baud rate, and parity bit.</source>
          <target state="translated">使用指定的端口名、波特率和奇偶校验位初始化 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)">
          <source>Use this constructor to create a new instance of the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class when you want to specify the port name, the baud rate, and the parity bit.</source>
          <target state="translated">使用此构造函数创建的新实例<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类在你想要指定的端口名、 波特率和奇偶校验位。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)">
          <source>The specified port could not be found or opened.</source>
          <target state="translated">未能找到或打开指定的端口。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)">
          <source>The port to use (for example, COM1).</source>
          <target state="translated">要使用的端口（例如 COM1）。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)">
          <source>The baud rate.</source>
          <target state="translated">波特率。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.Parity" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.Parity" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)">
          <source>The data bits value.</source>
          <target state="translated">数据位值。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> class using the specified port name, baud rate, parity bit, and data bits.</source>
          <target state="translated">使用指定的端口名、波特率、奇偶校验位和数据位初始化 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)">
          <source>Use this constructor to create a new instance of the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class when you want to specify the port name, the baud rate, the parity bit, and data bits.</source>
          <target state="translated">使用此构造函数创建的新实例<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类在你想要指定的端口名、 波特率、 奇偶校验位和数据位。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)">
          <source>The specified port could not be found or opened.</source>
          <target state="translated">未能找到或打开指定的端口。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)">
          <source>The port to use (for example, COM1).</source>
          <target state="translated">要使用的端口（例如 COM1）。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)">
          <source>The baud rate.</source>
          <target state="translated">波特率。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)">
          <source>One of the <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.Parity" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.Parity" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)">
          <source>The data bits value.</source>
          <target state="translated">数据位值。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)">
          <source>One of the <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.StopBits" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.StopBits" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> class using the specified port name, baud rate, parity bit, data bits, and stop bit.</source>
          <target state="translated">使用指定的端口名、波特率、奇偶校验位、数据位和停止位初始化 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)">
          <source>Use this constructor to create a new instance of the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class when you want to specify the port name, the baud rate, the parity bit, data bits, and stop bit.</source>
          <target state="translated">使用此构造函数创建的新实例<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类在你想要指定的端口名、 波特率、 奇偶校验位、 数据位和停止位。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)">
          <source>The specified port could not be found or opened.</source>
          <target state="translated">未能找到或打开指定的端口。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.BaseStream">
          <source>Gets the underlying <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object for a <ph id="ph2">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> object.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 对象的基础 <ph id="ph2">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.BaseStream">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.BaseStream">
          <source>Use this property for explicit asynchronous I/O operations or to pass the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object to a <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> wrapper class such as <ph id="ph3">&lt;xref:System.IO.StreamWriter&gt;</ph>.</source>
          <target state="translated">使用此属性，用于显式异步 I/O 操作，还是将<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>对象传递给<ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>包装类，如<ph id="ph3">&lt;xref:System.IO.StreamWriter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.BaseStream">
          <source>Any open serial port's <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property returns an object that derives from the abstract <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> class, and implements read and write methods using the prototypes inherited from the <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph> class: <ph id="ph4">&lt;xref:System.IO.Stream.BeginRead%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.IO.Stream.BeginWrite%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.IO.Stream.Read%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.IO.Stream.ReadByte%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.IO.Stream.Write%2A&gt;</ph>, and <ph id="ph9">&lt;xref:System.IO.Stream.WriteByte%2A&gt;</ph>.</source>
          <target state="translated">任何打开的串行端口<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph>属性返回一个对象，派生自抽象<ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>类，并实现读取和写入方法使用继承自的原型<ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph>类： <ph id="ph4">&lt;xref:System.IO.Stream.BeginRead%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.IO.Stream.BeginWrite%2A&gt;</ph>， <ph id="ph6">&lt;xref:System.IO.Stream.Read%2A&gt;</ph><ph id="ph7">&lt;xref:System.IO.Stream.ReadByte%2A&gt;</ph>， <ph id="ph8">&lt;xref:System.IO.Stream.Write%2A&gt;</ph>，和<ph id="ph9">&lt;xref:System.IO.Stream.WriteByte%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.BaseStream">
          <source>These methods can be useful when passing a wrapped serial resource to a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> wrapper class.</source>
          <target state="translated">如果传递到包装的串行资源，这些方法可<ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>包装类。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.BaseStream">
          <source>Due to the inaccessibility of the wrapped file handle, the <ph id="ph1">&lt;xref:System.IO.Stream.Length%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Stream.Position%2A&gt;</ph> properties are not supported, and the <ph id="ph3">&lt;xref:System.IO.Stream.Seek%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.IO.Stream.SetLength%2A&gt;</ph> methods are not supported.</source>
          <target state="translated">由于无法访问经过的已包装的文件句柄，<ph id="ph1">&lt;xref:System.IO.Stream.Length%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.Stream.Position%2A&gt;</ph>不支持属性，与<ph id="ph3">&lt;xref:System.IO.Stream.Seek%2A&gt;</ph>和<ph id="ph4">&lt;xref:System.IO.Stream.SetLength%2A&gt;</ph>不支持的方法。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.BaseStream">
          <source>The stream is closed.</source>
          <target state="translated">流已关闭。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.BaseStream">
          <source>This can occur because the <ph id="ph1">&lt;see cref="M:System.IO.Ports.SerialPort.Open" /&gt;</ph> method has not been called or the <ph id="ph2">&lt;see cref="M:System.IO.Ports.SerialPort.Close" /&gt;</ph> method has been called.</source>
          <target state="translated">这可能会因为尚未调用 <ph id="ph1">&lt;see cref="M:System.IO.Ports.SerialPort.Open" /&gt;</ph> 方法或已调用了 <ph id="ph2">&lt;see cref="M:System.IO.Ports.SerialPort.Close" /&gt;</ph> 方法而发生。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.BaseStream">
          <source>The stream is in a .NET Compact Framework application and one of the following methods was called:</source>
          <target state="translated">该流位于 .NET Compact Framework 应用程序中，并调用了以下方法之一：</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.BaseStream">
          <source>The .NET Compact Framework does not support the asynchronous model with base streams.</source>
          <target state="translated">.NET Compact Framework 不支持带有基流的异步模型。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.BaudRate">
          <source>Gets or sets the serial baud rate.</source>
          <target state="translated">获取或设置串行波特率。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.BaudRate">
          <source>The baud rate.</source>
          <target state="translated">波特率。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.BaudRate">
          <source>The baud rate must be supported by the user's serial driver.</source>
          <target state="translated">用户的串行驱动程序必须支持波特率。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.BaudRate">
          <source>The default value is 9600 bits per second (bps).</source>
          <target state="translated">默认值为 9600 每秒位数 (bps)。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.BaudRate">
          <source>The following example shows how to set the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.BaudRate%2A&gt;</ph> property to <ph id="ph2">`9600`</ph>.</source>
          <target state="translated">下面的示例演示如何设置<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.BaudRate%2A&gt;</ph>属性<ph id="ph2">`9600`</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.BaudRate">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class to allow two users to chat from two separate computers connected by a null modem cable.</source>
          <target state="translated">下面的示例演示了利用<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类以允许两个用户聊天从通过空调制解调器缆线连接的两个单独的计算机。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.BaudRate">
          <source>In this example, the users are prompted for the port settings and a username before chatting.</source>
          <target state="translated">在此示例中，将提示用户输入的端口设置和用户名之前的聊天。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.BaudRate">
          <source>This code example is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class.</source>
          <target state="translated">此代码示例是为提供一个更大的代码示例的一部分<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.BaudRate">
          <source>The baud rate specified is less than or equal to zero, or is greater than the maximum allowable baud rate for the device.</source>
          <target state="translated">指定的波特率小于或等于零，或者大于设备所允许的最大波特率。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.BaudRate">
          <source>The port is in an invalid state.</source>
          <target state="translated">此端口处于无效状态。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.BaudRate">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.BaudRate">
          <source>An attempt to set the state of the underlying port failed.</source>
          <target state="translated">尝试设置基础端口状态失败。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.BaudRate">
          <source>For example, the parameters passed from this <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> object were invalid.</source>
          <target state="translated">例如，从此 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 对象传递的参数无效。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.BreakState">
          <source>Gets or sets the break signal state.</source>
          <target state="translated">获取或设置中断信号状态。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.BreakState">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the port is in a break state; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果端口处于中断状态，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.BreakState">
          <source>The break signal state occurs when a transmission is suspended and the line is placed in a break state (all low, no stop bit) until released.</source>
          <target state="translated">如果传输已挂起，行处于中断状态 （无停止位中的所有低） 会出现中断信号状态直到释放。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.BreakState">
          <source>To enter a break state, set this property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">若要输入中断状态，请将此属性设置为<ph id="ph1">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.BreakState">
          <source>If the port is already in a break state, setting this property again to <ph id="ph1">`true`</ph> does not result in an exception.</source>
          <target state="translated">如果端口处于中断状态已为，再次设置此属性<ph id="ph1">`true`</ph>不会导致异常。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.BreakState">
          <source>It is not possible to write to the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object while <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BreakState%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">不能写入<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>对象时<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BreakState%2A&gt;</ph>是<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.BreakState">
          <source>The port is in an invalid state.</source>
          <target state="translated">此端口处于无效状态。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.BreakState">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.BreakState">
          <source>An attempt to set the state of the underlying port failed.</source>
          <target state="translated">尝试设置基础端口状态失败。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.BreakState">
          <source>For example, the parameters passed from this <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> object were invalid.</source>
          <target state="translated">例如，从此 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 对象传递的参数无效。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.BreakState">
          <source>The stream is closed.</source>
          <target state="translated">流已关闭。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.BreakState">
          <source>This can occur because the <ph id="ph1">&lt;see cref="M:System.IO.Ports.SerialPort.Open" /&gt;</ph> method has not been called or the <ph id="ph2">&lt;see cref="M:System.IO.Ports.SerialPort.Close" /&gt;</ph> method has been called.</source>
          <target state="translated">这可能会因为尚未调用 <ph id="ph1">&lt;see cref="M:System.IO.Ports.SerialPort.Open" /&gt;</ph> 方法或已调用了 <ph id="ph2">&lt;see cref="M:System.IO.Ports.SerialPort.Close" /&gt;</ph> 方法而发生。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.BytesToRead">
          <source>Gets the number of bytes of data in the receive buffer.</source>
          <target state="translated">获取接收缓冲区中数据的字节数。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.BytesToRead">
          <source>The number of bytes of data in the receive buffer.</source>
          <target state="translated">接收缓冲区中数据的字节数。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.BytesToRead">
          <source>The receive buffer includes the serial driver's receive buffer as well as internal buffering in the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object itself.</source>
          <target state="translated">接收缓冲区包括串行驱动程序的接收缓冲区，以及在内部缓冲<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>对象本身。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.BytesToRead">
          <source>Because the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph> property represents both the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> buffer and the Windows-created buffer,  it can return a greater value than the <ph id="ph3">&lt;xref:System.IO.Ports.SerialPort.ReadBufferSize%2A&gt;</ph> property, which represents only the Windows-created buffer.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph>属性表示同时<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>缓冲区和 Windows 创建缓冲区，它可返回较大的值，比<ph id="ph3">&lt;xref:System.IO.Ports.SerialPort.ReadBufferSize%2A&gt;</ph>属性，它表示仅 Windows 创建的缓冲区。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.BytesToRead">
          <source>The port is not open.</source>
          <target state="translated">端口未打开。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.BytesToWrite">
          <source>Gets the number of bytes of data in the send buffer.</source>
          <target state="translated">获取发送缓冲区中数据的字节数。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.BytesToWrite">
          <source>The number of bytes of data in the send buffer.</source>
          <target state="translated">发送缓冲区中数据的字节数。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.BytesToWrite">
          <source>The send buffer includes the serial driver's send buffer as well as internal buffering in the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object itself.</source>
          <target state="translated">发送缓冲区包括串行驱动程序的发送缓冲区，以及在内部缓冲<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>对象本身。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.BytesToWrite">
          <source>The port is in an invalid state.</source>
          <target state="translated">此端口处于无效状态。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.BytesToWrite">
          <source>The stream is closed.</source>
          <target state="translated">流已关闭。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.BytesToWrite">
          <source>This can occur because the <ph id="ph1">&lt;see cref="M:System.IO.Ports.SerialPort.Open" /&gt;</ph> method has not been called or the <ph id="ph2">&lt;see cref="M:System.IO.Ports.SerialPort.Close" /&gt;</ph> method has been called.</source>
          <target state="translated">这可能会因为尚未调用 <ph id="ph1">&lt;see cref="M:System.IO.Ports.SerialPort.Open" /&gt;</ph> 方法或已调用了 <ph id="ph2">&lt;see cref="M:System.IO.Ports.SerialPort.Close" /&gt;</ph> 方法而发生。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.CDHolding">
          <source>Gets the state of the Carrier Detect line for the port.</source>
          <target state="translated">获取端口的载波检测行的状态。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.CDHolding">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the carrier is detected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果检测到载波，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.CDHolding">
          <source>This property can be used to monitor the state of the carrier detection line for a port.</source>
          <target state="translated">此属性可以用于监视端口的载波检测行的状态。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.CDHolding">
          <source>No carrier usually indicates that the receiver has hung up and the carrier has been dropped.</source>
          <target state="translated">没有承运人通常指示接收方已挂断且载波已被丢弃。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.CDHolding">
          <source>The port is in an invalid state.</source>
          <target state="translated">此端口处于无效状态。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.CDHolding">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.CDHolding">
          <source>An attempt to set the state of the underlying port failed.</source>
          <target state="translated">尝试设置基础端口状态失败。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.CDHolding">
          <source>For example, the parameters passed from this <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> object were invalid.</source>
          <target state="translated">例如，从此 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 对象传递的参数无效。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.CDHolding">
          <source>The stream is closed.</source>
          <target state="translated">流已关闭。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.CDHolding">
          <source>This can occur because the <ph id="ph1">&lt;see cref="M:System.IO.Ports.SerialPort.Open" /&gt;</ph> method has not been called or the <ph id="ph2">&lt;see cref="M:System.IO.Ports.SerialPort.Close" /&gt;</ph> method has been called.</source>
          <target state="translated">这可能会因为尚未调用 <ph id="ph1">&lt;see cref="M:System.IO.Ports.SerialPort.Open" /&gt;</ph> 方法或已调用了 <ph id="ph2">&lt;see cref="M:System.IO.Ports.SerialPort.Close" /&gt;</ph> 方法而发生。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Close">
          <source>Closes the port connection, sets the <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.IsOpen" /&gt;</ph> property to <ph id="ph2">&lt;see langword="false" /&gt;</ph>, and disposes of the internal <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object.</source>
          <target state="translated">关闭端口连接，将 <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.IsOpen" /&gt;</ph> 属性设置为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>，并释放内部 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Close">
          <source>Calling this method closes the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object and clears both the receive and transmit buffers.</source>
          <target state="translated">调用此方法关闭<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>对象并清除这两个接收并传输缓冲区。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Close">
          <source>This method calls the <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose?displayProperty=nameWithType&gt;</ph> method, which invokes the protected <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.Dispose%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">此方法调用<ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose?displayProperty=nameWithType&gt;</ph>方法，该调用受保护方法<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.Dispose%28System.Boolean%29?displayProperty=nameWithType&gt;</ph>方法替换<ph id="ph3">`disposing`</ph>参数设置为<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Close">
          <source>The best practice for any application is to wait for some amount of time after calling the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.Close%2A&gt;</ph> method before attempting to call the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.Open%2A&gt;</ph> method, as the port may not be closed instantly.</source>
          <target state="translated">任何应用程序的最佳做法是等待一定的时间之后调用<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.Close%2A&gt;</ph>方法，然后再尝试调用<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.Open%2A&gt;</ph>方法，为端口可能不会关闭立即。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Close">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class to allow two users to chat from two separate computers connected by a null modem cable.</source>
          <target state="translated">下面的代码示例演示如何将<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类以允许两个用户聊天从通过空调制解调器缆线连接的两个单独的计算机。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Close">
          <source>In this example, the users are prompted for the port settings and a username before chatting.</source>
          <target state="translated">在此示例中，将提示用户输入的端口设置和用户名之前的聊天。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Close">
          <source>This code example is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class.</source>
          <target state="translated">此代码示例是为提供一个更大的代码示例的一部分<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Close">
          <source>The port is in an invalid state.</source>
          <target state="translated">此端口处于无效状态。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Close">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Close">
          <source>An attempt to set the state of the underlying port failed.</source>
          <target state="translated">尝试设置基础端口状态失败。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Close">
          <source>For example, the parameters passed from this <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> object were invalid.</source>
          <target state="translated">例如，从此 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 对象传递的参数无效。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.CtsHolding">
          <source>Gets the state of the Clear-to-Send line.</source>
          <target state="translated">获取“可以发送”行的状态。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.CtsHolding">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the Clear-to-Send line is detected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果检测到“可以发送”行，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.CtsHolding">
          <source>The Clear-to-Send (CTS) line is used in Request to Send/Clear to Send (RTS/CTS) hardware handshaking.</source>
          <target state="translated">清除到发送 (CTS) 行用于发送/清除的请求中发送 (RTS/CTS) 硬件握手。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.CtsHolding">
          <source>The CTS line is queried by a port before data is sent.</source>
          <target state="translated">发送数据前，将通过非端口查询 CTS 行。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.CtsHolding">
          <source>The port is in an invalid state.</source>
          <target state="translated">此端口处于无效状态。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.CtsHolding">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.CtsHolding">
          <source>An attempt to set the state of the underlying port failed.</source>
          <target state="translated">尝试设置基础端口状态失败。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.CtsHolding">
          <source>For example, the parameters passed from this <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> object were invalid.</source>
          <target state="translated">例如，从此 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 对象传递的参数无效。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.CtsHolding">
          <source>The stream is closed.</source>
          <target state="translated">流已关闭。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.CtsHolding">
          <source>This can occur because the <ph id="ph1">&lt;see cref="M:System.IO.Ports.SerialPort.Open" /&gt;</ph> method has not been called or the <ph id="ph2">&lt;see cref="M:System.IO.Ports.SerialPort.Close" /&gt;</ph> method has been called.</source>
          <target state="translated">这可能会因为尚未调用 <ph id="ph1">&lt;see cref="M:System.IO.Ports.SerialPort.Open" /&gt;</ph> 方法或已调用了 <ph id="ph2">&lt;see cref="M:System.IO.Ports.SerialPort.Close" /&gt;</ph> 方法而发生。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.DataBits">
          <source>Gets or sets the standard length of data bits per byte.</source>
          <target state="translated">获取或设置每个字节的标准数据位长度。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.DataBits">
          <source>The data bits length.</source>
          <target state="translated">数据位长度。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.DataBits">
          <source>The range of values for this property is from 5 through 8.</source>
          <target state="translated">此属性的值范围是从 5 至 8。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.DataBits">
          <source>The default value is 8.</source>
          <target state="translated">默认值为 8。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.DataBits">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class to allow two users to chat from two separate computers connected by a null modem cable.</source>
          <target state="translated">下面的代码示例演示如何将<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类以允许两个用户聊天从通过空调制解调器缆线连接的两个单独的计算机。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.DataBits">
          <source>In this example, the users are prompted for the port settings and a username before chatting.</source>
          <target state="translated">在此示例中，将提示用户输入的端口设置和用户名之前的聊天。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.DataBits">
          <source>This code example is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class.</source>
          <target state="translated">此代码示例是为提供一个更大的代码示例的一部分<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.DataBits">
          <source>The port is in an invalid state.</source>
          <target state="translated">此端口处于无效状态。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.DataBits">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.DataBits">
          <source>An attempt to set the state of the underlying port failed.</source>
          <target state="translated">尝试设置基础端口状态失败。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.DataBits">
          <source>For example, the parameters passed from this <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> object were invalid.</source>
          <target state="translated">例如，从此 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 对象传递的参数无效。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.DataBits">
          <source>The data bits value is less than 5 or more than 8.</source>
          <target state="translated">数据位的值小于 5 或大于 8。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="E:System.IO.Ports.SerialPort.DataReceived">
          <source>Indicates that data has been received through a port represented by the <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> object.</source>
          <target state="translated">指示已通过由 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 对象表示的端口接收了数据。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.DataReceived">
          <source>Data events can be caused by any of the items in the <ph id="ph1">&lt;xref:System.IO.Ports.SerialData&gt;</ph> enumeration.</source>
          <target state="translated">数据事件可以由任何中的项<ph id="ph1">&lt;xref:System.IO.Ports.SerialData&gt;</ph>枚举。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.DataReceived">
          <source>Because the operating system determines whether to raise this event or not, not all parity errors may be reported.</source>
          <target state="translated">由于操作系统决定是否以引发此事件，或不，并非所有的奇偶校验错误可能会报告。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.DataReceived">
          <source>The <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.DataReceived&gt;</ph> event is also raised if an Eof character is received, regardless of the number of bytes in the internal input buffer and the value of the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.DataReceived&gt;</ph>如果收到 Eof 字符，而不考虑内部输入缓冲区中的字节数和的值，也会引发事件<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.DataReceived">
          <source><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.PinChanged&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.DataReceived&gt;</ph>, and <ph id="ph3">&lt;xref:System.IO.Ports.SerialPort.ErrorReceived&gt;</ph> events may be called out of order, and there may be a slight delay between when the underlying stream reports the error and when the event handler is executed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.PinChanged&gt;</ph><ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.DataReceived&gt;</ph>，和<ph id="ph3">&lt;xref:System.IO.Ports.SerialPort.ErrorReceived&gt;</ph>事件可能被调用无序，并且可能有基础流时报告错误和事件处理程序执行时之间稍有延迟。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.DataReceived">
          <source>Only one event handler can execute at a time.</source>
          <target state="translated">只能有一个事件处理程序可以执行一次。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.DataReceived">
          <source>The <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.DataReceived&gt;</ph> event is not guaranteed to be raised for every byte received.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.DataReceived&gt;</ph>事件不能保证为每个接收的字节引发。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.DataReceived">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph> property to determine how much data is left to be read in the buffer.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph>属性来确定多少数据会保留在缓冲区中读取。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.DataReceived">
          <source>The <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.DataReceived&gt;</ph> event is raised on a secondary thread when data is received from the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.DataReceived&gt;</ph>从收到数据时，事件将在辅助线程中引发<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.DataReceived">
          <source>Because this event is raised on a secondary thread, and not the main thread, attempting to modify some elements in the main thread, such as UI elements, could raise a threading exception.</source>
          <target state="translated">因为在辅助线程和非主线程，尝试修改主线程，如 UI 元素中的某些元素上引发此事件可能会产生线程处理的异常。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.DataReceived">
          <source>If it is necessary to modify elements in the main <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>, post change requests back using <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, which will do the work on the proper thread.</source>
          <target state="translated">如果需要修改当中，该元素<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>和返回使用 post 更改请求<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>，这将执行在合适的线程上工作。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.DataReceived">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.DataReceived">
          <source>This example adds a <ph id="ph1">&lt;xref:System.IO.Ports.SerialDataReceivedEventHandler&gt;</ph> to <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.DataReceived&gt;</ph> to read all the available data received on the COM1 port.</source>
          <target state="translated">此示例将添加<ph id="ph1">&lt;xref:System.IO.Ports.SerialDataReceivedEventHandler&gt;</ph>到<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.DataReceived&gt;</ph>读取 COM1 端口上接收的所有可用的数据。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.DataReceived">
          <source>Note that to test this code it is necessary to have hardware attached to COM1 that will send data.</source>
          <target state="translated">请注意，若要测试此代码需要附加到 COM1 将发送数据的硬件。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.DiscardInBuffer">
          <source>Discards data from the serial driver's receive buffer.</source>
          <target state="translated">丢弃来自串行驱动程序的接收缓冲区的数据。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.DiscardInBuffer">
          <source>This method is equivalent to the following Visual Basic code: <ph id="ph1">`MSComm1.InBufferCount = 0`</ph>.</source>
          <target state="translated">此方法等效于以下 Visual Basic 代码： <ph id="ph1">`MSComm1.InBufferCount = 0`</ph>。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.DiscardInBuffer">
          <source>It clears the receive buffer, but does not affect the transmit buffer.</source>
          <target state="translated">就会清除接收缓冲区中，但不会影响传输缓冲区。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.DiscardInBuffer">
          <source>The port is in an invalid state.</source>
          <target state="translated">此端口处于无效状态。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.DiscardInBuffer">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.DiscardInBuffer">
          <source>An attempt to set the state of the underlying port failed.</source>
          <target state="translated">尝试设置基础端口状态失败。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.DiscardInBuffer">
          <source>For example, the parameters passed from this <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> object were invalid.</source>
          <target state="translated">例如，从此 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 对象传递的参数无效。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.DiscardInBuffer">
          <source>The stream is closed.</source>
          <target state="translated">流已关闭。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.DiscardInBuffer">
          <source>This can occur because the <ph id="ph1">&lt;see cref="M:System.IO.Ports.SerialPort.Open" /&gt;</ph> method has not been called or the <ph id="ph2">&lt;see cref="M:System.IO.Ports.SerialPort.Close" /&gt;</ph> method has been called.</source>
          <target state="translated">这可能会因为尚未调用 <ph id="ph1">&lt;see cref="M:System.IO.Ports.SerialPort.Open" /&gt;</ph> 方法或已调用了 <ph id="ph2">&lt;see cref="M:System.IO.Ports.SerialPort.Close" /&gt;</ph> 方法而发生。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.DiscardNull">
          <source>Gets or sets a value indicating whether null bytes are ignored when transmitted between the port and the receive buffer.</source>
          <target state="translated">获取或设置一个值，该值指示 null 字节在端口和接收缓冲区之间传输时是否被忽略。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.DiscardNull">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if null bytes are ignored; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果忽略 Null 字节，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.DiscardNull">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.DiscardNull">
          <source>This value should normally be set to <ph id="ph1">`false`</ph>, especially for binary transmissions.</source>
          <target state="translated">此值通常应设置为<ph id="ph1">`false`</ph>，尤其是对于二进制传输。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.DiscardNull">
          <source>Setting this property to <ph id="ph1">`true`</ph> can cause unexpected results for UTF32- and UTF16-encoded bytes.</source>
          <target state="translated">此属性设置为<ph id="ph1">`true`</ph>会导致意外的结果 UTF32 和 UTF16 编码的字节数。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.DiscardNull">
          <source>The port is in an invalid state.</source>
          <target state="translated">此端口处于无效状态。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.DiscardNull">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.DiscardNull">
          <source>An attempt to set the state of the underlying port failed.</source>
          <target state="translated">尝试设置基础端口状态失败。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.DiscardNull">
          <source>For example, the parameters passed from this <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> object were invalid.</source>
          <target state="translated">例如，从此 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 对象传递的参数无效。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.DiscardNull">
          <source>The stream is closed.</source>
          <target state="translated">流已关闭。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.DiscardNull">
          <source>This can occur because the <ph id="ph1">&lt;see cref="M:System.IO.Ports.SerialPort.Open" /&gt;</ph> method has not been called or the <ph id="ph2">&lt;see cref="M:System.IO.Ports.SerialPort.Close" /&gt;</ph> method has been called.</source>
          <target state="translated">这可能会因为尚未调用 <ph id="ph1">&lt;see cref="M:System.IO.Ports.SerialPort.Open" /&gt;</ph> 方法或已调用了 <ph id="ph2">&lt;see cref="M:System.IO.Ports.SerialPort.Close" /&gt;</ph> 方法而发生。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.DiscardOutBuffer">
          <source>Discards data from the serial driver's transmit buffer.</source>
          <target state="translated">丢弃来自串行驱动程序的传输缓冲区的数据。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.DiscardOutBuffer">
          <source>This method is equivalent to the following Visual Basic code: <ph id="ph1">`MSComm1.OutBufferCount = 0`</ph>.</source>
          <target state="translated">此方法等效于以下 Visual Basic 代码： <ph id="ph1">`MSComm1.OutBufferCount = 0`</ph>。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.DiscardOutBuffer">
          <source>It clears the transmit buffer, but does not affect the receive buffer.</source>
          <target state="translated">就会清除传输缓冲区，但不会影响接收缓冲区。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.DiscardOutBuffer">
          <source>The port is in an invalid state.</source>
          <target state="translated">此端口处于无效状态。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.DiscardOutBuffer">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.DiscardOutBuffer">
          <source>An attempt to set the state of the underlying port failed.</source>
          <target state="translated">尝试设置基础端口状态失败。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.DiscardOutBuffer">
          <source>For example, the parameters passed from this <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> object were invalid.</source>
          <target state="translated">例如，从此 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 对象传递的参数无效。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.DiscardOutBuffer">
          <source>The stream is closed.</source>
          <target state="translated">流已关闭。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.DiscardOutBuffer">
          <source>This can occur because the <ph id="ph1">&lt;see cref="M:System.IO.Ports.SerialPort.Open" /&gt;</ph> method has not been called or the <ph id="ph2">&lt;see cref="M:System.IO.Ports.SerialPort.Close" /&gt;</ph> method has been called.</source>
          <target state="translated">这可能会因为尚未调用 <ph id="ph1">&lt;see cref="M:System.IO.Ports.SerialPort.Open" /&gt;</ph> 方法或已调用了 <ph id="ph2">&lt;see cref="M:System.IO.Ports.SerialPort.Close" /&gt;</ph> 方法而发生。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">若要释放托管资源和非托管资源，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；若仅释放非托管资源，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 占用的非托管资源，还可以另外再释放托管资源。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">此方法称为由公共<ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>方法和<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> invokes the protected <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.Dispose%2A&gt;</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> 调用受保护<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.Dispose%2A&gt;</ph>方法替换<ph id="ph3">`disposing`</ph>参数设置为<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.Dispose%2A&gt;</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 调用<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.Dispose%2A&gt;</ph>与<ph id="ph3">`disposing`</ph>设置为<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> references.</source>
          <target state="translated">当 <ph id="ph1">`disposing`</ph> 参数为 <ph id="ph2">`true`</ph> 时，此方法释放该 <ph id="ph3">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> 引用的、由任何托管对象持有的全部资源。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method of each referenced object.</source>
          <target state="translated">此方法调用每个引用对象的 <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)">
          <source>This method flushes and closes the stream object in the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property.</source>
          <target state="translated">此方法刷新，并关闭的流对象<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)">
          <source>The port is in an invalid state.</source>
          <target state="translated">此端口处于无效状态。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)">
          <source>An attempt to set the state of the underlying port failed.</source>
          <target state="translated">尝试设置基础端口状态失败。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)">
          <source>For example, the parameters passed from this <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> object were invalid.</source>
          <target state="translated">例如，从此 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 对象传递的参数无效。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> 可以由其他对象多次调用。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph>.</source>
          <target state="translated">重写 <ph id="ph1">&lt;see cref="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)" /&gt;</ph> 时，请注意不要引用在以前调用 <ph id="ph2">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> 时已释放的对象。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see cref="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">有关如何实现详细信息<ph id="ph1">&lt;see cref="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)" /&gt;</ph>，请参阅<bpt id="p1">[</bpt>实现 Dispose 方法<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">有关详细信息<ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.DsrHolding">
          <source>Gets the state of the Data Set Ready (DSR) signal.</source>
          <target state="translated">获取数据设置就绪 (DSR) 信号的状态。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.DsrHolding">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a Data Set Ready signal has been sent to the port; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果“数据设置就绪”信号已发送到端口，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.DsrHolding">
          <source>This property is used in Data Set Ready/Data Terminal Ready (DSR/DTR) handshaking.</source>
          <target state="translated">此属性用于数据设置就绪/数据终端就绪 (DSR/DTR) 握手。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.DsrHolding">
          <source>The Data Set Ready (DSR) signal is usually sent by a modem to a port to indicate that it is ready for data transmission or data reception.</source>
          <target state="translated">数据设置就绪 (DSR) 信号通常由发送调制解调器到端口以指示它是准备好进行数据传输或接收数据的步骤。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.DsrHolding">
          <source>The port is in an invalid state.</source>
          <target state="translated">此端口处于无效状态。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.DsrHolding">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.DsrHolding">
          <source>An attempt to set the state of the underlying port failed.</source>
          <target state="translated">尝试设置基础端口状态失败。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.DsrHolding">
          <source>For example, the parameters passed from this <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> object were invalid.</source>
          <target state="translated">例如，从此 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 对象传递的参数无效。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.DsrHolding">
          <source>The stream is closed.</source>
          <target state="translated">流已关闭。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.DsrHolding">
          <source>This can occur because the <ph id="ph1">&lt;see cref="M:System.IO.Ports.SerialPort.Open" /&gt;</ph> method has not been called or the <ph id="ph2">&lt;see cref="M:System.IO.Ports.SerialPort.Close" /&gt;</ph> method has been called.</source>
          <target state="translated">这可能会因为尚未调用 <ph id="ph1">&lt;see cref="M:System.IO.Ports.SerialPort.Open" /&gt;</ph> 方法或已调用了 <ph id="ph2">&lt;see cref="M:System.IO.Ports.SerialPort.Close" /&gt;</ph> 方法而发生。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.DtrEnable">
          <source>Gets or sets a value that enables the Data Terminal Ready (DTR) signal during serial communication.</source>
          <target state="translated">获取或设置一个值，该值在串行通信过程中启用数据终端就绪 (DTR) 信号。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.DtrEnable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to enable Data Terminal Ready (DTR); otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则启用数据终端就绪 (DTR)；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.DtrEnable">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.DtrEnable">
          <source>Data Terminal Ready (DTR) is typically enabled during XON/XOFF software handshaking and Request to Send/Clear to Send (RTS/CTS) hardware handshaking, and modem communications.</source>
          <target state="translated">XON/XOFF 软件握手和发送/清除请求发送 (RTS/CTS) 硬件握手和调制解调器通信过程中通常会启用数据终端就绪 (DTR)。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.DtrEnable">
          <source>The port is in an invalid state.</source>
          <target state="translated">此端口处于无效状态。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.DtrEnable">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.DtrEnable">
          <source>An attempt to set the state of the underlying port failed.</source>
          <target state="translated">尝试设置基础端口状态失败。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.DtrEnable">
          <source>For example, the parameters passed from this <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> object were invalid.</source>
          <target state="translated">例如，从此 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 对象传递的参数无效。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.Encoding">
          <source>Gets or sets the byte encoding for pre- and post-transmission conversion of text.</source>
          <target state="translated">获取或设置传输前后文本转换的字节编码。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.Encoding">
          <source>An <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> object.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.Encoding">
          <source>The default is <ph id="ph1">&lt;see cref="T:System.Text.ASCIIEncoding" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see cref="T:System.Text.ASCIIEncoding" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.Encoding">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.Encoding" /&gt;</ph> property was set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.Encoding" /&gt;</ph> 属性已设置为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.Encoding">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.Encoding" /&gt;</ph> property was set to an encoding that is not <ph id="ph2">&lt;see cref="T:System.Text.ASCIIEncoding" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph>, <ph id="ph4">&lt;see cref="T:System.Text.UTF32Encoding" /&gt;</ph>, <ph id="ph5">&lt;see cref="T:System.Text.UnicodeEncoding" /&gt;</ph>, one of the Windows single byte encodings, or one of the Windows double byte encodings.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.Encoding" /&gt;</ph> 属性被设置为的编码不是 <ph id="ph2">&lt;see cref="T:System.Text.ASCIIEncoding" /&gt;</ph>、<ph id="ph3">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph>、<ph id="ph4">&lt;see cref="T:System.Text.UTF32Encoding" /&gt;</ph>、<ph id="ph5">&lt;see cref="T:System.Text.UnicodeEncoding" /&gt;</ph>、Windows 单字节编码之一或 Windows 双字节编码之一。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="E:System.IO.Ports.SerialPort.ErrorReceived">
          <source>Indicates that an error has occurred with a port represented by a <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> object.</source>
          <target state="translated">指示由 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 对象表示的端口上发生了错误。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.ErrorReceived">
          <source>Error events can be caused by any of the items in the <ph id="ph1">&lt;xref:System.IO.Ports.SerialError&gt;</ph> enumeration.</source>
          <target state="translated">错误事件可以由任何中的项原因引起<ph id="ph1">&lt;xref:System.IO.Ports.SerialError&gt;</ph>枚举。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.ErrorReceived">
          <source>Because the operating system determines whether to raise this event or not, not all parity errors may be reported.</source>
          <target state="translated">由于操作系统决定是否以引发此事件，或不，并非所有的奇偶校验错误可能会报告。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.ErrorReceived">
          <source><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.PinChanged&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.DataReceived&gt;</ph>, and <ph id="ph3">&lt;xref:System.IO.Ports.SerialPort.ErrorReceived&gt;</ph> events may be called out of order, and there may be a slight delay between when the underlying stream reports the error and when code can when the event handler is executed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.PinChanged&gt;</ph><ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.DataReceived&gt;</ph>，和<ph id="ph3">&lt;xref:System.IO.Ports.SerialPort.ErrorReceived&gt;</ph>事件可能被调用无序，并且可能有基础流时报告错误，并且当代码可以执行事件处理程序时之间稍有延迟。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.ErrorReceived">
          <source>Only one event handler can execute at a time.</source>
          <target state="translated">只能有一个事件处理程序可以执行一次。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.ErrorReceived">
          <source>If a parity error occurs on the trailing byte of a stream, an extra byte will be added to the input buffer with a value of 126.</source>
          <target state="translated">如果流的尾随字节在发生奇偶校验错误，将向输入一个值为 126 缓冲区添加的额外字节。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.ErrorReceived">
          <source>The <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.ErrorReceived&gt;</ph> event is raised on a secondary thread when an error is received from the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.ErrorReceived&gt;</ph>时从接收到的错误事件辅助线程上引发<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.ErrorReceived">
          <source>Because this event is raised on a secondary thread, and not the main thread, attempting to modify some elements in the main thread, such as UI elements, could raise a threading exception.</source>
          <target state="translated">因为在辅助线程和非主线程，尝试修改主线程，如 UI 元素中的某些元素上引发此事件可能会产生线程处理的异常。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.ErrorReceived">
          <source>If it is necessary to modify elements in the main <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>, post change requests back using <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, which will do the work on the proper thread.</source>
          <target state="translated">如果需要修改当中，该元素<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>和返回使用 post 更改请求<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>，这将执行在合适的线程上工作。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.ErrorReceived">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.GetPortNames">
          <source>Gets an array of serial port names for the current computer.</source>
          <target state="translated">获取当前计算机的串行端口名的数组。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.GetPortNames">
          <source>An array of serial port names for the current computer.</source>
          <target state="translated">当前计算机的串行端口名的数组。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.GetPortNames">
          <source>The order of port names returned from <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.GetPortNames%2A&gt;</ph> is not specified.</source>
          <target state="translated">从返回的端口名的顺序<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.GetPortNames%2A&gt;</ph>未指定。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.GetPortNames">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.GetPortNames%2A&gt;</ph> method to query the current computer for a list of valid serial port names.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.GetPortNames%2A&gt;</ph>方法来查询当前计算机有关的有效的串行端口名的列表。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.GetPortNames">
          <source>For example, you can use this method to determine whether COM1 and COM2 are valid serial ports for the current computer.</source>
          <target state="translated">例如，此方法可用于确定 COM1 和 COM2 是否为当前计算机的有效串行端口。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.GetPortNames">
          <source>The port names are obtained from the system registry (for example, HKEY_LOCAL_MACHINE\HARDWARE\DEVICEMAP\SERIALCOMM).</source>
          <target state="translated">从系统注册表 (例如，HKEY_LOCAL_MACHINE\HARDWARE\DEVICEMAP\SERIALCOMM) 获取的端口名称。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.GetPortNames">
          <source>If the registry contains stale or otherwise incorrect data then the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.GetPortNames%2A&gt;</ph> method will return incorrect data.</source>
          <target state="translated">如果该注册表包含过时或不正确的数据则<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.GetPortNames%2A&gt;</ph>方法将返回不正确的数据。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.GetPortNames">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.GetPortNames%2A&gt;</ph> method to display serial port names to the console.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.GetPortNames%2A&gt;</ph>方法来向控制台显示串行端口名称。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.GetPortNames">
          <source>The serial port names could not be queried.</source>
          <target state="translated">未能查询串行端口名称。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.Handshake">
          <source>Gets or sets the handshaking protocol for serial port transmission of data using a value from <ph id="ph1">&lt;see cref="T:System.IO.Ports.Handshake" /&gt;</ph>.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="T:System.IO.Ports.Handshake" /&gt;</ph> 中的值获取或设置串行端口数据传输的握手协议。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.Handshake">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.IO.Ports.Handshake" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Ports.Handshake" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.Handshake">
          <source>The default is <ph id="ph1">&lt;see langword="None" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="None" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.Handshake">
          <source>When handshaking is used, the device connected to the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object is instructed to stop sending data when there is at least (<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.ReadBufferSize%2A&gt;</ph>-1024) bytes in the buffer.</source>
          <target state="translated">当使用握手时，该设备已连接到<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>对象指示以停止在没有至少时才发送数据 (<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.ReadBufferSize%2A&gt;</ph>-1024) 缓冲区中的字节。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.Handshake">
          <source>The device is instructed to start sending data again when there are 1024 or fewer bytes in the buffer.</source>
          <target state="translated">设备将指示重新开始发送数据时缓冲区中有 1024年或更少字节。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.Handshake">
          <source>If the device is sending data in blocks that are larger than 1024 bytes, this may cause the buffer to overflow.</source>
          <target state="translated">如果设备在大于 1024 个字节的块中发送数据，这可能导致缓冲区溢出。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.Handshake">
          <source>If the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.Handshake%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.IO.Ports.Handshake.RequestToSendXOnXOff&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.Ports.SerialPort.CtsHolding%2A&gt;</ph> is set to <ph id="ph4">`false`</ph>, the XOff character will not be sent.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.Handshake%2A&gt;</ph>属性设置为<ph id="ph2">&lt;xref:System.IO.Ports.Handshake.RequestToSendXOnXOff&gt;</ph>和<ph id="ph3">&lt;xref:System.IO.Ports.SerialPort.CtsHolding%2A&gt;</ph>设置为<ph id="ph4">`false`</ph>，将不会发送 XOff 字符。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.Handshake">
          <source>If <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.CtsHolding%2A&gt;</ph> is then set to <ph id="ph2">`true`</ph>, more data must be sent before the XOff character will be sent.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.CtsHolding%2A&gt;</ph>然后将设置为<ph id="ph2">`true`</ph>，将发送 XOff 字符之前必须发送更多的数据。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.Handshake">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class to allow two users to chat from two separate computers connected by a null modem cable.</source>
          <target state="translated">下面的代码示例演示如何将<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类以允许两个用户聊天从通过空调制解调器缆线连接的两个单独的计算机。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.Handshake">
          <source>In this example, the users are prompted for the port settings and a username before chatting.</source>
          <target state="translated">在此示例中，将提示用户输入的端口设置和用户名之前的聊天。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.Handshake">
          <source>This code example is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class.</source>
          <target state="translated">此代码示例是为提供一个更大的代码示例的一部分<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.Handshake">
          <source>The port is in an invalid state.</source>
          <target state="translated">此端口处于无效状态。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.Handshake">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.Handshake">
          <source>An attempt to set the state of the underlying port failed.</source>
          <target state="translated">尝试设置基础端口状态失败。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.Handshake">
          <source>For example, the parameters passed from this <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> object were invalid.</source>
          <target state="translated">例如，从此 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 对象传递的参数无效。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.Handshake">
          <source>The value passed is not a valid value in the <ph id="ph1">&lt;see cref="T:System.IO.Ports.Handshake" /&gt;</ph> enumeration.</source>
          <target state="translated">传递的值不是 <ph id="ph1">&lt;see cref="T:System.IO.Ports.Handshake" /&gt;</ph> 枚举中的有效值。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="F:System.IO.Ports.SerialPort.InfiniteTimeout">
          <source>Indicates that no time-out should occur.</source>
          <target state="translated">指示不应该发生超时。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.Ports.SerialPort.InfiniteTimeout">
          <source>This value is used with the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.ReadTimeout%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.WriteTimeout%2A&gt;</ph> properties.</source>
          <target state="translated">此值用于<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.ReadTimeout%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.WriteTimeout%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.IsOpen">
          <source>Gets a value indicating the open or closed status of the <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> object.</source>
          <target state="translated">获取一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 对象的打开或关闭状态。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.IsOpen">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the serial port is open; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果串行端口已打开，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.IsOpen">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.IsOpen">
          <source>The <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.IsOpen%2A&gt;</ph> property tracks whether the port is open for use by the caller, not whether the port is open by any application on the machine.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.IsOpen%2A&gt;</ph>属性跟踪是否端口处于打开状态以供调用方，不端口是否被任何应用程序在计算机上打开。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.IsOpen">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.IsOpen" /&gt;</ph> value passed is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">已传递的 <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.IsOpen" /&gt;</ph> 值为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.IsOpen">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.IsOpen" /&gt;</ph> value passed is an empty string ("").</source>
          <target state="translated">已传递的 <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.IsOpen" /&gt;</ph> 值为空字符串。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.NewLine">
          <source>Gets or sets the value used to interpret the end of a call to the <ph id="ph1">&lt;see cref="M:System.IO.Ports.SerialPort.ReadLine" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.IO.Ports.SerialPort.WriteLine(System.String)" /&gt;</ph> methods.</source>
          <target state="translated">获取或设置用于解释 <ph id="ph1">&lt;see cref="M:System.IO.Ports.SerialPort.ReadLine" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="M:System.IO.Ports.SerialPort.WriteLine(System.String)" /&gt;</ph> 方法调用结束的值。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.NewLine">
          <source>A value that represents the end of a line.</source>
          <target state="translated">表示行尾的值。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.NewLine">
          <source>The default is a line feed, <ph id="ph1">&lt;see cref="P:System.Environment.NewLine" /&gt;</ph>.</source>
          <target state="translated">默认值为换行符，<ph id="ph1">&lt;see cref="P:System.Environment.NewLine" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.NewLine">
          <source>This property determines what value (byte) defines the end of a line for the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.ReadLine%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.WriteLine%2A&gt;</ph> methods.</source>
          <target state="translated">此属性确定哪些值 （字节） 定义的行的末尾<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.ReadLine%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.WriteLine%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.NewLine">
          <source>By default the end-of-line value is <ph id="ph1">&lt;xref:System.Environment.NewLine%2A&gt;</ph>.</source>
          <target state="translated">默认情况下结束的行值是<ph id="ph1">&lt;xref:System.Environment.NewLine%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.NewLine">
          <source>You would change this to a different value if the particular serial device you’re working with uses a different value for the same purpose.</source>
          <target state="translated">如果你正在使用的特定串行设备实现同一目的使用不同的值，将更改为不同的值这种情况。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.NewLine">
          <source>The property value is empty.</source>
          <target state="translated">属性值为空。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.NewLine">
          <source>The property value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">属性值为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Open">
          <source>Opens a new serial port connection.</source>
          <target state="translated">打开一个新的串行端口连接。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Open">
          <source>Only one open connection can exist per <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object.</source>
          <target state="translated">每个只能存在一个打开的连接<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Open">
          <source>The best practice for any application is to wait for some amount of time after calling the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.Close%2A&gt;</ph> method before attempting to call the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.Open%2A&gt;</ph> method, as the port may not be closed instantly.</source>
          <target state="translated">任何应用程序的最佳做法是等待一定的时间之后调用<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.Close%2A&gt;</ph>方法，然后再尝试调用<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.Open%2A&gt;</ph>方法，为端口可能不会关闭立即。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Open">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class to allow two users to chat from two separate computers connected by a null modem cable.</source>
          <target state="translated">下面的代码示例演示如何将<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类以允许两个用户聊天从通过空调制解调器缆线连接的两个单独的计算机。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Open">
          <source>In this example, the users are prompted for the port settings and a username before chatting.</source>
          <target state="translated">在此示例中，将提示用户输入的端口设置和用户名之前的聊天。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Open">
          <source>This code example is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class.</source>
          <target state="translated">此代码示例是为提供一个更大的代码示例的一部分<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Open">
          <source>Access is denied to the port.</source>
          <target state="translated">对端口的访问被拒绝。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Open">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Open">
          <source>The current process, or another process on the system, already has the specified COM port open either by a <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> instance or in unmanaged code.</source>
          <target state="translated">当前进程或系统上的另一个进程已经打开了指定的 COM 端口（通过 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 实例或在非托管代码中）。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Open">
          <source>One or more of the properties for this instance are invalid.</source>
          <target state="translated">此实例的一个或多个属性无效。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Open">
          <source>For example, the <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.Parity" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.IO.Ports.SerialPort.DataBits" /&gt;</ph>, or <ph id="ph3">&lt;see cref="P:System.IO.Ports.SerialPort.Handshake" /&gt;</ph> properties are not valid values; the <ph id="ph4">&lt;see cref="P:System.IO.Ports.SerialPort.BaudRate" /&gt;</ph> is less than or equal to zero; the <ph id="ph5">&lt;see cref="P:System.IO.Ports.SerialPort.ReadTimeout" /&gt;</ph> or <ph id="ph6">&lt;see cref="P:System.IO.Ports.SerialPort.WriteTimeout" /&gt;</ph> property is less than zero and is not <ph id="ph7">&lt;see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" /&gt;</ph>.</source>
          <target state="translated">例如，<ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.Parity" /&gt;</ph>、<ph id="ph2">&lt;see cref="P:System.IO.Ports.SerialPort.DataBits" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="P:System.IO.Ports.SerialPort.Handshake" /&gt;</ph> 属性不是有效值；<ph id="ph4">&lt;see cref="P:System.IO.Ports.SerialPort.BaudRate" /&gt;</ph> 小于或等于零；<ph id="ph5">&lt;see cref="P:System.IO.Ports.SerialPort.ReadTimeout" /&gt;</ph> 或 <ph id="ph6">&lt;see cref="P:System.IO.Ports.SerialPort.WriteTimeout" /&gt;</ph> 属性小于零且不是 <ph id="ph7">&lt;see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Open">
          <source>The port name does not begin with "COM".</source>
          <target state="translated">端口名称不是以“COM”开始的。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Open">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Open">
          <source>The file type of the port is not supported.</source>
          <target state="translated">端口的文件类型不受支持。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Open">
          <source>The port is in an invalid state.</source>
          <target state="translated">此端口处于无效状态。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Open">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Open">
          <source>An attempt to set the state of the underlying port failed.</source>
          <target state="translated">尝试设置基础端口状态失败。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Open">
          <source>For example, the parameters passed from this <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> object were invalid.</source>
          <target state="translated">例如，从此 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 对象传递的参数无效。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Open">
          <source>The specified port on the current instance of the <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> is already open.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 的当前实例上的指定端口已经打开。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Open">
          <source>for calling unmanaged code.</source>
          <target state="translated">用于调用非托管的代码。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Open">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph> Security action: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></source>
          <target state="translated">关联的枚举：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>安全操作： <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.Parity">
          <source>Gets or sets the parity-checking protocol.</source>
          <target state="translated">获取或设置奇偶校验检查协议。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.Parity">
          <source>One of the enumeration values that represents the parity-checking protocol.</source>
          <target state="translated">表示奇偶校验检查协议的枚举值之一。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.Parity">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.IO.Ports.Parity.None" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see cref="F:System.IO.Ports.Parity.None" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.Parity">
          <source>Parity is an error-checking procedure in which the number of 1s must always be the same—either even or odd—for each group of bits that is transmitted without error.</source>
          <target state="translated">奇偶校验是在其中为 1 的数必须始终是相同的错误检查的过程-偶数还是奇数-每个组的 bits 传输而未出现错误。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.Parity">
          <source>In modem-to-modem communications, parity is often one of the parameters that must be agreed upon by sending parties and receiving parties before transmission can take place.</source>
          <target state="translated">在调制解调器的通信，奇偶校验通常是必须同意通过发送方和接收方传输才能使放置的参数之一。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.Parity">
          <source>If a parity error occurs on the trailing byte of a stream, an extra byte will be added to the input buffer with a value of 126.</source>
          <target state="translated">如果流的尾随字节在发生奇偶校验错误，将向输入一个值为 126 缓冲区添加的额外字节。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.Parity">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class to allow two users to chat from two separate computers connected by a null modem cable.</source>
          <target state="translated">下面的代码示例演示如何将<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类以允许两个用户聊天从通过空调制解调器缆线连接的两个单独的计算机。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.Parity">
          <source>In this example, the users are prompted for the port settings and a username before chatting.</source>
          <target state="translated">在此示例中，将提示用户输入的端口设置和用户名之前的聊天。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.Parity">
          <source>This code example is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class.</source>
          <target state="translated">此代码示例是为提供一个更大的代码示例的一部分<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.Parity">
          <source>The port is in an invalid state.</source>
          <target state="translated">此端口处于无效状态。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.Parity">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.Parity">
          <source>An attempt to set the state of the underlying port failed.</source>
          <target state="translated">尝试设置基础端口状态失败。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.Parity">
          <source>For example, the parameters passed from this <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> object were invalid.</source>
          <target state="translated">例如，从此 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 对象传递的参数无效。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.Parity">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.Parity" /&gt;</ph> value passed is not a valid value in the <ph id="ph2">&lt;see cref="T:System.IO.Ports.Parity" /&gt;</ph> enumeration.</source>
          <target state="translated">传递的 <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.Parity" /&gt;</ph> 值不是 <ph id="ph2">&lt;see cref="T:System.IO.Ports.Parity" /&gt;</ph> 枚举中的有效值。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.ParityReplace">
          <source>Gets or sets the byte that replaces invalid bytes in a data stream when a parity error occurs.</source>
          <target state="translated">获取或设置一个字节，该字节在发生奇偶校验错误时替换数据流中的无效字节。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.ParityReplace">
          <source>A byte that replaces invalid bytes.</source>
          <target state="translated">替换无效字节的字节。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.ParityReplace">
          <source>If the value is set to the null character, parity replacement is disabled.</source>
          <target state="translated">如果值设置为 null 字符，奇偶校验替换被禁用。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.ParityReplace">
          <source>The port is in an invalid state.</source>
          <target state="translated">此端口处于无效状态。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.ParityReplace">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.ParityReplace">
          <source>An attempt to set the state of the underlying port failed.</source>
          <target state="translated">尝试设置基础端口状态失败。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.ParityReplace">
          <source>For example, the parameters passed from this <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> object were invalid.</source>
          <target state="translated">例如，从此 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 对象传递的参数无效。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="E:System.IO.Ports.SerialPort.PinChanged">
          <source>Indicates that a non-data signal event has occurred on the port represented by the <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> object.</source>
          <target state="translated">指示由 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 对象表示的端口上发生了非数据信号事件。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.PinChanged">
          <source>Serial pin changed events can be caused by any of the items in the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPinChange&gt;</ph> enumeration.</source>
          <target state="translated">串行 pin 更改事件可以由任何中的项<ph id="ph1">&lt;xref:System.IO.Ports.SerialPinChange&gt;</ph>枚举。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.PinChanged">
          <source>Because the operating system determines whether to raise this event or not, not all parity errors may be reported.</source>
          <target state="translated">由于操作系统决定是否以引发此事件，或不，并非所有的奇偶校验错误可能会报告。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.PinChanged">
          <source>As part of the event, the new value of the pin is set.</source>
          <target state="translated">作为事件的一部分，设置 pin 的新值。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.PinChanged">
          <source>The <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.PinChanged&gt;</ph> event is raised when a <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object enters the <ph id="ph3">&lt;xref:System.IO.Ports.SerialPort.BreakState%2A&gt;</ph>, but not when the port exits the <ph id="ph4">&lt;xref:System.IO.Ports.SerialPort.BreakState%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.PinChanged&gt;</ph>引发事件时<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>对象进入<ph id="ph3">&lt;xref:System.IO.Ports.SerialPort.BreakState%2A&gt;</ph>，但端口退出时不<ph id="ph4">&lt;xref:System.IO.Ports.SerialPort.BreakState%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.PinChanged">
          <source>This behavior does not apply to other values in the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPinChange&gt;</ph> enumeration.</source>
          <target state="translated">此行为不适用于中的其他值<ph id="ph1">&lt;xref:System.IO.Ports.SerialPinChange&gt;</ph>枚举。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.PinChanged">
          <source><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.PinChanged&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.DataReceived&gt;</ph>, and <ph id="ph3">&lt;xref:System.IO.Ports.SerialPort.ErrorReceived&gt;</ph> events may be called out of order, and there may be a slight delay between when the underlying stream reports the error and when the event handler is executed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.PinChanged&gt;</ph><ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.DataReceived&gt;</ph>，和<ph id="ph3">&lt;xref:System.IO.Ports.SerialPort.ErrorReceived&gt;</ph>事件可能被调用无序，并且可能有基础流时报告错误和事件处理程序执行时之间稍有延迟。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.PinChanged">
          <source>Only one event handler can execute at a time.</source>
          <target state="translated">只能有一个事件处理程序可以执行一次。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.PinChanged">
          <source>The <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.PinChanged&gt;</ph> event is raised on a secondary thread.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.PinChanged&gt;</ph>在辅助线程上引发事件。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.PinChanged">
          <source>Because this event is raised on a secondary thread, and not the main thread, attempting to modify some elements in the main thread, such as UI elements, could raise a threading exception.</source>
          <target state="translated">因为在辅助线程和非主线程，尝试修改主线程，如 UI 元素中的某些元素上引发此事件可能会产生线程处理的异常。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.PinChanged">
          <source>If it is necessary to modify elements in the main <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>, post change requests back using <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, which will do the work on the proper thread.</source>
          <target state="translated">如果需要修改当中，该元素<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>和返回使用 post 更改请求<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>，这将执行在合适的线程上工作。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.Ports.SerialPort.PinChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.PortName">
          <source>Gets or sets the port for communications, including but not limited to all available COM ports.</source>
          <target state="translated">获取或设置通信端口，包括但不限于所有可用的 COM 端口。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.PortName">
          <source>The communications port.</source>
          <target state="translated">通信端口。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.PortName">
          <source>The default is COM1.</source>
          <target state="translated">默认值为 COM1。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.PortName">
          <source>A list of valid port names can be obtained using the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.GetPortNames%2A&gt;</ph> method.</source>
          <target state="translated">可以通过获取有效的端口名称的列表<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.GetPortNames%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.PortName">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class to allow two users to chat from two separate computers connected by a null modem cable.</source>
          <target state="translated">下面的代码示例演示如何将<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类以允许两个用户聊天从通过空调制解调器缆线连接的两个单独的计算机。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.PortName">
          <source>In this example, the users are prompted for the port settings and a username before chatting.</source>
          <target state="translated">在此示例中，将提示用户输入的端口设置和用户名之前的聊天。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.PortName">
          <source>This code example is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class.</source>
          <target state="translated">此代码示例是为提供一个更大的代码示例的一部分<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.PortName">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.PortName" /&gt;</ph> property was set to a value with a length of zero.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.PortName" /&gt;</ph> 属性已设置为长度为零的值。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.PortName">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.PortName">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.PortName" /&gt;</ph> property was set to a value that starts with "<ph id="ph2">\\</ph><ph id="ph3">\\</ph>".</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.PortName" /&gt;</ph> 属性已设置为以“<ph id="ph2">\\</ph><ph id="ph3">\\</ph>”开头的值。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.PortName">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.PortName">
          <source>The port name was not valid.</source>
          <target state="translated">端口名称无效。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.PortName">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.PortName" /&gt;</ph> property was set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.PortName" /&gt;</ph> 属性已设置为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.PortName">
          <source>The specified port is open.</source>
          <target state="translated">指定的端口已打开。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="T:System.IO.Ports.SerialPort">
          <source>Reads from the <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> input buffer.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 输入缓冲区中读取。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The byte array to write the input to.</source>
          <target state="translated">将输入写入到其中的字节数组。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to write the bytes.</source>
          <target state="translated">要写入字节的 <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> 中的偏移量。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">最多读取的字节数。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Fewer bytes are read if <bpt id="p1">&lt;c&gt;</bpt>count<ept id="p1">&lt;/c&gt;</ept> is greater than the number of bytes in the input buffer.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>count<ept id="p1">&lt;/c&gt;</ept> 大于输入缓冲区中的字节数，则读取较少的字节。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Reads a number of bytes from the <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> input buffer and writes those bytes into a byte array at the specified offset.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 输入缓冲区读取一些字节并将那些字节写入字节数组中指定的偏移量处。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes read.</source>
          <target state="translated">读取的字节数。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)">
          <source>If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.</source>
          <target state="translated">如果有必要读取文本和从流中读取二进制数据之间进行切换，选择一种协议，仔细定义文本和二进制数据，如手动读取字节和解码数据之间的边界。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Because the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class buffers data, and the stream contained in the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property does not, the two might conflict about how many bytes are available to read.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类放入缓冲区的数据，而流中包含<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph>属性不，这两个可能冲突有关可用读取字节数。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property because they have been buffered to the <ph id="ph3">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph>属性可以指示字节读取，但不是能访问到流中包含这些字节<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph>属性原因已缓冲到<ph id="ph3">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.Read%2A&gt;</ph> method does not block other operations when the number of bytes read equals <ph id="ph2">`count`</ph> but there are still unread bytes available on the serial port.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.Read%2A&gt;</ph>方法不会阻止其他操作时读取的字节数等于<ph id="ph2">`count`</ph>但有仍未读的字节可用的串行端口。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer passed is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">传递的 buffer 为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The specified port is not open.</source>
          <target state="translated">指定的端口未打开。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> parameters are outside a valid region of the <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph> being passed.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 参数超出了所传递的 <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph> 的有效区域。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Either <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is greater than the length of the <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 加上 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 大于 <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph> 的长度。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)">
          <source>No bytes were available to read.</source>
          <target state="translated">没有可以读取的字节。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)">
          <source>The character array to write the input to.</source>
          <target state="translated">将输入写入到其中的字符数组。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)">
          <source>The offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to write the characters.</source>
          <target state="translated">要写入字符的 <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> 中的偏移量。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)">
          <source>The maximum number of characters to read.</source>
          <target state="translated">要读取的最大字符数。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)">
          <source>Fewer characters are read if <bpt id="p1">&lt;c&gt;</bpt>count<ept id="p1">&lt;/c&gt;</ept> is greater than the number of characters in the input buffer.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>count<ept id="p1">&lt;/c&gt;</ept> 大于输入缓冲区中的字符数，则读取较少的字符。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)">
          <source>Reads a number of characters from the <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> input buffer and writes them into an array of characters at a given offset.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 输入缓冲区中读取一些字符，然后将这些字符写入字符数组中指定的偏移量处。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters read.</source>
          <target state="translated">读取的字符数。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)">
          <source>Use this method for reading characters from the serial port.</source>
          <target state="translated">此方法用于从串行端口中读取字符。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)">
          <source>If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.</source>
          <target state="translated">如果有必要读取文本和从流中读取二进制数据之间进行切换，选择一种协议，仔细定义文本和二进制数据，如手动读取字节和解码数据之间的边界。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)">
          <source>Because the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class buffers data, and the stream contained in the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property does not, the two might conflict about how many characters are available to read.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类放入缓冲区的数据，而流中包含<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph>属性不、 两个可能会有可用于读取多少个字符不一致。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph> property can indicate that there are characters to read, but these characters might not be accessible to the stream contained in the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property because they have been buffered to the <ph id="ph3">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph>属性可以指示的字符可读取，但这些字符可能无法访问包含中的流<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph>属性原因已缓冲到<ph id="ph3">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.Read%2A&gt;</ph> method does not block other operations when the number of bytes read equals <ph id="ph2">`count`</ph> but there are still unread bytes available on the serial port.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.Read%2A&gt;</ph>方法不会阻止其他操作时读取的字节数等于<ph id="ph2">`count`</ph>但有仍未读的字节可用的串行端口。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is greater than the length of the buffer.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 加上 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 大于缓冲区的长度。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is 1 and there is a surrogate character in the buffer.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> 为 1 并且缓冲区中有一个代理项字符。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> passed is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">传递的 <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> parameters are outside a valid region of the <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph> being passed.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 参数超出了所传递的 <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph> 的有效区域。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)">
          <source>Either <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)">
          <source>The specified port is not open.</source>
          <target state="translated">指定的端口未打开。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)">
          <source>No characters were available to read.</source>
          <target state="translated">没有可以读取的字符。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.ReadBufferSize">
          <source>Gets or sets the size of the <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> input buffer.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 输入缓冲区的大小。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.ReadBufferSize">
          <source>The buffer size, in bytes.</source>
          <target state="translated">缓冲区大小（以字节为单位）。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.ReadBufferSize">
          <source>The default value is 4096; the maximum value is that of a positive int, or 2147483647.</source>
          <target state="translated">默认值为 4096；最大值为正整数，即 2147483647。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.ReadBufferSize">
          <source>The <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.ReadBufferSize%2A&gt;</ph> property ignores any value smaller than 4096.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.ReadBufferSize%2A&gt;</ph>属性将忽略小于 4096 任何值。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.ReadBufferSize">
          <source>Because the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.ReadBufferSize%2A&gt;</ph> property represents only the Windows-created buffer, it can return a smaller value than the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph> property, which represents both the <ph id="ph3">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> buffer and the Windows-created buffer.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.ReadBufferSize%2A&gt;</ph>属性表示仅 Windows 创建的缓冲区，它可返回较小的值比<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph>属性，表示同时<ph id="ph3">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>缓冲区和 Windows 创建缓冲区。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.ReadBufferSize">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.ReadBufferSize" /&gt;</ph> value set is less than or equal to zero.</source>
          <target state="translated">设置的 <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.ReadBufferSize" /&gt;</ph> 值小于或等于零。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.ReadBufferSize">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.ReadBufferSize" /&gt;</ph> property was set while the stream was open.</source>
          <target state="translated">打开流时设置 <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.ReadBufferSize" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.ReadBufferSize">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.ReadBufferSize" /&gt;</ph> property was set to an odd integer value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.ReadBufferSize" /&gt;</ph> 属性已设置为一个奇整数值。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadByte">
          <source>Synchronously reads one byte from the <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> input buffer.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 输入缓冲区中同步读取一个字节。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadByte">
          <source>The byte, cast to an <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>, or -1 if the end of the stream has been read.</source>
          <target state="translated">强制转换为 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 的字节；或者，如果已读取到流的末尾，则为 -1。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadByte">
          <source>This method reads one byte.</source>
          <target state="translated">此方法读取一个字节。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadByte">
          <source>Use caution when using <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.ReadByte%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.ReadChar%2A&gt;</ph> together.</source>
          <target state="translated">请小心使用<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.ReadByte%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.ReadChar%2A&gt;</ph>在一起。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadByte">
          <source>Switching between reading bytes and reading characters can cause extra data to be read and/or other unintended behavior.</source>
          <target state="translated">读取的字节和中读取字符之间切换可能会导致额外的数据要读取和/或其他意外的行为。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadByte">
          <source>If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.</source>
          <target state="translated">如果有必要读取文本和从流中读取二进制数据之间进行切换，选择一种协议，仔细定义文本和二进制数据，如手动读取字节和解码数据之间的边界。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadByte">
          <source>Because the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class buffers data, and the stream contained in the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property does not, the two might conflict about how many bytes are available to read.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类放入缓冲区的数据，而流中包含<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph>属性不，这两个可能冲突有关可用读取字节数。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadByte">
          <source>The <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property because they have been buffered to the <ph id="ph3">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph>属性可以指示字节读取，但不是能访问到流中包含这些字节<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph>属性原因已缓冲到<ph id="ph3">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadByte">
          <source>The specified port is not open.</source>
          <target state="translated">指定的端口未打开。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadByte">
          <source>The operation did not complete before the time-out period ended.</source>
          <target state="translated">该操作未在超时时间到期之前完成。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadByte">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadByte">
          <source>No byte was read.</source>
          <target state="translated">未读取任何字节。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadChar">
          <source>Synchronously reads one character from the <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> input buffer.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 输入缓冲区中同步读取一个字符。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadChar">
          <source>The character that was read.</source>
          <target state="translated">读取的字符。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadChar">
          <source>This method reads one complete character based on the encoding.</source>
          <target state="translated">此方法读取一个完整的字符编码的基础。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadChar">
          <source>Use caution when using <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.ReadByte%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.ReadChar%2A&gt;</ph> together.</source>
          <target state="translated">请小心使用<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.ReadByte%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.ReadChar%2A&gt;</ph>在一起。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadChar">
          <source>Switching between reading bytes and reading characters can cause extra data to be read and/or other unintended behavior.</source>
          <target state="translated">读取的字节和中读取字符之间切换可能会导致额外的数据要读取和/或其他意外的行为。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadChar">
          <source>If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.</source>
          <target state="translated">如果有必要读取文本和从流中读取二进制数据之间进行切换，选择一种协议，仔细定义文本和二进制数据，如手动读取字节和解码数据之间的边界。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadChar">
          <source>Because the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class buffers data, and the stream contained in the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property does not, the two might conflict about how many bytes are available to read.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类放入缓冲区的数据，而流中包含<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph>属性不，这两个可能冲突有关可用读取字节数。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadChar">
          <source>The <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property because they have been buffered to the <ph id="ph3">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph>属性可以指示字节读取，但不是能访问到流中包含这些字节<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph>属性原因已缓冲到<ph id="ph3">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadChar">
          <source>The specified port is not open.</source>
          <target state="translated">指定的端口未打开。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadChar">
          <source>The operation did not complete before the time-out period ended.</source>
          <target state="translated">该操作未在超时时间到期之前完成。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadChar">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadChar">
          <source>No character was available in the allotted time-out period.</source>
          <target state="translated">在分配的超时时间内没有可用的字符。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadExisting">
          <source>Reads all immediately available bytes, based on the encoding, in both the stream and the input buffer of the <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> object.</source>
          <target state="translated">在编码的基础上，读取 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 对象的流和输入缓冲区中所有立即可用的字节。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadExisting">
          <source>The contents of the stream and the input buffer of the <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 对象的流和输入缓冲区的内容。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadExisting">
          <source>This method returns the contents of the stream and internal buffer of the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object as a string.</source>
          <target state="translated">此方法返回的流和内部缓冲区的内容<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>字符串形式的对象。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadExisting">
          <source>This method does not use a time-out. Note that this method can leave trailing lead bytes in the internal buffer, which makes the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph> value greater than zero.</source>
          <target state="translated">此方法不使用超时。请注意，此方法可以保留尾部内部缓冲区，这样中的前导字节<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph>大于零的值。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadExisting">
          <source>If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.</source>
          <target state="translated">如果有必要读取文本和从流中读取二进制数据之间进行切换，选择一种协议，仔细定义文本和二进制数据，如手动读取字节和解码数据之间的边界。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadExisting">
          <source>The <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class buffers data, but the stream object contained in the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A?displayProperty=nameWithType&gt;</ph> property does not.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类缓冲数据，但的流对象包含在<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A?displayProperty=nameWithType&gt;</ph>属性却没有。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadExisting">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object and the stream object might differ on the number of bytes that are available to read.</source>
          <target state="translated">因此，<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>对象和流对象可能会与不同的可读取的字节数。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadExisting">
          <source>When bytes are buffered to the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object, the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph> property includes these bytes in its value; however, these bytes might not be accessible to the stream contained in the <ph id="ph3">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property.</source>
          <target state="translated">当将字节缓冲到<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>对象，<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph>属性的值中包括这些字节; 但是，这些字节可能无法访问包含中的流<ph id="ph3">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadExisting">
          <source>The specified port is not open.</source>
          <target state="translated">指定的端口未打开。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadLine">
          <source>Reads up to the <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.NewLine" /&gt;</ph> value in the input buffer.</source>
          <target state="translated">一直读取到输入缓冲区中的 <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.NewLine" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadLine">
          <source>The contents of the input buffer up to the first occurrence of a <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.NewLine" /&gt;</ph> value.</source>
          <target state="translated">输入缓冲区中直到首次出现 <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.NewLine" /&gt;</ph> 值的内容。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadLine">
          <source>Note that while this method does not return the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.NewLine%2A&gt;</ph> value, the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.NewLine%2A&gt;</ph> value is removed from the input buffer.</source>
          <target state="translated">请注意，虽然此方法不返回<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.NewLine%2A&gt;</ph>值，<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.NewLine%2A&gt;</ph>该值会从输入缓冲区中删除。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadLine">
          <source>By default, the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.ReadLine%2A&gt;</ph> method will block until a line is received.</source>
          <target state="translated">默认情况下，<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.ReadLine%2A&gt;</ph>方法将阻塞，直到收到一条线。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadLine">
          <source>If this behavior is undesirable, set the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.ReadTimeout%2A&gt;</ph> property to any non-zero value to force the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.ReadLine%2A&gt;</ph> method to throw a <ph id="ph3">&lt;xref:System.TimeoutException&gt;</ph> if a line is not available on the port.</source>
          <target state="translated">如果不需要此行为，设置<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.ReadTimeout%2A&gt;</ph>为任何非零值，以强制属性<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.ReadLine%2A&gt;</ph>方法会引发<ph id="ph3">&lt;xref:System.TimeoutException&gt;</ph>如果行在端口上不可用。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadLine">
          <source>If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.</source>
          <target state="translated">如果有必要读取文本和从流中读取二进制数据之间进行切换，选择一种协议，仔细定义文本和二进制数据，如手动读取字节和解码数据之间的边界。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadLine">
          <source>Because the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class buffers data, and the stream contained in the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property does not, the two might conflict about how many bytes are available to read.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类放入缓冲区的数据，而流中包含<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph>属性不，这两个可能冲突有关可用读取字节数。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadLine">
          <source>The <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property because they have been buffered to the <ph id="ph3">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph>属性可以指示字节读取，但不是能访问到流中包含这些字节<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph>属性原因已缓冲到<ph id="ph3">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadLine">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class to allow two users to chat from two separate computers connected by a null modem cable.</source>
          <target state="translated">下面的代码示例演示如何将<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类以允许两个用户聊天从通过空调制解调器缆线连接的两个单独的计算机。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadLine">
          <source>This code example is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class.</source>
          <target state="translated">此代码示例是为提供一个更大的代码示例的一部分<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadLine">
          <source>The specified port is not open.</source>
          <target state="translated">指定的端口未打开。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadLine">
          <source>The operation did not complete before the time-out period ended.</source>
          <target state="translated">该操作未在超时时间到期之前完成。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadLine">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadLine">
          <source>No bytes were read.</source>
          <target state="translated">未读取任何字节。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.ReadTimeout">
          <source>Gets or sets the number of milliseconds before a time-out occurs when a read operation does not finish.</source>
          <target state="translated">获取或设置读取操作未完成时发生超时之前的毫秒数。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.ReadTimeout">
          <source>The number of milliseconds before a time-out occurs when a read operation does not finish.</source>
          <target state="translated">操作未完成时发生超时之前的毫秒数。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.ReadTimeout">
          <source>The read time-out value was originally set at 500 milliseconds in the Win32 Communications API.</source>
          <target state="translated">最初，读取的超时值被设置为在 Win32 通信 API 中的 500 毫秒。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.ReadTimeout">
          <source>This property allows you to set this value.</source>
          <target state="translated">此属性，可将此值设置。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.ReadTimeout">
          <source>The time-out can be set to any value greater than zero, or set to <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.InfiniteTimeout&gt;</ph>, in which case no time-out occurs.</source>
          <target state="translated">可以设置为任何值大于零，超时，或将其设置为<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.InfiniteTimeout&gt;</ph>，在这种情况下不会发生超时。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.ReadTimeout">
          <source><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.InfiniteTimeout&gt;</ph> is the default.</source>
          <target state="translated">默认为 <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.InfiniteTimeout&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.ReadTimeout">
          <source>Users of the unmanaged <ph id="ph1">`COMMTIMEOUTS`</ph> structure might expect to set the time-out value to zero to suppress time-outs.</source>
          <target state="translated">用户的非托管<ph id="ph1">`COMMTIMEOUTS`</ph>结构可能希望将超时值设置为零，以禁止超时。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.ReadTimeout">
          <source>To suppress time-outs with the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.ReadTimeout%2A&gt;</ph> property, however, you must specify <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.InfiniteTimeout&gt;</ph>.</source>
          <target state="translated">若要禁止显示的超时时间<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.ReadTimeout%2A&gt;</ph>属性，但是，你必须指定<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.InfiniteTimeout&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.ReadTimeout">
          <source>This property does not affect the <ph id="ph1">&lt;xref:System.IO.Stream.BeginRead%2A&gt;</ph> method of the stream returned by the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property.</source>
          <target state="translated">此属性不会影响<ph id="ph1">&lt;xref:System.IO.Stream.BeginRead%2A&gt;</ph>方法返回的流<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.ReadTimeout">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class to allow two users to chat from two separate computers connected by a null modem cable.</source>
          <target state="translated">下面的代码示例演示如何将<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类以允许两个用户聊天从通过空调制解调器缆线连接的两个单独的计算机。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.ReadTimeout">
          <source>In this example, the users are prompted for the port settings and a username before chatting.</source>
          <target state="translated">在此示例中，将提示用户输入的端口设置和用户名之前的聊天。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.ReadTimeout">
          <source>This code example is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class.</source>
          <target state="translated">此代码示例是为提供一个更大的代码示例的一部分<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.ReadTimeout">
          <source>The port is in an invalid state.</source>
          <target state="translated">此端口处于无效状态。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.ReadTimeout">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.ReadTimeout">
          <source>An attempt to set the state of the underlying port failed.</source>
          <target state="translated">尝试设置基础端口状态失败。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.ReadTimeout">
          <source>For example, the parameters passed from this <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> object were invalid.</source>
          <target state="translated">例如，从此 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 对象传递的参数无效。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.ReadTimeout">
          <source>The read time-out value is less than zero and not equal to <ph id="ph1">&lt;see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" /&gt;</ph>.</source>
          <target state="translated">读取超时值小于零，且不等于 <ph id="ph1">&lt;see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadTo(System.String)">
          <source>A value that indicates where the read operation stops.</source>
          <target state="translated">指示读取操作停止位置的值。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadTo(System.String)">
          <source>Reads a string up to the specified <ph id="ph1">&lt;paramref name="value" /&gt;</ph> in the input buffer.</source>
          <target state="translated">一直读取到输入缓冲区中的指定 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的字符串。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadTo(System.String)">
          <source>The contents of the input buffer up to the specified <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">输入缓冲区中直到指定 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadTo(System.String)">
          <source>This method reads a string up to the specified <ph id="ph1">`value`</ph>.</source>
          <target state="translated">此方法读取直到达到了指定的字符串<ph id="ph1">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadTo(System.String)">
          <source>While the returned string does not include the <ph id="ph1">`value`</ph>, the <ph id="ph2">`value`</ph> is removed from the input buffer.</source>
          <target state="translated">时返回的字符串未包含<ph id="ph1">`value`</ph>、<ph id="ph2">`value`</ph>从输入缓冲区中删除。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadTo(System.String)">
          <source>If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.</source>
          <target state="translated">如果有必要读取文本和从流中读取二进制数据之间进行切换，选择一种协议，仔细定义文本和二进制数据，如手动读取字节和解码数据之间的边界。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadTo(System.String)">
          <source>Because the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class buffers data, and the stream contained in the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property does not, the two might conflict about how many bytes are available to read.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类放入缓冲区的数据，而流中包含<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph>属性不，这两个可能冲突有关可用读取字节数。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.ReadTo(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property because they have been buffered to the <ph id="ph3">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph>属性可以指示字节读取，但不是能访问到流中包含这些字节<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph>属性原因已缓冲到<ph id="ph3">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadTo(System.String)">
          <source>The length of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter is 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数的长度为 0。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadTo(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadTo(System.String)">
          <source>The specified port is not open.</source>
          <target state="translated">指定的端口未打开。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.ReadTo(System.String)">
          <source>The operation did not complete before the time-out period ended.</source>
          <target state="translated">该操作未在超时时间到期之前完成。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.ReceivedBytesThreshold">
          <source>Gets or sets the number of bytes in the internal input buffer before a <ph id="ph1">&lt;see cref="E:System.IO.Ports.SerialPort.DataReceived" /&gt;</ph> event occurs.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="E:System.IO.Ports.SerialPort.DataReceived" /&gt;</ph> 事件发生前内部输入缓冲区中的字节数。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.ReceivedBytesThreshold">
          <source>The number of bytes in the internal input buffer before a <ph id="ph1">&lt;see cref="E:System.IO.Ports.SerialPort.DataReceived" /&gt;</ph> event is fired.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.IO.Ports.SerialPort.DataReceived" /&gt;</ph> 事件触发前内部输入缓冲区中的字节数。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.ReceivedBytesThreshold">
          <source>The default is 1.</source>
          <target state="translated">默认值为 1。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.ReceivedBytesThreshold">
          <source>The <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.DataReceived&gt;</ph> event is also raised if an <ph id="ph2">&lt;xref:System.IO.Ports.SerialData.Eof&gt;</ph> character is received, regardless of the number of bytes in the internal input buffer and the value of the <ph id="ph3">&lt;xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.DataReceived&gt;</ph>事件也会引发如果<ph id="ph2">&lt;xref:System.IO.Ports.SerialData.Eof&gt;</ph>收到字符时，而不考虑内部输入缓冲区中的字节数和的值<ph id="ph3">&lt;xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.ReceivedBytesThreshold">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.ReceivedBytesThreshold" /&gt;</ph> value is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.ReceivedBytesThreshold" /&gt;</ph> 值小于或等于零。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.RtsEnable">
          <source>Gets or sets a value indicating whether the Request to Send (RTS) signal is enabled during serial communication.</source>
          <target state="translated">获取或设置一个值，该值指示在串行通信中是否启用请求发送 (RTS) 信号。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.RtsEnable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to enable Request to Transmit (RTS); otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则启用请求发送 (RTS)；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.RtsEnable">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.RtsEnable">
          <source>The Request to Transmit (RTS) signal is typically used in Request to Send/Clear to Send (RTS/CTS) hardware handshaking.</source>
          <target state="translated">请求发送 (RTS) 信号是通常用于发送/清除的请求中发送 (RTS/CTS) 硬件握手。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.RtsEnable">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.RtsEnable" /&gt;</ph> property was set or retrieved while the <ph id="ph2">&lt;see cref="P:System.IO.Ports.SerialPort.Handshake" /&gt;</ph> property is set to the <ph id="ph3">&lt;see cref="F:System.IO.Ports.Handshake.RequestToSend" /&gt;</ph> value or the <ph id="ph4">&lt;see cref="F:System.IO.Ports.Handshake.RequestToSendXOnXOff" /&gt;</ph> value.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.RtsEnable" /&gt;</ph> 属性设置为 <ph id="ph2">&lt;see cref="P:System.IO.Ports.SerialPort.Handshake" /&gt;</ph> 值或 <ph id="ph3">&lt;see cref="F:System.IO.Ports.Handshake.RequestToSend" /&gt;</ph> 值时设置或检索 <ph id="ph4">&lt;see cref="F:System.IO.Ports.Handshake.RequestToSendXOnXOff" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.RtsEnable">
          <source>The port is in an invalid state.</source>
          <target state="translated">此端口处于无效状态。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.RtsEnable">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.RtsEnable">
          <source>An attempt to set the state of the underlying port failed.</source>
          <target state="translated">尝试设置基础端口状态失败。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.RtsEnable">
          <source>For example, the parameters passed from this <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> object were invalid.</source>
          <target state="translated">例如，从此 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 对象传递的参数无效。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.StopBits">
          <source>Gets or sets the standard number of stopbits per byte.</source>
          <target state="translated">获取或设置每个字节的标准停止位数。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.StopBits">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.IO.Ports.StopBits" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Ports.StopBits" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.StopBits">
          <source>The default value for <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.StopBits%2A&gt;</ph> is <ph id="ph2">&lt;xref:System.IO.Ports.StopBits.One&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.StopBits%2A&gt;</ph> 的默认值为 <ph id="ph2">&lt;xref:System.IO.Ports.StopBits.One&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.StopBits">
          <source>The <ph id="ph1">&lt;xref:System.IO.Ports.StopBits.None?displayProperty=nameWithType&gt;</ph> value is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Ports.StopBits.None?displayProperty=nameWithType&gt;</ph>不支持值。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.StopBits">
          <source>The following example shows how to set the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.StopBits%2A&gt;</ph> property to <ph id="ph2">`One`</ph>.</source>
          <target state="translated">下面的示例演示如何设置<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.StopBits%2A&gt;</ph>属性<ph id="ph2">`One`</ph>。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.StopBits">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class to allow two users to chat from two separate computers connected by a null modem cable.</source>
          <target state="translated">下面的示例演示了利用<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类以允许两个用户聊天从通过空调制解调器缆线连接的两个单独的计算机。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.StopBits">
          <source>In this example, the users are prompted for the port settings and a username before chatting.</source>
          <target state="translated">在此示例中，将提示用户输入的端口设置和用户名之前的聊天。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.StopBits">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.StopBits">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.StopBits" /&gt;</ph> value is  <ph id="ph2">&lt;see cref="F:System.IO.Ports.StopBits.None" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.StopBits" /&gt;</ph> 值为<ph id="ph2">&lt;see cref="F:System.IO.Ports.StopBits.None" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.StopBits">
          <source>The port is in an invalid state.</source>
          <target state="translated">此端口处于无效状态。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.StopBits">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.StopBits">
          <source>An attempt to set the state of the underlying port failed.</source>
          <target state="translated">尝试设置基础端口状态失败。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.StopBits">
          <source>For example, the parameters passed from this <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> object were invalid.</source>
          <target state="translated">例如，从此 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 对象传递的参数无效。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="T:System.IO.Ports.SerialPort">
          <source>Writes data to the serial port output buffer.</source>
          <target state="translated">将数据写入串行端口输出缓冲区。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Write(System.String)">
          <source>Writes the specified string to the serial port.</source>
          <target state="translated">将指定的字符串写入串行端口。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Write(System.String)">
          <source>Use this method when you want to write a string as output to a serial port.</source>
          <target state="translated">当你想要作为输出将字符串写入串行端口，请使用此方法。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Write(System.String)">
          <source>If there are too many bytes in the output buffer and <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.Handshake%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.IO.Ports.Handshake.XOnXOff&gt;</ph> then the <ph id="ph3">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object may raise a <ph id="ph4">&lt;xref:System.ServiceProcess.TimeoutException&gt;</ph> while it waits for the device to be ready to accept more data.</source>
          <target state="translated">输出缓冲区中是否存在太多字节和<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.Handshake%2A&gt;</ph>设置为<ph id="ph2">&lt;xref:System.IO.Ports.Handshake.XOnXOff&gt;</ph>则<ph id="ph3">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>对象可能会引起<ph id="ph4">&lt;xref:System.ServiceProcess.TimeoutException&gt;</ph>等待设备在准备好接受更多的数据时。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Write(System.String)">
          <source>By default, <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> to encode the characters.</source>
          <target state="translated">默认情况下，<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>使用<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>字符进行编码。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Write(System.String)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> encodes all characters greater than 127 as (char)63 or '?'.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 将大于 127 的所有字符都编码为 (char) 63 或？。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Write(System.String)">
          <source>To support additional characters in that range, set <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.Encoding%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph>, or <ph id="ph4">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>.</source>
          <target state="translated">若要支持该范围中的其他字符，将设置<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.Encoding%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph>， <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph>，或<ph id="ph4">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Write(System.String)">
          <source>The specified port is not open.</source>
          <target state="translated">指定的端口未打开。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Write(System.String)">
          <source><ph id="ph1">&lt;paramref name="text" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="text" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Write(System.String)">
          <source>The operation did not complete before the time-out period ended.</source>
          <target state="translated">该操作未在超时时间到期之前完成。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The byte array that contains the data to write to the port.</source>
          <target state="translated">包含要写入端口的数据的字节数组。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The zero-based byte offset in the <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> parameter at which to begin copying bytes to the port.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> 参数中从零开始的字节偏移量，从此处开始将字节复制到端口。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to write.</source>
          <target state="translated">要写入的字节数。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Writes a specified number of bytes to the serial port using data from a buffer.</source>
          <target state="translated">使用缓冲区中的数据将指定数量的字节写入串行端口。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Use this method when you want to write to a byte buffer to create output to a serial port.</source>
          <target state="translated">当你想要写入字节缓冲区来创建到串行端口输出，请使用此方法。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)">
          <source>If there are too many bytes in the output buffer and <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.Handshake%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.IO.Ports.Handshake.XOnXOff&gt;</ph> then the <ph id="ph3">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object may raise a <ph id="ph4">&lt;xref:System.ServiceProcess.TimeoutException&gt;</ph> while it waits for the device to be ready to accept more data.</source>
          <target state="translated">输出缓冲区中是否存在太多字节和<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.Handshake%2A&gt;</ph>设置为<ph id="ph2">&lt;xref:System.IO.Ports.Handshake.XOnXOff&gt;</ph>则<ph id="ph3">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>对象可能会引起<ph id="ph4">&lt;xref:System.ServiceProcess.TimeoutException&gt;</ph>等待设备在准备好接受更多的数据时。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)">
          <source>By default, <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> to encode the characters.</source>
          <target state="translated">默认情况下，<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>使用<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>字符进行编码。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> encodes all characters greater than 127 as (char)63 or '?'.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 将大于 127 的所有字符都编码为 (char) 63 或？。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)">
          <source>To support additional characters in that range, set <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.Encoding%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph>, or <ph id="ph4">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>.</source>
          <target state="translated">若要支持该范围中的其他字符，将设置<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.Encoding%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph>， <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph>，或<ph id="ph4">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> passed is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">传递的 <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The specified port is not open.</source>
          <target state="translated">指定的端口未打开。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> parameters are outside a valid region of the <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph> being passed.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 参数超出了所传递的 <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph> 的有效区域。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Either <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is greater than the length of the <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 加上 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 大于 <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph> 的长度。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The operation did not complete before the time-out period ended.</source>
          <target state="translated">该操作未在超时时间到期之前完成。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)">
          <source>The character array that contains the data to write to the port.</source>
          <target state="translated">包含要写入端口的数据的字符数组。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)">
          <source>The zero-based byte offset in the <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> parameter at which to begin copying bytes to the port.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> 参数中从零开始的字节偏移量，从此处开始将字节复制到端口。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">要写入的字符数。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)">
          <source>Writes a specified number of characters to the serial port using data from a buffer.</source>
          <target state="translated">使用缓冲区中的数据将指定数量的字符写入串行端口。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)">
          <source>Use this method when you want to write to a character buffer to create output to a serial port.</source>
          <target state="translated">当你想要写入字符缓冲区来创建到串行端口输出，请使用此方法。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)">
          <source>If there are too many bytes in the output buffer and <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.Handshake%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.IO.Ports.Handshake.XOnXOff&gt;</ph> then the <ph id="ph3">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object may raise a <ph id="ph4">&lt;xref:System.ServiceProcess.TimeoutException&gt;</ph> while it waits for the device to be ready to accept more data.</source>
          <target state="translated">输出缓冲区中是否存在太多字节和<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.Handshake%2A&gt;</ph>设置为<ph id="ph2">&lt;xref:System.IO.Ports.Handshake.XOnXOff&gt;</ph>则<ph id="ph3">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>对象可能会引起<ph id="ph4">&lt;xref:System.ServiceProcess.TimeoutException&gt;</ph>等待设备在准备好接受更多的数据时。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)">
          <source>By default, <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> to encode the characters.</source>
          <target state="translated">默认情况下，<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>使用<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>字符进行编码。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> encodes all characters greater than 127 as (char)63 or '?'.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 将大于 127 的所有字符都编码为 (char) 63 或？。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)">
          <source>To support additional characters in that range, set <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.Encoding%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph>, or <ph id="ph4">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>.</source>
          <target state="translated">若要支持该范围中的其他字符，将设置<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.Encoding%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph>， <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph>，或<ph id="ph4">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> passed is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">传递的 <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)">
          <source>The specified port is not open.</source>
          <target state="translated">指定的端口未打开。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> parameters are outside a valid region of the <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph> being passed.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 参数超出了所传递的 <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph> 的有效区域。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)">
          <source>Either <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is greater than the length of the <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 加上 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 大于 <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph> 的长度。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)">
          <source>The operation did not complete before the time-out period ended.</source>
          <target state="translated">该操作未在超时时间到期之前完成。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.WriteBufferSize">
          <source>Gets or sets the size of the serial port output buffer.</source>
          <target state="translated">获取或设置串行端口输出缓冲区的大小。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.WriteBufferSize">
          <source>The size of the output buffer.</source>
          <target state="translated">输出缓冲区的大小。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.WriteBufferSize">
          <source>The default is 2048.</source>
          <target state="translated">默认值为 2048。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.WriteBufferSize">
          <source>The <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.WriteBufferSize%2A&gt;</ph> property ignores any value smaller than 2048.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.WriteBufferSize%2A&gt;</ph>属性将忽略小于 2048年任何值。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.WriteBufferSize">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.WriteBufferSize" /&gt;</ph> value is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.WriteBufferSize" /&gt;</ph> 值小于或等于零。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.WriteBufferSize">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.WriteBufferSize" /&gt;</ph> property was set while the stream was open.</source>
          <target state="translated">打开流时设置 <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.WriteBufferSize" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.WriteBufferSize">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.WriteBufferSize" /&gt;</ph> property was set to an odd integer value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.WriteBufferSize" /&gt;</ph> 属性已设置为一个奇整数值。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.WriteLine(System.String)">
          <source>Writes the specified string and the <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.NewLine" /&gt;</ph> value to the output buffer.</source>
          <target state="translated">将指定的字符串和 <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.NewLine" /&gt;</ph> 值写入输出缓冲区。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.WriteLine(System.String)">
          <source>If there are too many bytes in the input buffer and <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.Handshake%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.IO.Ports.Handshake.XOnXOff&gt;</ph> then the <ph id="ph3">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object may raise a <ph id="ph4">&lt;xref:System.ServiceProcess.TimeoutException&gt;</ph> while it waits for the device to be ready to accept more data.</source>
          <target state="translated">如果输入缓冲区中有太多字节和<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.Handshake%2A&gt;</ph>设置为<ph id="ph2">&lt;xref:System.IO.Ports.Handshake.XOnXOff&gt;</ph>则<ph id="ph3">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>对象可能会引起<ph id="ph4">&lt;xref:System.ServiceProcess.TimeoutException&gt;</ph>等待设备在准备好接受更多的数据时。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.WriteLine(System.String)">
          <source>The written output includes the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.NewLine%2A&gt;</ph> string.</source>
          <target state="translated">写入的输出包括<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.NewLine%2A&gt;</ph>字符串。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.WriteLine(System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class to allow two users to chat from two separate computers connected by a null modem cable.</source>
          <target state="translated">下面的代码示例演示如何将<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类以允许两个用户聊天从通过空调制解调器缆线连接的两个单独的计算机。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Ports.SerialPort.WriteLine(System.String)">
          <source>This code example is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class.</source>
          <target state="translated">此代码示例是为提供一个更大的代码示例的一部分<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.WriteLine(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="text" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="text" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.WriteLine(System.String)">
          <source>The specified port is not open.</source>
          <target state="translated">指定的端口未打开。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.IO.Ports.SerialPort.WriteLine(System.String)">
          <source>The <ph id="ph1">&lt;see cref="M:System.IO.Ports.SerialPort.WriteLine(System.String)" /&gt;</ph> method could not write to the stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Ports.SerialPort.WriteLine(System.String)" /&gt;</ph> 方法未能写入流。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.WriteTimeout">
          <source>Gets or sets the number of milliseconds before a time-out occurs when a write operation does not finish.</source>
          <target state="translated">获取或设置写入操作未完成时发生超时之前的毫秒数。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.WriteTimeout">
          <source>The number of milliseconds before a time-out occurs.</source>
          <target state="translated">发生超时之前的毫秒数。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.WriteTimeout">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.WriteTimeout">
          <source>The write time-out value was originally set at 500 milliseconds in the Win32 Communications API.</source>
          <target state="translated">最初，写入超时值被设置为在 Win32 通信 API 中的 500 毫秒。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.WriteTimeout">
          <source>This property allows you to set this value.</source>
          <target state="translated">此属性，可将此值设置。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.WriteTimeout">
          <source>The time-out can be set to any value greater than zero, or set to <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.InfiniteTimeout&gt;</ph>, in which case no time-out occurs.</source>
          <target state="translated">可以设置为任何值大于零，超时，或将其设置为<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.InfiniteTimeout&gt;</ph>，在这种情况下不会发生超时。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.WriteTimeout">
          <source><ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.InfiniteTimeout&gt;</ph> is the default.</source>
          <target state="translated">默认为 <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.InfiniteTimeout&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.WriteTimeout">
          <source>Users of the unmanaged <ph id="ph1">`COMMTIMEOUTS`</ph> structure might expect to set the time-out value to zero to suppress time-outs.</source>
          <target state="translated">用户的非托管<ph id="ph1">`COMMTIMEOUTS`</ph>结构可能希望将超时值设置为零，以禁止超时。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.WriteTimeout">
          <source>To suppress time-outs with the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.WriteTimeout%2A&gt;</ph> property, however, you must specify <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.InfiniteTimeout&gt;</ph>.</source>
          <target state="translated">若要禁止显示的超时时间<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort.WriteTimeout%2A&gt;</ph>属性，但是，你必须指定<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.InfiniteTimeout&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.WriteTimeout">
          <source>This property does not affect the <ph id="ph1">&lt;xref:System.IO.Stream.BeginWrite%2A&gt;</ph> method of the stream returned by the <ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property.</source>
          <target state="translated">此属性不会影响<ph id="ph1">&lt;xref:System.IO.Stream.BeginWrite%2A&gt;</ph>方法返回的流<ph id="ph2">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.WriteTimeout">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class to allow two users to chat from two separate computers connected by a null modem cable.</source>
          <target state="translated">下面的代码示例演示如何将<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类以允许两个用户聊天从通过空调制解调器缆线连接的两个单独的计算机。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.WriteTimeout">
          <source>In this example, the users are prompted for the port settings and a username before chatting.</source>
          <target state="translated">在此示例中，将提示用户输入的端口设置和用户名之前的聊天。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Ports.SerialPort.WriteTimeout">
          <source>This code example is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class.</source>
          <target state="translated">此代码示例是为提供一个更大的代码示例的一部分<ph id="ph1">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.WriteTimeout">
          <source>The port is in an invalid state.</source>
          <target state="translated">此端口处于无效状态。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.WriteTimeout">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.WriteTimeout">
          <source>An attempt to set the state of the underlying port failed.</source>
          <target state="translated">尝试设置基础端口状态失败。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.WriteTimeout">
          <source>For example, the parameters passed from this <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> object were invalid.</source>
          <target state="translated">例如，从此 <ph id="ph1">&lt;see cref="T:System.IO.Ports.SerialPort" /&gt;</ph> 对象传递的参数无效。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="P:System.IO.Ports.SerialPort.WriteTimeout">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.WriteTimeout" /&gt;</ph> value is less than zero and not equal to <ph id="ph2">&lt;see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.Ports.SerialPort.WriteTimeout" /&gt;</ph> 值小于零且不等于 <ph id="ph2">&lt;see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>