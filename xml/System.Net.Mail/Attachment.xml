<Type Name="Attachment" FullName="System.Net.Mail.Attachment">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4169c04f534bb094e6c5b75d1c801b34b9a40ca8" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33681545" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Attachment : System.Net.Mail.AttachmentBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Attachment extends System.Net.Mail.AttachmentBase" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.Attachment" />
  <TypeSignature Language="VB.NET" Value="Public Class Attachment&#xA;Inherits AttachmentBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Attachment : System::Net::Mail::AttachmentBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Mail.AttachmentBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示电子邮件的附件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.Attachment>类用于<xref:System.Net.Mail.MailMessage>类。 所有邮件都包括<xref:System.Net.Mail.MailMessage.Body%2A>，其中包含消息的内容。 除了正文中，你可能想要发送的其他文件。 这些将作为附件发送，而表示为<xref:System.Net.Mail.Attachment>实例。 若要添加到一封电子邮件附件，将其添加到<xref:System.Net.Mail.MailMessage.Attachments?displayProperty=nameWithType>集合。  
  
 附件内容可以是<xref:System.String>， <xref:System.IO.Stream>，或文件名称。 可以在附件中指定的内容，使用任一<xref:System.Net.Mail.Attachment.%23ctor%2A>构造函数。  
  
 附件的 MIME 内容类型标头信息都由<xref:System.Net.Mail.AttachmentBase.ContentType%2A>属性。 内容类型标头指定的媒体类型和子类型和任何关联的参数。 使用<xref:System.Net.Mail.AttachmentBase.ContentType%2A>来获取与附件关联的实例。  
  
 MIME Content-disposition 标头由<xref:System.Net.Mail.Attachment.ContentDisposition%2A>属性。 Content-disposition 标头指定的演示文稿和附件的文件时间戳。 附件是一个文件的情况下，才发送的 Content-disposition 标头。 使用<xref:System.Net.Mail.Attachment.ContentDisposition%2A>属性来获取与附件关联的实例。  
  
 MIME 内容传输编码标头由<xref:System.Net.Mail.AttachmentBase.TransferEncoding%2A>属性。  
  
   
  
## Examples  
 下面的代码示例演示如何将文件附加到电子邮件。  
  
 [!code-cpp[NclMailSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#6)]
 [!code-csharp[NclMailSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Net.Mail.Attachment" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Attachment (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.Attachment.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Attachment(System::String ^ fileName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">一个 <see cref="T:System.String" />，它包含用于创建此附件的文件路径。</param>
        <summary>使用指定的内容字符串初始化 <see cref="T:System.Net.Mail.Attachment" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性设置，如下所示：  
  
|Property|“值”|  
|--------------|-----------|  
|<xref:System.Net.Mime.ContentType.MediaType%2A>|<xref:System.Net.Mime.MediaTypeNames.Text.Plain>。|  
|<xref:System.Net.Mail.AttachmentBase.TransferEncoding%2A>|<xref:System.Net.Mime.TransferEncoding.QuotedPrintable>。|  
  
   
  
## Examples  
 下面的代码示例演示如何调用此构造函数。  
  
 [!code-cpp[NclMailSync#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#13)]
 [!code-csharp[NclMailSync#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="fileName" /> 为空。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Attachment (System.IO.Stream contentStream, System.Net.Mime.ContentType contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream contentStream, class System.Net.Mime.ContentType contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.Attachment.#ctor(System.IO.Stream,System.Net.Mime.ContentType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Attachment(System::IO::Stream ^ contentStream, System::Net::Mime::ContentType ^ contentType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contentStream" Type="System.IO.Stream" />
        <Parameter Name="contentType" Type="System.Net.Mime.ContentType" />
      </Parameters>
      <Docs>
        <param name="contentStream">一个包含附件内容的可读 <see cref="T:System.IO.Stream" />。</param>
        <param name="contentType">一个 <see cref="T:System.Net.Mime.ContentType" />，它描述 <c>stream</c> 中的数据。</param>
        <summary>使用指定的流和内容类型初始化 <see cref="T:System.Net.Mail.Attachment" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.AttachmentBase.TransferEncoding%2A> 属性设置为 <xref:System.Net.Mime.TransferEncoding.Base64>。  
  
 如果流的<xref:System.IO.Stream.CanSeek%2A>属性是`false`，附件和<xref:System.Net.Mail.MailMessage>包含它不是可重复使用。 必须提供流，可搜索才能重用附件。  
  
   
  
## Examples  
 下面的代码示例演示如何调用此构造函数。  
  
 [!code-cpp[NclMailSync#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#14)]
 [!code-csharp[NclMailSync#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentType" /> 为 <see langword="null" />。  
  
 或  
  
 <paramref name="contentStream" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Attachment (System.IO.Stream contentStream, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream contentStream, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.Attachment.#ctor(System.IO.Stream,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contentStream As Stream, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Attachment(System::IO::Stream ^ contentStream, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contentStream" Type="System.IO.Stream" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentStream">一个包含附件内容的可读 <see cref="T:System.IO.Stream" />。</param>
        <param name="name">一个 <see cref="T:System.String" />，它包含与此附件关联的 <see cref="P:System.Net.Mime.ContentType.Name" /> 的 <see cref="T:System.Net.Mime.ContentType" /> 属性值。 此值可为 <see langword="null" />。</param>
        <summary>使用指定的流和名称初始化 <see cref="T:System.Net.Mail.Attachment" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`name`不`null`于或等于<xref:System.String.Empty?displayProperty=nameWithType>("")，则<xref:System.Net.Mime.ContentType>用于构造此附件<xref:System.Net.Mime.ContentType.Name%2A>属性设置为`name`。 <xref:System.Net.Mail.AttachmentBase.TransferEncoding%2A> 属性设置为 <xref:System.Net.Mime.TransferEncoding.Base64>。  
  
 如果流的<xref:System.IO.Stream.CanSeek%2A>属性是`false`，附件和<xref:System.Net.Mail.MailMessage>包含它不是可重复使用。 必须提供流，可搜索以便重复使用附件。  
  
   
  
## Examples  
 下面的代码示例演示如何调用此构造函数。  
  
 [!code-cpp[NclMailSync#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#15)]
 [!code-csharp[NclMailSync#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentStream" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Attachment (string fileName, System.Net.Mime.ContentType contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Net.Mime.ContentType contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.Attachment.#ctor(System.String,System.Net.Mime.ContentType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Attachment(System::String ^ fileName, System::Net::Mime::ContentType ^ contentType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="contentType" Type="System.Net.Mime.ContentType" />
      </Parameters>
      <Docs>
        <param name="fileName">一个 <see cref="T:System.String" />，它包含用于创建此附件的文件路径。</param>
        <param name="contentType">一个 <see cref="T:System.Net.Mime.ContentType" />，它描述 <c>string</c> 中的数据。</param>
        <summary>使用指定的内容字符串和 <see cref="T:System.Net.Mail.Attachment" /> 初始化 <see cref="T:System.Net.Mime.ContentType" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="mediaType" /> 的格式不正确。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Attachment (string fileName, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.Attachment.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, mediaType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Attachment(System::String ^ fileName, System::String ^ mediaType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">一个包含附件内容的 <see cref="T:System.String" />。</param>
        <param name="mediaType">
          <see cref="T:System.String" /> 包含此附件的 MIME 内容标头信息。 此值可为 <see langword="null" />。</param>
        <summary>使用指定的内容字符串和 MIME 类型信息初始化 <see cref="T:System.Net.Mail.Attachment" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`mediaType`是`null`于或等于<xref:System.String.Empty?displayProperty=nameWithType>("")，则<xref:System.Net.Mime.ContentType.MediaType%2A>此附件的属性设置为<xref:System.Net.Mime.MediaTypeNames.Text.Plain>。 如果`mediaType`不`null`并不是零长度字符串，它用于构造<xref:System.Net.Mime.ContentType>与此附件关联。  
  
   
  
## Examples  
 下面的代码示例演示如何调用此构造函数。  
  
 [!code-cpp[NclMailSync#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#12)]
 [!code-csharp[NclMailSync#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.FormatException">
          <paramref name="mediaType" /> 的格式不正确。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Attachment (System.IO.Stream contentStream, string name, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream contentStream, string name, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.Attachment.#ctor(System.IO.Stream,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contentStream As Stream, name As String, mediaType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Attachment(System::IO::Stream ^ contentStream, System::String ^ name, System::String ^ mediaType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contentStream" Type="System.IO.Stream" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentStream">一个包含附件内容的可读 <see cref="T:System.IO.Stream" />。</param>
        <param name="name">一个 <see cref="T:System.String" />，它包含与此附件关联的 <see cref="P:System.Net.Mime.ContentType.Name" /> 的 <see cref="T:System.Net.Mime.ContentType" /> 属性值。 此值可为 <see langword="null" />。</param>
        <param name="mediaType">
          <see cref="T:System.String" /> 包含此附件的 MIME 内容标头信息。 此值可为 <see langword="null" />。</param>
        <summary>使用指定的流、名称和 MIME 类型信息初始化 <see cref="T:System.Net.Mail.Attachment" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`mediaType`不`null`于或等于<xref:System.String.Empty?displayProperty=nameWithType>("")，它用于构造<xref:System.Net.Mime.ContentType>与此附件关联的类。  
  
 如果`mediaType`和`name`都包含<xref:System.Net.Mime.ContentType.Name%2A>信息、 中指定的值`name`使用。 <xref:System.Net.Mail.AttachmentBase.TransferEncoding%2A> 属性设置为 <xref:System.Net.Mime.TransferEncoding.Base64>。  
  
 如果流的<xref:System.IO.Stream.CanSeek%2A>属性是`false`，附件和<xref:System.Net.Mail.MailMessage>包含它不是可重复使用。 必须提供流，可搜索以便重复使用附件。  
  
   
  
## Examples  
 下面的代码示例演示如何调用此构造函数。  
  
 [!code-cpp[NclMailSync#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#16)]
 [!code-csharp[NclMailSync#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.FormatException">
          <paramref name="mediaType" /> 的格式不正确。</exception>
      </Docs>
    </Member>
    <Member MemberName="ContentDisposition">
      <MemberSignature Language="C#" Value="public System.Net.Mime.ContentDisposition ContentDisposition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mime.ContentDisposition ContentDisposition" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.Attachment.ContentDisposition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentDisposition As ContentDisposition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mime::ContentDisposition ^ ContentDisposition { System::Net::Mime::ContentDisposition ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mime.ContentDisposition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此附件的 MIME 内容处置。</summary>
        <value>
          <see cref="T:System.Net.Mime.ContentDisposition" />，提供此附件的表示信息。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中的信息<xref:System.Net.Mime.ContentDisposition>类表示 MIME Content-disposition 标头。 此标头述 RFC 2183，可用在[ https://www.ietf.org/ ](https://www.ietf.org/)。  
  
   
  
## Examples  
 下面的代码示例获取<xref:System.Net.Mime.ContentDisposition>附件，并显示其属性。  
  
 [!code-cpp[NclMailSync#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#11)]
 [!code-csharp[NclMailSync#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateAttachmentFromString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>用字符串创建附件。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateAttachmentFromString">
      <MemberSignature Language="C#" Value="public static System.Net.Mail.Attachment CreateAttachmentFromString (string content, System.Net.Mime.ContentType contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Mail.Attachment CreateAttachmentFromString(string content, class System.Net.Mime.ContentType contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.Attachment.CreateAttachmentFromString(System.String,System.Net.Mime.ContentType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Mail::Attachment ^ CreateAttachmentFromString(System::String ^ content, System::Net::Mime::ContentType ^ contentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.Attachment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="contentType" Type="System.Net.Mime.ContentType" />
      </Parameters>
      <Docs>
        <param name="content">一个包含附件内容的 <see cref="T:System.String" />。</param>
        <param name="contentType">
          <see cref="T:System.Net.Mime.ContentType" /> 对象，表示使用多用途 Internet 邮件交换 (MIME) 协议 Content-Type 标头。</param>
        <summary>使用指定字符串中的内容和指定的 <see cref="T:System.Net.Mime.ContentType" /> 创建邮件附件。</summary>
        <returns>一个 <see cref="T:System.Net.Mail.Attachment" /> 类型的对象。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttachmentFromString">
      <MemberSignature Language="C#" Value="public static System.Net.Mail.Attachment CreateAttachmentFromString (string content, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Mail.Attachment CreateAttachmentFromString(string content, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.Attachment.CreateAttachmentFromString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAttachmentFromString (content As String, name As String) As Attachment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Mail::Attachment ^ CreateAttachmentFromString(System::String ^ content, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.Attachment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="content">一个包含附件内容的 <see cref="T:System.String" />。</param>
        <param name="name">与此附件关联的内容类型中的 MIME 内容类型名称值。</param>
        <summary>使用指定字符串中的内容和指定的 MIME 内容类型名创建邮件附件。</summary>
        <returns>一个 <see cref="T:System.Net.Mail.Attachment" /> 类型的对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果内容为 ASCII 格式则的字符编码设置为 ASCII。 对于所有其他格式的字符编码设置为 utf-8。 默认媒体类型为纯文本。  
  
 如果内容不是 ASCII 格式的编码为 null，则使用 utf-8 编码。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttachmentFromString">
      <MemberSignature Language="C#" Value="public static System.Net.Mail.Attachment CreateAttachmentFromString (string content, string name, System.Text.Encoding contentEncoding, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Mail.Attachment CreateAttachmentFromString(string content, string name, class System.Text.Encoding contentEncoding, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.Attachment.CreateAttachmentFromString(System.String,System.String,System.Text.Encoding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAttachmentFromString (content As String, name As String, contentEncoding As Encoding, mediaType As String) As Attachment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Mail::Attachment ^ CreateAttachmentFromString(System::String ^ content, System::String ^ name, System::Text::Encoding ^ contentEncoding, System::String ^ mediaType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.Attachment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="contentEncoding" Type="System.Text.Encoding" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="content">一个包含附件内容的 <see cref="T:System.String" />。</param>
        <param name="name">与此附件关联的内容类型中的 MIME 内容类型名称值。</param>
        <param name="contentEncoding">一个 <see cref="T:System.Text.Encoding" />。 此值可为 <see langword="null" />。</param>
        <param name="mediaType">
          <see cref="T:System.String" /> 包含此附件的 MIME 内容标头信息。 此值可为 <see langword="null" />。</param>
        <summary>使用指定字符串中的内容、指定的 MIME 内容类型名、字符编码和附件的 MIME 标头信息创建邮件附件。</summary>
        <returns>一个 <see cref="T:System.Net.Mail.Attachment" /> 类型的对象。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.Attachment.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与此附件关联的内容类型中的 MIME 内容类型名称值。</summary>
        <value>
          <see cref="T:System.String" />，包含由 <see cref="P:System.Net.Mime.ContentType.Name" /> 属性表示的内容类型 <paramref name="name" /> 的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.Attachment.Name%2A>属性用于生成此附件的内容类型标头。 <xref:System.Net.Mail.Attachment.Name%2A>收到带附件的电子邮件时显示为附件的名称。 RFC 2045 5.1 节描述了详细说明的内容类型标头的语法语法。 RFC 2046 提供有关 MIME 媒体类型和其参数的详细的信息。 这些 Rfc 位于[ https://www.ietf.org/ ](https://www.ietf.org/)。  
  
   
  
## Examples  
 下面的代码示例演示如何显示有关附件的信息。  
  
 [!code-cpp[NclMailSync#19](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#19)]
 [!code-csharp[NclMailSync#19](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">为集运算指定的值为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">为设置操作指定的值为 <see cref="F:System.String.Empty" /> ("")。</exception>
      </Docs>
    </Member>
    <Member MemberName="NameEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding NameEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding NameEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.Attachment.NameEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property NameEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ NameEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定用于 <see cref="T:System.Net.Mail.Attachment" /><see cref="P:System.Net.Mail.Attachment.Name" /> 的编码。</summary>
        <value>一个 <see cref="T:System.Text.Encoding" /> 值，它指定名称编码的类型。 根据附件名称确定默认值。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>