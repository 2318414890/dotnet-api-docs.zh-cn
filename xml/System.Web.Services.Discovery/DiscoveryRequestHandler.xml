<Type Name="DiscoveryRequestHandler" FullName="System.Web.Services.Discovery.DiscoveryRequestHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5fba4df80c36b1b32bb0d11b1acb1e3a990354d6" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53471962" /></Metadata><TypeSignature Language="C#" Value="public sealed class DiscoveryRequestHandler : System.Web.IHttpHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DiscoveryRequestHandler extends System.Object implements class System.Web.IHttpHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Discovery.DiscoveryRequestHandler" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DiscoveryRequestHandler&#xA;Implements IHttpHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class DiscoveryRequestHandler sealed : System::Web::IHttpHandler" />
  <TypeSignature Language="F#" Value="type DiscoveryRequestHandler = class&#xA;    interface IHttpHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>一个处理对 Web 服务发现文档的请求的 ASP.NET HTTP 处理程序。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Discovery.DiscoveryRequestHandler>类，通过其<xref:System.Web.Services.Discovery.DiscoveryRequestHandler.ProcessRequest%2A>方法，处理 HTTP 请求的发现文档。 表示发现文档<xref:System.Web.Services.Discovery.DiscoveryDocument>类，并通常序列化为使用.disco 扩展名的文件。 Web 服务发现提供用于确定在给定位置的 Web 服务的机制。  
  
 <xref:System.Web.Services.Discovery.DiscoveryRequestHandler>类通常不需要直接由开发人员使用。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Discovery.DiscoveryDocument" />
    <altmember cref="T:System.Web.IHttpHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DiscoveryRequestHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Discovery.DiscoveryRequestHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DiscoveryRequestHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Discovery.DiscoveryRequestHandler" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReusable">
      <MemberSignature Language="C#" Value="public bool IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Discovery.DiscoveryRequestHandler.IsReusable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReusable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReusable : bool" Usage="System.Web.Services.Discovery.DiscoveryRequestHandler.IsReusable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.IHttpHandler.IsReusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see langword="true" /> 值，该值指示 <see cref="T:System.Web.Services.Discovery.DiscoveryRequestHandler" />（或派生类）的实例是否可以重用。</summary>
        <value>此属性始终返回 <see langword="true" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public void ProcessRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Discovery.DiscoveryRequestHandler.ProcessRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ProcessRequest : System.Web.HttpContext -&gt; unit&#xA;override this.ProcessRequest : System.Web.HttpContext -&gt; unit" Usage="discoveryRequestHandler.ProcessRequest context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="P:System.Web.HttpContext.Request" /> 类的 <see cref="P:System.Web.HttpContext.Response" /> 和 <see cref="T:System.Web.HttpContext" /> 属性分别用于输入和输出。</param>
        <summary>处理对某个发现文档的 HTTP 请求，该发现文档被序列化为 HTTP 响应。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Discovery.DiscoveryRequestHandler.ProcessRequest%2A>方法搜索对应到 HTTP 请求的统一资源定位器 (URL) 的文件系统路径中的适用文件。 搜索可能会扩展到子目录，并切换根据搜索根目录中找到目标文件扩展名。  
  
 搜索过程填充<xref:System.Web.Services.Discovery.DiscoveryDocument>对象的<xref:System.Web.Services.Discovery.DiscoveryDocument.References%2A>与找到的文件的属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>