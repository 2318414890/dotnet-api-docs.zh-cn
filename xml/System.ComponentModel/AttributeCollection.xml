<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AttributeCollection.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac594da5dea078376ed0dabeaa993c206de6906aa3c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">94da5dea078376ed0dabeaa993c206de6906aa3c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.AttributeCollection">
          <source>Represents a collection of attributes.</source>
          <target state="translated">表示特性的集合。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeCollection">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph> class is read-only; it does not implement methods to add or remove attributes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph>类是只读的; 它未实现方法以添加或删除属性。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeCollection">
          <source>You must inherit from this class to implement these methods.</source>
          <target state="translated">必须继承此类，以实现这些方法。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeCollection">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection.Count%2A&gt;</ph> property to find the number of attributes that exist in the collection.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection.Count%2A&gt;</ph>属性在集合中查找存在的属性数。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeCollection">
          <source>You can also use the methods of this class to query the collection about its contents.</source>
          <target state="translated">此类的方法还可用于查询有关其内容的集合。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeCollection">
          <source>Call the <ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection.Contains%2A&gt;</ph> method to verify that a specified attribute or attribute array exists in the collection.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection.Contains%2A&gt;</ph>方法以验证集合中是否存在指定的属性或特性数组。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeCollection">
          <source>Call the <ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection.Matches%2A&gt;</ph> method to verify that a specified attribute or array of attributes exists in the collection, and that the values of the specified attributes are the same as the values in the collection.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection.Matches%2A&gt;</ph>方法来验证指定的属性或数组属性存在于集合中，以及指定属性的值是否在集合中的值相同。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeCollection">
          <source>While most attributes have default values, default values are not required.</source>
          <target state="translated">虽然大多数属性具有默认值，默认值不是必需的。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeCollection">
          <source>If an attribute has no default value, <ph id="ph1">`null`</ph> is returned from the indexed property that takes a type.</source>
          <target state="translated">如果某一特性有没有默认值，<ph id="ph1">`null`</ph>从接受一个类型的索引属性返回。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeCollection">
          <source>When defining your own attributes, you can declare a default value by either providing a constructor that takes no arguments, or defining a public static field of your attribute type named "Default".</source>
          <target state="translated">在定义你自己的特性，可提供构造函数不带自变量，或定义名为"Default"你属性类型的公共静态字段来声明一个默认值。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeCollection">
          <source>The first code example checks to see whether the <ph id="ph1">&lt;xref:System.ComponentModel.BrowsableAttribute&gt;</ph> has been set in this collection.</source>
          <target state="translated">第一个代码示例检查以查看是否<ph id="ph1">&lt;xref:System.ComponentModel.BrowsableAttribute&gt;</ph>已设置此集合中。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeCollection">
          <source>The second code example gets the actual value of the <ph id="ph1">&lt;xref:System.ComponentModel.DescriptionAttribute&gt;</ph> for a button.</source>
          <target state="translated">第二个代码示例获取的实际值<ph id="ph1">&lt;xref:System.ComponentModel.DescriptionAttribute&gt;</ph>按钮。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeCollection">
          <source>Both examples require that <ph id="ph1">`button1`</ph> and <ph id="ph2">`textBox1`</ph> have been created on a form.</source>
          <target state="translated">这两个示例都要求<ph id="ph1">`button1`</ph>和<ph id="ph2">`textBox1`</ph>已在窗体上创建。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AttributeCollection">
          <source>When using attributes, verify that an attribute has been set, or access its value.</source>
          <target state="translated">使用特性时，验证属性已设置，或访问其值。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.AttributeCollection">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.#ctor(System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> that provides the attributes for this collection.</source>
          <target state="translated">一个为此集合提供特性的类型 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 的数组。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.#ctor(System.Attribute[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.#ctor(System.Attribute[])">
          <source>The following code example creates a new <ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph> using the attributes on <ph id="ph2">`button1`</ph>.</source>
          <target state="translated">下面的代码示例创建一个新<ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph>上使用的特性<ph id="ph2">`button1`</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.#ctor(System.Attribute[])">
          <source>It assumes that <ph id="ph1">`button1`</ph> has been created on a form.</source>
          <target state="translated">它假定<ph id="ph1">`button1`</ph>窗体上是否已创建。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.#ctor(System.Attribute[])">
          <source><ph id="ph1">&lt;paramref name="attributes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributes" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.AttributeCollection.Attributes">
          <source>Gets the attribute collection.</source>
          <target state="translated">获取特性集合。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.AttributeCollection.Attributes">
          <source>The attribute collection.</source>
          <target state="translated">特性集合。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.AttributeCollection">
          <source>Determines whether this collection of attributes has the specified attribute or array of attributes.</source>
          <target state="translated">确定该特性集合是否具有指定的特性或特性数组。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to find in the collection.</source>
          <target state="translated">要在集合中查找的 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute)">
          <source>Determines whether this collection of attributes has the specified attribute.</source>
          <target state="translated">确定该特性集合是否具有指定的特性。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the collection contains the attribute or is the default attribute for the type of attribute; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果集合包含该特性或是该类型特性的默认特性，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute)">
          <source>This collection has the specified attribute if the specified type of attribute exists in the collection, and if the value of the specified attribute is the same as the value of the instance of the attribute in the collection.</source>
          <target state="translated">如果指定的类型的属性存在于集合中，并且指定的属性的值是集合中的属性实例的值相同，此集合将具有指定的属性。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute)">
          <source>The difference between the <ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection.Matches%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection.Contains%2A&gt;</ph> methods is that <ph id="ph3">&lt;xref:System.ComponentModel.AttributeCollection.Matches%2A&gt;</ph> calls the <ph id="ph4">&lt;xref:System.Attribute.Match%2A&gt;</ph> method on an attribute, and <ph id="ph5">&lt;xref:System.ComponentModel.AttributeCollection.Contains%2A&gt;</ph> calls the <ph id="ph6">&lt;xref:System.Object.Equals%2A&gt;</ph> method.</source>
          <target state="translated">之间的差异<ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection.Matches%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection.Contains%2A&gt;</ph>方法是，<ph id="ph3">&lt;xref:System.ComponentModel.AttributeCollection.Matches%2A&gt;</ph>调用<ph id="ph4">&lt;xref:System.Attribute.Match%2A&gt;</ph>的属性上的方法和<ph id="ph5">&lt;xref:System.ComponentModel.AttributeCollection.Contains%2A&gt;</ph>调用<ph id="ph6">&lt;xref:System.Object.Equals%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute)">
          <source>For most attributes, these methods do the same thing.</source>
          <target state="translated">对于大多数属性，这些方法执行相同的操作。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute)">
          <source>For attributes that may have multiple flags, however, <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> is typically implemented so that it returns <ph id="ph2">`true`</ph> if any of the flags are satisfied.</source>
          <target state="translated">可能具有多个标志，但是，属性<ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph>通常实现，因此它将返回<ph id="ph2">`true`</ph>如果不满足任何标志。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute)">
          <source>For example, consider a data binding attribute with the Boolean flags "SupportsSql", "SupportsOleDb", and "SupportsXml".</source>
          <target state="translated">例如，考虑使用布尔标志"SupportsSql"、"SupportsOleDb"和"SupportsXml"的数据绑定特性。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute)">
          <source>This attribute may be present on a property that supports all three data-binding approaches.</source>
          <target state="translated">此属性可能会显示一个属性，支持所有三个数据绑定方法。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute)">
          <source>It will often be the case that a programmer needs to know only if a particular approach is available, not all three.</source>
          <target state="translated">它通常会程序员只需知道某个特定的方法是否可用，这种情况不是所有三个。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute)">
          <source>Therefore, a programmer could use <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> with an instance of the attribute containing only the flags the programmer needs.</source>
          <target state="translated">因此，无法使用程序员<ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph>拥有包含仅的标志程序员属性的实例满足的要求。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute)">
          <source>The following code example checks to see whether the collection has a <ph id="ph1">&lt;xref:System.ComponentModel.BrowsableAttribute&gt;</ph> set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">下面的代码示例将检查以确定集合是否具有<ph id="ph1">&lt;xref:System.ComponentModel.BrowsableAttribute&gt;</ph>设置为<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute)">
          <source>It assumes that <ph id="ph1">`button1`</ph> and <ph id="ph2">`textBox1`</ph> have been created on a form.</source>
          <target state="translated">它假定<ph id="ph1">`button1`</ph>和<ph id="ph2">`textBox1`</ph>已在窗体上创建。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to find in the collection.</source>
          <target state="translated">要在集合中查找的类型 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 的数组。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute[])">
          <source>Determines whether this attribute collection contains all the specified attributes in the attribute array.</source>
          <target state="translated">确定该特性集合是否包含特性数组中所有指定的特性。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the collection contains all the attributes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果该集合包含所有特性，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute[])">
          <source>This collection has the specified array of attributes if all the specified attribute types exist in the collection and if each attribute in the specified array is the same as an attribute in the collection.</source>
          <target state="translated">如果集合中的所有指定的属性类型存在并且指定数组中的每个属性是集合中的特性相同，此集合将具有指定的属性数组。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute[])">
          <source>The following code example compares the attributes in <ph id="ph1">`button1`</ph> and <ph id="ph2">`textBox1`</ph> to see whether the attributes for the button are contained in the attributes for the text box.</source>
          <target state="translated">下面的代码示例中的特性进行比较<ph id="ph1">`button1`</ph>和<ph id="ph2">`textBox1`</ph>以查看是否在文本框中的属性中包含的按钮的属性。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute[])">
          <source>It assumes that both <ph id="ph1">`button1`</ph> and <ph id="ph2">`textBox1`</ph> have been created on a form.</source>
          <target state="translated">它假定这两个<ph id="ph1">`button1`</ph>和<ph id="ph2">`textBox1`</ph>已在窗体上创建。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> to copy the collection to.</source>
          <target state="translated">要将集合复制到的 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.CopyTo(System.Array,System.Int32)">
          <source>The index to start from.</source>
          <target state="translated">从其开始的索引。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.CopyTo(System.Array,System.Int32)">
          <source>Copies the collection to an array, starting at the specified index.</source>
          <target state="translated">从指定的索引开始，将集合复制到数组。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.AttributeCollection.Count">
          <source>Gets the number of attributes.</source>
          <target state="translated">获取特性的数目。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.AttributeCollection.Count">
          <source>The number of attributes.</source>
          <target state="translated">特性的数目。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.AttributeCollection.Count">
          <source>You can use the <ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection.Count%2A&gt;</ph> property to set the limits of a loop that iterates through a collection of objects.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection.Count%2A&gt;</ph>属性设置的一个循环来循环访问的对象的集合的限制。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.AttributeCollection.Count">
          <source>If the collection is zero-based, be sure to use <ph id="ph1">`Count - 1`</ph> as the upper boundary of the loop.</source>
          <target state="translated">如果该集合为从零开始，请务必使用<ph id="ph1">`Count - 1`</ph>作为循环的上限。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.AttributeCollection.Count">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection.Count%2A&gt;</ph> property to print the number of properties on <ph id="ph2">`button1`</ph> in a text box.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection.Count%2A&gt;</ph>属性的属性的数量输出上<ph id="ph2">`button1`</ph>在文本框中。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.AttributeCollection.Count">
          <source>It assumes that <ph id="ph1">`button1`</ph> and <ph id="ph2">`textBox1`</ph> have been created on a form.</source>
          <target state="translated">它假定<ph id="ph1">`button1`</ph>和<ph id="ph2">`textBox1`</ph>已在窗体上创建。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="F:System.ComponentModel.AttributeCollection.Empty">
          <source>Specifies an empty collection that you can use, rather than creating a new one.</source>
          <target state="translated">指定一个可以使用的空集合，而不是创建一个新集合。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="F:System.ComponentModel.AttributeCollection.Empty">
          <source>This field is read-only.</source>
          <target state="translated">此字段为只读。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.FromExisting(System.ComponentModel.AttributeCollection,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> from which to create the copy.</source>
          <target state="translated">要从其创建副本的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.FromExisting(System.ComponentModel.AttributeCollection,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> that provides the attributes for this collection.</source>
          <target state="translated">一个为此集合提供特性的类型 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 的数组。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.FromExisting(System.ComponentModel.AttributeCollection,System.Attribute[])">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">可以为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.FromExisting(System.ComponentModel.AttributeCollection,System.Attribute[])">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> from an existing <ph id="ph2">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph>.</source>
          <target state="translated">从现有的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> 创建新的 <ph id="ph2">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.FromExisting(System.ComponentModel.AttributeCollection,System.Attribute[])">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> that is a copy of <ph id="ph2">&lt;paramref name="existing" /&gt;</ph>.</source>
          <target state="translated">新的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph>，它是 <ph id="ph2">&lt;paramref name="existing" /&gt;</ph> 的副本。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.FromExisting(System.ComponentModel.AttributeCollection,System.Attribute[])">
          <source>If the <ph id="ph1">`newAttributes`</ph> parameter is provided, its <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> entries are merged with those of the <ph id="ph3">`existing`</ph> parameter.</source>
          <target state="translated">如果<ph id="ph1">`newAttributes`</ph>提供参数，其<ph id="ph2">&lt;xref:System.Attribute&gt;</ph>项将合并与<ph id="ph3">`existing`</ph>参数。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.FromExisting(System.ComponentModel.AttributeCollection,System.Attribute[])">
          <source><ph id="ph1">&lt;paramref name="existing" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="existing" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.GetDefaultAttribute(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the attribute to retrieve.</source>
          <target state="translated">要检索的特性的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.GetDefaultAttribute(System.Type)">
          <source>Returns the default <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> of a given <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">返回给定 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 的默认 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.GetDefaultAttribute(System.Type)">
          <source>The default <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> of a given <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph>.</source>
          <target state="translated">给定 <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> 的默认 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.GetEnumerator">
          <source>Gets an enumerator for this collection.</source>
          <target state="translated">获取此集合的枚举器。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.GetEnumerator">
          <source>An enumerator of type <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> 类型的枚举数。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.GetEnumerator">
          <source>The following code example gets an enumerator for the attributes on <ph id="ph1">`button1`</ph>.</source>
          <target state="translated">下面的代码示例获取一个枚举器的属性上<ph id="ph1">`button1`</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.GetEnumerator">
          <source>It uses the enumerator to print the names of the attributes in the collection.</source>
          <target state="translated">它使用枚举器集合中的特性名称打印。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.GetEnumerator">
          <source>It assumes that <ph id="ph1">`button1`</ph> and <ph id="ph2">`textBox1`</ph> have been created on a form.</source>
          <target state="translated">它假定<ph id="ph1">`button1`</ph>和<ph id="ph2">`textBox1`</ph>已在窗体上创建。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.AttributeCollection">
          <source>Gets the attribute with the specified index.</source>
          <target state="translated">获取具有指定索引的特性。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.AttributeCollection.Item(System.Int32)">
          <source>The zero-based index of <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> 的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.AttributeCollection.Item(System.Int32)">
          <source>Gets the attribute with the specified index number.</source>
          <target state="translated">获取具有指定索引号的特性。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.AttributeCollection.Item(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> with the specified index number.</source>
          <target state="translated">具有指定索引号的 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.AttributeCollection.Item(System.Int32)">
          <source>The index number is zero-based.</source>
          <target state="translated">索引号是从零开始。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.AttributeCollection.Item(System.Int32)">
          <source>Therefore, you must subtract 1 from the numerical position of a particular <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> to access that <ph id="ph2">&lt;xref:System.Attribute&gt;</ph>.</source>
          <target state="translated">因此，必须减去 1 从特定的数字位置<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>访问， <ph id="ph2">&lt;xref:System.Attribute&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.AttributeCollection.Item(System.Int32)">
          <source>For example, to get the third <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, you need to specify <ph id="ph2">`myColl[2]`</ph>.</source>
          <target state="translated">例如，若要获取第三个<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>，你需要指定<ph id="ph2">`myColl[2]`</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.AttributeCollection.Item(System.Int32)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection.Item%2A&gt;</ph> property to print the name of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> specified by the index number in a text box.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection.Item%2A&gt;</ph>属性可打印的名称<ph id="ph2">&lt;xref:System.Attribute&gt;</ph>在文本框中的索引号指定。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.AttributeCollection.Item(System.Int32)">
          <source>Because the index number is zero-based, this code example prints the name of the second <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> in a text box.</source>
          <target state="translated">此代码示例索引号是从零开始的因为输出的第二个名称<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>在文本框中。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.AttributeCollection.Item(System.Int32)">
          <source>It assumes <ph id="ph1">`button1`</ph> and <ph id="ph2">`textBox1`</ph> have been created on a form.</source>
          <target state="translated">它假定<ph id="ph1">`button1`</ph>和<ph id="ph2">`textBox1`</ph>已在窗体上创建。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.AttributeCollection.Item(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> to get from the collection.</source>
          <target state="translated">要从集合中获取的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.AttributeCollection.Item(System.Type)">
          <source>Gets the attribute with the specified type.</source>
          <target state="translated">获取具有指定类型的特性。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.AttributeCollection.Item(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> with the specified type or, if the attribute does not exist, the default value for the attribute type.</source>
          <target state="translated">具有指定类型的 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>；如果该特性不存在，则为该特性类型的默认值。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.AttributeCollection.Item(System.Type)">
          <source>If the attribute does not exist in the collection, this property returns the default value for the attribute type.</source>
          <target state="translated">如果集合中不存在该属性，此属性返回的属性类型的默认值。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.AttributeCollection.Item(System.Type)">
          <source>The following code example gets the <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> from the collection and prints its value.</source>
          <target state="translated">下面的代码示例获取<ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph>从集合并将其值打印。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.AttributeCollection.Item(System.Type)">
          <source>It assumes that <ph id="ph1">`button1`</ph> and <ph id="ph2">`textBox1`</ph> have been created on a form.</source>
          <target state="translated">它假定<ph id="ph1">`button1`</ph>和<ph id="ph2">`textBox1`</ph>已在窗体上创建。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.AttributeCollection.Item(System.Type)">
          <source>For this code example to run, you must provide the fully qualified assembly name.</source>
          <target state="translated">若要运行此代码示例，你必须提供完全限定程序集名称。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.AttributeCollection.Item(System.Type)">
          <source>For information about how to obtain the fully qualified assembly name, see <bpt id="p1">[</bpt>Assembly Names<ept id="p1">](~/docs/framework/app-domains/assembly-names.md)</ept>.</source>
          <target state="translated">有关如何获取完全限定程序集名称的信息，请参阅<bpt id="p1">[</bpt>程序集名称<ept id="p1">](~/docs/framework/app-domains/assembly-names.md)</ept>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.AttributeCollection">
          <source>Determines whether a specified attribute or array of attributes is the same as an attribute or array of attributes in the collection.</source>
          <target state="translated">确定指定的特性或特性数组是否与集合中的特性或特性数组相同。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to compare with the attributes in this collection.</source>
          <target state="translated">要与集合中的特性进行比较的 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 的实例。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute)">
          <source>Determines whether a specified attribute is the same as an attribute in the collection.</source>
          <target state="translated">确定指定的特性是否与集合中的特性相同。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute is contained within the collection and has the same value as the attribute in the collection; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果特性包含在集合中，且其值与集合中该特性的值相同，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute)">
          <source>An attribute can provide support for matching.</source>
          <target state="translated">属性可以为匹配提供支持。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute)">
          <source>The difference between the <ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection.Matches%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection.Contains%2A&gt;</ph> methods is that <ph id="ph3">&lt;xref:System.ComponentModel.AttributeCollection.Matches%2A&gt;</ph> calls the <ph id="ph4">&lt;xref:System.Attribute.Match%2A&gt;</ph> method on an attribute, and <ph id="ph5">&lt;xref:System.ComponentModel.AttributeCollection.Contains%2A&gt;</ph> calls the <ph id="ph6">&lt;xref:System.Object.Equals%2A&gt;</ph> method.</source>
          <target state="translated">之间的差异<ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection.Matches%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection.Contains%2A&gt;</ph>方法是，<ph id="ph3">&lt;xref:System.ComponentModel.AttributeCollection.Matches%2A&gt;</ph>调用<ph id="ph4">&lt;xref:System.Attribute.Match%2A&gt;</ph>的属性上的方法和<ph id="ph5">&lt;xref:System.ComponentModel.AttributeCollection.Contains%2A&gt;</ph>调用<ph id="ph6">&lt;xref:System.Object.Equals%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute)">
          <source>For most attributes, these methods do the same thing.</source>
          <target state="translated">对于大多数属性，这些方法执行相同的操作。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute)">
          <source>For attributes that may have multiple flags, however, <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> is typically implemented so that it returns <ph id="ph2">`true`</ph> if any of the flags are satisfied.</source>
          <target state="translated">可能具有多个标志，但是，属性<ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph>通常实现，因此它将返回<ph id="ph2">`true`</ph>如果不满足任何标志。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute)">
          <source>For example, consider a data binding attribute with the Boolean flags "SupportsSql", "SupportsOleDb", and "SupportsXml".</source>
          <target state="translated">例如，考虑使用布尔标志"SupportsSql"、"SupportsOleDb"和"SupportsXml"的数据绑定特性。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute)">
          <source>This attribute may be present on a property that supports all three data binding approaches.</source>
          <target state="translated">此属性可能会显示一个属性，支持所有三个数据绑定方法。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute)">
          <source>It will often be the case that a programmer needs to know only if a particular approach is available, not all three.</source>
          <target state="translated">它通常会程序员只需知道某个特定的方法是否可用，这种情况不是所有三个。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute)">
          <source>Therefore, a programmer could use <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> with an instance of the attribute containing only the flags the programmer needs.</source>
          <target state="translated">因此，无法使用程序员<ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph>拥有包含仅的标志程序员属性的实例满足的要求。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute)">
          <source>The following code example verifies that the <ph id="ph1">&lt;xref:System.ComponentModel.BrowsableAttribute&gt;</ph> is a member of the collection and that it has been set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">下面的代码示例验证<ph id="ph1">&lt;xref:System.ComponentModel.BrowsableAttribute&gt;</ph>是集合的成员，并且它已设置为<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute)">
          <source>It assumes that <ph id="ph1">`button1`</ph> and <ph id="ph2">`textBox1`</ph> have been created on a form.</source>
          <target state="translated">它假定<ph id="ph1">`button1`</ph>和<ph id="ph2">`textBox1`</ph>已在窗体上创建。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.CodeDom.MemberAttributes" /&gt;</ph> to compare with the attributes in this collection.</source>
          <target state="translated">要与此集合中的特性进行比较的 <ph id="ph1">&lt;see cref="T:System.CodeDom.MemberAttributes" /&gt;</ph> 的数组。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute[])">
          <source>Determines whether the attributes in the specified array are the same as the attributes in the collection.</source>
          <target state="translated">确定指定数组中的特性是否与集合中的特性相同。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if all the attributes in the array are contained in the collection and have the same values as the attributes in the collection; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果数组中的所有特性都包含在集合中，且其值与集合中特性的值相同，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute[])">
          <source>An attribute can provide support for matching.</source>
          <target state="translated">属性可以为匹配提供支持。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute[])">
          <source>The following code example compares the attributes in a button and a text box to see whether they match.</source>
          <target state="translated">下面的代码示例将一个按钮和一个文本框，以确定它们是否匹配中的属性进行比较。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute[])">
          <source>It assumes that <ph id="ph1">`button1`</ph> and <ph id="ph2">`textBox1`</ph> have been created on a form.</source>
          <target state="translated">它假定<ph id="ph1">`button1`</ph>和<ph id="ph2">`textBox1`</ph>已在窗体上创建。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#Count">
          <source>Gets the number of elements contained in the collection.</source>
          <target state="translated">获取集合中包含的元素数。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#Count">
          <source>The number of elements contained in the collection.</source>
          <target state="translated">集合中包含的元素数。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the collection is synchronized (thread-safe).</source>
          <target state="translated">获取一个值，该值指示对集合的访问是否已同步（线程安全）。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the collection is synchronized (thread-safe); otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果对该集合的访问是同步的（线程安全），则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则，为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the collection.</source>
          <target state="translated">获取可用于同步对集合的访问的对象。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the collection.</source>
          <target state="translated">可用于同步集合访问的对象。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.AttributeCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> 的一个 <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>