<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Component.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d63614a-fd48-4a83-9dc4-ea1e401b6c15810228b07f7debca98289590cfbc9b70685e2e16.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">810228b07f7debca98289590cfbc9b70685e2e16</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b4804968da1dfdf71c501075a5b66957b54f2e8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/27/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Component">
          <source>Provides the base implementation for the <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> interface and enables object sharing between applications.</source>
          <target state="translated">提供 <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> 接口的基实现并启用应用程序之间的对象共享。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> is the base class for all components in the common language runtime that marshal by reference.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 是公共语言运行时中的所有组件的基类由引用封送。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> is remotable and derives from the <ph id="ph2">&lt;xref:System.MarshalByRefObject&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 可以进行远程处理和派生自<ph id="ph2">&lt;xref:System.MarshalByRefObject&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> provides an implementation of the <ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 提供的实现<ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph> provides an implementation of <ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph> that marshals by value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph>提供的实现<ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph>，通过值将封送。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source>You can host a <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> in any object that implements the <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph> interface, and you can query and get services from its container.</source>
          <target state="translated">你可以承载<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>在实现任何对象<ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph>接口，并且可以查询和从其容器获取服务。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source>The container creates an <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph> for each <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> it contains.</source>
          <target state="translated">容器创建<ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>每个<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>它包含。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source>The container uses the site to manage the <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> and is used by the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> to communicate with its container.</source>
          <target state="translated">容器使用站点来管理<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>，并由<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>与其容器进行通信。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> should release resources explicitly by calls to its <ph id="ph2">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method, without waiting for automatic memory management through an implicit call to the <ph id="ph3">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>应通过调用显式释放资源其<ph id="ph2">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>方法，而无需等待自动内存管理通过隐式调用<ph id="ph3">&lt;xref:System.Object.Finalize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source>When a <ph id="ph1">&lt;xref:System.ComponentModel.Container&gt;</ph> is disposed, all components within the <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> are also disposed.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.ComponentModel.Container&gt;</ph>将被释放中的所有组件<ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph>同时会释放。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>Gets a value indicating whether the component can raise an event.</source>
          <target state="translated">获取一个指示组件是否可以引发事件的值。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the component can raise events; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果组件可以引发事件，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>The default implementation of this property always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">此属性的默认实现始终返回<ph id="ph1">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>Classes that inherit from the <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> class should override this property to provide the ability to disable the raising of events.</source>
          <target state="translated">继承自的类<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>类应重写此属性以提供禁用引发事件的功能。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>For example, in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class, if the control is being hosted as an ActiveX control, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CanRaiseEvents%2A&gt;</ph> property returns <ph id="ph3">`false`</ph> if the ActiveX control has its events frozen.</source>
          <target state="translated">例如，在<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类，如果控件承载 ActiveX 控件，作为<ph id="ph2">&lt;xref:System.Windows.Forms.Control.CanRaiseEvents%2A&gt;</ph>属性返回<ph id="ph3">`false`</ph>如果 ActiveX 控件拥有冻结其事件。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>If you override this method in a deriving class and change it to return <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the <ph id="ph2">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph> collection returned by the <ph id="ph3">&lt;see cref="P:System.ComponentModel.Component.Events" /&gt;</ph> property returns <ph id="ph4">&lt;see langword="null" /&gt;</ph> for an event.</source>
          <target state="translated">如果你重写此方法在派生类并将其更改为返回<ph id="ph1">&lt;see langword="false" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph>返回集合<ph id="ph3">&lt;see cref="P:System.ComponentModel.Component.Events" /&gt;</ph>属性返回<ph id="ph4">&lt;see langword="null" /&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>Events can still be added and removed from the collection, but the collection's <ph id="ph1">&lt;see cref="P:System.ComponentModel.EventHandlerList.Item(System.Object)" /&gt;</ph> property will always return <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">事件仍可添加和删除从该集合，但集合的<ph id="ph1">&lt;see cref="P:System.ComponentModel.EventHandlerList.Item(System.Object)" /&gt;</ph>属性将始终返回<ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Component.Container">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>，它包含 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Container">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, if any, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is not encapsulated in an <ph id="ph5">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>.</source>
          <target state="translated">包含 <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>（如果有），如果 <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 未封装在 <ph id="ph5">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> 中，则为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Container">
          <source>The components in a container are tracked in a first-in, first-out list, which also defines the order of the components within the container.</source>
          <target state="translated">在第一个中先进先出列表，它还定义容器内的组件的顺序中，容器中的组件进行跟踪。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Container">
          <source>The last component added is the last component in the list.</source>
          <target state="translated">添加的最后一个组件是在列表中的最后一个组件。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Component.DesignMode">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is currently in design mode.</source>
          <target state="translated">获取一个值，用以指示 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 当前是否处于设计模式。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.DesignMode">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is in design mode; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 处于设计模式，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.DesignMode">
          <source>The design mode indicator is stored in the <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>; therefore, if the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> does not have an <ph id="ph3">&lt;xref:System.ComponentModel.ISite&gt;</ph> associated with it, the value of this property is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">设计模式指示器存储在<ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>; 因此，如果<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>没有<ph id="ph3">&lt;xref:System.ComponentModel.ISite&gt;</ph>与它关联，此属性的值是<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Component">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 占用的资源。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 使用的所有资源。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>.</source>
          <target state="translated">在完成使用 <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> 后，应调用 <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> 方法使 <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> 处于不可用状态。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph> was occupying.</source>
          <target state="translated">在调用<ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>，必须释放对所有引用<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>以便垃圾回收器才能回收的内存，<ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph>占用。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>实现 Dispose 方法<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>.</source>
          <target state="translated">每次释放对 <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> 的最后一个引用前，均应调用 <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">否则，在垃圾回收器调用 <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 对象的 <ph id="ph2">`Finalize`</ph> 方法之前，该对象正在使用的资源不会被释放。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">若要释放托管资源和非托管资源，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；若仅释放非托管资源，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 占用的非托管资源，还可以另外再释放托管资源。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">此方法称为由公共<ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>方法和<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 调用受保护<ph id="ph2">`Dispose(Boolean)`</ph>方法替换<ph id="ph3">`disposing`</ph>参数设置为<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 调用<ph id="ph2">`Dispose`</ph>与<ph id="ph3">`disposing`</ph>设置为<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph> references.</source>
          <target state="translated">当 <ph id="ph1">`disposing`</ph> 参数为 <ph id="ph2">`true`</ph> 时，此方法释放该 <ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph> 引用的、由任何托管对象持有的全部资源。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">此方法调用每个引用对象的 <ph id="ph1">`Dispose()`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 可以由其他对象多次调用。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">重写 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> 时，请注意不要引用在以前调用 <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph> 时已释放的对象。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">有关如何实现详细信息<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>，请参阅<bpt id="p1">[</bpt>实现 Dispose 方法<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">有关详细信息<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>重写 Finalize 方法<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Component.Disposed">
          <source>Occurs when the component is disposed by a call to the <ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> method.</source>
          <target state="translated">当通过调用 <ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> 方法释放组件时发生。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Component.Disposed">
          <source>When you create a <ph id="ph1">&lt;xref:System.ComponentModel.Component.Disposed&gt;</ph> delegate, you identify the method that handles the event.</source>
          <target state="translated">当创建 <ph id="ph1">&lt;xref:System.ComponentModel.Component.Disposed&gt;</ph> 委托时，请标识将处理事件的方法。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Component.Disposed">
          <source>To associate the event with your event handler, add an instance of the delegate to the event.</source>
          <target state="translated">若要将事件与事件处理程序关联，请将该委托的一个实例添加到事件中。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Component.Disposed">
          <source>The event handler is called whenever the event occurs, unless you remove the delegate.</source>
          <target state="translated">除非移除了该委托，否则每当发生该事件时就会调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Component.Disposed">
          <source>For more information about the event handler delegates, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关事件处理程序委托的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Component.Events">
          <source>Gets the list of event handlers that are attached to this <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>.</source>
          <target state="translated">获取附加到此 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 的事件处理程序的列表。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Events">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph> that provides the delegates for this component.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph>，它提供此组件的委托。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Events">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>NIB： 使用事件<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.Finalize">
          <source>Releases unmanaged resources and performs other cleanup operations before the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is reclaimed by garbage collection.</source>
          <target state="translated">在通过垃圾回收将 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 回收之前，释放非托管资源并执行其他清理操作。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Finalize">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</source>
          <target state="translated">此方法重写 <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Finalize">
          <source>Application code should not call this method; an object's <ph id="ph1">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A&gt;</ph> method.</source>
          <target state="translated">应用程序代码不应调用此方法。对象的<ph id="ph1">`Finalize`</ph>方法过程中将自动调用垃圾回收，除非已通过调用禁用垃圾回收器的终止<ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Finalize">
          <source>For more information, see <bpt id="p1">[</bpt>Finalize Methods and Destructors<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>Cleaning Up Unmanaged Resources<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, and <bpt id="p3">[</bpt>Overriding the Finalize Method<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>Finalize 方法和析构函数<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>，<bpt id="p2">[</bpt>清洗向上非托管资源<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>，和<bpt id="p3">[</bpt>重写 Finalize 方法<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.GetService(System.Type)">
          <source>A service provided by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>.</source>
          <target state="translated">由 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 提供的服务。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.GetService(System.Type)">
          <source>Returns an object that represents a service provided by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> or by its <ph id="ph2">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</source>
          <target state="translated">返回一个对象，该对象表示由 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 或它的 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> 提供的服务。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.GetService(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents a service provided by the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> does not provide the specified service.</source>
          <target state="translated">表示由 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 提供的服务的 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>，如果 <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 不提供指定的服务，则为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.GetService(System.Type)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">此方法由派生类中重写。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Component.Site">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>.</source>
          <target state="translated">获取或设置 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is not encapsulated in an <ph id="ph5">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>, the <ph id="ph6">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> does not have an <ph id="ph7">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> associated with it, or the <ph id="ph8">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is removed from its <ph id="ph9">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>.</source>
          <target state="translated">与 <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> 关联的 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>；如果 <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 未封装在 <ph id="ph5">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> 中，<ph id="ph6">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 没有与其关联的 <ph id="ph7">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> 或者 <ph id="ph8">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 已从其 <ph id="ph9">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> 中移除，则为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> will have an <ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph> if it has been added to an <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph> and the <ph id="ph4">&lt;xref:System.ComponentModel.IContainer&gt;</ph> assigns an <ph id="ph5">&lt;xref:System.ComponentModel.ISite&gt;</ph> to it.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>将具有<ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph>如果已添加到<ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>和<ph id="ph4">&lt;xref:System.ComponentModel.IContainer&gt;</ph>分配<ph id="ph5">&lt;xref:System.ComponentModel.ISite&gt;</ph>到它。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.IContainer&gt;</ph> is responsible for assigning the <ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph> to the <ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.IContainer&gt;</ph>负责将分配<ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph>到<ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>Changing the value of the component's <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph> does not necessarily change the name of the site the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> is assigned to.</source>
          <target state="translated">更改的组件的值<ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>不一定不更改站点的名称<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>分配给。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Component.Site%2A&gt;</ph> property should be set only by an <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component.Site%2A&gt;</ph>属性应设置只能由<ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>The property value is <ph id="ph1">`null`</ph> if the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> is removed from its <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>.</source>
          <target state="translated">该属性值将<ph id="ph1">`null`</ph>如果<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>从删除其<ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>Assigning <ph id="ph1">`null`</ph> to this property does not necessarily remove the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> from the <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>.</source>
          <target state="translated">分配<ph id="ph1">`null`</ph>到此属性不一定会删除<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>从<ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> might or might not have a name.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>可能或可能不具有名称。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>If a <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> is given a name, the name must be unique among other <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> objects within its <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>是指定一个名称，名称必须是唯一的而其他<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>对象中其<ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph> stores the name of the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>; therefore, you can only name a <ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph> if it has an <ph id="ph4">&lt;xref:System.ComponentModel.ISite&gt;</ph> associated with it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>存储的名称<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>; 因此，您可以仅命名<ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph>如果它具有<ph id="ph4">&lt;xref:System.ComponentModel.ISite&gt;</ph>与之关联。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.ToString">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, if any.</source>
          <target state="translated">返回包含 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 的名称的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>（如果有）。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.ToString">
          <source>This method should not be overridden.</source>
          <target state="translated">不应重写此方法。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.ToString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, if any, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is unnamed.</source>
          <target state="translated">包含 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 的名称的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>（如果有）；如果 <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 未命名，则为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.ToString">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> may or may not have a name.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>可能或可能不具有名称。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.ToString">
          <source>If a <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> is given a name, the name is unique among other <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> objects within its <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>是指定一个名称，名称是唯一的而其他<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>对象中其<ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.ToString">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph> stores the name of the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>存储的名称<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.ToString">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> can only have an <ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph> if it has been added to an <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph> and the <ph id="ph4">&lt;xref:System.ComponentModel.IContainer&gt;</ph> assigns an <ph id="ph5">&lt;xref:System.ComponentModel.ISite&gt;</ph> to it.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>只能有<ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph>如果已添加到<ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>和<ph id="ph4">&lt;xref:System.ComponentModel.IContainer&gt;</ph>分配<ph id="ph5">&lt;xref:System.ComponentModel.ISite&gt;</ph>到它。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>