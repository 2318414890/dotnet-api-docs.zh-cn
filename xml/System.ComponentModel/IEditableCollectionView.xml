<Type Name="IEditableCollectionView" FullName="System.ComponentModel.IEditableCollectionView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="48583191bc3dd055645c028f233ccbaadaba5d5c" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34244808" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEditableCollectionView" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEditableCollectionView" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.IEditableCollectionView" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEditableCollectionView" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEditableCollectionView" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>定义 <see cref="T:System.Windows.Data.CollectionView" /> 所实现的方法和属性，用于向集合提供编辑功能。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当集合视图实现<xref:System.ComponentModel.IEditableCollectionView>接口，你可以直接更改基础集合，如果它允许通过使用方法和属性进行更改，<xref:System.ComponentModel.IEditableCollectionView>公开，而不考虑集合的类型。  
  
 类型<xref:System.Windows.Controls.ItemCollection>， <xref:System.Windows.Data.BindingListCollectionView>，和<xref:System.Windows.Data.ListCollectionView>附带类型[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]继承自<xref:System.Windows.Data.CollectionView>。  这些类型还实现<xref:System.ComponentModel.IEditableCollectionView>，因此你可以编辑使用这些类型之一的集合。  <xref:System.Windows.Controls.ItemCollection>特别是，通常使用因为<xref:System.Windows.Controls.ItemsControl.Items%2A?displayProperty=nameWithType>属性是<xref:System.Windows.Controls.ItemCollection>。  
  
   
  
## Examples  
 下面的示例演示如何通过使用由定义的方法向集合添加项<xref:System.ComponentModel.IEditableCollectionView>。  此应用程序显示的项的销售列表，并为用户提供的添加、 编辑或删除项的选项。  当用户添加或编辑项时，表单将提示用户输入的新项。  如果用户提交该表单，项已提交到集合。  如果用户取消窗体，则会丢弃该项。 有关完整的示例，请参阅[更改使用 IEditableCollectionView 示例收集](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)。  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public object AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNew () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AddNew();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将新项添加到集合。</summary>
        <returns>添加到集合中的新项。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用<xref:System.ComponentModel.IEditableCollectionView.AddNew%2A>开始添加事务。  应调用<xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A>或<xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>来结束添加事务。 始终在集合视图中将出现一个新项。 任何筛选、 排序或分组操作也将应用于该视图应用到新项时<xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A>调用。  
  
   
  
## Examples  
 下面的示例创建<xref:System.Windows.Window>，提示用户添加新项。  然后，它调用<xref:System.ComponentModel.IEditableCollectionView.AddNew%2A>若要创建新对象并设置<xref:System.Windows.FrameworkElement.DataContext%2A>的<xref:System.Windows.Window>对该对象。 有关完整的示例，请参阅[更改使用 IEditableCollectionView 示例收集](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)。  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAddNew">
      <MemberSignature Language="C#" Value="public bool CanAddNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanAddNew" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanAddNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanAddNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanAddNew { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示是否可以将新项添加到集合中。</summary>
        <value>如果可以将新项添加到集合中，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.IEditableCollectionView>可以添加新项，如果满足以下条件：  
  
-   可以将项添加对基础集合。  例如，如果该集合为只读的<xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A>是`false`。  
  
-   <xref:System.ComponentModel.IEditableCollectionView>可以创建位于集合中的类型的对象。  例如，如果该集合的类型为<xref:System.Collections.ObjectModel.ObservableCollection%601>、<xref:System.ComponentModel.IEditableCollectionView>必须能够创建类型的对象`T`。  
  
   
  
## Examples  
 下面的示例检查是否可以将项添加到集合。  如果<xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A>是`false`，该示例告知用户不能添加项。  否则，它会显示提示用户添加新项的窗体。 有关完整的示例，请参阅[更改使用 IEditableCollectionView 示例收集](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)。  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCancelEdit">
      <MemberSignature Language="C#" Value="public bool CanCancelEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanCancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanCancelEdit { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示集合视图是否可以放弃挂起的更改并还原所编辑对象的原始值。</summary>
        <value>如果集合视图可以放弃挂起的更改并还原所编辑对象的原始值，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> 是`true`视图是否支持当前正在编辑的项上的"挂起的更改"的概念。   例如，可能会返回一个集合视图`true`如果编辑的项实现<xref:System.ComponentModel.IEditableObject>，或者如果视图具有它可用来回滚的项的状态信息返回的更改。 <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> 是`false`如果视图不能还原上一个对象的更改。  在这种情况下，调用<xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>以使视图退出编辑状态，并提供逻辑，以还原在编辑过的对象上的更改。  
  
   
  
## Examples  
 下面的示例获取<xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A>以检查是否可以还原所编辑的项的原始值，然后它将调用<xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>。  如果无法还原值，则必须提供其他逻辑来这样做。  该示例调用时，它们可以是，如果还原值<xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>。   有关完整的示例，请参阅[更改使用 IEditableCollectionView 示例收集](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)。  
  
 [!code-csharp[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>结束编辑事务，并还原项的原始值（如有可能）。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> 设置<xref:System.ComponentModel.IEditableCollectionView.CurrentEditItem%2A>到`null`，并使集合视图退出编辑状态。  如果<xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A>是`true`，<xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>还将还原所编辑对象的原始值。  
  
   
  
## Examples  
 下面的示例获取<xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A>以检查是否可以还原所编辑的项的原始值，然后它将调用<xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>。  如果无法还原值，则必须提供其他逻辑来这样做。  该示例调用时，它们可以是，如果还原值<xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>。 有关完整的示例，请参阅[更改使用 IEditableCollectionView 示例收集](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)。  
  
 [!code-csharp[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelNew">
      <MemberSignature Language="C#" Value="public void CancelNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CancelNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelNew();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>结束添加事务并放弃挂起的新项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例显示窗体，提示用户添加新项。  如果用户提交表单时，该示例将调用<xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A>将该项添加到集合。  如果用户取消窗体，该示例将调用<xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>以丢弃该项。 有关完整的示例，请参阅[更改使用 IEditableCollectionView 示例收集](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)。  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemove">
      <MemberSignature Language="C#" Value="public bool CanRemove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRemove" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanRemove" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRemove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRemove { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示是否可以从集合中移除项。</summary>
        <value>如果可以从集合中移除项，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> 是`false`如果基础集合是只读的。  
  
   
  
## Examples  
 下面的示例调用<xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A>以检查是否可以从集合中移除项。  如果可以移除项，该示例将提示用户确认的操作和调用<xref:System.ComponentModel.IEditableCollectionView.Remove%2A>如果用户单击**是**。 有关完整的示例，请参阅[更改使用 IEditableCollectionView 示例收集](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)。  
  
 [!code-csharp[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#removeitem)]
 [!code-vb[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#removeitem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public void CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommitEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>结束编辑事务并保存挂起的更改。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例创建提示用户编辑现有项的窗体。  如果用户提交表单时，该示例将调用<xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A>将更改保存到集合。  如果用户取消窗体，该示例将调用<xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>放弃所做的更改。 有关完整的示例，请参阅[更改使用 IEditableCollectionView 示例收集](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)。  
  
 [!code-csharp[EditingCollectionsSnippets#EditItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#edititem)]
 [!code-vb[EditingCollectionsSnippets#EditItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#edititem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitNew">
      <MemberSignature Language="C#" Value="public void CommitNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CommitNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommitNew();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>结束添加事务并保存挂起的新项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 任何筛选、 排序或分组操作也将应用于<xref:System.Windows.Data.CollectionView>应用到新项时<xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A>调用。  
  
   
  
## Examples  
 下面的示例显示窗体，提示用户添加新项。  如果用户提交表单时，该示例将调用<xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A>将该项添加到集合。  如果用户取消窗体，该示例将调用<xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>以丢弃该项。 有关完整的示例，请参阅[更改使用 IEditableCollectionView 示例收集](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)。  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentAddItem">
      <MemberSignature Language="C#" Value="public object CurrentAddItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentAddItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentAddItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentAddItem { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前添加事务过程中正在添加的项。</summary>
        <value>如果 <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> 为 <see langword="true" />，则为要添加的项；否则为 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentEditItem">
      <MemberSignature Language="C#" Value="public object CurrentEditItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentEditItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentEditItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentEditItem { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取集合中正在编辑的项。</summary>
        <value>如果 <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> 是 <see langword="true" />，则为集合中正在编辑的项；否则为 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditItem">
      <MemberSignature Language="C#" Value="public void EditItem (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EditItem(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EditItem (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EditItem(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">要编辑的项。</param>
        <summary>开始指定项的编辑事务。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例创建提示用户编辑现有项的窗体。  如果用户提交表单时，所做的更改会提交到集合。  如果用户取消窗体，将放弃所做的更改。 有关完整的示例，请参阅[更改使用 IEditableCollectionView 示例收集](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)。  
  
 [!code-csharp[EditingCollectionsSnippets#EditItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#edititem)]
 [!code-vb[EditingCollectionsSnippets#EditItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#edititem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddingNew">
      <MemberSignature Language="C#" Value="public bool IsAddingNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAddingNew" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAddingNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAddingNew { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示是否正在执行添加事务。</summary>
        <value>如果正在进行添加事务，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通过调用开始添加事务<xref:System.ComponentModel.IEditableCollectionView.AddNew%2A>并通过调用结束添加事务<xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A>或<xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditingItem">
      <MemberSignature Language="C#" Value="public bool IsEditingItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditingItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEditingItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditingItem { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示是否正在执行编辑事务。</summary>
        <value>如果正在执行编辑事务，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通过调用开始编辑事务<xref:System.ComponentModel.IEditableCollectionView.EditItem%2A>并通过调用结束事务<xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A>或<xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewItemPlaceholderPosition">
      <MemberSignature Language="C#" Value="public System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property NewItemPlaceholderPosition As NewItemPlaceholderPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::NewItemPlaceholderPosition NewItemPlaceholderPosition { System::ComponentModel::NewItemPlaceholderPosition get(); void set(System::ComponentModel::NewItemPlaceholderPosition value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.NewItemPlaceholderPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置集合视图中新项占位符的位置。</summary>
        <value>用于指定集合视图中新项占位符位置的枚举值之一。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">要移除的项。</param>
        <summary>从集合中移除指定的项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`item`不在集合中，<xref:System.ComponentModel.IEditableCollectionView.Remove%2A>不执行任何操作。  
  
   
  
## Examples  
 下面的示例调用<xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A>以检查是否可以从集合中移除项。  如果可以移除项，该示例将提示用户确认的操作和调用<xref:System.ComponentModel.IEditableCollectionView.Remove%2A>如果用户单击**是**。 有关完整的示例，请参阅[更改使用 IEditableCollectionView 示例收集](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)。  
  
 [!code-csharp[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#removeitem)]
 [!code-vb[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#removeitem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要移除的项的位置。</param>
        <summary>从集合中删除指定位置的项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `index` 是集合视图，而不是集合相对路径。  例如，如果集合具有 10 项，并且视图具有<xref:System.ComponentModel.ICollectionView.Filter%2A>以便 7 项将出现，有效的值的`index`为 0 到 6。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> 小于 0 或大于集合视图中的项数。</exception>
      </Docs>
    </Member>
  </Members>
</Type>