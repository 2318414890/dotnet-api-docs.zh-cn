<Type Name="EventHandlerList" FullName="System.ComponentModel.EventHandlerList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="54d55fe8b2d989f513c481d8ef3501b7d724e322" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36703648" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EventHandlerList : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventHandlerList extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.EventHandlerList" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventHandlerList&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventHandlerList sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type EventHandlerList = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="bdf97-101">提供一个简单的委托列表。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bdf97-101">Provides a simple list of delegates.</span>
      </span>
      <span data-ttu-id="bdf97-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bdf97-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bdf97-103">此类使用的线性搜索算法的委托列表中查找条目。</span><span class="sxs-lookup"><span data-stu-id="bdf97-103">This class uses a linear search algorithm to find entries in the list of delegates.</span></span> <span data-ttu-id="bdf97-104">使用大量的项时，线性搜索算法是低效。</span><span class="sxs-lookup"><span data-stu-id="bdf97-104">A linear search algorithm is inefficient when working with a large number of entries.</span></span> <span data-ttu-id="bdf97-105">因此，当你有大型列表，查找项是慢速的。</span><span class="sxs-lookup"><span data-stu-id="bdf97-105">Therefore, when you have a large list, finding entries is slow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bdf97-106">有关使用示例<xref:System.ComponentModel.EventHandlerList>，请参阅[如何： 处理多个事件使用事件属性](~/docs/standard/events/how-to-handle-multiple-events-using-event-properties.md)。</span><span class="sxs-lookup"><span data-stu-id="bdf97-106">For an example of using an <xref:System.ComponentModel.EventHandlerList>, see [How to: Handle Multiple Events Using Event Properties](~/docs/standard/events/how-to-handle-multiple-events-using-event-properties.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHandlerList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventHandlerList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventHandlerList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bdf97-107">初始化 <see cref="T:System.ComponentModel.EventHandlerList" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdf97-107">Initializes a new instance of the <see cref="T:System.ComponentModel.EventHandlerList" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (object key, Delegate value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(object key, class System.Delegate value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHandler (key As Object, value As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Object ^ key, Delegate ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddHandler : obj * Delegate -&gt; unit" Usage="eventHandlerList.AddHandler (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="bdf97-108">拥有该事件的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdf97-108">The object that owns the event.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="bdf97-109">要添加到列表的委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdf97-109">The delegate to add to the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bdf97-110">将委托添加到列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdf97-110">Adds a delegate to the list.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandlers">
      <MemberSignature Language="C#" Value="public void AddHandlers (System.ComponentModel.EventHandlerList listToAddFrom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandlers(class System.ComponentModel.EventHandlerList listToAddFrom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHandlers (listToAddFrom As EventHandlerList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandlers(System::ComponentModel::EventHandlerList ^ listToAddFrom);" />
      <MemberSignature Language="F#" Value="member this.AddHandlers : System.ComponentModel.EventHandlerList -&gt; unit" Usage="eventHandlerList.AddHandlers listToAddFrom" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listToAddFrom" Type="System.ComponentModel.EventHandlerList" />
      </Parameters>
      <Docs>
        <param name="listToAddFrom">
          <span data-ttu-id="bdf97-111">要添加的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdf97-111">The list to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bdf97-112">向当前列表添加委托的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdf97-112">Adds a list of delegates to the current list.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventHandlerList.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="eventHandlerList.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bdf97-113">处置委托列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdf97-113">Disposes the delegate list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bdf97-114">在完成使用 <xref:System.ComponentModel.EventHandlerList.Dispose%2A> 后，应调用 <xref:System.ComponentModel.EventHandlerList>。</span><span class="sxs-lookup"><span data-stu-id="bdf97-114">Call <xref:System.ComponentModel.EventHandlerList.Dispose%2A> when you are finished using the <xref:System.ComponentModel.EventHandlerList>.</span></span> <span data-ttu-id="bdf97-115"><xref:System.ComponentModel.EventHandlerList.Dispose%2A> 方法使 <xref:System.ComponentModel.EventHandlerList> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="bdf97-115">The <xref:System.ComponentModel.EventHandlerList.Dispose%2A> method leaves the <xref:System.ComponentModel.EventHandlerList> in an unusable state.</span></span> <span data-ttu-id="bdf97-116">在调用<xref:System.ComponentModel.EventHandlerList.Dispose%2A>，必须释放对所有引用<xref:System.ComponentModel.EventHandlerList>以便可以通过垃圾回收回收其占用的内存。</span><span class="sxs-lookup"><span data-stu-id="bdf97-116">After calling <xref:System.ComponentModel.EventHandlerList.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.EventHandlerList> so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bdf97-117">每次释放对 <xref:System.ComponentModel.EventHandlerList.Dispose%2A> 的最后一个引用前，均应调用 <xref:System.ComponentModel.EventHandlerList>。</span><span class="sxs-lookup"><span data-stu-id="bdf97-117">Always call <xref:System.ComponentModel.EventHandlerList.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.EventHandlerList>.</span></span> <span data-ttu-id="bdf97-118">否则为资源<xref:System.ComponentModel.EventHandlerList>是使用不会被释放之前垃圾集合调用<xref:System.ComponentModel.EventHandlerList>对象的析构函数。</span><span class="sxs-lookup"><span data-stu-id="bdf97-118">Otherwise, the resources the <xref:System.ComponentModel.EventHandlerList> is using will not be freed until garbage collection calls the <xref:System.ComponentModel.EventHandlerList> object's destructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Delegate this[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Delegate Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.EventHandlerList.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As Object) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Delegate ^ default[System::Object ^] { Delegate ^ get(System::Object ^ key); void set(System::Object ^ key, Delegate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : Delegate with get, set" Usage="System.ComponentModel.EventHandlerList.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="bdf97-119">要在列表中查找的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdf97-119">An object to find in the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bdf97-120">获取或设置指定对象的委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdf97-120">Gets or sets the delegate for the specified object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bdf97-121">指定键的委托；如果委托不存在，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdf97-121">The delegate for the specified key, or <see langword="null" /> if a delegate does not exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bdf97-122">当在列表中未找到此项并提供委托来设置的值的密钥，然后添加到列表的顶部密钥并将其分配给该委托作为其值。</span><span class="sxs-lookup"><span data-stu-id="bdf97-122">When the key is not found in the list and you provide a delegate to set the value of the key, then the key is added to the top of the list and assigned to the delegate as its value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventHandlerList" />
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (object key, Delegate value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveHandler(object key, class System.Delegate value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveHandler (key As Object, value As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveHandler(System::Object ^ key, Delegate ^ value);" />
      <MemberSignature Language="F#" Value="member this.RemoveHandler : obj * Delegate -&gt; unit" Usage="eventHandlerList.RemoveHandler (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="bdf97-123">拥有该事件的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdf97-123">The object that owns the event.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="bdf97-124">要从列表中移除的委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdf97-124">The delegate to remove from the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bdf97-125">从列表中将委托移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdf97-125">Removes a delegate from the list.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>