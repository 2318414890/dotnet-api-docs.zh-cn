<Type Name="TypeConverter" FullName="System.ComponentModel.TypeConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="29784c7bb8db50596e86f55caea973624c84e3d4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30380651" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="dcb1c-101">提供一种将值的类型转换为其他类型以及访问标准值和子属性的统一方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="dcb1c-101">Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-102">最常见类型是转换器的指与文本表示形式之间来回进行转换。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-102">The most common type of converter is one that converts to and from a text representation.</span></span> <span data-ttu-id="dcb1c-103">类的类型转换器绑定到与类<xref:System.ComponentModel.TypeConverterAttribute>。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-103">The type converter for a class is bound to the class with a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="dcb1c-104">除非被重写此特性，从此类继承的所有类作为基类都使用相同的类型转换器。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-104">Unless this attribute is overridden, all classes that inherit from this class use the same type converter as the base class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dcb1c-105">用于常规类型系统开销不访问的类型转换器直接。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-105">For general type system purposes, do not access a type converter directly.</span></span> <span data-ttu-id="dcb1c-106">相反，通过使用访问相应的转换器<xref:System.ComponentModel.TypeDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-106">Instead, access the appropriate converter by using <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="dcb1c-107">有关详细信息，请参阅提供的代码示例。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-107">For more information, see the code examples provided.</span></span>  
  
 <span data-ttu-id="dcb1c-108">**请注意**对于 XAML 用途，XAML 处理器搜索<xref:System.ComponentModel.TypeConverterAttribute>直接，而不是转<xref:System.ComponentModel.TypeDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-108">**Note** For XAML purposes, a XAML processor searches for the <xref:System.ComponentModel.TypeConverterAttribute> directly, instead of going through <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="dcb1c-109">在你希望的情况下<xref:System.ComponentModel.TypeDescriptor>实例从代码中，或在 WPF 中创建的共享的实例其中资源，它是可接受的构造直接无需引用<xref:System.ComponentModel.TypeDescriptor>或其他反射和类型系统支持。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-109">For cases where you do want a <xref:System.ComponentModel.TypeDescriptor> instance from code, or where you create a shared instance in WPF resources, it is acceptable to construct it directly without referencing <xref:System.ComponentModel.TypeDescriptor> or other reflection and type system support.</span></span>  
  
 <span data-ttu-id="dcb1c-110">类派生自<xref:System.ComponentModel.TypeConverter>经常被引用 XAML 处理器如何将属性或初始化文本值转换从标记 （它是本质上是一个字符串） 的一部分，并在生成的运行时表示的对象。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-110">Classes derived from <xref:System.ComponentModel.TypeConverter> are often referenced as part of how a XAML processor converts an attribute or initialization text value from markup (which is inherently a string) and generates an object for a run-time representation.</span></span> <span data-ttu-id="dcb1c-111">想通常针对的 XAML 支持类型转换行为的自定义类型作者实现<xref:System.ComponentModel.TypeConverter>支持其自己唯一的类`ConvertFrom`从字符串的行为。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-111">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports their own unique `ConvertFrom` behavior from a string.</span></span> <span data-ttu-id="dcb1c-112">此行为使从提供为 XAML 特性值的字符串的类型转换，XAML 处理器提供所需从字符串中，创建一个对象，以便可以在分析的对象图中生成对象的支持。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-112">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="dcb1c-113">由自定义的类型或自定义类型的成员应用<xref:System.ComponentModel.TypeConverterAttribute>定义，且该特性引用自定义<xref:System.ComponentModel.TypeConverter>实现。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-113">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span> <span data-ttu-id="dcb1c-114">有关详细信息，请参阅[类型转换器 XAML 概述](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-114">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb1c-115">下面的代码示例演示如何创建的类型转换器的实例并将其绑定到的类。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-115">The following code example shows how to create an instance of a type converter and bind it to a class.</span></span> <span data-ttu-id="dcb1c-116">实现该转换器的类`MyClassConverter`，必须从继承<xref:System.ComponentModel.TypeConverter>类。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-116">The class implementing the converter, `MyClassConverter`, must inherit from the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TypeConverter Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#1)]
 [!code-vb[Classic TypeConverter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#1)]  
  
 <span data-ttu-id="dcb1c-117">在必须有一个枚举的属性，请检查以确定一个枚举值设置属性之前是否有效。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-117">When you have a property that has an enumeration, check to see whether an enumeration value is valid before setting the property.</span></span> <span data-ttu-id="dcb1c-118">下面的代码示例要求枚举调用`MyPropertyEnum`已声明。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-118">The next code example requires that an enumeration called `MyPropertyEnum` has been declared.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#2)]
 [!code-csharp[Classic TypeConverter Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#2)]
 [!code-vb[Classic TypeConverter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#2)]  
  
 <span data-ttu-id="dcb1c-119">另一个常见的类型转换器用法是将对象转换为字符串。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-119">Another common type converter usage is to convert an object to a string.</span></span> <span data-ttu-id="dcb1c-120">下面的代码示例输出的名称的<xref:System.Drawing.Color>变量中存储`c`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-120">The following code example prints out the name of the <xref:System.Drawing.Color> stored in the variable `c`.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#3)]
 [!code-csharp[Classic TypeConverter Example#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#3)]
 [!code-vb[Classic TypeConverter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#3)]  
  
 <span data-ttu-id="dcb1c-121">此外可以使用的类型转换器将值转换从其名称，如下面的代码示例中所示。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-121">You can also use a type converter to convert a value from its name, as shown in the next code example.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#4)]
 [!code-csharp[Classic TypeConverter Example#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#4)]
 [!code-vb[Classic TypeConverter Example#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#4)]  
  
 <span data-ttu-id="dcb1c-122">在下面的代码示例中，你可以使用的类型转换器来输出的对象支持的标准值集。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-122">In the following code example, you can use a type converter to print out the set of standard values that the object supports.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#5)]
 [!code-csharp[Classic TypeConverter Example#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#5)]
 [!code-vb[Classic TypeConverter Example#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#5)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="dcb1c-123">继承自<see cref="T:System.ComponentModel.TypeConverter" />实现您自己的转换需求。</span>
        <span class="sxs-lookup">
          <span data-stu-id="dcb1c-123">Inherit from <see cref="T:System.ComponentModel.TypeConverter" /> to implement your own conversion requirements.</span>
        </span>
        <span data-ttu-id="dcb1c-124">当从此类继承时，您可以重写以下方法：</span>
        <span class="sxs-lookup">
          <span data-stu-id="dcb1c-124">When you inherit from this class, you can override the following methods:</span>
        </span>  
  
-   <span data-ttu-id="dcb1c-125">若要支持自定义类型转换，重写<see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />， <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />， <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />，和<see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />方法。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-125">To support custom type conversion, override the <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, and <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> methods.</span></span>  
  
-   <span data-ttu-id="dcb1c-126">若要转换的类型，必须重新创建的对象，以更改其值，重写<see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />和<see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />方法。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-126">To convert types that must re-create the object to change its value, override the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> methods.</span></span>  
  
-   <span data-ttu-id="dcb1c-127">若要转换支持属性的类型，请重写<see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />和<see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />方法。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-127">To convert types that support properties, override the <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> methods.</span></span><span data-ttu-id="dcb1c-128">如果要转换的类不具有属性，并且你需要实现属性，可以使用<see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />类作为实现的属性描述符的基础。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-128">If the class you are converting does not have properties, and you need to implement properties, you can use the <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> class as a base for implementing the property descriptors.</span></span><span data-ttu-id="dcb1c-129">继承自<see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />，必须重写<see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" />和<see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" />方法。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-129">When you inherit from <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, you must override the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> and <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods.</span></span>  
  
-   <span data-ttu-id="dcb1c-130">若要转换支持标准值的类型，请重写<see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />， <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />，<see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />和<see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />方法。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-130">To convert types that support standard values, override the <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> and <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> methods.</span></span><block subset="none" type="note"><para><span data-ttu-id="dcb1c-131">派生的类型可能标记为<see langword="internal" />或<see langword="private" />，但你类型的实例可用于创建<see cref="T:System.ComponentModel.TypeDescriptor" />类。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-131">Your derived type might be marked as <see langword="internal" /> or <see langword="private" />, but an instance of your type can be created with the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</span></span><span data-ttu-id="dcb1c-132">不写入假定调用方的不安全代码是受信任。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-132">Do not write insecure code by assuming the caller is trusted.</span></span><span data-ttu-id="dcb1c-133">而是假设的调用方可能在部分信任环境中创建类型的实例。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-133">Assume instead that callers might create instances of your type in partial trust.</span></span></para></block><span data-ttu-id="dcb1c-134">有关常规 (非 XAML) 目的的类型转换器的详细信息，请参阅[如何： 实现类型转换器](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)或[通用类型转换](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada)。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-134">For more information about type converters for general (non-XAML) purposes, see [How to: Implement a Type Converter](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56) or [Generalized Type Conversion](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</span></span></para>
    </block>
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
    <altmember cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dcb1c-135">初始化 <see cref="T:System.ComponentModel.TypeConverter" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-135">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dcb1c-136">返回该转换器是否可以将一种类型的对象转换为此转换器的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-136">Returns whether this converter can convert an object of one type to the type of this converter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public bool CanConvertFrom (Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertFrom(class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertFrom (sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertFrom(Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="sourceType">
          <span data-ttu-id="dcb1c-137">一个 <see cref="T:System.Type" />，表示要转换的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-137">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-138">返回该转换器是否可以将给定类型的对象转换为此转换器的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-138">Returns whether this converter can convert an object of the given type to the type of this converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-139">如果该转换器能够执行转换，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-139">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-140">当在此类中实现时，此方法始终返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-140">As implemented in this class, this method always returns `false`.</span></span> <span data-ttu-id="dcb1c-141">它将永远不会返回`true`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-141">It never returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="dcb1c-142">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-142">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="dcb1c-143">一个 <see cref="T:System.Type" />，表示要转换的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-143">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-144">返回该转换器是否可以使用指定上下文将给定类型的对象转换为此转换器的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-144">Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-145">如果该转换器能够执行转换，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-145">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-146">在此类中实现时，此方法返回`false`，除非`sourceType`是<xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-146">As implemented in this class, this method returns `false`, unless `sourceType` is an <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dcb1c-147">重写该方法以提供您自己的转换需求。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-147">Override this method to provide your own conversion requirements.</span>
            </span>
            <span data-ttu-id="dcb1c-148">使用 <paramref name="context" /> 参数提取有关调用此转换器的环境的附加信息。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-148">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="dcb1c-149">此参数可以为<see langword="null" />，因此总是需要检查。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-149">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="dcb1c-150">同样，上下文对象的属性可以返回 <see langword="null" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-150">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dcb1c-151">返回此转换器是否可将该对象转换为指定的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-151">Returns whether this converter can convert the object to the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public bool CanConvertTo (Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertTo(class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertTo (destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertTo(Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="destinationType">
          <span data-ttu-id="dcb1c-152">一个 <see cref="T:System.Type" />，表示你希望转换为的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-152">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-153">返回此转换器是否可将该对象转换为指定的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-153">Returns whether this converter can convert the object to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-154">如果该转换器能够执行转换，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-154">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-155">如果`destinationType`是一个字符串的默认实现<xref:System.ComponentModel.TypeConverter.CanConvertTo%2A>始终返回`true`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-155">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="dcb1c-156">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-156">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="dcb1c-157">一个 <see cref="T:System.Type" />，表示你希望转换为的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-157">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-158">返回此转换器能否使用指定上下文将对象转换为指定类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-158">Returns whether this converter can convert the object to the specified type, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-159">如果该转换器能够执行转换，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-159">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-160">使用 `context` 参数提取有关调用此转换器的环境的附加信息。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-160">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="dcb1c-161">此参数可以为`null`，因此总是需要检查。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-161">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="dcb1c-162">同样，上下文对象的属性可以返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-162">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="dcb1c-163">如果`destinationType`是一个字符串的默认实现<xref:System.ComponentModel.TypeConverter.CanConvertTo%2A>始终返回`true`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-163">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dcb1c-164">重写该方法以提供您自己的转换需求。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-164">Override this method to provide your own conversion requirements.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dcb1c-165">将给定值转换为此转换器的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-165">Converts the given value to the type of this converter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public object ConvertFrom (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFrom(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFrom (value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFrom(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="dcb1c-166">要转换的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-166">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-167">将给定值转换为此转换器的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-167">Converts the given value to the type of this converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-168">一个 <see cref="T:System.Object" />，它表示转换后的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-168">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dcb1c-169">无法执行转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-169">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public virtual object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="dcb1c-170">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-170">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="dcb1c-171">要用作当前区域性的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-171">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="dcb1c-172">要转换的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-172">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-173">使用指定的上下文和区域性信息将给定对象转换为此转换器的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-173">Converts the given object to the type of this converter, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-174">一个 <see cref="T:System.Object" />，它表示转换后的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-174">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-175">想通常针对的 XAML 支持类型转换行为的自定义类型作者实现<xref:System.ComponentModel.TypeConverter>支持的类<xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>从字符串的行为。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-175">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="dcb1c-176">此行为使从提供为 XAML 特性值的字符串的类型转换，XAML 处理器提供所需从字符串中，创建一个对象，以便可以在分析的对象图中生成对象的支持。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-176">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="dcb1c-177">由自定义的类型或自定义类型的成员应用<xref:System.ComponentModel.TypeConverterAttribute>定义，且该特性引用自定义<xref:System.ComponentModel.TypeConverter>实现。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-177">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span>  
  
 <span data-ttu-id="dcb1c-178">对于 XAML 用途，你不通常提供分支实现基于`culture`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-178">For XAML purposes, you do not typically provide branching implementations based on `culture`.</span></span> <span data-ttu-id="dcb1c-179">这是因为 XAML 进行预编译后在开发环境上下文中，并且运行时的区域性特定信息 XAML 不适用于 XAML 类型转换。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-179">This is because XAML is precompiled in a development environment context, and culture-specific information for runtime XAML is not relevant for XAML type conversion.</span></span> <span data-ttu-id="dcb1c-180">有关详细信息，请参阅[类型转换器 XAML 概述](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-180">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dcb1c-181">无法执行转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-181">The conversion cannot be performed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dcb1c-182">重写该方法以提供您自己的转换需求。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-182">Override this method to provide your own conversion requirements.</span>
            </span>
            <span data-ttu-id="dcb1c-183">使用 <paramref name="context" /> 参数提取有关调用此转换器的环境的附加信息。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-183">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="dcb1c-184">此参数可以为<see langword="null" />，因此总是需要检查。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-184">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="dcb1c-185">同样，上下文对象的属性可以返回 <see langword="null" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-185">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
            <span data-ttu-id="dcb1c-186">用于支持 XAML 和自定义类型的类型转换器的实现模式，请参阅[类型转换器 XAML 概述](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-186">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dcb1c-187">使用不变区域性将该值转换为此转换器的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-187">Converts the value to a type of this converter, using the invariant culture.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="dcb1c-188">要转换的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-188">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-189">使用不变区域性将给定字符串转换为此转换器的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-189">Converts the given string to the type of this converter, using the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-190">一个 <see cref="T:System.Object" />，表示已转换的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-190">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-191">默认实现始终返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-191">The default implementation always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dcb1c-192">无法执行转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-192">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="dcb1c-193">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-193">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="dcb1c-194">要转换的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-194">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-195">使用不变区域性和指定上下文将给定字符串转换为此转换器的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-195">Converts the given string to the type of this converter, using the invariant culture and the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-196">一个 <see cref="T:System.Object" />，表示已转换的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-196">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-197">如果字符串无法转换为适当的对象，引发异常。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-197">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="dcb1c-198">默认实现始终返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-198">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="dcb1c-199">使用 `context` 参数提取有关调用此转换器的环境的附加信息。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-199">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="dcb1c-200">此参数可以为`null`，因此总是需要检查。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-200">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="dcb1c-201">同样，上下文对象的属性可以返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-201">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dcb1c-202">无法执行转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-202">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dcb1c-203">将指定文本转换为对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-203">Converts the specified text to an object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="dcb1c-204">要转换的对象的文本表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-204">The text representation of the object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-205">将指定文本转换为对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-205">Converts the specified text to an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-206">一个 <see cref="T:System.Object" />，表示已转换的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-206">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-207">默认实现始终返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-207">The default implementation always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb1c-208">此函数的示例，请参阅<xref:System.ComponentModel.TypeConverter>类。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-208">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dcb1c-209">该字符串不能转换为适当的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-209">The string cannot be converted into the appropriate object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="dcb1c-210">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-210">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="dcb1c-211">要转换的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-211">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-212">使用指定的上下文将给定的文本转换为对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-212">Converts the given text to an object, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-213">一个 <see cref="T:System.Object" />，表示已转换的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-213">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-214">如果字符串无法转换为适当的对象，引发异常。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-214">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="dcb1c-215">默认实现始终返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-215">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="dcb1c-216">使用 `context` 参数提取有关调用此转换器的环境的附加信息。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-216">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="dcb1c-217">此参数可以为`null`，因此总是需要检查。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-217">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="dcb1c-218">同样，上下文对象的属性可以返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-218">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dcb1c-219">无法执行转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-219">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, culture As CultureInfo, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="dcb1c-220">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-220">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="dcb1c-221">
            <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-221">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="dcb1c-222">如果传递 <see langword="null" />，则采用当前区域性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-222">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="dcb1c-223">要转换的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-223">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-224">使用指定的上下文和区域性信息将给定的文本转换为对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-224">Converts the given text to an object, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-225">一个 <see cref="T:System.Object" />，表示已转换的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-225">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-226">如果字符串无法转换为适当的对象，引发异常。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-226">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="dcb1c-227">默认实现始终返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-227">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="dcb1c-228">使用 `context` 参数提取有关调用此转换器的环境的附加信息。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-228">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="dcb1c-229">此参数可以为`null`，因此总是需要检查。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-229">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="dcb1c-230">同样，上下文对象的属性可以返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-230">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dcb1c-231">无法执行转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-231">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dcb1c-232">将给定值对象转换为指定的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-232">Converts the given value object to the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public object ConvertTo (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertTo(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertTo (value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertTo(System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="dcb1c-233">要转换的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-233">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="dcb1c-234">
            <c>value</c> 参数所要转换成的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-234">The <see cref="T:System.Type" /> to convert the <c>value</c> parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-235">使用参数将给定的值对象转换为指定的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-235">Converts the given value object to the specified type, using the arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-236">一个 <see cref="T:System.Object" />，它表示转换后的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-236">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-237">要转换与的最常见类型是一个字符串对象。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-237">The most common type to convert to and from is a string object.</span></span> <span data-ttu-id="dcb1c-238">此实现中调用<xref:System.Object.ToString%2A>对象的对象是否有效，并且如果目标类型为字符串。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-238">This implementation calls <xref:System.Object.ToString%2A> on the object, if the object is valid and if the destination type is a string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dcb1c-239">
            <paramref name="destinationType" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-239">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dcb1c-240">无法执行转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-240">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public virtual object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="dcb1c-241">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-241">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="dcb1c-242">
            <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-242">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="dcb1c-243">如果传递 <see langword="null" />，则采用当前区域性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-243">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="dcb1c-244">要转换的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-244">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="dcb1c-245">
            <c>value</c> 参数所要转换成的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-245">The <see cref="T:System.Type" /> to convert the <c>value</c> parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-246">使用指定的上下文和区域性信息将给定值对象转换为指定的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-246">Converts the given value object to the specified type, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-247">一个 <see cref="T:System.Object" />，它表示转换后的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-247">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-248">最常见的转换类型是与字符串对象的相互转换。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-248">The most common types to convert are to and from a string object.</span></span> <span data-ttu-id="dcb1c-249">此实现中调用<xref:System.Object.ToString%2A>对象上的对象是否有效，并且如果目标类型为字符串。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-249">This implementation calls <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is a string.</span></span>  
  
 <span data-ttu-id="dcb1c-250">使用 `context` 参数提取有关调用此转换器的环境的附加信息。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-250">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="dcb1c-251">此参数可以为`null`，因此总是需要检查。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-251">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="dcb1c-252">同样，上下文对象的属性可以返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-252">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="dcb1c-253">想通常针对的 XAML 支持类型转换行为的自定义类型作者实现<xref:System.ComponentModel.TypeConverter>支持的类<xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>从字符串的行为。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-253">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="dcb1c-254">可能还会实现这些类型转换器<xref:System.ComponentModel.TypeConverter.ConvertTo%2A>以支持回 XAML 序列化。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-254">These type converters might also implement <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> to support serialization back to XAML.</span></span>  
  
 <span data-ttu-id="dcb1c-255">某些 XAML 序列化方案不能充分解决与<xref:System.ComponentModel.TypeConverter>单独。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-255">Some XAML serialization scenarios cannot be adequately addressed with <xref:System.ComponentModel.TypeConverter> alone.</span></span> <span data-ttu-id="dcb1c-256">在这些情况下，可能有必要还定义<xref:System.Windows.Markup.ValueSerializer>用于处理的序列化用例，否则将由<xref:System.ComponentModel.TypeConverter.ConvertTo%2A>。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-256">In these cases, it may be necessary to also define a <xref:System.Windows.Markup.ValueSerializer> that handles the serialization cases that would otherwise be handled by <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span></span> <span data-ttu-id="dcb1c-257">有关详情，请参阅<xref:System.Windows.Markup.ValueSerializer>。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-257">For more information, see <xref:System.Windows.Markup.ValueSerializer>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dcb1c-258">
            <paramref name="destinationType" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-258">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dcb1c-259">无法执行转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-259">The conversion cannot be performed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dcb1c-260">重写该方法以提供您自己的转换需求。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-260">Override this method to provide your own conversion requirements.</span>
            </span>
            <span data-ttu-id="dcb1c-261">用于支持 XAML 和自定义类型的类型转换器的实现模式，请参阅[类型转换器 XAML 概述](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-261">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dcb1c-262">将指定值转换为区域性不变的字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-262">Converts the specified value to a culture-invariant string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="dcb1c-263">要转换的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-263">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-264">将指定值转换为区域性不变的字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-264">Converts the specified value to a culture-invariant string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-265">
            <see cref="T:System.String" />，表示已转换的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-265">A <see cref="T:System.String" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-266">`context`参数可用于提取有关从中调用该转换器的环境的附加信息。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-266">The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked.</span></span> <span data-ttu-id="dcb1c-267">此参数可能为 `null`，因此总是需要检查。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-267">This can be `null`, so always check.</span></span> <span data-ttu-id="dcb1c-268">同样，上下文对象的属性可以返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-268">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="dcb1c-269">具体取决于值格式化程序的实现，它可以将返回的字符串传递回值格式化程序可以重新创建对象的实例。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-269">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dcb1c-270">无法执行转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-270">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="dcb1c-271">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-271">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="dcb1c-272">要转换的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-272">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-273">使用指定的上下文将指定的值转换为区域性不变的字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-273">Converts the specified value to a culture-invariant string representation, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-274">
            <see cref="T:System.String" />，表示已转换的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-274">A <see cref="T:System.String" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-275">使用 `context` 参数提取有关调用此转换器的环境的附加信息。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-275">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="dcb1c-276">此参数可以为`null`，因此总是需要检查。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-276">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="dcb1c-277">同样，上下文对象的属性可以返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-277">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="dcb1c-278">具体取决于值格式化程序的实现，它可以将返回的字符串传递回值格式化程序可以重新创建对象的实例。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-278">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dcb1c-279">无法执行转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-279">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dcb1c-280">将指定值转换为字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-280">Converts the specified value to a string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="dcb1c-281">要转换的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-281">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-282">将指定值转换为字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-282">Converts the specified value to a string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-283">一个 <see cref="T:System.Object" />，它表示转换后的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-283">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-284">具体取决于值格式化程序的实现，它可以将返回的字符串传递回值格式化程序可以重新创建对象的实例。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-284">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb1c-285">此函数的示例，请参阅<xref:System.ComponentModel.TypeConverter>类。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-285">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dcb1c-286">无法执行转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-286">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="dcb1c-287">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-287">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="dcb1c-288">要转换的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-288">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-289">使用给定的上下文将给定的值转换为字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-289">Converts the given value to a string representation, using the given context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-290">一个 <see cref="T:System.Object" />，它表示转换后的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-290">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-291">使用 `context` 参数提取有关调用此转换器的环境的附加信息。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-291">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="dcb1c-292">此参数可以为`null`，因此总是需要检查。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-292">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="dcb1c-293">同样，上下文对象的属性可以返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-293">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="dcb1c-294">具体取决于值格式化程序的实现，它可以将返回的字符串传递回值格式化程序可以重新创建对象的实例。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-294">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dcb1c-295">无法执行转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-295">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="dcb1c-296">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-296">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="dcb1c-297">
            <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-297">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="dcb1c-298">如果传递 <see langword="null" />，则采用当前区域性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-298">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="dcb1c-299">要转换的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-299">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-300">使用指定的上下文和区域性信息将给定的值转换为字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-300">Converts the given value to a string representation, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-301">一个 <see cref="T:System.Object" />，它表示转换后的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-301">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-302">使用 `context` 参数提取有关调用此转换器的环境的附加信息。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-302">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="dcb1c-303">此参数可以为`null`，因此总是需要检查。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-303">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="dcb1c-304">同样，上下文对象的属性可以返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-304">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="dcb1c-305">具体取决于值格式化程序的实现，它可以将返回的字符串传递回值格式化程序可以重新创建对象的实例。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-305">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dcb1c-306">无法执行转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-306">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dcb1c-307">在给定 <see cref="T:System.Object" /> 的一组属性值的情况下重新创建该对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-307">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateInstance(class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::Collections::IDictionary ^ propertyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="propertyValues">
          <span data-ttu-id="dcb1c-308">一个 <see cref="T:System.Collections.IDictionary" />，表示新属性值的字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-308">An <see cref="T:System.Collections.IDictionary" /> that represents a dictionary of new property values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-309">在给定 <see cref="T:System.Object" /> 的一组属性值的情况下重新创建该对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-309">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-310">如果表示给定 <see cref="T:System.Collections.IDictionary" />，则为 <see cref="T:System.Object" />，或如果无法创建对象，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-310">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span>
          </span>
          <span data-ttu-id="dcb1c-311">此方法始终返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-311">This method always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-312">使用此方法的不可变的但你想要提供可更改属性的对象。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-312">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 <span data-ttu-id="dcb1c-313">提供的字典`propertyValues`参数有一系列名称/值对，一个用于每个属性返回从<xref:System.ComponentModel.TypeConverter.GetProperties%2A>。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-313">The dictionary provided by the `propertyValues` parameter has a series of name/value pairs, one for each property returned from <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (context As ITypeDescriptorContext, propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::ComponentModel::ITypeDescriptorContext ^ context, System::Collections::IDictionary ^ propertyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="dcb1c-314">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-314">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="propertyValues">
          <span data-ttu-id="dcb1c-315">新属性值的 <see cref="T:System.Collections.IDictionary" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-315">An <see cref="T:System.Collections.IDictionary" /> of new property values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-316">给定该对象的一组属性值，使用指定上下文创建与此 <see cref="T:System.ComponentModel.TypeConverter" /> 相关联的类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-316">Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-317">如果表示给定 <see cref="T:System.Collections.IDictionary" />，则为 <see cref="T:System.Object" />，或如果无法创建对象，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-317">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span>
          </span>
          <span data-ttu-id="dcb1c-318">此方法始终返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-318">This method always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-319">使用此方法的不可变的但你想要提供可更改属性的对象。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-319">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dcb1c-320">如果你想要转换的类型必须重新创建的对象，以更改其值，重写此方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-320">Override this method if the type you want to convert must re-create the object to change its value.</span>
            </span>
            <span data-ttu-id="dcb1c-321">使用 <paramref name="context" /> 参数提取有关调用此转换器的环境的附加信息。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-321">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="dcb1c-322">此参数可以为<see langword="null" />，因此总是需要检查。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-322">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="dcb1c-323">同样，上下文对象的属性可以返回 <see langword="null" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-323">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
            <span data-ttu-id="dcb1c-324">提供的字典<paramref name="propertyValues" />参数有一系列名称/值对，一个用于每个属性返回从<see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-324">The dictionary provided by the <paramref name="propertyValues" /> parameter has a series of name/value pairs, one for each property returned from <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="dcb1c-325">要转换的 <see cref="T:System.Object" />，或者，如果该对象不可用，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-325">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-326">返回当转换无法执行时所引发的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-326">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-327">一个 <see cref="T:System.Exception" />，表示当无法执行转换时引发的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-327">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dcb1c-328">由此方法自动引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-328">Automatically thrown by this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="dcb1c-329">要转换的 <see cref="T:System.Object" />，或者，如果该对象不可用，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-329">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="dcb1c-330">一个 <see cref="T:System.Type" />，表示转换尝试转换到的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-330">A <see cref="T:System.Type" /> that represents the type the conversion was trying to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-331">返回当转换无法执行时所引发的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-331">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-332">一个 <see cref="T:System.Exception" />，表示当无法执行转换时引发的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-332">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dcb1c-333">由此方法自动引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-333">Automatically thrown by this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCreateInstanceSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dcb1c-334">返回更改此对象的值是否求调用 <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> 方法来创建新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-334">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public bool GetCreateInstanceSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetCreateInstanceSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCreateInstanceSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetCreateInstanceSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dcb1c-335">返回更改此对象的值是否求调用 <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> 方法来创建新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-335">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-336">如果更改此对象的属性需要调用 <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> 来创建新值，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-336">
              <see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCreateInstanceSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetCreateInstanceSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="dcb1c-337">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-337">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-338">返回有关更改该对象上的某个值是否需要使用指定的上下文调用 <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> 以创建新值的情况。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-338">Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-339">如果更改此对象的属性需要调用 <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> 来创建新值，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-339">
              <see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-340">当在此类中实现时，此方法始终返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-340">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dcb1c-341">如果你想要转换的类型必须重新创建的对象，以更改其值，重写此方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-341">Override this method if the type you want to convert must re-create the object to change its value.</span>
            </span>
            <span data-ttu-id="dcb1c-342">使用 <paramref name="context" /> 参数提取有关调用此转换器的环境的附加信息。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-342">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="dcb1c-343">此参数可以为<see langword="null" />，因此总是需要检查。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-343">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="dcb1c-344">同样，上下文对象的属性可以返回 <see langword="null" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-344">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dcb1c-345">返回由值参数指定的数组类型的属性集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-345">Returns a collection of properties for the type of array specified by the value parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="dcb1c-346">一个 <see cref="T:System.Object" />，它指定要为其获取属性的数组类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-346">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-347">返回由值参数指定的数组类型的属性集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-347">Returns a collection of properties for the type of array specified by the value parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-348">具有为此数据类型公开的属性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />；或者如果没有属性，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-348">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-349">当在此类中实现时，此方法始终返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-349">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="dcb1c-350">默认情况下，类型不返回属性。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-350">By default, a type does not return properties.</span></span> <span data-ttu-id="dcb1c-351">可以调用此方法的简单实现<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>正确的数据类型。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-351">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (context As ITypeDescriptorContext, value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="dcb1c-352">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-352">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="dcb1c-353">一个 <see cref="T:System.Object" />，它指定要为其获取属性的数组类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-353">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-354">使用指定的上下文返回值参数指定的数组类型的属性的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-354">Returns a collection of properties for the type of array specified by the value parameter, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-355">具有为此数据类型公开的属性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />；或者如果没有属性，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-355">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-356">使用 `context` 参数提取有关调用此转换器的环境的附加信息。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-356">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="dcb1c-357">此参数可以为`null`，因此总是需要检查。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-357">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="dcb1c-358">同样，上下文对象的属性可以返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-358">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="dcb1c-359">当在此类中实现时，此方法始终返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-359">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="dcb1c-360">默认情况下，类型不返回属性。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-360">By default, a type does not return properties.</span></span> <span data-ttu-id="dcb1c-361">可以调用此方法的简单实现<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>正确的数据类型。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-361">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="dcb1c-362">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-362">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="dcb1c-363">一个 <see cref="T:System.Object" />，它指定要为其获取属性的数组类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-363">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="dcb1c-364">用作筛选器的 <see cref="T:System.Attribute" /> 类型数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-364">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-365">使用指定的上下文和特性返回由该值参数指定的数组类型的属性集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-365">Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-366">具有为此数据类型公开的属性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />；或者如果没有属性，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-366">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-367">当在此类中实现时，此方法始终返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-367">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dcb1c-368">如果你想要转换的类型支持属性重写此方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-368">Override this method if the type you want to convert supports properties.</span>
            </span>
            <span data-ttu-id="dcb1c-369">使用 <paramref name="context" /> 参数提取有关调用此转换器的环境的附加信息。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-369">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="dcb1c-370">此参数可以为<see langword="null" />，因此总是需要检查。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-370">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="dcb1c-371">同样，上下文对象的属性可以返回 <see langword="null" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-371">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
            <span data-ttu-id="dcb1c-372">属性数组用于筛选数组。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-372">The attributes array is used to filter the array.</span>
            </span>
            <span data-ttu-id="dcb1c-373">属性可以具有多种<see cref="T:System.Type" />和<see cref="T:System.Attribute" />对象。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-373">The attributes can have a mix of <see cref="T:System.Type" /> and <see cref="T:System.Attribute" /> objects.</span>
            </span>
            <span data-ttu-id="dcb1c-374">筛选由以下规则定义：</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-374">Filtering is defined by the following rules:</span>
            </span>  
  
-   <span data-ttu-id="dcb1c-375">A<see cref="T:System.Type" />视为通配符; 它与匹配的属性具有<see cref="T:System.Type" />属性其集中。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-375">A <see cref="T:System.Type" /> is treated as a wildcard; it matches a property that has the <see cref="T:System.Type" /> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="dcb1c-376">如果属性不具有<see cref="T:System.Attribute" />的同一个类，该属性不包括在返回数组中。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-376">If a property does not have an <see cref="T:System.Attribute" /> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="dcb1c-377">如果属性是实例<see cref="T:System.Attribute" />，该属性必须是完全匹配，或它不包括在返回的数组。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-377">If the attribute is an instance of <see cref="T:System.Attribute" />, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="dcb1c-378">如果<see cref="T:System.Attribute" />指定实例和它是默认属性，它也包括在返回的数组，即使存在的任何实例<see cref="T:System.Attribute" />属性中。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-378">If an <see cref="T:System.Attribute" /> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <see cref="T:System.Attribute" /> in the property.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertiesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dcb1c-379">返回此对象是否支持属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-379">Returns whether this object supports properties.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public bool GetPropertiesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetPropertiesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertiesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetPropertiesSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dcb1c-380">返回此对象是否支持属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-380">Returns whether this object supports properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-381">如果应调用 <see langword="true" /> 来查找此对象的属性，则为 <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-381">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-382">当在此类中实现时，此方法始终返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-382">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="dcb1c-383">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-383">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-384">通过使用指定的上下文，返回此对象是否支持属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-384">Returns whether this object supports properties, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-385">如果应调用 <see langword="true" /> 来查找此对象的属性，则为 <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-385">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-386">当在此类中实现时，此方法始终返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-386">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dcb1c-387">如果你想要转换的类型支持属性重写此方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-387">Override this method if the type you want to convert supports properties.</span>
            </span>
            <span data-ttu-id="dcb1c-388">使用 <paramref name="context" /> 参数提取有关调用此转换器的环境的附加信息。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-388">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="dcb1c-389">此参数可以为<see langword="null" />，因此总是需要检查。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-389">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="dcb1c-390">同样，上下文对象的属性可以返回 <see langword="null" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-390">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValues">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dcb1c-391">返回此类型转换器设计用于的数据类型的标准值集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-391">Returns a collection of standard values for the data type this type converter is designed for.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetStandardValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection GetStandardValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValues () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetStandardValues();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dcb1c-392">从默认的上下文返回此类型转换器设计用于的数据类型的标准值集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-392">Returns a collection of standard values from the default context for the data type this type converter is designed for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-393">含有一组标准的有效值的 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />，或者如果数据类型不支持一组标准值，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-393">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-394">当在此类中实现时，此方法始终返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-394">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="dcb1c-395">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用来提取有关从中调用此转换器的环境的附加信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-395">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked.</span>
          </span>
          <span data-ttu-id="dcb1c-396">此参数或其属性可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-396">This parameter or properties of this parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-397">当与格式上下文一起提供时，返回此类型转换器设计用于的数据类型的标准值集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-397">Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-398">包含标准有效值集的 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />；如果数据类型不支持标准值集，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-398">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-399">在中实现<xref:System.ComponentModel.TypeConverter>，此方法始终返回`null`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-399">As implemented in <xref:System.ComponentModel.TypeConverter>, this method always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb1c-400">此函数的示例，请参阅<xref:System.ComponentModel.TypeConverter>类。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-400">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dcb1c-401">如果你想要转换的类型支持标准值，重写此方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-401">Override this method if the type you want to convert supports standard values.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesExclusive">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dcb1c-402">返回从 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 返回的标准值的集合是否为独占列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-402">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesExclusive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesExclusive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesExclusive () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesExclusive();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dcb1c-403">返回从 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 返回的标准值的集合是否为独占列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-403">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-404">如果从 <see langword="true" /> 返回的 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 是可能值的穷举列表，则为 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />；如果还可能有其他值，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-404">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-405">当在此类中实现时，此方法始终返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-405">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="dcb1c-406">如果该列表是独占的（如在枚举数据类型中），则其他任何值都无效。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-406">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="dcb1c-407">如果该列表不是独占的，那么除 <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> 方法提供的标准值列表之外，可能还存在其他有效值。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-407">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="dcb1c-408">如果这些值是独占的，则 <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> 返回的列表不应允许编辑这些值。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-408">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="dcb1c-409">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-409">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-410">使用指定的上下文返回从 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 返回的标准值的集合是否为可能值的独占列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-410">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of possible values, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-411">如果从 <see langword="true" /> 返回的 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 是可能值的穷举列表，则为 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />；如果还可能有其他值，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-411">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-412">当在此类中实现时，此方法始终返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-412">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="dcb1c-413">如果该列表是独占的（如在枚举数据类型中），则其他任何值都无效。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-413">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="dcb1c-414">如果该列表不是独占的，那么除 <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> 方法提供的标准值列表之外，可能还存在其他有效值。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-414">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="dcb1c-415">如果这些值是独占的，则 <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> 返回的列表不应允许编辑这些值。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-415">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dcb1c-416">如果你想要转换的类型支持标准值，重写此方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-416">Override this method if the type you want to convert supports standard values.</span>
            </span>
            <span data-ttu-id="dcb1c-417">使用 <paramref name="context" /> 参数提取有关调用此转换器的环境的附加信息。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-417">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="dcb1c-418">此参数可以为<see langword="null" />，因此总是需要检查。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-418">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="dcb1c-419">同样，上下文对象的属性可以返回 <see langword="null" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-419">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dcb1c-420">返回此对象是否支持可以从列表中选取的标准值集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-420">Returns whether this object supports a standard set of values that can be picked from a list.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dcb1c-421">返回此对象是否支持可以从列表中选取的标准值集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-421">Returns whether this object supports a standard set of values that can be picked from a list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-422">如果应调用 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 来查找对象支持的一组公共值，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-422">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="dcb1c-423">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-423">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-424">使用指定的上下文返回此对象是否支持可以从列表中选取的标准值集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-424">Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-425">如果应调用 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 来查找对象支持的一组公共值，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-425">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-426">当在此类中实现时，此方法始终返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-426">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="dcb1c-427">使用 `context` 参数提取有关调用此转换器的环境的附加信息。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-427">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="dcb1c-428">此参数可以为`null`，因此总是需要检查。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-428">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="dcb1c-429">同样，上下文对象的属性可以返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-429">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dcb1c-430">如果你想要转换的类型支持标准值，重写此方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-430">Override this method if the type you want to convert supports standard values.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsValid">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dcb1c-431">返回给定值对象对于此类型是否有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-431">Returns whether the given value object is valid for this type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsValid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValid (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValid(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="dcb1c-432">要测试其有效性的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-432">The object to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-433">返回给定值对象对于此类型是否有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-433">Returns whether the given value object is valid for this type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-434">如果指定值对于该对象有效，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-434">
              <see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-435">从开始[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]、<xref:System.ComponentModel.TypeConverter.IsValid%2A>方法捕获异常从<xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>和<xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-435">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="dcb1c-436">如果输入的值类型导致<xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>返回`false`，或如果输入的值将导致<xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>以引发异常，<xref:System.ComponentModel.TypeConverter.IsValid%2A>方法返回`false`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-436">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="dcb1c-437">以允许旧行为，请将以下行插入应用程序，例如，application1.exe.config 的配置文件。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-437">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dcb1c-438">如果你想要转换的类型支持可验证的标准值，重写此方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-438">Override this method if the type you want to convert supports standard values that can be validated.</span>
            </span>
            <span data-ttu-id="dcb1c-439">
              <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />方法使用验证内类型的值而不是确定如果<paramref name="value" />可以转换为给定的类型。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-439">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span>
            </span>
            <span data-ttu-id="dcb1c-440">例如，<see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />可以用于确定给定的值是否对枚举类型有效。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-440">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span>
            </span>
            <span data-ttu-id="dcb1c-441">有关示例，请参见 <see cref="T:System.ComponentModel.EnumConverter" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-441">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            </span>
            <span data-ttu-id="dcb1c-442">您可以编写自己<c>WillConvertSucceed</c>方法包装<see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" />和<see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" />异常块中的方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-442">You can write your own <c>WillConvertSucceed</c> method by wrapping the <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> and <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> methods in exception blocks.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValid(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValid (context As ITypeDescriptorContext, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValid(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="dcb1c-443">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-443">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="dcb1c-444">要测试其有效性的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-444">The <see cref="T:System.Object" /> to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-445">返回给定的值对象是否对此类型和对指定的上下文有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-445">Returns whether the given value object is valid for this type and for the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-446">如果指定值对于该对象有效，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-446">
              <see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-447">使用 `context` 参数提取有关调用此转换器的环境的附加信息。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-447">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="dcb1c-448">此参数可以为`null`，因此总是需要检查。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-448">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="dcb1c-449">同样，上下文对象的属性可以返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-449">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="dcb1c-450">从开始[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]、<xref:System.ComponentModel.TypeConverter.IsValid%2A>方法捕获异常从<xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>和<xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-450">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="dcb1c-451">如果输入的值类型导致<xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>返回`false`，或如果输入的值将导致<xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>以引发异常，<xref:System.ComponentModel.TypeConverter.IsValid%2A>方法返回`false`。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-451">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="dcb1c-452">以允许旧行为，请将以下行插入应用程序，例如，application1.exe.config 的配置文件。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-452">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="dcb1c-453">此函数的示例，请参阅<xref:System.ComponentModel.TypeConverter>类。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-453">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dcb1c-454">如果你想要转换的类型支持可验证的标准值，重写此方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-454">Override this method if the type you want to convert supports standard values that can be validated.</span>
            </span>
            <span data-ttu-id="dcb1c-455">
              <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />方法使用验证内类型的值而不是确定如果<paramref name="value" />可以转换为给定的类型。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-455">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span>
            </span>
            <span data-ttu-id="dcb1c-456">例如，<see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />可以用于确定给定的值是否对枚举类型有效。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-456">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span>
            </span>
            <span data-ttu-id="dcb1c-457">有关示例，请参见 <see cref="T:System.ComponentModel.EnumConverter" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcb1c-457">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="SortProperties">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.PropertyDescriptorCollection SortProperties (System.ComponentModel.PropertyDescriptorCollection props, string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.PropertyDescriptorCollection SortProperties(class System.ComponentModel.PropertyDescriptorCollection props, string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function SortProperties (props As PropertyDescriptorCollection, names As String()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ SortProperties(System::ComponentModel::PropertyDescriptorCollection ^ props, cli::array &lt;System::String ^&gt; ^ names);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="props" Type="System.ComponentModel.PropertyDescriptorCollection" />
        <Parameter Name="names" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="props">
          <span data-ttu-id="dcb1c-458">具有要排序的属性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-458">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that has the properties to sort.</span>
          </span>
        </param>
        <param name="names">
          <span data-ttu-id="dcb1c-459">按您要属性在集合中出现的顺序排列的名称的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-459">An array of names in the order you want the properties to appear in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcb1c-460">对属性的集合进行排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-460">Sorts a collection of properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcb1c-461">包含已排序属性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcb1c-461">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the sorted properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb1c-462">集合中尚不的名称数组中的所有属性都按字母顺序都添加到末尾。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-462">All properties in the collection that are not already in the array of names are added alphabetically to the end.</span></span> <span data-ttu-id="dcb1c-463">如果`names`参数是一个空数组或`null`，集合中的所有属性的字母顺序都排序。</span><span class="sxs-lookup"><span data-stu-id="dcb1c-463">If the `names` parameter is an empty array or `null`, all the properties in the collection are sorted alphabetically.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
  </Members>
</Type>