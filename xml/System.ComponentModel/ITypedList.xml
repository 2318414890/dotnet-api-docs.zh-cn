<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ITypedList.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ae1b812b22292721f7b8e6e474b15516e5215709.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae1b812b22292721f7b8e6e474b15516e5215709</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.ITypedList">
          <source>Provides functionality to discover the schema for a bindable list, where the properties available for binding differ from the public properties of the object to bind to.</source>
          <target state="translated">提供发现可绑定列表架构的功能，其中可用于绑定的属性不同于要绑定到的对象的公共属性。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypedList">
          <source>Use this interface if, for instance, you are using a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> object that represents a <ph id="ph2">`customer`</ph> table, you want to bind to the properties on the <ph id="ph3">`customer`</ph> object that the <ph id="ph4">&lt;xref:System.Data.DataView&gt;</ph> represents, not the properties of the <ph id="ph5">&lt;xref:System.Data.DataView&gt;</ph>.</source>
          <target state="translated">如果，例如，你将使用此接口<ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph>对象，表示<ph id="ph2">`customer`</ph>表，你想要绑定到属性<ph id="ph3">`customer`</ph>对象<ph id="ph4">&lt;xref:System.Data.DataView&gt;</ph>表示，不是属性的<ph id="ph5">&lt;xref:System.Data.DataView&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypedList">
          <source>This interface is not required for design-time support of a bindable list.</source>
          <target state="translated">此接口不需要的可绑定列表的设计时支持。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypedList">
          <source>Binding to data can occur either at run time or in a designer, but there are rules for both.</source>
          <target state="translated">绑定到数据可以发生在运行时或在设计器中，但有两个规则。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypedList">
          <source>At run time, you can bind to data in any of the following:</source>
          <target state="translated">在运行时，你可以将绑定到以下任何方面的数据：</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypedList">
          <source>Implementer of <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>, provided the implementer has a strongly typed <ph id="ph2">&lt;xref:System.Collections.IList.Item%2A&gt;</ph> property (that is, the <ph id="ph3">&lt;xref:System.Type&gt;</ph> is anything but <ph id="ph4">&lt;xref:System.Object&gt;</ph>).</source>
          <target state="translated">实施者<ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>、 提供实施者具有强类型化<ph id="ph2">&lt;xref:System.Collections.IList.Item%2A&gt;</ph>属性 (即，<ph id="ph3">&lt;xref:System.Type&gt;</ph>算作是<ph id="ph4">&lt;xref:System.Object&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypedList">
          <source>You can accomplish this by making the default implementation of <ph id="ph1">&lt;xref:System.Collections.IList.Item%2A&gt;</ph> private.</source>
          <target state="translated">你可以完成此操作通过进行的默认实现<ph id="ph1">&lt;xref:System.Collections.IList.Item%2A&gt;</ph>私有。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypedList">
          <source>If you want to create an <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> that follows the rules of a strongly typed collection, you should derive from <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</source>
          <target state="translated">如果你想要创建<ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>后面的强类型集合的规则，应派生自<ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypedList">
          <source>Implementer of <ph id="ph1">&lt;xref:System.ComponentModel.ITypedList&gt;</ph>.</source>
          <target state="translated">实施者<ph id="ph1">&lt;xref:System.ComponentModel.ITypedList&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypedList">
          <source>In a designer, you can initialize binding to <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> objects by following the same rules.</source>
          <target state="translated">在设计器中，你可以初始化绑定到<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>按照相同的规则的对象。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypedList">
          <source>For more information on binding to a data source, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Binding?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">绑定到数据源的详细信息，请参阅<ph id="ph1">&lt;xref:System.Windows.Forms.Binding?displayProperty=nameWithType&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypedList">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.ComponentModel.ITypedList&gt;</ph> interface.</source>
          <target state="translated">下面的代码示例演示如何实现<ph id="ph1">&lt;xref:System.ComponentModel.ITypedList&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypedList">
          <source>A generic type named <ph id="ph1">`SortableBindingList`</ph> derives from the <ph id="ph2">&lt;xref:System.ComponentModel.BindingList%601&gt;</ph> class and implements the <ph id="ph3">&lt;xref:System.ComponentModel.ITypedList&gt;</ph> interface.</source>
          <target state="translated">名为的泛型类型<ph id="ph1">`SortableBindingList`</ph>派生自<ph id="ph2">&lt;xref:System.ComponentModel.BindingList%601&gt;</ph>类并实现<ph id="ph3">&lt;xref:System.ComponentModel.ITypedList&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ITypedList">
          <source>For a full code listing, see <bpt id="p1">[</bpt>How to: Implement the ITypedList Interface<ept id="p1">](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md)</ept>.</source>
          <target state="translated">有关完整代码列表，请参阅<bpt id="p1">[</bpt>如何： 实现 ITypedList 接口<ept id="p1">](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md)</ept>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> objects to find in the collection as bindable.</source>
          <target state="translated">要在组合中查找的可绑定的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> 对象的数组。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
          <source>This can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">它可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> that represents the properties on each item used to bind data.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>，其表示每一项上用于绑定数据的属性。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> that represents the properties on each item used to bind data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>，其表示每一项上用于绑定数据的属性。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
          <source>If the <ph id="ph1">`listAccessors`</ph> parameter is not <ph id="ph2">`null`</ph>, it typically contains a property descriptor that identifies a list of containers to retrieve for the object that implements <ph id="ph3">&lt;xref:System.ComponentModel.ITypedList&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">`listAccessors`</ph>参数不是<ph id="ph2">`null`</ph>，它通常包含标识要检索的实现的对象的容器列表的属性描述符<ph id="ph3">&lt;xref:System.ComponentModel.ITypedList&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
          <source>For example, a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> containing two tables, <ph id="ph2">`myCustomers`</ph> and <ph id="ph3">`myOrders`</ph>, with a relationship between them called <ph id="ph4">`myCustOrders`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含两个表，<ph id="ph2">`myCustomers`</ph>和<ph id="ph3">`myOrders`</ph>，与它们调用之间的关系<ph id="ph4">`myCustOrders`</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
          <source>If you create a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> object to view <ph id="ph2">`myCustomers`</ph>, then calling the <ph id="ph3">&lt;xref:System.ComponentModel.ITypedList.GetItemProperties%2A&gt;</ph> method with <ph id="ph4">`null`</ph> returns the property descriptors for the columns in <ph id="ph5">`myCustomers`</ph>.</source>
          <target state="translated">如果你创建<ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph>对象以查看<ph id="ph2">`myCustomers`</ph>，然后调用<ph id="ph3">&lt;xref:System.ComponentModel.ITypedList.GetItemProperties%2A&gt;</ph>方法替换<ph id="ph4">`null`</ph>返回中的列的属性描述符<ph id="ph5">`myCustomers`</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
          <source>As a result, one of the returned property descriptors is a property descriptor for <ph id="ph1">`myCustOrders`</ph>, just as calling the <ph id="ph2">&lt;xref:System.ComponentModel.ITypedList.GetItemProperties%2A&gt;</ph> method with a list accessor array containing the property descriptors for <ph id="ph3">`myCustOrders`</ph> will return the property descriptors for <ph id="ph4">`myOrders`</ph>.</source>
          <target state="translated">因此，返回的属性描述符之一是属性的属性描述符<ph id="ph1">`myCustOrders`</ph>，则只需为调用<ph id="ph2">&lt;xref:System.ComponentModel.ITypedList.GetItemProperties%2A&gt;</ph>具有包含的属性说明符列表访问器数组方法<ph id="ph3">`myCustOrders`</ph>将返回的属性描述符有关<ph id="ph4">`myOrders`</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.ComponentModel.ITypedList.GetItemProperties%2A&gt;</ph> method.</source>
          <target state="translated">下面的代码示例演示如何实现<ph id="ph1">&lt;xref:System.ComponentModel.ITypedList.GetItemProperties%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
          <source>For a full code listing, see <bpt id="p1">[</bpt>How to: Implement the ITypedList Interface<ept id="p1">](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md)</ept>.</source>
          <target state="translated">有关完整代码列表，请参阅<bpt id="p1">[</bpt>如何： 实现 ITypedList 接口<ept id="p1">](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md)</ept>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> objects, for which the list name is returned.</source>
          <target state="translated">为其返回列表名称的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> 对象的数组。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])">
          <source>This can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">它可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])">
          <source>Returns the name of the list.</source>
          <target state="translated">返回列表名称。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])">
          <source>The name of the list.</source>
          <target state="translated">列表名称。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])">
          <source>This method is used only in the design-time framework and by the obsolete <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control.</source>
          <target state="translated">使用此方法只能在设计时框架，并且由已过时<ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.ComponentModel.ITypedList.GetListName%2A&gt;</ph> method.</source>
          <target state="translated">下面的代码示例演示如何实现<ph id="ph1">&lt;xref:System.ComponentModel.ITypedList.GetListName%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])">
          <source>For a full code listing, see <bpt id="p1">[</bpt>How to: Implement the ITypedList Interface<ept id="p1">](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md)</ept>.</source>
          <target state="translated">有关完整代码列表，请参阅<bpt id="p1">[</bpt>如何： 实现 ITypedList 接口<ept id="p1">](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md)</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>