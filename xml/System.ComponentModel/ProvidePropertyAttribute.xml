<Type Name="ProvidePropertyAttribute" FullName="System.ComponentModel.ProvidePropertyAttribute">
  <TypeSignature Language="C#" Value="public sealed class ProvidePropertyAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProvidePropertyAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ProvidePropertyAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProvidePropertyAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProvidePropertyAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="01aee-101">指定 <see cref="T:System.ComponentModel.IExtenderProvider" /> 的实施者提供给其他组件的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="01aee-101">Specifies the name of the property that an implementer of <see cref="T:System.ComponentModel.IExtenderProvider" /> offers to other components.</span></span> <span data-ttu-id="01aee-102">无法继承此类</span><span class="sxs-lookup"><span data-stu-id="01aee-102">This class cannot be inherited</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01aee-103">标记时具有此属性的类，你可以判断使用你提供的名称创建一个扩展程序属性的代码生成器。</span><span class="sxs-lookup"><span data-stu-id="01aee-103">When you mark a class with this attribute, you tell the code generator to create an extender property with the name you provide.</span></span> <span data-ttu-id="01aee-104">标记的类必须实现<xref:System.ComponentModel.IExtenderProvider>。</span><span class="sxs-lookup"><span data-stu-id="01aee-104">The marked class must implement <xref:System.ComponentModel.IExtenderProvider>.</span></span> <span data-ttu-id="01aee-105">因此，容器中的其他组件可以使用新的属性。</span><span class="sxs-lookup"><span data-stu-id="01aee-105">As a result, the new property can be used by other components in a container.</span></span>  
  
 <span data-ttu-id="01aee-106">在标记的类中，则必须实现`Get`\<名称 > 和`Set`\<名称 > 方法。</span><span class="sxs-lookup"><span data-stu-id="01aee-106">Within the marked class, you must implement `Get` \<name> and `Set` \<name> methods.</span></span> <span data-ttu-id="01aee-107">例如，如果你将标记 [ProvideProperty("PropertyName")] 具有的类，则必须实现`GetPropertyName`和`SetPropertyName`方法。</span><span class="sxs-lookup"><span data-stu-id="01aee-107">For example, if you mark a class with [ProvideProperty("PropertyName")], you must implement `GetPropertyName` and `SetPropertyName` methods.</span></span> <span data-ttu-id="01aee-108">若要指定新属性将扩展属性，则必须实现从<xref:System.ComponentModel.IExtenderProvider>，还必须实现`CanExtend`方法。</span><span class="sxs-lookup"><span data-stu-id="01aee-108">To specify that the new property will be an extender property, you must implement from <xref:System.ComponentModel.IExtenderProvider>, you must also implement a `CanExtend` method.</span></span>  
  
 <span data-ttu-id="01aee-109">有关更多信息，请参阅[特性](~/docs/standard/attributes/index.md)。</span><span class="sxs-lookup"><span data-stu-id="01aee-109">For more information, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01aee-110">下面的示例标记`MyClass`与<xref:System.ComponentModel.ProvidePropertyAttribute>，告知编译器需要创建一个名为属性`MyProperty`从`GetMyProperty`和`SetMyProperty`方法。</span><span class="sxs-lookup"><span data-stu-id="01aee-110">The following example marks `MyClass` with a <xref:System.ComponentModel.ProvidePropertyAttribute> that tells the compiler to create a property called `MyProperty` from the `GetMyProperty` and `SetMyProperty` methods.</span></span>  
  
 [!code-cpp[Classic ProvidePropertyAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ProvidePropertyAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ProvidePropertyAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ProvidePropertyAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic ProvidePropertyAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ProvidePropertyAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="01aee-111">初始化 <see cref="T:System.ComponentModel.ProvidePropertyAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="01aee-111">Initializes a new instance of the <see cref="T:System.ComponentModel.ProvidePropertyAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProvidePropertyAttribute (string propertyName, string receiverTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, string receiverTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ProvidePropertyAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, receiverTypeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProvidePropertyAttribute(System::String ^ propertyName, System::String ^ receiverTypeName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="receiverTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="01aee-112">扩展到指定类型对象的属性名称。</span><span class="sxs-lookup"><span data-stu-id="01aee-112">The name of the property extending to an object of the specified type.</span></span></param>
        <param name="receiverTypeName"><span data-ttu-id="01aee-113">此属性可以扩展的数据类型的名称。</span><span class="sxs-lookup"><span data-stu-id="01aee-113">The name of the data type this property can extend.</span></span></param>
        <summary><span data-ttu-id="01aee-114">用该属性的名称和它的接收器类型初始化 <see cref="T:System.ComponentModel.ProvidePropertyAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="01aee-114">Initializes a new instance of the <see cref="T:System.ComponentModel.ProvidePropertyAttribute" /> class with the name of the property and the type of its receiver.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProvidePropertyAttribute (string propertyName, Type receiverType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, class System.Type receiverType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ProvidePropertyAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, receiverType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProvidePropertyAttribute(System::String ^ propertyName, Type ^ receiverType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="receiverType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="01aee-115">扩展到指定类型对象的属性名称。</span><span class="sxs-lookup"><span data-stu-id="01aee-115">The name of the property extending to an object of the specified type.</span></span></param>
        <param name="receiverType"><span data-ttu-id="01aee-116">可以接收此属性的对象的数据类型的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="01aee-116">The <see cref="T:System.Type" /> of the data type of the object that can receive the property.</span></span></param>
        <summary><span data-ttu-id="01aee-117">用该属性的名称和它的 <see cref="T:System.ComponentModel.ProvidePropertyAttribute" /> 初始化 <see cref="T:System.Type" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="01aee-117">Initializes a new instance of the <see cref="T:System.ComponentModel.ProvidePropertyAttribute" /> class with the name of the property and its <see cref="T:System.Type" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ProvidePropertyAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="01aee-118">要进行值的相等性测试的对象。</span><span class="sxs-lookup"><span data-stu-id="01aee-118">The object to test the value equality of.</span></span></param>
        <summary><span data-ttu-id="01aee-119">返回给定对象的值是否等于当前的 <see cref="T:System.ComponentModel.ProvidePropertyAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="01aee-119">Returns whether the value of the given object is equal to the current <see cref="T:System.ComponentModel.ProvidePropertyAttribute" />.</span></span></summary>
        <returns>
          <span data-ttu-id="01aee-120">如果给定对象的值等于当前对象的值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01aee-120"><see langword="true" /> if the value of the given object is equal to that of the current; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ProvidePropertyAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01aee-121">返回此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="01aee-121">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="01aee-122">当前 <see cref="T:System.ComponentModel.ProvidePropertyAttribute" /> 的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="01aee-122">A hash code for the current <see cref="T:System.ComponentModel.ProvidePropertyAttribute" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyName">
      <MemberSignature Language="C#" Value="public string PropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PropertyName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ProvidePropertyAttribute.PropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PropertyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01aee-123">获取该类提供的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="01aee-123">Gets the name of a property that this class provides.</span></span></summary>
        <value><span data-ttu-id="01aee-124">该类提供的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="01aee-124">The name of a property that this class provides.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiverTypeName">
      <MemberSignature Language="C#" Value="public string ReceiverTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReceiverTypeName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ProvidePropertyAttribute.ReceiverTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReceiverTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ReceiverTypeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01aee-125">获取此属性可以扩展的数据类型的名称。</span><span class="sxs-lookup"><span data-stu-id="01aee-125">Gets the name of the data type this property can extend.</span></span></summary>
        <value><span data-ttu-id="01aee-126">此属性可以扩展的数据类型的名称。</span><span class="sxs-lookup"><span data-stu-id="01aee-126">The name of the data type this property can extend.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public override object TypeId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypeId" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ProvidePropertyAttribute.TypeId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypeId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ TypeId { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01aee-127">获取此特性的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="01aee-127">Gets a unique identifier for this attribute.</span></span></summary>
        <value><span data-ttu-id="01aee-128">一个表示该属性的唯一标识符的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="01aee-128">An <see cref="T:System.Object" /> that is a unique identifier for the attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>