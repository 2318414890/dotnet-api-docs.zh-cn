<Type Name="Container" FullName="System.ComponentModel.Container">
  <TypeSignature Language="C#" Value="public class Container : IDisposable, System.ComponentModel.IContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Container extends System.Object implements class System.ComponentModel.IContainer, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Container" />
  <TypeSignature Language="VB.NET" Value="Public Class Container&#xA;Implements IContainer, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Container : IDisposable, System::ComponentModel::IContainer" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="5830e-101">封装零个或更多个组件。</span><span class="sxs-lookup"><span data-stu-id="5830e-101">Encapsulates zero or more components.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5830e-102"><xref:System.ComponentModel.Container>类是的默认实现<xref:System.ComponentModel.IContainer>接口。</span><span class="sxs-lookup"><span data-stu-id="5830e-102">The <xref:System.ComponentModel.Container> class is the default implementation for the <xref:System.ComponentModel.IContainer> interface.</span></span>  
  
 <span data-ttu-id="5830e-103">容器是封装并跟踪零个或多个组件的对象。</span><span class="sxs-lookup"><span data-stu-id="5830e-103">Containers are objects that encapsulate and track zero or more components.</span></span> <span data-ttu-id="5830e-104">在此上下文中，包含引用逻辑包容，而不是直观包容。</span><span class="sxs-lookup"><span data-stu-id="5830e-104">In this context, containment refers to logical containment, not visual containment.</span></span> <span data-ttu-id="5830e-105">你可以使用组件和容器中的各种方案，包括 visual 和非可视化的方案。</span><span class="sxs-lookup"><span data-stu-id="5830e-105">You can use components and containers in a variety of scenarios, including scenarios that are both visual and not visual.</span></span>  
  
 <span data-ttu-id="5830e-106">在第一个中先进先出列表，它还定义容器内的组件的顺序中，容器中的组件进行跟踪。</span><span class="sxs-lookup"><span data-stu-id="5830e-106">The components in a container are tracked in a first-in, first-out list, which also defines the order of the components within the container.</span></span> <span data-ttu-id="5830e-107">添加的组件将追加到列表的末尾。</span><span class="sxs-lookup"><span data-stu-id="5830e-107">Added components are appended to the end of the list.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.IContainer" />
    <altmember cref="T:System.ComponentModel.IComponent" />
    <altmember cref="T:System.ComponentModel.Component" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Container ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Container();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5830e-108">初始化 <see cref="T:System.ComponentModel.Container" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="5830e-108">Initializes a new instance of the <see cref="T:System.ComponentModel.Container" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5830e-109">向 <see cref="T:System.ComponentModel.Component" /> 中添加一个 <see cref="T:System.ComponentModel.Container" />。</span><span class="sxs-lookup"><span data-stu-id="5830e-109">Adds a <see cref="T:System.ComponentModel.Component" /> to the <see cref="T:System.ComponentModel.Container" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="5830e-110">要添加的组件。</span><span class="sxs-lookup"><span data-stu-id="5830e-110">The component to add.</span></span></param>
        <summary><span data-ttu-id="5830e-111">将指定的 <see cref="T:System.ComponentModel.Component" /> 添加到 <see cref="T:System.ComponentModel.Container" />。</span><span class="sxs-lookup"><span data-stu-id="5830e-111">Adds the specified <see cref="T:System.ComponentModel.Component" /> to the <see cref="T:System.ComponentModel.Container" />.</span></span> <span data-ttu-id="5830e-112">该组件未命名。</span><span class="sxs-lookup"><span data-stu-id="5830e-112">The component is unnamed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5830e-113">此方法由派生类中重写。</span><span class="sxs-lookup"><span data-stu-id="5830e-113">This method can be overridden by a derived class.</span></span>  
  
 <span data-ttu-id="5830e-114">新<xref:System.ComponentModel.Component>添加到列表的末尾。</span><span class="sxs-lookup"><span data-stu-id="5830e-114">The new <xref:System.ComponentModel.Component> is added to the end of the list.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5830e-115"><paramref name="component" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5830e-115"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (System.ComponentModel.IComponent component, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.ComponentModel.IComponent component, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (component As IComponent, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::ComponentModel::IComponent ^ component, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="5830e-116">要添加的组件。</span><span class="sxs-lookup"><span data-stu-id="5830e-116">The component to add.</span></span></param>
        <param name="name"><span data-ttu-id="5830e-117">要给该组件分配的唯一的、区分大小写的名称。</span><span class="sxs-lookup"><span data-stu-id="5830e-117">The unique, case-insensitive name to assign to the component.</span></span>  
  
 <span data-ttu-id="5830e-118">或</span><span class="sxs-lookup"><span data-stu-id="5830e-118">-or-</span></span>  
  
 <span data-ttu-id="5830e-119"><see langword="null" />，它使组件保持未命名状态。</span><span class="sxs-lookup"><span data-stu-id="5830e-119"><see langword="null" />, which leaves the component unnamed.</span></span></param>
        <summary><span data-ttu-id="5830e-120">将指定的 <see cref="T:System.ComponentModel.Component" /> 添加到 <see cref="T:System.ComponentModel.Container" /> 并为其分配名称。</span><span class="sxs-lookup"><span data-stu-id="5830e-120">Adds the specified <see cref="T:System.ComponentModel.Component" /> to the <see cref="T:System.ComponentModel.Container" /> and assigns it a name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5830e-121">此方法由派生类中重写。</span><span class="sxs-lookup"><span data-stu-id="5830e-121">This method can be overridden by a derived class.</span></span>  
  
 <span data-ttu-id="5830e-122">新<xref:System.ComponentModel.Component>添加到列表的末尾。</span><span class="sxs-lookup"><span data-stu-id="5830e-122">The new <xref:System.ComponentModel.Component> is added to the end of the list.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5830e-123"><paramref name="component" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5830e-123"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5830e-124"><paramref name="name" /> 不是唯一的。</span><span class="sxs-lookup"><span data-stu-id="5830e-124"><paramref name="name" /> is not unique.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="Components">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ComponentCollection Components { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ComponentCollection Components" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Container.Components" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Components As ComponentCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ComponentCollection ^ Components { System::ComponentModel::ComponentCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IContainer.Components</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ComponentCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5830e-125">获取 <see cref="T:System.ComponentModel.Container" /> 中的所有组件。</span><span class="sxs-lookup"><span data-stu-id="5830e-125">Gets all the components in the <see cref="T:System.ComponentModel.Container" />.</span></span></summary>
        <value><span data-ttu-id="5830e-126">包含 <see cref="T:System.ComponentModel.Container" /> 中的组件的集合。</span><span class="sxs-lookup"><span data-stu-id="5830e-126">A collection that contains the components in the <see cref="T:System.ComponentModel.Container" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5830e-127">此方法由派生类中重写。</span><span class="sxs-lookup"><span data-stu-id="5830e-127">This method can be overridden by a derived class.</span></span>  
  
 <span data-ttu-id="5830e-128">由于添加到集合中的组件存储在相同的顺序<xref:System.ComponentModel.Container>。</span><span class="sxs-lookup"><span data-stu-id="5830e-128">The components in the collection are stored in the same order as they were added to the <xref:System.ComponentModel.Container>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSite">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.ISite CreateSite (System.ComponentModel.IComponent component, string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.ISite CreateSite(class System.ComponentModel.IComponent component, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateSite (component As IComponent, name As String) As ISite" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::ISite ^ CreateSite(System::ComponentModel::IComponent ^ component, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="5830e-129">要为其创建站点的 <see cref="T:System.ComponentModel.IComponent" />。</span><span class="sxs-lookup"><span data-stu-id="5830e-129">The <see cref="T:System.ComponentModel.IComponent" /> to create a site for.</span></span></param>
        <param name="name"><span data-ttu-id="5830e-130">要分配给 <c>component</c> 的名称，或者为 <see langword="null" /> 以跳过名称分配。</span><span class="sxs-lookup"><span data-stu-id="5830e-130">The name to assign to <c>component</c>, or <see langword="null" /> to skip the name assignment.</span></span></param>
        <summary><span data-ttu-id="5830e-131">为给定的 <see cref="T:System.ComponentModel.ISite" /> 创建一个站点 <see cref="T:System.ComponentModel.IComponent" />，并将给定名称分配给该站点。</span><span class="sxs-lookup"><span data-stu-id="5830e-131">Creates a site <see cref="T:System.ComponentModel.ISite" /> for the given <see cref="T:System.ComponentModel.IComponent" /> and assigns the given name to the site.</span></span></summary>
        <returns><span data-ttu-id="5830e-132">新创建的站点。</span><span class="sxs-lookup"><span data-stu-id="5830e-132">The newly created site.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5830e-133">如果`name`参数是`null`、<xref:System.ComponentModel.IComponent>添加到<xref:System.ComponentModel.Container>没有标识的名称。</span><span class="sxs-lookup"><span data-stu-id="5830e-133">If the `name` parameter is `null`, the <xref:System.ComponentModel.IComponent> is added to the <xref:System.ComponentModel.Container> without an identifying name.</span></span>  
  
 <span data-ttu-id="5830e-134">此方法由派生类中重写。</span><span class="sxs-lookup"><span data-stu-id="5830e-134">This method can be overridden by a derived class.</span></span> <span data-ttu-id="5830e-135">需要重写的实施者<xref:System.ComponentModel.Container.CreateSite%2A>方法可以提供通过实现的类的自定义实现<xref:System.ComponentModel.ISite>接口。</span><span class="sxs-lookup"><span data-stu-id="5830e-135">Implementers that need to override the <xref:System.ComponentModel.Container.CreateSite%2A> method can provide a custom implementation through a class that implements the <xref:System.ComponentModel.ISite> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5830e-136">释放由 <see cref="T:System.ComponentModel.Container" /> 占用的资源。</span><span class="sxs-lookup"><span data-stu-id="5830e-136">Releases the resources used by the <see cref="T:System.ComponentModel.Container" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5830e-137">释放由 <see cref="T:System.ComponentModel.Container" /> 使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="5830e-137">Releases all resources used by the <see cref="T:System.ComponentModel.Container" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5830e-138">在完成使用 <xref:System.ComponentModel.Container.Dispose%2A> 后，应调用 <xref:System.ComponentModel.Container>。</span><span class="sxs-lookup"><span data-stu-id="5830e-138">Call <xref:System.ComponentModel.Container.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Container>.</span></span> <span data-ttu-id="5830e-139"><xref:System.ComponentModel.Container.Dispose%2A> 方法使 <xref:System.ComponentModel.Container> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="5830e-139">The <xref:System.ComponentModel.Container.Dispose%2A> method leaves the <xref:System.ComponentModel.Container> in an unusable state.</span></span> <span data-ttu-id="5830e-140">在调用<xref:System.ComponentModel.Container.Dispose%2A>，必须释放对所有引用<xref:System.ComponentModel.Container>以便垃圾回收器才能回收的内存，<xref:System.ComponentModel.Container>占用。</span><span class="sxs-lookup"><span data-stu-id="5830e-140">After calling <xref:System.ComponentModel.Container.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Container> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Container> was occupying.</span></span> <span data-ttu-id="5830e-141">有关详细信息，请参阅[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="5830e-141">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5830e-142">每次释放对 <xref:System.ComponentModel.Container.Dispose%2A> 的最后一个引用前，均应调用 <xref:System.ComponentModel.Container>。</span><span class="sxs-lookup"><span data-stu-id="5830e-142">Always call <xref:System.ComponentModel.Container.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Container>.</span></span> <span data-ttu-id="5830e-143">否则，在垃圾回收器调用 <xref:System.ComponentModel.Container> 对象的 `Finalize` 方法之前，该对象正在使用的资源不会被释放。</span><span class="sxs-lookup"><span data-stu-id="5830e-143">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Container> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="5830e-144">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5830e-144"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="5830e-145">释放由 <see cref="T:System.ComponentModel.Container" /> 占用的非托管资源，还可以另外再释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="5830e-145">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Container" />, and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5830e-146">此方法称为由公共`Dispose`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5830e-146">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="5830e-147">`Dispose` 调用受保护`Dispose(Boolean)`方法替换`disposing`参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="5830e-147">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="5830e-148"><xref:System.Object.Finalize%2A> 调用`Dispose`与`disposing`设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="5830e-148"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="5830e-149">当`disposing`参数为 true 时，此方法释放由任何托管对象持有的全部资源此<xref:System.ComponentModel.Container>引用。</span><span class="sxs-lookup"><span data-stu-id="5830e-149">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Container> references.</span></span> <span data-ttu-id="5830e-150">此方法调用每个引用对象的 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="5830e-150">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="5830e-151"><see langword="Dispose" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="5830e-151"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="5830e-152">在重写<see langword="Dispose(Boolean)" />请注意不要引用已释放的以前调用中的对象<see langword="Dispose" />。</span><span class="sxs-lookup"><span data-stu-id="5830e-152">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="5830e-153">有关如何实现详细信息<see langword="Dispose(Boolean)" />，请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="5830e-153">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="5830e-154">有关详细信息<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，请参阅[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[重写 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</span><span class="sxs-lookup"><span data-stu-id="5830e-154">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Container ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Container ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5830e-155">在通过垃圾回收将 <see cref="T:System.ComponentModel.Container" /> 回收之前，释放非托管资源并执行其他清理操作。</span><span class="sxs-lookup"><span data-stu-id="5830e-155">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.ComponentModel.Container" /> is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5830e-156">此方法重写 <xref:System.Object.Finalize%2A>。</span><span class="sxs-lookup"><span data-stu-id="5830e-156">This method overrides <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="5830e-157">应用程序代码不应调用此方法。对象的`Finalize`方法过程中将自动调用垃圾回收，除非已通过调用禁用垃圾回收器的终止<xref:System.GC.SuppressFinalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5830e-157">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 <span data-ttu-id="5830e-158">有关详细信息，请参阅[Finalize 方法和析构函数](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)，[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)，和[重写 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</span><span class="sxs-lookup"><span data-stu-id="5830e-158">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected virtual object GetService (Type service);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetService(class System.Type service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetService (service As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetService(Type ^ service);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="service"><span data-ttu-id="5830e-159">要检索的服务的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="5830e-159">The <see cref="T:System.Type" /> of the service to retrieve.</span></span></param>
        <summary><span data-ttu-id="5830e-160">获取指定类型的服务对象（如果可用）。</span><span class="sxs-lookup"><span data-stu-id="5830e-160">Gets the service object of the specified type, if it is available.</span></span></summary>
        <returns><span data-ttu-id="5830e-161">实现所请求服务的 <see cref="T:System.Object" />；或者在无法解决服务的情况下为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5830e-161">An <see cref="T:System.Object" /> implementing the requested service, or <see langword="null" /> if the service cannot be resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5830e-162">此方法的默认实现返回类的当前实例，如果`service`是<xref:System.ComponentModel.IContainer>; 否则为它将返回`null`。</span><span class="sxs-lookup"><span data-stu-id="5830e-162">The default implementation of this method returns the current instance of the class if `service` is an <xref:System.ComponentModel.IContainer>; otherwise, it returns `null`.</span></span> <span data-ttu-id="5830e-163">你可以重写该方法以提供自定义实现可返回一个服务对象。</span><span class="sxs-lookup"><span data-stu-id="5830e-163">You can override this method to provide a custom implementation to return a service object.</span></span> <span data-ttu-id="5830e-164">有关更多信息，请参见 <xref:System.IServiceProvider.GetService%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="5830e-164">For more information, see the <xref:System.IServiceProvider.GetService%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IContainer.Remove(System.ComponentModel.IComponent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="5830e-165">要移除的组件。</span><span class="sxs-lookup"><span data-stu-id="5830e-165">The component to remove.</span></span></param>
        <summary><span data-ttu-id="5830e-166">从 <see cref="T:System.ComponentModel.Container" /> 中移除组件。</span><span class="sxs-lookup"><span data-stu-id="5830e-166">Removes a component from the <see cref="T:System.ComponentModel.Container" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5830e-167">此方法由派生类中重写。</span><span class="sxs-lookup"><span data-stu-id="5830e-167">This method can be overridden by a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveWithoutUnsiting">
      <MemberSignature Language="C#" Value="protected void RemoveWithoutUnsiting (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveWithoutUnsiting(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveWithoutUnsiting (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveWithoutUnsiting(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="5830e-168">要移除的组件。</span><span class="sxs-lookup"><span data-stu-id="5830e-168">The component to remove.</span></span></param>
        <summary><span data-ttu-id="5830e-169">从 <see cref="T:System.ComponentModel.Container" /> 中移除组件，不将 <see cref="P:System.ComponentModel.IComponent.Site" /> 设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5830e-169">Removes a component from the <see cref="T:System.ComponentModel.Container" /> without setting <see cref="P:System.ComponentModel.IComponent.Site" /> to <see langword="null" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5830e-170"><xref:System.ComponentModel.Container.RemoveWithoutUnsiting%2A>方法清理站点像往常一样，但不设置组件的<xref:System.ComponentModel.IComponent.Site%2A>属性`null`。</span><span class="sxs-lookup"><span data-stu-id="5830e-170">The <xref:System.ComponentModel.Container.RemoveWithoutUnsiting%2A> method cleans up the site as usual, but it does not set the component's <xref:System.ComponentModel.IComponent.Site%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateName">
      <MemberSignature Language="C#" Value="protected virtual void ValidateName (System.ComponentModel.IComponent component, string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateName(class System.ComponentModel.IComponent component, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateName (component As IComponent, name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateName(System::ComponentModel::IComponent ^ component, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="5830e-171">命名的组件。</span><span class="sxs-lookup"><span data-stu-id="5830e-171">The named component.</span></span></param>
        <param name="name"><span data-ttu-id="5830e-172">要验证的组件名称。</span><span class="sxs-lookup"><span data-stu-id="5830e-172">The component name to validate.</span></span></param>
        <summary><span data-ttu-id="5830e-173">确定组件名称对此容器是否唯一。</span><span class="sxs-lookup"><span data-stu-id="5830e-173">Determines whether the component name is unique for this container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5830e-174"><xref:System.ComponentModel.Container.ValidateName%2A>方法由调用<xref:System.ComponentModel.Container.Add%2A>方法可确定的名称`component`正在增加了对此唯一<xref:System.ComponentModel.Container>。</span><span class="sxs-lookup"><span data-stu-id="5830e-174">The <xref:System.ComponentModel.Container.ValidateName%2A> method is called by the <xref:System.ComponentModel.Container.Add%2A> method to determine if the name of the `component` being added is unique for this <xref:System.ComponentModel.Container>.</span></span> <span data-ttu-id="5830e-175">如果`name`参数不是`null`并且不是唯一的<xref:System.ArgumentException>引发。</span><span class="sxs-lookup"><span data-stu-id="5830e-175">If the `name` parameter is not `null` and is not unique, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5830e-176"><paramref name="component" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5830e-176"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5830e-177"><paramref name="name" /> 不是唯一的。</span><span class="sxs-lookup"><span data-stu-id="5830e-177"><paramref name="name" /> is not unique.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>