<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DoWorkEventArgs.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54a2a38ba5facb076d09157d0183c6209b89a5ddd.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4a2a38ba5facb076d09157d0183c6209b89a5ddd</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.DoWorkEventArgs">
          <source>Provides data for the <ph id="ph1">&lt;see cref="E:System.ComponentModel.BackgroundWorker.DoWork" /&gt;</ph> event handler.</source>
          <target state="translated">为 <ph id="ph1">&lt;see cref="E:System.ComponentModel.BackgroundWorker.DoWork" /&gt;</ph> 事件处理程序提供数据。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DoWorkEventArgs">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.ComponentModel.DoWorkEventArgs&gt;</ph> class to handle the <ph id="ph2">&lt;xref:System.ComponentModel.BackgroundWorker.DoWork&gt;</ph> event.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.ComponentModel.DoWorkEventArgs&gt;</ph>类来处理<ph id="ph2">&lt;xref:System.ComponentModel.BackgroundWorker.DoWork&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DoWorkEventArgs">
          <source>For a full code listing, see <bpt id="p1">[</bpt>How to: Run an Operation in the Background<ept id="p1">](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md)</ept>.</source>
          <target state="translated">有关完整代码列表，请参阅<bpt id="p1">[</bpt>如何： 在后台运行操作<ept id="p1">](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md)</ept>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DoWorkEventArgs.#ctor(System.Object)">
          <source>Specifies an argument for an asynchronous operation.</source>
          <target state="translated">指定异步操作的参数。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DoWorkEventArgs.#ctor(System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DoWorkEventArgs" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.DoWorkEventArgs" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DoWorkEventArgs.Argument">
          <source>Gets a value that represents the argument of an asynchronous operation.</source>
          <target state="translated">获取表示异步操作参数的值。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DoWorkEventArgs.Argument">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the argument of an asynchronous operation.</source>
          <target state="translated">表示异步操作参数的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DoWorkEventArgs.Argument">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.ComponentModel.DoWorkEventArgs&gt;</ph> class to handle the <ph id="ph2">&lt;xref:System.ComponentModel.BackgroundWorker.DoWork&gt;</ph> event.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.ComponentModel.DoWorkEventArgs&gt;</ph>类来处理<ph id="ph2">&lt;xref:System.ComponentModel.BackgroundWorker.DoWork&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DoWorkEventArgs.Argument">
          <source>For a full code listing, see <bpt id="p1">[</bpt>How to: Run an Operation in the Background<ept id="p1">](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md)</ept>.</source>
          <target state="translated">有关完整代码列表，请参阅<bpt id="p1">[</bpt>如何： 在后台运行操作<ept id="p1">](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md)</ept>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DoWorkEventArgs.Result">
          <source>Gets or sets a value that represents the result of an asynchronous operation.</source>
          <target state="translated">获取或设置表示异步操作结果的值。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DoWorkEventArgs.Result">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the result of an asynchronous operation.</source>
          <target state="translated">表示异步操作结果的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DoWorkEventArgs.Result">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.ComponentModel.DoWorkEventArgs&gt;</ph> class to handle the <ph id="ph2">&lt;xref:System.ComponentModel.BackgroundWorker.DoWork&gt;</ph> event.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.ComponentModel.DoWorkEventArgs&gt;</ph>类来处理<ph id="ph2">&lt;xref:System.ComponentModel.BackgroundWorker.DoWork&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DoWorkEventArgs.Result">
          <source>For a full code listing, see <bpt id="p1">[</bpt>How to: Run an Operation in the Background<ept id="p1">](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md)</ept>.</source>
          <target state="translated">有关完整代码列表，请参阅<bpt id="p1">[</bpt>如何： 在后台运行操作<ept id="p1">](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md)</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>