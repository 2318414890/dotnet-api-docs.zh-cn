<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LicFileLicenseProvider.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54419962595c8c5a58f62fe680ed21620082c3d1c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4419962595c8c5a58f62fe680ed21620082c3d1c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.LicFileLicenseProvider">
          <source>Provides an implementation of a <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseProvider" /&gt;</ph>.</source>
          <target state="translated">提供 <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseProvider" /&gt;</ph> 的实现。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.LicFileLicenseProvider">
          <source>The provider works in a similar fashion to the Microsoft .NET Framework standard licensing model.</source>
          <target state="translated">提供程序与 Microsoft .NET Framework 标准授权模型的工作方式相似。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.LicFileLicenseProvider">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.LicFileLicenseProvider&gt;</ph> offers <ph id="ph2">&lt;xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.LicFileLicenseProvider&gt;</ph>提供<ph id="ph2">&lt;xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.LicFileLicenseProvider">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A&gt;</ph> method determines whether the <ph id="ph2">&lt;xref:System.ComponentModel.License.LicenseKey%2A&gt;</ph> retrieved by the <ph id="ph3">&lt;xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A&gt;</ph> method is valid.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A&gt;</ph>方法确定是否<ph id="ph2">&lt;xref:System.ComponentModel.License.LicenseKey%2A&gt;</ph>检索<ph id="ph3">&lt;xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A&gt;</ph>方法无效。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.LicFileLicenseProvider">
          <source>When you inherit from this class, you can override the <ph id="ph1">&lt;xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A&gt;</ph> method to provide your own validation logic.</source>
          <target state="translated">当你从此类继承时，可以重写<ph id="ph1">&lt;xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A&gt;</ph>方法以提供您自己的验证逻辑。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.LicFileLicenseProvider">
          <source>This class exists to provide similar licensing functionality to COM licensing and uses text license files.</source>
          <target state="translated">此类提供类似的授权功能，为 COM 授权，并使用文本许可证文件。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.LicFileLicenseProvider">
          <source>For more information on licensing, see <bpt id="p1">[</bpt>How to: License Components and Controls<ept id="p1">](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57)</ept>.</source>
          <target state="translated">有关许可的详细信息，请参阅<bpt id="p1">[</bpt>How to： 许可证组件和控件<ept id="p1">](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57)</ept>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.LicFileLicenseProvider">
          <source>The following example creates a licensed control using the <ph id="ph1">&lt;xref:System.ComponentModel.LicenseManager.Validate%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例创建一个授权的控件使用<ph id="ph1">&lt;xref:System.ComponentModel.LicenseManager.Validate%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.LicFileLicenseProvider">
          <source>It uses <ph id="ph1">&lt;xref:System.ComponentModel.LicFileLicenseProvider&gt;</ph> for the license manager.</source>
          <target state="translated">它使用<ph id="ph1">&lt;xref:System.ComponentModel.LicFileLicenseProvider&gt;</ph>许可证管理器。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicFileLicenseProvider.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicFileLicenseProvider" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicFileLicenseProvider" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicFileLicenseProvider.GetKey(System.Type)">
          <source>The object type to return the key.</source>
          <target state="translated">要返回密钥的对象类型。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicFileLicenseProvider.GetKey(System.Type)">
          <source>Returns a key for the specified type.</source>
          <target state="translated">返回指定类型的密钥。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicFileLicenseProvider.GetKey(System.Type)">
          <source>A confirmation that the <ph id="ph1">&lt;paramref name="type" /&gt;</ph> parameter is licensed.</source>
          <target state="translated">对 <ph id="ph1">&lt;paramref name="type" /&gt;</ph> 参数已被授权的确认。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseContext" /&gt;</ph> that specifies where you can use the licensed object.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseContext" /&gt;</ph>，指定可在何处使用已授权的对象。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the component requesting the <ph id="ph2">&lt;see cref="T:System.ComponentModel.License" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>，表示请求 <ph id="ph2">&lt;see cref="T:System.ComponentModel.License" /&gt;</ph> 的组件。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
          <source>An object that requests the <ph id="ph1">&lt;see cref="T:System.ComponentModel.License" /&gt;</ph>.</source>
          <target state="translated">请求 <ph id="ph1">&lt;see cref="T:System.ComponentModel.License" /&gt;</ph> 的对象。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a <ph id="ph2">&lt;see cref="T:System.ComponentModel.LicenseException" /&gt;</ph> should be thrown when a component cannot be granted a license; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果无法授予组件许可证时应引发 <ph id="ph2">&lt;see cref="T:System.ComponentModel.LicenseException" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
          <source>Returns a license for the instance of the component, if one is available.</source>
          <target state="translated">返回组件实例的许可证（如果有一个可用的话）。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
          <source>A valid <ph id="ph1">&lt;see cref="T:System.ComponentModel.License" /&gt;</ph>.</source>
          <target state="translated">有效的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.License" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
          <source>If this method cannot find a valid <ph id="ph1">&lt;see cref="T:System.ComponentModel.License" /&gt;</ph> or a valid <ph id="ph2">&lt;paramref name="context" /&gt;</ph> parameter, it returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果该方法未能找到有效的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.License" /&gt;</ph> 或有效的 <ph id="ph2">&lt;paramref name="context" /&gt;</ph> 参数，它返回 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
          <source>At design time, the <ph id="ph1">&lt;xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A&gt;</ph> method looks for a license file named <ph id="ph2">`myClassName.LIC`</ph>, where <ph id="ph3">`myClassName`</ph> is the <ph id="ph4">&lt;xref:System.Type.FullName%2A&gt;</ph> of the component to create.</source>
          <target state="translated">在设计时，<ph id="ph1">&lt;xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A&gt;</ph>方法查找名为的许可证文件<ph id="ph2">`myClassName.LIC`</ph>，其中<ph id="ph3">`myClassName`</ph>是<ph id="ph4">&lt;xref:System.Type.FullName%2A&gt;</ph>要创建的组件。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
          <source>This file must be in the same directory as the .dll file that contains the component.</source>
          <target state="translated">此文件必须与包含该组件的.dll 文件相同的目录中。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
          <source>Next, this method checks the first line of the license file against a key specified in the <ph id="ph1">&lt;xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A&gt;</ph> method.</source>
          <target state="translated">接下来，此方法检查中指定的密钥对的许可证文件的第一行<ph id="ph1">&lt;xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
          <source>If the key is valid, this line is used as the <ph id="ph1">&lt;xref:System.ComponentModel.License.LicenseKey%2A&gt;</ph>.</source>
          <target state="translated">如果此键是否有效，此行将用作<ph id="ph1">&lt;xref:System.ComponentModel.License.LicenseKey%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicFileLicenseProvider.IsKeyValid(System.String,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="P:System.ComponentModel.License.LicenseKey" /&gt;</ph> to check.</source>
          <target state="translated">要检查的 <ph id="ph1">&lt;see cref="P:System.ComponentModel.License.LicenseKey" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicFileLicenseProvider.IsKeyValid(System.String,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the component requesting the <ph id="ph2">&lt;see cref="T:System.ComponentModel.License" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>，表示请求 <ph id="ph2">&lt;see cref="T:System.ComponentModel.License" /&gt;</ph> 的组件。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicFileLicenseProvider.IsKeyValid(System.String,System.Type)">
          <source>Determines whether the key that the <ph id="ph1">&lt;see cref="M:System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)" /&gt;</ph> method retrieves is valid for the specified type.</source>
          <target state="translated">确定 <ph id="ph1">&lt;see cref="M:System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)" /&gt;</ph> 方法检索的密钥对指定的类型是否有效。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicFileLicenseProvider.IsKeyValid(System.String,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key is a valid <ph id="ph2">&lt;see cref="P:System.ComponentModel.License.LicenseKey" /&gt;</ph> for the specified type; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果该密钥是指定类型的有效 <ph id="ph2">&lt;see cref="P:System.ComponentModel.License.LicenseKey" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.LicFileLicenseProvider.IsKeyValid(System.String,System.Type)">
          <source>This method checks the key against the phrase: " <ph id="ph1">`myClassName is a licensed component.`</ph> ", where <ph id="ph2">`myClassName`</ph> is the <ph id="ph3">&lt;xref:System.Type.FullName%2A&gt;</ph> of the component you want to create.</source>
          <target state="translated">此方法检查短语的密钥:" <ph id="ph1">`myClassName is a licensed component.`</ph> "，其中<ph id="ph2">`myClassName`</ph>是<ph id="ph3">&lt;xref:System.Type.FullName%2A&gt;</ph>你想要创建的组件。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.LicFileLicenseProvider.IsKeyValid(System.String,System.Type)">
          <source>When you inherit from this class, you can override this method to provide your own validation logic.</source>
          <target state="translated">当从此类继承时，你可以重写该方法以提供您自己的验证逻辑。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>