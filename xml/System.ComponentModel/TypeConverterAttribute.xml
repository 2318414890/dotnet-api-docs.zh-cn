<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeConverterAttribute.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e76381d4abfc19905d24b16f9ec0ddf34224c60a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e76381d4abfc19905d24b16f9ec0ddf34224c60a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>Specifies what type to use as a converter for the object this attribute is bound to.</source>
          <target state="translated">指定对于此属性绑定到的对象要使用哪种类型作为转换器。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>The class you use for conversion must inherit from <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</source>
          <target state="translated">用于转换此类必须继承自<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute.ConverterTypeName%2A&gt;</ph> property to get the name of the class that provides the data conversion for the object this attribute is bound to.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute.ConverterTypeName%2A&gt;</ph>要获取的名称来提供此属性的对象的数据转换的类属性绑定到。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>For more information about attributes, see <bpt id="p1">[</bpt>Attributes<ept id="p1">](~/docs/standard/attributes/index.md)</ept>.</source>
          <target state="translated">有关属性的详细信息，请参阅<bpt id="p1">[</bpt>属性<ept id="p1">](~/docs/standard/attributes/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>For more information about type converters, see the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> base class and <bpt id="p1">[</bpt>How to: Implement a Type Converter<ept id="p1">](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)</ept>.</source>
          <target state="translated">有关类型转换器的详细信息，请参阅<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>基类和<bpt id="p1">[</bpt>如何： 实现类型转换器<ept id="p1">](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)</ept>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>In order to establish a type converter on a custom class that provides type conversion behavior for XAML, you apply the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> attribute to your type.</source>
          <target state="translated">为了建立 xaml 提供类型转换行为的自定义类的类型转换器，你将应用<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>属性设为你的类型。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>The argument of the attribute references your type converter implementation.</source>
          <target state="translated">属性的自变量引用您的类型转换器实现。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>Your type converter should be able to accept values from a string that is used for attributes or initialization text in XAML markup, and convert that string into your intended destination type.</source>
          <target state="translated">类型转换器应能够接受从用于特性或在 XAML 标记中的初始化文本字符串的值，并将该字符串转换为预期的目标类型。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>For more information, see<bpt id="p1">[</bpt>TypeConverters and XAML<ept id="p1">](~/docs/framework/wpf/advanced/typeconverters-and-xaml.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>对和 XAML<ept id="p1">](~/docs/framework/wpf/advanced/typeconverters-and-xaml.md)</ept>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>Rather than applying to all values of a type, a type converter behavior for XAML can also be established on a specific property.</source>
          <target state="translated">而不是将应用于类型的所有值，XAML 的类型转换器行为还可以建立上的特定属性。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>In this case, you apply <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> to the property definition (the outer definition, not the specific <ph id="ph2">`get`</ph> and <ph id="ph3">`set`</ph> definitions).</source>
          <target state="translated">在这种情况下，应用<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>到属性定义 (外部定义，而不是特定<ph id="ph2">`get`</ph>和<ph id="ph3">`set`</ph>定义)。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>A type converter behavior for XAML usage of a custom attachable member can be assigned by applying <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> to the <ph id="ph2">`get`</ph> method accessor that supports the XAML usage.</source>
          <target state="translated">可以通过应用分配的自定义的可附加成员的 XAML 用法的类型转换器行为<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>到<ph id="ph2">`get`</ph>支持 XAML 用法的方法访问器。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>Attached Properties Overview<ept id="p1">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>附加属性概述<ept id="p1">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>For complex XAML serialization cases that require additional state from the object runtime, consider defining a value serializer in addition to a type converter, and attribute both support classes on your custom types or custom members.</source>
          <target state="translated">对于复杂 XAML 序列化的情况下，需要从对象运行时的其他状态，请考虑在自定义的类型或自定义成员上定义除了类型转换器和属性的值序列化程序这两个支持类。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph>.</source>
          <target state="translated">有关详情，请参阅<ph id="ph1">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>The following example declares <ph id="ph1">`MyClass`</ph> to use the type converter called <ph id="ph2">`MyClassConverter`</ph>.</source>
          <target state="translated">下面的示例声明<ph id="ph1">`MyClass`</ph>用于调用的类型转换器<ph id="ph2">`MyClassConverter`</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>This example assumes that <ph id="ph1">`MyClassConverter`</ph> has been implemented elsewhere.</source>
          <target state="translated">此示例假定<ph id="ph1">`MyClassConverter`</ph>已在其他位置实现。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>The class implementing the converter (<ph id="ph1">`MyClassConverter`</ph>) must inherit from the <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> class.</source>
          <target state="translated">实现转换器的类 (<ph id="ph1">`MyClassConverter`</ph>) 必须继承自<ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>The next example creates an instance of <ph id="ph1">`MyClass`</ph>.</source>
          <target state="translated">下一个示例创建的实例<ph id="ph1">`MyClass`</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>Then it gets the attributes for the class, and prints the name of the type converter used by <ph id="ph1">`MyClass`</ph>.</source>
          <target state="translated">然后它将获取的属性类，并打印的名称由使用的类型转换器<ph id="ph1">`MyClass`</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> class with the default type converter, which is an empty string ("").</source>
          <target state="translated">使用默认类型转换器，即空字符串（""）初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor">
          <source>The class that provides the data conversion must inherit from <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</source>
          <target state="translated">提供的数据转换此类必须继承自<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.String)">
          <source>The fully qualified name of the class to use for data conversion for the object this attribute is bound to.</source>
          <target state="translated">类的完全限定名，该类将用于此属性所绑定到的对象的数据转换。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> class, using the specified type name as the data converter for the object this attribute is bound to.</source>
          <target state="translated">通过将指定类型名称用作该属性所绑定到的对象的数据转换器，初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.String)">
          <source>The class that provides the data conversion must inherit from <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</source>
          <target state="translated">提供的数据转换此类必须继承自<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of the converter class to use for data conversion for the object this attribute is bound to.</source>
          <target state="translated">表示转换器类的类型的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>，它将用于该特性所绑定到的对象的数据转换。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> class, using the specified type as the data converter for the object this attribute is bound to.</source>
          <target state="translated">通过将指定类型用作该属性所绑定到的对象的数据转换器，初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)">
          <source>The class that provides the data conversion must inherit from <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</source>
          <target state="translated">提供的数据转换此类必须继承自<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.TypeConverterAttribute.ConverterTypeName">
          <source>Gets the fully qualified type name of the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to use as a converter for the object this attribute is bound to.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 的完全限定的类型名，以将其用作此特性所绑定到的对象的转换器。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeConverterAttribute.ConverterTypeName">
          <source>The fully qualified type name of the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to use as a converter for the object this attribute is bound to, or an empty string ("") if none exists.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 的完全限定的类型名，它将用作此特性所绑定到的对象的转换器；如果不存在，则为空字符串 ("")。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeConverterAttribute.ConverterTypeName">
          <source>The default value is an empty string ("").</source>
          <target state="translated">默认值为空字符串 ("")。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="F:System.ComponentModel.TypeConverterAttribute.Default">
          <source>Specifies the type to use as a converter for the object this attribute is bound to.</source>
          <target state="translated">指定用作此特性所绑定到的对象的转换器的类型。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.Equals(System.Object)">
          <source>The object to test the value equality of.</source>
          <target state="translated">要进行值的相等性测试的对象。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.Equals(System.Object)">
          <source>Returns whether the value of the given object is equal to the current <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph>.</source>
          <target state="translated">返回给定对象的值是否等于当前的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the given object is equal to that of the current <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果给定对象的值等于当前 <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> 的值，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">返回此实例的哈希代码。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph>.</source>
          <target state="translated">当前 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> 的哈希代码。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>