<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeDescriptor.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5968d329f2f177601a519db6bf1860db9d9f3c359.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">968d329f2f177601a519db6bf1860db9d9f3c359</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Provides information about the characteristics for a component, such as its attributes, properties, and events.</source>
          <target state="translated">提供有关组件特征的信息，如组件的特性、属性和事件。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>The .NET Framework provides two ways to access metadata on a type: the reflection API provided in the <ph id="ph1">&lt;xref:System.Reflection?displayProperty=nameWithType&gt;</ph> namespace, and the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class.</source>
          <target state="translated">.NET Framework 提供了两种方法可以访问的类型的元数据： 在系统提供的 API 的反射<ph id="ph1">&lt;xref:System.Reflection?displayProperty=nameWithType&gt;</ph>命名空间，和<ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Reflection is a general mechanism available to all types because its foundation is established in the <ph id="ph1">&lt;xref:System.Object.GetType%2A&gt;</ph> method of the root <ph id="ph2">&lt;xref:System.Object&gt;</ph> class.</source>
          <target state="translated">反射是适用于所有类型的通用机制，因为其 foundation 建立在<ph id="ph1">&lt;xref:System.Object.GetType%2A&gt;</ph>方法的根<ph id="ph2">&lt;xref:System.Object&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>The information it returns for a type is not extensible, in that it cannot be modified after compilation of the target type.</source>
          <target state="translated">在于不能修改它的目标类型的编译完成后，是不可扩展的它将返回为某一类型的信息。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>For more information, see the topics in <bpt id="p1">[</bpt>Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅中的主题<bpt id="p1">[</bpt>反射<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>In contrast, <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> is an extensible inspection mechanism for components: those classes that implement the <ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph> interface.</source>
          <target state="translated">与此相反，<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>是组件用于可扩展检查机制： 那些类，该实现<ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Unlike reflection, it does not inspect for methods.</source>
          <target state="translated">与不同的是反射，它并不检查方法。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> can be dynamically extended by several services available through the target component's <ph id="ph2">&lt;xref:System.ComponentModel.Component.Site%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> 通过目标组件通过提供的多个服务可以动态扩展<ph id="ph2">&lt;xref:System.ComponentModel.Component.Site%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>The following table shows these services.</source>
          <target state="translated">下表显示了这些服务。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Service name</source>
          <target state="translated">服务名称</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Enables another class, such as <ph id="ph1">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>, to provide extra properties to a component.</source>
          <target state="translated">使另一个类，如<ph id="ph1">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>、 提供给组件的额外属性。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Enables another object to modify the standard metadata that is exposed by a component.</source>
          <target state="translated">使另一个对象以修改由组件公开的标准元数据。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Enables a class to completely and dynamically specify its own metadata, replacing the standard inspection mechanism of <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated">支持的一类用于完全且动态地指定其自己的元数据，替换的标准检查机制<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>The extensibility provided by <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> allows the design-time representation of a component to differ from its actual run-time representation, which makes <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> useful for building design-time infrastructure.</source>
          <target state="translated">提供的扩展性<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>允许不同于其实际运行时表示形式，它使组件的设计时表示<ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>用于构建设计时基础结构。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>All the methods in <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> are <ph id="ph2">`static`</ph>.</source>
          <target state="translated">中的所有方法<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>是<ph id="ph2">`static`</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>You cannot create an instance of this class, and this class cannot be inherited.</source>
          <target state="translated">无法创建此类的实例，不能继承此类。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>You can set property and event values two different ways: specify them in the component class or change them at design time.</source>
          <target state="translated">你可以设置属性和事件值两种不同方式： 在组件类中指定它们，或在设计时更改它们。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Because you can set these values two ways, the overloaded methods of <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> take two different types of parameters: a class type or an object instance.</source>
          <target state="translated">因为你可以设置这些值的重载方法的两种方式<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>采用两种不同类型的参数： 类类型或对象实例。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>When you want to access <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> information and you have an instance of the object, use the method that calls for a component.</source>
          <target state="translated">如果想要访问<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>信息，而且您有对象的实例，使用的组件调用的方法。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Use the method that calls for the class type only when you do not have an instance of the object.</source>
          <target state="translated">使用仅在没有对象的实例时，为类类型调用方法。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Properties and events are cached by <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> for speed.</source>
          <target state="translated">通过缓存属性和事件<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>的速度。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">通常情况下，它们是常量对象的生存期内。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">但是，扩展程序提供程序和设计器可以更改对象上的属性的集。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>If this is the case, then the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</ph> method must be called to update the cache.</source>
          <target state="translated">如果出现这种情况，则<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</ph>必须调用方法以更新缓存。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Adds class-level attributes to the target component.</source>
          <target state="translated">向目标组件添加类级别属性。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>An instance of the target component.</source>
          <target state="translated">目标组件的实例。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> objects to add to the component's class.</source>
          <target state="translated">要添加到组件的类的 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 对象数组。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>Adds class-level attributes to the target component instance.</source>
          <target state="translated">向目标组件实例添加类级别属性。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> that was used to add the specified attributes.</source>
          <target state="translated">用于添加指定属性的新创建的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Object%2CSystem.Attribute%5B%5D%29&gt;</ph> method adds class-level attributes to the specified instance of a component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Object%2CSystem.Attribute%5B%5D%29&gt;</ph>方法向组件的指定实例添加类级别属性。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>Because this is a common requirement of applications using the <ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph> Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</source>
          <target state="translated">因为这是使用应用程序的一个常见要求<ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph>Windows 窗体设计器和属性窗口中，此方法提供一种快捷方式： 创建合并提供的属性与属性的类型说明提供程序已存在的类。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>The return value is the type description provider that was used to add the attributes.</source>
          <target state="translated">返回值是用于添加特性的类型说明提供。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>This provider can later be passed to the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method when the added attributes are no longer needed.</source>
          <target state="translated">此提供程序更高版本可以传递给<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph>方法时不再需要添加的属性。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>One or both of the parameters is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">两个参数之一或两个参数均为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>for full access to system resources.</source>
          <target state="translated">对系统资源的完全访问权限。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">要求值： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>Associated state:</source>
          <target state="translated">关联的状态：</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">目标组件的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> objects to add to the component's class.</source>
          <target state="translated">要添加到组件的类的 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 对象数组。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>Adds class-level attributes to the target component type.</source>
          <target state="translated">向目标组件类型添加类级别属性。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> that was used to add the specified attributes.</source>
          <target state="translated">用于添加指定属性的新创建的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Type%2CSystem.Attribute%5B%5D%29&gt;</ph> method adds class-level attributes to the specified type of a component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Type%2CSystem.Attribute%5B%5D%29&gt;</ph>方法向指定类型的一个组件添加类级别属性。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>Because this is a common requirement of applications using the <ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph> Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</source>
          <target state="translated">因为这是使用应用程序的一个常见要求<ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph>Windows 窗体设计器和属性窗口中，此方法提供一种快捷方式： 创建合并提供的属性与属性的类型说明提供程序已存在的类。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>The return value is the type description provider that was used to add the attributes.</source>
          <target state="translated">返回值是用于添加特性的类型说明提供。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>This provider can later be passed to the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method when the added attributes are no longer needed.</source>
          <target state="translated">此提供程序更高版本可以传递给<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph>方法时不再需要添加的属性。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>One or both of the parameters is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">两个参数之一或两个参数均为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>for full access to system resources.</source>
          <target state="translated">对系统资源的完全访问权限。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">要求值： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>Associated state:</source>
          <target state="translated">关联的状态：</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>The editor base type to add the editor table for.</source>
          <target state="translated">要添加编辑器表的编辑器基类型。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>If a table already exists for this type, this method will do nothing.</source>
          <target state="translated">如果针对此类型的表已存在，此方法将不起作用。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> to add.</source>
          <target state="translated">要添加的 <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>Adds an editor table for the given editor base type.</source>
          <target state="translated">为给定的编辑器基类型添加编辑器表。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddEditorTable%2A&gt;</ph> method adds an editor table for the given editor base type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddEditorTable%2A&gt;</ph>方法添加编辑器表对于给定的编辑器基类型。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>Typically, editors are specified as metadata on a component.</source>
          <target state="translated">通常情况下，编辑器指定为在组件上的元数据。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>However, if no metadata for a requested editor base type can be found on the component, the associated <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> will search an editor table for the editor type, if one can be found.</source>
          <target state="translated">但是，如果没有元数据请求的编辑器基类型可以找到该组件上，关联<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>如果可以找到一个将搜索编辑器类型，编辑器表。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>Once an editor table has been added to a type descriptor, it cannot be removed and is owned by the type descriptor.</source>
          <target state="translated">到类型描述符添加编辑器表后, 它不能删除，并拥有的类型描述符。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>The type descriptor may freely make modifications to this table.</source>
          <target state="translated">类型描述符自由地可能会使对此表进行修改。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>The format for an editor table uses data types as keys and editors as values.</source>
          <target state="translated">编辑器表的格式使用的数据类型作为键，使用编辑器作为值。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>The value portion of an entry in the table represents an editor instance.</source>
          <target state="translated">表中的条目的值部分表示的编辑器实例。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>It can have one of three values.</source>
          <target state="translated">它可以具有三个值之一。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>If it contains a string, the type descriptor will assume this is a fully qualified name of a type, and then load the type for the object.</source>
          <target state="translated">如果它包含一个字符串，类型描述符将假设这是对象的类型，然后加载该类型的完全限定的名称。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>If it contains a type, an instance of this type will be created to obtain an editor.</source>
          <target state="translated">如果其包含类型，则将创建此类型的实例以获取编辑器。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>Finally, the value portion may contain an actual editor instance.</source>
          <target state="translated">最后中的值部分可能包含实际的编辑器实例。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>If the type descriptor resolves an editor to an instance, it will store the instance back into the table for future use.</source>
          <target state="translated">如果类型描述符解析为实例的编辑器，它将存储回供将来使用该表的实例。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Adds a type description provider to the list of providers for this type descriptor.</source>
          <target state="translated">将类型描述提供程序添加到此类型描述符的提供程序的列表。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to add.</source>
          <target state="translated">要添加的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>An instance of the target component.</source>
          <target state="translated">目标组件的实例。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Adds a type description provider for a single instance of a component.</source>
          <target state="translated">为某个组件的单个实例添加类型描述提供程序。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method adds a type description provider that supplies type information for a single instance of a component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph>方法添加类型说明提供程序提供类型的组件的单个实例的信息。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>If a provider is added by this method, the provider's <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A&gt;</ph> method will not be called because the instance already exists.</source>
          <target state="translated">如果此方法，该提供程序的添加提供程序<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A&gt;</ph>将不调用方法，因为该实例已经存在。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>This method does not maintain a hard reference to the component, so it does not prevent the component from finalizing.</source>
          <target state="translated">此方法不维护对该组件的硬引用，因此不会阻止该组件正在最后完成。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>It is possible to add multiple type description providers for the same type or object.</source>
          <target state="translated">它是可以添加多个类型说明提供程序的相同类型或对象。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>If this occurs, the first type description provider encountered that provides type information will be used exclusively.</source>
          <target state="translated">如果发生这种情况，将以独占方式使用的第一个类型说明提供遇到提供类型信息。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Since type information providers are stored in a stack, the last provider added will be the first one queried.</source>
          <target state="translated">由于类型信息提供程序存储堆栈中，添加的最后一个提供将第一个查询。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>This behavior enables the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt;</ph> methods to be used to push and pop type description providers as required for particular scenarios.</source>
          <target state="translated">此行为能让<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph>和<ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt;</ph>方法用于进行推送和弹出类型说明提供程序所需的特定方案。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>If successful, this method calls the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29&gt;</ph> method on the <ph id="ph2">`instance`</ph> parameter.</source>
          <target state="translated">如果成功，此方法调用<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29&gt;</ph>方法<ph id="ph2">`instance`</ph>参数。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The two versions of this method produce results with different scopes.</source>
          <target state="translated">此方法的两个版本生成和不同作用域的结果。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> method that takes an <ph id="ph2">&lt;xref:System.Object&gt;</ph> parameter affects only that single instance of the component specified.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph>采用的方法<ph id="ph2">&lt;xref:System.Object&gt;</ph>参数只影响该单个实例的指定的组件。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>In contrast, the other overload, which takes a <ph id="ph1">&lt;xref:System.Type&gt;</ph> parameter, affects all instances of the component described by that type.</source>
          <target state="translated">与此相反，另一重载，它将采用<ph id="ph1">&lt;xref:System.Type&gt;</ph>参数，会影响该类型所描述的组件的所有实例。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method if you need to call from partially trusted code.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph>方法如果你需要从部分受信任代码调用。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">两个参数之一或两个参数均为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>for full access to system resources.</source>
          <target state="translated">对系统资源的完全访问权限。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">要求值： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Associated state:</source>
          <target state="translated">关联的状态：</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to add.</source>
          <target state="translated">要添加的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">目标组件的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Adds a type description provider for a component class.</source>
          <target state="translated">为组件类添加类型说明提供程序。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method adds a type description provider that supplies type information for the specified class, derived classes, and all instances of these types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph>方法添加类型说明提供程序提供类型指定的类，派生的类中，以及这些类型的所有实例的信息。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">`type`</ph> parameter can be any type, including an interface.</source>
          <target state="translated"><ph id="ph1">`type`</ph>参数可以是任何类型，包括一个接口。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>For example, to provide custom type and instance information for all components, you would specify <ph id="ph1">`typeof(IComponent)`</ph>.</source>
          <target state="translated">例如，若要提供自定义类型和实例的所有组件的信息，应指定<ph id="ph1">`typeof(IComponent)`</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Passing <ph id="ph1">`typeof(object)`</ph> will call the provider to supply type information for all types.</source>
          <target state="translated">传递<ph id="ph1">`typeof(object)`</ph>将调用提供程序提供所有类型的类型信息。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>This method does not maintain a hard reference to any object, so it does not prevent objects from finalizing.</source>
          <target state="translated">此方法不维护对任何对象的硬引用，因此不会阻止对象正在最后完成。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>It is possible to add multiple type description providers for the same type or object.</source>
          <target state="translated">它是可以添加多个类型说明提供程序的相同类型或对象。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>If this occurs, the first type description provider encountered that provides type information will be used exclusively.</source>
          <target state="translated">如果发生这种情况，将以独占方式使用的第一个类型说明提供遇到提供类型信息。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Because type information providers are stored in a stack, the last provider added will be the first one queried.</source>
          <target state="translated">由于类型信息提供程序存储在堆栈中，添加的最后一个提供将第一个查询。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>This behavior enables the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt;</ph> methods to be used to push and pop type description providers as required for particular scenarios.</source>
          <target state="translated">此行为能让<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph>和<ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt;</ph>方法用于进行推送和弹出类型说明提供程序所需的特定方案。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>If successful, this method calls the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29&gt;</ph> method on the <ph id="ph2">`type`</ph> parameter.</source>
          <target state="translated">如果成功，此方法调用<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29&gt;</ph>方法<ph id="ph2">`type`</ph>参数。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The two versions of this method produce results with different scopes.</source>
          <target state="translated">此方法的两个版本生成和不同作用域的结果。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> method that takes an <ph id="ph2">&lt;xref:System.Object&gt;</ph> parameter affects only that single instance of the component specified.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph>采用的方法<ph id="ph2">&lt;xref:System.Object&gt;</ph>参数只影响该单个实例的指定的组件。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>In contrast, the other overload, which takes a <ph id="ph1">&lt;xref:System.Type&gt;</ph> parameter, affects all instances of the component described by that type.</source>
          <target state="translated">与此相反，另一重载，它将采用<ph id="ph1">&lt;xref:System.Type&gt;</ph>参数，会影响该类型所描述的组件的所有实例。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method if you need to call from partially trusted code.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph>方法如果你需要从部分受信任代码调用。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">两个参数之一或两个参数均为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>for full access to system resources.</source>
          <target state="translated">对系统资源的完全访问权限。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">要求值： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Associated state:</source>
          <target state="translated">关联的状态：</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Adds a type description provider to the list of providers for this type descriptor.</source>
          <target state="translated">将类型描述提供程序添加到此类型描述符的提供程序的列表。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to add.</source>
          <target state="translated">要添加的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>An instance of the target component.</source>
          <target state="translated">目标组件的实例。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Adds a type description provider for a single instance of a component.</source>
          <target state="translated">为某个组件的单个实例添加类型描述提供程序。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>This method can be called from partially trusted code.</source>
          <target state="translated">可从部分受信任的代码调用此方法。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph>是定义，调用方可以注册的提供程序的指定实例如果其类型也为部分受信任。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method if you do not need to call from partially trusted code.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph>如果不需要从部分受信任代码调用的方法。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">两个参数之一或两个参数均为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>For registry access.</source>
          <target state="translated">用于注册表访问。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">安全操作： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">安全操作： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Associated type: The <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> that is required by the assembly that defines the <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> parameter's type.</source>
          <target state="translated">关联的类型：<ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>所需定义的程序集<ph id="ph2">&lt;paramref name="instance" /&gt;</ph>参数的类型。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to add.</source>
          <target state="translated">要添加的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">目标组件的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Adds a type description provider for a component class.</source>
          <target state="translated">为组件类添加类型说明提供程序。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>This method can be called from partially trusted code.</source>
          <target state="translated">可从部分受信任的代码调用此方法。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>If <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> is defined, the caller can register a provider for the specified type if it is also partially trusted.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph>是定义，调用方可以注册的提供程序的指定类型是否也部分受信任。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method if you do not need to call from partially trusted code.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph>如果不需要从部分受信任代码调用的方法。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">两个参数之一或两个参数均为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>For registry access.</source>
          <target state="translated">用于注册表访问。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">安全操作： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">安全操作： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Associated type: The <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> that is required by the assembly that defines <ph id="ph2">&lt;paramref name="type" /&gt;</ph>.</source>
          <target state="translated">关联的类型：<ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>所需定义的程序集<ph id="ph2">&lt;paramref name="type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>Gets or sets the provider for the Component Object Model (COM) type information for the target component.</source>
          <target state="translated">获取或设置用于目标组件的组件对象模型 (COM) 类型信息的提供程序。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComNativeDescriptorHandler" /&gt;</ph> instance representing the COM type information provider.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.IComNativeDescriptorHandler" /&gt;</ph> 实例，表示 COM 类型的信息提供程序实例。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.ComponentModel.IComNativeDescriptorHandler&gt;</ph> interface are obsolete.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler%2A&gt;</ph>属性和<ph id="ph2">&lt;xref:System.ComponentModel.IComNativeDescriptorHandler&gt;</ph>接口已过时。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph> property.</source>
          <target state="translated">有关更多信息，请参见 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>for full access to system resources.</source>
          <target state="translated">对系统资源的完全访问权限。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">要求值： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>Associated state:</source>
          <target state="translated">关联的状态：</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.TypeDescriptor.ComObjectType">
          <source>Gets the type of the Component Object Model (COM) object represented by the target component.</source>
          <target state="translated">获取由目标组件表示的组件对象模型 (COM) 对象的类型。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComObjectType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the COM object represented by this component, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> for non-COM objects.</source>
          <target state="translated">由此组件表示的 COM 对象的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>，或非 COM 对象的 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComObjectType">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph> property returns a type that can be passed to the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method to define a type description provider for COM types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph>属性返回类型，可传递给<ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph>方法用来定义 COM 类型的类型说明提供。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComObjectType">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph> property and other members in this class replace the functionality in the obsolete <ph id="ph2">&lt;xref:System.ComponentModel.IComNativeDescriptorHandler&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph>属性和其他此类中的成员替换中的过时的功能<ph id="ph2">&lt;xref:System.ComponentModel.IComNativeDescriptorHandler&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComObjectType">
          <source>To implement a mapping layer between a COM object and <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>, add a <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> to handle type <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph>.</source>
          <target state="translated">若要实现 COM 对象之间的映射层和<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>，添加<ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph>到句柄类型<ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>The primary <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">主要 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>The secondary <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">辅助 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>Creates a primary-secondary association between two objects.</source>
          <target state="translated">在两个对象之间创建主要和辅助关联。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> method creates an association between a primary and a secondary object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph>方法创建一个主和辅助对象之间的关联。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>Once an association is created, a designer or other filtering mechanism can add properties that route to either object into the primary object's property set.</source>
          <target state="translated">一旦创建关联时，设计器或其他筛选机制可以添加到主对象的属性集路由到任一对象的属性。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>When a property invocation is made against the primary object, the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;</ph> method will be called to resolve the actual object instance that is related to its type parameter.</source>
          <target state="translated">当针对主对象，进行属性调用<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;</ph>将调用方法，以解决与其类型参数的实际对象实例。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either object from being finalized and reclaimed by garbage collection.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.WeakReference&gt;</ph>用于维护主要和辅助对象之间的关联; 因此，此方法不会阻止任一对象从已完成并通过垃圾回收回收。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">两个参数之一或两个参数均为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="primary" /&gt;</ph> is equal to <ph id="ph2">&lt;paramref name="secondary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="primary" /&gt;</ph> 等于 <ph id="ph2">&lt;paramref name="secondary" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>for full access to system resources.</source>
          <target state="translated">对系统资源的完全访问权限。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">要求值： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>Associated state:</source>
          <target state="translated">关联的状态：</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> that specifies the component to associate with the designer.</source>
          <target state="translated">指定要与设计器关联的组件的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of designer to create.</source>
          <target state="translated">表示要创建的设计器的类型的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
          <source>Creates an instance of the designer associated with the specified component and of the specified type of designer.</source>
          <target state="translated">创建与指定组件关联的具有特定类型的设计器的实例。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesigner" /&gt;</ph> that is an instance of the designer for the component, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no designer can be found.</source>
          <target state="translated">如果找到组件的设计器实例，则为 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesigner" /&gt;</ph>；如果未找到设计器，则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
          <source>If this method cannot find a valid <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph>, it searches up the class hierarchy for a designer.</source>
          <target state="translated">如果此方法找不到有效<ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph>，它将为使设计器的类层次结构向上搜索。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
          <source>If it cannot find a designer in the class hierarchy, it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">如果它找不到类层次结构中的设计器，它将返回<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Creates a new event descriptor that is identical to an existing event descriptor.</source>
          <target state="translated">创建和现有事件描述符相同的新的事件描述符。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>The type of the component for which to create the new event.</source>
          <target state="translated">要为其创建新事件的组件类型。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>The existing event information.</source>
          <target state="translated">现有事件信息。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>The new attributes.</source>
          <target state="translated">新属性。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>Creates a new event descriptor that is identical to an existing event descriptor, when passed the existing <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph>.</source>
          <target state="translated">当传递现有的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> 时，创建和现有事件描述符相同的新的事件描述符。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> that has merged the specified metadata attributes with the existing metadata attributes.</source>
          <target state="translated">将指定元数据属性与现有元数据属性进行合并的新 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>Required to inspect non-public members of the component.</source>
          <target state="translated">需要检查组件的非公共成员。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>Link demand access required for <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> type <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>.</source>
          <target state="translated">链接要求访问权限所需的<ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph>类型<ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The type of the component the event lives on.</source>
          <target state="translated">该事件依赖的组件的类型。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The name of the event.</source>
          <target state="translated">事件的名称。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The type of the delegate that handles the event.</source>
          <target state="translated">处理该事件的委托的类型。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The attributes for this event.</source>
          <target state="translated">此事件的属性。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>Creates a new event descriptor that is identical to an existing event descriptor by dynamically generating descriptor information from a specified event on a type.</source>
          <target state="translated">通过从类型上的指定事件动态生成描述符信息，创建与现有事件描述符相同的新事件描述符。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> that is bound to a type.</source>
          <target state="translated">绑定到类型的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>Required to inspect non-public members of the component.</source>
          <target state="translated">需要检查组件的非公共成员。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>Link demand access required for <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> type <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>.</source>
          <target state="translated">链接要求访问权限所需的<ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph>类型<ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The service provider that provides a <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> service.</source>
          <target state="translated">提供 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> 服务的服务提供程序。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">此参数可以为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of object to create.</source>
          <target state="translated">要创建的对象的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>An optional array of parameter types to be passed to the object's constructor.</source>
          <target state="translated">要传递给对象的构造函数的可选参数类型数组。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> or an array of zero length.</source>
          <target state="translated">此参数可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 或长度为零的数组。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>An optional array of parameter values to pass to the object's constructor.</source>
          <target state="translated">要传递给对象的构造函数的可选参数值数组。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the number of elements must be the same as <bpt id="p1">&lt;c&gt;</bpt>argTypes<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">如果不为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，则元素个数必须与 <bpt id="p1">&lt;c&gt;</bpt>argTypes<ept id="p1">&lt;/c&gt;</ept> 相同。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>Creates an object that can substitute for another data type.</source>
          <target state="translated">创建可替换为另一种数据类型的对象。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>An instance of the substitute data type if an associated <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> is found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果找到关联的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>，则为替代数据类型的实例；否则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A&gt;</ph> method will search for a <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> that is associated with the specified <ph id="ph3">`objectType`</ph> data type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A&gt;</ph>方法将搜索<ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph>指定与该键相关联<ph id="ph3">`objectType`</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>This method first tries to obtain a type description provider from the <ph id="ph1">`provider`</ph> parameter.</source>
          <target state="translated">此方法首先尝试获取的类型说明提供程序<ph id="ph1">`provider`</ph>参数。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If this fails, it searches its own internal tables for a provider (these entries were created through previous calls to <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph>).</source>
          <target state="translated">如果此操作失败，搜索其自己的内部表的提供程序 (这些项已创建的以前调用通过<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If it finds a provider, this method will delegate the creation call to that object.</source>
          <target state="translated">如果找到一个提供程序，此方法会将委托给该对象的创建调用。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source><ph id="ph1">&lt;paramref name="objectType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="args" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph> when <ph id="ph5">&lt;paramref name="argTypes" /&gt;</ph> is not <ph id="ph6">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="objectType" /&gt;</ph> 是 <ph id="ph2">&lt;see langword="null" /&gt;</ph>，或者，当 <ph id="ph5">&lt;paramref name="argTypes" /&gt;</ph> 不是 <ph id="ph6">&lt;see langword="null" /&gt;</ph> 时，则 <ph id="ph3">&lt;paramref name="args" /&gt;</ph> 是 <ph id="ph4">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source><ph id="ph1">&lt;paramref name="argTypes" /&gt;</ph> and <ph id="ph2">&lt;paramref name="args" /&gt;</ph> have different number of elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argTypes" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="args" /&gt;</ph> 具有不同的元素数。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If the derived class does not provide a substitute instance, this method should call the base implementation.</source>
          <target state="translated">如果派生的类不提供替代实例，此方法应调用基实现。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Creates a new property descriptor for an existing property of a component.</source>
          <target state="translated">为现有的组件属性创建新的属性描述符。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the component that the property is a member of.</source>
          <target state="translated">属性是其一个成员的组件的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>The existing property descriptor.</source>
          <target state="translated">现有的属性描述符。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>The new attributes for this property.</source>
          <target state="translated">此属性的新特性。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>Creates a new property descriptor from an existing property descriptor, using the specified existing <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> and attribute array.</source>
          <target state="translated">使用指定的现有 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> 和特性数组，从现有的属性描述符创建一个新的属性描述符。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> that has the specified metadata attributes merged with the existing metadata attributes.</source>
          <target state="translated">一个将指定的元数据属性与现有的元数据属性进行合并的新 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>Required to inspect non-public members of the component.</source>
          <target state="translated">需要检查组件的非公共成员。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>Link demand access required for <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> type <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>.</source>
          <target state="translated">链接要求访问权限所需的<ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph>类型<ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the component that the property is a member of.</source>
          <target state="translated">属性是其一个成员的组件的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The name of the property.</source>
          <target state="translated">属性的名称。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the property.</source>
          <target state="translated">属性的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The new attributes for this property.</source>
          <target state="translated">此属性的新特性。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>Creates and dynamically binds a property descriptor to a type, using the specified property name, type, and attribute array.</source>
          <target state="translated">使用指定的属性名称、类型和属性数组创建属性描述符，并将其动态地绑定到类型。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> that is bound to the specified type and that has the specified metadata attributes merged with the existing metadata attributes.</source>
          <target state="translated">绑定到指定类型并具有与现有元数据属性合并的指定元数据属性的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>Required to inspect non-public members of the component.</source>
          <target state="translated">需要检查组件的非公共成员。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>Link demand access required for <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> type <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>.</source>
          <target state="translated">链接要求访问权限所需的<ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph>类型<ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">目标组件的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>The primary object of the association.</source>
          <target state="translated">关联的主要对象。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>Returns an instance of the type associated with the specified primary object.</source>
          <target state="translated">返回与指定的主要对象关联的类型的实例。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>An instance of the secondary type that has been associated with the primary object if an association exists; otherwise, <ph id="ph1">&lt;paramref name="primary" /&gt;</ph> if no specified association exists.</source>
          <target state="translated">如果存在关联，则为与主要对象关联的辅助类型的一个实例；如果不存在指定的关联，则为 <ph id="ph1">&lt;paramref name="primary" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>If a previous association has been made for the <ph id="ph1">`type`</ph> parameter using the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> method, then the <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;</ph> method returns the correct secondary object to invoke for the requested type.</source>
          <target state="translated">如果已为进行了以前的关联<ph id="ph1">`type`</ph>参数使用<ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph>方法，则<ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;</ph>方法将返回正确的辅助对象来调用为所请求类型。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>Otherwise, <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;</ph> searches for a compatible designer for <ph id="ph2">`type`</ph> and returns the designer if one is found.</source>
          <target state="translated">否则为<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;</ph>兼容的设计器中，为搜索<ph id="ph2">`type`</ph>并返回设计器，如果找到一个。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>This method never returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">此方法从不返回 <ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either the primary or secondary object from being finalized and reclaimed by garbage collection.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.WeakReference&gt;</ph>用于维护主要和辅助对象之间的关联; 因此，此方法不会阻止主或辅助对象从已完成并通过垃圾回收回收。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">两个参数之一或两个参数均为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the collection of attributes for a component or a type.</source>
          <target state="translated">返回组件或类型的属性的集合。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>The component for which you want to get attributes.</source>
          <target state="translated">要为其获取特性的组件。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>Returns the collection of attributes for the specified component.</source>
          <target state="translated">返回指定组件的属性的集合。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> containing the attributes for the component.</source>
          <target state="translated">包含该组件的特性的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>If <ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, this method returns an empty collection.</source>
          <target state="translated">如果 <ph id="ph1">&lt;paramref name="component" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>，则此方法返回空集合。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>The attributes returned by the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt;</ph> method may be dynamically modified from the original component's source listing by extender providers (<ph id="ph2">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph>), filter services (<ph id="ph3">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph>), and attribute filters.</source>
          <target state="translated">返回的属性<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt;</ph>方法可能会从原始组件的源列表，请按扩展程序提供程序进行动态修改 (<ph id="ph2">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph>)，筛选服务 (<ph id="ph3">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph>)，和属性筛选器。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>When you define a custom attribute with <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> set to <ph id="ph2">`true`</ph>, you must override the <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property to make it unique.</source>
          <target state="translated">当你定义的自定义属性<ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph>设置为<ph id="ph2">`true`</ph>，必须重写<ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph>属性以确保其唯一性。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>If all instances of your attribute are unique, override <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> to return the object identity of your attribute.</source>
          <target state="translated">如果特性的所有实例都是唯一的重写<ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph>返回特性的对象标识。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>If only some instances of your attribute are unique, return a value from <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> that would return equality in those cases.</source>
          <target state="translated">如果只有特性的一些实例是唯一的返回一个介于<ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph>，将在这些情况下返回是否相等。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>For example, some attributes have a constructor parameter that acts as a unique key.</source>
          <target state="translated">例如，有些属性禁用了用作唯一键的构造函数参数。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>For these attributes, return the value of the constructor parameter from the <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">对于这些特性，返回从构造函数参数的值<ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> returns the type identity regardless of the value of the <ph id="ph2">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">默认实现<ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph>返回而不考虑的值的类型标识<ph id="ph2">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>In order to return multiple instances of an <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> attribute from the <ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph>, your attribute must override the <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">若要返回的多个实例<ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph>属性从<ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph>，特性必须重写<ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>For an example of this method, see the <ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection.Matches%2A&gt;</ph> method.</source>
          <target state="translated">此方法的示例，请参阅<ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection.Matches%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">目标组件的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>Returns a collection of attributes for the specified type of component.</source>
          <target state="translated">返回指定组件类型的属性集合。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> with the attributes for the type of the component.</source>
          <target state="translated">具有该类型组件的特性的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>If the component is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, this method returns an empty collection.</source>
          <target state="translated">如果该组件为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，则此方法返回空集合。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">仅当没有对象的实例时，请调用此方法的此版本。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>For attributes with <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> set to <ph id="ph2">`true`</ph>, the attribute collection removes duplicate instances.</source>
          <target state="translated">有关使用属性<ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph>设置为<ph id="ph2">`true`</ph>，属性集合中删除重复的实例。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>These are instances in which the <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property returns equal values.</source>
          <target state="translated">这些是在其中实例<ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph>属性返回相等的值。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>When you define a custom attribute with <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> set to <ph id="ph2">`true`</ph>, you must override the <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property to make it unique.</source>
          <target state="translated">当你定义的自定义属性<ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph>设置为<ph id="ph2">`true`</ph>，必须重写<ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph>属性以确保其唯一性。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>If all instances of your attribute are unique, override <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> to return the object identity of your attribute.</source>
          <target state="translated">如果特性的所有实例都是唯一的重写<ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph>返回特性的对象标识。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>If only some instances of your attribute are unique, return a value from <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> that would return equality in those cases.</source>
          <target state="translated">如果只有特性的一些实例是唯一的返回一个介于<ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph>，将在这些情况下返回是否相等。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>For example, some attributes have a constructor parameter that acts as a unique key.</source>
          <target state="translated">例如，有些属性禁用了用作唯一键的构造函数参数。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>For these attributes, return the value of the constructor parameter from the <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">对于这些特性，返回从构造函数参数的值<ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> returns the type identity regardless of the value of the <ph id="ph2">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">默认实现<ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph>返回而不考虑的值的类型标识<ph id="ph2">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>In order to return multiple instances of an <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> attribute from the <ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph>, your attribute must override the <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">若要返回的多个实例<ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph>属性从<ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph>，特性必须重写<ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>The component for which you want to get attributes.</source>
          <target state="translated">要为其获取特性的组件。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to use a baseline set of attributes from the custom type descriptor if <bpt id="p1">&lt;c&gt;</bpt>component<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph2">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>component<ept id="p1">&lt;/c&gt;</ept> 的类型为 <ph id="ph2">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph>，使用自定义类型说明符中一组基础属性时为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>Returns a collection of attributes for the specified component and a Boolean indicating that a custom type descriptor has been created.</source>
          <target state="translated">为指定组件返回特性集合，并且创建了一个指示自定义类型描述符的布尔值。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> with the attributes for the component.</source>
          <target state="translated">包含该组件的特性的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>If the component is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, this method returns an empty collection.</source>
          <target state="translated">如果该组件为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，则此方法返回空集合。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>The attributes returned by the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt;</ph> method may be dynamically modified from the original components source listing by extender providers (<ph id="ph2">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph>), filter services (<ph id="ph3">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph>), and attribute filters.</source>
          <target state="translated">返回的属性<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt;</ph>方法可能会从原始的组件源列表，请按扩展程序提供程序进行动态修改 (<ph id="ph2">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph>)，筛选服务 (<ph id="ph3">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph>)，和属性筛选器。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>When you define a custom attribute with <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> set to <ph id="ph2">`true`</ph>, you must override the <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property to make it unique.</source>
          <target state="translated">当你定义的自定义属性<ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph>设置为<ph id="ph2">`true`</ph>，必须重写<ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph>属性以确保其唯一性。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>If all instances of your attribute are unique, override <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> to return the object identity of your attribute.</source>
          <target state="translated">如果特性的所有实例都是唯一的重写<ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph>返回特性的对象标识。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>If only some instances of your attribute are unique, return a value from <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> that would return equality in those cases.</source>
          <target state="translated">如果只有特性的一些实例是唯一的返回一个介于<ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph>，将在这些情况下返回是否相等。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>For example, some attributes have a constructor parameter that acts as a unique key.</source>
          <target state="translated">例如，有些属性禁用了用作唯一键的构造函数参数。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>For these attributes, return the value of the constructor parameter from the <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">对于这些特性，返回从构造函数参数的值<ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> returns the type identity regardless of the value of the <ph id="ph2">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">默认实现<ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph>返回而不考虑的值的类型标识<ph id="ph2">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>In order to return multiple instances of an <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> attribute from the <ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph>, your attribute must override the <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">若要返回的多个实例<ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph>属性从<ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph>，特性必须重写<ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the name of the class for the specified component.</source>
          <target state="translated">返回指定组件的类的名称。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> for which you want the class name.</source>
          <target state="translated">需要其类名的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>Returns the name of the class for the specified component using the default type descriptor.</source>
          <target state="translated">使用默认类型描述符，返回指定组件的类的名称。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the class for the specified component.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，包含指定组件的类的名称。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>Typically, this method returns the full <ph id="ph1">&lt;xref:System.Type&gt;</ph> name for the <ph id="ph2">`component`</ph> parameter type.</source>
          <target state="translated">通常情况下，此方法返回完整<ph id="ph1">&lt;xref:System.Type&gt;</ph>名称<ph id="ph2">`component`</ph>参数类型。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>For example, the class name for a button is "System.Windows.Forms.Button".</source>
          <target state="translated">例如，一个按钮的类名称是"System.Windows.Forms.Button"。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>If <ph id="ph1">`component`</ph> implements <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph>, it can return an alternate name.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>实现<ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph>，它可返回的备用名称。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>This method is equivalent to the overloaded <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29&gt;</ph> method with a second parameter of <ph id="ph2">`false`</ph>.</source>
          <target state="translated">此方法相当于重载<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29&gt;</ph>方法的第二个参数替换<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">目标组件的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)">
          <source>Returns the name of the class for the specified type.</source>
          <target state="translated">返回指定类型的类的名称。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the class for the specified component type.</source>
          <target state="translated">包含指定组件类型的类的名称的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)">
          <source>This method uses the cached custom type descriptor for the specified type to discover the associated class name.</source>
          <target state="translated">此方法使用的指定类型的缓存的自定义类型描述符来发现的关联的类名称。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)">
          <source><ph id="ph1">&lt;paramref name="componentType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="componentType" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> for which you want the class name.</source>
          <target state="translated">需要其类名的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要考虑自定义类型说明信息，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source>Returns the name of the class for the specified component using a custom type descriptor.</source>
          <target state="translated">使用自定义类型描述符返回指定组件的类的名称。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the class for the specified component.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，包含指定组件的类的名称。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source>Typically, this method returns the full <ph id="ph1">&lt;xref:System.Type&gt;</ph> name for the <ph id="ph2">`component`</ph> parameter type.</source>
          <target state="translated">通常情况下，此方法返回完整<ph id="ph1">&lt;xref:System.Type&gt;</ph>名称<ph id="ph2">`component`</ph>参数类型。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source>For example, the class name for a button is "System.Windows.Forms.Button".</source>
          <target state="translated">例如，一个按钮的类名称是"System.Windows.Forms.Button"。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source>If the <ph id="ph1">`component`</ph> parameter implements <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph>, it can return an alternate name.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>参数实现<ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph>，它可返回的备用名称。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 是一个跨进程远程对象。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the name of the specified component.</source>
          <target state="translated">返回指定的组件的名称。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> for which you want the class name.</source>
          <target state="translated">需要其类名的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>Returns the name of the specified component using the default type descriptor.</source>
          <target state="translated">使用默认类型描述符返回指定组件的名称。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the specified component, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there is no component name.</source>
          <target state="translated">包含指定组件的名称的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，如果没有任何组件名，则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>Typically, this method returns the name for the site of the component, if one exists.</source>
          <target state="translated">通常情况下，如果存在此方法将返回该组件的站点的名称。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>For example, the class name for a button is "System.Windows.Forms.Button".</source>
          <target state="translated">例如，一个按钮的类名称是"System.Windows.Forms.Button"。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>This method is equivalent to the overloaded <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29&gt;</ph> method with a second parameter of <ph id="ph2">`false`</ph>.</source>
          <target state="translated">此方法相当于重载<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29&gt;</ph>方法的第二个参数替换<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>This method is used at design time to retrieve the name of an instance of a component.</source>
          <target state="translated">此方法用于在设计时检索的组件的实例的名称。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 是一个跨进程远程对象。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> for which you want the class name.</source>
          <target state="translated">需要其类名的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要考虑自定义类型说明信息，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>Returns the name of the specified component using a custom type descriptor.</source>
          <target state="translated">使用自定义类型描述符返回指定组件的名称。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>The name of the class for the specified component, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if there is no component name.</source>
          <target state="translated">指定组件的类的名称；如果没有任何组件名，则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>This method is used at design time to retrieve the name of an instance of a component.</source>
          <target state="translated">此方法用于在设计时检索的组件的实例的名称。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>Typically, this method returns the name for the site of the component, if one exists.</source>
          <target state="translated">通常情况下，如果存在此方法将返回该组件的站点的名称。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>For example, the class name for a button is "System.Windows.Forms.Button".</source>
          <target state="translated">例如，一个按钮的类名称是"System.Windows.Forms.Button"。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>If the component implements the <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> interface, it can return an alternate name.</source>
          <target state="translated">如果该组件实现<ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph>接口，它可以返回的备用名称。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 是一个跨进程远程对象。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns a type converter for a component or a type.</source>
          <target state="translated">返回组件或类型的类型转换器。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>A component to get the converter for.</source>
          <target state="translated">要为其获取转换器的组件。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>Returns a type converter for the type of the specified component.</source>
          <target state="translated">返回指定组件类型的类型转换器。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> for the specified component.</source>
          <target state="translated">指定组件的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>This method locates an appropriate type converter by looking for a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>.</source>
          <target state="translated">此方法通过查找来查找相应的类型转换器<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>If it cannot find a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>, it traverses the base class hierarchy of the class until it finds a primitive type.</source>
          <target state="translated">如果找不到<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>，它遍历类的基类层次结构，直到它找到的基元类型。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>This method is equivalent to the overloaded <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt;</ph> method with a second parameter of <ph id="ph2">`false`</ph>.</source>
          <target state="translated">此方法相当于重载<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt;</ph>方法的第二个参数替换<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>For an example of using this method, see the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> class.</source>
          <target state="translated">使用此方法的示例，请参阅<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 是一个跨进程远程对象。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">目标组件的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source>Returns a type converter for the specified type.</source>
          <target state="translated">返回指定类型的类型转换器。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> for the specified type.</source>
          <target state="translated">指定类型的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">仅当没有对象的实例时，请调用此方法的此版本。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source>This method looks for the appropriate type converter by looking for a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>.</source>
          <target state="translated">此方法通过查找来查找适当的类型转换器<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source>If it cannot find a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>, it traverses the base class hierarchy of the class until it finds a primitive type.</source>
          <target state="translated">如果找不到<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>，它遍历类的基类层次结构，直到它找到的基元类型。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source>A component to get the converter for.</source>
          <target state="translated">要为其获取转换器的组件。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要考虑自定义类型说明信息，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source>Returns a type converter for the type of the specified component with a custom type descriptor.</source>
          <target state="translated">为具有自定义类型描述符的指定组件类型返回一个类型转换器。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> for the specified component.</source>
          <target state="translated">指定组件的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source>This method looks for the appropriate type converter by trying to find a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>.</source>
          <target state="translated">此方法尝试查找通过查找适当的类型转换器<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source>If it cannot find a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>, it traverses the base class hierarchy of the class until it finds a primitive type.</source>
          <target state="translated">如果找不到<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>，它遍历类的基类层次结构，直到它找到的基元类型。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 是一个跨进程远程对象。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the default event for a component or type.</source>
          <target state="translated">返回组件或类型的默认事件。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
          <source>The component to get the event for.</source>
          <target state="translated">要获取其事件的组件。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
          <source>Returns the default event for the specified component.</source>
          <target state="translated">返回指定组件的默认事件。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> with the default event, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no events.</source>
          <target state="translated">具有默认事件的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph>；如果没有事件，则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
          <source>This method is equivalent to the overloaded <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29&gt;</ph> method with a second parameter of <ph id="ph2">`false`</ph>.</source>
          <target state="translated">此方法相当于重载<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29&gt;</ph>方法的第二个参数替换<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 是一个跨进程远程对象。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">目标组件的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)">
          <source>Returns the default event for the specified type of component.</source>
          <target state="translated">返回指定组件类型的默认事件。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> with the default event, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no events.</source>
          <target state="translated">具有默认事件的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph>；如果没有事件，则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">仅当没有对象的实例时，请调用此方法的此版本。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)">
          <source><ph id="ph1">&lt;paramref name="componentType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="componentType" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
          <source>The component to get the event for.</source>
          <target state="translated">要获取其事件的组件。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要考虑自定义类型说明信息，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
          <source>Returns the default event for a component with a custom type descriptor.</source>
          <target state="translated">返回具有自定义类型描述符的组件的默认事件。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> with the default event, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no events.</source>
          <target state="translated">具有默认事件的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph>；如果没有事件，则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 是一个跨进程远程对象。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the default property for a component.</source>
          <target state="translated">返回组件的默认属性。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)">
          <source>The component to get the default property for.</source>
          <target state="translated">要获取其默认属性的组件。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)">
          <source>Returns the default property for the specified component.</source>
          <target state="translated">返回指定组件的默认属性。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> with the default property, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no properties.</source>
          <target state="translated">具有默认属性的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>；如果没有属性，则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)">
          <source>If the <ph id="ph1">`component`</ph> parameter is <ph id="ph2">`null`</ph>, this method returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>参数是<ph id="ph2">`null`</ph>，此方法返回<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 是一个跨进程远程对象。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the class to get the property for.</source>
          <target state="translated">表示要获取其属性的类的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)">
          <source>Returns the default property for the specified type of component.</source>
          <target state="translated">返回指定类型组件的默认属性。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> with the default property, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no properties.</source>
          <target state="translated">具有默认属性的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>；如果没有属性，则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">仅当没有对象的实例时，请调用此方法的此版本。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, this method returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`componentType`</ph>参数是<ph id="ph2">`null`</ph>，此方法返回<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
          <source>The component to get the default property for.</source>
          <target state="translated">要获取其默认属性的组件。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要考虑自定义类型说明信息，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
          <source>Returns the default property for the specified component with a custom type descriptor.</source>
          <target state="translated">使用自定义类型描述符返回指定组件的默认属性。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> with the default property, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no properties.</source>
          <target state="translated">具有默认属性的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>；如果没有属性，则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
          <source>If the <ph id="ph1">`component`</ph> parameter is <ph id="ph2">`null`</ph>, this method returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>参数是<ph id="ph2">`null`</ph>，此方法返回<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 是一个跨进程远程对象。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns an editor with the specified base type.</source>
          <target state="translated">使用指定的基类型返回编辑器。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>The component to get the editor for.</source>
          <target state="translated">要为其获取编辑器的组件。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the base type of the editor you want to find.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>，表示要查找的编辑器的基类型。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>Gets an editor with the specified base type for the specified component.</source>
          <target state="translated">获取指定组件的具有指定基类型的编辑器。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>An instance of the editor that can be cast to the specified editor type, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no editor of the requested type can be found.</source>
          <target state="translated">可被强制转换为指定编辑器类型的编辑器的一个实例，如果找不到请求类型的编辑器，则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>The type of <ph id="ph1">`editorBaseType`</ph> is usually <ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>, but you can also use other types (for example, <ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph> and <ph id="ph4">&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;</ph>).</source>
          <target state="translated">一种<ph id="ph1">`editorBaseType`</ph>通常是<ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>，但你也可以使用其他类型 (例如，<ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph>和<ph id="ph4">&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>You can define multiple editors for a property.</source>
          <target state="translated">你可以定义多个属性编辑器。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>You use this method to select the editor you want to use.</source>
          <target state="translated">使用此方法以选择你想要使用的编辑器。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> or <ph id="ph2">&lt;paramref name="editorBaseType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="editorBaseType" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 是一个跨进程远程对象。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">目标组件的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the base type of the editor you are trying to find.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>，表示正在尝试查找的编辑器的基类型。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>Returns an editor with the specified base type for the specified type.</source>
          <target state="translated">返回具有指定基类型的指定类型的编辑器。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>An instance of the editor object that can be cast to the given base type, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no editor of the requested type can be found.</source>
          <target state="translated">可被强制转换为给定基类型的编辑器对象的一个实例，如果找不到请求类型的编辑器，则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>The type of <ph id="ph1">`editorBaseType`</ph> is usually <ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>, but you can also use other types (for example <ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph> and <ph id="ph4">&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;</ph>).</source>
          <target state="translated">一种<ph id="ph1">`editorBaseType`</ph>通常是<ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>，但你也可以使用其他类型 (例如<ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph>和<ph id="ph4">&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>You can define multiple editors for a type.</source>
          <target state="translated">你可以定义多个类型的编辑器。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>You use this method to select the one you want to use.</source>
          <target state="translated">使用此方法以选择你想要使用的一个。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">仅当没有对象的实例时，请调用此方法的此版本。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> or <ph id="ph2">&lt;paramref name="editorBaseType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="editorBaseType" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>The component to get the editor for.</source>
          <target state="translated">要为其获取编辑器的组件。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the base type of the editor you want to find.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>，表示要查找的编辑器的基类型。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>A flag indicating whether custom type description information should be considered.</source>
          <target state="translated">表示是否应考虑自定义类型描述信息的标志。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>Returns an editor with the specified base type and with a custom type descriptor for the specified component.</source>
          <target state="translated">为指定组件返回具有指定基类型和自定义类型描述符的编辑器。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>An instance of the editor that can be cast to the specified editor type, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no editor of the requested type can be found.</source>
          <target state="translated">可被强制转换为指定编辑器类型的编辑器的一个实例，如果找不到请求类型的编辑器，则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>The type of <ph id="ph1">`editorBaseType`</ph> is usually <ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>, but you can also use other types (for example <ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph> and <ph id="ph4">&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;</ph>).</source>
          <target state="translated">一种<ph id="ph1">`editorBaseType`</ph>通常是<ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>，但你也可以使用其他类型 (例如<ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph>和<ph id="ph4">&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>You can define multiple editors for a property.</source>
          <target state="translated">你可以定义多个属性编辑器。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>You use this method to select the editor you want to use.</source>
          <target state="translated">使用此方法以选择你想要使用的编辑器。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> or <ph id="ph2">&lt;paramref name="editorBaseType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="editorBaseType" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 是一个跨进程远程对象。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the collection of events for a component or type.</source>
          <target state="translated">返回组件或类型的事件的集合。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>A component to get the events for.</source>
          <target state="translated">要为其获取事件的组件。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>Returns the collection of events for the specified component.</source>
          <target state="translated">返回指定组件的事件的集合。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> with the events for this component.</source>
          <target state="translated">具有此组件的事件的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>Retrieves a collection of events that the given <ph id="ph1">`component`</ph> parameter instance provides.</source>
          <target state="translated">检索事件的集合，给定<ph id="ph1">`component`</ph>参数实例提供。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>This collection can differ from the set of events the class provides.</source>
          <target state="translated">此集合可以与此类提供的事件集不同。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>If the <ph id="ph1">`component`</ph> parameter is sited, the site can add or remove additional events.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>占位参数，则该位置可以添加或删除其他事件。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, then an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>是<ph id="ph2">`null`</ph>，则返回空集合。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>For an example of this method, see the <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptorCollection.Count%2A&gt;</ph> property.</source>
          <target state="translated">此方法的示例，请参阅<ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptorCollection.Count%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 是一个跨进程远程对象。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">目标组件的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
          <source>Returns the collection of events for a specified type of component.</source>
          <target state="translated">返回指定组件类型的事件的集合。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> with the events for this component.</source>
          <target state="translated">具有此组件的事件的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">仅当没有对象的实例时，请调用此方法的此版本。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`componentType`</ph>参数是<ph id="ph2">`null`</ph>，返回一个空集合。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>A component to get the events for.</source>
          <target state="translated">要为其获取事件的组件。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> that you can use as a filter.</source>
          <target state="translated">可用作筛选器的类型 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 的数组。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>Returns the collection of events for a specified component using a specified array of attributes as a filter.</source>
          <target state="translated">通过将指定的属性数组用作筛选器来返回指定组件的事件集合。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> with the events that match the specified attributes for this component.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph>，包含与此组件的指定特性匹配的事件。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>The events for the <ph id="ph1">`component`</ph> parameter can differ from the events of a class, because the site can add or remove events if the <ph id="ph2">`component`</ph> parameter is sited.</source>
          <target state="translated">有关事件<ph id="ph1">`component`</ph>参数可以与不同，事件的类，因为该位置可以添加或删除事件，如果<ph id="ph2">`component`</ph>放置参数。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>The <ph id="ph1">`attributes`</ph> array can have a mix of <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">`attributes`</ph>数组可以包含多种<ph id="ph2">&lt;xref:System.Type&gt;</ph>和<ph id="ph3">&lt;xref:System.Attribute&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">筛选由以下规则定义：</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> is treated as a wildcard; it matches any event that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Type&gt;</ph>视为通配符; 它与具有任何事件匹配<ph id="ph2">&lt;xref:System.Type&gt;</ph>属性其集中。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>If an event does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the event is not included in the returned array.</source>
          <target state="translated">如果事件没有<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>的同一个类，事件不包括在返回数组中。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>If the attribute is an instance of the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class, the event must be an exact match or it is not included in the returned array.</source>
          <target state="translated">如果属性是实例<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>类，事件必须是完全匹配，或它不包括在返回的数组。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>If an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the event.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>指定实例和它是默认事件，它包括在返回的数组，即使不没有的任何实例<ph id="ph2">&lt;xref:System.Attribute&gt;</ph>的事件中。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>是<ph id="ph2">`null`</ph>，返回一个空集合。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 是一个跨进程远程对象。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>A component to get the events for.</source>
          <target state="translated">要为其获取事件的组件。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要考虑自定义类型说明信息，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>Returns the collection of events for a specified component with a custom type descriptor.</source>
          <target state="translated">对具有自定义类型描述符的指定组件，返回事件集合。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> with the events for this component.</source>
          <target state="translated">具有此组件的事件的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>This method retrieves a collection of events that the given <ph id="ph1">`component`</ph> parameter instance provides.</source>
          <target state="translated">此方法检索的事件的集合，给定<ph id="ph1">`component`</ph>参数实例提供。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>This can differ from the set of events the class provides.</source>
          <target state="translated">这可能不同于类提供的事件集。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>If the <ph id="ph1">`component`</ph> parameter is sited, the site can add or remove additional events.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>占位参数，则该位置可以添加或删除其他事件。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>是<ph id="ph2">`null`</ph>，返回一个空集合。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 是一个跨进程远程对象。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">目标组件的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> that you can use as a filter.</source>
          <target state="translated">可用作筛选器的类型 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 的数组。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>Returns the collection of events for a specified type of component using a specified array of attributes as a filter.</source>
          <target state="translated">通过将指定的属性数组用作筛选器来返回指定组件类型的事件的集合。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> with the events that match the specified attributes for this component.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph>，包含与此组件的指定特性匹配的事件。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">仅当没有对象的实例时，请调用此方法的此版本。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>The <ph id="ph1">`attributes`</ph> parameter array can have a mix of <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">`attributes`</ph>参数数组可以包含多种<ph id="ph2">&lt;xref:System.Type&gt;</ph>和<ph id="ph3">&lt;xref:System.Attribute&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">筛选由以下规则定义：</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> is treated as a wildcard; it matches any event that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Type&gt;</ph>视为通配符; 它与具有任何事件匹配<ph id="ph2">&lt;xref:System.Type&gt;</ph>属性其集中。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>If an event does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the event is not included in the returned array.</source>
          <target state="translated">如果事件没有<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>的同一个类，事件不包括在返回数组中。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>If the attribute is an instance of the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class, the event must be an exact match or it is not included in the returned array.</source>
          <target state="translated">如果属性是实例<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>类，事件必须是完全匹配，或它不包括在返回的数组。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>If an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the event.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>指定实例和它是默认事件，它包括在返回的数组，即使不没有的任何实例<ph id="ph2">&lt;xref:System.Attribute&gt;</ph>的事件中。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`componentType`</ph>参数是<ph id="ph2">`null`</ph>，返回一个空集合。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>A component to get the events for.</source>
          <target state="translated">要为其获取事件的组件。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to use as a filter.</source>
          <target state="translated">用作筛选器的类型 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 的数组。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要考虑自定义类型说明信息，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>Returns the collection of events for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</source>
          <target state="translated">通过使用指定的属性数组作为筛选器，并使用自定义类型描述符来返回指定组件的事件集合。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> with the events that match the specified attributes for this component.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph>，包含与此组件的指定特性匹配的事件。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>The events for the <ph id="ph1">`component`</ph> parameter can differ from the events of a class, because the site can add or remove events if the <ph id="ph2">`component`</ph> parameter is sited.</source>
          <target state="translated">有关事件<ph id="ph1">`component`</ph>参数可以与不同，事件的类，因为该位置可以添加或删除事件，如果<ph id="ph2">`component`</ph>放置参数。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>The <ph id="ph1">`attributes`</ph> parameter array can have a mix of <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">`attributes`</ph>参数数组可以包含多种<ph id="ph2">&lt;xref:System.Type&gt;</ph>和<ph id="ph3">&lt;xref:System.Attribute&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">筛选由以下规则定义：</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> is treated as a wildcard; it matches any event that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Type&gt;</ph>视为通配符; 它与具有任何事件匹配<ph id="ph2">&lt;xref:System.Type&gt;</ph>属性其集中。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>If an event does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the event is not included in the returned array.</source>
          <target state="translated">如果事件没有<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>的同一个类，事件不包括在返回数组中。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>If the attribute is an instance of the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class, the event must be an exact match or it is not included in the returned array.</source>
          <target state="translated">如果属性是实例<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>类，事件必须是完全匹配，或它不包括在返回的数组。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>If an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the event.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>指定实例和它是默认事件，它包括在返回的数组，即使不没有的任何实例<ph id="ph2">&lt;xref:System.Attribute&gt;</ph>的事件中。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>是<ph id="ph2">`null`</ph>，返回一个空集合。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 是一个跨进程远程对象。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> to find the name for.</source>
          <target state="translated">要查找其名称的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
          <source>Returns the fully qualified name of the component.</source>
          <target state="translated">返回组件的完全限定名。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
          <source>The fully qualified name of the specified component, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the component has no name.</source>
          <target state="translated">指定组件的完全限定名，如果该组件没有名称，则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
          <source>In many cases, the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetFullComponentName%2A&gt;</ph> method will return the same value as the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A&gt;</ph> method.</source>
          <target state="translated">在许多情况下，<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetFullComponentName%2A&gt;</ph>方法将返回相同的值<ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
          <source>However, if the component resides in a nested container or has other nested semantics, it may return a different fully qualified name.</source>
          <target state="translated">但是，如果该组件位于嵌套容器，或者具有其他嵌套的语义，它可能返回不同的完全限定的名称。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the collection of properties on a component or type.</source>
          <target state="translated">返回组件或类型的属性的集合。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>A component to get the properties for.</source>
          <target state="translated">要为其获取属性的组件。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>Returns the collection of properties for a specified component.</source>
          <target state="translated">返回指定组件的属性的集合。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties for the specified component.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>，具有指定组件的属性。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>The properties for a component can differ from the properties of a class, because the site can add or remove properties if the component is sited.</source>
          <target state="translated">组件的属性可能与不同的属性类，因为该位置可以添加或删除属性，如果组件所在。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>If the <ph id="ph1">`component`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>参数是<ph id="ph2">`null`</ph>，返回一个空集合。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> method to access the properties of a control.</source>
          <target state="translated">下面的代码示例演示如何将<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph>方法来访问控件的属性。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.ComponentModel.Design.ComponentDesigner&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.ComponentModel.Design.ComponentDesigner&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 是一个跨进程远程对象。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the component to get properties for.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>，表示要获取其属性的组件。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
          <source>Returns the collection of properties for a specified type of component.</source>
          <target state="translated">返回指定组件类型的属性的集合。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties for a specified type of component.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>，具有指定类型组件的属性。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">仅当没有对象的实例时，请调用此方法的此版本。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`componentType`</ph>参数是<ph id="ph2">`null`</ph>，返回一个空集合。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>A component to get the properties for.</source>
          <target state="translated">要为其获取属性的组件。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to use as a filter.</source>
          <target state="translated">用作筛选器的类型 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 的数组。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>Returns the collection of properties for a specified component using a specified array of attributes as a filter.</source>
          <target state="translated">通过将指定的属性数组用作筛选器来返回指定组件的属性的集合。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties that match the specified attributes for the specified component.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>，具有匹配指定组件的指定特性的属性。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>The properties for the <ph id="ph1">`component`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`component`</ph> parameter is sited.</source>
          <target state="translated">属性<ph id="ph1">`component`</ph>参数可以不同于类的属性，因为该位置可以添加或删除属性，如果<ph id="ph2">`component`</ph>放置参数。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>The <ph id="ph1">`attributes`</ph> parameter array is used to filter the array.</source>
          <target state="translated"><ph id="ph1">`attributes`</ph>参数数组用于筛选数组。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">筛选由以下规则定义：</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property is not included in the returned array.</source>
          <target state="translated">如果属性不具有<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>的同一个类，该属性不包括在返回数组中。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>If the attribute is an instance of the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class, the property must be an exact match or it is not included in the returned array.</source>
          <target state="translated">如果属性是实例<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>类，该属性必须是完全匹配，或它不包括在返回的数组。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>If an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>指定实例和它是默认属性，它也包括在返回的数组，即使存在的任何实例<ph id="ph2">&lt;xref:System.Attribute&gt;</ph>属性中。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>If <ph id="ph1">`attributes`</ph> has a default attribute, the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> method matches the case when the property does not have the attribute applied.</source>
          <target state="translated">如果<ph id="ph1">`attributes`</ph>具有默认属性，<ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph>方法匹配大小写，如果属性不具有应用的属性。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>是<ph id="ph2">`null`</ph>，返回一个空集合。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A&gt;</ph> method.</source>
          <target state="translated">下面的代码示例演示如何实现<ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 是一个跨进程远程对象。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source>A component to get the properties for.</source>
          <target state="translated">要为其获取属性的组件。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to not consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若不考虑自定义类型说明信息，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source>Returns the collection of properties for a specified component using the default type descriptor.</source>
          <target state="translated">使用默认类型描述符为指定组件返回属性集合。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties for a specified component.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>，具有指定组件的属性。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source>The properties for the <ph id="ph1">`component`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`component`</ph> parameter is sited.</source>
          <target state="translated">属性<ph id="ph1">`component`</ph>参数可以不同于类的属性，因为该位置可以添加或删除属性，如果<ph id="ph2">`component`</ph>放置参数。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>是<ph id="ph2">`null`</ph>，返回一个空集合。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 是一个跨进程远程对象。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">目标组件的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to use as a filter.</source>
          <target state="translated">用作筛选器的类型 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 的数组。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>Returns the collection of properties for a specified type of component using a specified array of attributes as a filter.</source>
          <target state="translated">通过将指定的属性数组用作筛选器来为指定类型的组件返回属性的集合。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties that match the specified attributes for this type of component.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>，具有与此类型组件的指定特性相匹配的属性。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">仅当没有对象的实例时，请调用此方法的此版本。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>The <ph id="ph1">`attributes`</ph> parameter array is used to filter the array.</source>
          <target state="translated"><ph id="ph1">`attributes`</ph>参数数组用于筛选数组。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">筛选由以下规则定义：</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property is not included in the returned array.</source>
          <target state="translated">如果属性不具有<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>的同一个类，该属性不包括在返回数组中。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>If the attribute is an instance of the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class, the property must be an exact match or it is not included in the returned array.</source>
          <target state="translated">如果属性是实例<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>类，该属性必须是完全匹配，或它不包括在返回的数组。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>If an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>指定实例和它是默认属性，它也包括在返回的数组，即使存在的任何实例<ph id="ph2">&lt;xref:System.Attribute&gt;</ph>属性中。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>If <ph id="ph1">`attributes`</ph> has a default attribute, the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> method matches the case when the property does not have the attribute applied.</source>
          <target state="translated">如果<ph id="ph1">`attributes`</ph>具有默认属性，<ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph>方法匹配大小写，如果属性不具有应用的属性。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`componentType`</ph>参数是<ph id="ph2">`null`</ph>，返回一个空集合。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A&gt;</ph> method.</source>
          <target state="translated">下面的代码示例演示如何实现<ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>A component to get the properties for.</source>
          <target state="translated">要为其获取属性的组件。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to use as a filter.</source>
          <target state="translated">用作筛选器的类型 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 的数组。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要考虑自定义类型说明信息，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>Returns the collection of properties for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</source>
          <target state="translated">通过使用指定的属性数组作为筛选器，并使用自定义类型描述符来返回指定组件的属性集合。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the events that match the specified attributes for the specified component.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>，具有与指定组件的指定特性匹配的事件。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>The properties for a <ph id="ph1">`component`</ph> can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`component`</ph> is sited.</source>
          <target state="translated">属性<ph id="ph1">`component`</ph>可以不同于类的属性，因为该位置可以添加或删除属性，如果<ph id="ph2">`component`</ph>占位。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>The <ph id="ph1">`attributes`</ph> parameter array is used to filter the array.</source>
          <target state="translated"><ph id="ph1">`attributes`</ph>参数数组用于筛选数组。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">筛选由以下规则定义：</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property is not included in the returned array.</source>
          <target state="translated">如果属性不具有<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>的同一个类，该属性不包括在返回数组中。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>If the attribute is an instance of the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class, the property must be an exact match or it is not included in the returned array.</source>
          <target state="translated">如果属性是实例<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>类，该属性必须是完全匹配，或它不包括在返回的数组。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>If an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>指定实例和它是默认属性，它也包括在返回的数组，即使存在的任何实例<ph id="ph2">&lt;xref:System.Attribute&gt;</ph>属性中。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>If <ph id="ph1">`attributes`</ph> has a default attribute, the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> method matches the case when the property does not have the attribute applied.</source>
          <target state="translated">如果<ph id="ph1">`attributes`</ph>具有默认属性，<ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph>方法匹配大小写，如果属性不具有应用的属性。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>If the <ph id="ph1">`component`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>参数是<ph id="ph2">`null`</ph>，返回一个空集合。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> 是一个跨进程远程对象。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the type description provider for the component or type.</source>
          <target state="translated">返回组件或类型的类型说明提供程序。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
          <source>An instance of the target component.</source>
          <target state="translated">目标组件的实例。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
          <source>Returns the type description provider for the specified component.</source>
          <target state="translated">返回指定组件的类型说明提供程序。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> associated with the specified component.</source>
          <target state="translated">与指定组件关联的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt;</ph> method will always return a type description provider.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt;</ph>方法将始终返回的类型说明提供。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
          <source>Even the default <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> implementation is built on a <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph>.</source>
          <target state="translated">即使默认<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>实现基于<ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
          <source><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">目标组件的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
          <source>Returns the type description provider for the specified type.</source>
          <target state="translated">返回指定类型的类型说明提供程序。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> associated with the specified type.</source>
          <target state="translated">与指定类型关联的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt;</ph> method will always return a type description provider.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt;</ph>方法将始终返回的类型说明提供。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
          <source>Even the default <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> implementation is built on a <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph>.</source>
          <target state="translated">即使默认<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>实现基于<ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that can be used to perform reflection.</source>
          <target state="translated">返回可用于执行反射的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
          <source>An instance of the target component.</source>
          <target state="translated">目标组件的实例。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that can be used to perform reflection, given an object.</source>
          <target state="translated">如果给定对象，则返回可用于执行反射的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> for the specified object.</source>
          <target state="translated">指定对象的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> method is a low-level version of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph>方法是低级别版本<ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> is typically used to perform standard reflection against an object when no custom type descriptor can be located for it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> 通常用于执行与对象的标准反射，如果没有自定义类型描述符可以为其所在。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
          <source><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">目标组件的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that can be used to perform reflection, given a class type.</source>
          <target state="translated">如果给定类类型，则返回可用于执行反射的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the specified class.</source>
          <target state="translated">指定类的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> method is a low-level version of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph>方法是低级别版本<ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> is typically used to perform standard reflection against a class when no custom type descriptor can be located for it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> 通常用于执行根据某个类的标准反射，如果没有自定义类型描述符可以找到它。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.TypeDescriptor.InterfaceType">
          <source>Gets a type that represents a type description provider for all interface types.</source>
          <target state="translated">获取一个类型，它表示所有接口类型的类型说明提供程序。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.InterfaceType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents a custom type description provider for all interface types.</source>
          <target state="translated">表示所有接口类型的类型说明提供程序的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.InterfaceType">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.InterfaceType%2A&gt;</ph> property gets a <ph id="ph2">&lt;xref:System.Type&gt;</ph> object that you can pass to the <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> methods to define a type description provider for interface types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.InterfaceType%2A&gt;</ph>属性可以获取<ph id="ph2">&lt;xref:System.Type&gt;</ph>可以将传递到的对象<ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph>方法来定义的类型说明提供程序接口类型。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Clears the properties and events from the cache.</source>
          <target state="translated">清除缓存中的属性和事件。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>A component for which the properties or events have changed.</source>
          <target state="translated">已更改属性或事件的组件。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>Clears the properties and events for the specified component from the cache.</source>
          <target state="translated">从缓存中清除指定组件的属性和事件。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>Properties and events are cached by <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> for speed.</source>
          <target state="translated">通过缓存属性和事件<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>的速度。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">通常情况下，它们是常量对象的生存期内。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">但是，扩展程序提供程序和设计器可以更改对象上的属性的集。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>If they do, they should call this method to clear the property and event descriptors of the object.</source>
          <target state="translated">如果他们这样做，它们应调用此方法以清除该对象的属性和事件描述符。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>This method is used only at design time.</source>
          <target state="translated">此方法仅在设计时使用。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>It is not used during run time.</source>
          <target state="translated">在运行时不使用它。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>This method also raises a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event when the properties or events of a component change.</source>
          <target state="translated">此方法也会引发<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph>事件的属性或事件的组件更改时。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>This event is only raised if there was a prior call to the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt;</ph> method that cached the information.</source>
          <target state="translated">如果没有调用仅将引发此事件<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt;</ph>缓存信息的方法。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>For an example of using this method, see the <ph id="ph1">&lt;xref:System.ComponentModel.RefreshEventHandler&gt;</ph> class.</source>
          <target state="translated">使用此方法的示例，请参阅<ph id="ph1">&lt;xref:System.ComponentModel.RefreshEventHandler&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> that represents the assembly to refresh.</source>
          <target state="translated">表示要刷新的程序集的 <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>Each <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> in this assembly will be refreshed.</source>
          <target state="translated">将刷新程序集中的每个 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>Clears the properties and events for the specified assembly from the cache.</source>
          <target state="translated">从缓存中清除指定程序集的属性和事件。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>Properties and events are cached by <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> for speed.</source>
          <target state="translated">通过缓存属性和事件<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>的速度。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">通常情况下，它们是常量对象的生存期内。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">但是，扩展程序提供程序和设计器可以更改对象上的属性的集。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>If they do, they can call this method to clear the property and event descriptors of the object.</source>
          <target state="translated">如果他们这样做，它们可以调用此方法以清除该对象的属性和事件描述符。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>This method is used only at design time.</source>
          <target state="translated">此方法仅在设计时使用。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>It is not used during run time.</source>
          <target state="translated">在运行时不使用它。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>Before you make a call to the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</ph> method to clear the cache, you need to call the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> method for the specific assembly to cache the information first.</source>
          <target state="translated">在进行调用之前<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</ph>方法来清除缓存中，你需要调用<ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph>要首先缓存该信息的特定程序集的方法。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>This method also raises a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event to notify all classes that want to be notified when the property set of a component changes.</source>
          <target state="translated">此方法也会引发<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph>事件来通知想要将属性设置的组件更改通知的所有类。</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> that represents the module to refresh.</source>
          <target state="translated">表示要刷新的模块的 <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>Each <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> in this module will be refreshed.</source>
          <target state="translated">将刷新模块中的每个 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>Clears the properties and events for the specified module from the cache.</source>
          <target state="translated">从缓存中清除指定模块的属性和事件。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>Properties and events are cached by <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> for speed.</source>
          <target state="translated">通过缓存属性和事件<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>的速度。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">通常情况下，它们是常量对象的生存期内。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">但是，扩展程序提供程序和设计器可以更改对象上的属性的集。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>If they do, they can call this method to clear the property and event descriptors of the object.</source>
          <target state="translated">如果他们这样做，它们可以调用此方法以清除该对象的属性和事件描述符。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>This method is used only at design time.</source>
          <target state="translated">此方法仅在设计时使用。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>It is not used during run time.</source>
          <target state="translated">在运行时不使用它。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>Before you make a call to the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</ph> method to clear the cache, you need to call the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> method for the specific module to cache the information first.</source>
          <target state="translated">在进行调用之前<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</ph>方法来清除缓存中，你需要调用<ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph>为特定的模块，以首先缓存信息的方法。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>This method also raises a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event to notify all classes that want to be notified when the property set of a component changes.</source>
          <target state="translated">此方法也会引发<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph>事件来通知想要将属性设置的组件更改通知的所有类。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">目标组件的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>Clears the properties and events for the specified type of component from the cache.</source>
          <target state="translated">从缓存中清除指定类型的组件的属性和事件。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">仅当没有对象的实例时，请调用此方法的此版本。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>Properties and events are cached by <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> for speed.</source>
          <target state="translated">通过缓存属性和事件<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>的速度。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">通常情况下，它们是常量对象的生存期内。</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">但是，扩展程序提供程序和设计器可以更改对象上的属性的集。</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>If they do, they can call this method to clear the property and event descriptors of the object.</source>
          <target state="translated">如果他们这样做，它们可以调用此方法以清除该对象的属性和事件描述符。</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>This method is used only at design time.</source>
          <target state="translated">此方法仅在设计时使用。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>It is not used during run time.</source>
          <target state="translated">在运行时不使用它。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>This method also raises a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event when the properties or events of a component change.</source>
          <target state="translated">此方法也会引发<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph>事件的属性或事件的组件更改时。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>This event is only raised if there was a prior call to the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt;</ph> method that cached the information.</source>
          <target state="translated">如果没有调用仅将引发此事件<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt;</ph>缓存信息的方法。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.TypeDescriptor.Refreshed">
          <source>Occurs when the cache for a component is cleared.</source>
          <target state="translated">清除了组件的缓存时发生。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.TypeDescriptor.Refreshed">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>NIB： 使用事件<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.TypeDescriptor.Refreshed">
          <source>For an example of using this event, see the <ph id="ph1">&lt;xref:System.ComponentModel.RefreshEventHandler&gt;</ph> class.</source>
          <target state="translated">使用此事件的示例，请参阅<ph id="ph1">&lt;xref:System.ComponentModel.RefreshEventHandler&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>The primary <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">主要 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>The secondary <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">辅助 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>Removes an association between two objects.</source>
          <target state="translated">删除两个对象之间的关联。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveAssociation%2A&gt;</ph> method removes an association between two objects formed by the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveAssociation%2A&gt;</ph>方法删除由构成的两个对象之间的关联<ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either object is finalized or reclaimed by garbage collection.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.WeakReference&gt;</ph>用于维护主要和辅助对象之间的关联; 因此，此方法不会影响时终止或通过垃圾回收回收可能是对象。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">两个参数之一或两个参数均为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>for full access to system resources.</source>
          <target state="translated">对系统资源的完全访问权限。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">要求值： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>Associated state:</source>
          <target state="translated">关联的状态：</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>The primary <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> in an association.</source>
          <target state="translated">处于关联中的主要 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>Removes all associations for a primary object.</source>
          <target state="translated">删除主要对象的所有关联。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveAssociations%2A&gt;</ph> method removes all associations between a primary object and all of its secondary objects, created by calls to the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveAssociations%2A&gt;</ph>方法中删除所有关联的主对象和所有辅助对象，通过调用之间<ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either the primary of secondary objects are finalized or reclaimed by garbage collection.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.WeakReference&gt;</ph>用于维护主要和辅助对象之间的关联; 因此，，此方法不会影响时辅助对象主完成，否则将其通过垃圾回收回收。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source><ph id="ph1">&lt;paramref name="primary" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="primary" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>for full access to system resources.</source>
          <target state="translated">对系统资源的完全访问权限。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">要求值： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>Associated state:</source>
          <target state="translated">关联的状态：</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Removes a previously added type description provider.</source>
          <target state="translated">删除以前添加的类型说明提供程序。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to remove.</source>
          <target state="translated">要移除的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>An instance of the target component.</source>
          <target state="translated">目标组件的实例。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Removes a previously added type description provider that is associated with the specified object.</source>
          <target state="translated">移除以前添加的与指定对象关联的类型说明提供程序。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>This method removes a type description provider previously added with the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">此方法可以删除以前添加的类型说明提供<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Removing a provider causes a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event to be raised for the associated object.</source>
          <target state="translated">删除一个提供程序会导致<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph>关联的对象引发的事件。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method if you need to call from partially trusted code.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph>方法如果你需要从部分受信任代码调用。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">两个参数之一或两个参数均为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>for full access to system resources.</source>
          <target state="translated">对系统资源的完全访问权限。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">要求值： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Associated state:</source>
          <target state="translated">关联的状态：</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to remove.</source>
          <target state="translated">要移除的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">目标组件的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Removes a previously added type description provider that is associated with the specified type.</source>
          <target state="translated">删除以前添加的与指定类型关联的类型说明提供程序。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>This method removes a type description provider previously added with the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method.</source>
          <target state="translated">此方法可以删除以前添加的类型说明提供<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Removing a provider causes a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event to be raised for the associated type.</source>
          <target state="translated">删除一个提供程序会导致<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph>关联的类型中引发的事件。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method if you need to call from partially trusted code.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph>方法如果你需要从部分受信任代码调用。</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">两个参数之一或两个参数均为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>for full access to system resources.</source>
          <target state="translated">对系统资源的完全访问权限。</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">要求值： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Associated state:</source>
          <target state="translated">关联的状态：</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Removes a previously added type description provider.</source>
          <target state="translated">删除以前添加的类型说明提供程序。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to remove.</source>
          <target state="translated">要移除的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>An instance of the target component.</source>
          <target state="translated">目标组件的实例。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Removes a previously added type description provider that is associated with the specified object.</source>
          <target state="translated">移除以前添加的与指定对象关联的类型说明提供程序。</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>This method removes a type description provider previously added with the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">此方法可以删除以前添加的类型说明提供<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Removing a provider causes a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event to be raised for the associated object.</source>
          <target state="translated">删除一个提供程序会导致<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph>关联的对象引发的事件。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>This method can be called from partially trusted code.</source>
          <target state="translated">可从部分受信任的代码调用此方法。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph>是定义，调用方可以注册的提供程序的指定实例如果其类型也为部分受信任。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method if you do not need to call from partially trusted code.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph>如果不需要从部分受信任代码调用的方法。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">两个参数之一或两个参数均为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>For registry access.</source>
          <target state="translated">用于注册表访问。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">安全操作： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">安全操作： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Associated type: The <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> that is required by the assembly that defines the <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> parameter's type.</source>
          <target state="translated">关联的类型：<ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>所需定义的程序集<ph id="ph2">&lt;paramref name="instance" /&gt;</ph>参数的类型。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to remove.</source>
          <target state="translated">要移除的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">目标组件的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Removes a previously added type description provider that is associated with the specified type.</source>
          <target state="translated">删除以前添加的与指定类型关联的类型说明提供程序。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>This method removes a type description provider previously added with the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method.</source>
          <target state="translated">此方法可以删除以前添加的类型说明提供<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Removing a provider causes a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event to be raised for the associated type.</source>
          <target state="translated">删除一个提供程序会导致<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph>关联的类型中引发的事件。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>This method can be called from partially trusted code.</source>
          <target state="translated">可从部分受信任的代码调用此方法。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>If <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> is defined, the caller can unregister a provider for the specified type if it is also partially trusted.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph>是定义，调用方可以取消注册的提供程序的指定类型是否也部分受信任。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method if you do not need to call from partially trusted code.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph>如果不需要从部分受信任代码调用的方法。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">两个参数之一或两个参数均为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>For registry access.</source>
          <target state="translated">用于注册表访问。</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">安全操作： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">安全操作： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Associated type: The <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> that is required by the assembly that defines <ph id="ph2">&lt;paramref name="type" /&gt;</ph>.</source>
          <target state="translated">关联的类型：<ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>所需定义的程序集<ph id="ph2">&lt;paramref name="type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> that contains the descriptors to sort.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>，包含要排序的说明符。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)">
          <source>Sorts descriptors using the name of the descriptor.</source>
          <target state="translated">使用描述符的名称对描述符排序。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)">
          <source><ph id="ph1">&lt;paramref name="infos" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="infos" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>