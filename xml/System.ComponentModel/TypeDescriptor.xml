<Type Name="TypeDescriptor" FullName="System.ComponentModel.TypeDescriptor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8b8fe91c09ff1fd148d4a705bf84c204e251f96e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36700749" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TypeDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeDescriptor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeDescriptor sealed" />
  <TypeSignature Language="F#" Value="type TypeDescriptor = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="cf3a8-101">提供有关组件特征的信息，如组件的特性、属性和事件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="cf3a8-101">Provides information about the characteristics for a component, such as its attributes, properties, and events.</span>
      </span>
      <span data-ttu-id="cf3a8-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="cf3a8-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-103">.NET Framework 提供了两种方法可以访问的类型的元数据： 在系统提供的 API 的反射<xref:System.Reflection?displayProperty=nameWithType>命名空间，和<xref:System.ComponentModel.TypeDescriptor>类。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-103">The .NET Framework provides two ways to access metadata on a type: the reflection API provided in the <xref:System.Reflection?displayProperty=nameWithType> namespace, and the <xref:System.ComponentModel.TypeDescriptor> class.</span></span> <span data-ttu-id="cf3a8-104">反射是适用于所有类型的通用机制，因为其 foundation 建立在<xref:System.Object.GetType%2A>方法的根<xref:System.Object>类。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-104">Reflection is a general mechanism available to all types because its foundation is established in the <xref:System.Object.GetType%2A> method of the root <xref:System.Object> class.</span></span> <span data-ttu-id="cf3a8-105">在于不能修改它的目标类型的编译完成后，是不可扩展的它将返回为某一类型的信息。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-105">The information it returns for a type is not extensible, in that it cannot be modified after compilation of the target type.</span></span> <span data-ttu-id="cf3a8-106">有关详细信息，请参阅中的主题[反射](~/docs/framework/reflection-and-codedom/reflection.md)。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-106">For more information, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span></span>  
  
 <span data-ttu-id="cf3a8-107">与此相反，<xref:System.ComponentModel.TypeDescriptor>是组件用于可扩展检查机制： 那些类，该实现<xref:System.ComponentModel.IComponent>接口。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-107">In contrast, <xref:System.ComponentModel.TypeDescriptor> is an extensible inspection mechanism for components: those classes that implement the <xref:System.ComponentModel.IComponent> interface.</span></span> <span data-ttu-id="cf3a8-108">与不同的是反射，它并不检查方法。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-108">Unlike reflection, it does not inspect for methods.</span></span> <span data-ttu-id="cf3a8-109"><xref:System.ComponentModel.TypeDescriptor> 通过目标组件通过提供的多个服务可以动态扩展<xref:System.ComponentModel.Component.Site%2A>。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-109"><xref:System.ComponentModel.TypeDescriptor> can be dynamically extended by several services available through the target component's <xref:System.ComponentModel.Component.Site%2A>.</span></span> <span data-ttu-id="cf3a8-110">下表显示了这些服务。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-110">The following table shows these services.</span></span>  
  
|<span data-ttu-id="cf3a8-111">服务名称</span><span class="sxs-lookup"><span data-stu-id="cf3a8-111">Service name</span></span>|<span data-ttu-id="cf3a8-112">描述</span><span class="sxs-lookup"><span data-stu-id="cf3a8-112">Description</span></span>|  
|------------------|-----------------|  
|<xref:System.ComponentModel.IExtenderProvider>|<span data-ttu-id="cf3a8-113">使另一个类，如<xref:System.Windows.Forms.ToolTip>、 提供给组件的额外属性。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-113">Enables another class, such as <xref:System.Windows.Forms.ToolTip>, to provide extra properties to a component.</span></span>|  
|<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>|<span data-ttu-id="cf3a8-114">使另一个对象以修改由组件公开的标准元数据。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-114">Enables another object to modify the standard metadata that is exposed by a component.</span></span>|  
|<xref:System.ComponentModel.ICustomTypeDescriptor>|<span data-ttu-id="cf3a8-115">支持的一类用于完全且动态地指定其自己的元数据，替换的标准检查机制<xref:System.ComponentModel.TypeDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-115">Enables a class to completely and dynamically specify its own metadata, replacing the standard inspection mechanism of <xref:System.ComponentModel.TypeDescriptor>.</span></span>|  
  
 <span data-ttu-id="cf3a8-116">提供的扩展性<xref:System.ComponentModel.TypeDescriptor>允许不同于其实际运行时表示形式，它使组件的设计时表示<xref:System.ComponentModel.TypeDescriptor>用于构建设计时基础结构。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-116">The extensibility provided by <xref:System.ComponentModel.TypeDescriptor> allows the design-time representation of a component to differ from its actual run-time representation, which makes <xref:System.ComponentModel.TypeDescriptor> useful for building design-time infrastructure.</span></span>  
  
 <span data-ttu-id="cf3a8-117">中的所有方法<xref:System.ComponentModel.TypeDescriptor>是`static`。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-117">All the methods in <xref:System.ComponentModel.TypeDescriptor> are `static`.</span></span> <span data-ttu-id="cf3a8-118">无法创建此类的实例，不能继承此类。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-118">You cannot create an instance of this class, and this class cannot be inherited.</span></span>  
  
 <span data-ttu-id="cf3a8-119">你可以设置属性和事件值两种不同方式： 在组件类中指定它们，或在设计时更改它们。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-119">You can set property and event values two different ways: specify them in the component class or change them at design time.</span></span> <span data-ttu-id="cf3a8-120">因为你可以设置这些值的重载方法的两种方式<xref:System.ComponentModel.TypeDescriptor>采用两种不同类型的参数： 类类型或对象实例。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-120">Because you can set these values two ways, the overloaded methods of <xref:System.ComponentModel.TypeDescriptor> take two different types of parameters: a class type or an object instance.</span></span>  
  
 <span data-ttu-id="cf3a8-121">如果想要访问<xref:System.ComponentModel.TypeDescriptor>信息，而且您有对象的实例，使用的组件调用的方法。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-121">When you want to access <xref:System.ComponentModel.TypeDescriptor> information and you have an instance of the object, use the method that calls for a component.</span></span> <span data-ttu-id="cf3a8-122">使用仅在没有对象的实例时，为类类型调用方法。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-122">Use the method that calls for the class type only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="cf3a8-123">通过缓存属性和事件<xref:System.ComponentModel.TypeDescriptor>的速度。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-123">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="cf3a8-124">通常情况下，它们是常量对象的生存期内。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-124">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="cf3a8-125">但是，扩展程序提供程序和设计器可以更改对象上的属性的集。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-125">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="cf3a8-126">如果出现这种情况，则<xref:System.ComponentModel.TypeDescriptor.Refresh%2A>必须调用方法以更新缓存。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-126">If this is the case, then the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method must be called to update the cache.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="N:System.Reflection" />
    <altmember cref="T:System.ComponentModel.IComponent" />
    <altmember cref="T:System.ComponentModel.ISite" />
  </Docs>
  <Members>
    <MemberGroup MemberName="AddAttributes">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf3a8-127">向目标组件添加类级别属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-127">Adds class-level attributes to the target component.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider AddAttributes (object instance, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider AddAttributes(object instance, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAttributes (instance As Object, ParamArray attributes As Attribute()) As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ AddAttributes(System::Object ^ instance, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member AddAttributes : obj * Attribute[] -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.AddAttributes (instance, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="cf3a8-128">目标组件的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-128">An instance of the target component.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="cf3a8-129">要添加到组件的类的 <see cref="T:System.Attribute" /> 对象数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-129">An array of <see cref="T:System.Attribute" /> objects to add to the component's class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-130">向目标组件实例添加类级别属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-130">Adds class-level attributes to the target component instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-131">用于添加指定属性的新创建的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-131">The newly created <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> that was used to add the specified attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-132"><xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Object%2CSystem.Attribute%5B%5D%29>方法向组件的指定实例添加类级别属性。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-132">The <xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Object%2CSystem.Attribute%5B%5D%29> method adds class-level attributes to the specified instance of a component.</span></span> <span data-ttu-id="cf3a8-133">由于这是一个常见要求使用 Visual Studio Windows 窗体设计器和属性窗口中的应用程序，则此方法提供快捷方式： 创建已合并提供的属性与属性的类型说明提供在类上存在。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-133">Because this is a common requirement of applications using the Visual Studio Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</span></span> <span data-ttu-id="cf3a8-134">返回值是用于添加特性的类型说明提供。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-134">The return value is the type description provider that was used to add the attributes.</span></span> <span data-ttu-id="cf3a8-135">此提供程序更高版本可以传递给<xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>方法时不再需要添加的属性。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-135">This provider can later be passed to the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method when the added attributes are no longer needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-136">两个参数之一或两个参数均为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-136">One or both of the parameters is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="cf3a8-137">对系统资源的完全访问权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-137">for full access to system resources.</span>
          </span>
          <span data-ttu-id="cf3a8-138">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-138">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="cf3a8-139">关联的状态：</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-139">Associated state:</span>
          </span>
        </permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider AddAttributes (Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider AddAttributes(class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ AddAttributes(Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member AddAttributes : Type * Attribute[] -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.AddAttributes (type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="cf3a8-140">目标组件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-140">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="cf3a8-141">要添加到组件的类的 <see cref="T:System.Attribute" /> 对象数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-141">An array of <see cref="T:System.Attribute" /> objects to add to the component's class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-142">向目标组件类型添加类级别属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-142">Adds class-level attributes to the target component type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-143">用于添加指定属性的新创建的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-143">The newly created <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> that was used to add the specified attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-144"><xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Type%2CSystem.Attribute%5B%5D%29>方法向指定类型的一个组件添加类级别属性。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-144">The <xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Type%2CSystem.Attribute%5B%5D%29> method adds class-level attributes to the specified type of a component.</span></span> <span data-ttu-id="cf3a8-145">由于这是一个常见要求使用 Visual Studio Windows 窗体设计器和属性窗口中的应用程序，则此方法提供快捷方式： 创建已合并提供的属性与属性的类型说明提供在类上存在。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-145">Because this is a common requirement of applications using the Visual Studio Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</span></span> <span data-ttu-id="cf3a8-146">返回值是用于添加特性的类型说明提供。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-146">The return value is the type description provider that was used to add the attributes.</span></span> <span data-ttu-id="cf3a8-147">此提供程序更高版本可以传递给<xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>方法时不再需要添加的属性。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-147">This provider can later be passed to the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method when the added attributes are no longer needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-148">两个参数之一或两个参数均为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-148">One or both of the parameters is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="cf3a8-149">对系统资源的完全访问权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-149">for full access to system resources.</span>
          </span>
          <span data-ttu-id="cf3a8-150">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-150">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="cf3a8-151">关联的状态：</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-151">Associated state:</span>
          </span>
        </permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
      </Docs>
    </Member>
    <Member MemberName="AddEditorTable">
      <MemberSignature Language="C#" Value="public static void AddEditorTable (Type editorBaseType, System.Collections.Hashtable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddEditorTable(class System.Type editorBaseType, class System.Collections.Hashtable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddEditorTable (editorBaseType As Type, table As Hashtable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddEditorTable(Type ^ editorBaseType, System::Collections::Hashtable ^ table);" />
      <MemberSignature Language="F#" Value="static member AddEditorTable : Type * System.Collections.Hashtable -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddEditorTable (editorBaseType, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorBaseType" Type="System.Type" />
        <Parameter Name="table" Type="System.Collections.Hashtable" />
      </Parameters>
      <Docs>
        <param name="editorBaseType">
          <span data-ttu-id="cf3a8-152">要添加编辑器表的编辑器基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-152">The editor base type to add the editor table for.</span>
          </span>
          <span data-ttu-id="cf3a8-153">如果针对此类型的表已存在，此方法将不起作用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-153">If a table already exists for this type, this method will do nothing.</span>
          </span>
        </param>
        <param name="table">
          <span data-ttu-id="cf3a8-154">要添加的 <see cref="T:System.Collections.Hashtable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-154">The <see cref="T:System.Collections.Hashtable" /> to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-155">为给定的编辑器基类型添加编辑器表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-155">Adds an editor table for the given editor base type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-156"><xref:System.ComponentModel.TypeDescriptor.AddEditorTable%2A>方法添加编辑器表对于给定的编辑器基类型。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-156">The <xref:System.ComponentModel.TypeDescriptor.AddEditorTable%2A> method adds an editor table for the given editor base type.</span></span> <span data-ttu-id="cf3a8-157">通常情况下，编辑器指定为在组件上的元数据。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-157">Typically, editors are specified as metadata on a component.</span></span> <span data-ttu-id="cf3a8-158">但是，如果没有元数据请求的编辑器基类型可以找到该组件上，关联<xref:System.ComponentModel.TypeDescriptor>如果可以找到一个将搜索编辑器类型，编辑器表。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-158">However, if no metadata for a requested editor base type can be found on the component, the associated <xref:System.ComponentModel.TypeDescriptor> will search an editor table for the editor type, if one can be found.</span></span> <span data-ttu-id="cf3a8-159">到类型描述符添加编辑器表后, 它不能删除，并拥有的类型描述符。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-159">Once an editor table has been added to a type descriptor, it cannot be removed and is owned by the type descriptor.</span></span> <span data-ttu-id="cf3a8-160">类型描述符自由地可能会使对此表进行修改。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-160">The type descriptor may freely make modifications to this table.</span></span>  
  
 <span data-ttu-id="cf3a8-161">编辑器表的格式使用的数据类型作为键，使用编辑器作为值。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-161">The format for an editor table uses data types as keys and editors as values.</span></span> <span data-ttu-id="cf3a8-162">表中的条目的值部分表示的编辑器实例。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-162">The value portion of an entry in the table represents an editor instance.</span></span> <span data-ttu-id="cf3a8-163">它可以具有三个值之一。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-163">It can have one of three values.</span></span> <span data-ttu-id="cf3a8-164">如果它包含一个字符串，类型描述符将假设这是对象的类型，然后加载该类型的完全限定的名称。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-164">If it contains a string, the type descriptor will assume this is a fully qualified name of a type, and then load the type for the object.</span></span> <span data-ttu-id="cf3a8-165">如果其包含类型，则将创建此类型的实例以获取编辑器。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-165">If it contains a type, an instance of this type will be created to obtain an editor.</span></span> <span data-ttu-id="cf3a8-166">最后中的值部分可能包含实际的编辑器实例。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-166">Finally, the value portion may contain an actual editor instance.</span></span> <span data-ttu-id="cf3a8-167">如果类型描述符解析为实例的编辑器，它将存储回供将来使用该表的实例。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-167">If the type descriptor resolves an editor to an instance, it will store the instance back into the table for future use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddProvider">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf3a8-168">将类型描述提供程序添加到此类型描述符的提供程序的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-168">Adds a type description provider to the list of providers for this type descriptor.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddProvider">
      <MemberSignature Language="C#" Value="public static void AddProvider (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProvider(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddProvider (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member AddProvider : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProvider (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="cf3a8-169">要添加的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-169">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="cf3a8-170">目标组件的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-170">An instance of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-171">为某个组件的单个实例添加类型描述提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-171">Adds a type description provider for a single instance of a component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-172"><xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>方法添加类型说明提供程序提供类型的组件的单个实例的信息。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-172">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method adds a type description provider that supplies type information for a single instance of a component.</span></span> <span data-ttu-id="cf3a8-173">如果此方法，该提供程序的添加提供程序<xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A>将不调用方法，因为该实例已经存在。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-173">If a provider is added by this method, the provider's <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> method will not be called because the instance already exists.</span></span>  
  
 <span data-ttu-id="cf3a8-174">此方法不维护对该组件的硬引用，因此不会阻止该组件正在最后完成。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-174">This method does not maintain a hard reference to the component, so it does not prevent the component from finalizing.</span></span>  
  
 <span data-ttu-id="cf3a8-175">它是可以添加多个类型说明提供程序的相同类型或对象。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-175">It is possible to add multiple type description providers for the same type or object.</span></span> <span data-ttu-id="cf3a8-176">如果发生这种情况，将以独占方式使用的第一个类型说明提供遇到提供类型信息。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-176">If this occurs, the first type description provider encountered that provides type information will be used exclusively.</span></span> <span data-ttu-id="cf3a8-177">由于类型信息提供程序存储堆栈中，添加的最后一个提供将第一个查询。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-177">Since type information providers are stored in a stack, the last provider added will be the first one queried.</span></span> <span data-ttu-id="cf3a8-178">此行为能让<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>和<xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A>方法用于进行推送和弹出类型说明提供程序所需的特定方案。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-178">This behavior enables the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> and <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> methods to be used to push and pop type description providers as required for particular scenarios.</span></span>  
  
 <span data-ttu-id="cf3a8-179">如果成功，此方法调用<xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29>方法`instance`参数。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-179">If successful, this method calls the <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29> method on the `instance` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf3a8-180">此方法的两个版本生成和不同作用域的结果。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-180">The two versions of this method produce results with different scopes.</span></span> <span data-ttu-id="cf3a8-181"><xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>采用的方法<xref:System.Object>参数只影响该单个实例的指定的组件。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-181">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> method that takes an <xref:System.Object> parameter affects only that single instance of the component specified.</span></span> <span data-ttu-id="cf3a8-182">与此相反，另一重载，它将采用<xref:System.Type>参数，会影响该类型所描述的组件的所有实例。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-182">In contrast, the other overload, which takes a <xref:System.Type> parameter, affects all instances of the component described by that type.</span></span>  
  
 <span data-ttu-id="cf3a8-183">使用<xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>方法如果你需要从部分受信任代码调用。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-183">Use the <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-184">两个参数之一或两个参数均为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-184">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="cf3a8-185">对系统资源的完全访问权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-185">for full access to system resources.</span>
          </span>
          <span data-ttu-id="cf3a8-186">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-186">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="cf3a8-187">关联的状态：</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-187">Associated state:</span>
          </span>
        </permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="AddProvider">
      <MemberSignature Language="C#" Value="public static void AddProvider (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProvider(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member AddProvider : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProvider (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="cf3a8-188">要添加的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-188">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="cf3a8-189">目标组件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-189">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-190">为组件类添加类型说明提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-190">Adds a type description provider for a component class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-191"><xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>方法添加类型说明提供程序提供类型指定的类，派生的类中，以及这些类型的所有实例的信息。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-191">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method adds a type description provider that supplies type information for the specified class, derived classes, and all instances of these types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf3a8-192">`type`参数可以是任何类型，包括一个接口。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-192">The `type` parameter can be any type, including an interface.</span></span> <span data-ttu-id="cf3a8-193">例如，若要提供自定义类型和实例的所有组件的信息，应指定`typeof(IComponent)`。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-193">For example, to provide custom type and instance information for all components, you would specify `typeof(IComponent)`.</span></span> <span data-ttu-id="cf3a8-194">传递`typeof(object)`将调用提供程序提供所有类型的类型信息。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-194">Passing `typeof(object)` will call the provider to supply type information for all types.</span></span>  
  
 <span data-ttu-id="cf3a8-195">此方法不维护对任何对象的硬引用，因此不会阻止对象正在最后完成。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-195">This method does not maintain a hard reference to any object, so it does not prevent objects from finalizing.</span></span>  
  
 <span data-ttu-id="cf3a8-196">它是可以添加多个类型说明提供程序的相同类型或对象。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-196">It is possible to add multiple type description providers for the same type or object.</span></span> <span data-ttu-id="cf3a8-197">如果发生这种情况，将以独占方式使用的第一个类型说明提供遇到提供类型信息。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-197">If this occurs, the first type description provider encountered that provides type information will be used exclusively.</span></span> <span data-ttu-id="cf3a8-198">由于类型信息提供程序存储在堆栈中，添加的最后一个提供将第一个查询。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-198">Because type information providers are stored in a stack, the last provider added will be the first one queried.</span></span> <span data-ttu-id="cf3a8-199">此行为能让<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>和<xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A>方法用于进行推送和弹出类型说明提供程序所需的特定方案。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-199">This behavior enables the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> and <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> methods to be used to push and pop type description providers as required for particular scenarios.</span></span>  
  
 <span data-ttu-id="cf3a8-200">如果成功，此方法调用<xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29>方法`type`参数。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-200">If successful, this method calls the <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29> method on the `type` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf3a8-201">此方法的两个版本生成和不同作用域的结果。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-201">The two versions of this method produce results with different scopes.</span></span> <span data-ttu-id="cf3a8-202"><xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>采用的方法<xref:System.Object>参数只影响该单个实例的指定的组件。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-202">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> method that takes an <xref:System.Object> parameter affects only that single instance of the component specified.</span></span> <span data-ttu-id="cf3a8-203">与此相反，另一重载，它将采用<xref:System.Type>参数，会影响该类型所描述的组件的所有实例。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-203">In contrast, the other overload, which takes a <xref:System.Type> parameter, affects all instances of the component described by that type.</span></span>  
  
 <span data-ttu-id="cf3a8-204">使用<xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>方法如果你需要从部分受信任代码调用。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-204">Use the <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-205">两个参数之一或两个参数均为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-205">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="cf3a8-206">对系统资源的完全访问权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-206">for full access to system resources.</span>
          </span>
          <span data-ttu-id="cf3a8-207">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-207">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="cf3a8-208">关联的状态：</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-208">Associated state:</span>
          </span>
        </permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddProviderTransparent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf3a8-209">将类型描述提供程序添加到此类型描述符的提供程序的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-209">Adds a type description provider to the list of providers for this type descriptor.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddProviderTransparent">
      <MemberSignature Language="C#" Value="public static void AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddProviderTransparent (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member AddProviderTransparent : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProviderTransparent (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="cf3a8-210">要添加的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-210">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="cf3a8-211">目标组件的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-211">An instance of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-212">为某个组件的单个实例添加类型描述提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-212">Adds a type description provider for a single instance of a component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-213">可从部分受信任的代码调用此方法。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-213">This method can be called from partially trusted code.</span></span> <span data-ttu-id="cf3a8-214">如果<xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess>是定义，调用方可以注册的提供程序的指定实例如果其类型也为部分受信任。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-214">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</span></span>  
  
 <span data-ttu-id="cf3a8-215">使用<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>如果不需要从部分受信任代码调用的方法。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-215">Use the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-216">两个参数之一或两个参数均为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-216">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission">
          <span data-ttu-id="cf3a8-217">用于注册表访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-217">For registry access.</span>
          </span>
          <span data-ttu-id="cf3a8-218">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-218">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="cf3a8-219">关联的枚举： <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-219">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          </span>
        </permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet">
          <span data-ttu-id="cf3a8-220">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-220">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="cf3a8-221">关联的类型：<see cref="T:System.Security.PermissionSet" />所需定义的程序集<paramref name="instance" />参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-221">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines the <paramref name="instance" /> parameter's type.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AddProviderTransparent">
      <MemberSignature Language="C#" Value="public static void AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member AddProviderTransparent : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProviderTransparent (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="cf3a8-222">要添加的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-222">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="cf3a8-223">目标组件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-223">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-224">为组件类添加类型说明提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-224">Adds a type description provider for a component class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-225">可从部分受信任的代码调用此方法。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-225">This method can be called from partially trusted code.</span></span> <span data-ttu-id="cf3a8-226">如果<xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess>是定义，调用方可以注册的提供程序的指定类型是否也部分受信任。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-226">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can register a provider for the specified type if it is also partially trusted.</span></span>  
  
 <span data-ttu-id="cf3a8-227">使用<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>如果不需要从部分受信任代码调用的方法。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-227">Use the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-228">两个参数之一或两个参数均为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-228">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission">
          <span data-ttu-id="cf3a8-229">用于注册表访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-229">For registry access.</span>
          </span>
          <span data-ttu-id="cf3a8-230">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-230">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="cf3a8-231">关联的枚举： <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-231">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          </span>
        </permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet">
          <span data-ttu-id="cf3a8-232">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-232">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="cf3a8-233">关联的类型：<see cref="T:System.Security.PermissionSet" />所需定义的程序集<paramref name="type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-233">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines <paramref name="type" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ComNativeDescriptorHandler">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.IComNativeDescriptorHandler ComNativeDescriptorHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ComponentModel.IComNativeDescriptorHandler ComNativeDescriptorHandler" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ComNativeDescriptorHandler As IComNativeDescriptorHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ComponentModel::IComNativeDescriptorHandler ^ ComNativeDescriptorHandler { System::ComponentModel::IComNativeDescriptorHandler ^ get(); void set(System::ComponentModel::IComNativeDescriptorHandler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ComNativeDescriptorHandler : System.ComponentModel.IComNativeDescriptorHandler with get, set" Usage="System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This property has been deprecated.  Use a type description provider to supply type information for COM types instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComNativeDescriptorHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf3a8-234">获取或设置用于目标组件的组件对象模型 (COM) 类型信息的提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-234">Gets or sets the provider for the Component Object Model (COM) type information for the target component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cf3a8-235">
            <see cref="T:System.ComponentModel.IComNativeDescriptorHandler" /> 实例，表示 COM 类型的信息提供程序实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-235">An <see cref="T:System.ComponentModel.IComNativeDescriptorHandler" /> instance representing the COM type information provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-236"><xref:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler%2A>属性和<xref:System.ComponentModel.IComNativeDescriptorHandler>接口已过时。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-236">The <xref:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler%2A> property and the <xref:System.ComponentModel.IComNativeDescriptorHandler> interface are obsolete.</span></span> <span data-ttu-id="cf3a8-237">有关更多信息，请参见 <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-237">For more information, see the <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="cf3a8-238">对系统资源的完全访问权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-238">for full access to system resources.</span>
          </span>
          <span data-ttu-id="cf3a8-239">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-239">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="cf3a8-240">关联的状态：</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-240">Associated state:</span>
          </span>
        </permission>
        <altmember cref="P:System.ComponentModel.TypeDescriptor.ComObjectType" />
      </Docs>
    </Member>
    <Member MemberName="ComObjectType">
      <MemberSignature Language="C#" Value="public static Type ComObjectType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Type ComObjectType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeDescriptor.ComObjectType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ComObjectType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Type ^ ComObjectType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ComObjectType : Type" Usage="System.ComponentModel.TypeDescriptor.ComObjectType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf3a8-241">获取由目标组件表示的组件对象模型 (COM) 对象的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-241">Gets the type of the Component Object Model (COM) object represented by the target component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cf3a8-242">由此组件表示的 COM 对象的 <see cref="T:System.Type" />，或非 COM 对象的 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-242">The <see cref="T:System.Type" /> of the COM object represented by this component, or <see langword="null" /> for non-COM objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-243"><xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>属性返回类型，可传递给<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>方法用来定义 COM 类型的类型说明提供。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-243">The <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property returns a type that can be passed to the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method to define a type description provider for COM types.</span></span>  
  
 <span data-ttu-id="cf3a8-244"><xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>属性和其他此类中的成员替换中的过时的功能<xref:System.ComponentModel.IComNativeDescriptorHandler>接口。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-244">The <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property and other members in this class replace the functionality in the obsolete <xref:System.ComponentModel.IComNativeDescriptorHandler> interface.</span></span> <span data-ttu-id="cf3a8-245">若要实现 COM 对象之间的映射层和<xref:System.ComponentModel.TypeDescriptor>，添加<xref:System.ComponentModel.TypeDescriptionProvider>到句柄类型<xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-245">To implement a mapping layer between a COM object and <xref:System.ComponentModel.TypeDescriptor>, add a <xref:System.ComponentModel.TypeDescriptionProvider> to handle type <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
      </Docs>
    </Member>
    <Member MemberName="CreateAssociation">
      <MemberSignature Language="C#" Value="public static void CreateAssociation (object primary, object secondary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateAssociation(object primary, object secondary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateAssociation (primary As Object, secondary As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateAssociation(System::Object ^ primary, System::Object ^ secondary);" />
      <MemberSignature Language="F#" Value="static member CreateAssociation : obj * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.CreateAssociation (primary, secondary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primary" Type="System.Object" />
        <Parameter Name="secondary" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="primary">
          <span data-ttu-id="cf3a8-246">主要 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-246">The primary <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <param name="secondary">
          <span data-ttu-id="cf3a8-247">辅助 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-247">The secondary <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-248">在两个对象之间创建主要和辅助关联。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-248">Creates a primary-secondary association between two objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-249"><xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>方法创建一个主和辅助对象之间的关联。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-249">The <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method creates an association between a primary and a secondary object.</span></span> <span data-ttu-id="cf3a8-250">一旦创建关联时，设计器或其他筛选机制可以添加到主对象的属性集路由到任一对象的属性。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-250">Once an association is created, a designer or other filtering mechanism can add properties that route to either object into the primary object's property set.</span></span> <span data-ttu-id="cf3a8-251">当针对主对象，进行属性调用<xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A>将调用方法，以解决与其类型参数的实际对象实例。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-251">When a property invocation is made against the primary object, the <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> method will be called to resolve the actual object instance that is related to its type parameter.</span></span>  
  
 <span data-ttu-id="cf3a8-252">A<xref:System.WeakReference>用于维护主要和辅助对象之间的关联; 因此，此方法不会阻止任一对象从已完成并通过垃圾回收回收。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-252">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either object from being finalized and reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-253">两个参数之一或两个参数均为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-253">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cf3a8-254">
            <paramref name="primary" /> 等于 <paramref name="secondary" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-254">
              <paramref name="primary" /> is equal to <paramref name="secondary" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="cf3a8-255">对系统资源的完全访问权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-255">for full access to system resources.</span>
          </span>
          <span data-ttu-id="cf3a8-256">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-256">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="cf3a8-257">关联的状态：</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-257">Associated state:</span>
          </span>
        </permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CreateDesigner">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Design.IDesigner CreateDesigner (System.ComponentModel.IComponent component, Type designerBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Design.IDesigner CreateDesigner(class System.ComponentModel.IComponent component, class System.Type designerBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDesigner (component As IComponent, designerBaseType As Type) As IDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Design::IDesigner ^ CreateDesigner(System::ComponentModel::IComponent ^ component, Type ^ designerBaseType);" />
      <MemberSignature Language="F#" Value="static member CreateDesigner : System.ComponentModel.IComponent * Type -&gt; System.ComponentModel.Design.IDesigner" Usage="System.ComponentModel.TypeDescriptor.CreateDesigner (component, designerBaseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="designerBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="cf3a8-258">指定要与设计器关联的组件的 <see cref="T:System.ComponentModel.IComponent" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-258">An <see cref="T:System.ComponentModel.IComponent" /> that specifies the component to associate with the designer.</span>
          </span>
        </param>
        <param name="designerBaseType">
          <span data-ttu-id="cf3a8-259">表示要创建的设计器的类型的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-259">A <see cref="T:System.Type" /> that represents the type of designer to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-260">创建与指定组件关联的具有特定类型的设计器的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-260">Creates an instance of the designer associated with the specified component and of the specified type of designer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-261">如果找到组件的设计器实例，则为 <see cref="T:System.ComponentModel.Design.IDesigner" />；如果未找到设计器，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-261">An <see cref="T:System.ComponentModel.Design.IDesigner" /> that is an instance of the designer for the component, or <see langword="null" /> if no designer can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-262">如果此方法找不到有效<xref:System.ComponentModel.DesignerAttribute>，它将为使设计器的类层次结构向上搜索。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-262">If this method cannot find a valid <xref:System.ComponentModel.DesignerAttribute>, it searches up the class hierarchy for a designer.</span></span> <span data-ttu-id="cf3a8-263">如果它找不到类层次结构中的设计器，它将返回`null`。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-263">If it cannot find a designer in the class hierarchy, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEvent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf3a8-264">创建和现有事件描述符相同的新的事件描述符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-264">Creates a new event descriptor that is identical to an existing event descriptor.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor CreateEvent (Type componentType, System.ComponentModel.EventDescriptor oldEventDescriptor, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor CreateEvent(class System.Type componentType, class System.ComponentModel.EventDescriptor oldEventDescriptor, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateEvent (componentType As Type, oldEventDescriptor As EventDescriptor, ParamArray attributes As Attribute()) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ CreateEvent(Type ^ componentType, System::ComponentModel::EventDescriptor ^ oldEventDescriptor, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateEvent : Type * System.ComponentModel.EventDescriptor * Attribute[] -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateEvent (componentType, oldEventDescriptor, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="oldEventDescriptor" Type="System.ComponentModel.EventDescriptor" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="cf3a8-265">要为其创建新事件的组件类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-265">The type of the component for which to create the new event.</span>
          </span>
        </param>
        <param name="oldEventDescriptor">
          <span data-ttu-id="cf3a8-266">现有事件信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-266">The existing event information.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="cf3a8-267">新属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-267">The new attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-268">当传递现有的 <see cref="T:System.ComponentModel.EventDescriptor" /> 时，创建和现有事件描述符相同的新的事件描述符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-268">Creates a new event descriptor that is identical to an existing event descriptor, when passed the existing <see cref="T:System.ComponentModel.EventDescriptor" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-269">将指定元数据属性与现有元数据属性进行合并的新 <see cref="T:System.ComponentModel.EventDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-269">A new <see cref="T:System.ComponentModel.EventDescriptor" /> that has merged the specified metadata attributes with the existing metadata attributes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="cf3a8-270">需要检查组件的非公共成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-270">Required to inspect non-public members of the component.</span>
          </span>
          <span data-ttu-id="cf3a8-271">链接要求访问权限所需的<see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />类型<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-271">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="CreateEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor CreateEvent (Type componentType, string name, Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor CreateEvent(class System.Type componentType, string name, class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ CreateEvent(Type ^ componentType, System::String ^ name, Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateEvent : Type * string * Type * Attribute[] -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateEvent (componentType, name, type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="cf3a8-272">该事件依赖的组件的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-272">The type of the component the event lives on.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="cf3a8-273">事件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-273">The name of the event.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="cf3a8-274">处理该事件的委托的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-274">The type of the delegate that handles the event.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="cf3a8-275">此事件的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-275">The attributes for this event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-276">通过从类型上的指定事件动态生成描述符信息，创建与现有事件描述符相同的新事件描述符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-276">Creates a new event descriptor that is identical to an existing event descriptor by dynamically generating descriptor information from a specified event on a type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-277">绑定到类型的 <see cref="T:System.ComponentModel.EventDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-277">An <see cref="T:System.ComponentModel.EventDescriptor" /> that is bound to a type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="cf3a8-278">需要检查组件的非公共成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-278">Required to inspect non-public members of the component.</span>
          </span>
          <span data-ttu-id="cf3a8-279">链接要求访问权限所需的<see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />类型<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-279">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (IServiceProvider provider, Type objectType, Type[] argTypes, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.IServiceProvider provider, class System.Type objectType, class System.Type[] argTypes, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (provider As IServiceProvider, objectType As Type, argTypes As Type(), args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(IServiceProvider ^ provider, Type ^ objectType, cli::array &lt;Type ^&gt; ^ argTypes, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : IServiceProvider * Type * Type[] * obj[] -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.CreateInstance (provider, objectType, argTypes, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="argTypes" Type="System.Type[]" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="cf3a8-280">提供 <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> 服务的服务提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-280">The service provider that provides a <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> service.</span>
          </span>
          <span data-ttu-id="cf3a8-281">此参数可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-281">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="objectType">
          <span data-ttu-id="cf3a8-282">要创建的对象的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-282">The <see cref="T:System.Type" /> of object to create.</span>
          </span>
        </param>
        <param name="argTypes">
          <span data-ttu-id="cf3a8-283">要传递给对象的构造函数的可选参数类型数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-283">An optional array of parameter types to be passed to the object's constructor.</span>
          </span>
          <span data-ttu-id="cf3a8-284">此参数可以是 <see langword="null" /> 或长度为零的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-284">This parameter can be <see langword="null" /> or an array of zero length.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="cf3a8-285">要传递给对象的构造函数的可选参数值数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-285">An optional array of parameter values to pass to the object's constructor.</span>
          </span>
          <span data-ttu-id="cf3a8-286">如果不为 <see langword="null" />，则元素个数必须与 <c>argTypes</c> 相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-286">If not <see langword="null" />, the number of elements must be the same as <c>argTypes</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-287">创建可替换为另一种数据类型的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-287">Creates an object that can substitute for another data type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-288">如果找到关联的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />，则为替代数据类型的实例；否则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-288">An instance of the substitute data type if an associated <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> is found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-289"><xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A>方法将搜索<xref:System.ComponentModel.TypeDescriptionProvider>指定与该键相关联`objectType`数据类型。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-289">The <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> method will search for a <xref:System.ComponentModel.TypeDescriptionProvider> that is associated with the specified `objectType` data type.</span></span> <span data-ttu-id="cf3a8-290">此方法首先尝试获取的类型说明提供程序`provider`参数。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-290">This method first tries to obtain a type description provider from the `provider` parameter.</span></span> <span data-ttu-id="cf3a8-291">如果此操作失败，搜索其自己的内部表的提供程序 (这些项已创建的以前调用通过<xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>)。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-291">If this fails, it searches its own internal tables for a provider (these entries were created through previous calls to <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>).</span></span> <span data-ttu-id="cf3a8-292">如果找到一个提供程序，此方法会将委托给该对象的创建调用。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-292">If it finds a provider, this method will delegate the creation call to that object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-293">
            <paramref name="objectType" /> 是 <see langword="null" />，或者，当 <paramref name="argTypes" /> 不是 <see langword="null" /> 时，则 <paramref name="args" /> 是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-293">
              <paramref name="objectType" /> is <see langword="null" />, or <paramref name="args" /> is <see langword="null" /> when <paramref name="argTypes" /> is not <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cf3a8-294">
            <paramref name="argTypes" /> 和 <paramref name="args" /> 具有不同的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-294">
              <paramref name="argTypes" /> and <paramref name="args" /> have different number of elements.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="cf3a8-295">
            <para>如果派生的类不提供替代实例，此方法应调用基实现。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-295">
              <para>If the derived class does not provide a substitute instance, this method should call the base implementation.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProperty">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf3a8-296">为现有的组件属性创建新的属性描述符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-296">Creates a new property descriptor for an existing property of a component.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor CreateProperty (Type componentType, System.ComponentModel.PropertyDescriptor oldPropertyDescriptor, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor CreateProperty(class System.Type componentType, class System.ComponentModel.PropertyDescriptor oldPropertyDescriptor, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProperty (componentType As Type, oldPropertyDescriptor As PropertyDescriptor, ParamArray attributes As Attribute()) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ CreateProperty(Type ^ componentType, System::ComponentModel::PropertyDescriptor ^ oldPropertyDescriptor, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateProperty : Type * System.ComponentModel.PropertyDescriptor * Attribute[] -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateProperty (componentType, oldPropertyDescriptor, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="oldPropertyDescriptor" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="cf3a8-297">属性是其一个成员的组件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-297">The <see cref="T:System.Type" /> of the component that the property is a member of.</span>
          </span>
        </param>
        <param name="oldPropertyDescriptor">
          <span data-ttu-id="cf3a8-298">现有的属性描述符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-298">The existing property descriptor.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="cf3a8-299">此属性的新特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-299">The new attributes for this property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-300">使用指定的现有 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 和特性数组，从现有的属性描述符创建一个新的属性描述符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-300">Creates a new property descriptor from an existing property descriptor, using the specified existing <see cref="T:System.ComponentModel.PropertyDescriptor" /> and attribute array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-301">一个将指定的元数据属性与现有的元数据属性进行合并的新 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-301">A new <see cref="T:System.ComponentModel.PropertyDescriptor" /> that has the specified metadata attributes merged with the existing metadata attributes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="cf3a8-302">需要检查组件的非公共成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-302">Required to inspect non-public members of the component.</span>
          </span>
          <span data-ttu-id="cf3a8-303">链接要求访问权限所需的<see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />类型<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-303">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor CreateProperty (Type componentType, string name, Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor CreateProperty(class System.Type componentType, string name, class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ CreateProperty(Type ^ componentType, System::String ^ name, Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateProperty : Type * string * Type * Attribute[] -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateProperty (componentType, name, type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="cf3a8-304">属性是其一个成员的组件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-304">The <see cref="T:System.Type" /> of the component that the property is a member of.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="cf3a8-305">属性的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-305">The name of the property.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="cf3a8-306">属性的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-306">The <see cref="T:System.Type" /> of the property.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="cf3a8-307">此属性的新特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-307">The new attributes for this property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-308">使用指定的属性名称、类型和属性数组创建属性描述符，并将其动态地绑定到类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-308">Creates and dynamically binds a property descriptor to a type, using the specified property name, type, and attribute array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-309">绑定到指定类型并具有与现有元数据属性合并的指定元数据属性的 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-309">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is bound to the specified type and that has the specified metadata attributes merged with the existing metadata attributes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="cf3a8-310">需要检查组件的非公共成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-310">Required to inspect non-public members of the component.</span>
          </span>
          <span data-ttu-id="cf3a8-311">链接要求访问权限所需的<see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />类型<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-311">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetAssociation">
      <MemberSignature Language="C#" Value="public static object GetAssociation (Type type, object primary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetAssociation(class System.Type type, object primary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetAssociation(Type ^ type, System::Object ^ primary);" />
      <MemberSignature Language="F#" Value="static member GetAssociation : Type * obj -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetAssociation (type, primary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="primary" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="cf3a8-312">目标组件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-312">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <param name="primary">
          <span data-ttu-id="cf3a8-313">关联的主要对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-313">The primary object of the association.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-314">返回与指定的主要对象关联的类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-314">Returns an instance of the type associated with the specified primary object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-315">如果存在关联，则为与主要对象关联的辅助类型的一个实例；如果不存在指定的关联，则为 <paramref name="primary" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-315">An instance of the secondary type that has been associated with the primary object if an association exists; otherwise, <paramref name="primary" /> if no specified association exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-316">如果已为进行了以前的关联`type`参数使用<xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>方法，则<xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A>方法将返回正确的辅助对象来调用为所请求类型。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-316">If a previous association has been made for the `type` parameter using the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method, then the <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> method returns the correct secondary object to invoke for the requested type.</span></span> <span data-ttu-id="cf3a8-317">否则为<xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A>兼容的设计器中，为搜索`type`并返回设计器，如果找到一个。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-317">Otherwise, <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> searches for a compatible designer for `type` and returns the designer if one is found.</span></span> <span data-ttu-id="cf3a8-318">此方法从不返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-318">This method never returns `null`.</span></span>  
  
 <span data-ttu-id="cf3a8-319">A<xref:System.WeakReference>用于维护主要和辅助对象之间的关联; 因此，此方法不会阻止主或辅助对象从已完成并通过垃圾回收回收。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-319">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either the primary or secondary object from being finalized and reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-320">两个参数之一或两个参数均为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-320">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttributes">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf3a8-321">返回组件或类型的属性的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-321">Returns the collection of attributes for a component or a type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection GetAttributes (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection GetAttributes(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttributes (component As Object) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributes(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetAttributes : obj -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.TypeDescriptor.GetAttributes component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="cf3a8-322">要为其获取特性的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-322">The component for which you want to get attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-323">返回指定组件的属性的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-323">Returns the collection of attributes for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-324">包含该组件的特性的 <see cref="T:System.ComponentModel.AttributeCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-324">An <see cref="T:System.ComponentModel.AttributeCollection" /> containing the attributes for the component.</span>
          </span>
          <span data-ttu-id="cf3a8-325">如果 <paramref name="component" /> 为 <see langword="null" />，则此方法返回空集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-325">If <paramref name="component" /> is <see langword="null" />, this method returns an empty collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-326">返回的属性<xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A>方法可能会从原始组件的源列表，请按扩展程序提供程序进行动态修改 (<xref:System.ComponentModel.IExtenderProvider>)，筛选服务 (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>)，和属性筛选器。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-326">The attributes returned by the <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> method may be dynamically modified from the original component's source listing by extender providers (<xref:System.ComponentModel.IExtenderProvider>), filter services (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), and attribute filters.</span></span>  
  
 <span data-ttu-id="cf3a8-327">当你定义的自定义属性<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>设置为`true`，必须重写<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>属性以确保其唯一性。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-327">When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property to make it unique.</span></span> <span data-ttu-id="cf3a8-328">如果特性的所有实例都是唯一的重写<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>返回特性的对象标识。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-328">If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> to return the object identity of your attribute.</span></span> <span data-ttu-id="cf3a8-329">如果只有特性的一些实例是唯一的返回一个介于<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>，将在这些情况下返回是否相等。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-329">If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> that would return equality in those cases.</span></span> <span data-ttu-id="cf3a8-330">例如，有些属性禁用了用作唯一键的构造函数参数。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-330">For example, some attributes have a constructor parameter that acts as a unique key.</span></span> <span data-ttu-id="cf3a8-331">对于这些特性，返回从构造函数参数的值<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-331">For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf3a8-332">默认实现<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>返回而不考虑的值的类型标识<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-332">The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="cf3a8-333">若要返回的多个实例<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>属性从<xref:System.ComponentModel.AttributeCollection>，特性必须重写<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-333">In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf3a8-334">此方法的示例，请参阅<xref:System.ComponentModel.AttributeCollection.Matches%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-334">For an example of this method, see the <xref:System.ComponentModel.AttributeCollection.Matches%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection GetAttributes (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection GetAttributes(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttributes (componentType As Type) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributes(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetAttributes : Type -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.TypeDescriptor.GetAttributes componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="cf3a8-335">目标组件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-335">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-336">返回指定组件类型的属性集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-336">Returns a collection of attributes for the specified type of component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-337">具有该类型组件的特性的 <see cref="T:System.ComponentModel.AttributeCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-337">An <see cref="T:System.ComponentModel.AttributeCollection" /> with the attributes for the type of the component.</span>
          </span>
          <span data-ttu-id="cf3a8-338">如果该组件为 <see langword="null" />，则此方法返回空集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-338">If the component is <see langword="null" />, this method returns an empty collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-339">仅当没有对象的实例时，请调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-339">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="cf3a8-340">有关使用属性<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>设置为`true`，属性集合中删除重复的实例。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-340">For attributes with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, the attribute collection removes duplicate instances.</span></span> <span data-ttu-id="cf3a8-341">这些是在其中实例<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>属性返回相等的值。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-341">These are instances in which the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property returns equal values.</span></span>  
  
 <span data-ttu-id="cf3a8-342">当你定义的自定义属性<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>设置为`true`，必须重写<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>属性以确保其唯一性。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-342">When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property to make it unique.</span></span> <span data-ttu-id="cf3a8-343">如果特性的所有实例都是唯一的重写<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>返回特性的对象标识。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-343">If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> to return the object identity of your attribute.</span></span> <span data-ttu-id="cf3a8-344">如果只有特性的一些实例是唯一的返回一个介于<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>，将在这些情况下返回是否相等。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-344">If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> that would return equality in those cases.</span></span> <span data-ttu-id="cf3a8-345">例如，有些属性禁用了用作唯一键的构造函数参数。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-345">For example, some attributes have a constructor parameter that acts as a unique key.</span></span> <span data-ttu-id="cf3a8-346">对于这些特性，返回从构造函数参数的值<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-346">For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf3a8-347">默认实现<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>返回而不考虑的值的类型标识<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-347">The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="cf3a8-348">若要返回的多个实例<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>属性从<xref:System.ComponentModel.AttributeCollection>，特性必须重写<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-348">In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection GetAttributes (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection GetAttributes(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttributes (component As Object, noCustomTypeDesc As Boolean) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributes(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetAttributes : obj * bool -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.TypeDescriptor.GetAttributes (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="cf3a8-349">要为其获取特性的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-349">The component for which you want to get attributes.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="cf3a8-350">如果 <c>component</c> 的类型为 <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />，使用自定义类型说明符中一组基础属性时为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-350">
              <see langword="true" /> to use a baseline set of attributes from the custom type descriptor if <c>component</c> is of type <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-351">为指定组件返回特性集合，并且创建了一个指示自定义类型描述符的布尔值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-351">Returns a collection of attributes for the specified component and a Boolean indicating that a custom type descriptor has been created.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-352">包含该组件的特性的 <see cref="T:System.ComponentModel.AttributeCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-352">An <see cref="T:System.ComponentModel.AttributeCollection" /> with the attributes for the component.</span>
          </span>
          <span data-ttu-id="cf3a8-353">如果该组件为 <see langword="null" />，则此方法返回空集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-353">If the component is <see langword="null" />, this method returns an empty collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-354">返回的属性<xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A>方法可能会从原始的组件源列表，请按扩展程序提供程序进行动态修改 (<xref:System.ComponentModel.IExtenderProvider>)，筛选服务 (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>)，和属性筛选器。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-354">The attributes returned by the <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> method may be dynamically modified from the original components source listing by extender providers (<xref:System.ComponentModel.IExtenderProvider>), filter services (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), and attribute filters.</span></span>  
  
 <span data-ttu-id="cf3a8-355">当你定义的自定义属性<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>设置为`true`，必须重写<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>属性以确保其唯一性。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-355">When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property to make it unique.</span></span> <span data-ttu-id="cf3a8-356">如果特性的所有实例都是唯一的重写<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>返回特性的对象标识。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-356">If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> to return the object identity of your attribute.</span></span> <span data-ttu-id="cf3a8-357">如果只有特性的一些实例是唯一的返回一个介于<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>，将在这些情况下返回是否相等。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-357">If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> that would return equality in those cases.</span></span> <span data-ttu-id="cf3a8-358">例如，有些属性禁用了用作唯一键的构造函数参数。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-358">For example, some attributes have a constructor parameter that acts as a unique key.</span></span> <span data-ttu-id="cf3a8-359">对于这些特性，返回从构造函数参数的值<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-359">For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf3a8-360">默认实现<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>返回而不考虑的值的类型标识<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-360">The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="cf3a8-361">若要返回的多个实例<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>属性从<xref:System.ComponentModel.AttributeCollection>，特性必须重写<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-361">In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetClassName">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf3a8-362">返回指定组件的类的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-362">Returns the name of the class for the specified component.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public static string GetClassName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClassName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClassName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClassName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetClassName : obj -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetClassName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="cf3a8-363">需要其类名的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-363">The <see cref="T:System.Object" /> for which you want the class name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-364">使用默认类型描述符，返回指定组件的类的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-364">Returns the name of the class for the specified component using the default type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-365">一个 <see cref="T:System.String" />，包含指定组件的类的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-365">A <see cref="T:System.String" /> containing the name of the class for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-366">通常情况下，此方法返回完整<xref:System.Type>名称`component`参数类型。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-366">Typically, this method returns the full <xref:System.Type> name for the `component` parameter type.</span></span> <span data-ttu-id="cf3a8-367">例如，一个按钮的类名称是"System.Windows.Forms.Button"。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-367">For example, the class name for a button is "System.Windows.Forms.Button".</span></span> <span data-ttu-id="cf3a8-368">如果`component`实现<xref:System.ComponentModel.ICustomTypeDescriptor>，它可返回的备用名称。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-368">If `component` implements <xref:System.ComponentModel.ICustomTypeDescriptor>, it can return an alternate name.</span></span>  
  
 <span data-ttu-id="cf3a8-369">此方法相当于重载<xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29>方法的第二个参数替换`false`。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-369">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-370">
            <paramref name="component" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-370">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public static string GetClassName (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClassName(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClassName (componentType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClassName(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetClassName : Type -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetClassName componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="cf3a8-371">目标组件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-371">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-372">返回指定类型的类的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-372">Returns the name of the class for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-373">包含指定组件类型的类的名称的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-373">A <see cref="T:System.String" /> containing the name of the class for the specified component type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-374">此方法使用的指定类型的缓存的自定义类型描述符来发现的关联的类名称。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-374">This method uses the cached custom type descriptor for the specified type to discover the associated class name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-375">
            <paramref name="componentType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-375">
              <paramref name="componentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public static string GetClassName (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClassName(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClassName (component As Object, noCustomTypeDesc As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClassName(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetClassName : obj * bool -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetClassName (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="cf3a8-376">需要其类名的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-376">The <see cref="T:System.Object" /> for which you want the class name.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="cf3a8-377">若要考虑自定义类型说明信息，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-377">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-378">使用自定义类型描述符返回指定组件的类的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-378">Returns the name of the class for the specified component using a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-379">一个 <see cref="T:System.String" />，包含指定组件的类的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-379">A <see cref="T:System.String" /> containing the name of the class for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-380">通常情况下，此方法返回完整<xref:System.Type>名称`component`参数类型。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-380">Typically, this method returns the full <xref:System.Type> name for the `component` parameter type.</span></span> <span data-ttu-id="cf3a8-381">例如，一个按钮的类名称是"System.Windows.Forms.Button"。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-381">For example, the class name for a button is "System.Windows.Forms.Button".</span></span> <span data-ttu-id="cf3a8-382">如果`component`参数实现<xref:System.ComponentModel.ICustomTypeDescriptor>，它可返回的备用名称。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-382">If the `component` parameter implements <xref:System.ComponentModel.ICustomTypeDescriptor>, it can return an alternate name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-383">
            <paramref name="component" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-383">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cf3a8-384">
            <paramref name="component" /> 是一个跨进程远程对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-384">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetComponentName">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf3a8-385">返回指定的组件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-385">Returns the name of the specified component.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetComponentName">
      <MemberSignature Language="C#" Value="public static string GetComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComponentName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetComponentName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetComponentName : obj -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetComponentName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="cf3a8-386">需要其类名的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-386">The <see cref="T:System.Object" /> for which you want the class name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-387">使用默认类型描述符返回指定组件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-387">Returns the name of the specified component using the default type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-388">包含指定组件的名称的 <see cref="T:System.String" />，如果没有任何组件名，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-388">A <see cref="T:System.String" /> containing the name of the specified component, or <see langword="null" /> if there is no component name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-389">通常情况下，如果存在此方法将返回该组件的站点的名称。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-389">Typically, this method returns the name for the site of the component, if one exists.</span></span> <span data-ttu-id="cf3a8-390">例如，一个按钮的类名称是"System.Windows.Forms.Button"。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-390">For example, the class name for a button is "System.Windows.Forms.Button".</span></span>  
  
 <span data-ttu-id="cf3a8-391">此方法相当于重载<xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29>方法的第二个参数替换`false`。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-391">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.</span></span>  
  
 <span data-ttu-id="cf3a8-392">此方法用于在设计时检索的组件的实例的名称。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-392">This method is used at design time to retrieve the name of an instance of a component.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-393">
            <paramref name="component" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-393">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cf3a8-394">
            <paramref name="component" /> 是一个跨进程远程对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-394">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <Member MemberName="GetComponentName">
      <MemberSignature Language="C#" Value="public static string GetComponentName (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetComponentName(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComponentName (component As Object, noCustomTypeDesc As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetComponentName(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetComponentName : obj * bool -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetComponentName (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="cf3a8-395">需要其类名的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-395">The <see cref="T:System.Object" /> for which you want the class name.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="cf3a8-396">若要考虑自定义类型说明信息，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-396">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-397">使用自定义类型描述符返回指定组件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-397">Returns the name of the specified component using a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-398">指定组件的类的名称；如果没有任何组件名，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-398">The name of the class for the specified component, or <see langword="null" /> if there is no component name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-399">此方法用于在设计时检索的组件的实例的名称。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-399">This method is used at design time to retrieve the name of an instance of a component.</span></span> <span data-ttu-id="cf3a8-400">通常情况下，如果存在此方法将返回该组件的站点的名称。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-400">Typically, this method returns the name for the site of the component, if one exists.</span></span> <span data-ttu-id="cf3a8-401">例如，一个按钮的类名称是"System.Windows.Forms.Button"。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-401">For example, the class name for a button is "System.Windows.Forms.Button".</span></span> <span data-ttu-id="cf3a8-402">如果该组件实现<xref:System.ComponentModel.ICustomTypeDescriptor>接口，它可以返回的备用名称。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-402">If the component implements the <xref:System.ComponentModel.ICustomTypeDescriptor> interface, it can return an alternate name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-403">
            <paramref name="component" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-403">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cf3a8-404">
            <paramref name="component" /> 是一个跨进程远程对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-404">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetConverter">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf3a8-405">返回组件或类型的类型转换器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-405">Returns a type converter for a component or a type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeConverter GetConverter (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeConverter GetConverter(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConverter (component As Object) As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeConverter ^ GetConverter(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetConverter : obj -&gt; System.ComponentModel.TypeConverter" Usage="System.ComponentModel.TypeDescriptor.GetConverter component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="cf3a8-406">要为其获取转换器的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-406">A component to get the converter for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-407">返回指定组件类型的类型转换器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-407">Returns a type converter for the type of the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-408">指定组件的 <see cref="T:System.ComponentModel.TypeConverter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-408">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-409">此方法通过查找来查找相应的类型转换器<xref:System.ComponentModel.TypeConverterAttribute>。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-409">This method locates an appropriate type converter by looking for a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="cf3a8-410">如果找不到<xref:System.ComponentModel.TypeConverterAttribute>，它遍历类的基类层次结构，直到它找到的基元类型。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-410">If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.</span></span>  
  
 <span data-ttu-id="cf3a8-411">此方法相当于重载<xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>方法的第二个参数替换`false`。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-411">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method with a second parameter of `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf3a8-412">使用此方法的示例，请参阅<xref:System.ComponentModel.TypeConverter>类。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-412">For an example of using this method, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-413">
            <paramref name="component" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-413">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cf3a8-414">
            <paramref name="component" /> 是一个跨进程远程对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-414">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeConverter GetConverter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeConverter GetConverter(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeConverter ^ GetConverter(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetConverter : Type -&gt; System.ComponentModel.TypeConverter" Usage="System.ComponentModel.TypeDescriptor.GetConverter type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="cf3a8-415">目标组件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-415">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-416">返回指定类型的类型转换器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-416">Returns a type converter for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-417">指定类型的 <see cref="T:System.ComponentModel.TypeConverter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-417">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-418">仅当没有对象的实例时，请调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-418">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="cf3a8-419">此方法通过查找来查找适当的类型转换器<xref:System.ComponentModel.TypeConverterAttribute>。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-419">This method looks for the appropriate type converter by looking for a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="cf3a8-420">如果找不到<xref:System.ComponentModel.TypeConverterAttribute>，它遍历类的基类层次结构，直到它找到的基元类型。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-420">If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-421">
            <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-421">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeConverter GetConverter (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeConverter GetConverter(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConverter (component As Object, noCustomTypeDesc As Boolean) As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeConverter ^ GetConverter(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetConverter : obj * bool -&gt; System.ComponentModel.TypeConverter" Usage="System.ComponentModel.TypeDescriptor.GetConverter (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="cf3a8-422">要为其获取转换器的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-422">A component to get the converter for.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="cf3a8-423">若要考虑自定义类型说明信息，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-423">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-424">为具有自定义类型描述符的指定组件类型返回一个类型转换器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-424">Returns a type converter for the type of the specified component with a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-425">指定组件的 <see cref="T:System.ComponentModel.TypeConverter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-425">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-426">此方法尝试查找通过查找适当的类型转换器<xref:System.ComponentModel.TypeConverterAttribute>。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-426">This method looks for the appropriate type converter by trying to find a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="cf3a8-427">如果找不到<xref:System.ComponentModel.TypeConverterAttribute>，它遍历类的基类层次结构，直到它找到的基元类型。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-427">If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-428">
            <paramref name="component" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-428">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cf3a8-429">
            <paramref name="component" /> 是一个跨进程远程对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-429">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDefaultEvent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf3a8-430">返回组件或类型的默认事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-430">Returns the default event for a component or type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor GetDefaultEvent (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor GetDefaultEvent(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultEvent (component As Object) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ GetDefaultEvent(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetDefaultEvent : obj -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultEvent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="cf3a8-431">要获取其事件的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-431">The component to get the event for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-432">返回指定组件的默认事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-432">Returns the default event for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-433">具有默认事件的 <see cref="T:System.ComponentModel.EventDescriptor" />；如果没有事件，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-433">An <see cref="T:System.ComponentModel.EventDescriptor" /> with the default event, or <see langword="null" /> if there are no events.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-434">此方法相当于重载<xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29>方法的第二个参数替换`false`。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-434">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-435">
            <paramref name="component" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-435">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cf3a8-436">
            <paramref name="component" /> 是一个跨进程远程对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-436">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor GetDefaultEvent (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor GetDefaultEvent(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultEvent (componentType As Type) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ GetDefaultEvent(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetDefaultEvent : Type -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultEvent componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="cf3a8-437">目标组件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-437">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-438">返回指定组件类型的默认事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-438">Returns the default event for the specified type of component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-439">具有默认事件的 <see cref="T:System.ComponentModel.EventDescriptor" />；如果没有事件，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-439">An <see cref="T:System.ComponentModel.EventDescriptor" /> with the default event, or <see langword="null" /> if there are no events.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-440">仅当没有对象的实例时，请调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-440">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-441">
            <paramref name="componentType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-441">
              <paramref name="componentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor GetDefaultEvent (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor GetDefaultEvent(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultEvent (component As Object, noCustomTypeDesc As Boolean) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ GetDefaultEvent(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetDefaultEvent : obj * bool -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultEvent (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="cf3a8-442">要获取其事件的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-442">The component to get the event for.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="cf3a8-443">若要考虑自定义类型说明信息，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-443">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-444">返回具有自定义类型描述符的组件的默认事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-444">Returns the default event for a component with a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-445">具有默认事件的 <see cref="T:System.ComponentModel.EventDescriptor" />；如果没有事件，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-445">An <see cref="T:System.ComponentModel.EventDescriptor" /> with the default event, or <see langword="null" /> if there are no events.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-446">
            <paramref name="component" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-446">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cf3a8-447">
            <paramref name="component" /> 是一个跨进程远程对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-447">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDefaultProperty">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf3a8-448">返回组件的默认属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-448">Returns the default property for a component.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetDefaultProperty(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProperty (component As Object) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetDefaultProperty : obj -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultProperty component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="cf3a8-449">要获取其默认属性的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-449">The component to get the default property for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-450">返回指定组件的默认属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-450">Returns the default property for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-451">具有默认属性的 <see cref="T:System.ComponentModel.PropertyDescriptor" />；如果没有属性，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-451">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the default property, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-452">如果`component`参数是`null`，此方法返回`null`。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-452">If the `component` parameter is `null`, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cf3a8-453">
            <paramref name="component" /> 是一个跨进程远程对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-453">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetDefaultProperty(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProperty (componentType As Type) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetDefaultProperty : Type -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultProperty componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="cf3a8-454">表示要获取其属性的类的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-454">A <see cref="T:System.Type" /> that represents the class to get the property for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-455">返回指定类型组件的默认属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-455">Returns the default property for the specified type of component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-456">具有默认属性的 <see cref="T:System.ComponentModel.PropertyDescriptor" />；如果没有属性，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-456">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the default property, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-457">仅当没有对象的实例时，请调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-457">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="cf3a8-458">如果`componentType`参数是`null`，此方法返回`null`。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-458">If the `componentType` parameter is `null`, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetDefaultProperty(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProperty (component As Object, noCustomTypeDesc As Boolean) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetDefaultProperty : obj * bool -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultProperty (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="cf3a8-459">要获取其默认属性的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-459">The component to get the default property for.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="cf3a8-460">若要考虑自定义类型说明信息，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-460">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-461">使用自定义类型描述符返回指定组件的默认属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-461">Returns the default property for the specified component with a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-462">具有默认属性的 <see cref="T:System.ComponentModel.PropertyDescriptor" />；如果没有属性，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-462">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the default property, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-463">如果`component`参数是`null`，此方法返回`null`。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-463">If the `component` parameter is `null`, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cf3a8-464">
            <paramref name="component" /> 是一个跨进程远程对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-464">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEditor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf3a8-465">使用指定的基类型返回编辑器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-465">Returns an editor with the specified base type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public static object GetEditor (object component, Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetEditor(object component, class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEditor (component As Object, editorBaseType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetEditor(System::Object ^ component, Type ^ editorBaseType);" />
      <MemberSignature Language="F#" Value="static member GetEditor : obj * Type -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetEditor (component, editorBaseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="cf3a8-466">要为其获取编辑器的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-466">The component to get the editor for.</span>
          </span>
        </param>
        <param name="editorBaseType">
          <span data-ttu-id="cf3a8-467">一个 <see cref="T:System.Type" />，表示要查找的编辑器的基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-467">A <see cref="T:System.Type" /> that represents the base type of the editor you want to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-468">获取指定组件的具有指定基类型的编辑器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-468">Gets an editor with the specified base type for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-469">可被强制转换为指定编辑器类型的编辑器的一个实例，如果找不到请求类型的编辑器，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-469">An instance of the editor that can be cast to the specified editor type, or <see langword="null" /> if no editor of the requested type can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-470">一种`editorBaseType`通常是<xref:System.Drawing.Design.UITypeEditor>，但你也可以使用其他类型 (例如，<xref:System.ComponentModel.ComponentEditor>和<xref:System.ComponentModel.InstanceCreationEditor>)。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-470">The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example, <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 <span data-ttu-id="cf3a8-471">你可以定义多个属性编辑器。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-471">You can define multiple editors for a property.</span></span> <span data-ttu-id="cf3a8-472">使用此方法以选择你想要使用的编辑器。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-472">You use this method to select the editor you want to use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-473">
            <paramref name="component" /> 或 <paramref name="editorBaseType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-473">
              <paramref name="component" /> or <paramref name="editorBaseType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cf3a8-474">
            <paramref name="component" /> 是一个跨进程远程对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-474">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public static object GetEditor (Type type, Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetEditor(class System.Type type, class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetEditor(Type ^ type, Type ^ editorBaseType);" />
      <MemberSignature Language="F#" Value="static member GetEditor : Type * Type -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetEditor (type, editorBaseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="cf3a8-475">目标组件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-475">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <param name="editorBaseType">
          <span data-ttu-id="cf3a8-476">一个 <see cref="T:System.Type" />，表示正在尝试查找的编辑器的基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-476">A <see cref="T:System.Type" /> that represents the base type of the editor you are trying to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-477">返回具有指定基类型的指定类型的编辑器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-477">Returns an editor with the specified base type for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-478">可被强制转换为给定基类型的编辑器对象的一个实例，如果找不到请求类型的编辑器，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-478">An instance of the editor object that can be cast to the given base type, or <see langword="null" /> if no editor of the requested type can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-479">一种`editorBaseType`通常是<xref:System.Drawing.Design.UITypeEditor>，但你也可以使用其他类型 (例如<xref:System.ComponentModel.ComponentEditor>和<xref:System.ComponentModel.InstanceCreationEditor>)。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-479">The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 <span data-ttu-id="cf3a8-480">你可以定义多个类型的编辑器。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-480">You can define multiple editors for a type.</span></span> <span data-ttu-id="cf3a8-481">使用此方法以选择你想要使用的一个。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-481">You use this method to select the one you want to use.</span></span>  
  
 <span data-ttu-id="cf3a8-482">仅当没有对象的实例时，请调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-482">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-483">
            <paramref name="type" /> 或 <paramref name="editorBaseType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-483">
              <paramref name="type" /> or <paramref name="editorBaseType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public static object GetEditor (object component, Type editorBaseType, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetEditor(object component, class System.Type editorBaseType, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEditor (component As Object, editorBaseType As Type, noCustomTypeDesc As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetEditor(System::Object ^ component, Type ^ editorBaseType, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetEditor : obj * Type * bool -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetEditor (component, editorBaseType, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="editorBaseType" Type="System.Type" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="cf3a8-484">要为其获取编辑器的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-484">The component to get the editor for.</span>
          </span>
        </param>
        <param name="editorBaseType">
          <span data-ttu-id="cf3a8-485">一个 <see cref="T:System.Type" />，表示要查找的编辑器的基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-485">A <see cref="T:System.Type" /> that represents the base type of the editor you want to find.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="cf3a8-486">表示是否应考虑自定义类型描述信息的标志。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-486">A flag indicating whether custom type description information should be considered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-487">为指定组件返回具有指定基类型和自定义类型描述符的编辑器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-487">Returns an editor with the specified base type and with a custom type descriptor for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-488">可被强制转换为指定编辑器类型的编辑器的一个实例，如果找不到请求类型的编辑器，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-488">An instance of the editor that can be cast to the specified editor type, or <see langword="null" /> if no editor of the requested type can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-489">一种`editorBaseType`通常是<xref:System.Drawing.Design.UITypeEditor>，但你也可以使用其他类型 (例如<xref:System.ComponentModel.ComponentEditor>和<xref:System.ComponentModel.InstanceCreationEditor>)。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-489">The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 <span data-ttu-id="cf3a8-490">你可以定义多个属性编辑器。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-490">You can define multiple editors for a property.</span></span> <span data-ttu-id="cf3a8-491">使用此方法以选择你想要使用的编辑器。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-491">You use this method to select the editor you want to use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-492">
            <paramref name="component" /> 或 <paramref name="editorBaseType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-492">
              <paramref name="component" /> or <paramref name="editorBaseType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cf3a8-493">
            <paramref name="component" /> 是一个跨进程远程对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-493">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvents">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf3a8-494">返回组件或类型的事件的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-494">Returns the collection of events for a component or type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="cf3a8-495">要为其获取事件的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-495">A component to get the events for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-496">返回指定组件的事件的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-496">Returns the collection of events for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-497">具有此组件的事件的 <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-497">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-498">检索事件的集合，给定`component`参数实例提供。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-498">Retrieves a collection of events that the given `component` parameter instance provides.</span></span> <span data-ttu-id="cf3a8-499">此集合可以与此类提供的事件集不同。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-499">This collection can differ from the set of events the class provides.</span></span> <span data-ttu-id="cf3a8-500">如果`component`占位参数，则该位置可以添加或删除其他事件。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-500">If the `component` parameter is sited, the site can add or remove additional events.</span></span>  
  
 <span data-ttu-id="cf3a8-501">如果`component`是`null`，则返回空集合。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-501">If `component` is `null`, then an empty collection is returned.</span></span>  
  
 <span data-ttu-id="cf3a8-502">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-502">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf3a8-503">此方法的示例，请参阅<xref:System.ComponentModel.EventDescriptorCollection.Count%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-503">For an example of this method, see the <xref:System.ComponentModel.EventDescriptorCollection.Count%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cf3a8-504">
            <paramref name="component" /> 是一个跨进程远程对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-504">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (componentType As Type) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetEvents : Type -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="cf3a8-505">目标组件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-505">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-506">返回指定组件类型的事件的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-506">Returns the collection of events for a specified type of component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-507">具有此组件的事件的 <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-507">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-508">仅当没有对象的实例时，请调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-508">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="cf3a8-509">如果`componentType`参数是`null`，返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-509">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="cf3a8-510">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-510">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object, attributes As Attribute()) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj * Attribute[] -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="cf3a8-511">要为其获取事件的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-511">A component to get the events for.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="cf3a8-512">可用作筛选器的类型 <see cref="T:System.Attribute" /> 的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-512">An array of type <see cref="T:System.Attribute" /> that you can use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-513">通过将指定的属性数组用作筛选器来返回指定组件的事件集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-513">Returns the collection of events for a specified component using a specified array of attributes as a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-514">一个 <see cref="T:System.ComponentModel.EventDescriptorCollection" />，包含与此组件的指定特性匹配的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-514">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-515">有关事件`component`参数可以与不同，事件的类，因为该位置可以添加或删除事件，如果`component`放置参数。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-515">The events for the `component` parameter can differ from the events of a class, because the site can add or remove events if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="cf3a8-516">`attributes`数组可以包含多种<xref:System.Type>和<xref:System.Attribute>对象。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-516">The `attributes` array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="cf3a8-517">筛选由以下规则定义：</span><span class="sxs-lookup"><span data-stu-id="cf3a8-517">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="cf3a8-518">A<xref:System.Type>视为通配符; 它与具有任何事件匹配<xref:System.Type>属性其集中。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-518">A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="cf3a8-519">如果事件没有<xref:System.Attribute>的同一个类，事件不包括在返回数组中。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-519">If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="cf3a8-520">如果属性是实例<xref:System.Attribute>类，事件必须是完全匹配，或它不包括在返回的数组。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-520">If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="cf3a8-521">如果<xref:System.Attribute>指定实例和它是默认事件，它包括在返回的数组，即使不没有的任何实例<xref:System.Attribute>的事件中。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-521">If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.</span></span>  
  
 <span data-ttu-id="cf3a8-522">如果`component`是`null`，返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-522">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="cf3a8-523">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-523">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cf3a8-524">
            <paramref name="component" /> 是一个跨进程远程对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-524">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object, noCustomTypeDesc As Boolean) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj * bool -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="cf3a8-525">要为其获取事件的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-525">A component to get the events for.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="cf3a8-526">若要考虑自定义类型说明信息，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-526">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-527">对具有自定义类型描述符的指定组件，返回事件集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-527">Returns the collection of events for a specified component with a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-528">具有此组件的事件的 <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-528">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-529">此方法检索的事件的集合，给定`component`参数实例提供。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-529">This method retrieves a collection of events that the given `component` parameter instance provides.</span></span> <span data-ttu-id="cf3a8-530">这可能不同于类提供的事件集。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-530">This can differ from the set of events the class provides.</span></span> <span data-ttu-id="cf3a8-531">如果`component`占位参数，则该位置可以添加或删除其他事件。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-531">If the `component` parameter is sited, the site can add or remove additional events.</span></span>  
  
 <span data-ttu-id="cf3a8-532">如果`component`是`null`，返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-532">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="cf3a8-533">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-533">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cf3a8-534">
            <paramref name="component" /> 是一个跨进程远程对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-534">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (Type componentType, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(class System.Type componentType, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (componentType As Type, attributes As Attribute()) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(Type ^ componentType, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetEvents : Type * Attribute[] -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (componentType, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="cf3a8-535">目标组件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-535">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="cf3a8-536">可用作筛选器的类型 <see cref="T:System.Attribute" /> 的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-536">An array of type <see cref="T:System.Attribute" /> that you can use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-537">通过将指定的属性数组用作筛选器来返回指定组件类型的事件的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-537">Returns the collection of events for a specified type of component using a specified array of attributes as a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-538">一个 <see cref="T:System.ComponentModel.EventDescriptorCollection" />，包含与此组件的指定特性匹配的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-538">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-539">仅当没有对象的实例时，请调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-539">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="cf3a8-540">`attributes`参数数组可以包含多种<xref:System.Type>和<xref:System.Attribute>对象。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-540">The `attributes` parameter array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="cf3a8-541">筛选由以下规则定义：</span><span class="sxs-lookup"><span data-stu-id="cf3a8-541">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="cf3a8-542">A<xref:System.Type>视为通配符; 它与具有任何事件匹配<xref:System.Type>属性其集中。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-542">A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="cf3a8-543">如果事件没有<xref:System.Attribute>的同一个类，事件不包括在返回数组中。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-543">If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="cf3a8-544">如果属性是实例<xref:System.Attribute>类，事件必须是完全匹配，或它不包括在返回的数组。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-544">If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="cf3a8-545">如果<xref:System.Attribute>指定实例和它是默认事件，它包括在返回的数组，即使不没有的任何实例<xref:System.Attribute>的事件中。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-545">If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.</span></span>  
  
 <span data-ttu-id="cf3a8-546">如果`componentType`参数是`null`，返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-546">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="cf3a8-547">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-547">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component, class System.Attribute[] attributes, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object, attributes As Attribute(), noCustomTypeDesc As Boolean) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj * Attribute[] * bool -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (component, attributes, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="cf3a8-548">要为其获取事件的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-548">A component to get the events for.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="cf3a8-549">用作筛选器的类型 <see cref="T:System.Attribute" /> 的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-549">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="cf3a8-550">若要考虑自定义类型说明信息，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-550">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-551">通过使用指定的属性数组作为筛选器，并使用自定义类型描述符来返回指定组件的事件集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-551">Returns the collection of events for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-552">一个 <see cref="T:System.ComponentModel.EventDescriptorCollection" />，包含与此组件的指定特性匹配的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-552">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-553">有关事件`component`参数可以与不同，事件的类，因为该位置可以添加或删除事件，如果`component`放置参数。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-553">The events for the `component` parameter can differ from the events of a class, because the site can add or remove events if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="cf3a8-554">`attributes`参数数组可以包含多种<xref:System.Type>和<xref:System.Attribute>对象。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-554">The `attributes` parameter array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="cf3a8-555">筛选由以下规则定义：</span><span class="sxs-lookup"><span data-stu-id="cf3a8-555">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="cf3a8-556">A<xref:System.Type>视为通配符; 它与具有任何事件匹配<xref:System.Type>属性其集中。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-556">A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="cf3a8-557">如果事件没有<xref:System.Attribute>的同一个类，事件不包括在返回数组中。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-557">If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="cf3a8-558">如果属性是实例<xref:System.Attribute>类，事件必须是完全匹配，或它不包括在返回的数组。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-558">If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="cf3a8-559">如果<xref:System.Attribute>指定实例和它是默认事件，它包括在返回的数组，即使不没有的任何实例<xref:System.Attribute>的事件中。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-559">If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.</span></span>  
  
 <span data-ttu-id="cf3a8-560">如果`component`是`null`，返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-560">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="cf3a8-561">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-561">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cf3a8-562">
            <paramref name="component" /> 是一个跨进程远程对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-562">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetFullComponentName">
      <MemberSignature Language="C#" Value="public static string GetFullComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFullComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFullComponentName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFullComponentName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetFullComponentName : obj -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetFullComponentName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="cf3a8-563">要查找其名称的 <see cref="T:System.ComponentModel.Component" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-563">The <see cref="T:System.ComponentModel.Component" /> to find the name for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-564">返回组件的完全限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-564">Returns the fully qualified name of the component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-565">指定组件的完全限定名，如果该组件没有名称，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-565">The fully qualified name of the specified component, or <see langword="null" /> if the component has no name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-566">在许多情况下，<xref:System.ComponentModel.TypeDescriptor.GetFullComponentName%2A>方法将返回相同的值<xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-566">In many cases, the <xref:System.ComponentModel.TypeDescriptor.GetFullComponentName%2A> method will return the same value as the <xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A> method.</span></span> <span data-ttu-id="cf3a8-567">但是，如果该组件位于嵌套容器，或者具有其他嵌套的语义，它可能返回不同的完全限定的名称。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-567">However, if the component resides in a nested container or has other nested semantics, it may return a different fully qualified name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-568">
            <paramref name="component" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-568">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf3a8-569">返回组件或类型的属性的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-569">Returns the collection of properties on a component or type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="cf3a8-570">要为其获取属性的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-570">A component to get the properties for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-571">返回指定组件的属性的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-571">Returns the collection of properties for a specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-572">一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，具有指定组件的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-572">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-573">组件的属性可能与不同的属性类，因为该位置可以添加或删除属性，如果组件所在。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-573">The properties for a component can differ from the properties of a class, because the site can add or remove properties if the component is sited.</span></span>  
  
 <span data-ttu-id="cf3a8-574">如果`component`参数是`null`，返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-574">If the `component` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="cf3a8-575">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-575">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf3a8-576">下面的代码示例演示如何将<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>方法来访问控件的属性。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-576">The following code example demonstrates the use of the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method to access the properties of a control.</span></span> <span data-ttu-id="cf3a8-577">此代码示例摘自更大的示例为提供<xref:System.ComponentModel.Design.ComponentDesigner>类。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-577">This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.ComponentDesigner> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.DesignerServices#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/CS/Form1.cs#8)]
 [!code-vb[System.ComponentModel.Design.DesignerServices#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cf3a8-578">
            <paramref name="component" /> 是一个跨进程远程对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-578">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (componentType As Type) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetProperties : Type -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="cf3a8-579">一个 <see cref="T:System.Type" />，表示要获取其属性的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-579">A <see cref="T:System.Type" /> that represents the component to get properties for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-580">返回指定组件类型的属性的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-580">Returns the collection of properties for a specified type of component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-581">一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，具有指定类型组件的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-581">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for a specified type of component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-582">仅当没有对象的实例时，请调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-582">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="cf3a8-583">如果`componentType`参数是`null`，返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-583">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="cf3a8-584">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-584">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="cf3a8-585">要为其获取属性的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-585">A component to get the properties for.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="cf3a8-586">用作筛选器的类型 <see cref="T:System.Attribute" /> 的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-586">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-587">通过将指定的属性数组用作筛选器来返回指定组件的属性的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-587">Returns the collection of properties for a specified component using a specified array of attributes as a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-588">一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，具有匹配指定组件的指定特性的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-588">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-589">属性`component`参数可以不同于类的属性，因为该位置可以添加或删除属性，如果`component`放置参数。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-589">The properties for the `component` parameter can differ from the properties of a class, because the site can add or remove properties if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="cf3a8-590">`attributes`参数数组用于筛选数组。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-590">The `attributes` parameter array is used to filter the array.</span></span> <span data-ttu-id="cf3a8-591">筛选由以下规则定义：</span><span class="sxs-lookup"><span data-stu-id="cf3a8-591">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="cf3a8-592">如果属性不具有<xref:System.Attribute>的同一个类，该属性不包括在返回数组中。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-592">If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="cf3a8-593">如果属性是实例<xref:System.Attribute>类，该属性必须是完全匹配，或它不包括在返回的数组。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-593">If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="cf3a8-594">如果<xref:System.Attribute>指定实例和它是默认属性，它也包括在返回的数组，即使存在的任何实例<xref:System.Attribute>属性中。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-594">If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
-   <span data-ttu-id="cf3a8-595">如果`attributes`具有默认属性，<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>方法匹配大小写，如果属性不具有应用的属性。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-595">If `attributes` has a default attribute, the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method matches the case when the property does not have the attribute applied.</span></span>  
  
 <span data-ttu-id="cf3a8-596">如果`component`是`null`，返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-596">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="cf3a8-597">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-597">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf3a8-598">下面的代码示例演示如何实现<xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-598">The following code example demonstrates how to implement the <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> method.</span></span> <span data-ttu-id="cf3a8-599">此代码示例摘自更大的示例为提供<xref:System.Windows.Forms.Design.PropertyTab>类。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-599">This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.PropertyTab> class.</span></span>  
  
 [!code-cpp[PropertyTabExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PropertyTabExample/CPP/class1.cpp#2)]
 [!code-csharp[PropertyTabExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PropertyTabExample/CS/class1.cs#2)]
 [!code-vb[PropertyTabExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PropertyTabExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cf3a8-600">
            <paramref name="component" /> 是一个跨进程远程对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-600">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object, noCustomTypeDesc As Boolean) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj * bool -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="cf3a8-601">要为其获取属性的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-601">A component to get the properties for.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="cf3a8-602">若不考虑自定义类型说明信息，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-602">
              <see langword="true" /> to not consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-603">使用默认类型描述符为指定组件返回属性集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-603">Returns the collection of properties for a specified component using the default type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-604">一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，具有指定组件的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-604">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for a specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-605">属性`component`参数可以不同于类的属性，因为该位置可以添加或删除属性，如果`component`放置参数。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-605">The properties for the `component` parameter can differ from the properties of a class, because the site can add or remove properties if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="cf3a8-606">如果`component`是`null`，返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-606">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="cf3a8-607">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-607">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cf3a8-608">
            <paramref name="component" /> 是一个跨进程远程对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-608">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (Type componentType, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.Type componentType, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (componentType As Type, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(Type ^ componentType, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetProperties : Type * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (componentType, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="cf3a8-609">目标组件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-609">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="cf3a8-610">用作筛选器的类型 <see cref="T:System.Attribute" /> 的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-610">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-611">通过将指定的属性数组用作筛选器来为指定类型的组件返回属性的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-611">Returns the collection of properties for a specified type of component using a specified array of attributes as a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-612">一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，具有与此类型组件的指定特性相匹配的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-612">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for this type of component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-613">仅当没有对象的实例时，请调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-613">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="cf3a8-614">`attributes`参数数组用于筛选数组。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-614">The `attributes` parameter array is used to filter the array.</span></span> <span data-ttu-id="cf3a8-615">筛选由以下规则定义：</span><span class="sxs-lookup"><span data-stu-id="cf3a8-615">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="cf3a8-616">如果属性不具有<xref:System.Attribute>的同一个类，该属性不包括在返回数组中。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-616">If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="cf3a8-617">如果属性是实例<xref:System.Attribute>类，该属性必须是完全匹配，或它不包括在返回的数组。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-617">If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="cf3a8-618">如果<xref:System.Attribute>指定实例和它是默认属性，它也包括在返回的数组，即使存在的任何实例<xref:System.Attribute>属性中。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-618">If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
-   <span data-ttu-id="cf3a8-619">如果`attributes`具有默认属性，<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>方法匹配大小写，如果属性不具有应用的属性。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-619">If `attributes` has a default attribute, the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method matches the case when the property does not have the attribute applied.</span></span>  
  
 <span data-ttu-id="cf3a8-620">如果`componentType`参数是`null`，返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-620">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="cf3a8-621">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-621">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf3a8-622">下面的代码示例演示如何实现<xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-622">The following code example demonstrates how to implement the <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> method.</span></span> <span data-ttu-id="cf3a8-623">此代码示例摘自更大的示例为提供<xref:System.Windows.Forms.Design.PropertyTab>类。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-623">This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.PropertyTab> class.</span></span>  
  
 [!code-cpp[PropertyTabExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PropertyTabExample/CPP/class1.cpp#2)]
 [!code-csharp[PropertyTabExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PropertyTabExample/CS/class1.cs#2)]
 [!code-vb[PropertyTabExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PropertyTabExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, class System.Attribute[] attributes, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object, attributes As Attribute(), noCustomTypeDesc As Boolean) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj * Attribute[] * bool -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (component, attributes, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="cf3a8-624">要为其获取属性的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-624">A component to get the properties for.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="cf3a8-625">用作筛选器的类型 <see cref="T:System.Attribute" /> 的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-625">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="cf3a8-626">若要考虑自定义类型说明信息，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-626">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-627">通过使用指定的属性数组作为筛选器，并使用自定义类型描述符来返回指定组件的属性集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-627">Returns the collection of properties for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-628">一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，具有与指定组件的指定特性匹配的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-628">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the events that match the specified attributes for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-629">属性`component`可以不同于类的属性，因为该位置可以添加或删除属性，如果`component`占位。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-629">The properties for a `component` can differ from the properties of a class, because the site can add or remove properties if the `component` is sited.</span></span>  
  
 <span data-ttu-id="cf3a8-630">`attributes`参数数组用于筛选数组。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-630">The `attributes` parameter array is used to filter the array.</span></span> <span data-ttu-id="cf3a8-631">筛选由以下规则定义：</span><span class="sxs-lookup"><span data-stu-id="cf3a8-631">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="cf3a8-632">如果属性不具有<xref:System.Attribute>的同一个类，该属性不包括在返回数组中。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-632">If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="cf3a8-633">如果属性是实例<xref:System.Attribute>类，该属性必须是完全匹配，或它不包括在返回的数组。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-633">If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="cf3a8-634">如果<xref:System.Attribute>指定实例和它是默认属性，它也包括在返回的数组，即使存在的任何实例<xref:System.Attribute>属性中。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-634">If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
-   <span data-ttu-id="cf3a8-635">如果`attributes`具有默认属性，<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>方法匹配大小写，如果属性不具有应用的属性。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-635">If `attributes` has a default attribute, the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method matches the case when the property does not have the attribute applied.</span></span>  
  
 <span data-ttu-id="cf3a8-636">如果`component`参数是`null`，返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-636">If the `component` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="cf3a8-637">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-637">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cf3a8-638">
            <paramref name="component" /> 是一个跨进程远程对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-638">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProvider">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf3a8-639">返回组件或类型的类型说明提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-639">Returns the type description provider for the component or type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProvider">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider GetProvider (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider GetProvider(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProvider (instance As Object) As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ GetProvider(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetProvider : obj -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.GetProvider instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="cf3a8-640">目标组件的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-640">An instance of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-641">返回指定组件的类型说明提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-641">Returns the type description provider for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-642">与指定组件关联的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-642">A <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> associated with the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-643"><xref:System.ComponentModel.TypeDescriptor.GetProvider%2A>方法将始终返回的类型说明提供。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-643">The <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> method will always return a type description provider.</span></span> <span data-ttu-id="cf3a8-644">即使默认<xref:System.ComponentModel.TypeDescriptor>实现基于<xref:System.ComponentModel.TypeDescriptionProvider>。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-644">Even the default <xref:System.ComponentModel.TypeDescriptor> implementation is built on a <xref:System.ComponentModel.TypeDescriptionProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-645">
            <paramref name="instance" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-645">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetProvider">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider GetProvider (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider GetProvider(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ GetProvider(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetProvider : Type -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.GetProvider type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="cf3a8-646">目标组件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-646">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-647">返回指定类型的类型说明提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-647">Returns the type description provider for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-648">与指定类型关联的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-648">A <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> associated with the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-649"><xref:System.ComponentModel.TypeDescriptor.GetProvider%2A>方法将始终返回的类型说明提供。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-649">The <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> method will always return a type description provider.</span></span> <span data-ttu-id="cf3a8-650">即使默认<xref:System.ComponentModel.TypeDescriptor>实现基于<xref:System.ComponentModel.TypeDescriptionProvider>。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-650">Even the default <xref:System.ComponentModel.TypeDescriptor> implementation is built on a <xref:System.ComponentModel.TypeDescriptionProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-651">
            <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-651">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetReflectionType">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf3a8-652">返回可用于执行反射的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-652">Returns a <see cref="T:System.Type" /> that can be used to perform reflection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public static Type GetReflectionType (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetReflectionType(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetReflectionType (instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetReflectionType(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetReflectionType : obj -&gt; Type" Usage="System.ComponentModel.TypeDescriptor.GetReflectionType instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="cf3a8-653">目标组件的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-653">An instance of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-654">如果给定对象，则返回可用于执行反射的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-654">Returns a <see cref="T:System.Type" /> that can be used to perform reflection, given an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-655">指定对象的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-655">A <see cref="T:System.Type" /> for the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-656"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A>方法是低级别版本<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-656">The <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> method is a low-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="cf3a8-657"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> 通常用于执行与对象的标准反射，如果没有自定义类型描述符可以为其所在。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-657"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> is typically used to perform standard reflection against an object when no custom type descriptor can be located for it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-658">
            <paramref name="instance" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-658">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public static Type GetReflectionType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetReflectionType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetReflectionType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetReflectionType : Type -&gt; Type" Usage="System.ComponentModel.TypeDescriptor.GetReflectionType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="cf3a8-659">目标组件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-659">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-660">如果给定类类型，则返回可用于执行反射的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-660">Returns a <see cref="T:System.Type" /> that can be used to perform reflection, given a class type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf3a8-661">指定类的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-661">A <see cref="T:System.Type" /> of the specified class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-662"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A>方法是低级别版本<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-662">The <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> method is a low-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="cf3a8-663"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> 通常用于执行根据某个类的标准反射，如果没有自定义类型描述符可以找到它。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-663"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> is typically used to perform standard reflection against a class when no custom type descriptor can be located for it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-664">
            <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-664">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public static Type InterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeDescriptor.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Type ^ InterfaceType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InterfaceType : Type" Usage="System.ComponentModel.TypeDescriptor.InterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf3a8-665">获取一个类型，它表示所有接口类型的类型说明提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-665">Gets a type that represents a type description provider for all interface types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cf3a8-666">表示所有接口类型的类型说明提供程序的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-666">A <see cref="T:System.Type" /> that represents a custom type description provider for all interface types.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-667"><xref:System.ComponentModel.TypeDescriptor.InterfaceType%2A>属性可以获取<xref:System.Type>可以将传递到的对象<xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>方法来定义的类型说明提供程序接口类型。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-667">The <xref:System.ComponentModel.TypeDescriptor.InterfaceType%2A> property gets a <xref:System.Type> object that you can pass to the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods to define a type description provider for interface types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Refresh">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf3a8-668">清除缓存中的属性和事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-668">Clears the properties and events from the cache.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Refresh (component As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member Refresh : obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="cf3a8-669">已更改属性或事件的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-669">A component for which the properties or events have changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-670">从缓存中清除指定组件的属性和事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-670">Clears the properties and events for the specified component from the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-671">通过缓存属性和事件<xref:System.ComponentModel.TypeDescriptor>的速度。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-671">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="cf3a8-672">通常情况下，它们是常量对象的生存期内。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-672">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="cf3a8-673">但是，扩展程序提供程序和设计器可以更改对象上的属性的集。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-673">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="cf3a8-674">如果他们这样做，它们应调用此方法以清除该对象的属性和事件描述符。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-674">If they do, they should call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="cf3a8-675">此方法仅在设计时使用。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-675">This method is used only at design time.</span></span> <span data-ttu-id="cf3a8-676">在运行时不使用它。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-676">It is not used during run time.</span></span>  
  
 <span data-ttu-id="cf3a8-677">此方法也会引发<xref:System.ComponentModel.TypeDescriptor.Refreshed>事件的属性或事件的组件更改时。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-677">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when the properties or events of a component change.</span></span> <span data-ttu-id="cf3a8-678">如果没有调用仅将引发此事件<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>或<xref:System.ComponentModel.TypeDescriptor.GetEvents%2A>缓存信息的方法。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-678">This event is only raised if there was a prior call to the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> or <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that cached the information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf3a8-679">使用此方法的示例，请参阅<xref:System.ComponentModel.RefreshEventHandler>类。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-679">For an example of using this method, see the <xref:System.ComponentModel.RefreshEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="static member Refresh : System.Reflection.Assembly -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <span data-ttu-id="cf3a8-680">表示要刷新的程序集的 <see cref="T:System.Reflection.Assembly" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-680">The <see cref="T:System.Reflection.Assembly" /> that represents the assembly to refresh.</span>
          </span>
          <span data-ttu-id="cf3a8-681">将刷新程序集中的每个 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-681">Each <see cref="T:System.Type" /> in this assembly will be refreshed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-682">从缓存中清除指定程序集的属性和事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-682">Clears the properties and events for the specified assembly from the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-683">通过缓存属性和事件<xref:System.ComponentModel.TypeDescriptor>的速度。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-683">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="cf3a8-684">通常情况下，它们是常量对象的生存期内。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-684">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="cf3a8-685">但是，扩展程序提供程序和设计器可以更改对象上的属性的集。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-685">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="cf3a8-686">如果他们这样做，它们可以调用此方法以清除该对象的属性和事件描述符。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-686">If they do, they can call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="cf3a8-687">此方法仅在设计时使用。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-687">This method is used only at design time.</span></span> <span data-ttu-id="cf3a8-688">在运行时不使用它。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-688">It is not used during run time.</span></span>  
  
 <span data-ttu-id="cf3a8-689">在进行调用之前<xref:System.ComponentModel.TypeDescriptor.Refresh%2A>方法来清除缓存中，你需要调用<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>要首先缓存该信息的特定程序集的方法。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-689">Before you make a call to the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method to clear the cache, you need to call the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method for the specific assembly to cache the information first.</span></span>  
  
 <span data-ttu-id="cf3a8-690">此方法也会引发<xref:System.ComponentModel.TypeDescriptor.Refreshed>事件来通知想要将属性设置的组件更改通知的所有类。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-690">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to notify all classes that want to be notified when the property set of a component changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.Assembly" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (System.Reflection.Module module);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(class System.Reflection.Module module) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(System::Reflection::Module ^ module);" />
      <MemberSignature Language="F#" Value="static member Refresh : System.Reflection.Module -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh module" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="module" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="module">
          <span data-ttu-id="cf3a8-691">表示要刷新的模块的 <see cref="T:System.Reflection.Module" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-691">The <see cref="T:System.Reflection.Module" /> that represents the module to refresh.</span>
          </span>
          <span data-ttu-id="cf3a8-692">将刷新模块中的每个 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-692">Each <see cref="T:System.Type" /> in this module will be refreshed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-693">从缓存中清除指定模块的属性和事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-693">Clears the properties and events for the specified module from the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-694">通过缓存属性和事件<xref:System.ComponentModel.TypeDescriptor>的速度。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-694">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="cf3a8-695">通常情况下，它们是常量对象的生存期内。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-695">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="cf3a8-696">但是，扩展程序提供程序和设计器可以更改对象上的属性的集。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-696">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="cf3a8-697">如果他们这样做，它们可以调用此方法以清除该对象的属性和事件描述符。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-697">If they do, they can call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="cf3a8-698">此方法仅在设计时使用。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-698">This method is used only at design time.</span></span> <span data-ttu-id="cf3a8-699">在运行时不使用它。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-699">It is not used during run time.</span></span>  
  
 <span data-ttu-id="cf3a8-700">在进行调用之前<xref:System.ComponentModel.TypeDescriptor.Refresh%2A>方法来清除缓存中，你需要调用<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>为特定的模块，以首先缓存信息的方法。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-700">Before you make a call to the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method to clear the cache, you need to call the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method for the specific module to cache the information first.</span></span>  
  
 <span data-ttu-id="cf3a8-701">此方法也会引发<xref:System.ComponentModel.TypeDescriptor.Refreshed>事件来通知想要将属性设置的组件更改通知的所有类。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-701">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to notify all classes that want to be notified when the property set of a component changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.Module" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member Refresh : Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="cf3a8-702">目标组件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-702">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-703">从缓存中清除指定类型的组件的属性和事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-703">Clears the properties and events for the specified type of component from the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-704">仅当没有对象的实例时，请调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-704">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="cf3a8-705">通过缓存属性和事件<xref:System.ComponentModel.TypeDescriptor>的速度。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-705">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="cf3a8-706">通常情况下，它们是常量对象的生存期内。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-706">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="cf3a8-707">但是，扩展程序提供程序和设计器可以更改对象上的属性的集。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-707">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="cf3a8-708">如果他们这样做，它们可以调用此方法以清除该对象的属性和事件描述符。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-708">If they do, they can call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="cf3a8-709">此方法仅在设计时使用。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-709">This method is used only at design time.</span></span> <span data-ttu-id="cf3a8-710">在运行时不使用它。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-710">It is not used during run time.</span></span>  
  
 <span data-ttu-id="cf3a8-711">此方法也会引发<xref:System.ComponentModel.TypeDescriptor.Refreshed>事件的属性或事件的组件更改时。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-711">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when the properties or events of a component change.</span></span> <span data-ttu-id="cf3a8-712">如果没有调用仅将引发此事件<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>或<xref:System.ComponentModel.TypeDescriptor.GetEvents%2A>缓存信息的方法。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-712">This event is only raised if there was a prior call to the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> or <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that cached the information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refreshed">
      <MemberSignature Language="C#" Value="public static event System.ComponentModel.RefreshEventHandler Refreshed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.RefreshEventHandler Refreshed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event Refreshed As RefreshEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::ComponentModel::RefreshEventHandler ^ Refreshed;" />
      <MemberSignature Language="F#" Value="member this.Refreshed : System.ComponentModel.RefreshEventHandler " Usage="member this.Refreshed : System.ComponentModel.RefreshEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.RefreshEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf3a8-713">清除了组件的缓存时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-713">Occurs when the cache for a component is cleared.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-714">有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-714">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf3a8-715">使用此事件的示例，请参阅<xref:System.ComponentModel.RefreshEventHandler>类。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-715">For an example of using this event, see the <xref:System.ComponentModel.RefreshEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAssociation">
      <MemberSignature Language="C#" Value="public static void RemoveAssociation (object primary, object secondary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAssociation(object primary, object secondary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveAssociation (primary As Object, secondary As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveAssociation(System::Object ^ primary, System::Object ^ secondary);" />
      <MemberSignature Language="F#" Value="static member RemoveAssociation : obj * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveAssociation (primary, secondary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primary" Type="System.Object" />
        <Parameter Name="secondary" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="primary">
          <span data-ttu-id="cf3a8-716">主要 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-716">The primary <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <param name="secondary">
          <span data-ttu-id="cf3a8-717">辅助 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-717">The secondary <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-718">删除两个对象之间的关联。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-718">Removes an association between two objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-719"><xref:System.ComponentModel.TypeDescriptor.RemoveAssociation%2A>方法删除由构成的两个对象之间的关联<xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-719">The <xref:System.ComponentModel.TypeDescriptor.RemoveAssociation%2A> method removes an association between two objects formed by the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method.</span></span>  
  
 <span data-ttu-id="cf3a8-720">A<xref:System.WeakReference>用于维护主要和辅助对象之间的关联; 因此，此方法不会影响时终止或通过垃圾回收回收可能是对象。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-720">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either object is finalized or reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-721">两个参数之一或两个参数均为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-721">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="cf3a8-722">对系统资源的完全访问权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-722">for full access to system resources.</span>
          </span>
          <span data-ttu-id="cf3a8-723">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-723">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="cf3a8-724">关联的状态：</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-724">Associated state:</span>
          </span>
        </permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAssociations">
      <MemberSignature Language="C#" Value="public static void RemoveAssociations (object primary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAssociations(object primary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveAssociations (primary As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveAssociations(System::Object ^ primary);" />
      <MemberSignature Language="F#" Value="static member RemoveAssociations : obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveAssociations primary" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primary" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="primary">
          <span data-ttu-id="cf3a8-725">处于关联中的主要 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-725">The primary <see cref="T:System.Object" /> in an association.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-726">删除主要对象的所有关联。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-726">Removes all associations for a primary object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-727"><xref:System.ComponentModel.TypeDescriptor.RemoveAssociations%2A>方法中删除所有关联的主对象和所有辅助对象，通过调用之间<xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-727">The <xref:System.ComponentModel.TypeDescriptor.RemoveAssociations%2A> method removes all associations between a primary object and all of its secondary objects, created by calls to the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method.</span></span>  
  
 <span data-ttu-id="cf3a8-728">A<xref:System.WeakReference>用于维护主要和辅助对象之间的关联; 因此，，此方法不会影响时辅助对象主完成，否则将其通过垃圾回收回收。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-728">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either the primary of secondary objects are finalized or reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-729">
            <paramref name="primary" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-729">
              <paramref name="primary" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="cf3a8-730">对系统资源的完全访问权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-730">for full access to system resources.</span>
          </span>
          <span data-ttu-id="cf3a8-731">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-731">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="cf3a8-732">关联的状态：</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-732">Associated state:</span>
          </span>
        </permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveProvider">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf3a8-733">删除以前添加的类型说明提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-733">Removes a previously added type description provider.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveProvider">
      <MemberSignature Language="C#" Value="public static void RemoveProvider (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProvider(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveProvider (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member RemoveProvider : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProvider (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="cf3a8-734">要移除的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-734">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="cf3a8-735">目标组件的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-735">An instance of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-736">移除以前添加的与指定对象关联的类型说明提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-736">Removes a previously added type description provider that is associated with the specified object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-737">此方法可以删除以前添加的类型说明提供<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>方法。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-737">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method.</span></span> <span data-ttu-id="cf3a8-738">删除一个提供程序会导致<xref:System.ComponentModel.TypeDescriptor.Refreshed>关联的对象引发的事件。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-738">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated object.</span></span>  
  
 <span data-ttu-id="cf3a8-739">使用<xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>方法如果你需要从部分受信任代码调用。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-739">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-740">两个参数之一或两个参数均为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-740">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="cf3a8-741">对系统资源的完全访问权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-741">for full access to system resources.</span>
          </span>
          <span data-ttu-id="cf3a8-742">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-742">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="cf3a8-743">关联的状态：</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-743">Associated state:</span>
          </span>
        </permission>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <Member MemberName="RemoveProvider">
      <MemberSignature Language="C#" Value="public static void RemoveProvider (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProvider(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member RemoveProvider : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProvider (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="cf3a8-744">要移除的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-744">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="cf3a8-745">目标组件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-745">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-746">删除以前添加的与指定类型关联的类型说明提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-746">Removes a previously added type description provider that is associated with the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-747">此方法可以删除以前添加的类型说明提供<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>方法。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-747">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method.</span></span> <span data-ttu-id="cf3a8-748">删除一个提供程序会导致<xref:System.ComponentModel.TypeDescriptor.Refreshed>关联的类型中引发的事件。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-748">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated type.</span></span>  
  
 <span data-ttu-id="cf3a8-749">使用<xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>方法如果你需要从部分受信任代码调用。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-749">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-750">两个参数之一或两个参数均为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-750">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="cf3a8-751">对系统资源的完全访问权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-751">for full access to system resources.</span>
          </span>
          <span data-ttu-id="cf3a8-752">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-752">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="cf3a8-753">关联的状态：</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-753">Associated state:</span>
          </span>
        </permission>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveProviderTransparent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf3a8-754">删除以前添加的类型说明提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-754">Removes a previously added type description provider.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveProviderTransparent">
      <MemberSignature Language="C#" Value="public static void RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveProviderTransparent (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member RemoveProviderTransparent : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProviderTransparent (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="cf3a8-755">要移除的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-755">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="cf3a8-756">目标组件的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-756">An instance of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-757">移除以前添加的与指定对象关联的类型说明提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-757">Removes a previously added type description provider that is associated with the specified object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-758">此方法可以删除以前添加的类型说明提供<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>方法。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-758">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method.</span></span> <span data-ttu-id="cf3a8-759">删除一个提供程序会导致<xref:System.ComponentModel.TypeDescriptor.Refreshed>关联的对象引发的事件。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-759">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated object.</span></span>  
  
 <span data-ttu-id="cf3a8-760">可从部分受信任的代码调用此方法。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-760">This method can be called from partially trusted code.</span></span> <span data-ttu-id="cf3a8-761">如果<xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess>是定义，调用方可以注册的提供程序的指定实例如果其类型也为部分受信任。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-761">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</span></span>  
  
 <span data-ttu-id="cf3a8-762">使用<xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>如果不需要从部分受信任代码调用的方法。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-762">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-763">两个参数之一或两个参数均为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-763">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission">
          <span data-ttu-id="cf3a8-764">用于注册表访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-764">For registry access.</span>
          </span>
          <span data-ttu-id="cf3a8-765">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-765">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="cf3a8-766">关联的枚举： <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-766">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          </span>
        </permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet">
          <span data-ttu-id="cf3a8-767">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-767">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="cf3a8-768">关联的类型：<see cref="T:System.Security.PermissionSet" />所需定义的程序集<paramref name="instance" />参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-768">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines the <paramref name="instance" /> parameter's type.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="RemoveProviderTransparent">
      <MemberSignature Language="C#" Value="public static void RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member RemoveProviderTransparent : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProviderTransparent (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="cf3a8-769">要移除的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-769">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="cf3a8-770">目标组件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-770">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-771">删除以前添加的与指定类型关联的类型说明提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-771">Removes a previously added type description provider that is associated with the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf3a8-772">此方法可以删除以前添加的类型说明提供<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>方法。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-772">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method.</span></span> <span data-ttu-id="cf3a8-773">删除一个提供程序会导致<xref:System.ComponentModel.TypeDescriptor.Refreshed>关联的类型中引发的事件。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-773">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated type.</span></span>  
  
 <span data-ttu-id="cf3a8-774">可从部分受信任的代码调用此方法。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-774">This method can be called from partially trusted code.</span></span> <span data-ttu-id="cf3a8-775">如果<xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess>是定义，调用方可以取消注册的提供程序的指定类型是否也部分受信任。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-775">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can unregister a provider for the specified type if it is also partially trusted.</span></span>  
  
 <span data-ttu-id="cf3a8-776">使用<xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>如果不需要从部分受信任代码调用的方法。</span><span class="sxs-lookup"><span data-stu-id="cf3a8-776">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-777">两个参数之一或两个参数均为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-777">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission">
          <span data-ttu-id="cf3a8-778">用于注册表访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-778">For registry access.</span>
          </span>
          <span data-ttu-id="cf3a8-779">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-779">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="cf3a8-780">关联的枚举： <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-780">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          </span>
        </permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet">
          <span data-ttu-id="cf3a8-781">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-781">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="cf3a8-782">关联的类型：<see cref="T:System.Security.PermissionSet" />所需定义的程序集<paramref name="type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-782">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines <paramref name="type" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SortDescriptorArray">
      <MemberSignature Language="C#" Value="public static void SortDescriptorArray (System.Collections.IList infos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SortDescriptorArray(class System.Collections.IList infos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SortDescriptorArray (infos As IList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SortDescriptorArray(System::Collections::IList ^ infos);" />
      <MemberSignature Language="F#" Value="static member SortDescriptorArray : System.Collections.IList -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.SortDescriptorArray infos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="infos" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="infos">
          <span data-ttu-id="cf3a8-783">一个 <see cref="T:System.Collections.IList" />，包含要排序的说明符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-783">An <see cref="T:System.Collections.IList" /> that contains the descriptors to sort.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf3a8-784">使用描述符的名称对描述符排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-784">Sorts descriptors using the name of the descriptor.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf3a8-785">
            <paramref name="infos" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf3a8-785">
              <paramref name="infos" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.Refresh" />
      </Docs>
    </Member>
  </Members>
</Type>