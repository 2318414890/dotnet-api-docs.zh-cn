<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UriTemplateTable.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b729bfbbeac3ac9481879e51ac1eed6abc1f0cfb6ec.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9bfbbeac3ac9481879e51ac1eed6abc1f0cfb6ec</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.UriTemplateTable">
          <source>A class that represents an associative set of <ph id="ph1">&lt;see cref="T:System.UriTemplate" /&gt;</ph> objects.</source>
          <target state="translated">一个表示一组关联 <ph id="ph1">&lt;see cref="T:System.UriTemplate" /&gt;</ph> 对象的类。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UriTemplateTable">
          <source>A <ph id="ph1">&lt;xref:System.UriTemplateTable&gt;</ph> is an associative set of <ph id="ph2">&lt;xref:System.UriTemplate&gt;</ph> objects bound to an object of the developer's choosing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UriTemplateTable&gt;</ph> 是一组绑定到开发人员所选对象的关联 <ph id="ph2">&lt;xref:System.UriTemplate&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UriTemplateTable">
          <source>It allows you to match candidate Uniform Resource Identifiers (URIs) against the templates in the set and retrieve the data associated with the matching templates.</source>
          <target state="translated">您可以通过它将候选统一资源标识符 (URI) 与集合中的模板进行匹配，然后检索与匹配的模板相关联的数据。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UriTemplateTable">
          <source>The contents of <ph id="ph1">&lt;xref:System.UriTemplateTable&gt;</ph> can be changed until the <ph id="ph2">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> method is called, at which time one of following types of validation occurs:</source>
          <target state="translated">在调用 <ph id="ph1">&lt;xref:System.UriTemplateTable&gt;</ph> 方法之前，可以更改 <ph id="ph2">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> 的内容，调用时会发生下列其中一种类型的验证：</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UriTemplateTable">
          <source>When <ph id="ph1">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> is called passing in <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.UriTemplateTable&gt;</ph> checks to make sure the table contains no multiple structurally-equivalent templates.</source>
          <target state="translated">如果在调用 <ph id="ph1">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> 时传入 <ph id="ph2">`false`</ph>，则 <ph id="ph3">&lt;xref:System.UriTemplateTable&gt;</ph> 会检查以确保表中没有多个结构等效的模板。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UriTemplateTable">
          <source>If it finds such templates, it throws an exception.</source>
          <target state="translated">如果找到这样的模板，则会引发异常。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UriTemplateTable">
          <source>This type of validation is used in conjunction with <ph id="ph1">&lt;xref:System.UriTemplateTable.MatchSingle%28System.Uri%29&gt;</ph> when you want to ensure only one template matches an incoming URI.</source>
          <target state="translated">如果想要确保只有一个模板与传入的 URI 匹配，则可将此验证类型与 <ph id="ph1">&lt;xref:System.UriTemplateTable.MatchSingle%28System.Uri%29&gt;</ph> 结合使用。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UriTemplateTable">
          <source>When <ph id="ph1">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> is called passing in <ph id="ph2">`true`</ph>, multiple structurally-equivalent templates can be contained within a <ph id="ph3">&lt;xref:System.UriTemplateTable&gt;</ph>.</source>
          <target state="translated">如果在调用 <ph id="ph1">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> 时传入 <ph id="ph2">`true`</ph>，则 <ph id="ph3">&lt;xref:System.UriTemplateTable&gt;</ph> 中可能包含多个结构等效的模板。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UriTemplateTable">
          <source>However, any query strings in the templates must not be ambiguous; identical query strings are allowed.</source>
          <target state="translated">但是，模板中的所有查询字符串必须无歧义；您可以使用相同的查询字符串。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UriTemplateTable">
          <source>For more information about ambiguous query strings, see <bpt id="p1">[</bpt>UriTemplate and UriTemplateTable<ept id="p1">](~/docs/framework/wcf/feature-details/uritemplate-and-uritemplatetable.md)</ept>.</source>
          <target state="translated">有关歧义查询字符串的详细信息，请参阅<bpt id="p1">[</bpt>UriTemplate 和 UriTemplateTable<ept id="p1">](~/docs/framework/wcf/feature-details/uritemplate-and-uritemplatetable.md)</ept>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UriTemplateTable">
          <source>The following code shows how to create a <ph id="ph1">&lt;xref:System.UriTemplateTable&gt;</ph>, populate it, and use it to match against a candidate <ph id="ph2">&lt;xref:System.Uri&gt;</ph>.</source>
          <target state="translated">下面的代码演示如何创建 <ph id="ph1">&lt;xref:System.UriTemplateTable&gt;</ph>，对其进行填充，并使用它与候选 <ph id="ph2">&lt;xref:System.Uri&gt;</ph> 进行匹配。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.UriTemplateTable">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.UriTemplateTable" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.UriTemplateTable" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.UriTemplateTable.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.UriTemplateTable" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.UriTemplateTable" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriTemplateTable.#ctor">
          <source>The following example shows how to instantiate the <ph id="ph1">&lt;xref:System.UriTemplateTable&gt;</ph> class.</source>
          <target state="translated">下面的示例演示如何实例化 <ph id="ph1">&lt;xref:System.UriTemplateTable&gt;</ph> 类。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.UriTemplateTable.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.UriTemplate,System.Object}})">
          <source>A collection of key/value pairs that consist of URI templates and associated data.</source>
          <target state="translated">一个由 URI 模板和关联数据构成的键/值对集合。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.UriTemplateTable.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.UriTemplate,System.Object}})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.UriTemplateTable" /&gt;</ph> class with the specified collection of key/value pairs.</source>
          <target state="translated">使用指定的键/值对集合初始化 <ph id="ph1">&lt;see cref="T:System.UriTemplateTable" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriTemplateTable.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.UriTemplate,System.Object}})">
          <source>The following example shows how to instantiate the <ph id="ph1">&lt;xref:System.UriTemplateTable&gt;</ph> class.</source>
          <target state="translated">下面的示例演示如何实例化 <ph id="ph1">&lt;xref:System.UriTemplateTable&gt;</ph> 类。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.UriTemplateTable.#ctor(System.Uri)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance that contains the base address.</source>
          <target state="translated">一个包含基址的 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.UriTemplateTable.#ctor(System.Uri)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.UriTemplateTable" /&gt;</ph> class with the specified base address.</source>
          <target state="translated">使用指定的基址初始化 <ph id="ph1">&lt;see cref="T:System.UriTemplateTable" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriTemplateTable.#ctor(System.Uri)">
          <source>The following example shows how to call this constructor.</source>
          <target state="translated">下面的示例演示如何调用此构造函数。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.UriTemplateTable.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.UriTemplate,System.Object}})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance that contains the base address.</source>
          <target state="translated">一个包含基址的 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.UriTemplateTable.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.UriTemplate,System.Object}})">
          <source>A collection of key/value pairs that consist of URI templates and associated data.</source>
          <target state="translated">一个由 URI 模板和关联数据构成的键/值对集合。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.UriTemplateTable.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.UriTemplate,System.Object}})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.UriTemplateTable" /&gt;</ph> class with the specified base address and collection of key/value pairs.</source>
          <target state="translated">使用指定的基址和键/值对集合初始化 <ph id="ph1">&lt;see cref="T:System.UriTemplateTable" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriTemplateTable.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.UriTemplate,System.Object}})">
          <source>The following example shows how to call this constructor.</source>
          <target state="translated">下面的示例演示如何调用此构造函数。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.UriTemplateTable.BaseAddress">
          <source>Gets and sets the base address for the <ph id="ph1">&lt;see cref="T:System.UriTemplateTable" /&gt;</ph> instance.</source>
          <target state="translated">获取和设置 <ph id="ph1">&lt;see cref="T:System.UriTemplateTable" /&gt;</ph> 实例的基址。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.UriTemplateTable.BaseAddress">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the base address.</source>
          <target state="translated">一个包含基址的 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.UriTemplateTable.BaseAddress">
          <source>The <ph id="ph1">&lt;xref:System.UriTemplateTable.BaseAddress%2A&gt;</ph> property can only be set prior to calling <ph id="ph2">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> or <ph id="ph3">&lt;xref:System.UriTemplateTable.Match%28System.Uri%29&gt;</ph> or <ph id="ph4">&lt;xref:System.UriTemplateTable.MatchSingle%28System.Uri%29&gt;</ph> otherwise an <ph id="ph5">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UriTemplateTable.BaseAddress%2A&gt;</ph> 属性仅可以在调用 <ph id="ph2">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph>、<ph id="ph3">&lt;xref:System.UriTemplateTable.Match%28System.Uri%29&gt;</ph> 或 <ph id="ph4">&lt;xref:System.UriTemplateTable.MatchSingle%28System.Uri%29&gt;</ph> 之前设置，否则会引发 <ph id="ph5">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.UriTemplateTable.BaseAddress">
          <source>The following example shows how to access the <ph id="ph1">&lt;xref:System.UriTemplateTable.BaseAddress%2A&gt;</ph> property.</source>
          <target state="translated">下面的示例演示如何访问 <ph id="ph1">&lt;xref:System.UriTemplateTable.BaseAddress%2A&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.UriTemplateTable.IsReadOnly">
          <source>Gets a value that specifies whether the <ph id="ph1">&lt;see cref="T:System.UriTemplateTable" /&gt;</ph> is read only.</source>
          <target state="translated">获取一个值，该值指定 <ph id="ph1">&lt;see cref="T:System.UriTemplateTable" /&gt;</ph> 是否为只读。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.UriTemplateTable.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.UriTemplateTable" /&gt;</ph> property is read only; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.UriTemplateTable" /&gt;</ph> 属性为只读，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.UriTemplateTable.IsReadOnly">
          <source>A <ph id="ph1">&lt;xref:System.UriTemplateTable&gt;</ph> is read only after the <ph id="ph2">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> method is called.</source>
          <target state="translated">调用 <ph id="ph1">&lt;xref:System.UriTemplateTable&gt;</ph> 方法后，<ph id="ph2">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> 为只读。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.UriTemplateTable.IsReadOnly">
          <source>The following example shows how to access the <ph id="ph1">&lt;xref:System.UriTemplateTable.IsReadOnly%2A&gt;</ph> property.</source>
          <target state="translated">下面的示例演示如何访问 <ph id="ph1">&lt;xref:System.UriTemplateTable.IsReadOnly%2A&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.UriTemplateTable.KeyValuePairs">
          <source>Gets a collection of key/value pairs that consist of <ph id="ph1">&lt;see cref="T:System.UriTemplate" /&gt;</ph> objects and their associated data.</source>
          <target state="translated">获取由 <ph id="ph1">&lt;see cref="T:System.UriTemplate" /&gt;</ph> 对象及其关联数据构成的键/值对集合。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.UriTemplateTable.KeyValuePairs">
          <source>A collection of key/value pairs that consist of <ph id="ph1">&lt;see cref="T:System.UriTemplate" /&gt;</ph> objects and their associated data.</source>
          <target state="translated">一个键/值对的集合，由 <ph id="ph1">&lt;see cref="T:System.UriTemplate" /&gt;</ph> 对象及其关联的数据构成。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.UriTemplateTable.KeyValuePairs">
          <source>Each <ph id="ph1">&lt;xref:System.UriTemplate&gt;</ph> instance in the table has data associated with it.</source>
          <target state="translated">表中每个 <ph id="ph1">&lt;xref:System.UriTemplate&gt;</ph> 实例都有与之关联的数据。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.UriTemplateTable.KeyValuePairs">
          <source>The <ph id="ph1">&lt;xref:System.UriTemplateTable.KeyValuePairs%2A&gt;</ph> property contains a collection of key value pairs where the key is a <ph id="ph2">&lt;xref:System.UriTemplate&gt;</ph> instance and the value is the data associated with the <ph id="ph3">&lt;xref:System.UriTemplate&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UriTemplateTable.KeyValuePairs%2A&gt;</ph> 属性包含键值对的集合，其中键是 <ph id="ph2">&lt;xref:System.UriTemplate&gt;</ph> 实例，值是与 <ph id="ph3">&lt;xref:System.UriTemplate&gt;</ph> 关联的数据。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.UriTemplateTable.KeyValuePairs">
          <source>Values can only be added to <ph id="ph1">&lt;xref:System.UriTemplateTable.KeyValuePairs%2A&gt;</ph> property prior to calling <ph id="ph2">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> or <ph id="ph3">&lt;xref:System.UriTemplateTable.Match%28System.Uri%29&gt;</ph> or <ph id="ph4">&lt;xref:System.UriTemplateTable.MatchSingle%28System.Uri%29&gt;</ph> otherwise a <ph id="ph5">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">值仅可以在调用 <ph id="ph1">&lt;xref:System.UriTemplateTable.KeyValuePairs%2A&gt;</ph>、<ph id="ph2">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> 或 <ph id="ph3">&lt;xref:System.UriTemplateTable.Match%28System.Uri%29&gt;</ph> 之前添加到 <ph id="ph4">&lt;xref:System.UriTemplateTable.MatchSingle%28System.Uri%29&gt;</ph> 属性，否则会引发 <ph id="ph5">&lt;xref:System.NotSupportedException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.UriTemplateTable.KeyValuePairs">
          <source>The following example shows how to access the <ph id="ph1">&lt;xref:System.UriTemplateTable.KeyValuePairs%2A&gt;</ph> property.</source>
          <target state="translated">下面的示例演示如何访问 <ph id="ph1">&lt;xref:System.UriTemplateTable.KeyValuePairs%2A&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.UriTemplateTable.MakeReadOnly(System.Boolean)">
          <source>Specifies whether to allow duplicate equivalent <ph id="ph1">&lt;see cref="T:System.UriTemplate" /&gt;</ph> instances in the <ph id="ph2">&lt;see cref="T:System.UriTemplateTable" /&gt;</ph>.</source>
          <target state="translated">指定是否允许 <ph id="ph1">&lt;see cref="T:System.UriTemplate" /&gt;</ph> 中有重复的等效 <ph id="ph2">&lt;see cref="T:System.UriTemplateTable" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.UriTemplateTable.MakeReadOnly(System.Boolean)">
          <source>Makes the <ph id="ph1">&lt;see cref="T:System.UriTemplateTable" /&gt;</ph> read only.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.UriTemplateTable" /&gt;</ph> 设置为只读。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriTemplateTable.MakeReadOnly(System.Boolean)">
          <source>When the <ph id="ph1">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> method is called, one of the following types of validation occurs:</source>
          <target state="translated">调用 <ph id="ph1">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> 方法时，会发生下列其中一种验证类型：</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriTemplateTable.MakeReadOnly(System.Boolean)">
          <source>When <ph id="ph1">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> is called passing in <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.UriTemplateTable&gt;</ph> checks to make sure the table contains no multiple structurally-equivalent templates.</source>
          <target state="translated">如果在调用 <ph id="ph1">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> 时传入 <ph id="ph2">`false`</ph>，则 <ph id="ph3">&lt;xref:System.UriTemplateTable&gt;</ph> 会检查以确保表中没有多个结构等效的模板。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriTemplateTable.MakeReadOnly(System.Boolean)">
          <source>If it finds such templates, an exception is thrown.</source>
          <target state="translated">如果找到这样的模板，则会引发异常。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriTemplateTable.MakeReadOnly(System.Boolean)">
          <source>This type of validation is used in conjunction with <ph id="ph1">&lt;xref:System.UriTemplateTable.MatchSingle%28System.Uri%29&gt;</ph> when you want to ensure only one template matches an incoming URI.</source>
          <target state="translated">如果想要确保只有一个模板与传入的 URI 匹配，则可将此验证类型与 <ph id="ph1">&lt;xref:System.UriTemplateTable.MatchSingle%28System.Uri%29&gt;</ph> 结合使用。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriTemplateTable.MakeReadOnly(System.Boolean)">
          <source>When <ph id="ph1">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> is called passing in <ph id="ph2">`true`</ph>, multiple structurally-equivalent templates can be contained within a <ph id="ph3">&lt;xref:System.UriTemplateTable&gt;</ph>.</source>
          <target state="translated">如果在调用 <ph id="ph1">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> 时传入 <ph id="ph2">`true`</ph>，则 <ph id="ph3">&lt;xref:System.UriTemplateTable&gt;</ph> 中可能包含多个结构等效的模板。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriTemplateTable.MakeReadOnly(System.Boolean)">
          <source>However, any query strings in the templates must not be ambiguous; identical query strings are allowed.</source>
          <target state="translated">但是，模板中的所有查询字符串必须无歧义；您可以使用相同的查询字符串。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriTemplateTable.MakeReadOnly(System.Boolean)">
          <source>This type of validation is used in conjunction with <ph id="ph1">&lt;xref:System.UriTemplateTable.Match%28System.Uri%29&gt;</ph> when multiple template matches are allowed on the candidate URI.</source>
          <target state="translated">如果允许有多个模板与候选 URI 匹配，则可将此验证类型与 <ph id="ph1">&lt;xref:System.UriTemplateTable.Match%28System.Uri%29&gt;</ph> 结合使用。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriTemplateTable.MakeReadOnly(System.Boolean)">
          <source>Only the first call to <ph id="ph1">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> is honored, subsequent calls are ignored without any exception being thrown.</source>
          <target state="translated">系统只接受对 <ph id="ph1">&lt;xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29&gt;</ph> 的首次调用，而会忽略后续调用，且不引发任何异常。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.UriTemplateTable.Match(System.Uri)">
          <source>The candidate URI.</source>
          <target state="translated">候选 URI。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.UriTemplateTable.Match(System.Uri)">
          <source>Attempts to match a candidate <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.UriTemplateTable" /&gt;</ph>.</source>
          <target state="translated">尝试将候选 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 与 <ph id="ph2">&lt;see cref="T:System.UriTemplateTable" /&gt;</ph> 匹配。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.UriTemplateTable.Match(System.Uri)">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.UriTemplateMatch" /&gt;</ph> instances.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.UriTemplateMatch" /&gt;</ph> 实例的集合。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriTemplateTable.Match(System.Uri)">
          <source>This method may return multiple matches.</source>
          <target state="translated">此方法可能会返回多个匹配项。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriTemplateTable.Match(System.Uri)">
          <source>The following example shows how to call the <ph id="ph1">&lt;xref:System.UriTemplateTable.Match%28System.Uri%29&gt;</ph> method.</source>
          <target state="translated">下面的示例演示如何调用 <ph id="ph1">&lt;xref:System.UriTemplateTable.Match%28System.Uri%29&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.UriTemplateTable.MatchSingle(System.Uri)">
          <source>The candidate URI.</source>
          <target state="translated">候选 URI。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.UriTemplateTable.MatchSingle(System.Uri)">
          <source>Attempts to match a candidate <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.UriTemplateTable" /&gt;</ph>.</source>
          <target state="translated">尝试将候选 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 与 <ph id="ph2">&lt;see cref="T:System.UriTemplateTable" /&gt;</ph> 匹配。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.UriTemplateTable.MatchSingle(System.Uri)">
          <source>A single <ph id="ph1">&lt;see cref="T:System.UriTemplateMatch" /&gt;</ph> instance.</source>
          <target state="translated">单个 <ph id="ph1">&lt;see cref="T:System.UriTemplateMatch" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriTemplateTable.MatchSingle(System.Uri)">
          <source>This method returns, at most, one match.</source>
          <target state="translated">此方法最多返回一个匹配项。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriTemplateTable.MatchSingle(System.Uri)">
          <source>If more than one match is found, a <ph id="ph1">&lt;xref:System.UriTemplateMatchException&gt;</ph> is thrown.</source>
          <target state="translated">如果找到多个匹配项，则会引发 <ph id="ph1">&lt;xref:System.UriTemplateMatchException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriTemplateTable.MatchSingle(System.Uri)">
          <source>The following example shows how to call the <ph id="ph1">&lt;xref:System.UriTemplateTable.MatchSingle%28System.Uri%29&gt;</ph> method.</source>
          <target state="translated">下面的示例演示如何调用 <ph id="ph1">&lt;xref:System.UriTemplateTable.MatchSingle%28System.Uri%29&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.UriTemplateTable.OriginalBaseAddress">
          <source>Gets the original base address.</source>
          <target state="translated">获取原始基址。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.UriTemplateTable.OriginalBaseAddress">
          <source>The original base address.</source>
          <target state="translated">原始基址。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>