<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SamlDoNotCacheCondition.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b7269ce1f4b45bc98284699cca86cb834b9c0050e85.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">69ce1f4b45bc98284699cca86cb834b9c0050e85</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition">
          <source>Represents a condition that must be taken into account when assessing the validity of a SAML assertion.</source>
          <target state="translated">表示一个在评估 SAML 断言的有效性时必须考虑的条件。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition">
          <source><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlSecurityToken&gt;</ph> security tokens specify their claims using SAML assertions and a set of conditions that must be taken into account when assessing the validity of the SAML assertion.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlSecurityToken&gt;</ph> 安全令牌使用 SAML 断言以及一组在评估 SAML 断言的有效性时必须考虑的条件来指定其声明。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition&gt;</ph> class represents one of the conditions defined by the SAML specification and it asserts that the SAML assertion must not be cached.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition&gt;</ph> 类表示 SAML 规范所定义的条件之一，它断言不得缓存 SAML 断言。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition">
          <source>To specify this condition for a SAML assertion, add the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition&gt;</ph> class to the collection returned by the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SamlAssertion.Conditions%2A&gt;</ph> property.</source>
          <target state="translated">若要为 SAML 断言指定此条件，请将 <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition&gt;</ph> 类添加到 <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SamlAssertion.Conditions%2A&gt;</ph> 属性所返回的集合中。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition">
          <source>When the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition&gt;</ph> is added as a condition to a <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SamlSecurityToken&gt;</ph> security token that is issued by a security token service for the WCF client, a WCF client does cache the security token.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition&gt;</ph>添加到条件为<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SamlSecurityToken&gt;</ph>由 WCF 客户端，WCF 客户端的安全令牌服务颁发的安全令牌会缓存安全令牌。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition">
          <source>Because the client does not inspect the contents of the issued token, the token is cached.</source>
          <target state="translated">因为该客户端不检查已颁发令牌的内容，所以该令牌会被缓存。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition">
          <source>The client is token agnostic for issued tokens type and processes it the returned issued token as an opaque XML element.</source>
          <target state="translated">该客户端不知道已颁发令牌的类型，并将返回的已颁发令牌作为不透明 XML 元素来处理。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition">
          <source>However, WCF security never caches the received issued token on the service side; it only caches the claims that are extracted from it during the token authentication process.</source>
          <target state="translated">但是，WCF 安全性从不缓存接收已颁发令牌在服务端;它只缓存在令牌身份验证过程中从其提取的声明。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition.IsReadOnly%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">此构造函数将 <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition.IsReadOnly%2A&gt;</ph> 属性初始化为 <ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SamlDoNotCacheCondition.IsReadOnly">
          <source>Gets a value indicating whether the properties of this instance are read-only.</source>
          <target state="translated">获取一个值，该值指示此实例的属性是否是只读的。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SamlDoNotCacheCondition.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the properties of this instance are read-only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果此实例的属性是只读的，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SamlDoNotCacheCondition.IsReadOnly">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SamlDoNotCacheCondition.IsReadOnly">
          <source>To make this instance of the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition&gt;</ph> class read-only, call the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition.MakeReadOnly%2A&gt;</ph> method.</source>
          <target state="translated">若要将 <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition&gt;</ph> 类的此实例设为只读，请调用 <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition.MakeReadOnly%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.MakeReadOnly">
          <source>Causes this instance to be read-only.</source>
          <target state="translated">将此实例设置为只读的。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.MakeReadOnly">
          <source>When the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition.MakeReadOnly%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition.IsReadOnly%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph> and properties of this instance can no longer be set.</source>
          <target state="translated">调用 <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition.MakeReadOnly%2A&gt;</ph> 方法时，<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition.IsReadOnly%2A&gt;</ph> 属性被设置为 <ph id="ph3">`true`</ph>，并且不能再设置此实例的属性。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> to read the <ph id="ph2">&lt;see langword="&amp;lt;saml:DoNotCacheCondition&amp;gt;" /&gt;</ph>.</source>
          <target state="translated">用于读取 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> 的 <ph id="ph2">&lt;see langword="&amp;lt;saml:DoNotCacheCondition&amp;gt;" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSerializer" /&gt;</ph> that is capable of reading XML elements in the SAML authorization statement that is defined in the SAML specification.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSerializer" /&gt;</ph>，它能够读取 SAML 规范中定义的 SAML 授权语句中的 XML 元素。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /&gt;</ph> that reads the <ph id="ph2">&lt;see langword="KeyInfo" /&gt;</ph> clause of the digital signature.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /&gt;</ph>，它读取数字签名的 <ph id="ph2">&lt;see langword="KeyInfo" /&gt;</ph> 子句。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /&gt;</ph> that determines the security token that created the digital signature.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /&gt;</ph>，它确定是哪个安全令牌创建了数字签名。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>Reads the <ph id="ph1">&lt;see langword="&amp;lt;saml:DoNotCacheCondition&amp;gt;" /&gt;</ph> element from the specified XML reader.</source>
          <target state="translated">从指定的 XML 读取器读取 <ph id="ph1">&lt;see langword="&amp;lt;saml:DoNotCacheCondition&amp;gt;" /&gt;</ph> 元素。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition.ReadXml%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Tokens.SamlSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29&gt;</ph> method does note set any properties.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition.ReadXml%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Tokens.SamlSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29&gt;</ph> 方法不设置任何属性。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source><ph id="ph1">&lt;paramref name="samlSerializer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="samlSerializer" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> does not point to a <ph id="ph2">&lt;see langword="&amp;lt;saml:DoNotCacheCondition&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> 不指向 <ph id="ph2">&lt;see langword="&amp;lt;saml:DoNotCacheCondition&amp;gt;" /&gt;</ph> 元素。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> to write the <ph id="ph2">&lt;see langword="&amp;lt;saml:DoNotCacheCondition&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">一个用于写入 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> 元素的 <ph id="ph2">&lt;see langword="&amp;lt;saml:DoNotCacheCondition&amp;gt;" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSerializer" /&gt;</ph> that is capable of writing XML elements in a SAML assertion.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSerializer" /&gt;</ph>，它能够写入 SAML 断言中的 XML 元素。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /&gt;</ph> that is capable of writing <ph id="ph2">&lt;see langword="KeyInfo" /&gt;</ph> clauses.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /&gt;</ph>，它能够写入 <ph id="ph2">&lt;see langword="KeyInfo" /&gt;</ph> 子句。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>Writes the <ph id="ph1">&lt;see langword="&amp;lt;saml:DoNotCacheCondition&amp;gt;" /&gt;</ph> element into the specified XML serializer.</source>
          <target state="translated">将 <ph id="ph1">&lt;see langword="&amp;lt;saml:DoNotCacheCondition&amp;gt;" /&gt;</ph> 元素写入指定的 XML 序列化程序。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>Use the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition.WriteXml%28System.Xml.XmlDictionaryWriter%2CSystem.IdentityModel.Tokens.SamlSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%29&gt;</ph> method to write the current <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition&gt;</ph> instance into a <ph id="ph3">`&lt;saml:DoNotCacheCondition&gt;`</ph> element.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition.WriteXml%28System.Xml.XmlDictionaryWriter%2CSystem.IdentityModel.Tokens.SamlSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%29&gt;</ph> 方法将当前 <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition&gt;</ph> 实例写入 <ph id="ph3">`&lt;saml:DoNotCacheCondition&gt;`</ph> 元素中。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source><ph id="ph1">&lt;paramref name="samlSerializer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="samlSerializer" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>