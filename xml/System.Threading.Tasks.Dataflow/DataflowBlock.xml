<Type Name="DataflowBlock" FullName="System.Threading.Tasks.Dataflow.DataflowBlock">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="363d80c93ed84b3be24a1ccc952c5fc0c4467af3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class DataflowBlock" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataflowBlock extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.DataflowBlock" />
  <TypeSignature Language="VB.NET" Value="Public Module DataflowBlock" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataflowBlock abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c8dd8-101">提供一组用于处理数据流块的静态方法（在 Visual Basic 中为共享方法）。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c8dd8-101">Provides a set of static (Shared in Visual Basic) methods for working with dataflow blocks.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsObservable&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static IObservable&lt;TOutput&gt; AsObservable&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IObservable`1&lt;!!TOutput&gt; AsObservable&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsObservable(Of TOutput) (source As ISourceBlock(Of TOutput)) As IObservable(Of TOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IObservable&lt;TOutput&gt; ^ AsObservable(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IObservable&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="c8dd8-102">指定源中所包含的数据的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-102">Specifies the type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c8dd8-103">要包装的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-103">The source to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8dd8-104">在 <see cref="T:System.IObservable`1" /> 创建新的 <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> 抽象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-104">Creates a new <see cref="T:System.IObservable`1" /> abstraction over the <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8dd8-105">使观察者可以订阅源的 <see cref="T:System.IObservable`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-105">An <see cref="T:System.IObservable`1" /> that enables observers to be subscribed to the source.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c8dd8-106">
            <paramref name="source" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-106">The <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AsObserver&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public static IObserver&lt;TInput&gt; AsObserver&lt;TInput&gt; (this System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IObserver`1&lt;!!TInput&gt; AsObserver&lt;TInput&gt;(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsObserver(Of TInput) (target As ITargetBlock(Of TInput)) As IObserver(Of TInput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IObserver&lt;TInput&gt; ^ AsObserver(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IObserver&lt;TInput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TInput">
          <span data-ttu-id="c8dd8-107">指定由目标块接受的输入类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-107">Specifies the type of input accepted by the target block.</span>
          </span>
        </typeparam>
        <param name="target">
          <span data-ttu-id="c8dd8-108">要包装的目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-108">The target to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8dd8-109">通过 <see cref="T:System.IObserver`1" /> 创建新的 <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> 抽象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-109">Creates a new <see cref="T:System.IObserver`1" /> abstraction over the  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8dd8-110">包装目标块的观察者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-110">An observer that wraps the target block.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Choose&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; Choose&lt;T1,T2&gt; (System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt; source1, Action&lt;T1&gt; action1, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt; source2, Action&lt;T2&gt; action2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; Choose&lt;T1, T2&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T1&gt; source1, class System.Action`1&lt;!!T1&gt; action1, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T2&gt; source2, class System.Action`1&lt;!!T2&gt; action2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function Choose(Of T1, T2) (source1 As ISourceBlock(Of T1), action1 As Action(Of T1), source2 As ISourceBlock(Of T2), action2 As Action(Of T2)) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA; static System::Threading::Tasks::Task&lt;int&gt; ^ Choose(System::Threading::Tasks::Dataflow::ISourceBlock&lt;T1&gt; ^ source1, Action&lt;T1&gt; ^ action1, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T2&gt; ^ source2, Action&lt;T2&gt; ^ action2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt;" />
        <Parameter Name="action1" Type="System.Action&lt;T1&gt;" />
        <Parameter Name="source2" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt;" />
        <Parameter Name="action2" Type="System.Action&lt;T2&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">
          <span data-ttu-id="c8dd8-111">指定第一个源中所包含的数据的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-111">Specifies type of data contained in the first source.</span>
          </span>
        </typeparam>
        <typeparam name="T2">
          <span data-ttu-id="c8dd8-112">指定第二个源中所包含的数据的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-112">Specifies type of data contained in the second source.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="c8dd8-113">第一个源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-113">The first source.</span>
          </span>
        </param>
        <param name="action1">
          <span data-ttu-id="c8dd8-114">在第一个源的数据上执行的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-114">The handler to execute on data from the first source.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="c8dd8-115">第二个源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-115">The second source.</span>
          </span>
        </param>
        <param name="action2">
          <span data-ttu-id="c8dd8-116">在第二个源的数据上执行的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-116">The handler to execute on data from the second source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8dd8-117">监视两种数据流源, 调用出来程序以使无论哪一种源都可首先获得数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-117">Monitors two dataflow sources, invoking the provided handler for whichever source makes data available first.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8dd8-118">一个表示异步选择的 <see cref="T:System.Threading.Tasks.Task`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-118">A  <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous choice.</span>
          </span>
          <span data-ttu-id="c8dd8-119">如果在选择完成之前完成这两个源，则将取消结果任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-119">If both sources are completed prior to the choice completing, the resulting task will be canceled.</span>
          </span>
          <span data-ttu-id="c8dd8-120">如果源的其中之一具有可利用数据并成功传播到选定内容时，则结果任务将在处理程序完成时完成；如果该处理程序引发异常，则该任务将在 <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> 状态下结束并将包含未经处理的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-120">When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and will contain the unhandled exception.</span>
          </span>
          <span data-ttu-id="c8dd8-121">否则，此任务将以其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 设置至 0 或 1 来分别表示第一或第二源结束。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-121">Otherwise, the task will end with its <see cref="P:System.Threading.Tasks.Task`1.Result" /> set to either 0 or 1 to represent the first or second source, respectively.</span>
          </span>
          <span data-ttu-id="c8dd8-122">此方法将只使用来自两个数据源中的一个元素（不会同时使用两个）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-122">This method will only consume an element from one of the two data sources, never both.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c8dd8-123">
            <paramref name="source1" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-123">The <paramref name="source1" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c8dd8-124">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-124">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-125">
            <paramref name="action1" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-125">The  <paramref name="action1" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c8dd8-126">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-126">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-127">
            <paramref name="source2" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-127">The <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c8dd8-128">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-128">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-129">
            <paramref name="action2" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-129">The <paramref name="action2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Choose&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; Choose&lt;T1,T2&gt; (System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt; source1, Action&lt;T1&gt; action1, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt; source2, Action&lt;T2&gt; action2, System.Threading.Tasks.Dataflow.DataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; Choose&lt;T1, T2&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T1&gt; source1, class System.Action`1&lt;!!T1&gt; action1, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T2&gt; source2, class System.Action`1&lt;!!T2&gt; action2, class System.Threading.Tasks.Dataflow.DataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA; static System::Threading::Tasks::Task&lt;int&gt; ^ Choose(System::Threading::Tasks::Dataflow::ISourceBlock&lt;T1&gt; ^ source1, Action&lt;T1&gt; ^ action1, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T2&gt; ^ source2, Action&lt;T2&gt; ^ action2, System::Threading::Tasks::Dataflow::DataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt;" />
        <Parameter Name="action1" Type="System.Action&lt;T1&gt;" />
        <Parameter Name="source2" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt;" />
        <Parameter Name="action2" Type="System.Action&lt;T2&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.DataflowBlockOptions" />
      </Parameters>
      <Docs>
        <typeparam name="T1">
          <span data-ttu-id="c8dd8-130">指定第一个源中所包含的数据的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-130">Specifies type of data contained in the first source.</span>
          </span>
        </typeparam>
        <typeparam name="T2">
          <span data-ttu-id="c8dd8-131">指定第二个源中所包含的数据的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-131">Specifies type of data contained in the second source.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="c8dd8-132">第一个源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-132">The first source.</span>
          </span>
        </param>
        <param name="action1">
          <span data-ttu-id="c8dd8-133">在第一个源的数据上执行的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-133">The handler to execute on data from the first source.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="c8dd8-134">第二个源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-134">The second source.</span>
          </span>
        </param>
        <param name="action2">
          <span data-ttu-id="c8dd8-135">在第二个源的数据上执行的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-135">The handler to execute on data from the second source.</span>
          </span>
        </param>
        <param name="dataflowBlockOptions">
          <span data-ttu-id="c8dd8-136">用来配置此选择的选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-136">The options with which to configure this choice.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8dd8-137">监视两种数据流源, 调用出来程序以使无论哪一种源都可首先获得数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-137">Monitors two dataflow sources, invoking the provided handler for whichever source makes data available first.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8dd8-138">一个表示异步选择的 <see cref="T:System.Threading.Tasks.Task`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-138">A  <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous choice.</span>
          </span>
          <span data-ttu-id="c8dd8-139">如果在选择完成之前完成数据源，或者如果在选择完成之前作为 <see cref="T:System.Threading.CancellationToken" /> 提供作为 <paramref name="dataflowBlockOptions" /> 一部分提供，则取消结果任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-139">If both sources are completed prior to the choice completing, or if the <see cref="T:System.Threading.CancellationToken" /> provided as part of <paramref name="dataflowBlockOptions" /> is canceled prior to the choice completing, the resulting task will be canceled.</span>
          </span>
          <span data-ttu-id="c8dd8-140">如果源的其中之一具有可利用数据并成功传播到选定内容时，则结果任务将在处理程序完成时完成；如果该处理程序引发异常，则该任务将在 <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> 状态下结束并将包含未经处理的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-140">When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and will contain the unhandled exception.</span>
          </span>
          <span data-ttu-id="c8dd8-141">否则，此任务将以其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 设置至 0 或 1 来分别表示第一或第二源结束。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-141">Otherwise, the task will end with its <see cref="P:System.Threading.Tasks.Task`1.Result" /> set to either 0 or 1 to represent the first or second source, respectively.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c8dd8-142">
            <paramref name="source1" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-142">The <paramref name="source1" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c8dd8-143">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-143">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-144">
            <paramref name="action1" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-144">The <paramref name="action1" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c8dd8-145">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-145">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-146">
            <paramref name="source2" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-146">The <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c8dd8-147">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-147">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-148">
            <paramref name="action2" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-148">The <paramref name="action2" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c8dd8-149">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-149">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-150">
            <paramref name="dataflowBlockOptions" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-150">The <paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Choose&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; Choose&lt;T1,T2,T3&gt; (System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt; source1, Action&lt;T1&gt; action1, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt; source2, Action&lt;T2&gt; action2, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T3&gt; source3, Action&lt;T3&gt; action3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; Choose&lt;T1, T2, T3&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T1&gt; source1, class System.Action`1&lt;!!T1&gt; action1, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T2&gt; source2, class System.Action`1&lt;!!T2&gt; action2, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T3&gt; source3, class System.Action`1&lt;!!T3&gt; action3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})" />
      <MemberSignature Language="VB.NET" Value="Public Function Choose(Of T1, T2, T3) (source1 As ISourceBlock(Of T1), action1 As Action(Of T1), source2 As ISourceBlock(Of T2), action2 As Action(Of T2), source3 As ISourceBlock(Of T3), action3 As Action(Of T3)) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA; static System::Threading::Tasks::Task&lt;int&gt; ^ Choose(System::Threading::Tasks::Dataflow::ISourceBlock&lt;T1&gt; ^ source1, Action&lt;T1&gt; ^ action1, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T2&gt; ^ source2, Action&lt;T2&gt; ^ action2, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T3&gt; ^ source3, Action&lt;T3&gt; ^ action3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt;" />
        <Parameter Name="action1" Type="System.Action&lt;T1&gt;" />
        <Parameter Name="source2" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt;" />
        <Parameter Name="action2" Type="System.Action&lt;T2&gt;" />
        <Parameter Name="source3" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T3&gt;" />
        <Parameter Name="action3" Type="System.Action&lt;T3&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">
          <span data-ttu-id="c8dd8-151">指定第一个源中所包含的数据的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-151">Specifies type of data contained in the first source.</span>
          </span>
        </typeparam>
        <typeparam name="T2">
          <span data-ttu-id="c8dd8-152">指定第二个源中所包含的数据的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-152">Specifies type of data contained in the second source.</span>
          </span>
        </typeparam>
        <typeparam name="T3">
          <span data-ttu-id="c8dd8-153">指定第三源中所包含的数据的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-153">Specifies type of data contained in the third source.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="c8dd8-154">第一个源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-154">The first source.</span>
          </span>
        </param>
        <param name="action1">
          <span data-ttu-id="c8dd8-155">在第一个源的数据上执行的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-155">The handler to execute on data from the first source.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="c8dd8-156">第二个源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-156">The second source.</span>
          </span>
        </param>
        <param name="action2">
          <span data-ttu-id="c8dd8-157">在第二个源的数据上执行的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-157">The handler to execute on data from the second source.</span>
          </span>
        </param>
        <param name="source3">
          <span data-ttu-id="c8dd8-158">第三个源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-158">The third source.</span>
          </span>
        </param>
        <param name="action3">
          <span data-ttu-id="c8dd8-159">在第三方源的数据上执行的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-159">The handler to execute on data from the third source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8dd8-160">监视三种数据流源，调用提供处理程序以使无论哪一种源都可以首先获得数据。 </span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-160">Monitors three dataflow sources, invoking the provided handler for whichever source makes data available first.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8dd8-161">一个表示异步选择的 <see cref="T:System.Threading.Tasks.Task`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-161">A  <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous choice.</span>
          </span>
          <span data-ttu-id="c8dd8-162">如果在选择完成之前完成所有源，则将取消结果任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-162">If all sources are completed prior to the choice completing, the resulting task will be canceled.</span>
          </span>
          <span data-ttu-id="c8dd8-163">如果源的其中之一具有可利用数据并成功传播到选定内容时，则结果任务将在处理程序完成时完成；如果该处理程序引发异常，则该任务将在 <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> 状态下结束并将包含未经处理的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-163">When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and will contain the unhandled exception.</span>
          </span>
          <span data-ttu-id="c8dd8-164">否则，此任务将以 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 设置至源的 0-based 索引结束。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-164">Otherwise, the task will end with its <see cref="P:System.Threading.Tasks.Task`1.Result" /> set to the 0-based index of the source.</span>
          </span>
          <span data-ttu-id="c8dd8-165">此方法将只使用来自某个数据源的元素（不会超过一种）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-165">This method will only consume an element from one of the data sources, never more than one.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c8dd8-166">
            <paramref name="source1" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-166">The <paramref name="source1" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c8dd8-167">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-167">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-168">
            <paramref name="action1" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-168">The <paramref name="action1" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c8dd8-169">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-169">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-170">
            <paramref name="source2" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-170">The <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c8dd8-171">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-171">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-172">
            <paramref name="action2" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-172">The <paramref name="action2" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c8dd8-173">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-173">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-174">
            <paramref name="source3" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-174">The <paramref name="source3" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c8dd8-175">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-175">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-176">
            <paramref name="action3" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-176">The <paramref name="action3" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Choose&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; Choose&lt;T1,T2,T3&gt; (System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt; source1, Action&lt;T1&gt; action1, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt; source2, Action&lt;T2&gt; action2, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T3&gt; source3, Action&lt;T3&gt; action3, System.Threading.Tasks.Dataflow.DataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; Choose&lt;T1, T2, T3&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T1&gt; source1, class System.Action`1&lt;!!T1&gt; action1, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T2&gt; source2, class System.Action`1&lt;!!T2&gt; action2, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T3&gt; source3, class System.Action`1&lt;!!T3&gt; action3, class System.Threading.Tasks.Dataflow.DataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA; static System::Threading::Tasks::Task&lt;int&gt; ^ Choose(System::Threading::Tasks::Dataflow::ISourceBlock&lt;T1&gt; ^ source1, Action&lt;T1&gt; ^ action1, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T2&gt; ^ source2, Action&lt;T2&gt; ^ action2, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T3&gt; ^ source3, Action&lt;T3&gt; ^ action3, System::Threading::Tasks::Dataflow::DataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt;" />
        <Parameter Name="action1" Type="System.Action&lt;T1&gt;" />
        <Parameter Name="source2" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt;" />
        <Parameter Name="action2" Type="System.Action&lt;T2&gt;" />
        <Parameter Name="source3" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T3&gt;" />
        <Parameter Name="action3" Type="System.Action&lt;T3&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.DataflowBlockOptions" />
      </Parameters>
      <Docs>
        <typeparam name="T1">
          <span data-ttu-id="c8dd8-177">指定第一个源中所包含的数据的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-177">Specifies type of data contained in the first source.</span>
          </span>
        </typeparam>
        <typeparam name="T2">
          <span data-ttu-id="c8dd8-178">指定第二个源中所包含的数据的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-178">Specifies type of data contained in the second source.</span>
          </span>
        </typeparam>
        <typeparam name="T3">
          <span data-ttu-id="c8dd8-179">指定第三源中所包含的数据的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-179">Specifies type of data contained in the third source.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="c8dd8-180">第一个源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-180">The first source.</span>
          </span>
        </param>
        <param name="action1">
          <span data-ttu-id="c8dd8-181">在第一个源的数据上执行的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-181">The handler to execute on data from the first source.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="c8dd8-182">第二个源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-182">The second source.</span>
          </span>
        </param>
        <param name="action2">
          <span data-ttu-id="c8dd8-183">在第二个源的数据上执行的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-183">The handler to execute on data from the second source.</span>
          </span>
        </param>
        <param name="source3">
          <span data-ttu-id="c8dd8-184">第三个源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-184">The third source.</span>
          </span>
        </param>
        <param name="action3">
          <span data-ttu-id="c8dd8-185">在第三方源的数据上执行的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-185">The handler to execute on data from the third source.</span>
          </span>
        </param>
        <param name="dataflowBlockOptions">
          <span data-ttu-id="c8dd8-186">用来配置此选择的选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-186">The options with which to configure this choice.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8dd8-187">监视三种数据流源，调用提供处理程序以使无论哪一种源都可以首先获得数据。 </span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-187">Monitors three dataflow sources, invoking the provided handler for whichever source makes data available first.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8dd8-188">一个表示异步选择的 <see cref="T:System.Threading.Tasks.Task`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-188">A  <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous choice.</span>
          </span>
          <span data-ttu-id="c8dd8-189">如果在选择完成之前完成所有数据源，或者如果在选择完成之前作为 <see cref="T:System.Threading.CancellationToken" /> 提供作为 <paramref name="dataflowBlockOptions" /> 一部分提供，则取消结果任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-189">If all sources are completed prior to the choice completing, or if the <see cref="T:System.Threading.CancellationToken" /> provided as part of <paramref name="dataflowBlockOptions" /> is canceled prior to the choice completing, the resulting task will be canceled.</span>
          </span>
          <span data-ttu-id="c8dd8-190">如果源的其中之一具有可利用数据并成功传播到选定内容时，则结果任务将在处理程序完成时完成；如果该处理程序引发异常，则该任务将在 <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> 状态下结束并将包含未经处理的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-190">When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and will contain the unhandled exception.</span>
          </span>
          <span data-ttu-id="c8dd8-191">否则，此任务将以 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 设置至源的 0-based 索引结束。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-191">Otherwise, the task will end with its <see cref="P:System.Threading.Tasks.Task`1.Result" /> set to the 0-based index of the source.</span>
          </span>
          <span data-ttu-id="c8dd8-192">此方法将只使用来自某个数据源的元素（不会超过一种）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-192">This method will only consume an element from one of the data sources, never more than one.</span>
          </span>
          <span data-ttu-id="c8dd8-193">如果在接收元素后请求取消，则该取消请求将被忽略并且相关的处理程序将被允许执行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-193">If cancellation is requested after an element has been received, the cancellation request will be ignored, and the relevant handler will be allowed to execute.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c8dd8-194">
            <paramref name="source1" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-194">The <paramref name="source1" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c8dd8-195">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-195">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-196">
            <paramref name="action1" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-196">The <paramref name="action1" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c8dd8-197">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-197">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-198">
            <paramref name="source2" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-198">The <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c8dd8-199">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-199">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-200">
            <paramref name="action2" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-200">The <paramref name="action2" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c8dd8-201">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-201">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-202">
            <paramref name="source3" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-202">The <paramref name="source3" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c8dd8-203">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-203">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-204">
            <paramref name="action3" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-204">The <paramref name="action3" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c8dd8-205">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-205">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-206">
            <paramref name="dataflowBlockOptions" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-206">The <paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Encapsulate&lt;TInput,TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Dataflow.IPropagatorBlock&lt;TInput,TOutput&gt; Encapsulate&lt;TInput,TOutput&gt; (System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; target, System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Dataflow.IPropagatorBlock`2&lt;!!TInput, !!TOutput&gt; Encapsulate&lt;TInput, TOutput&gt;(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; target, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function Encapsulate(Of TInput, TOutput) (target As ITargetBlock(Of TInput), source As ISourceBlock(Of TOutput)) As IPropagatorBlock(Of TInput, TOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput, typename TOutput&gt;&#xA; static System::Threading::Tasks::Dataflow::IPropagatorBlock&lt;TInput, TOutput&gt; ^ Encapsulate(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ target, System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Dataflow.IPropagatorBlock&lt;TInput,TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" />
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TInput">
          <span data-ttu-id="c8dd8-207">指定由目标块接受的应输入的输入类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-207">Specifies the type of input expected by the target.</span>
          </span>
        </typeparam>
        <typeparam name="TOutput">
          <span data-ttu-id="c8dd8-208">指定由源产生的输出的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-208">Specifies the type of output produced by the source.</span>
          </span>
        </typeparam>
        <param name="target">
          <span data-ttu-id="c8dd8-209">要封装的目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-209">The target to encapsulate.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="c8dd8-210">要封装的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-210">The source to encapsulate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8dd8-211">将目标和源封装入单一的传播程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-211">Encapsulates a target and a source into a single propagator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8dd8-212">封装的目标和源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-212">The encapsulated target and source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8dd8-213"><xref:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate%2A>方法需要两个现有块： 目标块 (实现的类的实例<xref:System.Threading.Tasks.Dataflow.ITargetBlock%601>) 和源块 (实现的类的实例<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601>)。</span><span class="sxs-lookup"><span data-stu-id="c8dd8-213">The <xref:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate%2A> method requires two existing blocks: a target block (an instance of a class that implements <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601>) and a source block (an instance of a class that implements <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601>).</span></span> <span data-ttu-id="c8dd8-214"><xref:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate%2A> 创建连接的内部类的新实例<xref:System.Threading.Tasks.Dataflow.ITargetBlock%601>接口成员`target`参数和<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601>接口成员`source`参数。</span><span class="sxs-lookup"><span data-stu-id="c8dd8-214"><xref:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate%2A> creates a new instance of an internal class that connects the <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> interface members to the `target` parameter and the <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> interface members to the `source` parameter.</span></span>  <span data-ttu-id="c8dd8-215">同时<xref:System.Threading.Tasks.Dataflow.ITargetBlock%601>和<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601>派生自<xref:System.Threading.Tasks.Dataflow.IDataflowBlock>。</span><span class="sxs-lookup"><span data-stu-id="c8dd8-215">Both <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> and <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> derive from <xref:System.Threading.Tasks.Dataflow.IDataflowBlock>.</span></span> <span data-ttu-id="c8dd8-216">块完成被显式传递从源到目标。</span><span class="sxs-lookup"><span data-stu-id="c8dd8-216">Block completion is explicitly passed from sources to targets.</span></span> <span data-ttu-id="c8dd8-217">因此，<xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete%2A>和<xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A>方法连接到目标时<xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A>属性连接到源。</span><span class="sxs-lookup"><span data-stu-id="c8dd8-217">Therefore, the <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete%2A> and <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> methods are connected to the target while the <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A> property is connected to the source.</span></span>  <span data-ttu-id="c8dd8-218">你必须确保当一半完成后的目标一半获取已完成的最合适的方式; 的源例如：</span><span class="sxs-lookup"><span data-stu-id="c8dd8-218">You must ensure that when the target half  completes, the source half gets completed in the most appropriate manner; for example:</span></span>  
  
 `target.Completion.ContinueWith(completion => source.Complete());`  
  
 <span data-ttu-id="c8dd8-219">或者，如果你想要传播完成类型，则可以使用此更复杂的代码：</span><span class="sxs-lookup"><span data-stu-id="c8dd8-219">Or, if you want to propagate the completion type, you can use this more sophisticated code:</span></span>  
  
```  
target.Completion.ContinueWith(completion => { if (completion.IsFaulted) 3   
  
((IDataflowBlock)batchBlock).Fault(completion.Exception);   
else   
batchBlock.Complete();   
});  
  
```  
  
 <span data-ttu-id="c8dd8-220">你还可以显式必须提供从目标到源的消息传播。</span><span class="sxs-lookup"><span data-stu-id="c8dd8-220">You must also explicitly provide the message propagation from target to source.</span></span> <span data-ttu-id="c8dd8-221">此显式连接的好处是，它使您可以自由地执行两个封装块之间的任何不受约束的处理。</span><span class="sxs-lookup"><span data-stu-id="c8dd8-221">The benefit of this explicit connection is that it gives you the freedom to perform any unconstrained processing between the two encapsulated blocks.</span></span> <span data-ttu-id="c8dd8-222">你可能会执行该操作通过编码 （如果块接受委托） 的块的委托，到必要的处理或通过嵌入它们之间的块的子网络。</span><span class="sxs-lookup"><span data-stu-id="c8dd8-222">You may do that either by encoding the necessary processing into the blocks' delegates (if the blocks take delegates), or by embedding a sub-network of blocks between them.</span></span> <span data-ttu-id="c8dd8-223">更方便的方法是使用一个块，它采用委托;例如，使用<xref:System.Threading.Tasks.Dataflow.ActionBlock%601>， <xref:System.Threading.Tasks.Dataflow.TransformBlock%602>， <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602> （如果适用），或自定义块。</span><span class="sxs-lookup"><span data-stu-id="c8dd8-223">The easier way is to use a block that takes delegates; for example, use <xref:System.Threading.Tasks.Dataflow.ActionBlock%601>, <xref:System.Threading.Tasks.Dataflow.TransformBlock%602>, <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602> (if applicable), or a custom block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkTo&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static IDisposable LinkTo&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable LinkTo&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TOutput&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LinkTo(Of TOutput) (source As ISourceBlock(Of TOutput), target As ITargetBlock(Of TOutput)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IDisposable ^ LinkTo(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="c8dd8-224">指定源中所包含的数据的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-224">Specifies the type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c8dd8-225">链接的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-225">The source from which to link.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="c8dd8-226">该源连接到的 <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-226">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to which to connect the source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8dd8-227">将 <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> 链接到指定的 <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-227">Links the <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> to the specified  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8dd8-228">根据调用 <see langword="Dispose" /> 将取消与目标中源的链接的 <see cref="T:System.IDisposable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-228">An <see cref="T:System.IDisposable" /> that, upon calling <see langword="Dispose" />, will unlink the source from the target.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c8dd8-229">
            <paramref name="source" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-229">The <paramref name="source" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c8dd8-230">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-230">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-231">
            <paramref name="target" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-231">The <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LinkTo&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static IDisposable LinkTo&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt; target, Predicate&lt;TOutput&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable LinkTo&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TOutput&gt; target, class System.Predicate`1&lt;!!TOutput&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LinkTo(Of TOutput) (source As ISourceBlock(Of TOutput), target As ITargetBlock(Of TOutput), predicate As Predicate(Of TOutput)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IDisposable ^ LinkTo(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target, Predicate&lt;TOutput&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
        <Parameter Name="predicate" Type="System.Predicate&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="c8dd8-232">指定源中所包含的数据的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-232">Specifies the type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c8dd8-233">链接的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-233">The source from which to link.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="c8dd8-234">要将此源连接到的 <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-234">The  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to which to connect the source.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="c8dd8-235">在从源传播到目标的过程中消息必须有序通过筛选器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-235">The filter a message must pass in order for it to propagate from the source to the target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8dd8-236">用指定的筛选器将 <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> 链接到指定的 <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-236">Links the <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> to the specified  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> using the specified filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8dd8-237">根据调用 <see langword="Dispose" /> 将取消与目标中源的链接的 <see cref="T:System.IDisposable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-237">An <see cref="T:System.IDisposable" /> that, upon calling <see langword="Dispose" />, will unlink the source from the target.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c8dd8-238">
            <paramref name="source" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-238">The <paramref name="source" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c8dd8-239">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-239">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-240">
            <paramref name="target" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-240">The <paramref name="target" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c8dd8-241">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-241">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-242">
            <paramref name="predicate" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-242">The <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LinkTo&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static IDisposable LinkTo&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt; target, System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions, Predicate&lt;TOutput&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable LinkTo&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TOutput&gt; target, class System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions, class System.Predicate`1&lt;!!TOutput&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LinkTo(Of TOutput) (source As ISourceBlock(Of TOutput), target As ITargetBlock(Of TOutput), linkOptions As DataflowLinkOptions, predicate As Predicate(Of TOutput)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IDisposable ^ LinkTo(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target, System::Threading::Tasks::Dataflow::DataflowLinkOptions ^ linkOptions, Predicate&lt;TOutput&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
        <Parameter Name="linkOptions" Type="System.Threading.Tasks.Dataflow.DataflowLinkOptions" />
        <Parameter Name="predicate" Type="System.Predicate&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="c8dd8-243">指定源中所包含的数据的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-243">Specifies the type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c8dd8-244">链接的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-244">The source from which to link.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="c8dd8-245">要将此源连接到的 <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-245">The  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to which to connect the source.</span>
          </span>
        </param>
        <param name="linkOptions">
          <span data-ttu-id="c8dd8-246">一个枚举值指定如何计算数据流块之间的链接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-246">One of the enumeration values that specifies how to configure a link between dataflow blocks.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="c8dd8-247">在从源传播到目标的过程中消息必须有序通过筛选器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-247">The filter a message must pass in order for it to propagate from the source to the target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8dd8-248">用指定的筛选器将 <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> 链接到指定的 <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-248">Links the  <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> to the specified  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> using the specified filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8dd8-249">根据调用 <see langword="Dispose" /> 将取消与目标中源的链接的 <see cref="T:System.IDisposable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-249">An <see cref="T:System.IDisposable" /> that, upon calling <see langword="Dispose" />, will unlink the source from the target.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c8dd8-250">
            <paramref name="source" /> 是 null（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-250">The  <paramref name="source" /> is null (Nothing in Visual Basic).</span>
          </span>
          <span data-ttu-id="c8dd8-251">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-251">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-252">
            <paramref name="target" /> 是 null（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-252">The  <paramref name="target" /> is null (Nothing in Visual Basic).</span>
          </span>
          <span data-ttu-id="c8dd8-253">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-253">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-254">
            <paramref name="linkOptions" /> 是 null（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-254">The  <paramref name="linkOptions" /> is null (Nothing in Visual Basic).</span>
          </span>
          <span data-ttu-id="c8dd8-255">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-255">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-256">
            <paramref name="predicate" /> 是 null（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-256">The  <paramref name="predicate" /> is null (Nothing in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NullTarget&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; NullTarget&lt;TInput&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; NullTarget&lt;TInput&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.NullTarget``1" />
      <MemberSignature Language="VB.NET" Value="Public Function NullTarget(Of TInput) () As ITargetBlock(Of TInput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput&gt;&#xA; static System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ NullTarget();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TInput">
          <span data-ttu-id="c8dd8-257">该块可以接受消息的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-257">The type of the messages this block can accept.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="c8dd8-258">获取目标块，此目标块能同步接收为其提供的所有信息并放置它们。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-258">Gets a target block that synchronously accepts all messages offered to it and drops them.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8dd8-259">
            <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> 接受并后续放置所有提供的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-259">A <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> that accepts and subsequently drops all offered messages.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputAvailableAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; OutputAvailableAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; OutputAvailableAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OutputAvailableAsync(Of TOutput) (source As ISourceBlock(Of TOutput)) As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;bool&gt; ^ OutputAvailableAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="c8dd8-260">指定源中所包含的数据的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-260">Specifies the type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c8dd8-261">对监视的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-261">The source to monitor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8dd8-262">提供可异步监视可利用的输出的源的 <see cref="T:System.Threading.Tasks.Task`1" /> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-262">Provides a <see cref="T:System.Threading.Tasks.Task`1" /> that asynchronously monitors the source for available output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8dd8-263">
            <see cref="T:System.Threading.Tasks.Task`1" /> 通知多个输出是否可用和何时可用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-263">A <see cref="T:System.Threading.Tasks.Task`1" /> that informs of whether and when more output is available.</span>
          </span>
          <span data-ttu-id="c8dd8-264">如果在任务完成时，它的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 是 <see langword="true" />，更多输出在源处是可用的 (尽管源的另一个使用者可能检索数据)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-264">If, when the task completes, its <see cref="P:System.Threading.Tasks.Task`1.Result" /> is <see langword="true" />, more output is available in the source (though another consumer of the source may retrieve the data).</span>
          </span>
          <span data-ttu-id="c8dd8-265">如果它返回 <see langword="false" />，则会因为在提供输入之前完成的源而导致更多输出不可用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-265">If it returns <see langword="false" />, more output is not and will never be available, due to the source completing prior to output being available.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputAvailableAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; OutputAvailableAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; OutputAvailableAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;bool&gt; ^ OutputAvailableAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="c8dd8-266">指定源中所包含的数据的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-266">Specifies the type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c8dd8-267">对监视的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-267">The source to monitor.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c8dd8-268">用于取消异步操作的取消标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-268">The cancellation token with which to cancel the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8dd8-269">提供 <see cref="T:System.Threading.Tasks.Task`1" />，用于以异步方式监视可用输出的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-269">Provides a  <see cref="T:System.Threading.Tasks.Task`1" /> that asynchronously monitors the source for available output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8dd8-270">
            <see cref="T:System.Threading.Tasks.Task`1" /> 通知多个输出是否可用和何时可用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-270">A <see cref="T:System.Threading.Tasks.Task`1" /> that informs of whether and when more output is available.</span>
          </span>
          <span data-ttu-id="c8dd8-271">如果在任务完成时，它的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 是 <see langword="true" />，更多输出在源处是可用的 (尽管源的另一个使用者可能检索数据)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-271">If, when the task completes, its <see cref="P:System.Threading.Tasks.Task`1.Result" /> is <see langword="true" />, more output is available in the source (though another consumer of the source may retrieve the data).</span>
          </span>
          <span data-ttu-id="c8dd8-272">如果它返回 <see langword="false" />，则会因为在提供输入之前完成的源而导致更多输出不可用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-272">If it returns <see langword="false" />, more output is not and will never be available, due to the source completing prior to output being available.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Post&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public static bool Post&lt;TInput&gt; (this System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; target, TInput item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Post&lt;TInput&gt;(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; target, !!TInput item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Post(Of TInput) (target As ITargetBlock(Of TInput), item As TInput) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Post(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ target, TInput item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" RefType="this" />
        <Parameter Name="item" Type="TInput" />
      </Parameters>
      <Docs>
        <typeparam name="TInput">
          <span data-ttu-id="c8dd8-273">指定由目标块接受的数据类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-273">Specifies the type of data accepted by the target block.</span>
          </span>
        </typeparam>
        <param name="target">
          <span data-ttu-id="c8dd8-274">目标块。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-274">The target block.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="c8dd8-275">提供给目标的项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-275">The item being offered to the target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8dd8-276">将项发送到 <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-276">Posts an item to the <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8dd8-277">如果项已由目标锁接受，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-277">
              <see langword="true" /> if the item was accepted by the target block; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8dd8-278">此方法将返回后目标块已决定接受或拒绝该项目，但除非否则为由的目标块的特殊语义，它不会等待实际上要处理的项。</span><span class="sxs-lookup"><span data-stu-id="c8dd8-278">This method will return once the target block has decided to accept or decline the item, but unless otherwise dictated by special semantics of the target block, it does not wait for the item to actually be processed.</span></span> <span data-ttu-id="c8dd8-279">例如，<xref:System.Threading.Tasks.Dataflow.ActionBlock%601>将从返回<xref:System.Threading.Tasks.Dataflow.DataflowBlock.Post%2A>一旦它已为其输入队列中存储已发布的项)。</span><span class="sxs-lookup"><span data-stu-id="c8dd8-279">For example, <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> will return from <xref:System.Threading.Tasks.Dataflow.DataflowBlock.Post%2A> as soon as it has stored the posted item into its input queue).</span></span> <span data-ttu-id="c8dd8-280">从块的处理的角度`Post`是异步的。</span><span class="sxs-lookup"><span data-stu-id="c8dd8-280">From the perspective of the block's processing, `Post` is asynchronous.</span></span> <span data-ttu-id="c8dd8-281">目标块提供消息，该支持推迟也可能在中执行更多的处理操作的块其`Post`实现，请考虑使用<xref:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync%2A>，它将立即返回，并将使目标都能推迟所发布的消息和更高版本使用之后`SendAsync`返回。</span><span class="sxs-lookup"><span data-stu-id="c8dd8-281">For target blocks that support postponing offered messages, or for blocks that may do more processing in their `Post` implementation, consider using <xref:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync%2A>, which will return immediately and will enable the target to postpone the posted message and later consume it after `SendAsync` returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Receive&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static TOutput Receive&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TOutput Receive&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Receive(Of TOutput) (source As ISourceBlock(Of TOutput)) As TOutput" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TOutput Receive(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="c8dd8-282">源中包含的数据的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-282">The type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c8dd8-283">从中接收值的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-283">The source from which to receive the value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8dd8-284">同步接收来自指定源的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-284">Synchronously receives a value from a specified source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8dd8-285">接收到的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-285">The received value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c8dd8-286">
            <paramref name="source" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-286">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c8dd8-287">不能从源中接收项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-287">No item could be received from the source.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Receive&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static TOutput Receive&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TOutput Receive&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TOutput Receive(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="c8dd8-288">源中包含的数据的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-288">The type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c8dd8-289">从中接收值的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-289">The source from which to receive the value.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c8dd8-290">用于取消接收操作的标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-290">The token to use to cancel the receive operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8dd8-291">同步从指定的数据源中接收值并提供标记来取消操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-291">Synchronously receives a value from a specified source and provides a token to cancel the operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8dd8-292">接收到的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-292">The received value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8dd8-293">如果成功，源提供收到此操作的项，即使发生并发取消请求，则返回该项。</span><span class="sxs-lookup"><span data-stu-id="c8dd8-293">If the source successfully offered an item that was received by this operation, that item is returned even if a concurrent cancellation request occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c8dd8-294">
            <paramref name="source" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-294">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c8dd8-295">不能从源中接收项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-295">No item could be received from the source.</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="c8dd8-296">在从源接收项目之前被取消的操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-296">The operation was canceled before an item was received from the source.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Receive&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static TOutput Receive&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TOutput Receive&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Receive(Of TOutput) (source As ISourceBlock(Of TOutput), timeout As TimeSpan) As TOutput" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TOutput Receive(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="c8dd8-297">源中包含的数据的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-297">The type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c8dd8-298">从中接收值的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-298">The source from which to receive the value.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="c8dd8-299">等待同步操作完成的最大时间间隔（以毫秒为单位），或表示 -1 毫秒无限期等待的时间间隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-299">The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8dd8-300">同步从指定的数据源中接收值，观察可选的超时期限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-300">Synchronously receives a value from a specified source, observing an optional time-out period.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8dd8-301">接收到的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-301">The received value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8dd8-302">如果成功，源提供收到此操作的项，即使发生并发超时，则返回该项。</span><span class="sxs-lookup"><span data-stu-id="c8dd8-302">If the source successfully offered an item that was received by this operation, that item is returned even if a concurrent time-out occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c8dd8-303">
            <paramref name="timeout" /> 是一个非 -1 毫秒的负数，而 -1 表示无限期超时期限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-303">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out period.</span>
          </span>
          <span data-ttu-id="c8dd8-304">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-304">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-305">
            <paramref name="timeout" /> 大于 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-305">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c8dd8-306">
            <paramref name="source" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-306">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c8dd8-307">不能从源中接收项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-307">No item could be received from the source.</span>
          </span>
        </exception>
        <exception cref="T:System.TimeoutException">
          <span data-ttu-id="c8dd8-308">在从源接收到项之前的指定的超时过期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-308">The specified time-out expired before an item was received from the source.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Receive&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static TOutput Receive&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TOutput Receive&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TOutput Receive(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, TimeSpan timeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="c8dd8-309">源中包含的数据的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-309">The type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c8dd8-310">从中接收值的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-310">The source from which to receive the value.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="c8dd8-311">等待同步操作完成的最大时间间隔（以毫秒为单位），或表示 -1 毫秒无限期等待的时间间隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-311">The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c8dd8-312">用于取消接收操作的标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-312">The token to use to cancel the receive operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8dd8-313">同步从指定的数据源中接收值，提供标记以取消操作并观察可选的超时间隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-313">Synchronously receives a value from a specified source, providing a token to cancel the operation and observing an optional time-out interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8dd8-314">接收到的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-314">The received value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8dd8-315">如果成功，源提供收到此操作的项值，即使发生并发超时错误或取消请求，则返回该值。</span><span class="sxs-lookup"><span data-stu-id="c8dd8-315">If the source successfully offered an item value that was received by this operation, that value is returned even if a concurrent time-out or cancellation request occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c8dd8-316">
            <paramref name="source" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-316">The <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c8dd8-317">
            <paramref name="timeout" /> 是一个非 -1 毫秒的负数，而 -1 表示无限期超时期限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-317">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out period.</span>
          </span>
          <span data-ttu-id="c8dd8-318">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-318">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-319">
            <paramref name="timeout" /> 大于 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-319">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c8dd8-320">不能从源中接收项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-320">No item could be received from the source.</span>
          </span>
        </exception>
        <exception cref="T:System.TimeoutException">
          <span data-ttu-id="c8dd8-321">在从源接收到项之前的指定的超时过期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-321">The specified time-out expired before an item was received from the source.</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="c8dd8-322">在从源接收项目之前被取消的操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-322">The operation was canceled before an item was received from the source.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TOutput&gt; ReceiveAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TOutput&gt; ReceiveAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReceiveAsync(Of TOutput) (source As ISourceBlock(Of TOutput)) As Task(Of TOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TOutput&gt; ^ ReceiveAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="c8dd8-323">源中包含的数据的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-323">The type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c8dd8-324">从中接收值的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-324">The source from which to receive the value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8dd8-325">异步接收来自指定源的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-325">Asynchronously receives a value from a specified source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8dd8-326">表示异步接收操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-326">A task that represents the asynchronous receive operation.</span>
          </span>
          <span data-ttu-id="c8dd8-327">当从源成功检索出项值时，则返回项的任务将完成，并且其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 将返回接收的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-327">When an item value is successfully received from the source, the returned task is completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> returns the received value.</span>
          </span>
          <span data-ttu-id="c8dd8-328">如果因为源为空且已完成而无法检索项值，则返回的任务中会引发 <see cref="T:System.InvalidOperationException" /> 异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-328">If an item value cannot be retrieved because the source is empty and completed , an <see cref="T:System.InvalidOperationException" /> exception is thrown in the returned task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c8dd8-329">
            <paramref name="source" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-329">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TOutput&gt; ReceiveAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TOutput&gt; ReceiveAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TOutput&gt; ^ ReceiveAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="c8dd8-330">指定源中所包含的数据的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-330">Specifies the type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c8dd8-331">从中接收值的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-331">The source from which to receive the value.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c8dd8-332">用于取消接收操作的标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-332">The token to use to cancel the receive operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8dd8-333">异步从指定的数据源中接收值并提供标记来取消操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-333">Asynchronously receives a value from a specified source and provides a token to cancel the operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8dd8-334">表示异步接收操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-334">A task that represents the asynchronous receive operation.</span>
          </span>
          <span data-ttu-id="c8dd8-335">当从源成功检索出值时，则返回项的任务将完成，并且其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 将返回接值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-335">When a value is successfully received from the source, the returned task is completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> returns the value.</span>
          </span>
          <span data-ttu-id="c8dd8-336">如果因为请求了取消而不能检索值，则返回的任务将被取消。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-336">If a value cannot be retrieved because cancellation was requested, the returned task is canceled.</span>
          </span>
          <span data-ttu-id="c8dd8-337">如果因为源为空且已完成而无法检索值，则返回的任务中会引发 <see cref="T:System.InvalidOperationException" /> 异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-337">If the value cannot be retrieved because the source is empty and completed , an <see cref="T:System.InvalidOperationException" /> exception is thrown in the returned task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c8dd8-338">
            <paramref name="source" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-338">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TOutput&gt; ReceiveAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TOutput&gt; ReceiveAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReceiveAsync(Of TOutput) (source As ISourceBlock(Of TOutput), timeout As TimeSpan) As Task(Of TOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TOutput&gt; ^ ReceiveAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="c8dd8-339">源中包含的数据的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-339">The type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c8dd8-340">从中接收值的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-340">The source from which to receive the value.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="c8dd8-341">等待同步操作完成的最大时间间隔（以毫秒为单位），或表示 -1 毫秒无限期等待的时间间隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-341">The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8dd8-342">异步从指定的数据源中接收值，观察可选的超时期限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-342">Asynchronously receives a value from a specified source, observing an optional time-out period.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8dd8-343">表示异步接收操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-343">A task that represents the asynchronous receive operation.</span>
          </span>
          <span data-ttu-id="c8dd8-344">当从源成功检索出值时，则返回项的任务将完成，并且其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 将返回接值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-344">When a value is successfully received from the source, the returned task is completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> returns the value.</span>
          </span>
          <span data-ttu-id="c8dd8-345">如果因为超时已过期而不能检索值，则返回的任务将被取消。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-345">If a value cannot be retrieved because the time-out expired, the returned task is canceled.</span>
          </span>
          <span data-ttu-id="c8dd8-346">如果因为源为空且已完成而无法检索值，则返回的任务中会引发 <see cref="T:System.InvalidOperationException" /> 异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-346">If the value cannot be retrieved because the source is empty and completed , an <see cref="T:System.InvalidOperationException" /> exception is thrown in the returned task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c8dd8-347">
            <paramref name="source" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-347">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c8dd8-348">
            <paramref name="timeout" /> 是一个非 -1 毫秒的负数，而 -1 表示无限期超时期限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-348">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out period.</span>
          </span>
          <span data-ttu-id="c8dd8-349">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-349">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-350">
            <paramref name="timeout" /> 大于 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-350">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TOutput&gt; ReceiveAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TOutput&gt; ReceiveAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TOutput&gt; ^ ReceiveAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, TimeSpan timeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="c8dd8-351">源中包含的数据的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-351">The type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c8dd8-352">从中接收值的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-352">The source from which to receive the value.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="c8dd8-353">等待同步操作完成的最大时间间隔（以毫秒为单位），或表示 -1 毫秒无限期等待的时间间隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-353">The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c8dd8-354">可用于取消接收操作的标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-354">The token which may be used to cancel the receive operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8dd8-355">异步从指定的数据源中接收值，提供标记以取消操作并观察可选的超时间隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-355">Asynchronously receives a value from a specified source, providing a token to cancel the operation and observing an optional time-out interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8dd8-356">表示异步接收操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-356">A task that represents the asynchronous receive operation.</span>
          </span>
          <span data-ttu-id="c8dd8-357">当从源成功检索出值时，则返回项的任务将完成，并且其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 将返回接值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-357">When a value is successfully received from the source, the returned task is completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> returns the value.</span>
          </span>
          <span data-ttu-id="c8dd8-358">如果因为超时已过期或请求了取消而不能检索值，则返回的任务将被取消。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-358">If a value cannot be retrieved because the time-out expired or cancellation was requested, the returned task is canceled.</span>
          </span>
          <span data-ttu-id="c8dd8-359">如果因为源为空且已完成而无法检索值，则返回任务中会引发 <see cref="T:System.InvalidOperationException" /> 异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-359">If the value cannot be retrieved because the source is empty and completed, an <see cref="T:System.InvalidOperationException" /> exception is thrown in the returned task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c8dd8-360">
            <paramref name="source" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-360">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c8dd8-361">
            <paramref name="timeout" /> 是一个非 -1 毫秒的负数，而 -1 表示无限期超时期限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-361">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out period.</span>
          </span>
          <span data-ttu-id="c8dd8-362">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-362">-or-</span>
          </span>
          <span data-ttu-id="c8dd8-363">
            <paramref name="timeout" /> 大于 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-363">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; SendAsync&lt;TInput&gt; (this System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; target, TInput item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; SendAsync&lt;TInput&gt;(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; target, !!TInput item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SendAsync(Of TInput) (target As ITargetBlock(Of TInput), item As TInput) As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;bool&gt; ^ SendAsync(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ target, TInput item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" RefType="this" />
        <Parameter Name="item" Type="TInput" />
      </Parameters>
      <Docs>
        <typeparam name="TInput">
          <span data-ttu-id="c8dd8-364">指定发送到目标的数据类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-364">Specifies the type of the data to post to the target.</span>
          </span>
        </typeparam>
        <param name="target">
          <span data-ttu-id="c8dd8-365">要发送数据的目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-365">The target to which to post the data.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="c8dd8-366">提供给目标的项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-366">The item being offered to the target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8dd8-367">为目标消息块异步提供消息，允许延期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-367">Asynchronously offers a message to the target message block, allowing for postponement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8dd8-368">一个表示异步发送的 <see cref="T:System.Threading.Tasks.Task`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-368">A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous send.</span>
          </span>
          <span data-ttu-id="c8dd8-369">如果目标在调用 <see cref="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)" /> 时接受并使用提供的元素，在调用返回时<see cref="T:System.Threading.Tasks.Task`1" /> 将被完成，并且它的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性将返回 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-369">If the target accepts and consumes the offered element during the call to <see cref="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)" />, upon return from the call the resulting <see cref="T:System.Threading.Tasks.Task`1" /> will be completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will return <see langword="true" />.</span>
          </span>
          <span data-ttu-id="c8dd8-370">如果目标在调用过程中拒绝提供的元素，则在调用返回时 <see cref="T:System.Threading.Tasks.Task`1" /> 将被完成，并且它的<see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性将返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-370">If the target declines the offered element during the call, upon return from the call the resulting <see cref="T:System.Threading.Tasks.Task`1" /> will be completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will return <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c8dd8-371">如果目标将提供的要素推迟，则该要素将被缓存，直到目标使用它或将其释放。此时任务宣告完成，<see cref="P:System.Threading.Tasks.Task`1.Result" /> 表明消息是否被使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-371">If the target postpones the offered element, the element will be buffered until such time that the target consumes or releases it, at which point the task will complete, with its <see cref="P:System.Threading.Tasks.Task`1.Result" /> indicating whether the message was consumed.</span>
          </span>
          <span data-ttu-id="c8dd8-372">如果目标从不尝试使用或释放消息，则返回的任务将无法完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-372">If the target never attempts to consume or release the message, the returned task will never complete.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c8dd8-373">
            <paramref name="target" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-373">The <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; SendAsync&lt;TInput&gt; (this System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; target, TInput item, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; SendAsync&lt;TInput&gt;(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; target, !!TInput item, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;bool&gt; ^ SendAsync(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ target, TInput item, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" RefType="this" />
        <Parameter Name="item" Type="TInput" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TInput">
          <span data-ttu-id="c8dd8-374">指定发送到目标的数据类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-374">Specifies the type of the data to post to the target.</span>
          </span>
        </typeparam>
        <param name="target">
          <span data-ttu-id="c8dd8-375">要发送数据的目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-375">The target to which to post the data.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="c8dd8-376">提供给目标的项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-376">The item being offered to the target.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c8dd8-377">用于请求取消发送操作的取消标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-377">The cancellation token with which to request cancellation of the send operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8dd8-378">为目标消息块异步提供消息，允许延期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-378">Asynchronously offers a message to the target message block, allowing for postponement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8dd8-379">一个表示异步发送的 <see cref="T:System.Threading.Tasks.Task`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-379">A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous send.</span>
          </span>
          <span data-ttu-id="c8dd8-380">如果目标在调用 SendAsync 时接受并使用提供的元素，在调用返回时将完成得到的 <see cref="T:System.Threading.Tasks.Task`1" />，并且它的 <c>Result</c> 属性将返回 true。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-380">If the target accepts and consumes the offered element during the call to SendAsync, upon return from the call the resulting <see cref="T:System.Threading.Tasks.Task`1" /> will be completed and its <c>Result</c> property will return true.</span>
          </span>
          <span data-ttu-id="c8dd8-381">如果目标在调用过程中拒绝提供的元素， 则在调用返回时将完成得到的 <see cref="T:System.Threading.Tasks.Task`1" />，并且其 <c>Result</c> 属性将返回 false 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-381">If the target declines the offered element during the call, upon return from the call the resulting <see cref="T:System.Threading.Tasks.Task`1" /> will be completed and its <c>Result</c> property will return false.</span>
          </span>
          <span data-ttu-id="c8dd8-382">如果目标将提供的要素推迟，则该要素将被缓存，直到目标使用它或将其释放。此时任务宣告完成，<c>Result</c> 表明消息是否被使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-382">If the target postpones the offered element, the element will be buffered until such time that the target consumes or releases it, at which point the Task will complete, with its <c>Result</c> indicating whether the message was consumed.</span>
          </span>
          <span data-ttu-id="c8dd8-383">如果目标从不尝试使用或释放消息，则返回的任务将无法完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-383">If the target never attempts to consume or release the message, the returned task will never complete.</span>
          </span>
          <span data-ttu-id="c8dd8-384">如果在目标成功使用已发送的数据之前取消请求，则返回的任务将在“已取消”状态下完成，并且数据不再对目标可用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-384">If cancellation is requested before the target has successfully consumed the sent data, the returned task will complete in the Canceled state and the data will no longer be available to the target.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c8dd8-385">
            <paramref name="target" /> 是 null（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-385">The  <paramref name="target" /> is null (Nothing in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryReceive&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static bool TryReceive&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;TOutput&gt; source, out TOutput item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryReceive&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&lt;!!TOutput&gt; source, [out] !!TOutput&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryReceive(Of TOutput) (source As IReceivableSourceBlock(Of TOutput), ByRef item As TOutput) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryReceive(System::Threading::Tasks::Dataflow::IReceivableSourceBlock&lt;TOutput&gt; ^ source, [Runtime::InteropServices::Out] TOutput % item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="item" Type="TOutput&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="c8dd8-386">指定源中所包含的数据的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-386">Specifies the type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c8dd8-387">要从中进行接收的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-387">The source from which to receive.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="c8dd8-388">从源中检索到的项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-388">The item received from the source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8dd8-389">尝试从 <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> 中同步接收一个项目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-389">Attempts to synchronously receive an item from the <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8dd8-390">如果可以接收项，则为 <see langword="true" />，否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8dd8-390">
              <see langword="true" /> if an item could be received; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8dd8-391">此方法不会等到源中包含的项提供。</span><span class="sxs-lookup"><span data-stu-id="c8dd8-391">This method does not wait until the source has an item to provide.</span></span>  
  
 <span data-ttu-id="c8dd8-392">它将返回一个元素可用。</span><span class="sxs-lookup"><span data-stu-id="c8dd8-392">It will return whether or not an element was available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>