<Type Name="XamlAccessLevel" FullName="System.Xaml.Permissions.XamlAccessLevel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3b3dfefbdc9f77cb56af28cf69d17376367deb45" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30718531" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlAccessLevel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit XamlAccessLevel extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Permissions.XamlAccessLevel" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlAccessLevel" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlAccessLevel" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>定义对程序集和类型的访问控制以用于 XAML 加载。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 静态方法<xref:System.Xaml.Permissions.XamlAccessLevel>返回的实例<xref:System.Xaml.Permissions.XamlAccessLevel>根据输入。 这是生成的唯一办法<xref:System.Xaml.Permissions.XamlAccessLevel>（构造函数是私有的） 的值。  
  
 <xref:System.Xaml.Permissions.XamlAccessLevel> 通常与结合仅使用<xref:System.Xaml.Permissions.XamlLoadPermission>。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.Permissions.XamlLoadPermission" />
  </Docs>
  <Members>
    <MemberGroup MemberName="AssemblyAccessTo">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>基于程序集返回 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AssemblyAccessTo">
      <MemberSignature Language="C#" Value="public static System.Xaml.Permissions.XamlAccessLevel AssemblyAccessTo (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xaml.Permissions.XamlAccessLevel AssemblyAccessTo(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xaml::Permissions::XamlAccessLevel ^ AssemblyAccessTo(System::Reflection::Assembly ^ assembly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Permissions.XamlAccessLevel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">请求的程序集。</param>
        <summary>基于 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 请求的程序集返回 <see cref="T:System.Reflection.Assembly" /> 实例。</summary>
        <returns>一个用 <paramref name="assembly" /> 值作为 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 的源信息的 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> 实例。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assembly" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="AssemblyAccessTo">
      <MemberSignature Language="C#" Value="public static System.Xaml.Permissions.XamlAccessLevel AssemblyAccessTo (System.Reflection.AssemblyName assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xaml.Permissions.XamlAccessLevel AssemblyAccessTo(class System.Reflection.AssemblyName assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.AssemblyName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xaml::Permissions::XamlAccessLevel ^ AssemblyAccessTo(System::Reflection::AssemblyName ^ assemblyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Permissions.XamlAccessLevel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="assemblyName">请求的程序集名称。</param>
        <summary>基于 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 请求的程序集返回 <see cref="T:System.Reflection.AssemblyName" /> 实例。</summary>
        <returns>一个用 <paramref name="assemblyName" /> 值作为 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 的源信息的 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> 实例。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assemblyName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assemblyName" /> 不是有效的完全限定程序集名称。</exception>
      </Docs>
    </Member>
    <Member MemberName="AssemblyAccessToAssemblyName">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyName AssemblyAccessToAssemblyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.AssemblyName AssemblyAccessToAssemblyName" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyAccessToAssemblyName As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::AssemblyName ^ AssemblyAccessToAssemblyName { System::Reflection::AssemblyName ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取权限由此 <see cref="T:System.Reflection.AssemblyName" /> 来确定的程序集的 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />。</summary>
        <value>权限由此 <see cref="T:System.Reflection.AssemblyName" /> 来确定的程序集的 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xaml.Permissions.XamlLoadPermission" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PrivateAccessTo">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>基于特定类型返回 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PrivateAccessTo">
      <MemberSignature Language="C#" Value="public static System.Xaml.Permissions.XamlAccessLevel PrivateAccessTo (string assemblyQualifiedTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xaml.Permissions.XamlAccessLevel PrivateAccessTo(string assemblyQualifiedTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PrivateAccessTo (assemblyQualifiedTypeName As String) As XamlAccessLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xaml::Permissions::XamlAccessLevel ^ PrivateAccessTo(System::String ^ assemblyQualifiedTypeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Permissions.XamlAccessLevel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyQualifiedTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyQualifiedTypeName">一个作为程序集限定类型名称分析的字符串。</param>
        <summary>基于按限定名称指定的特定类型返回 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 实例。</summary>
        <returns>一个用 <paramref name="assemblyQualifiedTypeName" /> 值作为 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 和 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" />（由对类型的反射来确定）的源信息的 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> 实例。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assemblyQualifiedTypeName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assemblyQualifiedTypeName" /> 不是有效的程序集限定的类型名称。  
  
 或  
  
 <paramref name="assemblyQualifiedTypeName" /> 内的程序集名称不是有效的程序集名称。</exception>
      </Docs>
    </Member>
    <Member MemberName="PrivateAccessTo">
      <MemberSignature Language="C#" Value="public static System.Xaml.Permissions.XamlAccessLevel PrivateAccessTo (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xaml.Permissions.XamlAccessLevel PrivateAccessTo(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xaml::Permissions::XamlAccessLevel ^ PrivateAccessTo(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Permissions.XamlAccessLevel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">请求对其进行访问的 <see cref="T:System.Type" />。</param>
        <summary>基于 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 指定的特定类型返回 <see cref="T:System.Type" /> 实例。</summary>
        <returns>一个用 <paramref name="type" /> 值作为 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 和 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" />（由对类型的反射来确定）的源信息的 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> 实例。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="PrivateAccessToTypeName">
      <MemberSignature Language="C#" Value="public string PrivateAccessToTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrivateAccessToTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrivateAccessToTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PrivateAccessToTypeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取权限由此 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 来确定的类型的非限定字符串名称。</summary>
        <value>权限由此 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 来确定的类型的非限定字符串名称。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xaml.Permissions.XamlLoadPermission" />
      </Docs>
    </Member>
  </Members>
</Type>