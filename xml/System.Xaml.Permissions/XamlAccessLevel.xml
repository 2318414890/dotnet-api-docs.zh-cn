<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlAccessLevel.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53b3dfefbdc9f77cb56af28cf69d17376367deb45.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3b3dfefbdc9f77cb56af28cf69d17376367deb45</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.Permissions.XamlAccessLevel">
          <source>Defines access control to assemblies and types for purposes of XAML loading.</source>
          <target state="translated">定义对程序集和类型的访问控制以用于 XAML 加载。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Permissions.XamlAccessLevel">
          <source>Static methods of <ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlAccessLevel&gt;</ph> return instances of <ph id="ph2">&lt;xref:System.Xaml.Permissions.XamlAccessLevel&gt;</ph>, based on input.</source>
          <target state="translated">静态方法<ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlAccessLevel&gt;</ph>返回的实例<ph id="ph2">&lt;xref:System.Xaml.Permissions.XamlAccessLevel&gt;</ph>根据输入。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Permissions.XamlAccessLevel">
          <source>This is the only way to generate a <ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlAccessLevel&gt;</ph> value (the constructor is private).</source>
          <target state="translated">这是生成的唯一办法<ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlAccessLevel&gt;</ph>（构造函数是私有的） 的值。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Permissions.XamlAccessLevel">
          <source><ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlAccessLevel&gt;</ph> is generally only used in conjunction with <ph id="ph2">&lt;xref:System.Xaml.Permissions.XamlLoadPermission&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlAccessLevel&gt;</ph> 通常与结合仅使用<ph id="ph2">&lt;xref:System.Xaml.Permissions.XamlLoadPermission&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.Xaml.Permissions.XamlAccessLevel">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> instance based on an assembly.</source>
          <target state="translated">基于程序集返回 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.Assembly)">
          <source>The assembly for the request.</source>
          <target state="translated">请求的程序集。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.Assembly)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> instance based on an assembly requested by <ph id="ph2">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>.</source>
          <target state="translated">基于 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> 请求的程序集返回 <ph id="ph2">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.Assembly)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> instance, with the <ph id="ph2">&lt;paramref name="assembly" /&gt;</ph> value used as source information for <ph id="ph3">&lt;see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /&gt;</ph>.</source>
          <target state="translated">一个用 <ph id="ph2">&lt;paramref name="assembly" /&gt;</ph> 值作为 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> 的源信息的 <ph id="ph3">&lt;see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.Assembly)">
          <source><ph id="ph1">&lt;paramref name="assembly" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assembly" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.AssemblyName)">
          <source>The assembly name for the request.</source>
          <target state="translated">请求的程序集名称。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.AssemblyName)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> instance based on an assembly requested by <ph id="ph2">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph>.</source>
          <target state="translated">基于 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> 请求的程序集返回 <ph id="ph2">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.AssemblyName)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> instance, with the <ph id="ph2">&lt;paramref name="assemblyName" /&gt;</ph> value used as source information for <ph id="ph3">&lt;see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /&gt;</ph>.</source>
          <target state="translated">一个用 <ph id="ph2">&lt;paramref name="assemblyName" /&gt;</ph> 值作为 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> 的源信息的 <ph id="ph3">&lt;see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.AssemblyName)">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.AssemblyName)">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> is not a valid fully qualified assembly name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> 不是有效的完全限定程序集名称。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> of the assembly for which this <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> determines permissions.</source>
          <target state="translated">获取权限由此 <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> 来确定的程序集的 <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> of the assembly for which this <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> determines permissions.</source>
          <target state="translated">权限由此 <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> 来确定的程序集的 <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="T:System.Xaml.Permissions.XamlAccessLevel">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> instance based on a specific type.</source>
          <target state="translated">基于特定类型返回 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)">
          <source>A string that is parsed as an assembly-qualified type name.</source>
          <target state="translated">一个作为程序集限定类型名称分析的字符串。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> instance based on a specific type specified by its qualified name.</source>
          <target state="translated">基于按限定名称指定的特定类型返回 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> instance, with the <ph id="ph2">&lt;paramref name="assemblyQualifiedTypeName" /&gt;</ph> value used as source information for <ph id="ph3">&lt;see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /&gt;</ph> determined by reflection on the type.</source>
          <target state="translated">一个用 <ph id="ph2">&lt;paramref name="assemblyQualifiedTypeName" /&gt;</ph> 值作为 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /&gt;</ph>（由对类型的反射来确定）的源信息的 <ph id="ph4">&lt;see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyQualifiedTypeName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyQualifiedTypeName" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyQualifiedTypeName" /&gt;</ph> is not a valid assembly-qualified type name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyQualifiedTypeName" /&gt;</ph> 不是有效的程序集限定的类型名称。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)">
          <source>Assembly name within <ph id="ph1">&lt;paramref name="assemblyQualifiedTypeName" /&gt;</ph> is not a valid assembly name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyQualifiedTypeName" /&gt;</ph> 内的程序集名称不是有效的程序集名称。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to request access for.</source>
          <target state="translated">请求对其进行访问的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.Type)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> instance based on a specific type specified by <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">基于 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> 指定的特定类型返回 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> instance, with the <ph id="ph2">&lt;paramref name="type" /&gt;</ph> value used as source information for <ph id="ph3">&lt;see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /&gt;</ph> determined by reflection on the type.</source>
          <target state="translated">一个用 <ph id="ph2">&lt;paramref name="type" /&gt;</ph> 值作为 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /&gt;</ph>（由对类型的反射来确定）的源信息的 <ph id="ph4">&lt;see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName">
          <source>Gets the unqualified string name of the type for which this <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> determines permissions.</source>
          <target state="translated">获取权限由此 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> 来确定的类型的非限定字符串名称。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName">
          <source>The unqualified string name of the type for which this <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> determines permissions.</source>
          <target state="translated">权限由此 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> 来确定的类型的非限定字符串名称。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>