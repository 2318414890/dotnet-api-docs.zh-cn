<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WorkflowInstance.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5181673212b57e524c54cc9851648ca01d7c1e21c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">181673212b57e524c54cc9851648ca01d7c1e21c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>Represents a workflow instance.</source>
          <target state="translated">表示工作流实例。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> class exposes methods and properties that can be used to control the execution of a workflow instance; it is essentially a proxy to the actual workflow instance used by the workflow runtime engine.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 类可以公开用于控制执行工作流实例的方法和属性，它实质上是工作流运行时引擎所使用的实际工作流的代理。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>A host or a service can instruct the workflow runtime engine to perform actions on a workflow instance by calling the appropriate methods that are contained in the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> class.</source>
          <target state="translated">通过调用包含在 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 类中的适当方法，宿主或服务可以指示工作流运行时引擎在工作流实例上执行操作。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>If the requested action is not valid, for example, if the host calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> on a workflow instance that has already completed, the workflow runtime engine will raise an appropriate exception.</source>
          <target state="translated">如果请求的操作无效，例如，如果宿主在一个已完成的工作流实例上调用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph>，则工作流运行时引擎将引发相应的异常。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>If a workflow instance becomes unresponsive because a call on the host application does not return, the only way to recover the instance is to restart the runtime.</source>
          <target state="translated">如果工作流实例由于宿主应用程序上的调用未返回而无法响应，则恢复此实例的唯一方法是重新启动运行时。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>However, if the instance has been forcibly unloaded, aborted, or suspended, it can be continued by calling the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">但是，如果实例被强行卸载、中止或挂起，则仍可以通过调用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType&gt;</ph> 方法继续此实例。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>The following code example demonstrates how you can create and start a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> in a workflow host.</source>
          <target state="translated">下面的代码示例演示如何在工作流宿主中创建和启动 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>The code creates an instance of the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, adds services to the runtime, and then demonstrates the recommended way to create a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">此代码先创建 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 的实例，将服务添加至运行时，然后演示一个创建 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 对象的推荐方式。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>The code initializes <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> method and passing the previously created type to it.</source>
          <target state="translated">该代码通过调用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 方法并向该方法传递事先创建的类型来初始化 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is started with the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> method call.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 方法调用启动 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</source>
          <target state="translated">此代码示例摘自 Program.cs 文件中的“取消工作流”SDK 示例。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>For more information, see <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>取消工作流<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>This type is thread safe.</source>
          <target state="translated">此类型是线程安全的。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>Aborts the workflow instance.</source>
          <target state="translated">中止工作流实例。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>The workflow instance is aborted in a synchronous manner; that is, the method returns after the workflow instance has been aborted.</source>
          <target state="translated">工作流实例以同步方式中止，即方法在中止工作流实例之后返回。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>The workflow runtime engine invalidates the workflow instance in memory and clears the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</ph>.</source>
          <target state="translated">工作流运行时引擎将使内存中的工作流实例无效，并清除 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>If a persistence service was used by your workflow instance, all work performed since the last persistence point is thrown away.</source>
          <target state="translated">如果工作流实例使用了持久性服务，则在最后一个持久点之后执行的所有工作都将被丢弃。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>After it aborts the workflow instance, the workflow runtime engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph> event.</source>
          <target state="translated">在中止工作流实例之后，工作流运行时引擎将引发 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>You can call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> to reload the workflow instance and start from its last persistence point.</source>
          <target state="translated">您可以调用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> 以便重新加载工作流实例，并从其最后的持久点启动。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source><ph id="ph1">`Abort`</ph> is different from <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> in that while <ph id="ph3">`Abort`</ph> simply clears the in-memory workflow instance and can be restarted from the last persistence point, Terminate clears the in-memory workflow instance and informs the persistence service that the instance has been cleared from memory.</source>
          <target state="translated"><ph id="ph1">`Abort`</ph> 与 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> 的不同之处在于，<ph id="ph3">`Abort`</ph> 只是清除内存中的工作流实例，并可以从最后一个持久点重新启动；而 Terminate 则是清除内存中的工作流实例，并通知持久性服务此实例已从内存中清除。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph>, this means that all state information for that workflow instance is deleted from the database upon termination.</source>
          <target state="translated">对于 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph>，这表示终止时该工作流实例的所有状态信息都已从数据库中删除。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>You will not be able to reload the workflow instance from a previously stored persistence point.</source>
          <target state="translated">您将无法从先前存储的持久点处重新加载工作流实例。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>The following example demonstrates calling Abort on a workflow instance of type Workflow1.</source>
          <target state="translated">下面的示例演示如何在类型为 Workflow1 的工作流实例上调用“Abort”。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">工作流运行时引擎未运行。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /&gt;</ph> specifying dynamic updates for the workflow instance.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /&gt;</ph>，为工作流实例指定动态更新。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>Applies changes to the workflow instance specified by the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /&gt;</ph> object.</source>
          <target state="translated">将更改应用到 <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /&gt;</ph> 对象所指定的工作流实例。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>If the workflow instance is not already suspended, the workflow runtime engine temporarily suspends the instance before applying the changes.</source>
          <target state="translated">如果工作流实例尚未挂起，则工作流运行时引擎将在应用更改之前暂时挂起实例。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>The following example demonstrates calling ApplyWorkflowChanges to a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">下面的代码示例演示如何对 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 对象调用 ApplyWorkflowChanges。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>This example is from the Ordering State Machine SDK sample, from the Mainform.cs file.</source>
          <target state="translated">此代码示例摘自 Mainform.cs 文件中“自定义持久性服务”SDK 示例。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>For more information, see the <bpt id="p1">[</bpt>Ordering State Machine Sample<ept id="p1">](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>排序状态机示例<ept id="p1">](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c)</ept>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">工作流运行时引擎未运行。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> 的名称。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The object to enqueue.</source>
          <target state="translated">要排入队列的对象。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph> that allows the sender to be notified when <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> is delivered.</source>
          <target state="translated">允许在传递 <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> 时通知发送方的 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>An object to be passed to the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph> methods.</source>
          <target state="translated">要传递给 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph> 方法的对象。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>Posts a message to the specified workflow queue synchronously.</source>
          <target state="translated">将消息同步发送到指定工作流队列。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>Sends the <ph id="ph1">`item`</ph> to the specified <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">`item`</ph> 发送到指定的 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>If you want to be notified when the message is delivered, you can implement <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> in your service and pass a <ph id="ph2">`workItem`</ph> and an <ph id="ph3">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> object to <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph>.</source>
          <target state="translated">若要在传递消息之后获得通知，您可以在您的服务中实现 <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph>，并将一个 <ph id="ph2">`workItem`</ph> 和一个 <ph id="ph3">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> 对象传送至 <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>If you do not want such notification, you can pass a null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic) for <ph id="ph2">`pendingWork`</ph> and <ph id="ph3">`workItem`</ph>.</source>
          <target state="translated">如果不想要此类通知，则可以为 <ph id="ph1">`Nothing`</ph> 和 <ph id="ph2">`pendingWork`</ph> 传送空引用（在 Visual Basic 中为 <ph id="ph3">`workItem`</ph>）。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>When using this method with a state machine workflow, you might get an exception with the message "Queue '{0}' is not enabled."</source>
          <target state="translated">在将此方法和状态机工作流一起使用时，您可能会收到异常，并收到消息“未启用队列‘{0}’”。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>This happens when the current state of the state machine does not know how to handle a specific event.</source>
          <target state="translated">当状态机的当前状态不知道如何处理特定事件时，则会发生此异常。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>For example, when some state other than the current state contains the <ph id="ph1">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph> that contains the <ph id="ph2">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;</ph> that is represented by the queue '{0}'.</source>
          <target state="translated">例如，当前状态以外的其他状态包含 <ph id="ph1">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph>，而后者包含由队列“{0}”表示的 <ph id="ph2">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;</ph> 时。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>Messages are not guaranteed to be received by the workflow instance in the order that they were sent.</source>
          <target state="translated">不保证工作流实例按消息发送的顺序接收消息。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>For example, if receiving a message in an existing queue (Queue A) causes a workflow to create another queue (Queue B), which then listens for another message sent after the first message, it is possible that the second message will arrive first, and will not be received due to its queue not being created yet.</source>
          <target state="translated">例如，如果在现有队列（队列 A）中接收消息会导致工作流创建另一个队列（队列 B），该队列随后会侦听在发送第一条消息之后发送的另一条消息，那么，有可能第二条消息会先到达，但由于尚未创建其队列而无法接收。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>To prevent this issue, the second message should not be sent until the presence of the second queue is verified (using <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph>.)</source>
          <target state="translated">为了避免此问题，在发送第二条消息之前，必须先验证第二个队列是否存在（使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph>.</source>
          <target state="translated">下面的代码示例演示如何使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> event occurs, the <ph id="ph2">`OnWorkflowIdled`</ph> method defined in this example is called.</source>
          <target state="translated">当 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> 事件发生时，调用本示例中定义的 <ph id="ph2">`OnWorkflowIdled`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>It determines which workflow is idled using the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A&gt;</ph> property and then gets a collection of queued items for the workflow instance by calling the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> method.</source>
          <target state="translated">该方法使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A&gt;</ph> 属性来确定哪个工作流处于空闲状态，然后通过调用 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> 方法来获取该工作流实例的排队项的集合。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The code iterates over the collection to determine which activity is waiting for the event that idled the workflow.</source>
          <target state="translated">该代码会循环访问该集合以确定哪个活动正在等待使工作流处于空闲状态的事件。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>It then sends an exception to the workflow queue using the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph> method along with the name of the event queue item.</source>
          <target state="translated">然后，该代码将使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph> 方法以及事件队列项的名称向工作流队列发出一个异常。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</source>
          <target state="translated">此代码示例摘自 Program.cs 文件中的“取消工作流”SDK 示例。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>取消工作流<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source><ph id="ph1">&lt;paramref name="queueName" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="queueName" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">工作流运行时引擎未运行。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> specified by <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> does not exist.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> 指定的 <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> 不存在。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> specified by <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> is not enabled.</source>
          <target state="translated">由 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> 指定的 <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> 未启用。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> 的名称。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The object to enqueue.</source>
          <target state="translated">要排入队列的对象。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph> that allows the sender to be notified when <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> is delivered.</source>
          <target state="translated">允许在传递 <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> 时通知发送方的 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>An object to be passed to the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph> methods.</source>
          <target state="translated">要传递给 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph> 方法的对象。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>Posts a message to the specified workflow queue when the workflow is idle.</source>
          <target state="translated">当工作流处于空闲状态时，将消息发送到指定的工作流队列。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" /&gt;</ph> waits until the workflow reaches an idle point and enqueues after verifying that the workflow scheduler is idle (that is, no active operation is being executed).</source>
          <target state="translated">在确认工作流计划程序处于空闲状态（即没有执行任何有效操作）之后，<ph id="ph1">&lt;see cref="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" /&gt;</ph> 将一直等待，直至工作流达到空闲点并编排队列。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>Waits for the workflow instance to become idle and then sends the <ph id="ph1">`item`</ph> to the specified <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>.</source>
          <target state="translated">等待工作流实例变为空闲状态，然后将 <ph id="ph1">`item`</ph> 发送到指定的 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>If you call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle%2A&gt;</ph> while the workflow instance is suspended, the workflow runtime engine will throw an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">如果在工作流实例处于挂起状态时调用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle%2A&gt;</ph>，工作流运行时引擎将引发 <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>If you want to be notified when the message is delivered, you can implement <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> in your service and pass a <ph id="ph2">`workItem`</ph> and an <ph id="ph3">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> object to <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph>.</source>
          <target state="translated">若要在传递消息之后获得通知，您可以在您的服务中实现 <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph>，并将一个 <ph id="ph2">`workItem`</ph> 和一个 <ph id="ph3">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> 对象传送至 <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>If you do not want such notification, you can pass a null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic) for <ph id="ph2">`pendingWork`</ph> and <ph id="ph3">`workItem`</ph>.</source>
          <target state="translated">如果不想要此类通知，则可以为 <ph id="ph1">`Nothing`</ph> 和 <ph id="ph2">`pendingWork`</ph> 传送空引用（在 Visual Basic 中为 <ph id="ph3">`workItem`</ph>）。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>When you are using this method with a state machine workflow, you might get an exception that contains the message "Queue '{0}' is not enabled."</source>
          <target state="translated">在将此方法和状态机工作流一起使用时，您可能会收到异常，并收到消息“未启用队列‘{0}’”。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>This occurs when the current state of the state machine does not know how to handle a specific event.</source>
          <target state="translated">当状态机的当前状态不知道如何处理特定事件时，则会发生此异常。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>For example, when some state other than the current state contains the <ph id="ph1">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph> that contains the <ph id="ph2">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;</ph> that is represented by the queue '{0}'.</source>
          <target state="translated">例如，当前状态以外的其他状态包含 <ph id="ph1">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph>，而后者包含由队列“{0}”表示的 <ph id="ph2">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;</ph> 时。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The following example demonstrates sending information to a workflow instance using the <ph id="ph1">`EnqueueItemOnIdle`</ph> method.</source>
          <target state="translated">下面的示例演示如何使用 <ph id="ph1">`EnqueueItemOnIdle`</ph> 方法将信息发送到工作流实例。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>First, a WorkflowInstance object is created and started; next, an object that implements the <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> interface is created.</source>
          <target state="translated">首先，创建并启动 WorkflowInstance 对象；接着，创建一个实现 <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> 接口的对象。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source><ph id="ph1">`EnqueueItemOnIdle`</ph> is then called, passing in string values for the queue name, the enqueued item, and the work item to be passed to the methods of the pendingWork object.</source>
          <target state="translated"><ph id="ph1">`EnqueueItemOnIdle`</ph> 然后调用中的队列名称、 排队项和要传递给 pendingWork 对象的方法的工作项的字符串值传递。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source><ph id="ph1">&lt;paramref name="queueName" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="queueName" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">工作流运行时引擎未运行。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The workflow instance is suspended.</source>
          <target state="translated">工作流实例处于挂起状态。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> specified by <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> does not exist.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> 指定的 <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> 不存在。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> specified by <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> is not enabled.</source>
          <target state="translated">由 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> 指定的 <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> 未启用。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Equals(System.Object)">
          <source>The object to compare.</source>
          <target state="translated">要比较的对象。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Equals(System.Object)">
          <source>Returns a value that indicates whether the specified object is equal to the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph>.</source>
          <target state="translated">返回一个值，该值指示指定对象是否等于 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified object is equal to this <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定对象等于此 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则为 <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Equals(System.Object)">
          <source>The object must be an instance of the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> class and have the same <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> as this <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>.</source>
          <target state="translated">此对象必须是 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 类的一个实例，并具有与此 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> 相同的 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetHashCode">
          <source>Returns the hash code for this workflow instance.</source>
          <target state="translated">返回此工作流实例的哈希代码。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetHashCode">
          <source>The hash code for this <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph>.</source>
          <target state="translated">此 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> 的哈希代码。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetHashCode">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetHashCode%2A&gt;</ph> returns a hash code based on the value of <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetHashCode%2A&gt;</ph> 返回的哈希代码基于 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>Retrieves the root activity for this workflow instance.</source>
          <target state="translated">检索此工作流实例的根活动。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>An <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> object.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>You can use the root activity to navigate the activity hierarchy of the workflow.</source>
          <target state="translated">您可以使用根活动来定位工作流的活动层次结构。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>This method is not thread safe, so the host should synchronize its calls to this method.</source>
          <target state="translated">此方法不是线程安全的，因此主机应将其调用与此方法同步。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>The following example demonstrates retrieving the workflow definition from a workflow instance.</source>
          <target state="translated">下面的示例演示如何从工作流实例中检索工作流定义。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>This example is from the Ordering State Machine SDK sample, from the Mainform.cs file.</source>
          <target state="translated">此代码示例摘自 Mainform.cs 文件中“自定义持久性服务”SDK 示例。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>For more information, see the <bpt id="p1">[</bpt>Ordering State Machine Sample<ept id="p1">](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>排序状态机示例<ept id="p1">](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c)</ept>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration">
          <source>Returns the next point in time that this <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> is scheduled to be delivered a timer message.</source>
          <target state="translated">返回下一个时间点，已计划在此时间点向此 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> 传递计时器消息。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration">
          <source>A DateTime value that represents the next <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt" /&gt;</ph> time this <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> will be delivered a timer message.</source>
          <target state="translated">DateTime 值表示下一个 <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt" /&gt;</ph> 时间，将在此时间向此 <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> 传递计时器消息。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration">
          <source>The following example demonstrates using the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration%2A&gt;</ph> method to determine if more workflow timer messages are enqueued.</source>
          <target state="translated">下面的示例演示如何使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration%2A&gt;</ph> 方法来确定是否将其他工作流计时器消息编入队列。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration">
          <source>This example is from the WorkflowThreading SDK sample, from the Program.cs file.</source>
          <target state="translated">此示例摘自 Program.cs 文件中的 WorkflowThreading SDK 示例。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration">
          <source>For more information, see <bpt id="p1">[</bpt>Workflow Threading Sample<ept id="p1">](http://msdn.microsoft.com/library/5b650be7-09fa-47db-a2f6-523dc8ea5ee9)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>工作流线程处理示例<ept id="p1">](http://msdn.microsoft.com/library/5b650be7-09fa-47db-a2f6-523dc8ea5ee9)</ept>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>Gets a collection of <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /&gt;</ph> objects that contains the pending items and subscribed activities for the workflow queues associated with this workflow instance.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /&gt;</ph> 对象的集合，该集合包含与此工作流实例关联的工作流队列的挂起项和订阅活动。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> 对象的 <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> returns a collection of <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo&gt;</ph> objects, each of which contains information about the state of one of the workflow queues associated with this workflow instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> 将返回 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo&gt;</ph> 对象的集合，每个集合都包含与此工作流实例关联的其中一个工作流队列状态的有关信息。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=nameWithType&gt;</ph> contains the pending items for a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType&gt;</ph> contains a list of the activities that are subscribed for item delivery on a <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=nameWithType&gt;</ph> 包含 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> 的挂起项，<ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType&gt;</ph> 包含一个活动列表，需要订阅这些活动以便在 <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> 上发送项。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>The following code example demonstrates how you can use the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> method to obtain information about the state of all workflow queues associated with a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">下面的代码示例演示如何使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> 方法获取有关与 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 对象关联的所有工作流队列状态的信息。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>When the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> event occurs, the <ph id="ph2">`OnWorkflowIdled`</ph> method defined in this example is called.</source>
          <target state="translated">当 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> 事件发生时，调用本示例中定义的 <ph id="ph2">`OnWorkflowIdled`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>It determines which workflow is idled using the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A&gt;</ph> property and then gets a collection of queued items for the workflow instance by calling the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> method.</source>
          <target state="translated">该方法使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A&gt;</ph> 属性来确定哪个工作流处于空闲状态，然后通过调用 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> 方法来获取该工作流实例的排队项的集合。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>The code iterates over the collection to determine which activity is waiting for the event that idled the workflow.</source>
          <target state="translated">该代码会循环访问该集合以确定哪个活动正在等待使工作流处于空闲状态的事件。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>It then sends an exception to the workflow queue using the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph> method along with the name of the event queue item.</source>
          <target state="translated">然后，该代码将使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph> 方法以及事件队列项的名称向工作流队列发出一个异常。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</source>
          <target state="translated">此代码示例摘自 Program.cs 文件中的“取消工作流”SDK 示例。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>For more information, see <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>取消工作流<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">工作流运行时引擎未运行。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>Gets the unique identifier for the workflow instance.</source>
          <target state="translated">获取工作流实例的唯一标识符。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of the workflow instance.</source>
          <target state="translated">工作流实例的 <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>You can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> to reference the workflow instance.</source>
          <target state="translated">您可以使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> 来引用工作流实例。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>The following code example demonstrates how you can use the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> property to obtain information about a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">下面的代码示例演示如何使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> 属性获取有关 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 对象的信息。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>The first code snippet creates a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> variable named <ph id="ph2">`instanceId`</ph>.</source>
          <target state="translated">第一个代码段创建名为 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 的 <ph id="ph2">`instanceId`</ph> 变量。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>The second snippet uses the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> property as the first object in an <ph id="ph2">`OrderEventArgs`</ph> constructor call when the <ph id="ph3">`CallBackForApproval`</ph> method is called.</source>
          <target state="translated">当调用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> 方法时，第二个代码段使用 <ph id="ph2">`OrderEventArgs`</ph> 属性作为 <ph id="ph3">`CallBackForApproval`</ph> 构造函数调用中的第一个对象。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>This code example is part of the Listen SDK Sample from the OrderServiceImple.cs file.</source>
          <target state="translated">此代码示例摘自 OrderServiceImple.cs 文件中“自定义持久性服务”SDK 示例。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>For more information, see <bpt id="p1">[</bpt>Listen Sample<ept id="p1">](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>侦听示例<ept id="p1">](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f)</ept>。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Load">
          <source>Loads a previously unloaded workflow instance.</source>
          <target state="translated">加载先前卸载的工作流实例。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Load">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> is synchronous; if the workflow instance can be loaded, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> will return after the workflow instance has been loaded into memory and scheduled by the workflow runtime engine.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> 是同步的，如果工作流实例可以加载，则 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> 将在工作流实例被加载到内存并由工作流运行时引擎计划后返回。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Load">
          <source>The runtime raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> event after the persistence service has restored the workflow instance in memory, but before the workflow runtime engine schedules the instance.</source>
          <target state="translated">运行时将在持久性服务恢复内存中的工作流之后与工作流运行时引擎计划实例之前引发 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Load">
          <source>The following example demonstrates how to load a previously unloaded <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">下面的示例演示如何加载先前卸载的 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Load">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">工作流运行时引擎未运行。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles">
          <source>Reload the tracking profiles for this workflow instance.</source>
          <target state="translated">重新加载此工作流实例的跟踪配置文件。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles">
          <source>The runtime tracking infrastructure will reload each <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingProfile&gt;</ph> for this workflow instance associated with its tracking channels.</source>
          <target state="translated">运行时跟踪基础结构将为与其跟踪通道关联的工作流实例重新加载各个 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingProfile&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles">
          <source>If it is not already in a suspended state, the workflow is temporarily suspended by the runtime tracking infrastructure while the tracking profiles are reloaded.</source>
          <target state="translated">如果它还没有处于挂起状态，则运行时跟踪基础结构将暂时挂起工作流，同时重新加载跟踪配置文件。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">工作流运行时引擎未运行。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>Resumes execution of a previously suspended workflow instance.</source>
          <target state="translated">继续执行先前挂起的工作流实例。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>The host can call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A&gt;</ph> to resume execution of a workflow instance that has been previously suspended.</source>
          <target state="translated">宿主可以调用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A&gt;</ph> 以继续执行先前挂起的工作流实例。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>If the workflow instance is not in the suspended state, no action is taken.</source>
          <target state="translated">如果工作流实例不处于挂起状态，则不执行任何操作。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>The runtime raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> event just before execution of the workflow instance is resumed.</source>
          <target state="translated">运行时恰好在继续执行工作流实例之前引发 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>The following example demonstrates calling Resume on a previously suspended workflow instance.</source>
          <target state="translated">下面的示例演示如何在先前挂起的工作流实例上调用“Resume”。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>This example is from the Suspend and Terminate SDK sample.</source>
          <target state="translated">此示例摘自“挂起和终止”SDK 示例。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>For more information, see <bpt id="p1">[</bpt>Suspend and Terminate Sample<ept id="p1">](http://msdn.microsoft.com/library/f4dffa58-d01e-44fb-b5a1-3b283d2c4517)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>挂起和终止示例<ept id="p1">](http://msdn.microsoft.com/library/f4dffa58-d01e-44fb-b5a1-3b283d2c4517)</ept>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">工作流运行时引擎未运行。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>Starts the execution of the workflow instance.</source>
          <target state="translated">开始执行工作流实例。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> calls <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A&gt;</ph> on the root activity of this workflow instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> 将对此工作流实例的根活动调用 <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>If <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> encounters an exception, it terminates the workflow instance by calling <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> with the <ph id="ph3">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the exception passed as the reason for the termination.</source>
          <target state="translated">如果 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> 遇到异常，则它将通过调用 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph>，并使用异常的 <ph id="ph3">&lt;xref:System.Exception.Message%2A&gt;</ph> 属性（作为终止原因传递）来终止此工作流实例。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>The following code example demonstrates how you can use the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> method to start a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> in a workflow host.</source>
          <target state="translated">下面的代码示例演示如何使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> 方法在工作流宿主中启动 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>The code creates an instance of the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, adds services to the runtime, and then demonstrates the recommended way to create a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">此代码先创建 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 的实例，将服务添加至运行时，然后演示一个创建 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 对象的推荐方式。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>It creates a <ph id="ph1">&lt;xref:System.Type&gt;</ph> object and casts it to one of the workflow objects with which the host is associated.</source>
          <target state="translated">它将创建一个 <ph id="ph1">&lt;xref:System.Type&gt;</ph> 对象，然后将其强制转换为一个与其宿主关联的工作流对象。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>The code next initializes <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> method and passing the previously created type to it.</source>
          <target state="translated">代码接着通过调用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 方法并传递给其先前创建的类型来初始化 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is started with the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> method call.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 方法调用启动 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</source>
          <target state="translated">此代码示例摘自 Program.cs 文件中的“取消工作流”SDK 示例。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>For more information, see <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>取消工作流<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">工作流运行时引擎未运行。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>The workflow instance has already been started.</source>
          <target state="translated">工作流实例已经启动。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source>A description of the reason for suspending the workflow instance.</source>
          <target state="translated">挂起工作流实例原因的说明。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source>Suspends the workflow instance.</source>
          <target state="translated">挂起工作流实例。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source>The workflow instance is suspended in a synchronous manner.</source>
          <target state="translated">此工作流实例是以同步方式挂起的。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source>If the workflow instance is already suspended, no action is taken; otherwise, the workflow runtime engine suspends the workflow instance, raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph> event and passes <ph id="ph2">`reason`</ph> in a <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;</ph>.</source>
          <target state="translated">如果工作流实例已经挂起，则不执行任何操作；否则，工作流运行时引擎将挂起工作流实例，引发 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph> 事件，并在 <ph id="ph2">`reason`</ph> 中传递 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A&gt;</ph> does not unload the workflow instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A&gt;</ph> 不会卸载此工作流实例。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source>The following code example demonstrates calling Suspend on a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">下面的代码示例演示如何在 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 对象上调用“Suspend”。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">工作流运行时引擎未运行。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>A description of the reason for terminating the workflow instance.</source>
          <target state="translated">终止工作流实例原因的说明。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>Terminates the workflow instance in a synchronous manner.</source>
          <target state="translated">以同步方式终止工作流实例。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>The workflow instance is terminated in a synchronous manner.</source>
          <target state="translated">此工作流实例是以同步方式终止的。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>The host calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> to terminate the workflow instance.</source>
          <target state="translated">宿主调用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> 终止工作流实例。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>The workflow runtime engine clears the in-memory workflow instance and informs the persistence service that the instance has been cleared from memory.</source>
          <target state="translated">工作流运行时引擎将清除内存中的工作流实例，并通知持久性服务实例已经从内存中清除。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph>, this means that all state information for that workflow instance is deleted from the database upon termination.</source>
          <target state="translated">对于 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph>，这表示终止时该工作流实例的所有状态信息都已从数据库中删除。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>You will not be able to reload the workflow instance from a previously stored persistence point.</source>
          <target state="translated">您将无法从先前存储的持久点处重新加载工作流实例。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>After the in-memory workflow instance is cleared and the persistence service is informed of the termination, the <ph id="ph1">`Terminate`</ph> method raises the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> event and passes <ph id="ph3">`reason`</ph> in the <ph id="ph4">&lt;xref:System.Exception.Message%2A&gt;</ph> property of a <ph id="ph5">&lt;xref:System.Workflow.ComponentModel.WorkflowTerminatedException&gt;</ph> contained in the <ph id="ph6">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;</ph>.</source>
          <target state="translated">在清除内存中的工作流实例并通知持久性服务终止之后，<ph id="ph1">`Terminate`</ph> 方法将引发 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> 事件，并在 <ph id="ph3">`reason`</ph><ph id="ph4">&lt;xref:System.Exception.Message%2A&gt;</ph>包含的 T:System.Workflow.ComponentModel.WorkflowTerminatedException<ph id="ph5">&lt;xref:System.Workflow.ComponentModel.WorkflowTerminatedException&gt;</ph> 的 <ph id="ph6">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;</ph> 属性中传递 。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source><ph id="ph1">`Terminate`</ph> is different from <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A&gt;</ph> in that while Terminate clears the in-memory workflow instance and informs the persistence service of the termination, <ph id="ph3">`Abort`</ph> simply clears the in-memory workflow instance, which can then be restarted from the last persistence point.</source>
          <target state="translated"><ph id="ph1">`Terminate`</ph> 与 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A&gt;</ph> 的不同之处在于，Terminate 将清除内存中的工作流实例，并通知持久性服务已发生终止；而 <ph id="ph3">`Abort`</ph> 只是清除内存中的工作流实例，然后您可以从最后一个持久点重新启动该实例。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>The following code example demonstrates calling Terminate on a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">下面的代码示例演示如何在 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 对象上调用“Terminate”。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">工作流运行时引擎未运行。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>Unloads the workflow instance from memory to the persistence store when the instance is suspended or idle.</source>
          <target state="translated">当实例处于挂起或空闲状态时，将工作流实例从内存卸载到持久性存储区。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the workflow instance was unloaded; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已卸载工作流实例，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>If the workflow instance is idle or suspended, <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A&gt;</ph> uses the persistence service to remove the workflow instance from memory and persist it to a data store.</source>
          <target state="translated">如果工作流实例处于“空闲”或“挂起”状态，则 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A&gt;</ph> 将使用持久性服务从内存中移除此工作流实例，并将其保留到数据存储区。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>If there is no persistence service registered with the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">如果不存在使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 注册的持久性服务，则 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A&gt;</ph> 将引发 <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>If the workflow instance is successfully persisted, the runtime raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event, and returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">如果工作流实例成功保留，则运行时将引发 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> 事件，并返回 <ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> returns <ph id="ph2">`false`</ph> if the workflow instance has already been unloaded, has been terminated, has been aborted, or has already completed.</source>
          <target state="translated">如果工作流实例已卸载、已中止或已完成，则 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> 将返回 <ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>The host can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A&gt;</ph> to reclaim system resources from an idle workflow.</source>
          <target state="translated">宿主可以使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A&gt;</ph> 回收空闲工作流的系统资源。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>The following example demonstrates using the TryUnload method to unload a workflow when the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> event fires.</source>
          <target state="translated">下面的示例演示如何在 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> 事件激发时使用 TryUnload 方法卸载工作流。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>This example is from the Using Persistence Services SDK sample, from the Program.cs file.</source>
          <target state="translated">此示例摘自 Program.cs 文件中的“使用持久性服务”SDK 示例。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>For more information, see <bpt id="p1">[</bpt>Using Persistence Services Sample<ept id="p1">](http://msdn.microsoft.com/library/3176b7e7-ae49-4d5c-802b-85032d6ebde6)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用持久性服务示例<ept id="p1">](http://msdn.microsoft.com/library/3176b7e7-ae49-4d5c-802b-85032d6ebde6)</ept>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>There is no persistence service registered with the workflow runtime engine.</source>
          <target state="translated">不存在已注册到工作流运行时引擎的持久性服务。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>Unloads the workflow instance from memory to the persistence store.</source>
          <target state="translated">将工作流实例从内存卸载到持久性存储区。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>This call blocks until after the currently scheduled work is finished, or the end of a transaction scope.</source>
          <target state="translated">此调用将进行阻止，直至当前计划的工作完成或事务范围结束。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> is synchronous; that is, it returns after completing any action that it performs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> 是同步的，也就是说，它将在完成其执行的任何操作之后返回。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>If the workflow instance is not idle, the runtime waits until the instance can be interrupted.</source>
          <target state="translated">如果工作流实例不处于空闲状态，则运行时将一直等待，直至可以中断实例。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>An instance can only be interrupted after the currently scheduled work item completes; this is typically when the currently running Activity returns from its <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity.Execute%2A&gt;</ph> method.</source>
          <target state="translated">只有当前计划的工作项完成之后，才可以中断实例，这种情况通常发生在当前运行的活动从其 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity.Execute%2A&gt;</ph> 方法返回时。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>However, if the instance is executing a <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.TransactionScopeActivity&gt;</ph>, the transaction scope must complete execution before the instance can be interrupted.</source>
          <target state="translated">但是，如果实例正在执行 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.TransactionScopeActivity&gt;</ph>，则事务范围必须在可将实例中断之前完成执行。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>Unload then uses the persistence service to remove the workflow instance from memory and persists it to a data store.</source>
          <target state="translated">然后，“Unload”将使用持久性服务从内存中移除工作流实例，并将其保留在数据存储区。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>If there is no persistence service registered with the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">如果不存在使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 注册的持久性服务，则 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> 将引发 <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>If the workflow instance is successfully persisted, the runtime raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event.</source>
          <target state="translated">如果工作流实例成功保留，则运行时将引发 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>The host can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> to reclaim system resources from an idle workflow.</source>
          <target state="translated">宿主可以使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> 回收空闲工作流的系统资源。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>The following example demonstrates calling <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">下面的示例演示对 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> 对象调用 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>There is no persistence service registered with the workflow runtime engine.</source>
          <target state="translated">不存在已注册到工作流运行时引擎的持久性服务。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> for this workflow instance.</source>
          <target state="translated">获取此工作流实例的 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> that represents the execution environment in which this workflow instance is running.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>，表示此工作流实例在其中运行的执行环境。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime">
          <source>The following example demonstrates accessing the executing <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> of a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">下面的示例演示如何访问 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 对象的正在执行的 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>