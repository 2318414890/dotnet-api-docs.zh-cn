<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WorkflowRuntime.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b415af08fe6d71b8ce93803fae47dfb546e65be0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b415af08fe6d71b8ce93803fae47dfb546e65be0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>Represents the configurable execution environment provided by the workflow run-time engine for workflows.</source>
          <target state="translated">表示工作流运行时引擎为工作流提供的可配置执行环境。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> exposes functionality required by a host application and services to configure and control the workflow run-time engine and to be notified of changes to both the workflow run-time engine and any of its workflow instances.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 公开宿主应用程序和服务所需的功能来配置和控制工作流运行时引擎，并接收工作流运行时引擎及其任何工作流实例发生更改的通知。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">下面的代码示例演示如何使用工作流宿主中的 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 功能。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>It provides examples of how to use the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> constructor and the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> methods.</source>
          <target state="translated">该代码示例演示如何使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> 构造函数和 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph>、<ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> 和 <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>The code also shows the recommended way to create a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object in a workflow host using the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> method.</source>
          <target state="translated">该代码还给出了建议采用的方法，即如何使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 方法在工作流宿主中创建 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>It also shows how to set event handlers for the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph>, and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> events.</source>
          <target state="translated">它还演示如何为 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph>、<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> 和 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> 事件设置事件处理程序。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">此代码示例摘自<bpt id="p1">[</bpt>取消工作流<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept>示例。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>This type is thread safe.</source>
          <target state="translated">此类型是线程安全的。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> is initialized with the default property values and contains the default core services.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 是以默认属性值进行初始化的，包含默认的核心服务。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>To additionally configure the workflow run-time engine, you can add and remove services by using <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph>, and you can set <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph>.</source>
          <target state="translated">若要另外配置工作流运行时引擎，可以通过使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> 和 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph> 来添加和移除服务，还可以设置 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>After the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> is configured, call <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> to start the workflow run-time engine and its services.</source>
          <target state="translated">配置 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 后，调用 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> 以启动工作流运行时引擎及其服务。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> class.</source>
          <target state="translated">下表显示 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 类的实例的初始属性值。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>Initial Value</source>
          <target state="translated">初始值</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>"WorkflowRuntime"</source>
          <target state="translated">"WorkflowRuntime"</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>The default core services are <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt;</ph>.</source>
          <target state="translated">默认核心服务是 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph> 和 <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>The following code example demonstrates how you can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">下面的代码示例演示如何使用工作流宿主中的 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 功能。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>It provides an example of how to use the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> constructor to create an instance of a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and access its methods and events.</source>
          <target state="translated">它提供了有关如何使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> 构造函数来创建 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 实例并访问其方法和事件的示例。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">此代码示例摘自<bpt id="p1">[</bpt>取消工作流<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept>示例。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>The name of a valid <ph id="ph1">&lt;see langword="workflowSettings" /&gt;</ph> section in the application configuration file.</source>
          <target state="translated">应用程序配置文件中有效的 <ph id="ph1">&lt;see langword="workflowSettings" /&gt;</ph> 节的名称。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> class by using the specified section of the application configuration file.</source>
          <target state="translated">使用应用程序配置文件的指定节初始化 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> is initialized according to the settings in the section specified by <ph id="ph2">`configSectionName`</ph> in the application configuration file.</source>
          <target state="translated">根据应用程序配置文件中的 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 所指定节中的设置初始化的 <ph id="ph2">`configSectionName`</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source><ph id="ph1">`configSectionName`</ph> must correspond to a valid <ph id="ph2">`workflowSettings`</ph> section of a configuration file.</source>
          <target state="translated"><ph id="ph1">`configSectionName`</ph> 必须对应于一个有效<ph id="ph2">`workflowSettings`</ph>配置文件节。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>When the workflow run-time engine is configured by using an application configuration file, it loads and instantiates classes of the types listed in the <ph id="ph1">`Services`</ph> section of the configuration file.</source>
          <target state="translated">当工作流运行时引擎将通过应用程序配置文件配置的时它将加载并实例化类中列出的类型<ph id="ph1">`Services`</ph>配置文件节。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>When the workflow run-time engine constructs these classes it looks for class constructors with the following signatures in the following order:</source>
          <target state="translated">工作流运行时引擎构造这些类时，将按以下顺序查找使用以下签名的类构造函数：</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>Service(WorkflowRuntime runtime, NameValueCollection parameters)</source>
          <target state="translated">Service(WorkflowRuntime 运行时,NameValueCollection 参数)</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>Service(WorkflowRuntime runtime)</source>
          <target state="translated">Service(WorkflowRuntime 运行时)</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>Service(NameValueCollection parameters)</source>
          <target state="translated">Service(NameValueCollection 参数)</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>Service()</source>
          <target state="translated">Service()</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>All service classes that are loaded from a configuration file must implement at least one of these constructor signatures.</source>
          <target state="translated">从配置文件加载的所有服务类至少必须实现这些构造函数签名之一。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="configSectionName" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="configSectionName" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>A valid <ph id="ph1">&lt;see langword="workflowSettings" /&gt;</ph> section could not be found in the application configuration file.</source>
          <target state="translated">在应用程序配置文件中无法找到有效的 <ph id="ph1">&lt;see langword="workflowSettings" /&gt;</ph> 节。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> already exists for this application domain.</source>
          <target state="translated">此应用程序域已存在 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> class by using the settings in the specified <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> 中的设置初始化 <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>This constructor provides a mechanism to configure the workflow run-time engine using a single method call for hosts that do not use an application configuration file.</source>
          <target state="translated">此构造函数提供了一个机制，可对不使用应用程序配置文件的宿主使用单一方法调用来配置工作流运行时引擎。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>There are many reasons for not using the application configuration file.</source>
          <target state="translated">不使用应用程序配置文件的原因很多。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>A host can run in an environment that does not allow using configuration files; for example, in trusted environments that do not allow reading from the application configuration file for security reasons.</source>
          <target state="translated">宿主可以在不允许使用配置文件的环境中运行，例如在受信任环境中由于安全原因不允许从应用程序配置文件读取数据。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Also, a host can use a proprietary configuration mechanism; for example, the host can store the workflow run-time engine configuration settings in a SQL database.</source>
          <target state="translated">此外，宿主可以使用专有的配置机制；例如，宿主可以将工作流运行时引擎的配置设置存储在 SQL 数据库中。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>The workflow run-time engine loads and instantiates classes of the types contained in <ph id="ph1">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">工作流运行时引擎将会加载 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=nameWithType&gt;</ph> 中所含类型的类并将其实例化。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>When the workflow run-time engine constructs these classes it looks for class constructors with the following signatures in the following order:</source>
          <target state="translated">工作流运行时引擎构造这些类时，将按以下顺序查找使用以下签名的类构造函数：</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Service(WorkflowRuntime runtime, NameValueCollection parameters)</source>
          <target state="translated">Service(WorkflowRuntime 运行时,NameValueCollection 参数)</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Service(WorkflowRuntime runtime)</source>
          <target state="translated">Service(WorkflowRuntime 运行时)</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Service(NameValueCollection parameters)</source>
          <target state="translated">Service(NameValueCollection 参数)</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Service()</source>
          <target state="translated">Service()</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>All service classes that are specified in <ph id="ph1">`settings`</ph> must implement at least one of these constructor signatures.</source>
          <target state="translated"><ph id="ph1">`settings`</ph> 中指定的所有服务类至少必须实现这些构造函数签名之一。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source><ph id="ph1">&lt;paramref name="settings" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="settings" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> already exists for this application domain.</source>
          <target state="translated">此应用程序域已存在 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>An object that represents the service to add.</source>
          <target state="translated">一个对象，表示要添加服务。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>Adds the specified service to the workflow run-time engine.</source>
          <target state="translated">将指定的服务添加到工作流运行时引擎中。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>You can configure the workflow run-time engine by adding core services.</source>
          <target state="translated">通过添加核心服务可以配置工作流运行时引擎。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>Core services are those that derive from any of the following service base classes: the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class, and the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> class.</source>
          <target state="translated">核心服务是派生自以下任一服务基类的服务：<ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> 类、<ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> 类、<ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> 类和 <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> 类。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>Core services can only be added when the workflow run-time engine is not running; that is, when <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">可以仅添加核心服务，在工作流运行时引擎未运行;也就是说，当<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph>是<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> can also be used as a storage container for other services that can be used by other workflows or by applications running on a host.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 也可以用作存储其他服务的容器，其他工作流或宿主上运行的应用程序可能会使用这些服务。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>If you add a non-core service that derives from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class after the workflow run-time engine has been started, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> calls the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method implemented by that service.</source>
          <target state="translated">如果您在工作流运行时引擎启动后添加派生自 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> 类的非核心服务，则 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> 将会调用该服务实现的 <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> enforces the restriction that no two services of the same <ph id="ph2">&lt;xref:System.Type&gt;</ph> can be added to the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> 有一些限制，即不能将同一 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 的两个服务添加到 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>However, you can add multiple services that derive from the same base class.</source>
          <target state="translated">但是，您可以添加派生自相同基类的多个服务。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>There can be only one service derived from each of the following service base classes in the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>: the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> class, and the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class.</source>
          <target state="translated">从 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 中的以下每个服务基类只能派生一个服务：<ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> 类、<ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> 类和 <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> 类。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>If you add multiple services derived from one of these classes, for example two persistence services, <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">如果您添加了派生自其中一个类的多个服务（例如两个持久性服务），则 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> 将引发 <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">下面的代码示例演示如何使用工作流宿主中的 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 功能。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>It provides example of how to use the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> method to add an <ph id="ph2">&lt;xref:System.Workflow.Activities.ExternalDataExchangeService&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph> to the workflow run-time engine.</source>
          <target state="translated">它提供了有关如何使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> 方法向工作流运行时引擎添加 <ph id="ph2">&lt;xref:System.Workflow.Activities.ExternalDataExchangeService&gt;</ph> 和 <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph> 的示例。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>This code example is part of the <bpt id="p1">[</bpt>Cancelling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> sample.</source>
          <target state="translated">此代码示例摘自<bpt id="p1">[</bpt>取消工作流<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept>示例。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source><ph id="ph1">&lt;paramref name="service" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="service" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> 已释放。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source><ph id="ph1">&lt;paramref name="service" /&gt;</ph> is already registered with the workflow run-time engine.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="service" /&gt;</ph> 已向工作流运行时引擎注册。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source><ph id="ph1">&lt;paramref name="service" /&gt;</ph> is a core service and the workflow run-time engine is already running (<ph id="ph2">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /&gt;</ph> is <ph id="ph3">&lt;see langword="true" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="service" /&gt;</ph> 为核心服务，且工作流运行时引擎已运行（此时 <ph id="ph2">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="true" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>Creates a workflow instance by using the specified parameters.</source>
          <target state="translated">使用指定参数创建工作流实例。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>If the workflow run-time engine has not been started, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> methods call <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>.</source>
          <target state="translated">如果未启动工作流运行时引擎，<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> 方法将调用 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>See <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> for a list of possible exceptions.</source>
          <target state="translated">有关可能的异常的列表，请参见 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>After you create the workflow instance, call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A?displayProperty=nameWithType&gt;</ph> on the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object returned by the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> method to begin its execution.</source>
          <target state="translated">创建工作流实例后，请对 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A?displayProperty=nameWithType&gt;</ph> 方法返回的 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 对象调用 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> 以开始执行此实例。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the workflow to create.</source>
          <target state="translated">待创建工作流的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>Creates a new workflow instance by using the specified workflow <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">使用指定工作流 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 创建新的工作流实例。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>The created workflow instance.</source>
          <target state="translated">创建的工作流实例。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated">在创建 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 之前，会对其执行验证。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">如果出现任何验证错误，则会引发 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">这对简单的方案很有用，但在服务器环境中，在每次激活时重新验证工作流可能会增加不必要的系统开销。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> disabling validation, see <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph>禁用验证的更多信息，请参见 <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>The following code example demonstrates the recommended way to create a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object in a workflow host using the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> method.</source>
          <target state="translated">下面的代码示例演示如何使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 方法在工作流宿主中创建 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">此代码示例摘自<bpt id="p1">[</bpt>取消工作流<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept>示例。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that contains the workflow definition.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>，它包含工作流定义。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>Creates a workflow instance by using the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 创建工作流实例。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>The created workflow instance.</source>
          <target state="translated">创建的工作流实例。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>The workflow instance is created from a XAML workflow definition file referenced by the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">该工作流实例是根据 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 引用的 XAML 工作流定义文件创建的。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated">在创建 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 之前，会对其执行验证。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">如果出现任何验证错误，则会引发 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">这对简单的方案很有用，但在服务器环境中，在每次激活时重新验证工作流可能会增加不必要的系统开销。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> disabling validation, see <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph>禁用验证的更多信息，请参见 <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>The following example demonstrates how to create a workflow given a XAML-based workflow definition.</source>
          <target state="translated">下面的示例演示如何在给定基于 XAML 的工作流定义的情况下创建工作流。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="workflowDefinitionReader" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowDefinitionReader" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> 已释放。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the workflow to create.</source>
          <target state="translated">待创建工作流的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> of objects keyed by string that represents the arguments to the workflow.</source>
          <target state="translated">对象的一个 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>，由表示工作流参数的字符串进行键控。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>Creates a workflow instance by using the specified workflow <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> and the arguments to the workflow contained in the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">使用指定工作流 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 和指定 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> 中的工作流参数创建工作流实例。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>The created workflow instance.</source>
          <target state="translated">创建的工作流实例。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated">在创建 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 之前，会对其执行验证。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">如果出现任何验证错误，则会引发 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">这对简单的方案很有用，但在服务器环境中，在每次激活时重新验证工作流可能会增加不必要的系统开销。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> disabling validation, see <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph>禁用验证的更多信息，请参见 <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>For an example of passing in parameters to <ph id="ph1">`CreateWorkflow`</ph>, see <bpt id="p1">[</bpt>Workflow with Parameters Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157403)</ept>.</source>
          <target state="translated">有关示例的参数中传递<ph id="ph1">`CreateWorkflow`</ph>，请参阅<bpt id="p1">[</bpt>带有工作流参数示例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157403)</ept>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the workflow to create.</source>
          <target state="translated">待创建工作流的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> of objects keyed by a string that represents the arguments to the workflow.</source>
          <target state="translated">对象的一个 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>，由表示工作流参数的字符串进行键控。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of the specific <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> to create.</source>
          <target state="translated">待创建的特定 <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>Creates a workflow instance by using the specified parameters.</source>
          <target state="translated">使用指定参数创建工作流实例。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The created workflow instance.</source>
          <target state="translated">创建的工作流实例。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated">在创建 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 之前，会对其执行验证。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">如果出现任何验证错误，则会引发 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">这对简单的方案很有用，但在服务器环境中，在每次激活时重新验证工作流可能会增加不必要的系统开销。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> disabling validation, see <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph>禁用验证的更多信息，请参见 <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The workflow <ph id="ph1">`instanceId`</ph> for any running workflows loaded by the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> must be unique.</source>
          <target state="translated">由 <ph id="ph1">`instanceId`</ph> 加载的任何运行工作流的工作流 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 必须具有唯一性。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>If you pass an <ph id="ph1">`instanceId`</ph> to create a workflow and a running workflow is already using that <ph id="ph2">`instanceId`</ph>, an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">如果您要传递一个 <ph id="ph1">`instanceId`</ph> 来创建工作流，而某个运行中的工作流已在使用该 <ph id="ph2">`instanceId`</ph>，将会引发 <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>For an example of passing in parameters to <ph id="ph1">`CreateWorkflow`</ph>, see <bpt id="p1">[</bpt>Workflow with Parameters Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>.</source>
          <target state="translated">有关示例的参数中传递<ph id="ph1">`CreateWorkflow`</ph>，请参阅<bpt id="p1">[</bpt>带有工作流参数示例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that contains the workflow definition.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>，它包含工作流定义。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> of objects keyed by a string that represents the arguments to the workflow.</source>
          <target state="translated">对象的一个 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>，由表示工作流参数的字符串进行键控。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>Creates a workflow instance by using the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> objects and the arguments contained in the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 对象和指定的 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> 中的参数创建工作流实例。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>The created workflow instance.</source>
          <target state="translated">创建的工作流实例。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>The workflow instance is created from the workflow definition referenced by the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> and the arguments supplied by <ph id="ph2">`namedArgumentValues`</ph>.</source>
          <target state="translated">该工作流实例是根据 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 引用的工作流定义和 <ph id="ph2">`namedArgumentValues`</ph> 提供的参数创建的。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated">在创建 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 之前，会对其执行验证。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">如果出现任何验证错误，则会引发 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">这对简单的方案很有用，但在服务器环境中，在每次激活时重新验证工作流可能会增加不必要的系统开销。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> disabling validation, see <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph>禁用验证的更多信息，请参见 <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>For an example of passing in parameters to <ph id="ph1">`CreateWorkflow`</ph>, see <bpt id="p1">[</bpt>Workflow with Parameters Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>.</source>
          <target state="translated">有关示例的参数中传递<ph id="ph1">`CreateWorkflow`</ph>，请参阅<bpt id="p1">[</bpt>带有工作流参数示例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>For an example of using rules defined in XML, see <bpt id="p1">[</bpt>IfElse with Rules Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157404)</ept>.</source>
          <target state="translated">使用在 XML 中定义的规则的示例，请参阅<bpt id="p1">[</bpt>规则示例 IfElse<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157404)</ept>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source><ph id="ph1">&lt;paramref name="workflowDefinitionReader" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowDefinitionReader" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> 已释放。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that contains the workflow definition.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>，它包含工作流定义。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> of objects keyed by a string that represents the arguments to the workflow.</source>
          <target state="translated">对象的一个 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>，由表示工作流参数的字符串进行键控。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of the specific <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> to create.</source>
          <target state="translated">待创建的特定 <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>Creates a workflow instance by using the specified parameters.</source>
          <target state="translated">使用指定参数创建工作流实例。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The created workflow instance.</source>
          <target state="translated">创建的工作流实例。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated">在创建 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 之前，会对其执行验证。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">如果出现任何验证错误，则会引发 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">这对简单的方案很有用，但在服务器环境中，在每次激活时重新验证工作流可能会增加不必要的系统开销。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> disabling validation, see <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph>禁用验证的更多信息，请参见 <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The workflow <ph id="ph1">`instanceId`</ph> for any running workflows loaded by the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> must be unique.</source>
          <target state="translated">由 <ph id="ph1">`instanceId`</ph> 加载的任何运行工作流的工作流 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 必须具有唯一性。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>If you pass an <ph id="ph1">`instanceId`</ph> to create a workflow and a running workflow is already using that <ph id="ph2">`instanceId`</ph>, an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">如果您要传递一个 <ph id="ph1">`instanceId`</ph> 来创建工作流，而某个运行中的工作流已在使用该 <ph id="ph2">`instanceId`</ph>，将会引发 <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>For an example of passing in parameters to <ph id="ph1">`CreateWorkflow`</ph>, see <bpt id="p1">[</bpt>Workflow with Parameters Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>.</source>
          <target state="translated">有关示例的参数中传递<ph id="ph1">`CreateWorkflow`</ph>，请参阅<bpt id="p1">[</bpt>带有工作流参数示例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>For an example of using rules defined in XML, see <bpt id="p1">[</bpt>IfElse with Rules Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157404)</ept>.</source>
          <target state="translated">使用在 XML 中定义的规则的示例，请参阅<bpt id="p1">[</bpt>规则示例 IfElse<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157404)</ept>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> 占用的资源。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>To shut down the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> gracefully, you should only call <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> after you have called <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>.</source>
          <target state="translated">若要正常关闭 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>，应仅在调用 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> 之后才调用 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>This is because calling the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> method alone leaves the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> in an unusable state.</source>
          <target state="translated">这是因为单独调用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> 方法会使 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 处于不可用状态。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> frees the resources used by the runtime by closing open file handles, database connections, and so on, but it does not unload workflow instances, stop services, or do any of the other actions that <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> does.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> 通过关闭文件句柄、数据库连接等来释放运行时占用的资源，但它不会卸载工作流实例、停止服务或执行 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> 所执行的任何其他操作。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> should be called only when the host application must free the resources used by the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> before they are automatically freed by the garbage collector.</source>
          <target state="translated">只有当宿主应用程序必须在垃圾收集器自动释放 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> 使用的资源前释放这些资源时，才应调用 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>For general information about <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">有关常规信息<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph>，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>实现 Dispose 方法<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>The following example demonstrates how to call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">下面的示例演示如何对 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> 对象调用 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>In this sample, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> method is called from the FormClosing event handler for the main form of the application; this ensures that the objects created by the runtime are properly cleaned up when the application shuts down.</source>
          <target state="translated">在此示例中，将会针对应用程序的主窗体从 FormClosing 事件处理程序中调用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> 方法；这可确保在应用程序关闭时正确清理运行时创建的对象。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>This sample is from the <bpt id="p1">[</bpt>Speech Application Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157405)</ept>.</source>
          <target state="translated">此示例摘自<bpt id="p1">[</bpt>语音应用程序示例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157405)</ept>。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that services must implement to be returned.</source>
          <target state="translated">要返回服务所必须实现的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>Retrieves all the services that are added to the workflow run-time engine that implement or derive from the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">检索实现或派生自指定的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 且添加到工作流运行时引擎的所有服务。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>Services that implement or derive from the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">实现或派生自指定 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 的服务。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>An empty <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> indicates that no services that implement or derive from the specified <ph id="ph2">&lt;xref:System.Type&gt;</ph> have been added to the workflow run-time engine.</source>
          <target state="translated">空 <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> 表示没有向工作流运行时引擎添加实现或派生自指定的 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 的服务。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>The following example demonstrates how to retrieve all services of a given type from a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">下面的示例演示如何从 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 对象中检索给定类型的所有服务。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> 已释放。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>The service type.</source>
          <target state="translated">服务类型。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>Retrieves all the services that are added to the workflow run-time engine that implement or derive from the specified generic type.</source>
          <target state="translated">检索实现或派生自指定的泛型类型且添加到工作流运行时引擎的所有服务。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>Services that implement or derive from the specified generic type.</source>
          <target state="translated">实现或派生自指定泛型类型的服务。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>An empty <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> indicates that no services have been added to the workflow run-time engine that implement or derive from the specified generic type.</source>
          <target state="translated">空 <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> 表示没有向工作流运行时引擎添加实现或派生自指定泛型类型的服务。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>The following example demonstrates how to retrieve all services of a given type from a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">下面的示例演示如何从 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 对象中检索给定类型的所有服务。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> 已释放。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows">
          <source>Gets a collection that contains all the workflow instances currently loaded in memory.</source>
          <target state="translated">获取一个集合，该集合包含当前加载到内存的所有工作流实例。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> object for each workflow instance currently loaded in memory.</source>
          <target state="translated">内存中当前加载的每个工作流实例的 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows">
          <source>Note that, unlike <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph>, this method does not throw a <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> if the runtime is not started.</source>
          <target state="translated">请注意，与 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> 不同，在运行时未启动的情况下，此方法不会引发 <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows">
          <source>The following example demonstrates how to retrieve a collection of loaded workflows from a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">下面的示例演示如何从 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 对象中检索已加载工作流的集合。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> 已释放。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the service to retrieve.</source>
          <target state="translated">要检索的服务的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>Retrieves a service of the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> from the workflow run-time engine.</source>
          <target state="translated">从工作流运行时引擎中检索指定的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 的服务。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>The service of the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">指定的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 的服务。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A&gt;</ph> throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> if more than one service exists for the specified <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">如果存在多个指定的 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A&gt;</ph> 的服务，则 <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> 将引发 <ph id="ph3">&lt;xref:System.Type&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>Therefore, you should use one of the overloaded methods of <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A&gt;</ph> if it is possible that multiple services of the specified type are present in the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated">因此，如果 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A&gt;</ph> 中出现多个指定类型的服务，您应使用 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 的重载方法之一。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>For example, the workflow run-time engine may have multiple tracking services.</source>
          <target state="translated">例如，工作流运行时引擎可能有多个跟踪服务。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>If you request a tracking service by specifying the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> base class, it is possible that an exception will be thrown.</source>
          <target state="translated">如果通过指定 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> 基类来请求跟踪服务，则可能会引发异常。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is already disposed of.</source>
          <target state="translated">已释放 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>More than one service of type <ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> was found.</source>
          <target state="translated">已找到多个 <ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> 类型的服务。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>The service type.</source>
          <target state="translated">服务类型。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>Retrieves a service of the specified generic type from the workflow run-time engine.</source>
          <target state="translated">从工作流运行时引擎中检索指定泛型类型的服务。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>A single service of the specified generic type.</source>
          <target state="translated">指定泛型类型的单个服务。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A&gt;</ph> throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> if more than one service exists for the specified generic type.</source>
          <target state="translated">如果存在多个指定泛型类型的服务，则 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A&gt;</ph> 将引发 <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>Therefore, you should use one of the overloaded methods of <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A&gt;</ph> if it is possible that multiple services of the generic type are present in the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated">因此，如果 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A&gt;</ph> 中出现多个该泛型类型的服务，您应使用 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 的重载方法之一。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>For example, the workflow run-time engine may have multiple tracking services.</source>
          <target state="translated">例如，工作流运行时引擎可能有多个跟踪服务。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>If you request a tracking service by specifying the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> base class, it is possible that an exception will be thrown.</source>
          <target state="translated">如果通过指定 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> 基类来请求跟踪服务，则可能会引发异常。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>The following example demonstrates how to retrieve a single service from a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object; in this case, a service of type <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&gt;</ph>.</source>
          <target state="translated">下面的示例演示如何从 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 对象中检索单个服务；在本例中是 <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&gt;</ph> 类型的服务。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>This example is from the <bpt id="p1">[</bpt>Workflow Threading Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157350)</ept>.</source>
          <target state="translated">此示例摘自<bpt id="p1">[</bpt>工作流线程处理示例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157350)</ept>。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> has already been disposed of.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> 已释放。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>More than one service of the generic type was found.</source>
          <target state="translated">已找到多个该泛型类型的服务。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of a workflow instance.</source>
          <target state="translated">工作流实例的 <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>Retrieves the workflow instance that has the specified <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">检索具有指定 <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> 的工作流实例。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> that has the specified <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">具有指定 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>If <ph id="ph1">`instanceId`</ph> specifies a workflow instance that is not currently in memory, the workflow instance is loaded into memory and scheduled for execution.</source>
          <target state="translated">如果 <ph id="ph1">`instanceId`</ph> 指定的工作流实例当前不在内存中，则会将该工作流实例加载到内存并计划执行。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>For example, after a workflow instance is aborted, you can call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> to load the workflow instance back into memory.</source>
          <target state="translated">例如，某个工作流实例被中止后，您可以调用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> 以将该工作流实例重新加载回内存。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>In this case, the last persisted state of the workflow instance is loaded into memory by the persistence service.</source>
          <target state="translated">在这种情况下，持久性服务会将工作流实例的上一个保留状态加载到内存。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>The following code example demonstrates a <ph id="ph1">`ReloadWorkflow`</ph> method that calls the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> method.</source>
          <target state="translated">下面的代码示例演示 <ph id="ph1">`ReloadWorkflow`</ph><ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph>方法如何调用  方法。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>The <ph id="ph1">`ReloadWorkflow`</ph> method is part of a larger class that has a <ph id="ph2">`Runtime`</ph> property to access all of the methods, properties, and events of the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">`ReloadWorkflow`</ph> 方法是一个更大类的一部分，该大类具有的 <ph id="ph2">`Runtime`</ph> 属性可访问 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 类的所有方法、属性和事件。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157351)</ept> sample.</source>
          <target state="translated">此代码示例摘自<bpt id="p1">[</bpt>自定义持久性服务示例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157351)</ept>示例。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>In the example, the call to <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> is redundant because both the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> methods use the same internal helper method to load the workflow instance into memory.</source>
          <target state="translated">在该示例中，调用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> 是多余的，因为 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> 和 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> 两种方法都使用相同的内部帮助器方法将工作流实例加载到内存中。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>The workflow runtime is not started.</source>
          <target state="translated">工作流运行时未启动。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>Gets a value that indicates whether the workflow run-time engine has been started.</source>
          <target state="translated">获取一个值，该值指示是否已启动工作流运行时引擎。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the workflow run-time engine has been started; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果该工作流运行时引擎已启动，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> indicates that the workflow run-time engine services are running.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> 指示工作流运行时引擎服务正在运行。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> is <ph id="ph2">`false`</ph> until the host calls <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> 是<ph id="ph2">`false`</ph>直到宿主调用<ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>It remains <ph id="ph1">`true`</ph> until the host calls <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>.</source>
          <target state="translated">在宿主调用 <ph id="ph1">`true`</ph> 之前，它一直保留 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>You cannot add core services to the workflow run-time engine while it is running.</source>
          <target state="translated">工作流运行时引擎运行时，您不能向其中添加核心服务。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>Core services are services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class, and the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> class.</source>
          <target state="translated">核心服务是派生自 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> 类、<ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph> 类、<ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> 类和 <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> 类的服务。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>The following example demonstrates how to access the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">下面的示例演示如何访问 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> 对象的 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>In this example, if the runtime is started, a message is printed to the console.</source>
          <target state="translated">在此示例中，如果运行时已启动，则会向控制台输出消息。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>Gets or sets the name associated with the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">获取或设置与 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> 关联的名称。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>The name associated with this <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">与此 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> 关联的名称。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph> while the workflow run-time engine is running (<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> is <ph id="ph3">`true`</ph>).</source>
          <target state="translated">无法设置<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph>在工作流运行时引擎处于运行状态 (<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph>是<ph id="ph3">`true`</ph>)。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>The following example demonstrates how to access the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">下面的示例演示如何访问 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph> 对象的 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>In this example, the name of the runtime is set to "Main Runtime".</source>
          <target state="translated">在本示例中，运行时的名称设置为“Main Runtime”。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>An attempt to set <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /&gt;</ph> on a <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> that is disposed occurs.</source>
          <target state="translated">尝试对释放的 <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /&gt;</ph> 设置 <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>An attempt to set <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /&gt;</ph> while the workflow run-time engine is running occurs.</source>
          <target state="translated">尝试在工作流运行时引擎运行时设置 <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>An object that represents the service to remove.</source>
          <target state="translated">一个对象，表示要移除的服务。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>Removes the specified service from the workflow run-time engine.</source>
          <target state="translated">从工作流运行时引擎中移除指定的服务。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>You cannot remove a core service while the workflow run-time engine is running (<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> is <ph id="ph2">`true`</ph>).</source>
          <target state="translated">运行工作流运行时引擎时，无法删除核心服务 (<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph>是<ph id="ph2">`true`</ph>)。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>Core services are services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class, or the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> class.</source>
          <target state="translated">核心服务是派生自 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> 类、<ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> 类、<ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> 类或 <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> 类的服务。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>If <ph id="ph1">`service`</ph> derives from the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class, <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph> calls the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method implemented by <ph id="ph5">`service`</ph>.</source>
          <target state="translated">如果 <ph id="ph1">`service`</ph> 派生自 <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> 类，则 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph> 将调用由 <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> 实现的 <ph id="ph5">`service`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>In the following example, a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph> is added and removed from the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated">在下面的示例中，将向 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph> 添加和移除一个 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source><ph id="ph1">&lt;paramref name="service" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="service" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is already disposed of.</source>
          <target state="translated">已释放 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>The workflow run-time engine has started (<ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>) and <ph id="ph3">&lt;paramref name="service" /&gt;</ph> is a core service.</source>
          <target state="translated">工作流运行时引擎已启动（<ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>），且 <ph id="ph3">&lt;paramref name="service" /&gt;</ph> 为核心服务。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source><ph id="ph1">&lt;paramref name="service" /&gt;</ph> is not registered with the workflow run-time engine.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="service" /&gt;</ph> 未向工作流运行时引擎注册。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>Occurs when a service that is derived from the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph> class calls <ph id="ph2">&lt;see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" /&gt;</ph>.</source>
          <target state="translated">在派生自 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph> 类的服务调用 <ph id="ph2">&lt;see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" /&gt;</ph> 时发生。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>A service that is derived from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class can call the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph> method to inform subscribers to the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph> event that an exception that it was unable to handle occurred during its execution.</source>
          <target state="translated">派生自 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> 类的服务可调用 <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph> 方法，以通知 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph> 事件的订户在执行过程中出现无法处理的异常。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>You can subscribe to this event to implement a recovery mechanism.</source>
          <target state="translated">您可以订阅此事件以实现恢复机制。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>This event is raised when a workflow instance has not been created yet by the workflow run-time engine and an exception occurs.</source>
          <target state="translated">在工作流运行时引擎尚未创建工作流实例前引发此事件，同时将出现一个异常。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>In this scenario, the only way to inform a host application that an exception occurred is to raise this event.</source>
          <target state="translated">在此方案中，通知宿主应用程序发生异常的唯一方法是引发此事件。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>However, the workflow run-time engine does not call this directly.</source>
          <target state="translated">但是，工作流运行时引擎不直接调用此方法。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>Instead, the workflow run-time engine either delivers an exception to the workflow instance or, if there is no instance, throws back to the caller, which in this case is actually the service that fires this event.</source>
          <target state="translated">工作流运行时引擎而是向工作流实例发送异常，或者在没有实例的情况下将异常引发回调用方（本例中调用方实际上是激发此事件的服务）。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>If you create your own persistence or scheduler service, you must implement this event yourself through the base <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph> method.</source>
          <target state="translated">如果要创建自己的持久性服务或计划程序，您必须自己使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph> 基方法来实现此事件。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Guid&gt;</ph> of the workflow instance that was using the service and the <ph id="ph5">&lt;xref:System.Exception&gt;</ph> that could not be handled.</source>
          <target state="translated">对于 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph> 事件，发送方包含 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>，而 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> 包含使用服务的工作流实例的 <ph id="ph4">&lt;xref:System.Guid&gt;</ph>，以及无法处理的 <ph id="ph5">&lt;xref:System.Exception&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 处理事件，请参阅<bpt id="p1">[</bpt>使用事件<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">下面的代码示例演示如何使用工作流宿主中的 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 功能。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>The code associates <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph> with an event handler, a method named <ph id="ph2">`OnExceptionNotHandled`</ph>.</source>
          <target state="translated">该代码将 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph> 与一个事件处理程序（即一个名为 <ph id="ph2">`OnExceptionNotHandled`</ph> 的方法）相关联。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept>.</source>
          <target state="translated">此代码示例摘自<bpt id="p1">[</bpt>自定义持久性服务示例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept>。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>Occurs when the workflow run-time engine is started.</source>
          <target state="translated">启动工作流运行时引擎时发生。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> method raises the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event after it has validated the core service configuration of the workflow run-time engine, has invoked the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method implemented by each of its services that derive from the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class, and has set <ph id="ph5">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> to <ph id="ph6">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>方法引发<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph>事件后它已验证工作流运行时引擎的核心服务配置已调用<ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph>方法实现的每个派生自其服务<ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph>类，并且已将设置<ph id="ph5">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph>到<ph id="ph6">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>There is no guarantee about the order in which the services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class are started by the workflow run-time engine, and some of these workflow run-time engine services may depend on functionality supplied by other of these services to complete their startup tasks.</source>
          <target state="translated">工作流运行时引擎并不按照固定顺序启动派生自 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> 类的服务，一部分工作流运行时引擎服务可能需要依赖另一部分服务所提供的功能来完成其启动任务。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>Workflow run-time engine services can override the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=nameWithType&gt;</ph> method to perform any final startup tasks that require the support of other workflow run-time engine services when the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event is raised.</source>
          <target state="translated">引发 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=nameWithType&gt;</ph> 事件后，工作流运行时引擎服务可以重写 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> 方法，以执行需要其他工作流运行时引擎服务支持的任何最终启动任务。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 处理事件，请参阅<bpt id="p1">[</bpt>使用事件<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>In the following example, an event handler is added to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated">在下面的示例中，将向 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> 的 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 事件添加一个事件处理程序。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>In this example, the handler is an anonymous method that prints a simple message to the console.</source>
          <target state="translated">在此示例中，处理程序是向控制台输出简单消息的匿名方法。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>Starts the workflow run-time engine and the workflow run-time engine services.</source>
          <target state="translated">启动工作流运行时引擎和工作流运行时引擎服务。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>This method verifies that a valid set of core services exists and then starts any services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class.</source>
          <target state="translated">此方法验证是否存在有效的核心服务集，然后启动派生自 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> 类的任何服务。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>There must be one and only one of each of the following core services: a workflow <ph id="ph1">`CommitWorkBatch`</ph> service derived from the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> base class and a scheduler service derived from the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> base class.</source>
          <target state="translated">必须有且只有一个的每个以下的核心服务： 工作流<ph id="ph1">`CommitWorkBatch`</ph>服务派生自<ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph>基类和计划程序服务派生自<ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph>基类。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>If either or both of these core services are missing, the workflow run-time engine supplies the appropriate default service: <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph> for the workflow <ph id="ph2">`CommitWorkBatch`</ph> service and <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt;</ph> for the scheduler service.</source>
          <target state="translated">如果缺少任一或所有这些核心服务，工作流运行时引擎将提供适当的默认服务：<ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph>工作流<ph id="ph2">`CommitWorkBatch`</ph>服务和<ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt;</ph>计划程序服务。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>A persistence service is optional, but there can be at most only one persistence service present.</source>
          <target state="translated">持久性服务为可选服务，但最多只能有一个持久性服务。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>After it has validated the service configuration, <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> calls <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> on all of the services that are derived from the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> 验证服务配置后，将对派生自 <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> 类的所有服务调用 <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>Finally, the workflow run-time engine sets <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> and raises the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event.</source>
          <target state="translated">最后，工作流运行时引擎将设置 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> 并引发 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>You cannot add or remove core services after the workflow run-time engine is started.</source>
          <target state="translated">在工作流运行时引擎启动后，您不能添加或移除核心服务。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>Core services are services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class, or the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> class.</source>
          <target state="translated">核心服务是派生自 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> 类、<ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> 类、<ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> 类或 <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> 类的服务。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>If you call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> while the workflow run-time engine is running, no action is performed.</source>
          <target state="translated">如果您在工作流运行时引擎运行过程中调用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>，将不会执行任何操作。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">下面的代码示例演示如何使用工作流宿主中的 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 功能。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>The code calls the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> after the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> creates a <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> instance and after it calls <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> to add services to the runtime.</source>
          <target state="translated">在 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> 创建了 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> 实例并在调用了 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 来向运行时添加服务后，代码将调用 <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>It also calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> before any other processing occurs.</source>
          <target state="translated">在进行其他任何处理之前，它还会调用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> sample.</source>
          <target state="translated">此代码示例摘自<bpt id="p1">[</bpt>取消工作流<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept>示例。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> 已释放。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>There is more than one service workflow <ph id="ph1">&lt;see langword="CommitWorkBatch" /&gt;</ph> service registered with this <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">工作流 <ph id="ph1">&lt;see langword="CommitWorkBatch" /&gt;</ph> 服务向此 <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> 注册了多个服务。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>There is more than one scheduler service registered with this <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">注册到此 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> 的计划程序服务有多个。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>There is more than one persistence service registered with this <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">注册到此 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> 的持久性服务有多个。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>Occurs when the workflow run-time engine is stopped.</source>
          <target state="translated">工作流运行时引擎停止后发生。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> method raises the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> event after it has invoked the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method implemented by each of its services that derive from the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> 方法在调用 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> 方法后引发 <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> 事件，所调用的方法由它派生自 <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> 类的每个服务实现。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>There is no guarantee about the order in which these workflow run-time engine services are stopped, and some of these services may need to preserve some functionality that is relied on by other services until they too are stopped.</source>
          <target state="translated">停止这些工作流运行时引擎服务的顺序并不固定，其中一些服务可能需要保留其他服务所依赖的一些功能，直到也停止这些服务。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>Such services can override the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=nameWithType&gt;</ph> method to perform any residual shutdown logic when the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> event is raised.</source>
          <target state="translated">引发 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=nameWithType&gt;</ph> 事件后，此类服务可重写 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> 方法，以执行任何剩余的关闭逻辑。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 处理事件，请参阅<bpt id="p1">[</bpt>使用事件<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>In the following example, an event handler is added to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated">在下面的示例中，将向 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> 的 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 事件添加一个事件处理程序。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>In this example, the handler is an anonymous method that prints a simple message to the console.</source>
          <target state="translated">在此示例中，处理程序是向控制台输出简单消息的匿名方法。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>Stops the workflow run-time engine and the run-time services.</source>
          <target state="translated">停止工作流运行时引擎和运行时服务。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>This method causes the workflow run-time engine to unload each of its workflow instances, stop all of its services that are derived from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class, set <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> to <ph id="ph3">`false`</ph>, and raise the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> event.</source>
          <target state="translated">此方法使工作流运行时引擎，若要卸载每个工作流实例，请停止所有派生自其服务<ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph>类中，设置<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph>到<ph id="ph3">`false`</ph>，并引发<ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>To shut down the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> gracefully, call <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> before you call <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph>.</source>
          <target state="translated">若要正常关闭 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>，请在调用 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> 之前调用 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">下面的代码示例演示如何使用工作流宿主中的 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 功能。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> is called after the host has completed all other processing associated with the runtime.</source>
          <target state="translated">在宿主完成其他所有与运行时关联的处理后，将调用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> sample.</source>
          <target state="translated">此代码示例摘自<bpt id="p1">[</bpt>取消工作流<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept>示例。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is already disposed of.</source>
          <target state="translated">已释放 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>Occurs when a workflow instance is aborted.</source>
          <target state="translated">在中止工作流实例时发生。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph> occurs after all pending work for the workflow instance is cleared, but before the workflow instance is invalidated in memory.</source>
          <target state="translated">在工作流实例的所有挂起工作被清除之后，但在内存中验证工作流实例之前，会发生 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>You can abort a workflow instance by calling <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">通过调用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=nameWithType&gt;</ph> 可以中止工作流实例。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>For this event, the sender contains the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">在此事件中，发送方包含 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>，而 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> 包含与事件关联的 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 处理事件，请参阅<bpt id="p1">[</bpt>使用事件<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">下面的代码示例演示如何使用工作流宿主中的 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 功能。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowAborted`</ph>.</source>
          <target state="translated">该代码将 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph> 与一个事件处理程序即一个名为 <ph id="ph2">`OnWorkflowAborted`</ph> 的方法相关联。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">此代码示例摘自<bpt id="p1">[</bpt>取消工作流<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept>示例。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source>Occurs when a workflow instance has completed.</source>
          <target state="translated">在完成工作流实例时发生。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> is raised after the workflow instance has completed but before the instance is invalidated in memory.</source>
          <target state="translated">在完成工作流实例之后，在内存中的实例失效之前，会引发 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowCompletedEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> and its output parameters.</source>
          <target state="translated">对于 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> 事件，发送方包含 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>，而 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowCompletedEventArgs&gt;</ph> 包含 <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 及其输出参数。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 处理事件，请参阅<bpt id="p1">[</bpt>使用事件<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">下面的代码示例演示如何使用工作流宿主中的 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 功能。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowCompleted`</ph>.</source>
          <target state="translated">该代码将 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> 与一个事件处理程序即一个名为 <ph id="ph2">`OnWorkflowCompleted`</ph> 的方法相关联。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> sample.</source>
          <target state="translated">此代码示例摘自<bpt id="p1">[</bpt>取消工作流<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept>示例。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>Occurs when a workflow instance is created.</source>
          <target state="translated">在创建工作流实例时发生。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>The workflow run-time engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated&gt;</ph> event after the workflow instance is completely constructed but before activities are processed.</source>
          <target state="translated">在完全构造工作流实例之后但在处理活动之前，工作流运行时引擎会引发 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>For this event, the sender contains the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">在此事件中，发送方包含 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>，而 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> 包含与事件关联的 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 处理事件，请参阅<bpt id="p1">[</bpt>使用事件<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">下面的代码示例演示如何使用工作流宿主中的 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 功能。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowCreated`</ph>.</source>
          <target state="translated">该代码将 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated&gt;</ph> 与一个事件处理程序即一个名为 <ph id="ph2">`OnWorkflowCreated`</ph> 的方法相关联。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=15735)</ept>.</source>
          <target state="translated">此代码示例摘自<bpt id="p1">[</bpt>自定义持久性服务示例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=15735)</ept>。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>Occurs when a workflow instance enters the idle state.</source>
          <target state="translated">在工作流实例进入空闲状态后发生。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>The workflow run-time engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> event when the workflow instance enters an idle state; for example, when the workflow is waiting for a <ph id="ph2">&lt;xref:System.Workflow.Activities.DelayActivity&gt;</ph> activity to complete.</source>
          <target state="translated">在工作流实例进入空闲状态后，工作流运行时引擎引发 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> 事件；例如，工作流在等待 <ph id="ph2">&lt;xref:System.Workflow.Activities.DelayActivity&gt;</ph> 活动完成时会引发该事件。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>For this event, the sender contains the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">在此事件中，发送方包含 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>，而 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> 包含与事件关联的 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 处理事件，请参阅<bpt id="p1">[</bpt>NIB： 使用事件<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">下面的代码示例演示如何使用工作流宿主中的 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 功能。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowIdled`</ph>.</source>
          <target state="translated">该代码将 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> 与一个事件处理程序即一个名为 <ph id="ph2">`OnWorkflowIdled`</ph> 的方法相关联。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">此代码示例摘自<bpt id="p1">[</bpt>取消工作流<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept>示例。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source>Occurs when the workflow instance is loaded into memory.</source>
          <target state="translated">将工作流实例加载到内存时发生。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> occurs after the persistence service has restored the workflow instance, but before the workflow run-time engine begins to execute any activities.</source>
          <target state="translated">在持久性服务存储工作流实例后与工作流运行时引擎开始执行任何活动前，会发生 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">对于 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> 事件，发送方包含 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>，而 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> 包含与事件关联的 <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 处理事件，请参阅<bpt id="p1">[</bpt>使用事件<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">下面的代码示例演示如何使用工作流宿主中的 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 功能。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowLoad`</ph>.</source>
          <target state="translated">该代码将 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> 与一个事件处理程序即一个名为 <ph id="ph2">`OnWorkflowLoad`</ph> 的方法相关联。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept> sample.</source>
          <target state="translated">此代码示例摘自<bpt id="p1">[</bpt>自定义持久性服务<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept>示例。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>Occurs when the state of a workflow instance is persisted.</source>
          <target state="translated">在保留工作流的状态时发生。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>The workflow instance can be persisted for many reasons.</source>
          <target state="translated">保留工作流状态的原因可能很多。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>For example, the host can call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType&gt;</ph> on a workflow instance, or the workflow run-time engine can persist a workflow instance because the instance is idle or because an atomic scope has completed.</source>
          <target state="translated">例如，宿主可能对工作流实例调用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType&gt;</ph>，或工作流运行时引擎可能由于实例变为空闲状态或完成原子作用域而保留工作流实例。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>If a persistence service is present in the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> is raised by the runtime after the state of the workflow instance is saved to memory.</source>
          <target state="translated">如果 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 中存在持久性服务，则在将工作流实例的状态保存到内存后，运行时会引发 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>If a persistence service is not present, the event is still raised but the instance state is not saved.</source>
          <target state="translated">如果不存在持久性服务，将仍然会引发该事件，但不会保存实例状态。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>If the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> event occurs because the workflow instance is being unloaded, it is followed by a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event.</source>
          <target state="translated">如果 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> 事件由于正在卸载工作流实例而发生，则 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> 事件将紧随其后发生。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">对于 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> 事件，发送方包含 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>，而 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> 包含与事件关联的 <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 处理事件，请参阅<bpt id="p1">[</bpt>使用事件<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>The following code example demonstrates how you can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">下面的代码示例演示如何使用工作流宿主中的 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 功能。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowPersisted`</ph>.</source>
          <target state="translated">该代码将 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> 与一个事件处理程序即一个名为 <ph id="ph2">`OnWorkflowPersisted`</ph> 的方法相关联。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=15735)</ept>.</source>
          <target state="translated">此代码示例摘自<bpt id="p1">[</bpt>自定义持久性服务示例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=15735)</ept>。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>Occurs when execution of a workflow instance is resumed following a suspension.</source>
          <target state="translated">在暂停后继续执行工作流实例时发生。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>The workflow run-time engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> event just before the workflow instance is scheduled.</source>
          <target state="translated">工作流运行时引擎恰好在计划工作流实例之前引发 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> event is usually raised because of an explicit call to <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> 事件通常是由于对 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType&gt;</ph> 的显式调用而引发的。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>However, the workflow run-time engine can temporarily suspend an instance to perform an operation, for example, to apply a workflow change.</source>
          <target state="translated">但是，工作流运行时引擎可能会暂时挂起实例以执行操作，例如，应用工作流更改。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> event is raised when the runtime resumes execution of the workflow instance following the operation.</source>
          <target state="translated">在这种情况下，当运行时引擎在该操作后恢复执行工作流实例时将引发 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">对于 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> 事件，发送方包含 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>，而 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> 包含与事件关联的 <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 处理事件，请参阅<bpt id="p1">[</bpt>使用事件<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>The following code example demonstrates how you can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">下面的代码示例演示如何使用工作流宿主中的 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 功能。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowResume`</ph>.</source>
          <target state="translated">该代码将 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> 与一个事件处理程序即一个名为 <ph id="ph2">`OnWorkflowResume`</ph> 的方法相关联。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>This code example is part of the <bpt id="p1">[</bpt>Suspend and Terminate Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157402)</ept>.</source>
          <target state="translated">此代码示例摘自<bpt id="p1">[</bpt>挂起和终止示例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157402)</ept>。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>Occurs when a workflow instance has been started.</source>
          <target state="translated">在启动工作流实例后发生。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>The workflow run-time engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted&gt;</ph> event after the workflow instance is started by scheduling the root activity for execution.</source>
          <target state="translated">通过计划要执行的根活动启动工作流实例后，工作流运行时引擎将引发 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>For this event, the sender contains the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">在此事件中，发送方包含 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>，而 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> 包含与事件关联的 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 处理事件，请参阅<bpt id="p1">[</bpt>使用事件<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">下面的代码示例演示如何使用工作流宿主中的 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 功能。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowStarted`</ph>.</source>
          <target state="translated">该代码将 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted&gt;</ph> 与一个事件处理程序即一个名为 <ph id="ph2">`OnWorkflowStarted`</ph> 的方法相关联。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>This code example is part of the <bpt id="p1">[</bpt>Host Communication Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157406)</ept>.</source>
          <target state="translated">此代码示例摘自<bpt id="p1">[</bpt>主机通信示例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157406)</ept>。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>Occurs when a workflow instance is suspended.</source>
          <target state="translated">在挂起工作流实例时发生。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>The workflow instance can be suspended by the host through a call to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A&gt;</ph> method, by a <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.SuspendActivity&gt;</ph> activity, or implicitly by the workflow run-time engine.</source>
          <target state="translated">工作流实例可由宿主通过调用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A&gt;</ph> 方法挂起，也可由 <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.SuspendActivity&gt;</ph> 活动或工作流运行时引擎隐式挂起。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>For example, the workflow run-time engine temporarily suspends the instance when it applies dynamic changes to the instance.</source>
          <target state="translated">例如，工作流运行时引擎在将动态更改应用于实例时暂时挂起实例。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> and a string that describes the reason the instance was suspended.</source>
          <target state="translated">对于 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph> 事件，发送方包含 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>，而 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;</ph> 包含 <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 以及一个说明挂起实例原因的字符串。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 处理事件，请参阅<bpt id="p1">[</bpt>使用事件<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">下面的代码示例演示如何使用工作流宿主中的 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 功能。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowSuspended`</ph>.</source>
          <target state="translated">该代码将 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph> 与一个事件处理程序即一个名为 <ph id="ph2">`OnWorkflowSuspended`</ph> 的方法相关联。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>This code example is part of the <bpt id="p1">[</bpt>Suspend and Terminate Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157402)</ept>.</source>
          <target state="translated">此代码示例摘自<bpt id="p1">[</bpt>挂起和终止示例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157402)</ept>。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>Occurs when a workflow instance is terminated.</source>
          <target state="translated">在终止工作流实例时发生。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>The workflow can be terminated by the host through a call to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> method, by a <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.TerminateActivity&gt;</ph> activity, or by the workflow run-time engine when an unhandled exception occurs.</source>
          <target state="translated">工作流可由宿主通过调用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> 方法来终止，也可由 <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.TerminateActivity&gt;</ph> 活动终止，或者在发生未处理的异常时由工作流运行时引擎终止。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>The workflow run-time engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> event after the workflow instance is terminated, but before it is invalidated in memory.</source>
          <target state="translated">在工作流实例终止之后但在内存中失效之前，工作流运行时引擎会引发 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> and information about the reason the instance was terminated in the <ph id="ph5">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">对于 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> 事件，发送方包含 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>，而 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;</ph> 包含 <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>，以及在 <ph id="ph5">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=nameWithType&gt;</ph> 属性中终止实例的原因的相关信息。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 处理事件，请参阅<bpt id="p1">[</bpt>使用事件<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">下面的代码示例演示如何使用工作流宿主中的 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 功能。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowCompleted`</ph>.</source>
          <target state="translated">该代码将 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> 与一个事件处理程序即一个名为 <ph id="ph2">`OnWorkflowCompleted`</ph> 的方法相关联。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">此代码示例摘自<bpt id="p1">[</bpt>取消工作流<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept>示例。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>Occurs when the workflow instance is unloaded from memory.</source>
          <target state="translated">从内存卸载工作流实例时发生。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>A workflow instance can be unloaded from memory by an explicit call to <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph>, or implicitly by the workflow run-time engine according to its own semantics.</source>
          <target state="translated">可以通过显式调用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> 从内存卸载工作流实例，也可以由工作流运行时引擎根据自身的语义来隐式卸载工作流实例。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>For example, the workflow run-time engine unloads a workflow instance if the instance becomes idle and the runtime has a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> added for which <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">例如，工作流运行时引擎卸载工作流实例，如果实例进入空闲状态且运行时具有<ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph>为其添加<ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A&gt;</ph>是<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>The workflow run-time engine raises the</source>
          <target state="translated">工作流运行时引擎引发</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event after the state of the workflow instance has been successfully persisted but before the instance is invalidated in memory.</source>
          <target state="translated">在工作流实例状态成功保留后与该实例在内存中失效前，会引发 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>Therefore, a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> event precedes the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event.</source>
          <target state="translated">因此，<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> 事件将在 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> 事件之前发生。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">对于 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> 事件，发送方包含 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>，而 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> 包含与事件关联的 <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 处理事件，请参阅<bpt id="p1">[</bpt>使用事件<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">下面的代码示例演示如何使用工作流宿主中的 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 功能。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowUnload`</ph>.</source>
          <target state="translated">该代码将 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> 与一个事件处理程序即一个名为 <ph id="ph2">`OnWorkflowUnload`</ph> 的方法相关联。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept>.</source>
          <target state="translated">此代码示例摘自<bpt id="p1">[</bpt>自定义持久性服务示例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>