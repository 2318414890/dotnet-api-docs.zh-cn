<Type Name="WorkflowRuntime" FullName="System.Workflow.Runtime.WorkflowRuntime">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d11faf9e8fb16c18bb2786abbf92657d38103c24" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37487983" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WorkflowRuntime : IDisposable, IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi WorkflowRuntime extends System.Object implements class System.IDisposable, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowRuntime" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowRuntime&#xA;Implements IDisposable, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowRuntime : IDisposable, IServiceProvider" />
  <TypeSignature Language="F#" Value="type WorkflowRuntime = class&#xA;    interface IServiceProvider&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f3c4c-101">Represents the configurable execution environment provided by the workflow run-time engine for workflows.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3c4c-101">Represents the configurable execution environment provided by the workflow run-time engine for workflows.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="f3c4c-102"><xref:System.Workflow.Runtime.WorkflowRuntime> 公开宿主应用程序和服务所需的功能来配置和控制工作流运行时引擎，并接收工作流运行时引擎及其任何工作流实例发生更改的通知。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-102"><xref:System.Workflow.Runtime.WorkflowRuntime> exposes functionality required by a host application and services to configure and control the workflow run-time engine and to be notified of changes to both the workflow run-time engine and any of its workflow instances.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-103">下面的代码示例演示如何使用工作流宿主中的 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-103">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="f3c4c-104">该代码示例演示如何使用 <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> 构造函数和 <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>、<xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> 和 <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-104">It provides examples of how to use the <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> constructor and the <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>, <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>, and <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> methods.</span></span> <span data-ttu-id="f3c4c-105">该代码还给出了建议采用的方法，即如何使用 <xref:System.Workflow.Runtime.WorkflowInstance> 方法在工作流宿主中创建 <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> 对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-105">The code also shows the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object in a workflow host using the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method.</span></span> <span data-ttu-id="f3c4c-106">它还演示如何为 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted>、<xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> 和 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> 事件设置事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-106">It also shows how to set event handlers for the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted>, <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled>, and <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> events.</span></span>  
  
 <span data-ttu-id="f3c4c-107">此代码示例摘自[取消工作流](http://go.microsoft.com/fwlink/?LinkID=157346)示例。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-107">This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="f3c4c-108">此类型是线程安全的。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3c4c-108">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f3c4c-109">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-109">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowRuntime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowRuntime();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3c4c-110">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-110">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-111"><xref:System.Workflow.Runtime.WorkflowRuntime> 是以默认属性值进行初始化的，包含默认的核心服务。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-111">The <xref:System.Workflow.Runtime.WorkflowRuntime> is initialized with the default property values and contains the default core services.</span></span> <span data-ttu-id="f3c4c-112">若要另外配置工作流运行时引擎，可以通过使用 <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> 和 <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> 来添加和移除服务，还可以设置 <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-112">To additionally configure the workflow run-time engine, you can add and remove services by using <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> and <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>, and you can set <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>.</span></span> <span data-ttu-id="f3c4c-113">配置 <xref:System.Workflow.Runtime.WorkflowRuntime> 后，调用 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> 以启动工作流运行时引擎及其服务。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-113">After the <xref:System.Workflow.Runtime.WorkflowRuntime> is configured, call <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> to start the workflow run-time engine and its services.</span></span>  
  
 <span data-ttu-id="f3c4c-114">下表显示 <xref:System.Workflow.Runtime.WorkflowRuntime> 类的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-114">The following table shows initial property values for an instance of <xref:System.Workflow.Runtime.WorkflowRuntime> class.</span></span>  
  
|<span data-ttu-id="f3c4c-115">属性</span><span class="sxs-lookup"><span data-stu-id="f3c4c-115">Property</span></span>|<span data-ttu-id="f3c4c-116">初始值</span><span class="sxs-lookup"><span data-stu-id="f3c4c-116">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>|<span data-ttu-id="f3c4c-117">"WorkflowRuntime"</span><span class="sxs-lookup"><span data-stu-id="f3c4c-117">"WorkflowRuntime"</span></span>|  
|<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>|`false`|  
  
 <span data-ttu-id="f3c4c-118">默认核心服务是 <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> 和 <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-118">The default core services are <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> and <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-119">下面的代码示例演示如何使用工作流宿主中的 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-119">The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="f3c4c-120">它提供了有关如何使用 <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> 构造函数来创建 <xref:System.Workflow.Runtime.WorkflowRuntime> 实例并访问其方法和事件的示例。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-120">It provides an example of how to use the <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> constructor to create an instance of a <xref:System.Workflow.Runtime.WorkflowRuntime> and access its methods and events.</span></span>  
  
 <span data-ttu-id="f3c4c-121">此代码示例摘自[取消工作流](http://go.microsoft.com/fwlink/?LinkID=157346)示例。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-121">This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowRuntime (string configSectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string configSectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configSectionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowRuntime(System::String ^ configSectionName);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Runtime.WorkflowRuntime : string -&gt; System.Workflow.Runtime.WorkflowRuntime" Usage="new System.Workflow.Runtime.WorkflowRuntime configSectionName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configSectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configSectionName">
          <span data-ttu-id="f3c4c-122">The name of a valid <see langword="workflowSettings" /> section in the application configuration file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-122">The name of a valid <see langword="workflowSettings" /> section in the application configuration file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3c4c-123">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> class by using the specified section of the application configuration file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-123">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> class by using the specified section of the application configuration file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-124">根据应用程序配置文件中的 <xref:System.Workflow.Runtime.WorkflowRuntime> 所指定节中的设置初始化的 `configSectionName`。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-124">The <xref:System.Workflow.Runtime.WorkflowRuntime> is initialized according to the settings in the section specified by `configSectionName` in the application configuration file.</span></span> <span data-ttu-id="f3c4c-125">`configSectionName` 必须对应于有效`workflowSettings`配置文件的部分。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-125">`configSectionName` must correspond to a valid `workflowSettings` section of a configuration file.</span></span>  
  
 <span data-ttu-id="f3c4c-126">当工作流运行时引擎配置通过使用应用程序配置文件时，它将加载并中列出的类型的类实例化`Services`配置文件的部分。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-126">When the workflow run-time engine is configured by using an application configuration file, it loads and instantiates classes of the types listed in the `Services` section of the configuration file.</span></span> <span data-ttu-id="f3c4c-127">工作流运行时引擎构造这些类时，将按以下顺序查找使用以下签名的类构造函数：</span><span class="sxs-lookup"><span data-stu-id="f3c4c-127">When the workflow run-time engine constructs these classes it looks for class constructors with the following signatures in the following order:</span></span>  
  
1.  <span data-ttu-id="f3c4c-128">Service(WorkflowRuntime 运行时,NameValueCollection 参数)</span><span class="sxs-lookup"><span data-stu-id="f3c4c-128">Service(WorkflowRuntime runtime, NameValueCollection parameters)</span></span>  
  
2.  <span data-ttu-id="f3c4c-129">Service(WorkflowRuntime 运行时)</span><span class="sxs-lookup"><span data-stu-id="f3c4c-129">Service(WorkflowRuntime runtime)</span></span>  
  
3.  <span data-ttu-id="f3c4c-130">Service(NameValueCollection 参数)</span><span class="sxs-lookup"><span data-stu-id="f3c4c-130">Service(NameValueCollection parameters)</span></span>  
  
4.  <span data-ttu-id="f3c4c-131">Service()</span><span class="sxs-lookup"><span data-stu-id="f3c4c-131">Service()</span></span>  
  
 <span data-ttu-id="f3c4c-132">从配置文件加载的所有服务类至少必须实现这些构造函数签名之一。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-132">All service classes that are loaded from a configuration file must implement at least one of these constructor signatures.</span></span>  
  
 <span data-ttu-id="f3c4c-133">有关详细信息，请参阅<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-133">For more information, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3c4c-134">
            <paramref name="configSectionName" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-134">
              <paramref name="configSectionName" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f3c4c-135">A valid <see langword="workflowSettings" /> section could not be found in the application configuration file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-135">A valid <see langword="workflowSettings" /> section could not be found in the application configuration file.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3c4c-136">A <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> already exists for this application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-136">A <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> already exists for this application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowRuntime (System.Workflow.Runtime.Configuration.WorkflowRuntimeSection settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Workflow.Runtime.Configuration.WorkflowRuntimeSection settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (settings As WorkflowRuntimeSection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowRuntime(System::Workflow::Runtime::Configuration::WorkflowRuntimeSection ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Runtime.WorkflowRuntime : System.Workflow.Runtime.Configuration.WorkflowRuntimeSection -&gt; System.Workflow.Runtime.WorkflowRuntime" Usage="new System.Workflow.Runtime.WorkflowRuntime settings" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" />
      </Parameters>
      <Docs>
        <param name="settings">
          <span data-ttu-id="f3c4c-137">A <see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-137">A <see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3c4c-138">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> class by using the settings in the specified <see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-138">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> class by using the settings in the specified <see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-139">此构造函数提供了一个机制，可对不使用应用程序配置文件的宿主使用单一方法调用来配置工作流运行时引擎。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-139">This constructor provides a mechanism to configure the workflow run-time engine using a single method call for hosts that do not use an application configuration file.</span></span> <span data-ttu-id="f3c4c-140">不使用应用程序配置文件的原因很多。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-140">There are many reasons for not using the application configuration file.</span></span> <span data-ttu-id="f3c4c-141">宿主可以在不允许使用配置文件的环境中运行，例如在受信任环境中由于安全原因不允许从应用程序配置文件读取数据。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-141">A host can run in an environment that does not allow using configuration files; for example, in trusted environments that do not allow reading from the application configuration file for security reasons.</span></span> <span data-ttu-id="f3c4c-142">此外，宿主可以使用专有的配置机制；例如，宿主可以将工作流运行时引擎的配置设置存储在 SQL 数据库中。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-142">Also, a host can use a proprietary configuration mechanism; for example, the host can store the workflow run-time engine configuration settings in a SQL database.</span></span>  
  
 <span data-ttu-id="f3c4c-143">工作流运行时引擎将会加载 <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=nameWithType> 中所含类型的类并将其实例化。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-143">The workflow run-time engine loads and instantiates classes of the types contained in <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f3c4c-144">工作流运行时引擎构造这些类时，将按以下顺序查找使用以下签名的类构造函数：</span><span class="sxs-lookup"><span data-stu-id="f3c4c-144">When the workflow run-time engine constructs these classes it looks for class constructors with the following signatures in the following order:</span></span>  
  
1.  <span data-ttu-id="f3c4c-145">Service(WorkflowRuntime 运行时,NameValueCollection 参数)</span><span class="sxs-lookup"><span data-stu-id="f3c4c-145">Service(WorkflowRuntime runtime, NameValueCollection parameters)</span></span>  
  
2.  <span data-ttu-id="f3c4c-146">Service(WorkflowRuntime 运行时)</span><span class="sxs-lookup"><span data-stu-id="f3c4c-146">Service(WorkflowRuntime runtime)</span></span>  
  
3.  <span data-ttu-id="f3c4c-147">Service(NameValueCollection 参数)</span><span class="sxs-lookup"><span data-stu-id="f3c4c-147">Service(NameValueCollection parameters)</span></span>  
  
4.  <span data-ttu-id="f3c4c-148">Service()</span><span class="sxs-lookup"><span data-stu-id="f3c4c-148">Service()</span></span>  
  
 <span data-ttu-id="f3c4c-149">`settings` 中指定的所有服务类至少必须实现这些构造函数签名之一。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-149">All service classes that are specified in `settings` must implement at least one of these constructor signatures.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3c4c-150">
            <paramref name="settings" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-150">
              <paramref name="settings" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3c4c-151">A <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> already exists for this application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-151">A <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> already exists for this application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddService">
      <MemberSignature Language="C#" Value="public void AddService (object service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddService(object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddService (service As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddService(System::Object ^ service);" />
      <MemberSignature Language="F#" Value="member this.AddService : obj -&gt; unit" Usage="workflowRuntime.AddService service" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="service">
          <span data-ttu-id="f3c4c-152">An object that represents the service to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-152">An object that represents the service to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3c4c-153">Adds the specified service to the workflow run-time engine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-153">Adds the specified service to the workflow run-time engine.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-154">通过添加核心服务可以配置工作流运行时引擎。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-154">You can configure the workflow run-time engine by adding core services.</span></span> <span data-ttu-id="f3c4c-155">核心服务是派生自以下任一服务基类的服务：<xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> 类、<xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> 类、<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> 类和 <xref:System.Workflow.Runtime.Tracking.TrackingService> 类。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-155">Core services are those that derive from any of the following service base classes: the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class, and the <xref:System.Workflow.Runtime.Tracking.TrackingService> class.</span></span>  <span data-ttu-id="f3c4c-156">工作流运行时引擎未运行; 时，可以仅添加核心服务也就是说，当<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>是`false`。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-156">Core services can only be added when the workflow run-time engine is not running; that is, when <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> is `false`.</span></span> <span data-ttu-id="f3c4c-157"><xref:System.Workflow.Runtime.WorkflowRuntime> 也可以用作存储其他服务的容器，其他工作流或宿主上运行的应用程序可能会使用这些服务。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-157">The <xref:System.Workflow.Runtime.WorkflowRuntime> can also be used as a storage container for other services that can be used by other workflows or by applications running on a host.</span></span> <span data-ttu-id="f3c4c-158">如果您在工作流运行时引擎启动后添加派生自 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 类的非核心服务，则 <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> 将会调用该服务实现的 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-158">If you add a non-core service that derives from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class after the workflow run-time engine has been started, <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> calls the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> method implemented by that service.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3c4c-159"><xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> 有一些限制，即不能将同一 <xref:System.Type> 的两个服务添加到 <xref:System.Workflow.Runtime.WorkflowRuntime>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-159"><xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> enforces the restriction that no two services of the same <xref:System.Type> can be added to the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span> <span data-ttu-id="f3c4c-160">但是，您可以添加派生自相同基类的多个服务。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-160">However, you can add multiple services that derive from the same base class.</span></span>  <span data-ttu-id="f3c4c-161">从 <xref:System.Workflow.Runtime.WorkflowRuntime> 中的以下每个服务基类只能派生一个服务：<xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> 类、<xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> 类和 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> 类。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-161">There can be only one service derived from each of the following service base classes in the <xref:System.Workflow.Runtime.WorkflowRuntime>: the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> class, and the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class.</span></span>  <span data-ttu-id="f3c4c-162">如果您添加了派生自其中一个类的多个服务（例如两个持久性服务），则 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> 将引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-162">If you add multiple services derived from one of these classes, for example two persistence services, <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-163">下面的代码示例演示如何使用工作流宿主中的 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-163">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="f3c4c-164">它提供了有关如何使用 <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> 方法向工作流运行时引擎添加 <xref:System.Workflow.Activities.ExternalDataExchangeService> 和 <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> 的示例。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-164">It provides example of how to use the <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> method to add an <xref:System.Workflow.Activities.ExternalDataExchangeService> and <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> to the workflow run-time engine.</span></span>  
  
 <span data-ttu-id="f3c4c-165">此代码示例摘自[取消工作流](http://go.microsoft.com/fwlink/?LinkId=157346)示例。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-165">This code example is part of the [Cancelling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3c4c-166">
            <paramref name="service" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-166">
              <paramref name="service" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3c4c-167">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-167">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3c4c-168">
            <paramref name="service" /> is already registered with the workflow run-time engine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-168">
              <paramref name="service" /> is already registered with the workflow run-time engine.</span>
          </span>
          <span data-ttu-id="f3c4c-169">-or-  <paramref name="service" /> is a core service and the workflow run-time engine is already running (<see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /> is <see langword="true" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-169">-or-  <paramref name="service" /> is a core service and the workflow run-time engine is already running (<see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /> is <see langword="true" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateWorkflow">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f3c4c-170">Creates a workflow instance by using the specified parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-170">Creates a workflow instance by using the specified parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-171">如果未启动工作流运行时引擎，<xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> 方法将调用 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-171">If the workflow run-time engine has not been started, the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> methods call <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>.</span></span> <span data-ttu-id="f3c4c-172">有关可能的异常的列表，请参见 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-172">See <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> for a list of possible exceptions.</span></span> <span data-ttu-id="f3c4c-173">创建工作流实例后，请对 <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A?displayProperty=nameWithType> 方法返回的 <xref:System.Workflow.Runtime.WorkflowInstance> 对象调用 <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> 以开始执行此实例。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-173">After you create the workflow instance, call <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A?displayProperty=nameWithType> on the <xref:System.Workflow.Runtime.WorkflowInstance> object returned by the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method to begin its execution.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Type workflowType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowType As Type) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(Type ^ workflowType);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflow : Type -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.CreateWorkflow workflowType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="workflowType">
          <span data-ttu-id="f3c4c-174">The <see cref="T:System.Type" /> of the workflow to create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-174">The <see cref="T:System.Type" /> of the workflow to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3c4c-175">Creates a new workflow instance by using the specified workflow <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-175">Creates a new workflow instance by using the specified workflow <see cref="T:System.Type" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3c4c-176">The created workflow instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-176">The created workflow instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-177">在创建 <xref:System.Workflow.Runtime.WorkflowInstance> 之前，会对其执行验证。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-177">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="f3c4c-178">如果出现任何验证错误，则会引发 <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-178">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="f3c4c-179">这对简单的方案很有用，但在服务器环境中，在每次激活时重新验证工作流可能会增加不必要的系统开销。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-179">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="f3c4c-180">有关禁用验证的详细信息，请参阅<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-180">For more information about disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-181">下面的代码示例演示如何使用 <xref:System.Workflow.Runtime.WorkflowInstance> 方法在工作流宿主中创建 <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> 对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-181">The following code example demonstrates the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object in a workflow host using the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method.</span></span>  
  
 <span data-ttu-id="f3c4c-182">此代码示例摘自[取消工作流](http://go.microsoft.com/fwlink/?LinkID=157346)示例。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-182">This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#260](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#260)]
 [!code-vb[WF_Samples#260](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#260)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3c4c-183">
            <paramref name="workflowType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-183">
              <paramref name="workflowType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Xml.XmlReader workflowDefinitionReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowDefinitionReader As XmlReader) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(System::Xml::XmlReader ^ workflowDefinitionReader);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflow : System.Xml.XmlReader -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.CreateWorkflow workflowDefinitionReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowDefinitionReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="workflowDefinitionReader">
          <span data-ttu-id="f3c4c-184">An <see cref="T:System.Xml.XmlReader" /> that contains the workflow definition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-184">An <see cref="T:System.Xml.XmlReader" /> that contains the workflow definition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3c4c-185">Creates a workflow instance by using the specified <see cref="T:System.Xml.XmlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-185">Creates a workflow instance by using the specified <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3c4c-186">The created workflow instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-186">The created workflow instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-187">该工作流实例是根据 <xref:System.Xml.XmlReader> 引用的 XAML 工作流定义文件创建的。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-187">The workflow instance is created from a XAML workflow definition file referenced by the <xref:System.Xml.XmlReader>.</span></span>  
  
 <span data-ttu-id="f3c4c-188">在创建 <xref:System.Workflow.Runtime.WorkflowInstance> 之前，会对其执行验证。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-188">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="f3c4c-189">如果出现任何验证错误，则会引发 <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-189">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="f3c4c-190">这对简单的方案很有用，但在服务器环境中，在每次激活时重新验证工作流可能会增加不必要的系统开销。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-190">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="f3c4c-191">有关禁用验证的详细信息，请参阅<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-191">For more information about disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-192">下面的示例演示如何在给定基于 XAML 的工作流定义的情况下创建工作流。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-192">The following example demonstrates how to create a workflow given a XAML-based workflow definition.</span></span>  
  
```  
static void Main(string[] args)  
{  
    using (WorkflowRuntime workflowRuntime = new WorkflowRuntime())  
    {  
        AutoResetEvent waitHandle = new AutoResetEvent(false);  
        workflowRuntime.WorkflowCompleted += delegate(object sender, WorkflowCompletedEventArgs e)  
        {  
            waitHandle.Set();  
        };  
        workflowRuntime.WorkflowTerminated += delegate(object sender, WorkflowTerminatedEventArgs e)  
        {  
            Console.WriteLine(e.Exception.Message);  
            waitHandle.Set();  
        };  
  
        TypeProvider typeProvider = new TypeProvider(null);  
        // Add referenced assemblies, if needed  
        // typeProvider.AddAssembly(...);  
        workflowRuntime.AddService(typeProvider);  
  
        using (XmlReader reader = XmlReader.Create("Workflow1.xoml"))  
        {  
            WorkflowInstance instance = workflowRuntime.CreateWorkflow(reader);  
            instance.Start();  
        }  
  
        waitHandle.WaitOne();  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3c4c-193">
            <paramref name="workflowDefinitionReader" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-193">
              <paramref name="workflowDefinitionReader" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3c4c-194">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-194">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType, System.Collections.Generic.Dictionary&lt;string,object&gt; namedArgumentValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Type workflowType, class System.Collections.Generic.Dictionary`2&lt;string, object&gt; namedArgumentValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowType As Type, namedArgumentValues As Dictionary(Of String, Object)) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(Type ^ workflowType, System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ namedArgumentValues);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflow : Type * System.Collections.Generic.Dictionary&lt;string, obj&gt; -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.CreateWorkflow (workflowType, namedArgumentValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="namedArgumentValues" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="workflowType">
          <span data-ttu-id="f3c4c-195">The <see cref="T:System.Type" /> of the workflow to create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-195">The <see cref="T:System.Type" /> of the workflow to create.</span>
          </span>
        </param>
        <param name="namedArgumentValues">
          <span data-ttu-id="f3c4c-196">A <see cref="T:System.Collections.Generic.Dictionary`2" /> of objects keyed by string that represents the arguments to the workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-196">A <see cref="T:System.Collections.Generic.Dictionary`2" /> of objects keyed by string that represents the arguments to the workflow.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3c4c-197">Creates a workflow instance by using the specified workflow <see cref="T:System.Type" /> and the arguments to the workflow contained in the specified <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-197">Creates a workflow instance by using the specified workflow <see cref="T:System.Type" /> and the arguments to the workflow contained in the specified <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3c4c-198">The created workflow instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-198">The created workflow instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-199">在创建 <xref:System.Workflow.Runtime.WorkflowInstance> 之前，会对其执行验证。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-199">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="f3c4c-200">如果出现任何验证错误，则会引发 <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-200">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="f3c4c-201">这对简单的方案很有用，但在服务器环境中，在每次激活时重新验证工作流可能会增加不必要的系统开销。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-201">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="f3c4c-202">有关禁用验证的详细信息，请参阅<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-202">For more information about disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
 <span data-ttu-id="f3c4c-203">有关将参数传入的示例`CreateWorkflow`，请参阅[具有参数示例的工作流](http://go.microsoft.com/fwlink/?LinkId=157403)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-203">For an example of passing in parameters to `CreateWorkflow`, see [Workflow with Parameters Sample](http://go.microsoft.com/fwlink/?LinkId=157403).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3c4c-204">
            <paramref name="workflowType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-204">
              <paramref name="workflowType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType, System.Collections.Generic.Dictionary&lt;string,object&gt; namedArgumentValues, Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Type workflowType, class System.Collections.Generic.Dictionary`2&lt;string, object&gt; namedArgumentValues, valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowType As Type, namedArgumentValues As Dictionary(Of String, Object), instanceId As Guid) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(Type ^ workflowType, System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ namedArgumentValues, Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflow : Type * System.Collections.Generic.Dictionary&lt;string, obj&gt; * Guid -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.CreateWorkflow (workflowType, namedArgumentValues, instanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="namedArgumentValues" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="workflowType">
          <span data-ttu-id="f3c4c-205">The <see cref="T:System.Type" /> of the workflow to create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-205">The <see cref="T:System.Type" /> of the workflow to create.</span>
          </span>
        </param>
        <param name="namedArgumentValues">
          <span data-ttu-id="f3c4c-206">A <see cref="T:System.Collections.Generic.Dictionary`2" /> of objects keyed by a string that represents the arguments to the workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-206">A <see cref="T:System.Collections.Generic.Dictionary`2" /> of objects keyed by a string that represents the arguments to the workflow.</span>
          </span>
        </param>
        <param name="instanceId">
          <span data-ttu-id="f3c4c-207">The <see cref="T:System.Guid" /> of the specific <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> to create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-207">The <see cref="T:System.Guid" /> of the specific <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3c4c-208">Creates a workflow instance by using the specified parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-208">Creates a workflow instance by using the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3c4c-209">The created workflow instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-209">The created workflow instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-210">在创建 <xref:System.Workflow.Runtime.WorkflowInstance> 之前，会对其执行验证。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-210">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="f3c4c-211">如果出现任何验证错误，则会引发 <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-211">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="f3c4c-212">这对简单的方案很有用，但在服务器环境中，在每次激活时重新验证工作流可能会增加不必要的系统开销。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-212">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="f3c4c-213">有关禁用验证的详细信息，请参阅<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-213">For more information about disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
 <span data-ttu-id="f3c4c-214">由 `instanceId` 加载的任何运行工作流的工作流 <xref:System.Workflow.Runtime.WorkflowRuntime> 必须具有唯一性。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-214">The workflow `instanceId` for any running workflows loaded by the <xref:System.Workflow.Runtime.WorkflowRuntime> must be unique.</span></span> <span data-ttu-id="f3c4c-215">如果您要传递一个 `instanceId` 来创建工作流，而某个运行中的工作流已在使用该 `instanceId`，将会引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-215">If you pass an `instanceId` to create a workflow and a running workflow is already using that `instanceId`, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 <span data-ttu-id="f3c4c-216">有关将参数传入的示例`CreateWorkflow`，请参阅[具有参数示例的工作流](http://go.microsoft.com/fwlink/?LinkID=157403)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-216">For an example of passing in parameters to `CreateWorkflow`, see [Workflow with Parameters Sample](http://go.microsoft.com/fwlink/?LinkID=157403).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3c4c-217">
            <paramref name="workflowType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-217">
              <paramref name="workflowType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader, System.Xml.XmlReader rulesReader, System.Collections.Generic.Dictionary&lt;string,object&gt; namedArgumentValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Xml.XmlReader workflowDefinitionReader, class System.Xml.XmlReader rulesReader, class System.Collections.Generic.Dictionary`2&lt;string, object&gt; namedArgumentValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowDefinitionReader As XmlReader, rulesReader As XmlReader, namedArgumentValues As Dictionary(Of String, Object)) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(System::Xml::XmlReader ^ workflowDefinitionReader, System::Xml::XmlReader ^ rulesReader, System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ namedArgumentValues);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflow : System.Xml.XmlReader * System.Xml.XmlReader * System.Collections.Generic.Dictionary&lt;string, obj&gt; -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.CreateWorkflow (workflowDefinitionReader, rulesReader, namedArgumentValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowDefinitionReader" Type="System.Xml.XmlReader" />
        <Parameter Name="rulesReader" Type="System.Xml.XmlReader" />
        <Parameter Name="namedArgumentValues" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="workflowDefinitionReader">
          <span data-ttu-id="f3c4c-218">An <see cref="T:System.Xml.XmlReader" /> that contains the workflow definition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-218">An <see cref="T:System.Xml.XmlReader" /> that contains the workflow definition.</span>
          </span>
        </param>
        <param name="rulesReader">
          <span data-ttu-id="f3c4c-219">An <see cref="T:System.Xml.XmlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-219">An <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </param>
        <param name="namedArgumentValues">
          <span data-ttu-id="f3c4c-220">A <see cref="T:System.Collections.Generic.Dictionary`2" /> of objects keyed by a string that represents the arguments to the workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-220">A <see cref="T:System.Collections.Generic.Dictionary`2" /> of objects keyed by a string that represents the arguments to the workflow.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3c4c-221">Creates a workflow instance by using the specified <see cref="T:System.Xml.XmlReader" /> objects and the arguments contained in the specified <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-221">Creates a workflow instance by using the specified <see cref="T:System.Xml.XmlReader" /> objects and the arguments contained in the specified <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3c4c-222">The created workflow instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-222">The created workflow instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-223">该工作流实例是根据 <xref:System.Xml.XmlReader> 引用的工作流定义和 `namedArgumentValues` 提供的参数创建的。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-223">The workflow instance is created from the workflow definition referenced by the <xref:System.Xml.XmlReader> and the arguments supplied by `namedArgumentValues`.</span></span>  
  
 <span data-ttu-id="f3c4c-224">在创建 <xref:System.Workflow.Runtime.WorkflowInstance> 之前，会对其执行验证。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-224">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="f3c4c-225">如果出现任何验证错误，则会引发 <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-225">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="f3c4c-226">这对简单的方案很有用，但在服务器环境中，在每次激活时重新验证工作流可能会增加不必要的系统开销。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-226">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="f3c4c-227">有关禁用验证的详细信息，请参阅<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-227">For more information about disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
 <span data-ttu-id="f3c4c-228">有关将参数传入的示例`CreateWorkflow`，请参阅[具有参数示例的工作流](http://go.microsoft.com/fwlink/?LinkID=157403)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-228">For an example of passing in parameters to `CreateWorkflow`, see [Workflow with Parameters Sample](http://go.microsoft.com/fwlink/?LinkID=157403).</span></span>  
  
 <span data-ttu-id="f3c4c-229">使用在 XML 中定义的规则的示例，请参阅[带规则示例的 IfElse](http://go.microsoft.com/fwlink/?LinkId=157404)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-229">For an example of using rules defined in XML, see [IfElse with Rules Sample](http://go.microsoft.com/fwlink/?LinkId=157404).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3c4c-230">
            <paramref name="workflowDefinitionReader" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-230">
              <paramref name="workflowDefinitionReader" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3c4c-231">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-231">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader, System.Xml.XmlReader rulesReader, System.Collections.Generic.Dictionary&lt;string,object&gt; namedArgumentValues, Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Xml.XmlReader workflowDefinitionReader, class System.Xml.XmlReader rulesReader, class System.Collections.Generic.Dictionary`2&lt;string, object&gt; namedArgumentValues, valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowDefinitionReader As XmlReader, rulesReader As XmlReader, namedArgumentValues As Dictionary(Of String, Object), instanceId As Guid) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(System::Xml::XmlReader ^ workflowDefinitionReader, System::Xml::XmlReader ^ rulesReader, System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ namedArgumentValues, Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflow : System.Xml.XmlReader * System.Xml.XmlReader * System.Collections.Generic.Dictionary&lt;string, obj&gt; * Guid -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.CreateWorkflow (workflowDefinitionReader, rulesReader, namedArgumentValues, instanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowDefinitionReader" Type="System.Xml.XmlReader" />
        <Parameter Name="rulesReader" Type="System.Xml.XmlReader" />
        <Parameter Name="namedArgumentValues" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="workflowDefinitionReader">
          <span data-ttu-id="f3c4c-232">An <see cref="T:System.Xml.XmlReader" /> that contains the workflow definition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-232">An <see cref="T:System.Xml.XmlReader" /> that contains the workflow definition.</span>
          </span>
        </param>
        <param name="rulesReader">
          <span data-ttu-id="f3c4c-233">An <see cref="T:System.Xml.XmlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-233">An <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </param>
        <param name="namedArgumentValues">
          <span data-ttu-id="f3c4c-234">A <see cref="T:System.Collections.Generic.Dictionary`2" /> of objects keyed by a string that represents the arguments to the workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-234">A <see cref="T:System.Collections.Generic.Dictionary`2" /> of objects keyed by a string that represents the arguments to the workflow.</span>
          </span>
        </param>
        <param name="instanceId">
          <span data-ttu-id="f3c4c-235">The <see cref="T:System.Guid" /> of the specific <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> to create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-235">The <see cref="T:System.Guid" /> of the specific <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3c4c-236">Creates a workflow instance by using the specified parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-236">Creates a workflow instance by using the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3c4c-237">The created workflow instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-237">The created workflow instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-238">在创建 <xref:System.Workflow.Runtime.WorkflowInstance> 之前，会对其执行验证。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-238">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="f3c4c-239">如果出现任何验证错误，则会引发 <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-239">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="f3c4c-240">这对简单的方案很有用，但在服务器环境中，在每次激活时重新验证工作流可能会增加不必要的系统开销。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-240">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="f3c4c-241">有关禁用验证的详细信息，请参阅<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-241">For more information about disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
 <span data-ttu-id="f3c4c-242">由 `instanceId` 加载的任何运行工作流的工作流 <xref:System.Workflow.Runtime.WorkflowRuntime> 必须具有唯一性。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-242">The workflow `instanceId` for any running workflows loaded by the <xref:System.Workflow.Runtime.WorkflowRuntime> must be unique.</span></span> <span data-ttu-id="f3c4c-243">如果您要传递一个 `instanceId` 来创建工作流，而某个运行中的工作流已在使用该 `instanceId`，将会引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-243">If you pass an `instanceId` to create a workflow and a running workflow is already using that `instanceId`, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 <span data-ttu-id="f3c4c-244">有关将参数传入的示例`CreateWorkflow`，请参阅[具有参数示例的工作流](http://go.microsoft.com/fwlink/?LinkID=157403)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-244">For an example of passing in parameters to `CreateWorkflow`, see [Workflow with Parameters Sample](http://go.microsoft.com/fwlink/?LinkID=157403).</span></span>  
  
 <span data-ttu-id="f3c4c-245">使用在 XML 中定义的规则的示例，请参阅[带规则示例的 IfElse](http://go.microsoft.com/fwlink/?LinkID=157404)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-245">For an example of using rules defined in XML, see [IfElse with Rules Sample](http://go.microsoft.com/fwlink/?LinkID=157404).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3c4c-246">
            <paramref name="workflowType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-246">
              <paramref name="workflowType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="workflowRuntime.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3c4c-247">Releases the resources used by the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-247">Releases the resources used by the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-248">若要正常关闭 <xref:System.Workflow.Runtime.WorkflowRuntime>，应仅在调用 <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> 之后才调用 <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-248">To shut down the <xref:System.Workflow.Runtime.WorkflowRuntime> gracefully, you should only call <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> after you have called <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>.</span></span> <span data-ttu-id="f3c4c-249">这是因为单独调用 <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> 方法会使 <xref:System.Workflow.Runtime.WorkflowRuntime> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-249">This is because calling the <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> method alone leaves the <xref:System.Workflow.Runtime.WorkflowRuntime> in an unusable state.</span></span> <span data-ttu-id="f3c4c-250"><xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> 通过关闭文件句柄、数据库连接等来释放运行时占用的资源，但它不会卸载工作流实例、停止服务或执行 <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> 所执行的任何其他操作。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-250"><xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> frees the resources used by the runtime by closing open file handles, database connections, and so on, but it does not unload workflow instances, stop services, or do any of the other actions that <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> does.</span></span>  
  
 <span data-ttu-id="f3c4c-251">只有当宿主应用程序必须在垃圾收集器自动释放 <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> 使用的资源前释放这些资源时，才应调用 <xref:System.Workflow.Runtime.WorkflowRuntime>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-251"><xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> should be called only when the host application must free the resources used by the <xref:System.Workflow.Runtime.WorkflowRuntime> before they are automatically freed by the garbage collector.</span></span> <span data-ttu-id="f3c4c-252">有关常规信息<xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>，请参阅[注册非托管资源清理](~/docs/standard/garbage-collection/unmanaged.md)并[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-252">For general information about <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-253">下面的示例演示如何对 <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> 对象调用 <xref:System.Workflow.Runtime.WorkflowRuntime>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-253">The following example demonstrates how to call <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> on a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span> <span data-ttu-id="f3c4c-254">在此示例中，将会针对应用程序的主窗体从 FormClosing 事件处理程序中调用 <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> 方法；这可确保在应用程序关闭时正确清理运行时创建的对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-254">In this sample, the <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> method is called from the FormClosing event handler for the main form of the application; this ensures that the objects created by the runtime are properly cleaned up when the application shuts down.</span></span> <span data-ttu-id="f3c4c-255">此示例摘自[语音应用程序示例](http://go.microsoft.com/fwlink/?LinkId=157405)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-255">This sample is from the [Speech Application Sample](http://go.microsoft.com/fwlink/?LinkId=157405).</span></span>  
  
 [!code-csharp[WF_Samples#108](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#108)]
 [!code-vb[WF_Samples#108](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#108)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllServices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;object&gt; GetAllServices (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;object&gt; GetAllServices(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllServices (serviceType As Type) As ReadOnlyCollection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Object ^&gt; ^ GetAllServices(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="member this.GetAllServices : Type -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;obj&gt;" Usage="workflowRuntime.GetAllServices serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="f3c4c-256">The <see cref="T:System.Type" /> that services must implement to be returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-256">The <see cref="T:System.Type" /> that services must implement to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3c4c-257">Retrieves all the services that are added to the workflow run-time engine that implement or derive from the specified <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-257">Retrieves all the services that are added to the workflow run-time engine that implement or derive from the specified <see cref="T:System.Type" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3c4c-258">Services that implement or derive from the specified <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-258">Services that implement or derive from the specified <see cref="T:System.Type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-259">空 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 表示没有向工作流运行时引擎添加实现或派生自指定的 <xref:System.Type> 的服务。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-259">An empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> indicates that no services that implement or derive from the specified <xref:System.Type> have been added to the workflow run-time engine.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-260">下面的示例演示如何从 <xref:System.Workflow.Runtime.WorkflowRuntime> 对象中检索给定类型的所有服务。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-260">The following example demonstrates how to retrieve all services of a given type from a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span>  
  
 [!code-csharp[WF_Samples#19](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#19)]
 [!code-vb[WF_Samples#19](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3c4c-261">
            <paramref name="serviceType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-261">
              <paramref name="serviceType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3c4c-262">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-262">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllServices&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; GetAllServices&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!!T&gt; GetAllServices&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllServices(Of T) () As ReadOnlyCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt; ^ GetAllServices();" />
      <MemberSignature Language="F#" Value="member this.GetAllServices : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;'T&gt;" Usage="workflowRuntime.GetAllServices " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f3c4c-263">服务类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-263">The service type.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="f3c4c-264">Retrieves all the services that are added to the workflow run-time engine that implement or derive from the specified generic type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-264">Retrieves all the services that are added to the workflow run-time engine that implement or derive from the specified generic type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3c4c-265">Services that implement or derive from the specified generic type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-265">Services that implement or derive from the specified generic type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-266">空 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 表示没有向工作流运行时引擎添加实现或派生自指定泛型类型的服务。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-266">An empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> indicates that no services have been added to the workflow run-time engine that implement or derive from the specified generic type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-267">下面的示例演示如何从 <xref:System.Workflow.Runtime.WorkflowRuntime> 对象中检索给定类型的所有服务。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-267">The following example demonstrates how to retrieve all services of a given type from a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span>  
  
 [!code-csharp[WF_Samples#6](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#6)]
 [!code-vb[WF_Samples#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3c4c-268">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-268">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLoadedWorkflows">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowInstance&gt; GetLoadedWorkflows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.Runtime.WorkflowInstance&gt; GetLoadedWorkflows() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLoadedWorkflows () As ReadOnlyCollection(Of WorkflowInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::Runtime::WorkflowInstance ^&gt; ^ GetLoadedWorkflows();" />
      <MemberSignature Language="F#" Value="member this.GetLoadedWorkflows : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowInstance&gt;" Usage="workflowRuntime.GetLoadedWorkflows " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3c4c-269">Gets a collection that contains all the workflow instances currently loaded in memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-269">Gets a collection that contains all the workflow instances currently loaded in memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3c4c-270">A <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> object for each workflow instance currently loaded in memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-270">A <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> object for each workflow instance currently loaded in memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-271">请注意，与 <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> 不同，在运行时未启动的情况下，此方法不会引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-271">Note that, unlike <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A>, this method does not throw a <xref:System.InvalidOperationException> if the runtime is not started.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-272">下面的示例演示如何从 <xref:System.Workflow.Runtime.WorkflowRuntime> 对象中检索已加载工作流的集合。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-272">The following example demonstrates how to retrieve a collection of loaded workflows from a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span>  
  
 [!code-csharp[WF_Samples#18](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#18)]
 [!code-vb[WF_Samples#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3c4c-273">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-273">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="workflowRuntime.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="f3c4c-274">The <see cref="T:System.Type" /> of the service to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-274">The <see cref="T:System.Type" /> of the service to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3c4c-275">Retrieves a service of the specified <see cref="T:System.Type" /> from the workflow run-time engine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-275">Retrieves a service of the specified <see cref="T:System.Type" /> from the workflow run-time engine.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3c4c-276">The service of the specified <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-276">The service of the specified <see cref="T:System.Type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-277">如果存在多个指定的 <xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A> 的服务，则 <xref:System.InvalidOperationException> 将引发 <xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-277"><xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A> throws an <xref:System.InvalidOperationException> if more than one service exists for the specified <xref:System.Type>.</span></span> <span data-ttu-id="f3c4c-278">因此，如果 <xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A> 中出现多个指定类型的服务，您应使用 <xref:System.Workflow.Runtime.WorkflowRuntime> 的重载方法之一。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-278">Therefore, you should use one of the overloaded methods of <xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A> if it is possible that multiple services of the specified type are present in the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span> <span data-ttu-id="f3c4c-279">例如，工作流运行时引擎可能有多个跟踪服务。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-279">For example, the workflow run-time engine may have multiple tracking services.</span></span> <span data-ttu-id="f3c4c-280">如果通过指定 <xref:System.Workflow.Runtime.Tracking.TrackingService> 基类来请求跟踪服务，则可能会引发异常。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-280">If you request a tracking service by specifying the <xref:System.Workflow.Runtime.Tracking.TrackingService> base class, it is possible that an exception will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3c4c-281">
            <paramref name="serviceType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-281">
              <paramref name="serviceType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3c4c-282">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is already disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-282">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is already disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3c4c-283">More than one service of type <paramref name="serviceType" /> was found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-283">More than one service of type <paramref name="serviceType" /> was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetService&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetService&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetService&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetService();" />
      <MemberSignature Language="F#" Value="member this.GetService : unit -&gt; 'T" Usage="workflowRuntime.GetService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f3c4c-284">服务类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-284">The service type.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="f3c4c-285">Retrieves a service of the specified generic type from the workflow run-time engine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-285">Retrieves a service of the specified generic type from the workflow run-time engine.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3c4c-286">A single service of the specified generic type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-286">A single service of the specified generic type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-287">如果存在多个指定泛型类型的服务，则 <xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A> 将引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-287"><xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A> throws an <xref:System.InvalidOperationException> if more than one service exists for the specified generic type.</span></span> <span data-ttu-id="f3c4c-288">因此，如果 <xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A> 中出现多个该泛型类型的服务，您应使用 <xref:System.Workflow.Runtime.WorkflowRuntime> 的重载方法之一。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-288">Therefore, you should use one of the overloaded methods of <xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A> if it is possible that multiple services of the generic type are present in the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span> <span data-ttu-id="f3c4c-289">例如，工作流运行时引擎可能有多个跟踪服务。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-289">For example, the workflow run-time engine may have multiple tracking services.</span></span> <span data-ttu-id="f3c4c-290">如果通过指定 <xref:System.Workflow.Runtime.Tracking.TrackingService> 基类来请求跟踪服务，则可能会引发异常。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-290">If you request a tracking service by specifying the <xref:System.Workflow.Runtime.Tracking.TrackingService> base class, it is possible that an exception will be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-291">下面的示例演示如何从 <xref:System.Workflow.Runtime.WorkflowRuntime> 对象中检索单个服务；在本例中是 <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService> 类型的服务。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-291">The following example demonstrates how to retrieve a single service from a <xref:System.Workflow.Runtime.WorkflowRuntime> object; in this case, a service of type <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>.</span></span> <span data-ttu-id="f3c4c-292">此示例摘自[工作流线程示例](http://go.microsoft.com/fwlink/?LinkId=157350)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-292">This example is from the [Workflow Threading Sample](http://go.microsoft.com/fwlink/?LinkId=157350).</span></span>  
  
 [!code-csharp[WF_Samples#28](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#28)]
 [!code-vb[WF_Samples#28](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3c4c-293">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> has already been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-293">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> has already been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3c4c-294">More than one service of the generic type was found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-294">More than one service of the generic type was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance GetWorkflow (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance GetWorkflow(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflow (instanceId As Guid) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ GetWorkflow(Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.GetWorkflow : Guid -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.GetWorkflow instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="f3c4c-295">The <see cref="T:System.Guid" /> of a workflow instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-295">The <see cref="T:System.Guid" /> of a workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3c4c-296">Retrieves the workflow instance that has the specified <see cref="T:System.Guid" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-296">Retrieves the workflow instance that has the specified <see cref="T:System.Guid" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3c4c-297">The <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> that has the specified <see cref="T:System.Guid" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-297">The <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> that has the specified <see cref="T:System.Guid" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-298">如果 `instanceId` 指定的工作流实例当前不在内存中，则会将该工作流实例加载到内存并计划执行。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-298">If `instanceId` specifies a workflow instance that is not currently in memory, the workflow instance is loaded into memory and scheduled for execution.</span></span> <span data-ttu-id="f3c4c-299">例如，某个工作流实例被中止后，您可以调用 <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> 以将该工作流实例重新加载回内存。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-299">For example, after a workflow instance is aborted, you can call <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> to load the workflow instance back into memory.</span></span> <span data-ttu-id="f3c4c-300">在这种情况下，持久性服务会将工作流实例的上一个保留状态加载到内存。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-300">In this case, the last persisted state of the workflow instance is loaded into memory by the persistence service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-301">下面的代码示例演示 `ReloadWorkflow`<xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A>方法如何调用  方法。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-301">The following code example demonstrates a `ReloadWorkflow` method that calls the <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> method.</span></span> <span data-ttu-id="f3c4c-302">`ReloadWorkflow` 方法是一个更大类的一部分，该大类具有的 `Runtime` 属性可访问 <xref:System.Workflow.Runtime.WorkflowRuntime> 类的所有方法、属性和事件。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-302">The `ReloadWorkflow` method is part of a larger class that has a `Runtime` property to access all of the methods, properties, and events of the <xref:System.Workflow.Runtime.WorkflowRuntime> class.</span></span>  
  
 <span data-ttu-id="f3c4c-303">此代码示例摘自[自定义持久性服务示例](http://go.microsoft.com/fwlink/?LinkId=157351)示例。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-303">This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkId=157351) sample.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3c4c-304">在该示例中，调用 <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> 是多余的，因为 <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> 和 <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> 两种方法都使用相同的内部帮助器方法将工作流实例加载到内存中。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-304">In the example, the call to <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> is redundant because both the <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> and <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> methods use the same internal helper method to load the workflow instance into memory.</span></span>  
  
 [!code-csharp[WF_Samples#265](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#265)]
 [!code-vb[WF_Samples#265](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#265)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3c4c-305">The workflow runtime is not started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-305">The workflow runtime is not started.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsStarted">
      <MemberSignature Language="C#" Value="public bool IsStarted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStarted" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStarted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStarted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStarted : bool" Usage="System.Workflow.Runtime.WorkflowRuntime.IsStarted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3c4c-306">Gets a value that indicates whether the workflow run-time engine has been started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-306">Gets a value that indicates whether the workflow run-time engine has been started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3c4c-307">
            <see langword="true" /> 如果工作流运行时引擎已启动;否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-307">
              <see langword="true" /> if the workflow run-time engine has been started; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f3c4c-308">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-308">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-309"><xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> 指示工作流运行时引擎服务正在运行。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-309"><xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> indicates that the workflow run-time engine services are running.</span></span> <span data-ttu-id="f3c4c-310"><xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> 是`false`直到宿主调用<xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-310"><xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> is `false` until the host calls <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>.</span></span> <span data-ttu-id="f3c4c-311">在宿主调用 `true` 之前，它一直保留 <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-311">It remains `true` until the host calls <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3c4c-312">工作流运行时引擎运行时，您不能向其中添加核心服务。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-312">You cannot add core services to the workflow run-time engine while it is running.</span></span> <span data-ttu-id="f3c4c-313">核心服务是派生自 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> 类、<xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> 类、<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> 类和 <xref:System.Workflow.Runtime.Tracking.TrackingService> 类的服务。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-313">Core services are services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> class, the <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class, and the <xref:System.Workflow.Runtime.Tracking.TrackingService> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-314">下面的示例演示如何访问 <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> 对象的 <xref:System.Workflow.Runtime.WorkflowRuntime> 属性。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-314">The following example demonstrates how to access the <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> property of a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span> <span data-ttu-id="f3c4c-315">在此示例中，如果运行时已启动，则会向控制台输出消息。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-315">In this example, if the runtime is started, a message is printed to the console.</span></span>  
  
 [!code-csharp[WF_Samples#21](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#21)]
 [!code-vb[WF_Samples#21](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowRuntime.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Workflow.Runtime.WorkflowRuntime.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3c4c-316">Gets or sets the name associated with the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-316">Gets or sets the name associated with the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3c4c-317">与此 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> 关联的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-317">The name associated with this <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-318">不能设置<xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>在工作流运行时引擎处于运行状态 (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>是`true`)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-318">You cannot set <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A> while the workflow run-time engine is running (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> is `true`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-319">下面的示例演示如何访问 <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A> 对象的 <xref:System.Workflow.Runtime.WorkflowRuntime> 属性。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-319">The following example demonstrates how to access the <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A> property of a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span> <span data-ttu-id="f3c4c-320">在本示例中，运行时的名称设置为“Main Runtime”。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-320">In this example, the name of the runtime is set to "Main Runtime".</span></span>  
  
 [!code-csharp[WF_Samples#20](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#20)]
 [!code-vb[WF_Samples#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3c4c-321">An attempt to set <see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /> on a <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> that is disposed occurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-321">An attempt to set <see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /> on a <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> that is disposed occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3c4c-322">An attempt to set <see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /> while the workflow run-time engine is running occurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-322">An attempt to set <see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /> while the workflow run-time engine is running occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveService">
      <MemberSignature Language="C#" Value="public void RemoveService (object service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveService(object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveService (service As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveService(System::Object ^ service);" />
      <MemberSignature Language="F#" Value="member this.RemoveService : obj -&gt; unit" Usage="workflowRuntime.RemoveService service" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="service">
          <span data-ttu-id="f3c4c-323">An object that represents the service to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-323">An object that represents the service to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3c4c-324">Removes the specified service from the workflow run-time engine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-324">Removes the specified service from the workflow run-time engine.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-325">工作流运行时引擎运行时，无法移除核心服务 (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>是`true`)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-325">You cannot remove a core service while the workflow run-time engine is running (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> is `true`).</span></span> <span data-ttu-id="f3c4c-326">核心服务是派生自 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> 类、<xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> 类、<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> 类或 <xref:System.Workflow.Runtime.Tracking.TrackingService> 类的服务。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-326">Core services are services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class, or the <xref:System.Workflow.Runtime.Tracking.TrackingService> class.</span></span>  <span data-ttu-id="f3c4c-327">如果 `service` 派生自 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 类，则 <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> 将调用由 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 实现的 `service` 方法。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-327">If `service` derives from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class, <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> calls the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> method implemented by `service`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-328">在下面的示例中，将向 <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> 添加和移除一个 <xref:System.Workflow.Runtime.WorkflowRuntime>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-328">In the following example, a <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> is added and removed from the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span>  
  
 [!code-csharp[WF_Samples#16](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#16)]
 [!code-vb[WF_Samples#16](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3c4c-329">
            <paramref name="service" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-329">
              <paramref name="service" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3c4c-330">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is already disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-330">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is already disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3c4c-331">The workflow run-time engine has started (<see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /> is <see langword="true" />) and <paramref name="service" /> is a core service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-331">The workflow run-time engine has started (<see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /> is <see langword="true" />) and <paramref name="service" /> is a core service.</span>
          </span>
          <span data-ttu-id="f3c4c-332">\- or -  <paramref name="service" /> is not registered with the workflow run-time engine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-332">\- or -  <paramref name="service" /> is not registered with the workflow run-time engine.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ServicesExceptionNotHandled">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs&gt; ServicesExceptionNotHandled;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs&gt; ServicesExceptionNotHandled" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled" />
      <MemberSignature Language="VB.NET" Value="Public Event ServicesExceptionNotHandled As EventHandler(Of ServicesExceptionNotHandledEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::ServicesExceptionNotHandledEventArgs ^&gt; ^ ServicesExceptionNotHandled;" />
      <MemberSignature Language="F#" Value="member this.ServicesExceptionNotHandled : EventHandler&lt;System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs&gt; " Usage="member this.ServicesExceptionNotHandled : System.EventHandler&lt;System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3c4c-333">Occurs when a service that is derived from the <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> class calls <see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-333">Occurs when a service that is derived from the <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> class calls <see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-334">派生自 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 类的服务可调用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> 方法，以通知 <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> 事件的订户在执行过程中出现无法处理的异常。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-334">A service that is derived from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class can call the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> method to inform subscribers to the <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> event that an exception that it was unable to handle occurred during its execution.</span></span> <span data-ttu-id="f3c4c-335">您可以订阅此事件以实现恢复机制。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-335">You can subscribe to this event to implement a recovery mechanism.</span></span>  
  
 <span data-ttu-id="f3c4c-336">在工作流运行时引擎尚未创建工作流实例前引发此事件，同时将出现一个异常。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-336">This event is raised when a workflow instance has not been created yet by the workflow run-time engine and an exception occurs.</span></span> <span data-ttu-id="f3c4c-337">在此方案中，通知宿主应用程序发生异常的唯一方法是引发此事件。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-337">In this scenario, the only way to inform a host application that an exception occurred is to raise this event.</span></span> <span data-ttu-id="f3c4c-338">但是，工作流运行时引擎不直接调用此方法。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-338">However, the workflow run-time engine does not call this directly.</span></span> <span data-ttu-id="f3c4c-339">工作流运行时引擎而是向工作流实例发送异常，或者在没有实例的情况下将异常引发回调用方（本例中调用方实际上是激发此事件的服务）。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-339">Instead, the workflow run-time engine either delivers an exception to the workflow instance or, if there is no instance, throws back to the caller, which in this case is actually the service that fires this event.</span></span> <span data-ttu-id="f3c4c-340">如果要创建自己的持久性服务或计划程序，您必须自己使用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> 基方法来实现此事件。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-340">If you create your own persistence or scheduler service, you must implement this event yourself through the base <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> method.</span></span>  
  
 <span data-ttu-id="f3c4c-341">对于 <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> 事件，发送方包含 <xref:System.Workflow.Runtime.WorkflowRuntime>，而 <xref:System.Workflow.Runtime.WorkflowEventArgs> 包含使用服务的工作流实例的 <xref:System.Guid>，以及无法处理的 <xref:System.Exception>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-341">For the <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Guid> of the workflow instance that was using the service and the <xref:System.Exception> that could not be handled.</span></span>  
  
 <span data-ttu-id="f3c4c-342">有关处理事件的详细信息，请参阅[消耗事件](http://go.microsoft.com/fwlink/?LinkID=157352)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-342">For more information about handling events, see [Consuming Events](http://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-343">下面的代码示例演示如何使用工作流宿主中的 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-343">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="f3c4c-344">该代码将 <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> 与一个事件处理程序（即一个名为 `OnExceptionNotHandled` 的方法）相关联。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-344">The code associates <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> with an event handler, a method named `OnExceptionNotHandled`.</span></span>  
  
 <span data-ttu-id="f3c4c-345">此代码示例摘自[自定义持久性服务示例](http://go.microsoft.com/fwlink/?LinkID=157351)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-345">This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=157351).</span></span>  
  
 [!code-csharp[WF_Samples#271](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#271)]
 [!code-vb[WF_Samples#271](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#271)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Started">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; Started;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; Started" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.Started" />
      <MemberSignature Language="VB.NET" Value="Public Event Started As EventHandler(Of WorkflowRuntimeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowRuntimeEventArgs ^&gt; ^ Started;" />
      <MemberSignature Language="F#" Value="member this.Started : EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; " Usage="member this.Started : System.EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3c4c-346">Occurs when the workflow run-time engine is started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-346">Occurs when the workflow run-time engine is started.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-347"><xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>方法将引发<xref:System.Workflow.Runtime.WorkflowRuntime.Started>调用后其已经验证工作流运行时引擎的核心服务配置事件<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>实现的每个派生自其服务方法<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>类，已设置<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>到`true`。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-347">The <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> method raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Started> event after it has validated the core service configuration of the workflow run-time engine, has invoked the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> method implemented by each of its services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class, and has set <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> to `true`.</span></span> <span data-ttu-id="f3c4c-348">工作流运行时引擎并不按照固定顺序启动派生自 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 类的服务，一部分工作流运行时引擎服务可能需要依赖另一部分服务所提供的功能来完成其启动任务。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-348">There is no guarantee about the order in which the services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class are started by the workflow run-time engine, and some of these workflow run-time engine services may depend on functionality supplied by other of these services to complete their startup tasks.</span></span> <span data-ttu-id="f3c4c-349">引发 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=nameWithType> 事件后，工作流运行时引擎服务可以重写 <xref:System.Workflow.Runtime.WorkflowRuntime.Started> 方法，以执行需要其他工作流运行时引擎服务支持的任何最终启动任务。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-349">Workflow run-time engine services can override the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=nameWithType> method to perform any final startup tasks that require the support of other workflow run-time engine services when the <xref:System.Workflow.Runtime.WorkflowRuntime.Started> event is raised.</span></span>  
  
 <span data-ttu-id="f3c4c-350">有关处理事件的详细信息，请参阅[消耗事件](http://go.microsoft.com/fwlink/?LinkID=157352)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-350">For more information about handling events, see [Consuming Events](http://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-351">在下面的示例中，将向 <xref:System.Workflow.Runtime.WorkflowRuntime.Started> 的 <xref:System.Workflow.Runtime.WorkflowRuntime> 事件添加一个事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-351">In the following example, an event handler is added to the <xref:System.Workflow.Runtime.WorkflowRuntime.Started> event of the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span> <span data-ttu-id="f3c4c-352">在此示例中，处理程序是向控制台输出简单消息的匿名方法。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-352">In this example, the handler is an anonymous method that prints a simple message to the console.</span></span>  
  
 [!code-csharp[WF_Samples#15](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#15)]
 [!code-vb[WF_Samples#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRuntime">
      <MemberSignature Language="C#" Value="public void StartRuntime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartRuntime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartRuntime ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartRuntime();" />
      <MemberSignature Language="F#" Value="member this.StartRuntime : unit -&gt; unit" Usage="workflowRuntime.StartRuntime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3c4c-353">Starts the workflow run-time engine and the workflow run-time engine services.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-353">Starts the workflow run-time engine and the workflow run-time engine services.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-354">此方法验证是否存在有效的核心服务集，然后启动派生自 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 类的任何服务。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-354">This method verifies that a valid set of core services exists and then starts any services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class.</span></span>  <span data-ttu-id="f3c4c-355">必须有且只有各以下核心服务之一： 工作流`CommitWorkBatch`服务派生自<xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>基类和计划程序服务派生自<xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>基类。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-355">There must be one and only one of each of the following core services: a workflow `CommitWorkBatch` service derived from the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> base class and a scheduler service derived from the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> base class.</span></span>  <span data-ttu-id="f3c4c-356">如果缺少一个或两个核心服务，工作流运行时引擎会提供相应的默认服务：<xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService>工作流`CommitWorkBatch`服务和<xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService>计划程序服务。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-356">If either or both of these core services are missing, the workflow run-time engine supplies the appropriate default service: <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> for the workflow `CommitWorkBatch` service and <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> for the scheduler service.</span></span> <span data-ttu-id="f3c4c-357">持久性服务为可选服务，但最多只能有一个持久性服务。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-357">A persistence service is optional, but there can be at most only one persistence service present.</span></span> <span data-ttu-id="f3c4c-358"><xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> 验证服务配置后，将对派生自 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 类的所有服务调用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-358">After it has validated the service configuration, <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> calls <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> on all of the services that are derived from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class.</span></span>  <span data-ttu-id="f3c4c-359">最后，工作流运行时引擎将设置 <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> 并引发 <xref:System.Workflow.Runtime.WorkflowRuntime.Started> 事件。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-359">Finally, the workflow run-time engine sets <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> and raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Started> event.</span></span>  
  
 <span data-ttu-id="f3c4c-360">在工作流运行时引擎启动后，您不能添加或移除核心服务。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-360">You cannot add or remove core services after the workflow run-time engine is started.</span></span> <span data-ttu-id="f3c4c-361">核心服务是派生自 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> 类、<xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> 类、<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> 类或 <xref:System.Workflow.Runtime.Tracking.TrackingService> 类的服务。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-361">Core services are services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class, or the <xref:System.Workflow.Runtime.Tracking.TrackingService> class.</span></span>  <span data-ttu-id="f3c4c-362">如果您在工作流运行时引擎运行过程中调用 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>，将不会执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-362">If you call <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> while the workflow run-time engine is running, no action is performed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-363">下面的代码示例演示如何使用工作流宿主中的 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-363">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="f3c4c-364">在 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> 创建了 <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> 实例并在调用了 <xref:System.Workflow.Runtime.WorkflowRuntime> 来向运行时添加服务后，代码将调用 <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-364">The code calls the <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> after the <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> creates a <xref:System.Workflow.Runtime.WorkflowRuntime> instance and after it calls <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> to add services to the runtime.</span></span> <span data-ttu-id="f3c4c-365">在进行其他任何处理之前，它还会调用 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-365">It also calls <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> before any other processing occurs.</span></span>  
  
 <span data-ttu-id="f3c4c-366">此代码示例摘自[取消工作流](http://go.microsoft.com/fwlink/?LinkId=157346)示例。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-366">This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3c4c-367">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-367">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3c4c-368">There is more than one service workflow <see langword="CommitWorkBatch" /> service registered with this <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-368">There is more than one service workflow <see langword="CommitWorkBatch" /> service registered with this <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span>
          </span>
          <span data-ttu-id="f3c4c-369">-or-  There is more than one scheduler service registered with this <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-369">-or-  There is more than one scheduler service registered with this <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span>
          </span>
          <span data-ttu-id="f3c4c-370">-or-  There is more than one persistence service registered with this <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-370">-or-  There is more than one persistence service registered with this <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; Stopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; Stopped" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.Stopped" />
      <MemberSignature Language="VB.NET" Value="Public Event Stopped As EventHandler(Of WorkflowRuntimeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowRuntimeEventArgs ^&gt; ^ Stopped;" />
      <MemberSignature Language="F#" Value="member this.Stopped : EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; " Usage="member this.Stopped : System.EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3c4c-371">Occurs when the workflow run-time engine is stopped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-371">Occurs when the workflow run-time engine is stopped.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-372"><xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> 方法在调用 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> 方法后引发 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 事件，所调用的方法由它派生自 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 类的每个服务实现。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-372">The <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> method raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> event after it has invoked the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> method implemented by each of its services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class.</span></span>  <span data-ttu-id="f3c4c-373">停止这些工作流运行时引擎服务的顺序并不固定，其中一些服务可能需要保留其他服务所依赖的一些功能，直到也停止这些服务。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-373">There is no guarantee about the order in which these workflow run-time engine services are stopped, and some of these services may need to preserve some functionality that is relied on by other services until they too are stopped.</span></span> <span data-ttu-id="f3c4c-374">引发 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=nameWithType> 事件后，此类服务可重写 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> 方法，以执行任何剩余的关闭逻辑。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-374">Such services can override the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=nameWithType> method to perform any residual shutdown logic when the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> event is raised.</span></span>  
  
 <span data-ttu-id="f3c4c-375">有关处理事件的详细信息，请参阅[消耗事件](http://go.microsoft.com/fwlink/?LinkID=157352)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-375">For more information about handling events, see [Consuming Events](http://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-376">在下面的示例中，将向 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> 的 <xref:System.Workflow.Runtime.WorkflowRuntime> 事件添加一个事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-376">In the following example, an event handler is added to the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> event of the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span> <span data-ttu-id="f3c4c-377">在此示例中，处理程序是向控制台输出简单消息的匿名方法。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-377">In this example, the handler is an anonymous method that prints a simple message to the console.</span></span>  
  
 [!code-csharp[WF_Samples#14](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#14)]
 [!code-vb[WF_Samples#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopRuntime">
      <MemberSignature Language="C#" Value="public void StopRuntime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopRuntime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopRuntime ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopRuntime();" />
      <MemberSignature Language="F#" Value="member this.StopRuntime : unit -&gt; unit" Usage="workflowRuntime.StopRuntime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3c4c-378">Stops the workflow run-time engine and the run-time services.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-378">Stops the workflow run-time engine and the run-time services.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-379">此方法将导致工作流运行时引擎卸载每个工作流实例，停止所有派生自其服务<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>类中，设置<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>到`false`，并引发<xref:System.Workflow.Runtime.WorkflowRuntime.Stopped>事件。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-379">This method causes the workflow run-time engine to unload each of its workflow instances, stop all of its services that are derived from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class, set <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> to `false`, and raise the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> event.</span></span>  
  
 <span data-ttu-id="f3c4c-380">若要正常关闭 <xref:System.Workflow.Runtime.WorkflowRuntime>，请在调用 <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> 之前调用 <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-380">To shut down the <xref:System.Workflow.Runtime.WorkflowRuntime> gracefully, call <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> before you call <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>.</span></span>  
  
 <span data-ttu-id="f3c4c-381">有关更多信息，请参见 <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-381">For more information, see the <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-382">下面的代码示例演示如何使用工作流宿主中的 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-382">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="f3c4c-383">在宿主完成其他所有与运行时关联的处理后，将调用 <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-383"><xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> is called after the host has completed all other processing associated with the runtime.</span></span>  
  
 <span data-ttu-id="f3c4c-384">此代码示例摘自[取消工作流](http://go.microsoft.com/fwlink/?LinkId=157346)示例。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-384">This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#259](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#259)]
 [!code-vb[WF_Samples#259](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#259)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3c4c-385">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is already disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-385">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is already disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WorkflowAborted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowAborted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowAborted" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowAborted As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowAborted;" />
      <MemberSignature Language="F#" Value="member this.WorkflowAborted : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowAborted : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3c4c-386">Occurs when a workflow instance is aborted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-386">Occurs when a workflow instance is aborted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-387">在工作流实例的所有挂起工作被清除之后，但在内存中验证工作流实例之前，会发生 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-387"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted> occurs after all pending work for the workflow instance is cleared, but before the workflow instance is invalidated in memory.</span></span> <span data-ttu-id="f3c4c-388">通过调用 <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=nameWithType> 可以中止工作流实例。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-388">You can abort a workflow instance by calling <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f3c4c-389">在此事件中，发送方包含 <xref:System.Workflow.Runtime.WorkflowRuntime>，而 <xref:System.Workflow.Runtime.WorkflowEventArgs> 包含与事件关联的 <xref:System.Workflow.Runtime.WorkflowInstance>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-389">For this event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="f3c4c-390">有关处理事件的详细信息，请参阅[消耗事件](http://go.microsoft.com/fwlink/?LinkId=157352)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-390">For more information about handling events, see [Consuming Events](http://go.microsoft.com/fwlink/?LinkId=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-391">下面的代码示例演示如何使用工作流宿主中的 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-391">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="f3c4c-392">该代码将 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted> 与一个事件处理程序即一个名为 `OnWorkflowAborted` 的方法相关联。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-392">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted> with an event handler, a method named `OnWorkflowAborted`.</span></span>  
  
 <span data-ttu-id="f3c4c-393">此代码示例摘自[取消工作流](http://go.microsoft.com/fwlink/?LinkID=157346)示例。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-393">This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#141](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#141)]
 [!code-vb[WF_Samples#141](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#141)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowCompletedEventArgs&gt; WorkflowCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowCompletedEventArgs&gt; WorkflowCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowCompleted As EventHandler(Of WorkflowCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowCompletedEventArgs ^&gt; ^ WorkflowCompleted;" />
      <MemberSignature Language="F#" Value="member this.WorkflowCompleted : EventHandler&lt;System.Workflow.Runtime.WorkflowCompletedEventArgs&gt; " Usage="member this.WorkflowCompleted : System.EventHandler&lt;System.Workflow.Runtime.WorkflowCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3c4c-394">Occurs when a workflow instance has completed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-394">Occurs when a workflow instance has completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-395">在完成工作流实例之后，在内存中的实例失效之前，会引发 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-395"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> is raised after the workflow instance has completed but before the instance is invalidated in memory.</span></span>  
  
 <span data-ttu-id="f3c4c-396">对于 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> 事件，发送方包含 <xref:System.Workflow.Runtime.WorkflowRuntime>，而 <xref:System.Workflow.Runtime.WorkflowCompletedEventArgs> 包含 <xref:System.Workflow.Runtime.WorkflowInstance> 及其输出参数。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-396">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowCompletedEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> and its output parameters.</span></span>  
  
 <span data-ttu-id="f3c4c-397">有关处理事件的详细信息，请参阅[消耗事件](http://go.microsoft.com/fwlink/?LinkId=157352)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-397">For more information about handling events, see [Consuming Events](http://go.microsoft.com/fwlink/?LinkId=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-398">下面的代码示例演示如何使用工作流宿主中的 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-398">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="f3c4c-399">该代码将 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> 与一个事件处理程序即一个名为 `OnWorkflowCompleted` 的方法相关联。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-399">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> with an event handler, a method named `OnWorkflowCompleted`.</span></span>  
  
 <span data-ttu-id="f3c4c-400">此代码示例摘自[取消工作流](http://go.microsoft.com/fwlink/?LinkId=157346)示例。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-400">This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowCreated" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowCreated As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowCreated;" />
      <MemberSignature Language="F#" Value="member this.WorkflowCreated : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowCreated : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3c4c-401">Occurs when a workflow instance is created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-401">Occurs when a workflow instance is created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-402">在完全构造工作流实例之后但在处理活动之前，工作流运行时引擎会引发 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated> 事件。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-402">The workflow run-time engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated> event after the workflow instance is completely constructed but before activities are processed.</span></span> <span data-ttu-id="f3c4c-403">在此事件中，发送方包含 <xref:System.Workflow.Runtime.WorkflowRuntime>，而 <xref:System.Workflow.Runtime.WorkflowEventArgs> 包含与事件关联的 <xref:System.Workflow.Runtime.WorkflowInstance>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-403">For this event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="f3c4c-404">有关处理事件的详细信息，请参阅[消耗事件](http://go.microsoft.com/fwlink/?LinkId=157352)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-404">For more information about handling events, see [Consuming Events](http://go.microsoft.com/fwlink/?LinkId=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-405">下面的代码示例演示如何使用工作流宿主中的 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-405">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="f3c4c-406">该代码将 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated> 与一个事件处理程序即一个名为 `OnWorkflowCreated` 的方法相关联。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-406">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated> with an event handler, a method named `OnWorkflowCreated`.</span></span>  
  
 <span data-ttu-id="f3c4c-407">此代码示例摘自[自定义持久性服务示例](http://go.microsoft.com/fwlink/?LinkID=15735)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-407">This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=15735).</span></span>  
  
 [!code-csharp[WF_Samples#271](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#271)]
 [!code-vb[WF_Samples#271](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#271)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowIdled">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowIdled;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowIdled" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowIdled As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowIdled;" />
      <MemberSignature Language="F#" Value="member this.WorkflowIdled : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowIdled : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3c4c-408">Occurs when a workflow instance enters the idle state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-408">Occurs when a workflow instance enters the idle state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-409">在工作流实例进入空闲状态后，工作流运行时引擎引发 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> 事件；例如，工作流在等待 <xref:System.Workflow.Activities.DelayActivity> 活动完成时会引发该事件。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-409">The workflow run-time engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event when the workflow instance enters an idle state; for example, when the workflow is waiting for a <xref:System.Workflow.Activities.DelayActivity> activity to complete.</span></span>  
  
 <span data-ttu-id="f3c4c-410">在此事件中，发送方包含 <xref:System.Workflow.Runtime.WorkflowRuntime>，而 <xref:System.Workflow.Runtime.WorkflowEventArgs> 包含与事件关联的 <xref:System.Workflow.Runtime.WorkflowInstance>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-410">For this event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="f3c4c-411">有关处理事件的详细信息，请参阅[消耗事件](https://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-411">For more information about handling events, see [Consuming Events](https://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-412">下面的代码示例演示如何使用工作流宿主中的 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-412">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="f3c4c-413">该代码将 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> 与一个事件处理程序即一个名为 `OnWorkflowIdled` 的方法相关联。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-413">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> with an event handler, a method named `OnWorkflowIdled`.</span></span>  
  
 <span data-ttu-id="f3c4c-414">此代码示例摘自[取消工作流](http://go.microsoft.com/fwlink/?LinkID=157346)示例。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-414">This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowLoaded">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowLoaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowLoaded" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowLoaded As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowLoaded;" />
      <MemberSignature Language="F#" Value="member this.WorkflowLoaded : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowLoaded : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3c4c-415">Occurs when the workflow instance is loaded into memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-415">Occurs when the workflow instance is loaded into memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-416">在持久性服务存储工作流实例后与工作流运行时引擎开始执行任何活动前，会发生 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-416"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> occurs after the persistence service has restored the workflow instance, but before the workflow run-time engine begins to execute any activities.</span></span>  
  
 <span data-ttu-id="f3c4c-417">对于 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> 事件，发送方包含 <xref:System.Workflow.Runtime.WorkflowRuntime>，而 <xref:System.Workflow.Runtime.WorkflowEventArgs> 包含与事件关联的 <xref:System.Workflow.Runtime.WorkflowInstance>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-417">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="f3c4c-418">有关处理事件的详细信息，请参阅[消耗事件](http://go.microsoft.com/fwlink/?LinkID=157352)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-418">For more information about handling events, see [Consuming Events](http://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-419">下面的代码示例演示如何使用工作流宿主中的 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-419">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="f3c4c-420">该代码将 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> 与一个事件处理程序即一个名为 `OnWorkflowLoad` 的方法相关联。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-420">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> with an event handler, a method named `OnWorkflowLoad`.</span></span>  
  
 <span data-ttu-id="f3c4c-421">此代码示例摘自[自定义持久性服务](http://go.microsoft.com/fwlink/?LinkID=157351)示例。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-421">This code example is part of the [Custom Persistence Service](http://go.microsoft.com/fwlink/?LinkID=157351) sample.</span></span>  
  
 [!code-csharp[WF_Samples#271](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#271)]
 [!code-vb[WF_Samples#271](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#271)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowPersisted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowPersisted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowPersisted" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowPersisted As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowPersisted;" />
      <MemberSignature Language="F#" Value="member this.WorkflowPersisted : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowPersisted : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3c4c-422">Occurs when the state of a workflow instance is persisted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-422">Occurs when the state of a workflow instance is persisted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-423">保留工作流状态的原因可能很多。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-423">The workflow instance can be persisted for many reasons.</span></span> <span data-ttu-id="f3c4c-424">例如，宿主可能对工作流实例调用 <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType>，或工作流运行时引擎可能由于实例变为空闲状态或完成原子作用域而保留工作流实例。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-424">For example, the host can call <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType> on a workflow instance, or the workflow run-time engine can persist a workflow instance because the instance is idle or because an atomic scope has completed.</span></span> <span data-ttu-id="f3c4c-425">如果 <xref:System.Workflow.Runtime.WorkflowRuntime> 中存在持久性服务，则在将工作流实例的状态保存到内存后，运行时会引发 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-425">If a persistence service is present in the <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> is raised by the runtime after the state of the workflow instance is saved to memory.</span></span> <span data-ttu-id="f3c4c-426">如果不存在持久性服务，将仍然会引发该事件，但不会保存实例状态。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-426">If a persistence service is not present, the event is still raised but the instance state is not saved.</span></span> <span data-ttu-id="f3c4c-427">如果 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> 事件由于正在卸载工作流实例而发生，则 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> 事件将紧随其后发生。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-427">If the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> event occurs because the workflow instance is being unloaded, it is followed by a <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event.</span></span>  
  
 <span data-ttu-id="f3c4c-428">对于 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> 事件，发送方包含 <xref:System.Workflow.Runtime.WorkflowRuntime>，而 <xref:System.Workflow.Runtime.WorkflowEventArgs> 包含与事件关联的 <xref:System.Workflow.Runtime.WorkflowInstance>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-428">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="f3c4c-429">有关处理事件的详细信息，请参阅[消耗事件](http://go.microsoft.com/fwlink/?LinkID=157352)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-429">For more information about handling events, see [Consuming Events](http://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-430">下面的代码示例演示如何使用工作流宿主中的 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-430">The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="f3c4c-431">该代码将 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> 与一个事件处理程序即一个名为 `OnWorkflowPersisted` 的方法相关联。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-431">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> with an event handler, a method named `OnWorkflowPersisted`.</span></span>  
  
 <span data-ttu-id="f3c4c-432">此代码示例摘自[自定义持久性服务示例](http://go.microsoft.com/fwlink/?LinkID=15735)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-432">This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=15735).</span></span>  
  
 [!code-csharp[WF_Samples#279](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#279)]
 [!code-vb[WF_Samples#279](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#279)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowResumed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowResumed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowResumed" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowResumed As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowResumed;" />
      <MemberSignature Language="F#" Value="member this.WorkflowResumed : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowResumed : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3c4c-433">Occurs when execution of a workflow instance is resumed following a suspension.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-433">Occurs when execution of a workflow instance is resumed following a suspension.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-434">工作流运行时引擎恰好在计划工作流实例之前引发 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> 事件。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-434">The workflow run-time engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> event just before the workflow instance is scheduled.</span></span> <span data-ttu-id="f3c4c-435"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> 事件通常是由于对 <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType> 的显式调用而引发的。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-435">The <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> event is usually raised because of an explicit call to <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f3c4c-436">但是，工作流运行时引擎可能会暂时挂起实例以执行操作，例如，应用工作流更改。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-436">However, the workflow run-time engine can temporarily suspend an instance to perform an operation, for example, to apply a workflow change.</span></span> <span data-ttu-id="f3c4c-437">在这种情况下，当运行时引擎在该操作后恢复执行工作流实例时将引发 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> 事件。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-437">In this case, the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> event is raised when the runtime resumes execution of the workflow instance following the operation.</span></span>  
  
 <span data-ttu-id="f3c4c-438">对于 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> 事件，发送方包含 <xref:System.Workflow.Runtime.WorkflowRuntime>，而 <xref:System.Workflow.Runtime.WorkflowEventArgs> 包含与事件关联的 <xref:System.Workflow.Runtime.WorkflowInstance>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-438">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="f3c4c-439">有关处理事件的详细信息，请参阅[消耗事件](http://go.microsoft.com/fwlink/?LinkID=157352)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-439">For more information about handling events, see [Consuming Events](http://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-440">下面的代码示例演示如何使用工作流宿主中的 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-440">The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="f3c4c-441">该代码将 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> 与一个事件处理程序即一个名为 `OnWorkflowResume` 的方法相关联。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-441">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> with an event handler, a method named `OnWorkflowResume`.</span></span>  
  
 <span data-ttu-id="f3c4c-442">此代码示例摘自[挂起和终止示例](http://go.microsoft.com/fwlink/?LinkId=157402)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-442">This code example is part of the [Suspend and Terminate Sample](http://go.microsoft.com/fwlink/?LinkId=157402).</span></span>  
  
 [!code-csharp[WF_Samples#171](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#171)]
 [!code-vb[WF_Samples#171](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#171)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowStarted" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowStarted As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowStarted;" />
      <MemberSignature Language="F#" Value="member this.WorkflowStarted : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowStarted : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3c4c-443">Occurs when a workflow instance has been started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-443">Occurs when a workflow instance has been started.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-444">通过计划要执行的根活动启动工作流实例后，工作流运行时引擎将引发 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted> 事件。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-444">The workflow run-time engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted> event after the workflow instance is started by scheduling the root activity for execution.</span></span> <span data-ttu-id="f3c4c-445">在此事件中，发送方包含 <xref:System.Workflow.Runtime.WorkflowRuntime>，而 <xref:System.Workflow.Runtime.WorkflowEventArgs> 包含与事件关联的 <xref:System.Workflow.Runtime.WorkflowInstance>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-445">For this event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="f3c4c-446">有关处理事件的详细信息，请参阅[消耗事件](http://go.microsoft.com/fwlink/?LinkID=157352)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-446">For more information about handling events, see [Consuming Events](http://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-447">下面的代码示例演示如何使用工作流宿主中的 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-447">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="f3c4c-448">该代码将 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted> 与一个事件处理程序即一个名为 `OnWorkflowStarted` 的方法相关联。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-448">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted> with an event handler, a method named `OnWorkflowStarted`.</span></span>  
  
 <span data-ttu-id="f3c4c-449">此代码示例摘自[主机通信示例](http://go.microsoft.com/fwlink/?LinkId=157406)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-449">This code example is part of the [Host Communication Sample](http://go.microsoft.com/fwlink/?LinkId=157406).</span></span>  
  
 [!code-csharp[WF_Samples#297](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets38.cs#297)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowSuspended">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt; WorkflowSuspended;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt; WorkflowSuspended" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowSuspended As EventHandler(Of WorkflowSuspendedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowSuspendedEventArgs ^&gt; ^ WorkflowSuspended;" />
      <MemberSignature Language="F#" Value="member this.WorkflowSuspended : EventHandler&lt;System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt; " Usage="member this.WorkflowSuspended : System.EventHandler&lt;System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3c4c-450">Occurs when a workflow instance is suspended.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-450">Occurs when a workflow instance is suspended.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-451">工作流实例可由宿主通过调用 <xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> 方法挂起，也可由 <xref:System.Workflow.ComponentModel.SuspendActivity> 活动或工作流运行时引擎隐式挂起。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-451">The workflow instance can be suspended by the host through a call to the <xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> method, by a <xref:System.Workflow.ComponentModel.SuspendActivity> activity, or implicitly by the workflow run-time engine.</span></span> <span data-ttu-id="f3c4c-452">例如，工作流运行时引擎在将动态更改应用于实例时暂时挂起实例。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-452">For example, the workflow run-time engine temporarily suspends the instance when it applies dynamic changes to the instance.</span></span>  
  
 <span data-ttu-id="f3c4c-453">对于 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> 事件，发送方包含 <xref:System.Workflow.Runtime.WorkflowRuntime>，而 <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs> 包含 <xref:System.Workflow.Runtime.WorkflowInstance> 以及一个说明挂起实例原因的字符串。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-453">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> and a string that describes the reason the instance was suspended.</span></span>  
  
 <span data-ttu-id="f3c4c-454">有关处理事件的详细信息，请参阅[消耗事件](http://go.microsoft.com/fwlink/?LinkID=157352)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-454">For more information about handling events, see [Consuming Events](http://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-455">下面的代码示例演示如何使用工作流宿主中的 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-455">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="f3c4c-456">该代码将 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> 与一个事件处理程序即一个名为 `OnWorkflowSuspended` 的方法相关联。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-456">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> with an event handler, a method named `OnWorkflowSuspended`.</span></span>  
  
 <span data-ttu-id="f3c4c-457">此代码示例摘自[挂起和终止示例](http://go.microsoft.com/fwlink/?LinkID=157402)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-457">This code example is part of the [Suspend and Terminate Sample](http://go.microsoft.com/fwlink/?LinkID=157402).</span></span>  
  
 [!code-csharp[WF_Samples#170](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#170)]
 [!code-vb[WF_Samples#170](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#170)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowTerminated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt; WorkflowTerminated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt; WorkflowTerminated" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowTerminated As EventHandler(Of WorkflowTerminatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowTerminatedEventArgs ^&gt; ^ WorkflowTerminated;" />
      <MemberSignature Language="F#" Value="member this.WorkflowTerminated : EventHandler&lt;System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt; " Usage="member this.WorkflowTerminated : System.EventHandler&lt;System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3c4c-458">Occurs when a workflow instance is terminated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-458">Occurs when a workflow instance is terminated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-459">工作流可由宿主通过调用 <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> 方法来终止，也可由 <xref:System.Workflow.ComponentModel.TerminateActivity> 活动终止，或者在发生未处理的异常时由工作流运行时引擎终止。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-459">The workflow can be terminated by the host through a call to the <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> method, by a <xref:System.Workflow.ComponentModel.TerminateActivity> activity, or by the workflow run-time engine when an unhandled exception occurs.</span></span> <span data-ttu-id="f3c4c-460">在工作流实例终止之后但在内存中失效之前，工作流运行时引擎会引发 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> 事件。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-460">The workflow run-time engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> event after the workflow instance is terminated, but before it is invalidated in memory.</span></span>  
  
 <span data-ttu-id="f3c4c-461">对于 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> 事件，发送方包含 <xref:System.Workflow.Runtime.WorkflowRuntime>，而 <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs> 包含 <xref:System.Workflow.Runtime.WorkflowInstance>，以及在 <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=nameWithType> 属性中终止实例的原因的相关信息。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-461">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> and information about the reason the instance was terminated in the <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="f3c4c-462">有关处理事件的详细信息，请参阅[消耗事件](http://go.microsoft.com/fwlink/?LinkID=157352)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-462">For more information about handling events, see [Consuming Events](http://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-463">下面的代码示例演示如何使用工作流宿主中的 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-463">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="f3c4c-464">该代码将 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> 与一个事件处理程序即一个名为 `OnWorkflowCompleted` 的方法相关联。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-464">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> with an event handler, a method named `OnWorkflowCompleted`.</span></span>  
  
 <span data-ttu-id="f3c4c-465">此代码示例摘自[取消工作流](http://go.microsoft.com/fwlink/?LinkID=157346)示例。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-465">This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#260](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#260)]
 [!code-vb[WF_Samples#260](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#260)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowUnloaded">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowUnloaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowUnloaded" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowUnloaded As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowUnloaded;" />
      <MemberSignature Language="F#" Value="member this.WorkflowUnloaded : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowUnloaded : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3c4c-466">Occurs when the workflow instance is unloaded from memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3c4c-466">Occurs when the workflow instance is unloaded from memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4c-467">可以通过显式调用 <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> 从内存卸载工作流实例，也可以由工作流运行时引擎根据自身的语义来隐式卸载工作流实例。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-467">A workflow instance can be unloaded from memory by an explicit call to <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A>, or implicitly by the workflow run-time engine according to its own semantics.</span></span> <span data-ttu-id="f3c4c-468">例如，工作流运行时引擎卸载工作流实例，如果实例进入空闲状态，并且在运行时具有<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>为其添加<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-468">For example, the workflow run-time engine unloads a workflow instance if the instance becomes idle and the runtime has a <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> added for which <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A> is `true`.</span></span>  
  
 <span data-ttu-id="f3c4c-469">工作流运行时引擎引发</span><span class="sxs-lookup"><span data-stu-id="f3c4c-469">The workflow run-time engine raises the</span></span>  
  
 <span data-ttu-id="f3c4c-470">在工作流实例状态成功保留后与该实例在内存中失效前，会引发 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> 事件。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-470"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event after the state of the workflow instance has been successfully persisted but before the instance is invalidated in memory.</span></span> <span data-ttu-id="f3c4c-471">因此，<xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> 事件将在 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> 事件之前发生。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-471">Therefore, a <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> event precedes the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event.</span></span>  
  
 <span data-ttu-id="f3c4c-472">对于 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> 事件，发送方包含 <xref:System.Workflow.Runtime.WorkflowRuntime>，而 <xref:System.Workflow.Runtime.WorkflowEventArgs> 包含与事件关联的 <xref:System.Workflow.Runtime.WorkflowInstance>。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-472">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="f3c4c-473">有关处理事件的详细信息，请参阅[消耗事件](http://go.microsoft.com/fwlink/?LinkID=157352)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-473">For more information about handling events, see [Consuming Events](http://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3c4c-474">下面的代码示例演示如何使用工作流宿主中的 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-474">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="f3c4c-475">该代码将 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> 与一个事件处理程序即一个名为 `OnWorkflowUnload` 的方法相关联。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-475">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> with an event handler, a method named `OnWorkflowUnload`.</span></span>  
  
 <span data-ttu-id="f3c4c-476">此代码示例摘自[自定义持久性服务示例](http://go.microsoft.com/fwlink/?LinkID=157351)。</span><span class="sxs-lookup"><span data-stu-id="f3c4c-476">This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=157351).</span></span>  
  
 [!code-csharp[WF_Samples#271](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#271)]
 [!code-vb[WF_Samples#271](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#271)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>