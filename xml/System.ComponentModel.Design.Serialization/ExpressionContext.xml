<Type Name="ExpressionContext" FullName="System.ComponentModel.Design.Serialization.ExpressionContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7f21c8d79188df3ecb9df91effbfa1a48e870be7" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39841833" /></Metadata><TypeSignature Language="C#" Value="public sealed class ExpressionContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExpressionContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.ExpressionContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExpressionContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionContext sealed" />
  <TypeSignature Language="F#" Value="type ExpressionContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="906d6-101">提供一种在序列化程序之间传递上下文状态的方法。</span><span class="sxs-lookup"><span data-stu-id="906d6-101">Provides a means of passing context state among serializers.</span></span> <span data-ttu-id="906d6-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="906d6-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="906d6-103"><xref:System.ComponentModel.Design.Serialization.ExpressionContext>放置在上下文堆栈上并包含在序列化期间最相关的表达式。</span><span class="sxs-lookup"><span data-stu-id="906d6-103">An <xref:System.ComponentModel.Design.Serialization.ExpressionContext> is placed on the context stack and contains the most relevant expression during serialization.</span></span> <span data-ttu-id="906d6-104">下面的 C# 代码演示分配。</span><span class="sxs-lookup"><span data-stu-id="906d6-104">The following C# code demonstrates an assignment.</span></span>  
  
```csharp  
button1.Text = "Hello";  
```  
  
 <span data-ttu-id="906d6-105">序列化期间，多个序列化程序负责创建这一条语句。</span><span class="sxs-lookup"><span data-stu-id="906d6-105">During serialization, several serializers are responsible for creating this single statement.</span></span> <span data-ttu-id="906d6-106">这些序列化程序之一是负责创建"Hello"。</span><span class="sxs-lookup"><span data-stu-id="906d6-106">One of those serializers is responsible for creating "Hello".</span></span> <span data-ttu-id="906d6-107">有些的时候该序列化程序可能需要知道它在其中创建它的表达式的上下文。</span><span class="sxs-lookup"><span data-stu-id="906d6-107">There are times when that serializer may need to know the context in which it is creating its expression.</span></span> <span data-ttu-id="906d6-108">在上一示例中，不需要此上下文中。</span><span class="sxs-lookup"><span data-stu-id="906d6-108">In the previous example, this context is not needed.</span></span> <span data-ttu-id="906d6-109">下面的 C# 代码演示在其上下文的知识是必要的情况。</span><span class="sxs-lookup"><span data-stu-id="906d6-109">The following C# code shows a situation in which knowledge of the context is necessary.</span></span>  
  
```csharp  
button1.Text = rm.GetString("button1_Text");  
```  
  
 <span data-ttu-id="906d6-110">在这种情况下，负责创建的资源表达式的序列化程序需要通知的目标对象的名称。</span><span class="sxs-lookup"><span data-stu-id="906d6-110">In this case, the serializer responsible for creating the resource expression needs to be informed of the names of the target objects.</span></span> <span data-ttu-id="906d6-111"><xref:System.ComponentModel.Design.Serialization.ExpressionContext>类可用于此。</span><span class="sxs-lookup"><span data-stu-id="906d6-111">The <xref:System.ComponentModel.Design.Serialization.ExpressionContext> class can be used for this.</span></span> <span data-ttu-id="906d6-112">因为每个序列化程序创建一个表达式，并调用序列化程序来处理将语句作为一个整体的较小部分，序列化程序上下文堆栈上推送表达式上下文。</span><span class="sxs-lookup"><span data-stu-id="906d6-112">As each serializer creates an expression and invokes a serializer to handle a smaller part of the statement as a whole, the serializer pushes an expression context on the context stack.</span></span> <span data-ttu-id="906d6-113">每个表达式的上下文具有在堆栈查找下一步表达式上下文的 parent 属性。</span><span class="sxs-lookup"><span data-stu-id="906d6-113">Each expression context has a parent property that locates the next expression context on the stack.</span></span> <span data-ttu-id="906d6-114">这提供了方便的遍历功能。</span><span class="sxs-lookup"><span data-stu-id="906d6-114">This provides a convenient traversal capability.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
    <altmember cref="T:System.CodeDom.CodeExpression" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="906d6-115">初始化 <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="906d6-115">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionContext (System.CodeDom.CodeExpression expression, Type expressionType, object owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeExpression expression, class System.Type expressionType, object owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As CodeExpression, expressionType As Type, owner As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionContext(System::CodeDom::CodeExpression ^ expression, Type ^ expressionType, System::Object ^ owner);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.ExpressionContext : System.CodeDom.CodeExpression * Type * obj -&gt; System.ComponentModel.Design.Serialization.ExpressionContext" Usage="new System.ComponentModel.Design.Serialization.ExpressionContext (expression, expressionType, owner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="expressionType" Type="System.Type" />
        <Parameter Name="owner" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="906d6-116">给定代码表达式。</span><span class="sxs-lookup"><span data-stu-id="906d6-116">The given code expression.</span></span></param>
        <param name="expressionType"><span data-ttu-id="906d6-117">给定代码表达式的类型。</span><span class="sxs-lookup"><span data-stu-id="906d6-117">The given code expression type.</span></span></param>
        <param name="owner"><span data-ttu-id="906d6-118">给定代码表达式的所有者。</span><span class="sxs-lookup"><span data-stu-id="906d6-118">The given code expression owner.</span></span></param>
        <summary><span data-ttu-id="906d6-119">使用给定的表达式和所有者初始化 <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="906d6-119">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class with the given expression and owner.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="906d6-120"><paramref name="expression" />、<paramref name="expressionType" /> 或 <paramref name="owner" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="906d6-120"><paramref name="expression" />, <paramref name="expressionType" />, or <paramref name="owner" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionContext (System.CodeDom.CodeExpression expression, Type expressionType, object owner, object presetValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeExpression expression, class System.Type expressionType, object owner, object presetValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As CodeExpression, expressionType As Type, owner As Object, presetValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionContext(System::CodeDom::CodeExpression ^ expression, Type ^ expressionType, System::Object ^ owner, System::Object ^ presetValue);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.ExpressionContext : System.CodeDom.CodeExpression * Type * obj * obj -&gt; System.ComponentModel.Design.Serialization.ExpressionContext" Usage="new System.ComponentModel.Design.Serialization.ExpressionContext (expression, expressionType, owner, presetValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="expressionType" Type="System.Type" />
        <Parameter Name="owner" Type="System.Object" />
        <Parameter Name="presetValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="906d6-121">给定代码表达式。</span><span class="sxs-lookup"><span data-stu-id="906d6-121">The given code expression.</span></span></param>
        <param name="expressionType"><span data-ttu-id="906d6-122">给定代码表达式的类型。</span><span class="sxs-lookup"><span data-stu-id="906d6-122">The given code expression type.</span></span></param>
        <param name="owner"><span data-ttu-id="906d6-123">给定代码表达式的所有者。</span><span class="sxs-lookup"><span data-stu-id="906d6-123">The given code expression owner.</span></span></param>
        <param name="presetValue"><span data-ttu-id="906d6-124">给定代码表达式的预设值。</span><span class="sxs-lookup"><span data-stu-id="906d6-124">The given code expression preset value.</span></span></param>
        <summary><span data-ttu-id="906d6-125">使用当前值初始化 <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="906d6-125">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class with a current value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="906d6-126"><paramref name="expression" />、<paramref name="expressionType" /> 或 <paramref name="owner" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="906d6-126"><paramref name="expression" />, <paramref name="expressionType" />, or <paramref name="owner" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeExpression Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeExpression Expression" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expression As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeExpression ^ Expression { System::CodeDom::CodeExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Expression : System.CodeDom.CodeExpression" Usage="System.ComponentModel.Design.Serialization.ExpressionContext.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="906d6-127">获取此上下文表示的表达式。</span><span class="sxs-lookup"><span data-stu-id="906d6-127">Gets the expression this context represents.</span></span></summary>
        <value><span data-ttu-id="906d6-128">此上下文表示的表达式。</span><span class="sxs-lookup"><span data-stu-id="906d6-128">The expression this context represents.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="ExpressionType">
      <MemberSignature Language="C#" Value="public Type ExpressionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ExpressionType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpressionType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ExpressionType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpressionType : Type" Usage="System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="906d6-129">获取该表达式的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="906d6-129">Gets the <see cref="T:System.Type" /> of the expression.</span></span></summary>
        <value><span data-ttu-id="906d6-130">该表达式的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="906d6-130">The <see cref="T:System.Type" /> of the expression.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="906d6-131">可以使用<xref:System.ComponentModel.Design.Serialization.ExpressionContext>来确定将分配给该表达式时，是否需要强制转换。</span><span class="sxs-lookup"><span data-stu-id="906d6-131">You can use <xref:System.ComponentModel.Design.Serialization.ExpressionContext> to determine if a cast is needed when assigning to the expression.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public object Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Owner" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Owner { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : obj" Usage="System.ComponentModel.Design.Serialization.ExpressionContext.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="906d6-132">获取拥有此表达式的对象。</span><span class="sxs-lookup"><span data-stu-id="906d6-132">Gets the object owning this expression.</span></span></summary>
        <value><span data-ttu-id="906d6-133">拥有此表达式的对象。</span><span class="sxs-lookup"><span data-stu-id="906d6-133">The object owning this expression.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="906d6-134">如果表达式是对的属性引用<xref:System.Windows.Forms.Control.Text%2A>的实例的属性<xref:System.Windows.Forms.Button>称为`button1`，<xref:System.ComponentModel.Design.Serialization.ExpressionContext.Owner%2A>返回`button1`。</span><span class="sxs-lookup"><span data-stu-id="906d6-134">If the expression is a property reference to the <xref:System.Windows.Forms.Control.Text%2A> property of an instance of <xref:System.Windows.Forms.Button> called `button1`, <xref:System.ComponentModel.Design.Serialization.ExpressionContext.Owner%2A> returns `button1`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="PresetValue">
      <MemberSignature Language="C#" Value="public object PresetValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PresetValue" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PresetValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PresetValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PresetValue : obj" Usage="System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="906d6-135">获取表达式的预设值。</span><span class="sxs-lookup"><span data-stu-id="906d6-135">Gets the preset value of an expression.</span></span></summary>
        <value><span data-ttu-id="906d6-136">此表达式的预设值，如果没有赋值，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="906d6-136">The preset value of this expression, or <see langword="null" /> if not assigned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="906d6-137">包含一个表达式，表达式的预设的值应存在。</span><span class="sxs-lookup"><span data-stu-id="906d6-137">Contains the preset value of an expression, should one exist.</span></span> <span data-ttu-id="906d6-138">例如，如果表达式是指一个属性引用表达式<xref:System.Windows.Forms.Control.Controls%2A>的属性<xref:System.Windows.Forms.Button>，则<xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A>属性包含的实例<xref:System.Windows.Forms.Control.Controls%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="906d6-138">For example, if the expression is a property reference expression referring to the <xref:System.Windows.Forms.Control.Controls%2A> property of a <xref:System.Windows.Forms.Button>, the <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> property contains the instance of the <xref:System.Windows.Forms.Control.Controls%2A> property.</span></span> <span data-ttu-id="906d6-139">这是因为该属性是只读的和预先设置的要包含的值的对象。</span><span class="sxs-lookup"><span data-stu-id="906d6-139">This is because the property is read-only and preset by the object to contain a value.</span></span> <span data-ttu-id="906d6-140">另一方面，如属性<xref:System.Windows.Forms.Control.Text%2A>或<xref:System.Windows.Forms.Control.Visible%2A>不具有预设的值，因此<xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A>属性返回`null`。</span><span class="sxs-lookup"><span data-stu-id="906d6-140">On the other hand, a property such as <xref:System.Windows.Forms.Control.Text%2A> or <xref:System.Windows.Forms.Control.Visible%2A> does not have a preset value and therefore the <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> property returns `null`.</span></span>  
  
 <span data-ttu-id="906d6-141">下面的 C# 代码演示如何序列化程序可以使用此信息可引导序列化。</span><span class="sxs-lookup"><span data-stu-id="906d6-141">The following C# code shows how serializers can use this information to guide serialization.</span></span>  
  
```csharp  
Padding p = new Padding();  
p.Left = 5;  
button1.Padding = p;  
  
button1.Padding.Left = 5;  
```  
  
 <span data-ttu-id="906d6-142">序列化程序<xref:System.Windows.Forms.Padding>结构需要了解如果它应生成第一个或第二个窗体。</span><span class="sxs-lookup"><span data-stu-id="906d6-142">The serializer of the <xref:System.Windows.Forms.Padding> structure needs to be informed if it should generate the first or second form.</span></span> <span data-ttu-id="906d6-143">默认情况下生成第一个窗体。</span><span class="sxs-lookup"><span data-stu-id="906d6-143">The first form is generated by default.</span></span> <span data-ttu-id="906d6-144">如果没有，才会生成第二个窗体<xref:System.ComponentModel.Design.Serialization.ExpressionContext>上包含上下文堆栈<xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A>的值相等<xref:System.Windows.Forms.Padding>当前序列化。</span><span class="sxs-lookup"><span data-stu-id="906d6-144">The second form is only generated if there is an <xref:System.ComponentModel.Design.Serialization.ExpressionContext> on the context stack that contains a <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> equal to the value of the <xref:System.Windows.Forms.Padding> currently being serialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
  </Members>
</Type>