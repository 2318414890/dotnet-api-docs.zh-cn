<Type Name="CodeDomSerializerBase" FullName="System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
  <TypeSignature Language="C#" Value="public abstract class CodeDomSerializerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CodeDomSerializerBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeDomSerializerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeDomSerializerBase abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2fa31-101">为 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> 类提供基类。</span><span class="sxs-lookup"><span data-stu-id="2fa31-101">Provides a base class for <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> classes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fa31-102"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase>类用作之间的共享基<xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>和<xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer>类。</span><span class="sxs-lookup"><span data-stu-id="2fa31-102">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase> class is used as a shared base between the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> and <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> classes.</span></span> <span data-ttu-id="2fa31-103">公共<xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>类派生自<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase>类。</span><span class="sxs-lookup"><span data-stu-id="2fa31-103">Public <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> classes derive from the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase> class.</span></span> <span data-ttu-id="2fa31-104">每个公共类定义其自己的公共 API。</span><span class="sxs-lookup"><span data-stu-id="2fa31-104">Each public class defines its own public API.</span></span> <span data-ttu-id="2fa31-105"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase>类定义没有公共 API，但提供了多种可用于帮助序列化过程的实用工具方法。</span><span class="sxs-lookup"><span data-stu-id="2fa31-105">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase> class defines no public API, but does offer a multitude of utility methods that can be used to aid the serialization process.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
  </Docs>
  <Members>
    <Member MemberName="DeserializeExpression">
      <MemberSignature Language="C#" Value="protected object DeserializeExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string name, System.CodeDom.CodeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object DeserializeExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string name, class System.CodeDom.CodeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Function DeserializeExpression (manager As IDesignerSerializationManager, name As String, expression As CodeExpression) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ DeserializeExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::String ^ name, System::CodeDom::CodeExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-106">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-106">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="name"><span data-ttu-id="2fa31-107">从表达式生成的对象的名称。</span><span class="sxs-lookup"><span data-stu-id="2fa31-107">The name of the object that results from the expression.</span></span> <span data-ttu-id="2fa31-108">如果不需要命名该对象，可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-108">Can be <see langword="null" /> if there is no need to name the object.</span></span></param>
        <param name="expression"><span data-ttu-id="2fa31-109">要解释的 <see cref="T:System.CodeDom.CodeExpression" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-109">The <see cref="T:System.CodeDom.CodeExpression" /> to interpret.</span></span></param>
        <summary><span data-ttu-id="2fa31-110">将给定表达式反序列化为内存中的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-110">Deserializes the given expression into an in-memory object.</span></span></summary>
        <returns><span data-ttu-id="2fa31-111">从 <paramref name="expression" /> 的解释生成的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-111">An object resulting from interpretation of <paramref name="expression" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fa31-112">这是一个帮助器方法，该派生类方法可以调用要反序列化表达式。</span><span class="sxs-lookup"><span data-stu-id="2fa31-112">This is a helper method that derived classes can call to deserialize an expression.</span></span> <span data-ttu-id="2fa31-113">它进行反序列化的语句通过解释并执行指定的 CodeDOM 表达式`expression`参数，然后将结果返回。</span><span class="sxs-lookup"><span data-stu-id="2fa31-113">It deserializes the statement by interpreting and executing the CodeDOM expression specified by the `expression` parameter, and then returns the results.</span></span> <span data-ttu-id="2fa31-114">如果需要创建作为此表达式的结果对象，它将提供指定的名称`name`参数。</span><span class="sxs-lookup"><span data-stu-id="2fa31-114">If an object needs to be created as a result of this expression, it will be given the name specified by the `name` parameter.</span></span> <span data-ttu-id="2fa31-115">名称可以是`null`如果不需要命名对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-115">The name can be `null` if there is no need to name the object.</span></span> <span data-ttu-id="2fa31-116">下表描述了如何特定表达式进行处理。</span><span class="sxs-lookup"><span data-stu-id="2fa31-116">The following table describes how specific expressions are handled.</span></span>  
  
|<span data-ttu-id="2fa31-117">表达式</span><span class="sxs-lookup"><span data-stu-id="2fa31-117">Expression</span></span>|<span data-ttu-id="2fa31-118">行为</span><span class="sxs-lookup"><span data-stu-id="2fa31-118">Behavior</span></span>|  
|----------------|--------------|  
|<xref:System.CodeDom.CodeThisReferenceExpression>|<span data-ttu-id="2fa31-119">此表达式表示`this`或`Me`。</span><span class="sxs-lookup"><span data-stu-id="2fa31-119">This expression represents `this` or `Me`.</span></span> <span data-ttu-id="2fa31-120">若要找到与此表达式中，关联的对象<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A>方法在上下文堆栈中将看<xref:System.ComponentModel.Design.Serialization.RootContext>。</span><span class="sxs-lookup"><span data-stu-id="2fa31-120">To locate the object that is associated with this expression, the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> method will look in the context stack for a <xref:System.ComponentModel.Design.Serialization.RootContext>.</span></span> <span data-ttu-id="2fa31-121">此对象包含关系图和表示该表达式的根的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-121">This object contains the root object of the graph and the expression that represents it.</span></span> <span data-ttu-id="2fa31-122">如果对象存在，并且该表达式匹配，则将返回的根对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-122">If the object is present and the expression matches, the root object will be returned.</span></span> <span data-ttu-id="2fa31-123">如果实例找不到，则会报告错误。</span><span class="sxs-lookup"><span data-stu-id="2fa31-123">An error is reported if an instance cannot be located.</span></span>|  
|<xref:System.CodeDom.CodeFieldReferenceExpression>|<span data-ttu-id="2fa31-124">如果字段引用的目标的计算结果为根对象，<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A>的管理器参数的方法将用于检索基于名称的对象实例。</span><span class="sxs-lookup"><span data-stu-id="2fa31-124">If the target of the field reference evaluates to the root object, the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> method of the manager parameter will be used to retrieve the object instance based on name.</span></span> <span data-ttu-id="2fa31-125">否则，标准反射用于对目标对象找到请求的字段。</span><span class="sxs-lookup"><span data-stu-id="2fa31-125">Otherwise, standard reflection is used against the target object to locate the requested field.</span></span> <span data-ttu-id="2fa31-126">如果该字段不能找到，会报告错误。</span><span class="sxs-lookup"><span data-stu-id="2fa31-126">An error is reported if the field cannot be located.</span></span>|  
|<xref:System.CodeDom.CodeVariableReferenceExpression>|<span data-ttu-id="2fa31-127"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A>方法`manager`使用参数来查找实例表示给定的变量名称。</span><span class="sxs-lookup"><span data-stu-id="2fa31-127">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> method of the `manager` parameter is used to locate the instance representing the given variable name.</span></span> <span data-ttu-id="2fa31-128">如果实例找不到，则会报告错误。</span><span class="sxs-lookup"><span data-stu-id="2fa31-128">An error is reported if an instance cannot be located.</span></span>|  
  
 <span data-ttu-id="2fa31-129"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> 继续解释表达式，直到它们完全解析为对象，或它不再可以简化的表达式。</span><span class="sxs-lookup"><span data-stu-id="2fa31-129"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> continues to interpret expressions until they are completely resolved to an object, or until it can no longer simplify the expression.</span></span> <span data-ttu-id="2fa31-130">在这种情况下，<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A>将返回<xref:System.CodeDom.CodeExpression>，其中包含最简单的表达式。</span><span class="sxs-lookup"><span data-stu-id="2fa31-130">In this case, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> will return a <xref:System.CodeDom.CodeExpression> that contains the most simplified expression.</span></span> <span data-ttu-id="2fa31-131">不支持以下表达式：</span><span class="sxs-lookup"><span data-stu-id="2fa31-131">The following expressions are not supported:</span></span>  
  
-   <xref:System.CodeDom.CodeEventReferenceExpression>  
  
-   <xref:System.CodeDom.CodeMethodReferenceExpression>  
  
-   <xref:System.CodeDom.CodeDelegateCreateExpression>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="DeserializeInstance">
      <MemberSignature Language="C#" Value="protected virtual object DeserializeInstance (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type, object[] parameters, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object DeserializeInstance(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type type, object[] parameters, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ DeserializeInstance(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, Type ^ type, cli::array &lt;System::Object ^&gt; ^ parameters, System::String ^ name, bool addToContainer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-132">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-132">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="type"><span data-ttu-id="2fa31-133">要返回的实例的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-133">The <see cref="T:System.Type" /> of the instance to return.</span></span></param>
        <param name="parameters"><span data-ttu-id="2fa31-134">要传递给 <c>type</c> 的构造函数的参数。</span><span class="sxs-lookup"><span data-stu-id="2fa31-134">The parameters to pass to the constructor for <c>type</c>.</span></span></param>
        <param name="name"><span data-ttu-id="2fa31-135">反序列化的对象的名称。</span><span class="sxs-lookup"><span data-stu-id="2fa31-135">The name of the deserialized object.</span></span></param>
        <param name="addToContainer">
          <span data-ttu-id="2fa31-136">要将该对象添加到设计容器，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-136"><see langword="true" /> to add this object to the design container; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2fa31-137">该对象必须实现 <see cref="T:System.ComponentModel.IComponent" /> 才能使此功能生效。</span><span class="sxs-lookup"><span data-stu-id="2fa31-137">The object must implement <see cref="T:System.ComponentModel.IComponent" /> for this to have any effect.</span></span></param>
        <summary><span data-ttu-id="2fa31-138">返回给定类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2fa31-138">Returns an instance of the given type.</span></span></summary>
        <returns><span data-ttu-id="2fa31-139"><paramref name="type" /> 的一个实例。</span><span class="sxs-lookup"><span data-stu-id="2fa31-139">An instance of <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fa31-140"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance%2A>反序列化以获取对象的实例期间均会调用方法。</span><span class="sxs-lookup"><span data-stu-id="2fa31-140">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance%2A> method is invoked during deserialization to obtain an instance of an object.</span></span> <span data-ttu-id="2fa31-141">此调用时，应返回所请求类型的一个实例。</span><span class="sxs-lookup"><span data-stu-id="2fa31-141">When this is called, an instance of the requested type should be returned.</span></span> <span data-ttu-id="2fa31-142">默认实现调用<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>方法`manager`参数。</span><span class="sxs-lookup"><span data-stu-id="2fa31-142">The default implementation invokes the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> method of the `manager` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2fa31-143"><paramref name="manager" /> 或 <paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-143"><paramref name="manager" /> or <paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="DeserializePropertiesFromResources">
      <MemberSignature Language="C#" Value="protected void DeserializePropertiesFromResources (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DeserializePropertiesFromResources(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DeserializePropertiesFromResources (manager As IDesignerSerializationManager, value As Object, filter As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DeserializePropertiesFromResources(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-144">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-144">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="2fa31-145">要从其中对属性进行反序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-145">The object from which the properties are to be deserialized.</span></span></param>
        <param name="filter"><span data-ttu-id="2fa31-146">筛选将反序列化哪些属性的 <see cref="T:System.Attribute" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="2fa31-146">An <see cref="T:System.Attribute" /> array that filters which properties will be deserialized.</span></span></param>
        <summary><span data-ttu-id="2fa31-147">反序列化来自固定区域性资源包的给定对象的属性。</span><span class="sxs-lookup"><span data-stu-id="2fa31-147">Deserializes properties on the given object from the invariant culture’s resource bundle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fa31-148"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A>方法是可以调用派生类的一个帮助器方法。</span><span class="sxs-lookup"><span data-stu-id="2fa31-148">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A> method is a helper method that derived classes can call.</span></span> <span data-ttu-id="2fa31-149">它查找给定对象上的属性，并尝试加载外固定区域性的资源包及其值。</span><span class="sxs-lookup"><span data-stu-id="2fa31-149">It looks for properties on the given object and attempts to load their values out of the invariant culture’s resource bundle.</span></span> <span data-ttu-id="2fa31-150">这通常用于处理未发送到源代码的设计时属性。</span><span class="sxs-lookup"><span data-stu-id="2fa31-150">This is generally used to handle design-time properties that are not emitted into source code.</span></span> <span data-ttu-id="2fa31-151">它不应为本地化属性因为它仅在固定区域性的操作。</span><span class="sxs-lookup"><span data-stu-id="2fa31-151">It should not be used for localized properties because it only operates on the invariant culture.</span></span>  
  
 <span data-ttu-id="2fa31-152">此方法检查的所有属性`value`与指定特性匹配的参数`filter`参数，然后检查资源二进制对象中的这些属性。</span><span class="sxs-lookup"><span data-stu-id="2fa31-152">This method inspects all of the properties of the `value` parameter that match the attributes specified by the `filter` parameter, and then checks for those properties in a resource binary object.</span></span> <span data-ttu-id="2fa31-153">这可用于反序列化属性不能表示在代码中，例如设计时属性。</span><span class="sxs-lookup"><span data-stu-id="2fa31-153">This is useful for deserializing properties that cannot be represented in code, such as design-time properties.</span></span>  
  
 <span data-ttu-id="2fa31-154">此方法要求设计器加载程序提供<xref:System.ComponentModel.Design.IResourceService>要从其中读取资源。</span><span class="sxs-lookup"><span data-stu-id="2fa31-154">This method requires that a designer loader offers an <xref:System.ComponentModel.Design.IResourceService> to read resources.</span></span> <span data-ttu-id="2fa31-155">如果<xref:System.ComponentModel.Design.IResourceService>提供<xref:System.Resources.ResXResourceReader>对于固定区域性，然后<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A>将从 XML 资源 (.resx) 文件的元数据部分中，它不包括在最终编译的代码读取资源。</span><span class="sxs-lookup"><span data-stu-id="2fa31-155">If the <xref:System.ComponentModel.Design.IResourceService> provides a <xref:System.Resources.ResXResourceReader> for the invariant culture, then <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A> will read resources from the XML resource (.resx) file’s metadata section, which is not included in final compiled code.</span></span> <span data-ttu-id="2fa31-156">如果此服务不可用，将不读取任何资源。</span><span class="sxs-lookup"><span data-stu-id="2fa31-156">If this service is not available, no resources will be read.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="DeserializeStatement">
      <MemberSignature Language="C#" Value="protected void DeserializeStatement (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatement statement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DeserializeStatement(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatement statement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DeserializeStatement (manager As IDesignerSerializationManager, statement As CodeStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DeserializeStatement(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatement ^ statement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statement" Type="System.CodeDom.CodeStatement" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-157">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-157">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="statement"><span data-ttu-id="2fa31-158">要反序列化的 <see cref="T:System.CodeDom.CodeStatement" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-158">The <see cref="T:System.CodeDom.CodeStatement" /> to deserialize.</span></span></param>
        <summary><span data-ttu-id="2fa31-159">通过解释并执行 CodeDOM 语句反序列化语句。</span><span class="sxs-lookup"><span data-stu-id="2fa31-159">Deserializes a statement by interpreting and executing a CodeDOM statement.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fa31-160"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement%2A>方法是可以调用派生类的一个帮助器方法。</span><span class="sxs-lookup"><span data-stu-id="2fa31-160">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement%2A> method is a helper method that derived classes can call.</span></span> <span data-ttu-id="2fa31-161">它将解释`statement`参数。</span><span class="sxs-lookup"><span data-stu-id="2fa31-161">It interprets the `statement` parameter.</span></span>  
  
 <span data-ttu-id="2fa31-162"><xref:System.CodeDom.CodeStatement>反序列化将推送到上下文堆栈上。</span><span class="sxs-lookup"><span data-stu-id="2fa31-162">The <xref:System.CodeDom.CodeStatement> being deserialized will be pushed on the context stack.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatement" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributesFromTypeHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.AttributeCollection GetAttributesFromTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.AttributeCollection GetAttributesFromTypeHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributesFromTypeHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-163">序列化管理器。</span><span class="sxs-lookup"><span data-stu-id="2fa31-163">The serialization manager.</span></span></param>
        <param name="type"><span data-ttu-id="2fa31-164">目标类型。</span><span class="sxs-lookup"><span data-stu-id="2fa31-164">The target type.</span></span></param>
        <summary><span data-ttu-id="2fa31-165">获取项目目标 .NET Framework 版本中定义的特性的集合。</span><span class="sxs-lookup"><span data-stu-id="2fa31-165">Gets a collection of attributes as defined in the project's target version of the .NET Framework.</span></span></summary>
        <returns><span data-ttu-id="2fa31-166">项目目标 .NET Framework 版本中定义的特性的集合。</span><span class="sxs-lookup"><span data-stu-id="2fa31-166">A collection of attributes as defined in the project's target version of the .NET Framework.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributesHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.AttributeCollection GetAttributesHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.AttributeCollection GetAttributesHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetAttributesHelper (manager As IDesignerSerializationManager, instance As Object) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributesHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-167">序列化管理器。</span><span class="sxs-lookup"><span data-stu-id="2fa31-167">The serialization manager.</span></span></param>
        <param name="instance"><span data-ttu-id="2fa31-168">目标类型的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-168">An object of the target type.</span></span></param>
        <summary><span data-ttu-id="2fa31-169">获取项目目标 .NET Framework 版本中定义的特性的集合。</span><span class="sxs-lookup"><span data-stu-id="2fa31-169">Gets a collection of attributes as defined in the project's target version of the .NET Framework.</span></span></summary>
        <returns><span data-ttu-id="2fa31-170">项目目标 .NET Framework 版本中定义的特性的集合。</span><span class="sxs-lookup"><span data-stu-id="2fa31-170">A collection of attributes as defined in the project's target version of the .NET Framework.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventsHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.EventDescriptorCollection GetEventsHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.EventDescriptorCollection GetEventsHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetEventsHelper (manager As IDesignerSerializationManager, instance As Object, attributes As Attribute()) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEventsHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ instance, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-171">序列化管理器。</span><span class="sxs-lookup"><span data-stu-id="2fa31-171">The serialization manager.</span></span></param>
        <param name="instance"><span data-ttu-id="2fa31-172">目标类型的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-172">An object of the target type.</span></span></param>
        <param name="attributes"><span data-ttu-id="2fa31-173">要传递给目标 .NET Framework 版本的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="2fa31-173">An array of attributes to pass to the target version of the .NET Framework.</span></span></param>
        <summary><span data-ttu-id="2fa31-174">获取项目的 .NET Framework 的目标版本中定义的事件的集合。</span><span class="sxs-lookup"><span data-stu-id="2fa31-174">Gets a collection of events as defined in the project's target version of the .NET Framework.</span></span></summary>
        <returns><span data-ttu-id="2fa31-175">项目的 .NET Framework 的目标版本中定义的事件的集合。</span><span class="sxs-lookup"><span data-stu-id="2fa31-175">A collection of events as defined in the project's target version of the .NET Framework.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression GetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression GetExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetExpression (manager As IDesignerSerializationManager, value As Object) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ GetExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-176">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-176">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="2fa31-177">要为其获取表达式的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-177">The object for which to get an expression.</span></span></param>
        <summary><span data-ttu-id="2fa31-178">返回给定对象的表达式。</span><span class="sxs-lookup"><span data-stu-id="2fa31-178">Returns an expression for the given object.</span></span></summary>
        <returns><span data-ttu-id="2fa31-179">表示 <paramref name="value" /> 的 <see cref="T:System.CodeDom.CodeExpression" />，或者，如果没有 <paramref name="value" /> 的现有表达式，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-179">A <see cref="T:System.CodeDom.CodeExpression" /> representing <paramref name="value" />, or <see langword="null" /> if there is no existing expression for <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fa31-180"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>方法返回表示给定的对象的表达式。</span><span class="sxs-lookup"><span data-stu-id="2fa31-180">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method returns an expression representing the given object.</span></span> <span data-ttu-id="2fa31-181">它可返回`null`，以指示是否任何表达式已设置的描述对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-181">It can return `null`, indicating that no expression has been set that describes the object.</span></span> <span data-ttu-id="2fa31-182">表达式中以下三种方式获得：</span><span class="sxs-lookup"><span data-stu-id="2fa31-182">Expressions are acquired in one of three ways:</span></span>  
  
-   <span data-ttu-id="2fa31-183">该表达式可能会调用<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2fa31-183">The expression could be the result of a prior call to the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> method.</span></span>  
  
-   <span data-ttu-id="2fa31-184">表达式无法在找到<xref:System.ComponentModel.Design.Serialization.RootContext>。</span><span class="sxs-lookup"><span data-stu-id="2fa31-184">The expression could have been found in the <xref:System.ComponentModel.Design.Serialization.RootContext>.</span></span>  
  
-   <span data-ttu-id="2fa31-185">无法通过派生表达式<xref:System.ComponentModel.Design.IReferenceService>。</span><span class="sxs-lookup"><span data-stu-id="2fa31-185">The expression could be derived through <xref:System.ComponentModel.Design.IReferenceService>.</span></span>  
  
 <span data-ttu-id="2fa31-186">派生通过表达式<xref:System.ComponentModel.Design.IReferenceService>、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>方法查询给定的对象的名称引用服务。</span><span class="sxs-lookup"><span data-stu-id="2fa31-186">To derive expressions through <xref:System.ComponentModel.Design.IReferenceService>, the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method queries the reference service for a name for the given object.</span></span> <span data-ttu-id="2fa31-187">如果表达式服务返回有效的名称， <xref:System.ComponentModel.Design.IReferenceService>、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>方法进行检查以查看是否存在"。"名称中。</span><span class="sxs-lookup"><span data-stu-id="2fa31-187">If the expression service returns a valid name, <xref:System.ComponentModel.Design.IReferenceService>, the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method checks to see if there is a "." in the name.</span></span> <span data-ttu-id="2fa31-188">这表示，表达式服务对另一个对象作为只读属性的返回值找到此对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-188">This indicates that the expression service found this object as the return value of a read-only property on another object.</span></span> <span data-ttu-id="2fa31-189">如果没有"。"，<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>将拆分为部分的引用。</span><span class="sxs-lookup"><span data-stu-id="2fa31-189">If there is a ".", <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> will split the reference into parts.</span></span> <span data-ttu-id="2fa31-190">最左侧的部分是一个名称，将使用计算<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2fa31-190">The leftmost part is a name that will be evaluated with the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> method.</span></span> <span data-ttu-id="2fa31-191">对于每个后续部分中，将生成属性引用表达式。</span><span class="sxs-lookup"><span data-stu-id="2fa31-191">For each subsequent part, a property reference expression will be built.</span></span> <span data-ttu-id="2fa31-192">然后，将返回最终的表达式。</span><span class="sxs-lookup"><span data-stu-id="2fa31-192">The final expression will then be returned.</span></span>  
  
 <span data-ttu-id="2fa31-193">如果对象没有表达式设置，或在引用服务中，找不到对象<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>将返回`null`，，该值指示有对象没有现有表达式。</span><span class="sxs-lookup"><span data-stu-id="2fa31-193">If the object did not have an expression set, or if the object was not found in the reference service, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> will return `null`, indicating there is no existing expression for the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2fa31-194"><paramref name="manager" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-194"><paramref name="manager" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.PropertyDescriptorCollection GetPropertiesHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.PropertyDescriptorCollection GetPropertiesHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetPropertiesHelper (manager As IDesignerSerializationManager, instance As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetPropertiesHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ instance, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-195">序列化管理器。</span><span class="sxs-lookup"><span data-stu-id="2fa31-195">The serialization manager.</span></span></param>
        <param name="instance"><span data-ttu-id="2fa31-196">目标类型的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-196">An object of the target type.</span></span></param>
        <param name="attributes"><span data-ttu-id="2fa31-197">要传递给目标 .NET Framework 版本的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="2fa31-197">An array of attributes to pass to the target version of the .NET Framework.</span></span></param>
        <summary><span data-ttu-id="2fa31-198">获取项目的 .NET Framework 的目标版本中定义的属性的集合。</span><span class="sxs-lookup"><span data-stu-id="2fa31-198">Gets a collection of properties as defined in the project's target version of the .NET Framework.</span></span></summary>
        <returns><span data-ttu-id="2fa31-199">项目的 .NET Framework 的目标版本中定义的属性的集合。</span><span class="sxs-lookup"><span data-stu-id="2fa31-199">A collection of properties as defined in the project's target version of the .NET Framework.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReflectionTypeFromTypeHelper">
      <MemberSignature Language="C#" Value="protected static Type GetReflectionTypeFromTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Type GetReflectionTypeFromTypeHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static Type ^ GetReflectionTypeFromTypeHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-200">序列化管理器。</span><span class="sxs-lookup"><span data-stu-id="2fa31-200">The serialization manager.</span></span></param>
        <param name="type"><span data-ttu-id="2fa31-201">要从中使用元数据的类型。</span><span class="sxs-lookup"><span data-stu-id="2fa31-201">The type to use metadata from.</span></span></param>
        <summary><span data-ttu-id="2fa31-202">获取从类型元数据生成的反射类型。</span><span class="sxs-lookup"><span data-stu-id="2fa31-202">Gets a reflection type generated from type metadata.</span></span></summary>
        <returns><span data-ttu-id="2fa31-203">从 <paramref name="type" /> 的元数据生成的反射类型。</span><span class="sxs-lookup"><span data-stu-id="2fa31-203">A reflection type generated from the metadata of <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fa31-204">返回值不会等于`type`和不应该用于与非反射类型的比较。</span><span class="sxs-lookup"><span data-stu-id="2fa31-204">The return value will not be equal to `type` and should not be used for comparison with non-reflection types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReflectionTypeHelper">
      <MemberSignature Language="C#" Value="protected static Type GetReflectionTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Type GetReflectionTypeHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetReflectionTypeHelper (manager As IDesignerSerializationManager, instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static Type ^ GetReflectionTypeHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-205">序列化管理器。</span><span class="sxs-lookup"><span data-stu-id="2fa31-205">The serialization manager.</span></span></param>
        <param name="instance"><span data-ttu-id="2fa31-206">要从中使用元数据的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-206">The object to use metadata from.</span></span></param>
        <summary><span data-ttu-id="2fa31-207">获取从对象元数据生成的反射类型。</span><span class="sxs-lookup"><span data-stu-id="2fa31-207">Gets a reflection type generated from object metadata.</span></span></summary>
        <returns><span data-ttu-id="2fa31-208">从 <paramref name="object" /> 的元数据生成的反射类型。</span><span class="sxs-lookup"><span data-stu-id="2fa31-208">A reflection type generated from the metadata of <paramref name="object" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fa31-209">返回值不会等于对象的类型，并且不应该用于与非反射类型的比较。</span><span class="sxs-lookup"><span data-stu-id="2fa31-209">The return value will not be equal to the type of object and should not be used for comparison with non-reflection types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSerializer">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2fa31-210">定位给定对象值或类型的序列化程序。</span><span class="sxs-lookup"><span data-stu-id="2fa31-210">Locates a serializer for the given object value or type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetSerializer (manager As IDesignerSerializationManager, value As Object) As CodeDomSerializer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::Design::Serialization::CodeDomSerializer ^ GetSerializer(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.CodeDomSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-211">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-211">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="2fa31-212">指定要检索的序列化程序的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-212">The object specifying the serializer to retrieve.</span></span></param>
        <summary><span data-ttu-id="2fa31-213">定位给定对象值的序列化程序。</span><span class="sxs-lookup"><span data-stu-id="2fa31-213">Locates a serializer for the given object value.</span></span></summary>
        <returns><span data-ttu-id="2fa31-214">适合于 <paramref name="value" /> 的 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-214">A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> that is appropriate for <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fa31-215"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A>方法是扩展<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="2fa31-215">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> method is an extension to the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="2fa31-216"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType>方法采用一个对象类型，而不是对象值。</span><span class="sxs-lookup"><span data-stu-id="2fa31-216">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> method takes an object type, rather than an object value.</span></span> <span data-ttu-id="2fa31-217">如果外部方已重写通过特定对象的元数据<xref:System.ComponentModel.TypeDescriptor>，元数据重写方法将不会被发现<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType>方法，后者仅采用一个类型。</span><span class="sxs-lookup"><span data-stu-id="2fa31-217">If an external party had overridden metadata for a specific object through <xref:System.ComponentModel.TypeDescriptor>, that metadata override would not be seen by the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> method, which only takes a type.</span></span> <span data-ttu-id="2fa31-218"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A>方法检查值和值的类型的元数据。</span><span class="sxs-lookup"><span data-stu-id="2fa31-218">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> method checks the metadata of the value and the value’s type.</span></span> <span data-ttu-id="2fa31-219">如果两个不同，<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A>看是否存在自定义设计器的序列化程序属性的值。</span><span class="sxs-lookup"><span data-stu-id="2fa31-219">If the two differ, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> will look to see if there is a custom designer serializer attribute on the value.</span></span> <span data-ttu-id="2fa31-220">如果是这样，<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A>将尝试使用它。</span><span class="sxs-lookup"><span data-stu-id="2fa31-220">If so, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> will attempt to use it.</span></span> <span data-ttu-id="2fa31-221">否则，它将遵从<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="2fa31-221">Otherwise, it will defer to <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2fa31-222"><paramref name="manager" /> 或 <paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-222"><paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type valueType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type valueType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetSerializer (manager As IDesignerSerializationManager, valueType As Type) As CodeDomSerializer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::Design::Serialization::CodeDomSerializer ^ GetSerializer(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, Type ^ valueType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.CodeDomSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="valueType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-223">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-223">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="valueType"><span data-ttu-id="2fa31-224">指定要检索的序列化程序的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-224">The <see cref="T:System.Type" /> specifying the serializer to retrieve.</span></span></param>
        <summary><span data-ttu-id="2fa31-225">定位给定类型的序列化程序。</span><span class="sxs-lookup"><span data-stu-id="2fa31-225">Locates a serializer for the given type.</span></span></summary>
        <returns><span data-ttu-id="2fa31-226">适合于 <paramref name="valueType" /> 的 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-226">A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> that is appropriate for <paramref name="valueType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fa31-227"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A>方法是扩展<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="2fa31-227">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> method is an extension to the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="2fa31-228"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType>方法采用一个对象类型，而不是对象值。</span><span class="sxs-lookup"><span data-stu-id="2fa31-228">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> method takes an object type, rather than an object value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2fa31-229"><paramref name="manager" /> 或 <paramref name="valueType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-229"><paramref name="manager" /> or <paramref name="valueType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="GetTargetFrameworkProvider">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.TypeDescriptionProvider GetTargetFrameworkProvider (IServiceProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.TypeDescriptionProvider GetTargetFrameworkProvider(class System.IServiceProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetTargetFrameworkProvider (provider As IServiceProvider, instance As Object) As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ GetTargetFrameworkProvider(IServiceProvider ^ provider, System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="2fa31-230">类型说明提供程序服务。</span><span class="sxs-lookup"><span data-stu-id="2fa31-230">The type description provider service.</span></span></param>
        <param name="instance"><span data-ttu-id="2fa31-231">如果 <c>provider</c> 为 <see langword="null" />，则为一个可从中派生类型说明提供程序服务的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-231">An object from which the type description provider service can be derived, if <c>provider</c> is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="2fa31-232">获取 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />，它可在类型筛选中用来识别 .NET Framework 的目标版本。</span><span class="sxs-lookup"><span data-stu-id="2fa31-232">Gets a <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> that is aware of the target version of the .NET Framework, for use in type filtering.</span></span></summary>
        <returns><span data-ttu-id="2fa31-233">一个可识别 .NET Framework 的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="2fa31-233">A .NET Framework-aware type description provider.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniqueName">
      <MemberSignature Language="C#" Value="protected string GetUniqueName (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetUniqueName(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetUniqueName (manager As IDesignerSerializationManager, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetUniqueName(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-234">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-234">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="2fa31-235">将检索其名称的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-235">The object for which the name will be retrieved.</span></span></param>
        <summary><span data-ttu-id="2fa31-236">返回给定对象的唯一名称。</span><span class="sxs-lookup"><span data-stu-id="2fa31-236">Returns a unique name for the given object.</span></span></summary>
        <returns><span data-ttu-id="2fa31-237"><paramref name="value" /> 的唯一名称。</span><span class="sxs-lookup"><span data-stu-id="2fa31-237">A unique name for <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fa31-238"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> 方法调用 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="2fa31-238">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> method calls the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName%2A> method.</span></span> <span data-ttu-id="2fa31-239">如果此方法不返回一个名称，然后<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A>使用<xref:System.ComponentModel.Design.Serialization.INameCreationService>生成对象的有效名称。</span><span class="sxs-lookup"><span data-stu-id="2fa31-239">If this method does not return a name, then <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> uses <xref:System.ComponentModel.Design.Serialization.INameCreationService> to fabricate a valid name for the object.</span></span> <span data-ttu-id="2fa31-240">如果服务不可用，<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A>将生成基于 short 类型名称加上的索引编号，以使之唯一名称。</span><span class="sxs-lookup"><span data-stu-id="2fa31-240">If the service is not available, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> will fabricate a name based on the short type name combined with an index number to make it unique.</span></span> <span data-ttu-id="2fa31-241">通过调用与序列化管理器关联的生成的名称是<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A>方法之前将返回新的名称。</span><span class="sxs-lookup"><span data-stu-id="2fa31-241">The resulting name is associated with the serialization manager by calling the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A> method before the new name is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2fa31-242"><paramref name="manager" /> 或 <paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-242"><paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.INameCreationService" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSerialized">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2fa31-243">返回一个值，指示给定对象是否已序列化。</span><span class="sxs-lookup"><span data-stu-id="2fa31-243">Returns a value indicating whether the given object has been serialized.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSerialized">
      <MemberSignature Language="C#" Value="protected bool IsSerialized (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsSerialized(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsSerialized (manager As IDesignerSerializationManager, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsSerialized(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-244">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-244">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="2fa31-245">要为上面的序列化测试的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-245">The object to test for previous serialization.</span></span></param>
        <summary><span data-ttu-id="2fa31-246">返回一个值，指示给定对象是否已序列化。</span><span class="sxs-lookup"><span data-stu-id="2fa31-246">Returns a value indicating whether the given object has been serialized.</span></span></summary>
        <returns>
          <span data-ttu-id="2fa31-247">如果已序列化 <paramref name="value" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-247"><see langword="true" /> if <paramref name="value" /> has been serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fa31-248">有关`value`参数被视为序列化，则`manager`参数或另一个序列化程序必须已调用<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>方法来创建之间的关系`value`和引用表达式。</span><span class="sxs-lookup"><span data-stu-id="2fa31-248">For the `value` parameter to be considered serialized, the `manager` parameter or another serializer must have called the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> method to create a relationship between `value` and a referring expression.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2fa31-249"><paramref name="manager" /> 或 <paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-249"><paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="IsSerialized">
      <MemberSignature Language="C#" Value="protected bool IsSerialized (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool honorPreset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsSerialized(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool honorPreset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsSerialized (manager As IDesignerSerializationManager, value As Object, honorPreset As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsSerialized(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, bool honorPreset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="honorPreset" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-250">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-250">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="2fa31-251">要为上面的序列化测试的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-251">The object to test for previous serialization.</span></span></param>
        <param name="honorPreset">
          <span data-ttu-id="2fa31-252">要包含预设表达式，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-252"><see langword="true" /> to include preset expressions; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2fa31-253">返回一个值，指示给定对象是否已序列化，也可以考虑预设表达式。</span><span class="sxs-lookup"><span data-stu-id="2fa31-253">Returns a value indicating whether the given object has been serialized, optionally considering preset expressions.</span></span></summary>
        <returns>
          <span data-ttu-id="2fa31-254">如果已序列化 <paramref name="value" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-254"><see langword="true" /> if <paramref name="value" /> has been serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fa31-255">有关`value`参数被视为序列化，则`manager`参数或另一个序列化程序必须已调用<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>方法来创建之间的关系`value`和引用表达式。</span><span class="sxs-lookup"><span data-stu-id="2fa31-255">For the `value` parameter to be considered serialized, the `manager` parameter or another serializer must have called the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> method to create a relationship between `value` and a referring expression.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2fa31-256"><paramref name="manager" /> 或 <paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-256"><paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="SerializeCreationExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeCreationExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, out bool isComplete);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeCreationExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, [out] bool&amp; isComplete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SerializeCreationExpression (manager As IDesignerSerializationManager, value As Object, ByRef isComplete As Boolean) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ SerializeCreationExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, [Runtime::InteropServices::Out] bool % isComplete);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="isComplete" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-257">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-257">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="2fa31-258">要序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-258">The object to serialize.</span></span></param>
        <param name="isComplete">
          <span data-ttu-id="2fa31-259">如果已完全序列化 <c>value</c>，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-259"><see langword="true" /> if <c>value</c> was fully serialized; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2fa31-260">返回一个表示给定对象的创建的表达式。</span><span class="sxs-lookup"><span data-stu-id="2fa31-260">Returns an expression representing the creation of the given object.</span></span></summary>
        <returns><span data-ttu-id="2fa31-261">表示 <paramref name="value" /> 的创建的表达式。</span><span class="sxs-lookup"><span data-stu-id="2fa31-261">An expression representing the creation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fa31-262"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression%2A>方法可以用于序列化表达式，用于表示创建`value`参数。</span><span class="sxs-lookup"><span data-stu-id="2fa31-262">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression%2A> method can be used to serialize an expression that represents the creation of the `value` parameter.</span></span> <span data-ttu-id="2fa31-263">它所注意的实例描述符。</span><span class="sxs-lookup"><span data-stu-id="2fa31-263">It is aware of instance descriptors.</span></span>  
  
 <span data-ttu-id="2fa31-264">`isComplete`参数设置为`true`如果表达式表示的完整配置的对象，或`false`如果必须进一步执行序列化对象的属性。</span><span class="sxs-lookup"><span data-stu-id="2fa31-264">The `isComplete` parameter is set to `true` if the expression represents a fully configured object, or `false` if further serialization must be done on the object’s properties.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2fa31-265"><paramref name="manager" /> 或 <paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-265"><paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="SerializeEvent">
      <MemberSignature Language="C#" Value="protected void SerializeEvent (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, System.ComponentModel.EventDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeEvent(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.ComponentModel.EventDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeEvent (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, descriptor As EventDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeEvent(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, System::ComponentModel::EventDescriptor ^ descriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="descriptor" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-266">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-266">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="statements"><span data-ttu-id="2fa31-267">事件将序列化为的 <see cref="T:System.CodeDom.CodeStatementCollection" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-267">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the event will be serialized.</span></span></param>
        <param name="value"><span data-ttu-id="2fa31-268"><c>descriptor</c> 被绑定到的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-268">The object to which <c>descriptor</c> is bound.</span></span></param>
        <param name="descriptor"><span data-ttu-id="2fa31-269">指定要序列化的事件的 <see cref="T:System.ComponentModel.EventDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-269">An <see cref="T:System.ComponentModel.EventDescriptor" /> specifying the event to serialize.</span></span></param>
        <summary><span data-ttu-id="2fa31-270">将给定事件序列化为给定语句集合。</span><span class="sxs-lookup"><span data-stu-id="2fa31-270">Serializes the given event into the given statement collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fa31-271"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A>方法为派生类的一个帮助器方法可以调用要序列化到单个事件给定<xref:System.CodeDom.CodeStatementCollection>。</span><span class="sxs-lookup"><span data-stu-id="2fa31-271">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> method is a helper method that derived classes can call to serialize a single event into the given <xref:System.CodeDom.CodeStatementCollection>.</span></span> <span data-ttu-id="2fa31-272"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> 查询的序列化管理器<xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>对于给定的事件，然后询问<xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>将它序列化。</span><span class="sxs-lookup"><span data-stu-id="2fa31-272"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> queries the serialization manager for a <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> for the given event, and then asks the <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> to serialize it.</span></span>  
  
 <span data-ttu-id="2fa31-273"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> 将放置`statements`和`descriptor`参数<xref:System.ComponentModel.Design.Serialization.ContextStack>。</span><span class="sxs-lookup"><span data-stu-id="2fa31-273"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> places the `statements` and `descriptor` parameters on the <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 <span data-ttu-id="2fa31-274"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> 需要<xref:System.ComponentModel.Design.IEventBindingService>来发现事件绑定到不编译的方法。</span><span class="sxs-lookup"><span data-stu-id="2fa31-274"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> requires an <xref:System.ComponentModel.Design.IEventBindingService> to discover event bindings to methods that are not compiled.</span></span> <span data-ttu-id="2fa31-275">如果此服务不存在，将不会写入事件绑定到非编译的方法。</span><span class="sxs-lookup"><span data-stu-id="2fa31-275">If this service is not present, event bindings to non-compiled methods will not be written.</span></span> <span data-ttu-id="2fa31-276">如果事件绑定到的对象可以转换为表达式，则仍将序列事件绑定到已编译的方法。</span><span class="sxs-lookup"><span data-stu-id="2fa31-276">Event bindings to compiled methods will still be serialized if the objects to which the events are bound can be converted into expressions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2fa31-277"><paramref name="manager" />、<paramref name="value" />、<paramref name="statements" /> 或 <paramref name="descriptor" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-277"><paramref name="manager" />, <paramref name="value" />, <paramref name="statements" />, or <paramref name="descriptor" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
          <span data-ttu-id="2fa31-278"><see cref="T:System.ComponentModel.Design.IEventBindingService" /> 不可用。</span><span class="sxs-lookup"><span data-stu-id="2fa31-278"><see cref="T:System.ComponentModel.Design.IEventBindingService" /> is not available.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="T:System.ComponentModel.Design.IEventBindingService" />
      </Docs>
    </Member>
    <Member MemberName="SerializeEvents">
      <MemberSignature Language="C#" Value="protected void SerializeEvents (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, params Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeEvents(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeEvents (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, ParamArray filter As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeEvents(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, ... cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-279">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-279">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="statements"><span data-ttu-id="2fa31-280">事件将序列化为的 <see cref="T:System.CodeDom.CodeStatementCollection" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-280">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the event will be serialized.</span></span></param>
        <param name="value"><span data-ttu-id="2fa31-281">要在其上序列化事件的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-281">The object on which events will be serialized.</span></span></param>
        <param name="filter"><span data-ttu-id="2fa31-282">筛选将序列化哪些事件的 <see cref="T:System.Attribute" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="2fa31-282">An <see cref="T:System.Attribute" /> array that filters which events will be serialized.</span></span></param>
        <summary><span data-ttu-id="2fa31-283">将指定的事件序列化为给定语句集合。</span><span class="sxs-lookup"><span data-stu-id="2fa31-283">Serializes the specified events into the given statement collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fa31-284"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A>方法是可以调用派生类的一个帮助器方法。</span><span class="sxs-lookup"><span data-stu-id="2fa31-284">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A> method is a helper method that derived classes can call.</span></span> <span data-ttu-id="2fa31-285">它将查看事件`value`匹配的参数`filter`参数，然后调用<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A>为每个事件的方法。</span><span class="sxs-lookup"><span data-stu-id="2fa31-285">It looks at events on the `value` parameter that match the `filter` parameter, and then it calls the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> method for each event.</span></span>  
  
 <span data-ttu-id="2fa31-286"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A>方法位置<xref:System.ComponentModel.InheritanceAttribute>为`value`上<xref:System.ComponentModel.Design.Serialization.ContextStack>。</span><span class="sxs-lookup"><span data-stu-id="2fa31-286">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A> method places the <xref:System.ComponentModel.InheritanceAttribute> for `value` on the <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2fa31-287"><paramref name="manager" />、<paramref name="value" /> 或 <paramref name="statements" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-287"><paramref name="manager" />, <paramref name="value" />, or <paramref name="statements" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
      </Docs>
    </Member>
    <Member MemberName="SerializeProperties">
      <MemberSignature Language="C#" Value="protected void SerializeProperties (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeProperties(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeProperties (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, filter As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeProperties(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-288">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-288">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="statements"><span data-ttu-id="2fa31-289">属性将序列化为的 <see cref="T:System.CodeDom.CodeStatementCollection" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-289">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the properties will be serialized.</span></span></param>
        <param name="value"><span data-ttu-id="2fa31-290">要在其上序列化属性的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-290">The object on which the properties will be serialized.</span></span></param>
        <param name="filter"><span data-ttu-id="2fa31-291">筛选将序列化哪些属性的 <see cref="T:System.Attribute" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="2fa31-291">An <see cref="T:System.Attribute" /> array that filters which properties will be serialized.</span></span></param>
        <summary><span data-ttu-id="2fa31-292">将给定对象上的属性序列化为给定语句集合。</span><span class="sxs-lookup"><span data-stu-id="2fa31-292">Serializes the properties on the given object into the given statement collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fa31-293"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A>方法是可以调用派生类的一个帮助器方法。</span><span class="sxs-lookup"><span data-stu-id="2fa31-293">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A> method is a helper method that derived classes can call.</span></span> <span data-ttu-id="2fa31-294">查看其属性`value`匹配的参数`filter`参数，然后调用<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A>每个属性的方法。</span><span class="sxs-lookup"><span data-stu-id="2fa31-294">It looks at properties on the `value` parameter that match the `filter` parameter, and then it calls the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> method for each property.</span></span>  
  
 <span data-ttu-id="2fa31-295"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A>方法位置<xref:System.ComponentModel.InheritanceAttribute>为`value`上<xref:System.ComponentModel.Design.Serialization.ContextStack>。</span><span class="sxs-lookup"><span data-stu-id="2fa31-295">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A> method places the <xref:System.ComponentModel.InheritanceAttribute> for `value` on the <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2fa31-296"><paramref name="manager" />、<paramref name="value" /> 或 <paramref name="statements" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-296"><paramref name="manager" />, <paramref name="value" />, or <paramref name="statements" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
      </Docs>
    </Member>
    <Member MemberName="SerializePropertiesToResources">
      <MemberSignature Language="C#" Value="protected void SerializePropertiesToResources (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializePropertiesToResources(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializePropertiesToResources (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, filter As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializePropertiesToResources(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-297">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-297">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="statements"><span data-ttu-id="2fa31-298">未使用。</span><span class="sxs-lookup"><span data-stu-id="2fa31-298">Not used.</span></span></param>
        <param name="value"><span data-ttu-id="2fa31-299">将序列化其属性的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-299">The object whose properties will be serialized.</span></span></param>
        <param name="filter"><span data-ttu-id="2fa31-300">筛选将序列化哪些属性的 <see cref="T:System.Attribute" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="2fa31-300">An <see cref="T:System.Attribute" /> array that filters which properties will be serialized.</span></span></param>
        <summary><span data-ttu-id="2fa31-301">在给定对象上将属性序列化为固定区域性的资源包。</span><span class="sxs-lookup"><span data-stu-id="2fa31-301">Serializes the properties on the given object into the invariant culture’s resource bundle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fa31-302"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A>方法是可以调用派生类的一个帮助器方法。</span><span class="sxs-lookup"><span data-stu-id="2fa31-302">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A> method is a helper method that derived classes can call.</span></span> <span data-ttu-id="2fa31-303">查看其属性`value`匹配的参数`filter`参数，然后化为固定区域性的资源包的属性。</span><span class="sxs-lookup"><span data-stu-id="2fa31-303">It looks at properties on the `value` parameter that match the `filter` parameter, and then it serializes the properties into the invariant culture resource bundle.</span></span> <span data-ttu-id="2fa31-304">如果资源服务返回<xref:System.Resources.ResXResourceWriter>，属性值将存储在 XML 资源 (.resx) 文件的元数据部分。</span><span class="sxs-lookup"><span data-stu-id="2fa31-304">If the resource service returns a <xref:System.Resources.ResXResourceWriter>, the property values will be stored in the metadata section of the XML resource (.resx) file.</span></span> <span data-ttu-id="2fa31-305">`statements`未使用参数。</span><span class="sxs-lookup"><span data-stu-id="2fa31-305">The `statements` parameter is not used.</span></span>  
  
 <span data-ttu-id="2fa31-306">若要进行序列化作为资源，属性必须是简单 （不是内容的属性） 和其值必须是可序列化。</span><span class="sxs-lookup"><span data-stu-id="2fa31-306">To be serialized as a resource, a property must be simple (not a content property) and its value must be serializable.</span></span> <span data-ttu-id="2fa31-307">将跳过不符合此模式的属性。</span><span class="sxs-lookup"><span data-stu-id="2fa31-307">Properties that do not conform to this pattern will be skipped.</span></span>  
  
 <span data-ttu-id="2fa31-308"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A> 需要<xref:System.ComponentModel.Design.IResourceService>获取<xref:System.Resources.ResourceWriter>编写用于固定区域性的资源。</span><span class="sxs-lookup"><span data-stu-id="2fa31-308"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A> requires an <xref:System.ComponentModel.Design.IResourceService> to obtain a <xref:System.Resources.ResourceWriter> to write resources for the invariant culture.</span></span> <span data-ttu-id="2fa31-309">如果此服务不可用，则将不写入任何资源。</span><span class="sxs-lookup"><span data-stu-id="2fa31-309">If this service is not available, no resources will be written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2fa31-310"><paramref name="manager" />、<paramref name="value" /> 或 <paramref name="statements" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-310"><paramref name="manager" />, <paramref name="value" />, or <paramref name="statements" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="T:System.Resources.ResourceWriter" />
        <altmember cref="T:System.Resources.ResXResourceWriter" />
        <altmember cref="T:System.ComponentModel.Design.IResourceService" />
      </Docs>
    </Member>
    <Member MemberName="SerializeProperty">
      <MemberSignature Language="C#" Value="protected void SerializeProperty (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, System.ComponentModel.PropertyDescriptor propertyToSerialize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeProperty(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.ComponentModel.PropertyDescriptor propertyToSerialize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeProperty (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, propertyToSerialize As PropertyDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeProperty(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, System::ComponentModel::PropertyDescriptor ^ propertyToSerialize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="propertyToSerialize" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-311">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-311">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="statements"><span data-ttu-id="2fa31-312">属性将序列化为的 <see cref="T:System.CodeDom.CodeStatementCollection" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-312">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the property will be serialized.</span></span></param>
        <param name="value"><span data-ttu-id="2fa31-313">要在其上序列化属性的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-313">The object on which the property will be serialized.</span></span></param>
        <param name="propertyToSerialize"><span data-ttu-id="2fa31-314">要序列化的属性。</span><span class="sxs-lookup"><span data-stu-id="2fa31-314">The property to serialize.</span></span></param>
        <summary><span data-ttu-id="2fa31-315">序列化给定对象上的属性。</span><span class="sxs-lookup"><span data-stu-id="2fa31-315">Serializes a property on the given object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fa31-316"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A>方法检索<xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>为`propertyToSerialize`参数并委托给它。</span><span class="sxs-lookup"><span data-stu-id="2fa31-316">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> method retrieves a <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> for the `propertyToSerialize` parameter and delegates to it.</span></span>  
  
 <span data-ttu-id="2fa31-317"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> 将放置`statements`和`propertyToSerialize`参数<xref:System.ComponentModel.Design.Serialization.ContextStack>。</span><span class="sxs-lookup"><span data-stu-id="2fa31-317"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> places the `statements` and `propertyToSerialize` parameters on the <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2fa31-318"><paramref name="manager" />、<paramref name="value" />、<paramref name="statements" /> 或 <paramref name="propertyToSerialize" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-318"><paramref name="manager" />, <paramref name="value" />, <paramref name="statements" />, or <paramref name="propertyToSerialize" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
      </Docs>
    </Member>
    <Member MemberName="SerializeResource">
      <MemberSignature Language="C#" Value="protected void SerializeResource (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeResource(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeResource (manager As IDesignerSerializationManager, resourceName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeResource(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::String ^ resourceName, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-319">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-319">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="resourceName"><span data-ttu-id="2fa31-320"><c>value</c> 将被序列化到的资源包的名称。</span><span class="sxs-lookup"><span data-stu-id="2fa31-320">The name of the resource bundle into which <c>value</c> will be serialized.</span></span></param>
        <param name="value"><span data-ttu-id="2fa31-321">要序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-321">The object to serialize.</span></span></param>
        <summary><span data-ttu-id="2fa31-322">将给定对象序列化为使用给定资源名称的资源包。</span><span class="sxs-lookup"><span data-stu-id="2fa31-322">Serializes the given object into a resource bundle using the given resource name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fa31-323"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A>方法是使用给定名称的资源捆绑值序列化为一个帮助器方法。</span><span class="sxs-lookup"><span data-stu-id="2fa31-323">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> method is a helper method that serializes a value to a resource bundle under the given name.</span></span> <span data-ttu-id="2fa31-324">资源写入到的区域性由搜索序列化管理器的<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties%2A>属性的集合称为`ResourceCulture`。</span><span class="sxs-lookup"><span data-stu-id="2fa31-324">The culture that the resource is written to is determined by searching the serialization manager’s <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties%2A> collection for a property called `ResourceCulture`.</span></span> <span data-ttu-id="2fa31-325">如果存在此属性，资源将写入该区域性。</span><span class="sxs-lookup"><span data-stu-id="2fa31-325">If this property exists, resources will be written to that culture.</span></span> <span data-ttu-id="2fa31-326">否则，资源将写入固定区域性。</span><span class="sxs-lookup"><span data-stu-id="2fa31-326">Otherwise, resources will be written to the invariant culture.</span></span> <span data-ttu-id="2fa31-327">`value`参数必须是可序列化。</span><span class="sxs-lookup"><span data-stu-id="2fa31-327">The `value` parameter must be serializable.</span></span>  
  
 <span data-ttu-id="2fa31-328"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> 需要<xref:System.ComponentModel.Design.IResourceService>获取<xref:System.Resources.ResourceWriter>以写入正确区域性的资源。</span><span class="sxs-lookup"><span data-stu-id="2fa31-328"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> requires an <xref:System.ComponentModel.Design.IResourceService> to obtain a <xref:System.Resources.ResourceWriter> to write resources for the correct culture.</span></span> <span data-ttu-id="2fa31-329">如果此服务不可用，<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A>改为将生成表示资源的代码中的二进制对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-329">If this service is not available, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> will instead build a binary object in code that represents the resource.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="2fa31-330"><see langword="ResourceCulture" /> 是通过序列化管理器的访问的读写属性<see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />集合。</span><span class="sxs-lookup"><span data-stu-id="2fa31-330"><see langword="ResourceCulture" /> is a read-write property that is accessed through the serialization manager’s <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> collection.</span></span> <span data-ttu-id="2fa31-331"><see cref="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" />方法永远不会更改此属性的值; 它只是读取它来标识将写入的区域性。</span><span class="sxs-lookup"><span data-stu-id="2fa31-331">The <see cref="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" /> method never changes the value of this property; it merely reads it to identify the culture to which it will write.</span></span> <span data-ttu-id="2fa31-332">分析和加载资源时，反序列化期间设置的属性。</span><span class="sxs-lookup"><span data-stu-id="2fa31-332">The property is set during deserialization as resources are parsed and loaded.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.IResourceService" />
        <altmember cref="T:System.Resources.ResourceWriter" />
      </Docs>
    </Member>
    <Member MemberName="SerializeResourceInvariant">
      <MemberSignature Language="C#" Value="protected void SerializeResourceInvariant (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeResourceInvariant(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeResourceInvariant (manager As IDesignerSerializationManager, resourceName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeResourceInvariant(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::String ^ resourceName, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-333">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-333">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="resourceName"><span data-ttu-id="2fa31-334"><c>value</c> 将被序列化到的资源包的名称。</span><span class="sxs-lookup"><span data-stu-id="2fa31-334">The name of the resource bundle into which <c>value</c> will be serialized.</span></span></param>
        <param name="value"><span data-ttu-id="2fa31-335">要序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-335">The object to serialize.</span></span></param>
        <summary><span data-ttu-id="2fa31-336">将给定对象序列化为使用给定资源名称的资源包。</span><span class="sxs-lookup"><span data-stu-id="2fa31-336">Serializes the given object into a resource bundle using the given resource name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fa31-337">资源始终被写入到固定区域性。</span><span class="sxs-lookup"><span data-stu-id="2fa31-337">The resource is always written to the invariant culture.</span></span> <span data-ttu-id="2fa31-338">`value`参数必须是可序列化。</span><span class="sxs-lookup"><span data-stu-id="2fa31-338">The `value` parameter must be serializable.</span></span>  
  
 <span data-ttu-id="2fa31-339"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant%2A>方法需要<xref:System.ComponentModel.Design.IResourceService>获取<xref:System.Resources.ResourceWriter>以写入正确区域性的资源。</span><span class="sxs-lookup"><span data-stu-id="2fa31-339">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant%2A> method requires an <xref:System.ComponentModel.Design.IResourceService> to obtain a <xref:System.Resources.ResourceWriter> to write resources for the correct culture.</span></span> <span data-ttu-id="2fa31-340">如果此服务不可用，<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A>改为将生成表示资源的代码中的二进制对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-340">If this service is not available, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> will instead build a binary object in code that represents the resource.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.IResourceService" />
        <altmember cref="T:System.Resources.ResourceWriter" />
      </Docs>
    </Member>
    <Member MemberName="SerializeToExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeToExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeToExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SerializeToExpression (manager As IDesignerSerializationManager, value As Object) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ SerializeToExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-341">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-341">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="2fa31-342">要序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-342">The object to serialize.</span></span> <span data-ttu-id="2fa31-343">可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-343">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="2fa31-344">将给定对象序列化为表达式。</span><span class="sxs-lookup"><span data-stu-id="2fa31-344">Serializes the given object into an expression.</span></span></summary>
        <returns><span data-ttu-id="2fa31-345">如果 <paramref name="value" /> 可以序列化，则为 <see cref="T:System.CodeDom.CodeExpression" /> 对象；否则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-345">A <see cref="T:System.CodeDom.CodeExpression" /> object if <paramref name="value" /> can be serialized; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fa31-346">`value`参数可以为`null`，在这种情况下将返回的基元的表达式。</span><span class="sxs-lookup"><span data-stu-id="2fa31-346">The `value` parameter can be `null`, in which case a primitive expression will be returned.</span></span>  
  
 <span data-ttu-id="2fa31-347"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>方法用于序列化类型的以下规则：</span><span class="sxs-lookup"><span data-stu-id="2fa31-347">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> method uses the following rules for serializing types:</span></span>  
  
1.  <span data-ttu-id="2fa31-348">它首先调用<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>方法，以便查看是否表达式已创建的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-348">It first calls the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method to see if an expression has already been created for the object.</span></span> <span data-ttu-id="2fa31-349">如果是这样，它将返回现有的表达式。</span><span class="sxs-lookup"><span data-stu-id="2fa31-349">If so, it returns the existing expression.</span></span>  
  
2.  <span data-ttu-id="2fa31-350">然后，查找对象的序列化程序，并请求其序列化。</span><span class="sxs-lookup"><span data-stu-id="2fa31-350">It then locates the object’s serializer, and asks it to serialize.</span></span>  
  
3.  <span data-ttu-id="2fa31-351">如果该对象的序列化程序的返回值是<xref:System.CodeDom.CodeExpression>，返回的表达式。</span><span class="sxs-lookup"><span data-stu-id="2fa31-351">If the return value of the object’s serializer is a <xref:System.CodeDom.CodeExpression>, the expression is returned.</span></span>  
  
4.  <span data-ttu-id="2fa31-352">它使一个上次调用<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>以查看是否序列化程序将添加一个表达式。</span><span class="sxs-lookup"><span data-stu-id="2fa31-352">It makes one last call to <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> to see if the serializer added an expression.</span></span>  
  
5.  <span data-ttu-id="2fa31-353">最后，它返回`null`。</span><span class="sxs-lookup"><span data-stu-id="2fa31-353">Finally, it returns `null`.</span></span>  
  
 <span data-ttu-id="2fa31-354">如果无法创建没有表达式，并且找不到任何合适的序列化程序，将通过序列化管理器报告错误。</span><span class="sxs-lookup"><span data-stu-id="2fa31-354">If no expression could be created and no suitable serializer could be found, an error will be reported through the serialization manager.</span></span> <span data-ttu-id="2fa31-355">如果找到一个序列化程序，但它无法生成表达式，将不报告任何错误。</span><span class="sxs-lookup"><span data-stu-id="2fa31-355">No error will be reported if a serializer was found but it failed to produce an expression.</span></span> <span data-ttu-id="2fa31-356">在这种情况下，假定序列化程序也已报告了错误，或它不会尝试将对象序列化。</span><span class="sxs-lookup"><span data-stu-id="2fa31-356">In this case, it is assumed that the serializer either already reported the error or it did not attempt to serialize the object.</span></span>  
  
 <span data-ttu-id="2fa31-357">如果序列化程序返回语句的集合，这些语句将不会被放弃。</span><span class="sxs-lookup"><span data-stu-id="2fa31-357">If the serializer returned a statement or a collection of statements, those statements will not be discarded.</span></span> <span data-ttu-id="2fa31-358"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>方法首先将会查找<xref:System.ComponentModel.Design.Serialization.StatementContext>上下文堆栈，并将语句添加到语句上下文对象<xref:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="2fa31-358">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> method will first look for a <xref:System.ComponentModel.Design.Serialization.StatementContext> on the context stack and add statements to the statement context object's <xref:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection%2A> property.</span></span> <span data-ttu-id="2fa31-359">如果没有语句上下文，<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>方法看起来的上下文中<xref:System.CodeDom.CodeStatementCollection>并添加语句存在。</span><span class="sxs-lookup"><span data-stu-id="2fa31-359">If there is no statement context, the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> method will look in the context for a <xref:System.CodeDom.CodeStatementCollection> and add the statements there.</span></span> <span data-ttu-id="2fa31-360">如果没有可以找到要添加语句，将生成错误。</span><span class="sxs-lookup"><span data-stu-id="2fa31-360">If no place can be found to add the statements, an error will be generated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2fa31-361">不应调用<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>方法内的<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize%2A>时序列化您自己的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-361">You should not call the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> method within <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize%2A> when serializing your own object.</span></span> <span data-ttu-id="2fa31-362">相反，应调用<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>。</span><span class="sxs-lookup"><span data-stu-id="2fa31-362">Instead, you should call <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>.</span></span> <span data-ttu-id="2fa31-363">如果它返回`null`，创建你自己的表达式和调用<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>。</span><span class="sxs-lookup"><span data-stu-id="2fa31-363">If it returns `null`, create your own expression and call <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>.</span></span> <span data-ttu-id="2fa31-364">然后继续执行与你的序列化的其余部分。</span><span class="sxs-lookup"><span data-stu-id="2fa31-364">Then proceed with the rest of your serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2fa31-365"><paramref name="manager" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-365"><paramref name="manager" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.StatementContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SerializeToResourceExpression">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2fa31-366">将对象序列化为表达式。</span><span class="sxs-lookup"><span data-stu-id="2fa31-366">Serializes an object into an expression.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SerializeToResourceExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeToResourceExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeToResourceExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SerializeToResourceExpression (manager As IDesignerSerializationManager, value As Object) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ SerializeToResourceExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-367">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-367">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="2fa31-368">要序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-368">The object to serialize.</span></span></param>
        <summary><span data-ttu-id="2fa31-369">将给定对象序列化为表达式。</span><span class="sxs-lookup"><span data-stu-id="2fa31-369">Serializes the given object into an expression.</span></span></summary>
        <returns><span data-ttu-id="2fa31-370">将 <paramref name="value" /> 作为序列化的表达式包含在内的 <see cref="T:System.CodeDom.CodeExpression" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-370">A <see cref="T:System.CodeDom.CodeExpression" /> containing <paramref name="value" /> as a serialized expression.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fa31-371"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A>方法是一个帮助器方法，序列化到资源表达式的值。</span><span class="sxs-lookup"><span data-stu-id="2fa31-371">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> method is a helper method that serializes a value to a resource expression.</span></span> <span data-ttu-id="2fa31-372">这是与此相反<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A>方法，将值写入资源二进制对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-372">This is in contrast to the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> method, which writes a value to a resource binary object.</span></span> <span data-ttu-id="2fa31-373"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> 更进一步，并返回一个表达式，可以用来恢复该资源。</span><span class="sxs-lookup"><span data-stu-id="2fa31-373"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> goes one step further and returns an expression that can be used to recover the resource.</span></span> <span data-ttu-id="2fa31-374">例如，返回的值可能是"rm。GetValue("SomeBitmap");"。</span><span class="sxs-lookup"><span data-stu-id="2fa31-374">For example, the return value might be "rm.GetValue("SomeBitmap");".</span></span> <span data-ttu-id="2fa31-375">从计算资源的名称<xref:System.ComponentModel.Design.Serialization.ExpressionContext>，如果其中一个可以在上下文堆栈上找到。</span><span class="sxs-lookup"><span data-stu-id="2fa31-375">The name of the resource is calculated from the <xref:System.ComponentModel.Design.Serialization.ExpressionContext>, if one can be found on the context stack.</span></span>  
  
 <span data-ttu-id="2fa31-376"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A>方法看起来<xref:System.ComponentModel.Design.Serialization.ContextStack>以下对象：</span><span class="sxs-lookup"><span data-stu-id="2fa31-376">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> method will look on the <xref:System.ComponentModel.Design.Serialization.ContextStack> for the following objects:</span></span>  
  
-   <span data-ttu-id="2fa31-377"><xref:System.CodeDom.CodeStatementCollection>-的语句添加到资源管理器，如果其中一个需要声明的集合。</span><span class="sxs-lookup"><span data-stu-id="2fa31-377"><xref:System.CodeDom.CodeStatementCollection>—a collection of statements to add a resource manager to, if one needs to be declared.</span></span>  
  
-   <span data-ttu-id="2fa31-378"><xref:System.ComponentModel.Design.Serialization.RootContext>-创建资源管理器所需的根表达式。</span><span class="sxs-lookup"><span data-stu-id="2fa31-378"><xref:System.ComponentModel.Design.Serialization.RootContext>—the root expression, which is needed to create a resource manager.</span></span>  
  
-   <span data-ttu-id="2fa31-379"><xref:System.ComponentModel.Design.Serialization.ExpressionContext>-用于生成资源名称并决定哪种类型的资源管理器调用以发起。</span><span class="sxs-lookup"><span data-stu-id="2fa31-379"><xref:System.ComponentModel.Design.Serialization.ExpressionContext>—used to fabricate a name for the resource and to decide what type of resource manager call to make.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2fa31-380"><paramref name="manager" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-380"><paramref name="manager" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="SerializeToResourceExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeToResourceExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool ensureInvariant);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeToResourceExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool ensureInvariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SerializeToResourceExpression (manager As IDesignerSerializationManager, value As Object, ensureInvariant As Boolean) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ SerializeToResourceExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, bool ensureInvariant);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="ensureInvariant" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-381">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-381">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="2fa31-382">要序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-382">The object to serialize.</span></span></param>
        <param name="ensureInvariant">
          <span data-ttu-id="2fa31-383">要序列化为固定区域性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-383"><see langword="true" /> to serialize into the invariant culture; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2fa31-384">将给定对象序列化为适合于固定区域性的表达式。</span><span class="sxs-lookup"><span data-stu-id="2fa31-384">Serializes the given object into an expression appropriate for the invariant culture.</span></span></summary>
        <returns><span data-ttu-id="2fa31-385">将 <paramref name="value" /> 作为序列化的表达式包含在内的 <see cref="T:System.CodeDom.CodeExpression" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-385">A <see cref="T:System.CodeDom.CodeExpression" /> containing <paramref name="value" /> as a serialized expression.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fa31-386">如果`ensureInvariant`参数是`true`、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A>方法还将编写资源值到固定区域性的资源文件如果当前`ResourceCulture`不是固定的区域性...</span><span class="sxs-lookup"><span data-stu-id="2fa31-386">If the `ensureInvariant` parameter is `true`, the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> method will also write the resource value into the invariant culture’s resource file if the current `ResourceCulture` is not the invariant culture..</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2fa31-387"><paramref name="manager" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-387"><paramref name="manager" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetExpression">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2fa31-388">将一个对象与表达式相关联。</span><span class="sxs-lookup"><span data-stu-id="2fa31-388">Associates an object with an expression.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetExpression">
      <MemberSignature Language="C#" Value="protected void SetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, System.CodeDom.CodeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, class System.CodeDom.CodeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetExpression (manager As IDesignerSerializationManager, value As Object, expression As CodeExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, System::CodeDom::CodeExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-389">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-389">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="2fa31-390">要序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-390">The object to serialize.</span></span></param>
        <param name="expression"><span data-ttu-id="2fa31-391">要与 <c>value</c> 相关联的 <see cref="T:System.CodeDom.CodeExpression" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-391">The <see cref="T:System.CodeDom.CodeExpression" /> with which to associate <c>value</c>.</span></span></param>
        <summary><span data-ttu-id="2fa31-392">将一个对象与表达式相关联。</span><span class="sxs-lookup"><span data-stu-id="2fa31-392">Associates an object with an expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fa31-393"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>方法是将相关联的帮助器方法<xref:System.CodeDom.CodeExpression>的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-393">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> method is a helper method that associates a <xref:System.CodeDom.CodeExpression> with an object.</span></span> <span data-ttu-id="2fa31-394">已与这种方式中的表达式相关联的对象是可通过访问<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2fa31-394">Objects that have been associated with expressions in this way are accessible through the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method.</span></span> <span data-ttu-id="2fa31-395"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> 将它的表达式表存储作为附加对象上下文堆栈上，因此它是可访问的任何序列化程序的<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2fa31-395"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> stores its expression table as an appended object on the context stack so it is accessible by any serializer’s <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2fa31-396"><paramref name="manager" />、<paramref name="value" /> 或 <paramref name="expression" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-396"><paramref name="manager" />, <paramref name="value" />, or <paramref name="expression" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="SetExpression">
      <MemberSignature Language="C#" Value="protected void SetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, System.CodeDom.CodeExpression expression, bool isPreset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, class System.CodeDom.CodeExpression expression, bool isPreset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetExpression (manager As IDesignerSerializationManager, value As Object, expression As CodeExpression, isPreset As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, System::CodeDom::CodeExpression ^ expression, bool isPreset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="isPreset" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="2fa31-397">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-397">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="2fa31-398">要序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-398">The object to serialize.</span></span></param>
        <param name="expression"><span data-ttu-id="2fa31-399">要与 <c>value</c> 相关联的 <see cref="T:System.CodeDom.CodeExpression" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-399">The <see cref="T:System.CodeDom.CodeExpression" /> with which to associate <c>value</c>.</span></span></param>
        <param name="isPreset">
          <span data-ttu-id="2fa31-400">要指定预设表达式，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2fa31-400"><see langword="true" /> to specify a preset expression; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2fa31-401">将对象与表达式关联，并选择指定预设表达式。</span><span class="sxs-lookup"><span data-stu-id="2fa31-401">Associates an object with an expression, optionally specifying a preset expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fa31-402"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>方法是将相关联的帮助器方法<xref:System.CodeDom.CodeExpression>的对象。</span><span class="sxs-lookup"><span data-stu-id="2fa31-402">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> method is a helper method that associates a <xref:System.CodeDom.CodeExpression> with an object.</span></span> <span data-ttu-id="2fa31-403">已与这种方式中的表达式相关联的对象是可通过访问<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2fa31-403">Objects that have been associated with expressions in this way are accessible through the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method.</span></span> <span data-ttu-id="2fa31-404"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>作为附加对象上下文堆栈上存储其表达式表，因此它是可访问的任何序列化程序的<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2fa31-404">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> stores its expression table as an appended object on the context stack so it is accessible by any serializer’s <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
  </Members>
</Type>