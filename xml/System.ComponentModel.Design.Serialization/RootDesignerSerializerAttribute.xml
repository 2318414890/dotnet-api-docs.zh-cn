<Type Name="RootDesignerSerializerAttribute" FullName="System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="86eb547d7dba90c252698b143e61764dab6e1834" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36708559" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RootDesignerSerializerAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RootDesignerSerializerAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RootDesignerSerializerAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class RootDesignerSerializerAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type RootDesignerSerializerAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("This attribute has been deprecated. Use DesignerSerializerAttribute instead.  For example, to specify a root designer for CodeDom, use DesignerSerializerAttribute(...,typeof(TypeCodeDomSerializer)).  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4a513-101">指示用于根设计器对象的基序列化程序。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a513-101">Indicates the base serializer to use for a root designer object.</span>
      </span>
      <span data-ttu-id="4a513-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a513-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a513-103"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute> 指示要在序列化管理器序列化设计文档，以及是否指定序列化程序支持自动重新加载，但未事先设计文档的使用序列化程序完全释放的文档。</span><span class="sxs-lookup"><span data-stu-id="4a513-103"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute> indicates the serializer to use when the serialization manager serializes the design document, and whether the specified serializer supports automatic reloading of the design document without first completely disposing of the document.</span></span>  
  
 <span data-ttu-id="4a513-104">此属性包含以下重要成员：</span><span class="sxs-lookup"><span data-stu-id="4a513-104">This attribute contains the following significant members:</span></span>  
  
-   <span data-ttu-id="4a513-105"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName%2A> 指示要用来将该类在设计时序列化哪些序列化对象。</span><span class="sxs-lookup"><span data-stu-id="4a513-105"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName%2A> indicates what serialization object to use to serialize the class at design time.</span></span>  
  
-   <span data-ttu-id="4a513-106"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName%2A> 指示序列化对象的基类型的完全限定的名称。</span><span class="sxs-lookup"><span data-stu-id="4a513-106"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName%2A> indicates the fully qualified name of the serialization object's base type.</span></span>  
  
-   <span data-ttu-id="4a513-107"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A> 指示是否序列化程序支持重新加载设计文档，而无需用户交互，以打开新的设计器视图。</span><span class="sxs-lookup"><span data-stu-id="4a513-107"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A> indicates whether the serializer supports reloading a design document without user interaction to open a new designer view.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a513-108">下面的代码示例适用<xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute>到组件。</span><span class="sxs-lookup"><span data-stu-id="4a513-108">The following example code applies a <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute> to a component.</span></span>  
  
 [!code-cpp[IDesignerSerializationManagerSample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerSerializationManagerSample/CPP/idesignerserializationmanagersample.cpp#2)]
 [!code-csharp[IDesignerSerializationManagerSample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerSerializationManagerSample/CS/idesignerserializationmanagersample.cs#2)]
 [!code-vb[IDesignerSerializationManagerSample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerSerializationManagerSample/VB/idesignerserializationmanagersample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a513-109">使用指定特性初始化 <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a513-109">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> class using the specified attributes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RootDesignerSerializerAttribute (string serializerTypeName, string baseSerializerTypeName, bool reloadable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string serializerTypeName, string baseSerializerTypeName, bool reloadable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serializerTypeName As String, baseSerializerTypeName As String, reloadable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RootDesignerSerializerAttribute(System::String ^ serializerTypeName, System::String ^ baseSerializerTypeName, bool reloadable);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute : string * string * bool -&gt; System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" Usage="new System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute (serializerTypeName, baseSerializerTypeName, reloadable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializerTypeName" Type="System.String" />
        <Parameter Name="baseSerializerTypeName" Type="System.String" />
        <Parameter Name="reloadable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serializerTypeName">
          <span data-ttu-id="4a513-110">序列化程序的数据类型的完全限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a513-110">The fully qualified name of the data type of the serializer.</span>
          </span>
        </param>
        <param name="baseSerializerTypeName">
          <span data-ttu-id="4a513-111">序列化程序的基类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a513-111">The name of the base type of the serializer.</span>
          </span>
          <span data-ttu-id="4a513-112">一个类可以包含多个序列化程序，因为所有序列化程序都具有不同的基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a513-112">A class can include multiple serializers as they all have different base types.</span>
          </span>
        </param>
        <param name="reloadable">
          <span data-ttu-id="4a513-113">如果此序列化程序支持动态重新加载文档，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a513-113">
              <see langword="true" /> if this serializer supports dynamic reloading of the document; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a513-114">使用指定特性初始化 <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a513-114">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> class using the specified attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a513-115">创建新的设计器的序列化属性。</span><span class="sxs-lookup"><span data-stu-id="4a513-115">Creates a new designer serialization attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RootDesignerSerializerAttribute (string serializerTypeName, Type baseSerializerType, bool reloadable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string serializerTypeName, class System.Type baseSerializerType, bool reloadable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serializerTypeName As String, baseSerializerType As Type, reloadable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RootDesignerSerializerAttribute(System::String ^ serializerTypeName, Type ^ baseSerializerType, bool reloadable);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute : string * Type * bool -&gt; System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" Usage="new System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute (serializerTypeName, baseSerializerType, reloadable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializerTypeName" Type="System.String" />
        <Parameter Name="baseSerializerType" Type="System.Type" />
        <Parameter Name="reloadable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serializerTypeName">
          <span data-ttu-id="4a513-116">序列化程序的数据类型的完全限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a513-116">The fully qualified name of the data type of the serializer.</span>
          </span>
        </param>
        <param name="baseSerializerType">
          <span data-ttu-id="4a513-117">序列化程序的基类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a513-117">The name of the base type of the serializer.</span>
          </span>
          <span data-ttu-id="4a513-118">一个类可以包含多个序列化程序，因为所有序列化程序都具有不同的基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a513-118">A class can include multiple serializers, as they all have different base types.</span>
          </span>
        </param>
        <param name="reloadable">
          <span data-ttu-id="4a513-119">如果此序列化程序支持动态重新加载文档，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a513-119">
              <see langword="true" /> if this serializer supports dynamic reloading of the document; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a513-120">使用指定特性初始化 <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a513-120">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> class using the specified attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a513-121">创建新的设计器的序列化属性。</span><span class="sxs-lookup"><span data-stu-id="4a513-121">Creates a new designer serialization attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RootDesignerSerializerAttribute (Type serializerType, Type baseSerializerType, bool reloadable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type serializerType, class System.Type baseSerializerType, bool reloadable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.Type,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serializerType As Type, baseSerializerType As Type, reloadable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RootDesignerSerializerAttribute(Type ^ serializerType, Type ^ baseSerializerType, bool reloadable);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute : Type * Type * bool -&gt; System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" Usage="new System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute (serializerType, baseSerializerType, reloadable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializerType" Type="System.Type" />
        <Parameter Name="baseSerializerType" Type="System.Type" />
        <Parameter Name="reloadable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serializerType">
          <span data-ttu-id="4a513-122">序列化程序的数据类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a513-122">The data type of the serializer.</span>
          </span>
        </param>
        <param name="baseSerializerType">
          <span data-ttu-id="4a513-123">序列化程序的基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a513-123">The base type of the serializer.</span>
          </span>
          <span data-ttu-id="4a513-124">一个类可以包含多个序列化程序，因为所有序列化程序都具有不同的基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a513-124">A class can include multiple serializers as they all have different base types.</span>
          </span>
        </param>
        <param name="reloadable">
          <span data-ttu-id="4a513-125">如果此序列化程序支持动态重新加载文档，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a513-125">
              <see langword="true" /> if this serializer supports dynamic reloading of the document; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a513-126">使用指定特性初始化 <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a513-126">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> class using the specified attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a513-127">创建新的设计器的序列化属性。</span><span class="sxs-lookup"><span data-stu-id="4a513-127">Creates a new designer serialization attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reloadable">
      <MemberSignature Language="C#" Value="public bool Reloadable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Reloadable" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Reloadable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Reloadable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Reloadable : bool" Usage="System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a513-128">获取一个值，该值指示根序列化程序是否支持在不首先释放设计器宿主的条件下即可重新加载设计文档。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a513-128">Gets a value indicating whether the root serializer supports reloading of the design document without first disposing the designer host.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a513-129">如果根序列化程序支持重新加载，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a513-129">
              <see langword="true" /> if the root serializer supports reloading; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a513-130">如果此属性设置为`false`，设计文档不自动执行代表用户重新加载。</span><span class="sxs-lookup"><span data-stu-id="4a513-130">If this property is set to `false`, the design document does not automatically perform a reload on behalf of the user.</span></span> <span data-ttu-id="4a513-131">如果此属性设置为`false`、 负责用户重新打开设计器视图窗口对于设计文档中，如果更新或重新加载所需。</span><span class="sxs-lookup"><span data-stu-id="4a513-131">If this property is set to `false`, it is the user's responsibility to reopen the designer view window for the design document, if an update or reload is desired.</span></span>  
  
 <span data-ttu-id="4a513-132">部分序列化程序需要设计器加载过程以重建设计文档中的外部组件的交互。</span><span class="sxs-lookup"><span data-stu-id="4a513-132">Some serializers require the interaction of external components in the designer loading process in order to rebuild the design document.</span></span> <span data-ttu-id="4a513-133">这些序列化程序有时需要创建新的设计器宿主每次加载设计文档。</span><span class="sxs-lookup"><span data-stu-id="4a513-133">These serializers sometimes need to create a new designer host each time the design document is loaded.</span></span> <span data-ttu-id="4a513-134">如果是这样的话，<xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A>将设置为`false`，必须重新创建设计器宿主和由用户交互 （启动文档的设计器） 设计后释放文档。</span><span class="sxs-lookup"><span data-stu-id="4a513-134">If this is the situation, <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A> will be set to `false`, and the designer host must be recreated by user interaction (launching the designer for the document) after the design document is disposed.</span></span> <span data-ttu-id="4a513-135">事件和服务已连接到设计器宿主中，除通过反序列化，不会保留，并且可能需要再次设置。</span><span class="sxs-lookup"><span data-stu-id="4a513-135">The events and services that were connected to the designer host, except through deserialization, do not remain and may need to be set again.</span></span> <span data-ttu-id="4a513-136">如果<xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A>是`true`，设计文档可以重新加载设计器外部在更改后的代码，而无需关闭设计器窗口，然后重新打开它。</span><span class="sxs-lookup"><span data-stu-id="4a513-136">If <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A> is `true`, the design document can be reloaded after changes outside the designer are made to the code, without closing the designer window and reopening it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializerBaseTypeName">
      <MemberSignature Language="C#" Value="public string SerializerBaseTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerializerBaseTypeName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializerBaseTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerializerBaseTypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SerializerBaseTypeName : string" Usage="System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a513-137">获取序列化程序的基类型的完全限定类型名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a513-137">Gets the fully qualified type name of the base type of the serializer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a513-138">序列化程序的基类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a513-138">The name of the base type of the serializer.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializerTypeName">
      <MemberSignature Language="C#" Value="public string SerializerTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerializerTypeName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializerTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerializerTypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SerializerTypeName : string" Usage="System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a513-139">获取序列化程序的完全限定类型名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a513-139">Gets the fully qualified type name of the serializer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a513-140">序列化程序的类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a513-140">The name of the type of the serializer.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public override object TypeId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypeId" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.TypeId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypeId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ TypeId { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeId : obj" Usage="System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.TypeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a513-141">获取此特性类型的唯一 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a513-141">Gets a unique ID for this attribute type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a513-142">一个包含此特性类型的唯一 ID 的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a513-142">An object containing a unique ID for this attribute type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a513-143">此属性通过筛选算法用于标识具有相同的类型的两个特性。</span><span class="sxs-lookup"><span data-stu-id="4a513-143">This property is used by filtering algorithms to identify two attributes that are the same type.</span></span> <span data-ttu-id="4a513-144">对于大多数属性，这只返回<xref:System.Type>属性的实例。</span><span class="sxs-lookup"><span data-stu-id="4a513-144">For most attributes, this just returns the <xref:System.Type> instance for the attribute.</span></span> <span data-ttu-id="4a513-145"><xref:System.ComponentModel.EditorAttribute> 重写此特性以包含编辑器基类型的类型。</span><span class="sxs-lookup"><span data-stu-id="4a513-145"><xref:System.ComponentModel.EditorAttribute> overrides this to include the type of the editor base type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>