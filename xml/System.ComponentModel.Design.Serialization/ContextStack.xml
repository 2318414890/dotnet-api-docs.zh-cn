<Type Name="ContextStack" FullName="System.ComponentModel.Design.Serialization.ContextStack">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ee39372e13e8e5c6bb6ac16568007f4114539221" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ContextStack" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ContextStack extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.ContextStack" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ContextStack" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextStack sealed" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="165a7-101">提供堆栈对象，序列化程序可使用该对象向嵌套的序列化程序提供信息。</span>
      <span class="sxs-lookup">
        <span data-stu-id="165a7-101">Provides a stack object that can be used by a serializer to make information available to nested serializers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165a7-102">部分序列化程序需要有关对象的上下文的信息，以便正确地保留其状态。</span><span class="sxs-lookup"><span data-stu-id="165a7-102">Some serializers require information about the context of an object to correctly persist their state.</span></span> <span data-ttu-id="165a7-103"><xref:System.ComponentModel.Design.Serialization.ContextStack>类使序列化程序将正在序列化的对象的上下文相关的数据设置为堆栈另一个序列化程序可以访问的位置。</span><span class="sxs-lookup"><span data-stu-id="165a7-103">The <xref:System.ComponentModel.Design.Serialization.ContextStack> class enables a serializer to set data about the context of an object that is being serialized to a stack where another serializer can access it.</span></span> <span data-ttu-id="165a7-104">值<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A>提供属性<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>共享的部分序列化程序使用的信息。</span><span class="sxs-lookup"><span data-stu-id="165a7-104">The value of the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> property is provided by an <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> to share information of use to some serializers.</span></span>  
  
 <span data-ttu-id="165a7-105">上下文堆栈很有用，因为可以深嵌套的序列化设计文档的过程，并且每个级别的嵌套的对象可能需要上下文信息，以便正确地保留对象的状态。</span><span class="sxs-lookup"><span data-stu-id="165a7-105">A context stack is useful because the process of serializing a design document can be deeply nested, and objects at each level of nesting may require context information to correctly persist the state of the object.</span></span> <span data-ttu-id="165a7-106">序列化程序可以在调用嵌套的序列化程序之前将上下文对象设置为堆栈。</span><span class="sxs-lookup"><span data-stu-id="165a7-106">A serializer can set a context object to the stack before invoking a nested serializer.</span></span> <span data-ttu-id="165a7-107">设置堆栈为每个对象应序列化程序，以对嵌套的序列化程序的调用返回之后将其删除。</span><span class="sxs-lookup"><span data-stu-id="165a7-107">Each object set to the stack should be removed by the serializer that set it after a call to a nested serializer returns.</span></span>  
  
 <span data-ttu-id="165a7-108">通常，在堆栈上的对象包含当前正在序列化的对象有关的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="165a7-108">Typically, the objects on the stack contain information about the context of the current object that is being serialized.</span></span> <span data-ttu-id="165a7-109">父序列化程序将上下文信息添加到下一个要进行序列化的对象有关堆栈、 调用适当的序列化程序和序列化程序完成执行的对象上时的上下文信息从堆栈中移除。</span><span class="sxs-lookup"><span data-stu-id="165a7-109">A parent serializer adds context information to the stack about the next object to be serialized, calls an appropriate serializer and, when the serializer finishes executing on the object, removes the context information from the stack.</span></span> <span data-ttu-id="165a7-110">负责每个序列化程序，以确定哪些对象获取在此堆栈上推送的实现。</span><span class="sxs-lookup"><span data-stu-id="165a7-110">It is up to the implementation of each serializer to determine what objects get pushed on this stack.</span></span>  
  
 <span data-ttu-id="165a7-111">例如，具有属性的对象名为`Enabled`具有数据类型的<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="165a7-111">As an example, an object with a property named `Enabled` has a data type of <xref:System.Boolean>.</span></span> <span data-ttu-id="165a7-112">如果序列化程序将此值写入数据流，它可能需要包括上下文或正在写入的属性的类型。</span><span class="sxs-lookup"><span data-stu-id="165a7-112">If a serializer writes this value to a data stream, it might need to include the context or type of property it is writing.</span></span> <span data-ttu-id="165a7-113">序列化程序不具有此信息，但是，因为它仅指示要写入<xref:System.Boolean>值。</span><span class="sxs-lookup"><span data-stu-id="165a7-113">The serializer does not have this information, however, because it is only instructed to write the <xref:System.Boolean> value.</span></span> <span data-ttu-id="165a7-114">若要对序列化程序中提供此信息，父序列化程序可以将推送<xref:System.ComponentModel.PropertyDescriptor>指向`Enabled`上下文堆栈上的属性。</span><span class="sxs-lookup"><span data-stu-id="165a7-114">To provide this information to the serializer, the parent serializer can push a <xref:System.ComponentModel.PropertyDescriptor> that points to the `Enabled` property on the context stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="165a7-115">下面的代码示例演示如何使用<xref:System.ComponentModel.Design.Serialization.ContextStack>推送，然后删除 10 个值。</span><span class="sxs-lookup"><span data-stu-id="165a7-115">The following code example demonstrates using a <xref:System.ComponentModel.Design.Serialization.ContextStack> to push and then remove 10 values.</span></span>  
  
 [!code-cpp[ContextStackExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ContextStackExample/CPP/class1.cpp#1)]
 [!code-csharp[ContextStackExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ContextStackExample/CS/class1.cs#1)]
 [!code-vb[ContextStackExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ContextStackExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">
      <span data-ttu-id="165a7-116">对系统资源的完全访问权限。</span>
      <span class="sxs-lookup">
        <span data-stu-id="165a7-116">for full access to system resources.</span>
      </span>
      <span data-ttu-id="165a7-117">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />， <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="165a7-117">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      </span>
      <span data-ttu-id="165a7-118">关联的状态：</span>
      <span class="sxs-lookup">
        <span data-stu-id="165a7-118">Associated state:</span>
      </span>
    </permission>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextStack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ContextStack.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextStack();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="165a7-119">初始化 <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-119">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="165a7-120">下面的代码示例演示如何创建<xref:System.ComponentModel.Design.Serialization.ContextStack>实例。</span><span class="sxs-lookup"><span data-stu-id="165a7-120">The following code example demonstrates creating a <xref:System.ComponentModel.Design.Serialization.ContextStack> instance.</span></span>  
  
 [!code-cpp[ContextStackExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ContextStackExample/CPP/class1.cpp#2)]
 [!code-csharp[ContextStackExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ContextStackExample/CS/class1.cs#2)]
 [!code-vb[ContextStackExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ContextStackExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (object context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (context As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Object ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="165a7-121">要追加到堆栈中的上下文对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-121">A context object to append to the stack.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165a7-122">将对象追加到堆栈的结尾，而不是将其推到堆栈的顶部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-122">Appends an object to the end of the stack, rather than pushing it onto the top of the stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165a7-123">此方法允许序列化程序才能通过添加不需要按顺序移除的上下文数据对象与其他序列化程序进行通信。</span><span class="sxs-lookup"><span data-stu-id="165a7-123">This method allows a serializer to communicate with other serializers by adding contextual data objects that do not have to be removed in order.</span></span> <span data-ttu-id="165a7-124">没有方法来删除已追加到堆栈的末尾，而不删除所有其他对象的对象。</span><span class="sxs-lookup"><span data-stu-id="165a7-124">There is no way to remove an object that was appended to the end of the stack without removing all other objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="165a7-125">
            <paramref name="context" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-125">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ContextStack.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="165a7-126">获取堆栈上的当前对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-126">Gets the current object on the stack.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="165a7-127">堆栈上的当前对象，或者如果未推入任何对象则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-127">The current object on the stack, or <see langword="null" /> if no objects were pushed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165a7-128">当前对象是在堆栈上，顶部的对象或上一次添加到堆栈的对象。</span><span class="sxs-lookup"><span data-stu-id="165a7-128">The current object is the object at the top of the stack, or the object last added to the stack.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="165a7-129">获取或设置堆栈上指定级别的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-129">Gets or sets the object on the stack at the specified level.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int level] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(level As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int level); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="level">
          <span data-ttu-id="165a7-130">要在堆栈上检索的对象的级别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-130">The level of the object to retrieve on the stack.</span>
          </span>
          <span data-ttu-id="165a7-131">级别 0 是堆栈的顶级，级别 1 是接下来的一级，依次类推。</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-131">Level 0 is the top of the stack, level 1 is the next down, and so on.</span>
          </span>
          <span data-ttu-id="165a7-132">此级别必须大于或等于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-132">This level must be 0 or greater.</span>
          </span>
          <span data-ttu-id="165a7-133">如果级别大于该堆栈上的级别数，它返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-133">If level is greater than the number of levels on the stack, it returns <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165a7-134">获取堆栈上指定级别的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-134">Gets the object on the stack at the specified level.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="165a7-135">堆栈上指定级别的对象，或者在该级别不存在任何对象则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-135">The object on the stack at the specified level, or <see langword="null" /> if no object exists at that level.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="165a7-136">
            <paramref name="level" /> 小于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-136">
              <paramref name="level" /> is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[Type type] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Type)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(type As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[Type ^] { System::Object ^ get(Type ^ type); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="165a7-137">要从上下文堆栈检索的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-137">A type to retrieve from the context stack.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165a7-138">获取堆栈上从指定类型继承或者实现指定类型的第一个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-138">Gets the first object on the stack that inherits from or implements the specified type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="165a7-139">堆栈上从指定类型继承或者实现指定类型的第一个对象，或者如果在堆栈上没有任何对象实现此类型则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-139">The first object on the stack that inherits from or implements the specified type, or <see langword="null" /> if no object on the stack implements the type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165a7-140">在堆栈上，搜索实现或继承的对象的每个级别上进行检查`type`。</span><span class="sxs-lookup"><span data-stu-id="165a7-140">A check is made on each level of the stack, searching for an object that implements or inherits `type`.</span></span> <span data-ttu-id="165a7-141">如果找到匹配项，则它将返回。</span><span class="sxs-lookup"><span data-stu-id="165a7-141">If a match is found, it is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="165a7-142">
            <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-142">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public object Pop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Pop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ContextStack.Pop" />
      <MemberSignature Language="VB.NET" Value="Public Function Pop () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Pop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="165a7-143">从堆栈中移除当前对象并返回其值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-143">Removes the current object off of the stack, returning its value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="165a7-144">已从堆栈中移除的对象；如果堆栈中没有对象，则返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-144">The object removed from the stack; <see langword="null" /> if no objects are on the stack.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="165a7-145">下面的代码示例演示了如何移除中的值<xref:System.ComponentModel.Design.Serialization.ContextStack>。</span><span class="sxs-lookup"><span data-stu-id="165a7-145">The following code example demonstrates removing a value from a <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 [!code-cpp[ContextStackExample#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ContextStackExample/CPP/class1.cpp#4)]
 [!code-csharp[ContextStackExample#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ContextStackExample/CS/class1.cs#4)]
 [!code-vb[ContextStackExample#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ContextStackExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public void Push (object context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Push(object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Push (context As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Push(System::Object ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="165a7-146">推入到堆栈上的上下文对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-146">The context object to push onto the stack.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165a7-147">将指定对象推入（即放置）到堆栈上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-147">Pushes, or places, the specified object onto the stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="165a7-148">下面的代码示例演示对推入值<xref:System.ComponentModel.Design.Serialization.ContextStack>。</span><span class="sxs-lookup"><span data-stu-id="165a7-148">The following code example demonstrates pushing values to a <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 [!code-cpp[ContextStackExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ContextStackExample/CPP/class1.cpp#3)]
 [!code-csharp[ContextStackExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ContextStackExample/CS/class1.cs#3)]
 [!code-vb[ContextStackExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ContextStackExample/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="165a7-149">
            <paramref name="context" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-149">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>