<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WindowsIdentity.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52f851e11b9f4d68ee549248393d4930433485f88.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2f851e11b9f4d68ee549248393d4930433485f88</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Principal.WindowsIdentity">
          <source>Represents a Windows user.</source>
          <target state="translated">表示 Windows 用户。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Principal.WindowsIdentity">
          <source>Call the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A&gt;</ph> method to create a <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object that represents the current user.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A&gt;</ph>方法来创建<ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>表示当前用户的对象。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Principal.WindowsIdentity">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">此类型实现<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Principal.WindowsIdentity">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">在使用完类型后，您应直接或间接释放类型。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Principal.WindowsIdentity">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">若要直接释放类型，调用其<ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph>中的方法<ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph>块。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Principal.WindowsIdentity">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">若要间接释放类型，请使用 <ph id="ph1">`using`</ph>（在 C# 中）或 <ph id="ph2">`Using`</ph>（在 Visual Basic 中）等语言构造。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Principal.WindowsIdentity">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">有关详细信息，请参阅中的"使用实现 IDisposable 的对象"部分<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>接口主题。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Principal.WindowsIdentity">
          <source>The following example shows the use of members of <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> class.</source>
          <target state="translated">下面的示例演示了利用的成员<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Principal.WindowsIdentity">
          <source>For an example showing how to obtain a Windows account token through a call to the unmanaged Win32 <ph id="ph1">`LogonUser`</ph> function, and use that token to impersonate another user, see the <ph id="ph2">&lt;xref:System.Security.Principal.WindowsImpersonationContext&gt;</ph> class.</source>
          <target state="translated">有关示例显示如何获取 Windows 帐户标记通过调用非托管的 Win32<ph id="ph1">`LogonUser`</ph>函数，并使用该标记来模拟其他用户时，请参阅<ph id="ph2">&lt;xref:System.Security.Principal.WindowsImpersonationContext&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Security.Principal.WindowsIdentity">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)">
          <source>The account token for the user on whose behalf the code is running.</source>
          <target state="translated">用户的帐户标记，代码当前即以该用户的名义运行。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> class for the user represented by the specified Windows account token.</source>
          <target state="translated">为指定的 Windows 帐户标记表示的用户初始化 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>.</source>
          <target state="translated">下表显示的实例的初始属性值<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)">
          <source>Initial value</source>
          <target state="translated">初始值</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)">
          <source>You can retrieve the token represented by <ph id="ph1">`userToken`</ph> by calling unmanaged code such as the Win32 API <ph id="ph2">`LogonUser`</ph> function.</source>
          <target state="translated">你可以检索所表示的令牌<ph id="ph1">`userToken`</ph>通过调用非托管的代码如 Win32 API<ph id="ph2">`LogonUser`</ph>函数。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)">
          <source>Always release <ph id="ph1">`userToken`</ph> by calling the Win32 API <ph id="ph2">`CloseHandle`</ph> function.</source>
          <target state="translated">始终释放<ph id="ph1">`userToken`</ph>通过调用 Win32 API<ph id="ph2">`CloseHandle`</ph>函数。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)">
          <source>For more information on calling unmanaged code, see <bpt id="p1">[</bpt>Consuming Unmanaged DLL Functions<ept id="p1">](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)</ept>.</source>
          <target state="translated">调用非托管的代码的详细信息，请参阅<bpt id="p1">[</bpt>使用非托管 DLL 函数<ept id="p1">](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)</ept>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="userToken" /&gt;</ph> is 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="userToken" /&gt;</ph> 为 0。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="userToken" /&gt;</ph> is duplicated and invalid for impersonation.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="userToken" /&gt;</ph> 是重复的，对于模拟无效。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)">
          <source>The caller does not have the correct permissions.</source>
          <target state="translated">调用方没有正确的权限。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)">
          <source>A Win32 error occurred.</source>
          <target state="translated">出现 Win32 错误。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)">
          <source>for the ability to access unmanaged code.</source>
          <target state="translated">若要访问非托管的代码的功能。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">关联枚举：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.Security.Principal.WindowsIdentity)">
          <source>The object from which to construct the new instance of <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph>.</source>
          <target state="translated">根据其构造 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> 新实例的对象。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.Security.Principal.WindowsIdentity)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> class by using the specified <ph id="ph2">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> object.</source>
          <target state="translated">使用指定的 <ph id="ph2">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> 对象初始化 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)">
          <source>The UPN for the user on whose behalf the code is running.</source>
          <target state="translated">代码运行时所代表用户的 UPN。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> class for the user represented by the specified User Principal Name (UPN).</source>
          <target state="translated">初始化以指定用户主名称 (UPN) 表示的用户的 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)">
          <source>A UPN has the format <bpt id="p1">*</bpt>username<ept id="p1">*</ept><ph id="ph1">@</ph><bpt id="p2">*</bpt>domainname<ept id="p2">*</ept>.com, in other words, an email address.</source>
          <target state="translated">UPN 采用格式<bpt id="p1">*</bpt>用户名<ept id="p1">*</ept><ph id="ph1">@</ph><bpt id="p2">*</bpt>domainname<ept id="p2">*</ept>.com，换而言之，电子邮件地址。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)">
          <source>The UPN identified in <ph id="ph1">`sUserPrincipalName`</ph> is used to retrieve a token for that user through the Win32 API <ph id="ph2">`LsaLogonUser`</ph> function.</source>
          <target state="translated">中的 UPN 标识<ph id="ph1">`sUserPrincipalName`</ph>用于检索该用户通过 Win32 API 的令牌<ph id="ph2">`LsaLogonUser`</ph>函数。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)">
          <source>In turn that token is used to identify the user.</source>
          <target state="translated">反过来，该令牌用于标识用户。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)">
          <source>An exception might be returned due to the inability to log on using the supplied UPN.</source>
          <target state="translated">异常可能会返回由于无法使用所提供的 UPN 登录。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)">
          <source>This constructor is intended for use only on computers joined to Windows Server 2003 or later domains.</source>
          <target state="translated">此构造函数用于仅在加入到 Windows Server 2003 或更高版本的域的计算机上。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)">
          <source>An exception is thrown for earlier domain types.</source>
          <target state="translated">对于更早版本的域类型引发异常。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)">
          <source>This restriction is due to the fact that this constructor uses the <bpt id="p1">[</bpt>KERB_S4U_LOGON structure<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=143533)</ept>, which was first introduced in Windows Server 2003.</source>
          <target state="translated">此限制是因为，此构造函数使用<bpt id="p1">[</bpt>KERB_S4U_LOGON 结构<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=143533)</ept>，最初在 Windows Server 2003 中引入。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)">
          <source>Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</source>
          <target state="translated">Windows 返回 Windows NT 状态代码 STATUS_ACCESS_DENIED。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)">
          <source>There is insufficient memory available.</source>
          <target state="translated">没有足够的可用内存。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)">
          <source>The caller does not have the correct permissions.</source>
          <target state="translated">调用方没有正确的权限。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)">
          <source>The computer is not attached to a Windows 2003 or later domain.</source>
          <target state="translated">计算机未连接到 Windows 2003 或更高版本的域。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)">
          <source>The computer is not running Windows 2003 or later.</source>
          <target state="translated">计算机没有运行 Windows 2003 或更高版本。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)">
          <source>The user is not a member of the domain the computer is attached to.</source>
          <target state="translated">用户不是计算机所连接域的成员。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)">
          <source>for the ability to access unmanaged code.</source>
          <target state="translated">若要访问非托管的代码的功能。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">关联枚举：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)">
          <source>The account token for the user on whose behalf the code is running.</source>
          <target state="translated">用户的帐户标记，代码当前即以该用户的名义运行。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)">
          <source>(Informational use only.) The type of authentication used to identify the user.</source>
          <target state="translated">（仅供参考之用。）用于标识用户的身份验证的类型。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> class for the user represented by the specified Windows account token and the specified authentication type.</source>
          <target state="translated">为指定的 Windows 帐户标记和指定的身份验证类型表示的用户初始化 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>.</source>
          <target state="translated">下表显示的实例的初始属性值<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)">
          <source>Initial value</source>
          <target state="translated">初始值</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)">
          <source>The value of the <ph id="ph1">`type`</ph> parameter is used to set the <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</ph> parameter.</source>
          <target state="translated">值<ph id="ph1">`type`</ph>参数用于设置<ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</ph>参数。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)">
          <source>If <ph id="ph1">`type`</ph> is <ph id="ph2">`null`</ph>, the security system sets <ph id="ph3">&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</ph> to <ph id="ph4">`Negotiate`</ph> on Windows Vista and later versions of the Windows operating system, and to <ph id="ph5">`Kerberos`</ph> on earlier versions of the Windows operating system.</source>
          <target state="translated">如果<ph id="ph1">`type`</ph>是<ph id="ph2">`null`</ph>，安全系统组<ph id="ph3">&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</ph>到<ph id="ph4">`Negotiate`</ph>在 Windows Vista 和更高版本的 Windows 操作系统和<ph id="ph5">`Kerberos`</ph>早期版本的 Windows 操作系统上。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)">
          <source>The security system does not use this value; it is for informational use only.</source>
          <target state="translated">安全系统不使用此值;它是仅用于提供信息。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)">
          <source>You can retrieve the token represented by <ph id="ph1">`userToken`</ph> by calling unmanaged code such as the Win32 API <ph id="ph2">`LogonUser`</ph> function.</source>
          <target state="translated">你可以检索所表示的令牌<ph id="ph1">`userToken`</ph>通过调用非托管的代码如 Win32 API<ph id="ph2">`LogonUser`</ph>函数。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)">
          <source>Always release <ph id="ph1">`userToken`</ph> by calling the Win32 API <ph id="ph2">`CloseHandle`</ph> function.</source>
          <target state="translated">始终释放<ph id="ph1">`userToken`</ph>通过调用 Win32 API<ph id="ph2">`CloseHandle`</ph>函数。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)">
          <source>For more information on calling unmanaged code, see <bpt id="p1">[</bpt>Consuming Unmanaged DLL Functions<ept id="p1">](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)</ept>.</source>
          <target state="translated">调用非托管的代码的详细信息，请参阅<bpt id="p1">[</bpt>使用非托管 DLL 函数<ept id="p1">](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)</ept>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.%23ctor%2A&gt;</ph> constructor to create a new instance of the  <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> class for the user represented by the specified Windows account token and the specified authentication type.</source>
          <target state="translated">下面的代码演示如何使用<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.%23ctor%2A&gt;</ph>构造函数来创建的新实例<ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>按指定的 Windows 帐户标记和指定的身份验证类型表示的用户类。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)">
          <source><ph id="ph1">&lt;paramref name="userToken" /&gt;</ph> is 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="userToken" /&gt;</ph> 为 0。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)">
          <source><ph id="ph1">&lt;paramref name="userToken" /&gt;</ph> is duplicated and invalid for impersonation.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="userToken" /&gt;</ph> 是重复的，对于模拟无效。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)">
          <source>The caller does not have the correct permissions.</source>
          <target state="translated">调用方没有正确的权限。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)">
          <source>A Win32 error occurred.</source>
          <target state="translated">出现 Win32 错误。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)">
          <source>for the ability to access unmanaged code.</source>
          <target state="translated">若要访问非托管的代码的功能。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">关联枚举：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object containing the account information for the user.</source>
          <target state="translated">包含用户帐户信息的对象。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>An object that indicates the stream characteristics.</source>
          <target state="translated">指示流特征的对象。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> class for the user represented by information in a <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> stream.</source>
          <target state="translated">初始化 <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 流中的信息所表示的用户的 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Calling this method with untrusted data is a security risk.</source>
          <target state="translated">调用此方法不受信任的数据会带来安全风险。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Call this method only with trusted data.</source>
          <target state="translated">调用此方法仅受信任的数据。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Validation<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>数据验证<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> cannot be serialized across processes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> 无法跨进程序列化。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The caller does not have the correct permissions.</source>
          <target state="translated">调用方没有正确的权限。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A Win32 error occurred.</source>
          <target state="translated">出现 Win32 错误。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>for ability to manipulate the principal object.</source>
          <target state="translated">有关操作的主体对象的能力。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">关联枚举：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)">
          <source>The UPN for the user on whose behalf the code is running.</source>
          <target state="translated">代码运行时所代表用户的 UPN。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)">
          <source>(Informational use only.) The type of authentication used to identify the user.</source>
          <target state="translated">（仅供参考之用。）用于标识用户的身份验证的类型。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> class for the user represented by the specified User Principal Name (UPN) and the specified authentication type.</source>
          <target state="translated">初始化以指定用户主名称 (UPN) 和指定身份验证类型共同表示的用户的 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)">
          <source>The value of the <ph id="ph1">`type`</ph> parameter is used to set the <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</ph> parameter.</source>
          <target state="translated">值<ph id="ph1">`type`</ph>参数用于设置<ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</ph>参数。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)">
          <source>If <ph id="ph1">`type`</ph> is <ph id="ph2">`null`</ph>, the security system sets <ph id="ph3">&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</ph> to <ph id="ph4">`Negotiate`</ph> on Windows Vista and later versions of the Windows operating system, and to <ph id="ph5">`Kerberos`</ph> on earlier versions of the Windows operating system.</source>
          <target state="translated">如果<ph id="ph1">`type`</ph>是<ph id="ph2">`null`</ph>，安全系统组<ph id="ph3">&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</ph>到<ph id="ph4">`Negotiate`</ph>在 Windows Vista 和更高版本的 Windows 操作系统和<ph id="ph5">`Kerberos`</ph>早期版本的 Windows 操作系统上。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)">
          <source>The security system does not use this value; it is for informational use only.</source>
          <target state="translated">安全系统不使用此值;它是仅用于提供信息。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)">
          <source>The UPN identified in <ph id="ph1">`sUserPrincipalName`</ph> is used to retrieve a token for that user through the Win32 API <ph id="ph2">`LsaLogonUser`</ph> function.</source>
          <target state="translated">中的 UPN 标识<ph id="ph1">`sUserPrincipalName`</ph>用于检索该用户通过 Win32 API 的令牌<ph id="ph2">`LsaLogonUser`</ph>函数。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)">
          <source>In turn that token is used to identify the user.</source>
          <target state="translated">反过来，该令牌用于标识用户。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)">
          <source>An exception might be returned due to the inability to log on using the supplied UPN.</source>
          <target state="translated">异常可能会返回由于无法使用所提供的 UPN 登录。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)">
          <source>This constructor is intended for use only on computers joined to Windows Server 2003 or later domains.</source>
          <target state="translated">此构造函数用于仅在加入到 Windows Server 2003 或更高版本的域的计算机上。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)">
          <source>An exception is thrown for earlier domain types.</source>
          <target state="translated">对于更早版本的域类型引发异常。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)">
          <source>This restriction is due to the fact that this constructor uses the <bpt id="p1">[</bpt>KERB_S4U_LOGON structure<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=143533)</ept>, which was first introduced in Windows Server 2003.</source>
          <target state="translated">此限制是因为，此构造函数使用<bpt id="p1">[</bpt>KERB_S4U_LOGON 结构<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=143533)</ept>，最初在 Windows Server 2003 中引入。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)">
          <source>Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</source>
          <target state="translated">Windows 返回 Windows NT 状态代码 STATUS_ACCESS_DENIED。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)">
          <source>There is insufficient memory available.</source>
          <target state="translated">没有足够的可用内存。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)">
          <source>The caller does not have the correct permissions.</source>
          <target state="translated">调用方没有正确的权限。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)">
          <source>The computer is not attached to a Windows 2003 or later domain.</source>
          <target state="translated">计算机未连接到 Windows 2003 或更高版本的域。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)">
          <source>The computer is not running Windows 2003 or later.</source>
          <target state="translated">计算机没有运行 Windows 2003 或更高版本。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)">
          <source>The user is not a member of the domain the computer is attached to.</source>
          <target state="translated">用户不是计算机所连接域的成员。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)">
          <source>for the ability to access unmanaged code.</source>
          <target state="translated">若要访问非托管的代码的功能。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">关联枚举：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)">
          <source>The account token for the user on whose behalf the code is running.</source>
          <target state="translated">用户的帐户标记，代码当前即以该用户的名义运行。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)">
          <source>(Informational use only.) The type of authentication used to identify the user.</source>
          <target state="translated">（仅供参考之用。）用于标识用户的身份验证的类型。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)">
          <source>One of the enumeration values.</source>
          <target state="translated">枚举值之一。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> class for the user represented by the specified Windows account token, the specified authentication type, and the specified Windows account type.</source>
          <target state="translated">为指定的 Windows 帐户标记、指定的身份验证类型和指定的 Windows 帐户类型表示的用户初始化 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>.</source>
          <target state="translated">下表显示的实例的初始属性值<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)">
          <source>Initial Value</source>
          <target state="translated">初始值</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)">
          <source>The value of the <ph id="ph1">`type`</ph> parameter is used to set the <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</ph> parameter.</source>
          <target state="translated">值<ph id="ph1">`type`</ph>参数用于设置<ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</ph>参数。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)">
          <source>If <ph id="ph1">`type`</ph> is <ph id="ph2">`null`</ph>, the security system sets <ph id="ph3">&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</ph> to <ph id="ph4">`Negotiate`</ph> on Windows Vista and later versions of the Windows operating system, and to <ph id="ph5">`Kerberos`</ph> on earlier versions of the Windows operating system.</source>
          <target state="translated">如果<ph id="ph1">`type`</ph>是<ph id="ph2">`null`</ph>，安全系统组<ph id="ph3">&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</ph>到<ph id="ph4">`Negotiate`</ph>在 Windows Vista 和更高版本的 Windows 操作系统和<ph id="ph5">`Kerberos`</ph>早期版本的 Windows 操作系统上。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)">
          <source>The security system does not use this value; it is for informational use only.</source>
          <target state="translated">安全系统不使用此值;它是仅用于提供信息。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)">
          <source>You can retrieve the token represented by <ph id="ph1">`userToken`</ph> by calling unmanaged code such as the Win32 API <ph id="ph2">`LogonUser`</ph> function.</source>
          <target state="translated">你可以检索所表示的令牌<ph id="ph1">`userToken`</ph>通过调用非托管的代码如 Win32 API<ph id="ph2">`LogonUser`</ph>函数。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)">
          <source>Always release <ph id="ph1">`userToken`</ph> by calling the Win32 API <ph id="ph2">`CloseHandle`</ph> function.</source>
          <target state="translated">始终释放<ph id="ph1">`userToken`</ph>通过调用 Win32 API<ph id="ph2">`CloseHandle`</ph>函数。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)">
          <source>For more information on calling unmanaged code, see <bpt id="p1">[</bpt>Consuming Unmanaged DLL Functions<ept id="p1">](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)</ept>.</source>
          <target state="translated">调用非托管的代码的详细信息，请参阅<bpt id="p1">[</bpt>使用非托管 DLL 函数<ept id="p1">](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)</ept>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.%23ctor%2A&gt;</ph> constructor to create a new instance of the <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> class for the user represented by the specified Windows account token, the specified authentication type, and the specified Windows account type.</source>
          <target state="translated">下面的代码演示如何使用<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.%23ctor%2A&gt;</ph>构造函数来创建的新实例<ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>类，用于表示指定的 Windows 帐户标记、 指定的身份验证类型和指定的 Windows 帐户类型的用户。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)">
          <source><ph id="ph1">&lt;paramref name="userToken" /&gt;</ph> is 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="userToken" /&gt;</ph> 为 0。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)">
          <source><ph id="ph1">&lt;paramref name="userToken" /&gt;</ph> is duplicated and invalid for impersonation.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="userToken" /&gt;</ph> 是重复的，对于模拟无效。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)">
          <source>The caller does not have the correct permissions.</source>
          <target state="translated">调用方没有正确的权限。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)">
          <source>A Win32 error occurred.</source>
          <target state="translated">出现 Win32 错误。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)">
          <source>for the ability to access unmanaged code.</source>
          <target state="translated">若要访问非托管的代码的功能。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">关联枚举：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)">
          <source>The account token for the user on whose behalf the code is running.</source>
          <target state="translated">用户的帐户标记，代码当前即以该用户的名义运行。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)">
          <source>(Informational use only.) The type of authentication used to identify the user.</source>
          <target state="translated">（仅供参考之用。）用于标识用户的身份验证的类型。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)">
          <source>One of the enumeration values.</source>
          <target state="translated">枚举值之一。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate that the user is authenticated; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 指示用户已经过身份验证，否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> class for the user represented by the specified Windows account token, the specified authentication type, the specified Windows account type, and the specified authentication status.</source>
          <target state="translated">为指定的 Windows 帐户标记、指定的身份验证类型、指定的 Windows 帐户类型和指定的身份验证状态表示的用户初始化 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)">
          <source>The value of the <ph id="ph1">`type`</ph> parameter is used to set the <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</ph> parameter.</source>
          <target state="translated">值<ph id="ph1">`type`</ph>参数用于设置<ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</ph>参数。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)">
          <source>If <ph id="ph1">`type`</ph> is <ph id="ph2">`null`</ph>, the security system sets <ph id="ph3">&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</ph> to <ph id="ph4">`Negotiate`</ph> on Windows Vista and later versions of the Windows operating system, and to <ph id="ph5">`Kerberos`</ph> on earlier versions of the Windows operating system.</source>
          <target state="translated">如果<ph id="ph1">`type`</ph>是<ph id="ph2">`null`</ph>，安全系统组<ph id="ph3">&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</ph>到<ph id="ph4">`Negotiate`</ph>在 Windows Vista 和更高版本的 Windows 操作系统和<ph id="ph5">`Kerberos`</ph>早期版本的 Windows 操作系统上。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)">
          <source>The security system does not use this value; it is for informational use only.</source>
          <target state="translated">安全系统不使用此值;它是仅用于提供信息。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)">
          <source>You can retrieve the token represented by <ph id="ph1">`userToken`</ph> by calling unmanaged code such as the Win32 API <ph id="ph2">`LogonUser`</ph> function.</source>
          <target state="translated">你可以检索所表示的令牌<ph id="ph1">`userToken`</ph>通过调用非托管的代码如 Win32 API<ph id="ph2">`LogonUser`</ph>函数。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)">
          <source>Always release <ph id="ph1">`userToken`</ph> by calling the Win32 API <ph id="ph2">`CloseHandle`</ph> function.</source>
          <target state="translated">始终释放<ph id="ph1">`userToken`</ph>通过调用 Win32 API<ph id="ph2">`CloseHandle`</ph>函数。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)">
          <source>For more information on calling unmanaged code, see <bpt id="p1">[</bpt>Consuming Unmanaged DLL Functions<ept id="p1">](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)</ept>.</source>
          <target state="translated">调用非托管的代码的详细信息，请参阅<bpt id="p1">[</bpt>使用非托管 DLL 函数<ept id="p1">](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)</ept>。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.%23ctor%2A&gt;</ph> constructor to create a new instance of the <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> class for the user represented by the specified Windows account token, the specified authentication type, the specified Windows account type, and the specified authentication status.</source>
          <target state="translated">下面的代码演示如何使用<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.%23ctor%2A&gt;</ph>构造函数来创建的新实例<ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>类，用于表示指定的 Windows 帐户标记、 指定的身份验证类型、 指定的 Windows 帐户类型的用户和指定的身份验证状态。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="userToken" /&gt;</ph> is 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="userToken" /&gt;</ph> 为 0。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="userToken" /&gt;</ph> is duplicated and invalid for impersonation.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="userToken" /&gt;</ph> 是重复的，对于模拟无效。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)">
          <source>The caller does not have the correct permissions.</source>
          <target state="translated">调用方没有正确的权限。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)">
          <source>A Win32 error occurred.</source>
          <target state="translated">出现 Win32 错误。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)">
          <source>for the ability to access unmanaged code.</source>
          <target state="translated">若要访问非托管的代码的功能。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">关联枚举：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="P:System.Security.Principal.WindowsIdentity.AccessToken">
          <source>Gets this <ph id="ph1">&lt;see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" /&gt;</ph> for this <ph id="ph2">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> instance.</source>
          <target state="translated">获取此 <ph id="ph2">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> 实例的此 <ph id="ph1">&lt;see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.AccessToken">
          <source>Returns a <ph id="ph1">&lt;see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" /&gt;</ph>.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="P:System.Security.Principal.WindowsIdentity.AuthenticationType">
          <source>Gets the type of authentication used to identify the user.</source>
          <target state="translated">获取用于标识用户的身份验证的类型。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.AuthenticationType">
          <source>The type of authentication used to identify the user.</source>
          <target state="translated">用于标识用户的身份验证的类型。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.AuthenticationType">
          <source>This property is informational; it is not used by the security system.</source>
          <target state="translated">此属性是信息性;通过安全系统不使用它。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.AuthenticationType">
          <source>On Windows Vista and later versions of the Windows operating system, the default value for this property is <ph id="ph1">`Negotiate`</ph>, which chooses the best security support provider (SSP) based on customer-configured security policy.</source>
          <target state="translated">在 Windows Vista 和更高版本的 Windows 操作系统上，此属性的默认值是<ph id="ph1">`Negotiate`</ph>，其中选择最佳安全支持提供程序 (SSP) 根据客户配置安全策略。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.AuthenticationType">
          <source>The default property value for earlier versions of the Windows operating system is <ph id="ph1">`Kerberos`</ph>.</source>
          <target state="translated">早期版本的 Windows 操作系统的默认属性值是<ph id="ph1">`Kerberos`</ph>。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="P:System.Security.Principal.WindowsIdentity.AuthenticationType">
          <source>Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</source>
          <target state="translated">Windows 返回 Windows NT 状态代码 STATUS_ACCESS_DENIED。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="P:System.Security.Principal.WindowsIdentity.AuthenticationType">
          <source>There is insufficient memory available.</source>
          <target state="translated">没有足够的可用内存。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="P:System.Security.Principal.WindowsIdentity.AuthenticationType">
          <source>The caller does not have the correct permissions.</source>
          <target state="translated">调用方没有正确的权限。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="P:System.Security.Principal.WindowsIdentity.AuthenticationType">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.Security.Principal.WindowsIdentity.AuthenticationType">
          <source>The computer is not attached to a Windows 2003 or later domain.</source>
          <target state="translated">计算机未连接到 Windows 2003 或更高版本的域。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="P:System.Security.Principal.WindowsIdentity.AuthenticationType">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.Security.Principal.WindowsIdentity.AuthenticationType">
          <source>The computer is not running Windows 2003 or later.</source>
          <target state="translated">计算机没有运行 Windows 2003 或更高版本。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.Security.Principal.WindowsIdentity.AuthenticationType">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="P:System.Security.Principal.WindowsIdentity.AuthenticationType">
          <source>The user is not a member of the domain the computer is attached to.</source>
          <target state="translated">用户不是计算机所连接域的成员。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Security.Principal.WindowsIdentity.Claims">
          <source>Gets all claims for the user represented by this Windows identity.</source>
          <target state="translated">为用户获取此 Windows 标识表示的所有声明。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.Claims">
          <source>A collection of claims for this <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> object.</source>
          <target state="translated">表示该 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> 对象的请求的集合。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.Clone">
          <source>Creates a new  object that is a copy of the current instance.</source>
          <target state="translated">创建作为当前实例副本的新对象。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.Clone">
          <source>A copy of the current instance.</source>
          <target state="translated">当前实例的副本。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="F:System.Security.Principal.WindowsIdentity.DefaultIssuer">
          <source>Identifies the name of the default <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsIdentity" /&gt;</ph> issuer.</source>
          <target state="translated">标识默认 <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsIdentity" /&gt;</ph> 颁发者的名称。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="P:System.Security.Principal.WindowsIdentity.DeviceClaims">
          <source>Gets claims that have the <ph id="ph1">&lt;see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /&gt;</ph> property key.</source>
          <target state="translated">获取有 <ph id="ph1">&lt;see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /&gt;</ph> 属性密钥的声明。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.DeviceClaims">
          <source>A collection of claims that have the <ph id="ph1">&lt;see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /&gt;</ph> property key.</source>
          <target state="translated">具有 <ph id="ph1">&lt;see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /&gt;</ph> 属性键的声明的集合。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="T:System.Security.Principal.WindowsIdentity">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph>.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> 占用的资源。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph>.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> 使用的所有资源。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>.</source>
          <target state="translated">在完成使用 <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.Dispose%2A&gt;</ph> 后，应调用 <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.Dispose%2A&gt;</ph> 方法使 <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> 处于不可用状态。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> was occupying.</source>
          <target state="translated">在调用<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.Dispose%2A&gt;</ph>，必须释放对所有引用<ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>以便垃圾回收器才能回收的内存，<ph id="ph3">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>占用。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>实现 Dispose 方法<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>.</source>
          <target state="translated">每次释放对 <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.Dispose%2A&gt;</ph> 的最后一个引用前，均应调用 <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">否则，在垃圾回收器调用 <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> 对象的 <ph id="ph2">`Finalize`</ph> 方法之前，该对象正在使用的资源不会被释放。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">若要释放托管资源和非托管资源，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；若仅释放非托管资源，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> 占用的非托管资源，还可以另外再释放托管资源。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">此方法称为由公共<ph id="ph1">`Dispose()`</ph>方法和<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 调用受保护<ph id="ph2">`Dispose(Boolean)`</ph>方法替换<ph id="ph3">`disposing`</ph>参数设置为<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 调用<ph id="ph2">`Dispose`</ph>与<ph id="ph3">`disposing`</ph>设置为<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> references.</source>
          <target state="translated">当 <ph id="ph1">`disposing`</ph> 参数为 <ph id="ph2">`true`</ph> 时，此方法释放该 <ph id="ph3">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> 引用的、由任何托管对象持有的全部资源。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">此方法调用每个引用对象的 <ph id="ph1">`Dispose()`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 可以由其他对象多次调用。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>请注意不要引用已释放的以前调用中的对象<ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">有关如何实现详细信息<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>，请参阅<bpt id="p1">[</bpt>实现 Dispose 方法<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">有关详细信息<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.GetAnonymous">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> object that you can use as a sentinel value in your code to represent an anonymous user.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> 对象，可在代码中将其用作 sentinel 值来表示匿名用户。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.GetAnonymous">
          <source>The property value does not represent the built-in anonymous identity used by the Windows operating system.</source>
          <target state="translated">属性值不表示 Windows 操作系统使用的内置匿名标识。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.GetAnonymous">
          <source>An object that represents an anonymous user.</source>
          <target state="translated">表示匿名用户的对象。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.GetAnonymous">
          <source>This property returns an empty <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object that enables you to treat operations as anonymous.</source>
          <target state="translated">此属性返回一个空<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>使您能够将操作视为匿名的对象。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.GetAnonymous">
          <source>The property value does not correspond to a Windows anonymous user and cannot be used for impersonation.</source>
          <target state="translated">属性值不对应 Windows 匿名用户，并且不用于模拟。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.GetAnonymous">
          <source>Also, note that the identity returned by this property is not static; each call to <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt;</ph> returns a different anonymous identity.</source>
          <target state="translated">此外，请注意，此属性返回的标识不是静态的;每次调用<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt;</ph>返回不同的匿名标识。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.GetAnonymous">
          <source>You can use the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt;</ph> property to detect the return value from <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt;</ph>.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt;</ph>属性来检测的返回值<ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.GetAnonymous">
          <source>However, <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt;</ph> detects both the Windows anonymous identity and the anonymous identity returned by this method.</source>
          <target state="translated">但是，<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt;</ph>检测 Windows 匿名标识和此方法返回的匿名标识。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.GetAnonymous">
          <source>To use the latter identity, cache the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt;</ph> return value instead of relying on the <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt;</ph> property.</source>
          <target state="translated">若要使用后一种标识，缓存<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt;</ph>返回值而不是依靠<ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.GetAnonymous">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt;</ph> method to return a <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object that represents an anonymous Windows user.</source>
          <target state="translated">下面的代码演示如何使用<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt;</ph>方法以返回<ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>表示匿名 Windows 用户的对象。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.GetAnonymous">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="T:System.Security.Principal.WindowsIdentity">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> object that represents the current Windows user.</source>
          <target state="translated">返回表示当前 Windows 用户的 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.GetCurrent">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> object that represents the current Windows user.</source>
          <target state="translated">返回表示当前 Windows 用户的 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.GetCurrent">
          <source>An object that represents the current user.</source>
          <target state="translated">表示当前用户的对象。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.GetCurrent">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A&gt;</ph> method to return a <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object that represents the current Windows user.</source>
          <target state="translated">下面的代码演示如何使用<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A&gt;</ph>方法以返回<ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>对象，表示当前 Windows 用户。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.GetCurrent">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.GetCurrent">
          <source>The caller does not have the correct permissions.</source>
          <target state="translated">调用方没有正确的权限。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.GetCurrent">
          <source>for ability to manipulate the principal object.</source>
          <target state="translated">有关操作的主体对象的能力。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.GetCurrent">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">关联枚举：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to return the <ph id="ph2">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> only if the thread is currently impersonating; <ph id="ph3">&lt;see langword="false" /&gt;</ph> to return the <ph id="ph4">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> of the thread if it is impersonating or the <ph id="ph5">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> of the process if the thread is not currently impersonating.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则仅在线程当前正在模拟时才返回 <ph id="ph2">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph>；如果为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>，则在线程正在模拟时返回线程的 <ph id="ph4">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph>，或在线程当前没有模拟时返回进程的 <ph id="ph5">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Boolean)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> object that represents the Windows identity for either the thread or the process, depending on the value of the <ph id="ph2">&lt;paramref name="ifImpersonating" /&gt;</ph> parameter.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> 对象，该对象表示线程或进程（具体取决于 <ph id="ph2">&lt;paramref name="ifImpersonating" /&gt;</ph> 参数的值）的 Windows 标识。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Boolean)">
          <source>An object that represents a Windows user.</source>
          <target state="translated">表示 Windows 用户的对象。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Boolean)">
          <source>If <ph id="ph1">`ifImpersonating`</ph> is <ph id="ph2">`true`</ph> and the thread is not impersonating, the returned <ph id="ph3">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object has no value.</source>
          <target state="translated">如果<ph id="ph1">`ifImpersonating`</ph>是<ph id="ph2">`true`</ph>和线程不模拟时，返回<ph id="ph3">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>对象不具有任何值。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Boolean)">
          <source>If <ph id="ph1">`ifImpersonating`</ph> is <ph id="ph2">`false`</ph> and the thread is impersonating, the <ph id="ph3">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> for the thread is returned.</source>
          <target state="translated">如果<ph id="ph1">`ifImpersonating`</ph>是<ph id="ph2">`false`</ph>和线程正在模拟，则<ph id="ph3">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>返回线程。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Boolean)">
          <source>If <ph id="ph1">`ifImpersonating`</ph> is <ph id="ph2">`false`</ph> and the thread is not impersonating, the <ph id="ph3">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> for the process is returned.</source>
          <target state="translated">如果<ph id="ph1">`ifImpersonating`</ph>是<ph id="ph2">`false`</ph>且线程不模拟，则<ph id="ph3">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>返回进程。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Boolean)">
          <source>for ability to manipulate the principal object.</source>
          <target state="translated">有关操作的主体对象的能力。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">关联枚举：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Security.Principal.TokenAccessLevels)">
          <source>A bitwise combination of the enumeration values.</source>
          <target state="translated">枚举值的按位组合。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Security.Principal.TokenAccessLevels)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> object that represents the current Windows user, using the specified desired token access level.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> 对象，该对象使用指定的所需标记访问级别来表示当前 Windows 用户。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Security.Principal.TokenAccessLevels)">
          <source>An object that represents the current user.</source>
          <target state="translated">表示当前用户的对象。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Security.Principal.TokenAccessLevels)">
          <source>The <ph id="ph1">`desiredAccess`</ph> parameter specifies an access mask that identifies the requested types of access to the access token.</source>
          <target state="translated"><ph id="ph1">`desiredAccess`</ph>参数指定标识的访问权限的访问令牌的请求的类型的访问掩码。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Security.Principal.TokenAccessLevels)">
          <source>These requested access types are compared with the token's discretionary access control list (DACL) to determine which types of access are granted or denied.</source>
          <target state="translated">与令牌的自由访问控制列表 (DACL) 来确定同意或拒绝哪些类型的访问，这些请求的访问类型进行比较。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Security.Principal.TokenAccessLevels)">
          <source>for ability to manipulate the principal object.</source>
          <target state="translated">有关操作的主体对象的能力。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Security.Principal.TokenAccessLevels)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">关联枚举：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="P:System.Security.Principal.WindowsIdentity.Groups">
          <source>Gets the groups the current Windows user belongs to.</source>
          <target state="translated">获取当前 Windows 用户所属的组。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.Groups">
          <source>An object representing the groups the current Windows user belongs to.</source>
          <target state="translated">一个对象，它表示当前 Windows 用户所属的组。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.Groups">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.Groups%2A&gt;</ph> property to display the identity references for the groups the current user belongs to.</source>
          <target state="translated">下面的代码示例演示了利用<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.Groups%2A&gt;</ph>属性，以显示当前用户所属的组的标识引用。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.Groups">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="T:System.Security.Principal.WindowsIdentity">
          <source>Allows code to impersonate a different Windows user.</source>
          <target state="translated">允许代码模拟不同的 Windows 用户。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.Impersonate">
          <source>Impersonates the user represented by the <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> object.</source>
          <target state="translated">模拟 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> 对象表示的用户。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.Impersonate">
          <source>An object that represents the Windows user prior to impersonation; this can be used to revert to the original user's context.</source>
          <target state="translated">表示模拟之前 Windows 用户的对象，这可以用于恢复为原始用户的上下文。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Impersonate">
          <source>On Windows NT platforms, the current user must have sufficient rights to allow impersonation.</source>
          <target state="translated">在 Windows NT 平台上，当前用户必须具有足够的权限，以允许模拟。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Impersonate">
          <source>The following example demonstrates how to obtain a Windows account token by calling the unmanaged Win32 <ph id="ph1">`LogonUser`</ph> function, and how to use that token to impersonate another user and then revert to the original identity.</source>
          <target state="translated">下面的示例演示如何获取 Windows 帐户标记，通过调用非托管的 Win32<ph id="ph1">`LogonUser`</ph>函数，以及如何使用该令牌模拟其他用户，然后恢复到原始标识。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.Impersonate">
          <source>An anonymous identity attempted to perform an impersonation.</source>
          <target state="translated">匿名标识尝试执行模拟。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.Impersonate">
          <source>A Win32 error occurred.</source>
          <target state="translated">出现 Win32 错误。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Impersonate">
          <source>Because Microsoft Windows 98 and Windows Millennium Edition (Windows Me) platforms do not have user tokens, impersonation cannot take place on those platforms.</source>
          <target state="translated">Microsoft Windows 98 和 Windows Millennium Edition (Windows Me) 平台没有用户令牌，因为模拟不会在这些平台上的发生。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Impersonate">
          <source>After using <ph id="ph1">&lt;see cref="M:System.Security.Principal.WindowsIdentity.Impersonate" /&gt;</ph>, it is important to call the <ph id="ph2">&lt;see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" /&gt;</ph> method to end the impersonation.</source>
          <target state="translated">之后使用<ph id="ph1">&lt;see cref="M:System.Security.Principal.WindowsIdentity.Impersonate" /&gt;</ph>，务必要调用<ph id="ph2">&lt;see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" /&gt;</ph>方法来结束模拟。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)">
          <source>The handle of a Windows account token.</source>
          <target state="translated">Windows 帐户标记的句柄。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)">
          <source>This token is usually retrieved through a call to unmanaged code, such as a call to the Win32 API <ph id="ph1">&lt;see langword="LogonUser" /&gt;</ph> function.</source>
          <target state="translated">通常，通过调用非托管代码（如调用 Win32 API <ph id="ph1">&lt;see langword="LogonUser" /&gt;</ph> 函数）来检索此标记。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)">
          <source>Impersonates the user represented by the specified user token.</source>
          <target state="translated">模拟指定用户标记表示的用户。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)">
          <source>An object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</source>
          <target state="translated">表示模拟之前 Windows 用户的对象，该对象可以用于恢复为原始用户的上下文。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)">
          <source>On Windows NT platforms, the current user must have sufficient rights to allow impersonation.</source>
          <target state="translated">在 Windows NT 平台上，当前用户必须具有足够的权限，以允许模拟。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.Impersonate%28System.IntPtr%29&gt;</ph> method with a <ph id="ph2">`userToken`</ph> value of <ph id="ph3">&lt;xref:System.IntPtr.Zero&gt;</ph> is equivalent to calling the Win32 <ph id="ph4">`RevertToSelf`</ph> function.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.Impersonate%28System.IntPtr%29&gt;</ph>方法替换<ph id="ph2">`userToken`</ph>值<ph id="ph3">&lt;xref:System.IntPtr.Zero&gt;</ph>等效于调用 Win32<ph id="ph4">`RevertToSelf`</ph>函数。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)">
          <source>If another user is currently being impersonated, control reverts to the original user.</source>
          <target state="translated">如果当前被模拟另一个用户，控件将恢复为原始用户。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)">
          <source>For more information about calls to unmanaged code, see <bpt id="p1">[</bpt>Consuming Unmanaged DLL Functions<ept id="p1">](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)</ept>.</source>
          <target state="translated">有关调用非托管代码的详细信息，请参阅<bpt id="p1">[</bpt>使用非托管 DLL 函数<ept id="p1">](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)</ept>。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)">
          <source>The following example demonstrates how to obtain a Windows account token by calling the unmanaged Win32 <ph id="ph1">`LogonUser`</ph> function, and how to use that token to impersonate another user and then revert to the original identity.</source>
          <target state="translated">下面的示例演示如何获取 Windows 帐户标记，通过调用非托管的 Win32<ph id="ph1">`LogonUser`</ph>函数，以及如何使用该令牌模拟其他用户，然后恢复到原始标识。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)">
          <source>Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</source>
          <target state="translated">Windows 返回 Windows NT 状态代码 STATUS_ACCESS_DENIED。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)">
          <source>There is insufficient memory available.</source>
          <target state="translated">没有足够的可用内存。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)">
          <source>The caller does not have the correct permissions.</source>
          <target state="translated">调用方没有正确的权限。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)">
          <source>for the ability to manipulate the principal object and access unmanaged code.</source>
          <target state="translated">表示操作的主体对象和访问非托管的代码的能力。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph> and <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">关联的枚举：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>和 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)">
          <source>Because Microsoft Windows 98 and Windows Millennium Edition (Windows Me) platforms do not have user tokens, impersonation cannot take place on those platforms.</source>
          <target state="translated">Microsoft Windows 98 和 Windows Millennium Edition (Windows Me) 平台没有用户令牌，因为模拟不会在这些平台上的发生。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)">
          <source>After using <ph id="ph1">&lt;see cref="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)" /&gt;</ph>, it is important to call the <ph id="ph2">&lt;see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" /&gt;</ph> method to end the impersonation.</source>
          <target state="translated">之后使用<ph id="ph1">&lt;see cref="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)" /&gt;</ph>，务必要调用<ph id="ph2">&lt;see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" /&gt;</ph>方法来结束模拟。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="P:System.Security.Principal.WindowsIdentity.ImpersonationLevel">
          <source>Gets the impersonation level for the user.</source>
          <target state="translated">获取用户的模拟级别。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.ImpersonationLevel">
          <source>One of the enumeration values that specifies the impersonation level.</source>
          <target state="translated">用于指定模拟级别的枚举值之一。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.ImpersonationLevel">
          <source>Describes the impersonation level to be used to connect to WMI.</source>
          <target state="translated">描述连接到 WMI 时将使用的模拟级别。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.ImpersonationLevel">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.ImpersonationLevel%2A&gt;</ph> property to display the impersonation level for the current user.</source>
          <target state="translated">下面的代码示例演示了利用<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.ImpersonationLevel%2A&gt;</ph>属性来显示当前用户的模拟级别。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.ImpersonationLevel">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="P:System.Security.Principal.WindowsIdentity.IsAnonymous">
          <source>Gets a value that indicates whether the user account is identified as an anonymous account by the system.</source>
          <target state="translated">获取一个值，该值指示系统是否将用户帐户标识为匿名帐户。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.IsAnonymous">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the user account is an anonymous account; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果用户帐户是匿名帐户，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.IsAnonymous">
          <source>The <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt;</ph> property detects both the Windows anonymous identity and the anonymous identity that is returned by the <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt;</ph>属性检测 Windows 匿名标识和匿名标识返回<ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.IsAnonymous">
          <source>Anonymous accounts are typically only encountered only from within ASP.NET-based applications when anonymous access is allowed by Internet Information Services (IIS).</source>
          <target state="translated">匿名帐户通常仅只能从基于 ASP.NET 的应用程序中时遇到由 Internet 信息服务 (IIS) 允许匿名访问。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.IsAnonymous">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt;</ph> property to detect whether the user account is identified as an anonymous account by the system.</source>
          <target state="translated">下面的代码演示如何使用<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt;</ph>属性来检测系统是否用户帐户标识为匿名帐户。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.IsAnonymous">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="P:System.Security.Principal.WindowsIdentity.IsAuthenticated">
          <source>Gets a value indicating whether the user has been authenticated by Windows.</source>
          <target state="translated">获取一个值，该值指示 Windows 是否对用户进行了身份验证。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.IsAuthenticated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the user was authenticated; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果用户已经过验证，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="P:System.Security.Principal.WindowsIdentity.IsGuest">
          <source>Gets a value indicating whether the user account is identified as a <ph id="ph1">&lt;see cref="F:System.Security.Principal.WindowsAccountType.Guest" /&gt;</ph> account by the system.</source>
          <target state="translated">获取一个值，该值指示系统是否将用户帐户标识为 <ph id="ph1">&lt;see cref="F:System.Security.Principal.WindowsAccountType.Guest" /&gt;</ph> 帐户。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.IsGuest">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the user account is a <ph id="ph2">&lt;see cref="F:System.Security.Principal.WindowsAccountType.Guest" /&gt;</ph> account; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果用户帐户是 <ph id="ph2">&lt;see cref="F:System.Security.Principal.WindowsAccountType.Guest" /&gt;</ph> 帐户，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.IsGuest">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.IsGuest%2A&gt;</ph> property to return a value indicating whether the user account is identified as a <ph id="ph2">&lt;xref:System.Security.Principal.WindowsAccountType.Guest&gt;</ph> account by the system.</source>
          <target state="translated">下面的代码演示如何使用<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.IsGuest%2A&gt;</ph>属性以返回一个值，该值指示是否将用户帐户标识为<ph id="ph2">&lt;xref:System.Security.Principal.WindowsAccountType.Guest&gt;</ph>系统帐户。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.IsGuest">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="P:System.Security.Principal.WindowsIdentity.IsSystem">
          <source>Gets a value indicating whether the user account is identified as a <ph id="ph1">&lt;see cref="F:System.Security.Principal.WindowsAccountType.System" /&gt;</ph> account by the system.</source>
          <target state="translated">获取一个值，该值指示系统是否将用户帐户标识为 <ph id="ph1">&lt;see cref="F:System.Security.Principal.WindowsAccountType.System" /&gt;</ph> 帐户。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.IsSystem">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the user account is a <ph id="ph2">&lt;see cref="F:System.Security.Principal.WindowsAccountType.System" /&gt;</ph> account; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果用户帐户是 <ph id="ph2">&lt;see cref="F:System.Security.Principal.WindowsAccountType.System" /&gt;</ph> 帐户，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.IsSystem">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.IsSystem%2A&gt;</ph> property to return a value indicating whether the user account is identified as a <ph id="ph2">&lt;xref:System.Security.Principal.WindowsAccountType.System&gt;</ph> account by the system.</source>
          <target state="translated">下面的代码演示如何使用<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.IsSystem%2A&gt;</ph>属性以返回一个值，该值指示是否将用户帐户标识为<ph id="ph2">&lt;xref:System.Security.Principal.WindowsAccountType.System&gt;</ph>系统帐户。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.IsSystem">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="P:System.Security.Principal.WindowsIdentity.Name">
          <source>Gets the user's Windows logon name.</source>
          <target state="translated">获取用户的 Windows 登录名。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.Name">
          <source>The Windows logon name of the user on whose behalf the code is being run.</source>
          <target state="translated">用户的 Windows 登录名，当前即以该用户的名义运行代码。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.Name">
          <source>The logon name is in the form DOMAIN\USERNAME.</source>
          <target state="translated">登录名是在窗体域 \ 用户名。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.Name">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.Name%2A&gt;</ph> property to get the user's Windows logon name.</source>
          <target state="translated">下面的代码演示如何使用<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.Name%2A&gt;</ph>属性来获取用户的 Windows 登录名。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.Name">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="P:System.Security.Principal.WindowsIdentity.Owner">
          <source>Gets the security identifier (SID) for the token owner.</source>
          <target state="translated">获取标记所有者的安全标识符 (SID)。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.Owner">
          <source>An object for the token owner.</source>
          <target state="translated">标记所有者的对象。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.Owner">
          <source>The SID uniquely identifies a user or group on all Windows NT implementations.</source>
          <target state="translated">SID 唯一标识用户或组在所有 Windows NT 实现上。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.Owner">
          <source>The returned SID identifies the default owner SID that will be applied to newly created objects.</source>
          <target state="translated">返回的 SID 标识默认所有者将应用到新创建的对象的 SID。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.Owner">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.Owner%2A&gt;</ph> property to display the security identifier for the token owner.</source>
          <target state="translated">下面的代码示例演示了利用<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.Owner%2A&gt;</ph>属性显示标记所有者的安全标识符。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.Owner">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> class</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>类</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)">
          <source>The SafeAccessTokenHandle of the impersonated Windows identity.</source>
          <target state="translated">模拟 Windows 标识 SafeAccessTokenHandle。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)">
          <source>The System.Action to run.</source>
          <target state="translated">要运行的 System.Action。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)">
          <source>Runs the specified action as the impersonated Windows identity.</source>
          <target state="translated">作为模拟 Windows 标识运行指定操作。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)">
          <source>Instead of using an impersonated method call and running your function in <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsImpersonationContext" /&gt;</ph>, you can use <ph id="ph2">&lt;see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /&gt;</ph> and provide your function directly as a parameter.</source>
          <target state="translated">可以使用 <ph id="ph2">&lt;see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /&gt;</ph> 并直接作为参数提供函数，而不是使用模拟方法调用并在 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsImpersonationContext" /&gt;</ph> 中运行函数。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> class to impersonate a user.</source>
          <target state="translated">下面的示例演示了利用<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>类，以模拟用户。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)">
          <source>This sample asks the user to enter a password on the console screen.</source>
          <target state="translated">此示例要求用户在控制台屏幕上输入密码。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)">
          <source>The password will be visible on the screen, because the console window does not support masked input natively.</source>
          <target state="translated">可看到密码在屏幕上，因为控制台窗口不以本机方式支持的屏蔽的输入。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.RunImpersonated``1(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Func{``0})">
          <source>The type of object used by and returned by the function.</source>
          <target state="translated">函数使用并返回的对象的类型。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.RunImpersonated``1(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Func{``0})">
          <source>The SafeAccessTokenHandle of the impersonated Windows identity.</source>
          <target state="translated">模拟 Windows 标识 SafeAccessTokenHandle。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.RunImpersonated``1(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Func{``0})">
          <source>The System.Func to run.</source>
          <target state="translated">要运行的 System.Func。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.RunImpersonated``1(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Func{``0})">
          <source>Runs the specified function as the impersonated Windows identity.</source>
          <target state="translated">作为模拟 Windows 标识运行指定函数。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.RunImpersonated``1(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Func{``0})">
          <source>Instead of using an impersonated method call and running your function in <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsImpersonationContext" /&gt;</ph>, you can use <ph id="ph2">&lt;see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /&gt;</ph> and provide your function directly as a parameter.</source>
          <target state="translated">可以使用 <ph id="ph2">&lt;see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /&gt;</ph> 并直接作为参数提供函数，而不是使用模拟方法调用并在 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsImpersonationContext" /&gt;</ph> 中运行函数。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.RunImpersonated``1(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Func{``0})">
          <source>Returns the result of the function.</source>
          <target state="translated">返回函数的结果。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.RunImpersonated``1(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Func{``0})">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> class to impersonate a user.</source>
          <target state="translated">下面的示例演示了利用<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>类，以模拟用户。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.RunImpersonated``1(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Func{``0})">
          <source>This sample asks the user to enter a password on the console screen.</source>
          <target state="translated">此示例要求用户在控制台屏幕上输入密码。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.RunImpersonated``1(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Func{``0})">
          <source>The password will be visible on the screen, because the console window does not support masked input natively.</source>
          <target state="translated">可看到密码在屏幕上，因为控制台窗口不以本机方式支持的屏蔽的输入。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>The source of the deserialization event.</source>
          <target state="translated">反序列化事件源。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface and is called back by the deserialization event when deserialization is complete.</source>
          <target state="translated">实现 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> 接口，并在完成反序列化后由反序列化事件回调。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>An object containing the information required to serialize the <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>.</source>
          <target state="translated">一个对象，它包含序列化 <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> 所需的信息。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>An object containing the source and destination of the serialized stream associated with the <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>.</source>
          <target state="translated">一个对象，该对象包含与 <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> 相关联的序列化流的源和目标。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object with the logical context information needed to recreate an instance of this execution context.</source>
          <target state="translated">用重新创建此执行上下文的实例所需的逻辑上下文信息设置 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This method sets a <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> with the logical call context information.</source>
          <target state="translated">此方法会设置<ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>用逻辑调用上下文信息。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>During deserialization, the execution context object is reconstituted from the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> transmitted over the stream.</source>
          <target state="translated">在反序列化过程的执行上下文对象重建从<ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>通过流传输。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>.</source>
          <target state="translated">有关详情，请参阅<ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任直接调用方。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">此成员不能由部分受信任或不透明的代码。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="P:System.Security.Principal.WindowsIdentity.Token">
          <source>Gets the Windows account token for the user.</source>
          <target state="translated">获取用户的 Windows 帐户标记。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.Token">
          <source>The handle of the access token associated with the current execution thread.</source>
          <target state="translated">与当前执行线程关联的访问令牌的句柄。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.Token">
          <source>Do not explicitly release the account token that is returned by the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.Token%2A&gt;</ph> property.</source>
          <target state="translated">不要显式释放返回用户的帐户标记<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.Token%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.Token">
          <source>The token is released by the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.Dispose%2A&gt;</ph> method, which you can call in code.</source>
          <target state="translated">令牌发布的<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.Dispose%2A&gt;</ph>方法，你可以在代码中调用该方法。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.Token">
          <source><ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.Dispose%2A&gt;</ph> is also automatically called by the garbage collector.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.Dispose%2A&gt;</ph> 此外会自动由垃圾回收器调用。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.Token">
          <source>The account token that is returned by the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.Token%2A&gt;</ph> property is a duplicate of the Windows token that is used to create the <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object and is automatically released by the .NET Framework.</source>
          <target state="translated">返回用户的帐户标记<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.Token%2A&gt;</ph>属性是用于创建 Windows 令牌的重复<ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>对象，并由.NET Framework 自动释放。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.Token">
          <source>This is different from the account token (the <ph id="ph1">`userToken`</ph> parameter for the constructor), which is used to create the <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object.</source>
          <target state="translated">这是不同于用户的帐户标记 (<ph id="ph1">`userToken`</ph>构造函数的参数)，用于创建<ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.Token">
          <source><ph id="ph1">`userToken`</ph> is a Windows account token that is created by a call to <ph id="ph2">`LogonUser`</ph> and must be closed to avoid a memory leak.</source>
          <target state="translated"><ph id="ph1">`userToken`</ph> 是通过调用创建的 Windows 帐户标记<ph id="ph2">`LogonUser`</ph>，必须关闭以避免内存泄露。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.Token">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.IsSystem%2A&gt;</ph> property to get the Windows account token for the user.</source>
          <target state="translated">下面的代码演示如何使用<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.IsSystem%2A&gt;</ph>属性来获取该用户的 Windows 帐户标记。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.Token">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.Token">
          <source>for the ability to access unmanaged code.</source>
          <target state="translated">若要访问非托管的代码的功能。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.Token">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">关联枚举：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="P:System.Security.Principal.WindowsIdentity.User">
          <source>Gets the security identifier (SID) for the user.</source>
          <target state="translated">获取用户的安全标识符 (SID)。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.User">
          <source>An object for the user.</source>
          <target state="translated">用户对象。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.User">
          <source>The SID uniquely identifies a user or group on all Windows NT implementations.</source>
          <target state="translated">SID 唯一标识用户或组在所有 Windows NT 实现上。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.User">
          <source>The <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt;</ph> method is not the same as the Windows anonymous user.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>返回对象<ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt;</ph>方法不是 Windows 匿名用户相同。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.User">
          <source>This property gets <ph id="ph1">`null`</ph> for an anonymous user represented by the <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object returned by the <ph id="ph3">&lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt;</ph> method; it does not get the SID representing an anonymous Windows user.</source>
          <target state="translated">此属性获取<ph id="ph1">`null`</ph>表示匿名用户<ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>返回对象<ph id="ph3">&lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt;</ph>方法; 它不会获取表示匿名 Windows 用户的 SID。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="P:System.Security.Principal.WindowsIdentity.UserClaims">
          <source>Gets claims that have the <ph id="ph1">&lt;see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /&gt;</ph> property key.</source>
          <target state="translated">获取有 <ph id="ph1">&lt;see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /&gt;</ph> 属性密钥的声明。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Principal.WindowsIdentity.UserClaims">
          <source>A collection of claims that have the <ph id="ph1">&lt;see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /&gt;</ph> property key.</source>
          <target state="translated">具有 <ph id="ph1">&lt;see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /&gt;</ph> 属性键的声明的集合。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>