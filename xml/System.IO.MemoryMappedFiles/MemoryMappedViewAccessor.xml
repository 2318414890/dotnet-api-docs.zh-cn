<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MemoryMappedViewAccessor.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fb9cc172c9a4602a19c94bea746d71f04acd5cd7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fb9cc172c9a4602a19c94bea746d71f04acd5cd7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor">
          <source>Represents a randomly accessed view of a memory-mapped file.</source>
          <target state="translated">表示随机访问的内存映射文件视图。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor%2A&gt;</ph> method of a <ph id="ph2">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile&gt;</ph> object to get this view.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile&gt;</ph>要获取此视图对象。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor">
          <source>The following example obtains a <ph id="ph1">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor&gt;</ph> from a large memory-mapped file for editing.</source>
          <target state="translated">下面的示例获取<ph id="ph1">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor&gt;</ph>从较大的内存映射文件进行编辑。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush">
          <source>Clears all buffers for this view and causes any buffered data to be written to the underlying file.</source>
          <target state="translated">清除此视图的所有缓冲区，使得所有缓冲的数据都被写入到基础文件。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush">
          <source>If you are using views that are adjacent to each other, this method will also clear the following data, provided its size is equal to a multiple of the system page size:</source>
          <target state="translated">如果你使用的彼此相邻的视图，此方法也会清除下面的数据，其大小等于系统页面大小的倍数提供：</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush">
          <source>Any data that precedes the view up until the latest file offset.</source>
          <target state="translated">之前视图之前的最新的文件偏移量、 直到任何数据。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush">
          <source>Any data that follows the view up until the earliest file offset.</source>
          <target state="translated">遵循视图之前的最早的文件偏移量、 直到任何数据。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush">
          <source>Methods were called after the accessor was closed.</source>
          <target state="translated">在访问器关闭后调用方法。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[在 .NET Framework 4.5.1 和更高版本中受支持]</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset">
          <source>Gets the number of bytes by which the starting position of this view is offset from the beginning of the memory-mapped file.</source>
          <target state="translated">获取此视图的开始位置相对于内存映射文件的开头进行偏移的字节数。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset">
          <source>The number of bytes between the starting position of this view and the beginning of the memory-mapped file.</source>
          <target state="translated">此视图的开始位置和内存映射文件的开始位置之间的字节数。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset">
          <source>The object from which this instance was created is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">从中创建此实例的对象为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle">
          <source>Gets a handle to the view of a memory-mapped file.</source>
          <target state="translated">获取内存映射文件的视图的句柄。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle">
          <source>A wrapper for the operating system's handle to the view of the file.</source>
          <target state="translated">文件视图的操作系统句柄的包装器。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle">
          <source>for access to unmanaged code.</source>
          <target state="translated">用于访问非托管代码。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">关联枚举：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>