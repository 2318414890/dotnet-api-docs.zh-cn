<Type Name="MemoryMappedFile" FullName="System.IO.MemoryMappedFiles.MemoryMappedFile">
  <TypeSignature Language="C#" Value="public class MemoryMappedFile : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MemoryMappedFile extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />
  <TypeSignature Language="VB.NET" Value="Public Class MemoryMappedFile&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemoryMappedFile : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="0a469-101">表示内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-101">Represents a memory-mapped file.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a469-102">一个内存映射文件将文件的内容映射到应用程序的逻辑地址空间。</span><span class="sxs-lookup"><span data-stu-id="0a469-102">A memory-mapped file maps the contents of a file to an application’s logical address space.</span></span> <span data-ttu-id="0a469-103">内存映射文件，程序员可以使用极大的文件，因为可以同时管理内存，它们允许进行完整的随机访问而无需查找的文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-103">Memory-mapped files enable programmers to work with extremely large files because memory can be managed concurrently, and they allow complete, random access to a file without the need for seeking.</span></span> <span data-ttu-id="0a469-104">此外可以在多个进程之间共享内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-104">Memory-mapped files can also be shared across multiple processes.</span></span>  
  
 <span data-ttu-id="0a469-105"><xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A>方法从指定路径中创建一个内存映射文件或<xref:System.IO.FileStream>的磁盘上的现有文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-105">The <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> methods create a memory-mapped file from a specified path or a <xref:System.IO.FileStream> of an existing file on disk.</span></span> <span data-ttu-id="0a469-106">更改会自动传播到磁盘时该文件是未映射。</span><span class="sxs-lookup"><span data-stu-id="0a469-106">Changes are automatically propagated to disk when the file is unmapped.</span></span>  
  
 <span data-ttu-id="0a469-107"><xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A>方法创建的未映射到磁盘; 上的现有文件的内存映射文件，是适用于创建共享的内存用于进程间通信 (IPC)。</span><span class="sxs-lookup"><span data-stu-id="0a469-107">The <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> methods create a memory-mapped file that is not mapped to an existing file on disk; and are suitable for creating shared memory for interprocess communication (IPC).</span></span>  
  
 <span data-ttu-id="0a469-108">内存映射文件是与名称关联。</span><span class="sxs-lookup"><span data-stu-id="0a469-108">A memory-mapped file is associated with a name.</span></span>  
  
 <span data-ttu-id="0a469-109">你可以创建包含文件的各个部分的视图的内存映射文件的多个视图。</span><span class="sxs-lookup"><span data-stu-id="0a469-109">You can create multiple views of the memory-mapped file, including views of parts of the file.</span></span> <span data-ttu-id="0a469-110">你可以为多个地址，以创建并发内存映射文件的相同部分。</span><span class="sxs-lookup"><span data-stu-id="0a469-110">You can map the same part of a file to more than one address to create concurrent memory.</span></span> <span data-ttu-id="0a469-111">若要让两个视图一直处于并发状态，必须通过同一个内存映射文件创建它们。</span><span class="sxs-lookup"><span data-stu-id="0a469-111">For two views to remain concurrent, they have to be created from the same memory-mapped file.</span></span> <span data-ttu-id="0a469-112">创建具有两个视图的同一文件的两个文件映射不提供并发。</span><span class="sxs-lookup"><span data-stu-id="0a469-112">Creating two file mappings of the same file with two views does not provide concurrency.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a469-113">下面的示例为极大文件的一部分创建内存映射视图，并控制其中一部分。</span><span class="sxs-lookup"><span data-stu-id="0a469-113">The following example creates a memory-mapped view of a part of an extremely large file and manipulates a portion of it.</span></span>  
  
 [!code-csharp[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/cs/program.cs#1)]
 [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateFromFile">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a469-114">基于现有文件创建一个内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-114">Creates a memory-mapped file from an existing file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="0a469-115">要映射的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="0a469-115">The path to file to map.</span></span></param>
        <summary><span data-ttu-id="0a469-116">基于磁盘上的文件创建一个内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-116">Creates a memory-mapped file from a file on disk.</span></span></summary>
        <returns><span data-ttu-id="0a469-117">内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-117">A memory-mapped file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0a469-118">下面的示例使用<xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A>方法以创建内存映射文件，然后创建到极大的文件的一部分的内存映射视图。</span><span class="sxs-lookup"><span data-stu-id="0a469-118">The following example uses the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> method to create a memory-mapped file, and then creates a memory-mapped view to a portion of an extremely large file.</span></span>  
  
 [!code-csharp[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/cs/program.cs#1)]
 [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a469-119"><paramref name="path" /> 为空字符串，只包含空格，或者包含 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 方法定义的一个或多个无效字符。</span><span class="sxs-lookup"><span data-stu-id="0a469-119"><paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span></span>  
  
 <span data-ttu-id="0a469-120">或</span><span class="sxs-lookup"><span data-stu-id="0a469-120">-or-</span></span>  
  
 <span data-ttu-id="0a469-121"><paramref name="path" /> 引用无效的设备。</span><span class="sxs-lookup"><span data-stu-id="0a469-121"><paramref name="path" /> refers to an invalid device.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a469-122"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-122"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0a469-123">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0a469-123">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="0a469-124"><paramref name="path" /> 超过了操作系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="0a469-124"><paramref name="path" /> exceeds the maximum length defined by the operating system.</span></span> <span data-ttu-id="0a469-125">在 Windows 中，路径包含的字符必须少于 248 个，文件名包含的字符必须少于 260 个。</span><span class="sxs-lookup"><span data-stu-id="0a469-125">In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="0a469-126">调用方没有该文件的所需权限。</span><span class="sxs-lookup"><span data-stu-id="0a469-126">The caller does not have the required permissions for the file.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="0a469-127">要映射的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="0a469-127">The path to file to map.</span></span></param>
        <param name="mode"><span data-ttu-id="0a469-128">访问模式；必须为 <see cref="F:System.IO.FileMode.Open" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-128">Access mode; must be <see cref="F:System.IO.FileMode.Open" />.</span></span></param>
        <summary><span data-ttu-id="0a469-129">基于磁盘上的文件创建一个具有指定访问模式的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-129">Creates a memory-mapped file that has the specified access mode from a file on disk.</span></span></summary>
        <returns><span data-ttu-id="0a469-130">具有指定访问模式的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-130">A memory-mapped file that has the specified access mode.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a469-131">`mode`参数属于磁盘上的源文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-131">The `mode` parameter pertains to the source file on disk.</span></span> <span data-ttu-id="0a469-132">只能使用<xref:System.IO.FileMode.Open>枚举值，以从磁盘上的原始文件创建内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-132">You can use only the <xref:System.IO.FileMode.Open> enumeration value to create the memory-mapped file from the source file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a469-133"><paramref name="path" /> 为空字符串，只包含空格，或者包含 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 方法定义的一个或多个无效字符。</span><span class="sxs-lookup"><span data-stu-id="0a469-133"><paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span></span>  
  
 <span data-ttu-id="0a469-134">或</span><span class="sxs-lookup"><span data-stu-id="0a469-134">-or-</span></span>  
  
 <span data-ttu-id="0a469-135"><paramref name="path" /> 引用无效的设备。</span><span class="sxs-lookup"><span data-stu-id="0a469-135"><paramref name="path" /> refers to an invalid device.</span></span>  
  
 <span data-ttu-id="0a469-136">或</span><span class="sxs-lookup"><span data-stu-id="0a469-136">-or-</span></span>  
  
 <span data-ttu-id="0a469-137"><paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Append" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-137"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a469-138"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-138"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0a469-139"><paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Create" />、<see cref="F:System.IO.FileMode.CreateNew" /> 或 <see cref="F:System.IO.FileMode.Truncate" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-139"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, or <see cref="F:System.IO.FileMode.Truncate" />.</span></span>  
  
 <span data-ttu-id="0a469-140">或</span><span class="sxs-lookup"><span data-stu-id="0a469-140">-or-</span></span>  
  
 <span data-ttu-id="0a469-141"><paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.OpenOrCreate" /> 且磁盘上的文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0a469-141"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.OpenOrCreate" /> and the file on disk does not exist.</span></span>  
  
 <span data-ttu-id="0a469-142">或</span><span class="sxs-lookup"><span data-stu-id="0a469-142">-or-</span></span>  
  
 <span data-ttu-id="0a469-143">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0a469-143">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="0a469-144"><paramref name="path" /> 超过了操作系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="0a469-144"><paramref name="path" /> exceeds the maximum length defined by the operating system.</span></span> <span data-ttu-id="0a469-145">在 Windows 中，路径包含的字符必须少于 248 个，文件名包含的字符必须少于 260 个。</span><span class="sxs-lookup"><span data-stu-id="0a469-145">In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="0a469-146">调用方没有该文件的所需权限。</span><span class="sxs-lookup"><span data-stu-id="0a469-146">The caller does not have the required permissions for the file.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode, string mapName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode, mapName As String) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode, System::String ^ mapName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="mapName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="0a469-147">要映射的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="0a469-147">The path to the file to map.</span></span></param>
        <param name="mode"><span data-ttu-id="0a469-148">访问模式；必须为 <see cref="F:System.IO.FileMode.Open" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-148">Access mode; must be <see cref="F:System.IO.FileMode.Open" />.</span></span></param>
        <param name="mapName"><span data-ttu-id="0a469-149">要分配给内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0a469-149">A name to assign to the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="0a469-150">基于磁盘上的文件创建一个具有指定访问模式和名称的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-150">Creates a memory-mapped file that has the specified access mode and name from a file on disk.</span></span></summary>
        <returns><span data-ttu-id="0a469-151">具有指定名称和访问模式的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-151">A memory-mapped file that has the specified name and access mode.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a469-152">`mode`参数属于磁盘上的源文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-152">The `mode` parameter pertains to the source file on disk.</span></span> <span data-ttu-id="0a469-153">只能使用<xref:System.IO.FileMode.Open>枚举值，以从磁盘上的原始文件创建内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-153">You can use only the <xref:System.IO.FileMode.Open> enumeration value to create the memory-mapped file from the source file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a469-154"><paramref name="path" /> 为空字符串，只包含空格，或者包含 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 方法定义的一个或多个无效字符。</span><span class="sxs-lookup"><span data-stu-id="0a469-154"><paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span></span>  
  
 <span data-ttu-id="0a469-155">或</span><span class="sxs-lookup"><span data-stu-id="0a469-155">-or-</span></span>  
  
 <span data-ttu-id="0a469-156"><paramref name="path" /> 引用无效的设备。</span><span class="sxs-lookup"><span data-stu-id="0a469-156"><paramref name="path" /> refers to an invalid device.</span></span>  
  
 <span data-ttu-id="0a469-157">或</span><span class="sxs-lookup"><span data-stu-id="0a469-157">-or-</span></span>  
  
 <span data-ttu-id="0a469-158"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="0a469-158"><paramref name="mapName" /> is an empty string.</span></span>  
  
 <span data-ttu-id="0a469-159">或</span><span class="sxs-lookup"><span data-stu-id="0a469-159">-or-</span></span>  
  
 <span data-ttu-id="0a469-160"><paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Append" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-160"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a469-161"><paramref name="path" /> 或 <paramref name="mapName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-161"><paramref name="path" /> or <paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0a469-162"><paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Create" />、<see cref="F:System.IO.FileMode.CreateNew" /> 或 <see cref="F:System.IO.FileMode.Truncate" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-162"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, or <see cref="F:System.IO.FileMode.Truncate" />.</span></span>  
  
 <span data-ttu-id="0a469-163">或</span><span class="sxs-lookup"><span data-stu-id="0a469-163">-or-</span></span>  
  
 <span data-ttu-id="0a469-164"><paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.OpenOrCreate" /> 且磁盘上的文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0a469-164"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.OpenOrCreate" /> and the file on disk does not exist.</span></span>  
  
 <span data-ttu-id="0a469-165">或</span><span class="sxs-lookup"><span data-stu-id="0a469-165">-or-</span></span>  
  
 <span data-ttu-id="0a469-166">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0a469-166">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="0a469-167"><paramref name="path" /> 超过了操作系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="0a469-167"><paramref name="path" /> exceeds the maximum length defined by the operating system.</span></span> <span data-ttu-id="0a469-168">在 Windows 中，路径包含的字符必须少于 248 个，文件名包含的字符必须少于 260 个。</span><span class="sxs-lookup"><span data-stu-id="0a469-168">In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="0a469-169">调用方没有该文件的所需权限。</span><span class="sxs-lookup"><span data-stu-id="0a469-169">The caller does not have the required permissions for the file.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName, long capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode, string mapName, int64 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode, mapName As String, capacity As Long) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode, System::String ^ mapName, long capacity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="0a469-170">要映射的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="0a469-170">The path to the file to map.</span></span></param>
        <param name="mode"><span data-ttu-id="0a469-171">访问模式；除 <see cref="T:System.IO.FileMode" /> 外，可以是任意 <see cref="F:System.IO.FileMode.Append" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="0a469-171">Access mode; can be any of the <see cref="T:System.IO.FileMode" /> enumeration values except <see cref="F:System.IO.FileMode.Append" />.</span></span></param>
        <param name="mapName"><span data-ttu-id="0a469-172">要分配给内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0a469-172">A name to assign to the memory-mapped file.</span></span></param>
        <param name="capacity"><span data-ttu-id="0a469-173">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="0a469-173">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span> <span data-ttu-id="0a469-174">指定 0，以将容量设置为磁盘上文件的大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-174">Specify 0 to set the capacity to the size of the file on disk.</span></span></param>
        <summary><span data-ttu-id="0a469-175">基于磁盘上的文件创建一个具有指定访问模式、名称和容量的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-175">Creates a memory-mapped file that has the specified access mode, name, and capacity from a file on disk.</span></span></summary>
        <returns><span data-ttu-id="0a469-176">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-176">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a469-177">`mode`参数属于磁盘上的源文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-177">The `mode` parameter pertains to the source file on disk.</span></span>  
  
 <span data-ttu-id="0a469-178">如果`capacity`大于磁盘，磁盘上的文件上的文件的大小会增加来匹配指定的容量，即使没有数据写入到内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-178">If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</span></span> <span data-ttu-id="0a469-179">若要防止此情况发生，指定 0 （零） 为默认的容量，都将内部设置`capacity`到磁盘上的文件的大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-179">To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a469-180"><paramref name="path" /> 为空字符串，只包含空格，或者包含 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 方法定义的一个或多个无效字符。</span><span class="sxs-lookup"><span data-stu-id="0a469-180"><paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span></span>  
  
 <span data-ttu-id="0a469-181">或</span><span class="sxs-lookup"><span data-stu-id="0a469-181">-or-</span></span>  
  
 <span data-ttu-id="0a469-182"><paramref name="path" /> 引用无效的设备。</span><span class="sxs-lookup"><span data-stu-id="0a469-182"><paramref name="path" /> refers to an invalid device.</span></span>  
  
 <span data-ttu-id="0a469-183">或</span><span class="sxs-lookup"><span data-stu-id="0a469-183">-or-</span></span>  
  
 <span data-ttu-id="0a469-184"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="0a469-184"><paramref name="mapName" /> is an empty string.</span></span>  
  
 <span data-ttu-id="0a469-185">或</span><span class="sxs-lookup"><span data-stu-id="0a469-185">-or-</span></span>  
  
 <span data-ttu-id="0a469-186"><paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Append" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-186"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a469-187"><paramref name="path" /> 或 <paramref name="mapName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-187"><paramref name="path" /> or <paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a469-188"><paramref name="capacity" /> 大于逻辑地址空间的大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-188"><paramref name="capacity" /> is greater than the size of the logical address space.</span></span>  
  
 <span data-ttu-id="0a469-189">或</span><span class="sxs-lookup"><span data-stu-id="0a469-189">-or-</span></span>  
  
 <span data-ttu-id="0a469-190"><paramref name="capacity" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="0a469-190"><paramref name="capacity" /> is less than zero.</span></span>  
  
 <span data-ttu-id="0a469-191">或</span><span class="sxs-lookup"><span data-stu-id="0a469-191">-or-</span></span>  
  
 <span data-ttu-id="0a469-192"><paramref name="capacity" /> 小于文件大小（但不为零）。</span><span class="sxs-lookup"><span data-stu-id="0a469-192"><paramref name="capacity" /> is less than the file size (but not zero).</span></span>  
  
 <span data-ttu-id="0a469-193">或</span><span class="sxs-lookup"><span data-stu-id="0a469-193">-or-</span></span>  
  
 <span data-ttu-id="0a469-194"><paramref name="capacity" /> 为零，且在磁盘上文件的大小也为零。</span><span class="sxs-lookup"><span data-stu-id="0a469-194"><paramref name="capacity" /> is zero, and the size of the file on disk is also zero.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0a469-195">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0a469-195">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="0a469-196"><paramref name="path" /> 超过了操作系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="0a469-196"><paramref name="path" /> exceeds the maximum length defined by the operating system.</span></span> <span data-ttu-id="0a469-197">在 Windows 中，路径包含的字符必须少于 248 个，文件名包含的字符必须少于 260 个。</span><span class="sxs-lookup"><span data-stu-id="0a469-197">In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="0a469-198">调用方没有该文件的所需权限。</span><span class="sxs-lookup"><span data-stu-id="0a469-198">The caller does not have the required permissions for the file.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode, string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode, mapName As String, capacity As Long, access As MemoryMappedFileAccess) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode, System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="0a469-199">要映射的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="0a469-199">The path to the file to map.</span></span></param>
        <param name="mode"><span data-ttu-id="0a469-200">访问模式；除 <see cref="T:System.IO.FileMode" /> 外，可以是任意 <see cref="F:System.IO.FileMode.Append" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="0a469-200">Access mode; can be any of the <see cref="T:System.IO.FileMode" /> enumeration values except <see cref="F:System.IO.FileMode.Append" />.</span></span></param>
        <param name="mapName"><span data-ttu-id="0a469-201">要分配给内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0a469-201">A name to assign to the memory-mapped file.</span></span></param>
        <param name="capacity"><span data-ttu-id="0a469-202">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="0a469-202">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span> <span data-ttu-id="0a469-203">指定 0，以将容量设置为磁盘上文件的大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-203">Specify 0 to set the capacity to the size of the file on disk.</span></span></param>
        <param name="access"><span data-ttu-id="0a469-204">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="0a469-204">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="0a469-205">基于磁盘上的文件创建一个具有指定访问模式、名称、容量和访问类型的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-205">Creates a memory-mapped file that has the specified access mode, name, capacity, and access type from a file on disk.</span></span></summary>
        <returns><span data-ttu-id="0a469-206">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-206">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a469-207">`mode`参数属于磁盘上的源文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-207">The `mode` parameter pertains to the source file on disk.</span></span>  
  
 <span data-ttu-id="0a469-208">如果`capacity`大于磁盘，磁盘上的文件上的文件的大小会增加来匹配指定的容量，即使没有数据写入到内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-208">If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</span></span> <span data-ttu-id="0a469-209">若要防止此情况发生，指定 0 （零） 为默认的容量，都将内部设置`capacity`到磁盘上的文件的大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-209">To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a469-210"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="0a469-210"><paramref name="mapName" /> is an empty string.</span></span>  
  
 <span data-ttu-id="0a469-211">或</span><span class="sxs-lookup"><span data-stu-id="0a469-211">-or-</span></span>  
  
 <span data-ttu-id="0a469-212"><paramref name="access" /> 不是一个允许的值。</span><span class="sxs-lookup"><span data-stu-id="0a469-212"><paramref name="access" /> is not an allowed value.</span></span>  
  
 <span data-ttu-id="0a469-213">或</span><span class="sxs-lookup"><span data-stu-id="0a469-213">-or-</span></span>  
  
 <span data-ttu-id="0a469-214"><paramref name="path" /> 指定空的文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-214"><paramref name="path" /> specifies an empty file.</span></span>  
  
 <span data-ttu-id="0a469-215">或</span><span class="sxs-lookup"><span data-stu-id="0a469-215">-or-</span></span>  
  
 <span data-ttu-id="0a469-216"><paramref name="access" /> 指定为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" />，容量大于 <paramref name="path" /> 所指示文件的大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-216"><paramref name="access" /> is specified as <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> and capacity is greater than the size of the file indicated by <paramref name="path" />.</span></span>  
  
 <span data-ttu-id="0a469-217">或</span><span class="sxs-lookup"><span data-stu-id="0a469-217">-or-</span></span>  
  
 <span data-ttu-id="0a469-218"><paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Append" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-218"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a469-219"><paramref name="path" /> 或 <paramref name="mapName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-219"><paramref name="path" /> or <paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a469-220"><paramref name="capacity" /> 大于逻辑地址空间的大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-220"><paramref name="capacity" /> is greater than the size of the logical address space.</span></span>  
  
 <span data-ttu-id="0a469-221">或</span><span class="sxs-lookup"><span data-stu-id="0a469-221">-or-</span></span>  
  
 <span data-ttu-id="0a469-222"><paramref name="capacity" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="0a469-222"><paramref name="capacity" /> is less than zero.</span></span>  
  
 <span data-ttu-id="0a469-223">或</span><span class="sxs-lookup"><span data-stu-id="0a469-223">-or-</span></span>  
  
 <span data-ttu-id="0a469-224"><paramref name="capacity" /> 小于文件大小（但不为零）。</span><span class="sxs-lookup"><span data-stu-id="0a469-224"><paramref name="capacity" /> is less than the file size (but not zero).</span></span>  
  
 <span data-ttu-id="0a469-225">或</span><span class="sxs-lookup"><span data-stu-id="0a469-225">-or-</span></span>  
  
 <span data-ttu-id="0a469-226"><paramref name="capacity" /> 为零，且在磁盘上文件的大小也为零。</span><span class="sxs-lookup"><span data-stu-id="0a469-226"><paramref name="capacity" /> is zero, and the size of the file on disk is also zero.</span></span>  
  
 <span data-ttu-id="0a469-227">或</span><span class="sxs-lookup"><span data-stu-id="0a469-227">-or-</span></span>  
  
 <span data-ttu-id="0a469-228"><paramref name="access" /> 不是定义的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 值。</span><span class="sxs-lookup"><span data-stu-id="0a469-228"><paramref name="access" /> is not a defined <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> value.</span></span>  
  
 <span data-ttu-id="0a469-229">或</span><span class="sxs-lookup"><span data-stu-id="0a469-229">-or-</span></span>  
  
 <span data-ttu-id="0a469-230"><paramref name="path" /> 指示的文件大小大于 <paramref name="capacity" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-230">The size of the file indicated by <paramref name="path" /> is greater than <paramref name="capacity" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0a469-231">或</span><span class="sxs-lookup"><span data-stu-id="0a469-231">-or-</span></span>  
  
 <span data-ttu-id="0a469-232">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0a469-232">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="0a469-233"><paramref name="path" /> 超过了操作系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="0a469-233"><paramref name="path" /> exceeds the maximum length defined by the operating system.</span></span> <span data-ttu-id="0a469-234">在 Windows 中，路径包含的字符必须少于 248 个，文件名包含的字符必须少于 260 个。</span><span class="sxs-lookup"><span data-stu-id="0a469-234">In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="0a469-235">调用方没有该文件的所需权限。</span><span class="sxs-lookup"><span data-stu-id="0a469-235">The caller does not have the required permissions for the file.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="0a469-236">用于访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="0a469-236">for access to unmanaged code.</span></span> <span data-ttu-id="0a469-237">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-237">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (System.IO.FileStream fileStream, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.HandleInheritability inheritability, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(class System.IO.FileStream fileStream, string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.HandleInheritability inheritability, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::IO::FileStream ^ fileStream, System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::HandleInheritability inheritability, bool leaveOpen);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IO.FileStream" />
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileStream"><span data-ttu-id="0a469-238">现有文件的文件流。</span><span class="sxs-lookup"><span data-stu-id="0a469-238">The file stream of the existing file.</span></span></param>
        <param name="mapName"><span data-ttu-id="0a469-239">要分配给内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0a469-239">A name to assign to the memory-mapped file.</span></span></param>
        <param name="capacity"><span data-ttu-id="0a469-240">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="0a469-240">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span> <span data-ttu-id="0a469-241">指定 0，以将容量设置为 <c>filestream</c> 的大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-241">Specify 0 to set the capacity to the size of <c>filestream</c>.</span></span></param>
        <param name="access"><span data-ttu-id="0a469-242">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="0a469-242">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span>  
  
 <span data-ttu-id="0a469-243">不能将此参数设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-243">This parameter can’t be set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="0a469-244">指定内存映射文件的句柄能否由子进程继承的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="0a469-244">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="0a469-245">默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-245">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <param name="leaveOpen"><span data-ttu-id="0a469-246">一个值，该值指示释放 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 后是否要关闭源文件流。</span><span class="sxs-lookup"><span data-stu-id="0a469-246">A value that indicates whether to close the source file stream when the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> is disposed.</span></span></param>
        <summary><span data-ttu-id="0a469-247">从现有文件创建一个具有指定的访问模式、名称、继承性和容量的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-247">Creates a memory-mapped file from an existing file with the specified access mode, name, inheritability, and capacity.</span></span></summary>
        <returns><span data-ttu-id="0a469-248">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-248">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a469-249"><paramref name="mapName" /> 为 <see langword="null" /> 或空字符串。</span><span class="sxs-lookup"><span data-stu-id="0a469-249"><paramref name="mapName" /> is <see langword="null" /> or an empty string.</span></span>  
  
 <span data-ttu-id="0a469-250">或</span><span class="sxs-lookup"><span data-stu-id="0a469-250">-or-</span></span>  
  
 <span data-ttu-id="0a469-251"><paramref name="capacity" /> 和文件长度为零。</span><span class="sxs-lookup"><span data-stu-id="0a469-251"><paramref name="capacity" /> and the length of the file are zero.</span></span>  
  
 <span data-ttu-id="0a469-252">或</span><span class="sxs-lookup"><span data-stu-id="0a469-252">-or-</span></span>  
  
 <span data-ttu-id="0a469-253"><paramref name="access" /> 设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 或 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值，这是不允许的。</span><span class="sxs-lookup"><span data-stu-id="0a469-253"><paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value, which is not allowed.</span></span>  
  
 <span data-ttu-id="0a469-254">或</span><span class="sxs-lookup"><span data-stu-id="0a469-254">-or-</span></span>  
  
 <span data-ttu-id="0a469-255"><paramref name="access" /> 设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" />，<paramref name="capacity" /> 大于 <see langword="filestream" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="0a469-255"><paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> and <paramref name="capacity" /> is larger than the length of <see langword="filestream" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a469-256"><paramref name="fileStream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-256"><paramref name="fileStream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a469-257"><paramref name="capacity" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="0a469-257"><paramref name="capacity" /> is less than zero.</span></span>  
  
 <span data-ttu-id="0a469-258">或</span><span class="sxs-lookup"><span data-stu-id="0a469-258">-or-</span></span>  
  
 <span data-ttu-id="0a469-259"><paramref name="capacity" /> 小于文件大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-259"><paramref name="capacity" /> is less than the file size.</span></span>  
  
 <span data-ttu-id="0a469-260">或</span><span class="sxs-lookup"><span data-stu-id="0a469-260">-or-</span></span>  
  
 <span data-ttu-id="0a469-261"><paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="0a469-261"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span>  
  
 <span data-ttu-id="0a469-262">或</span><span class="sxs-lookup"><span data-stu-id="0a469-262">-or-</span></span>  
  
 <span data-ttu-id="0a469-263"><paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="0a469-263"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (System.IO.FileStream fileStream, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(class System.IO.FileStream fileStream, string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, valuetype System.IO.HandleInheritability inheritability, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::IO::FileStream ^ fileStream, System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity, System::IO::HandleInheritability inheritability, bool leaveOpen);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IO.FileStream" />
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileStream"><span data-ttu-id="0a469-264">要映射的文件的 <c>fileStream</c>。</span><span class="sxs-lookup"><span data-stu-id="0a469-264">The <c>fileStream</c> to the file to map.</span></span></param>
        <param name="mapName"><span data-ttu-id="0a469-265">要分配给内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0a469-265">A name to assign to the memory-mapped file.</span></span></param>
        <param name="capacity"><span data-ttu-id="0a469-266">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="0a469-266">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span> <span data-ttu-id="0a469-267">指定 0，以将容量设置为磁盘上文件的大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-267">Specify 0 to set the capacity to the size of the file on disk.</span></span></param>
        <param name="access"><span data-ttu-id="0a469-268">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="0a469-268">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span>  
  
 <span data-ttu-id="0a469-269">不能将此参数设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-269">This parameter can’t be set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />.</span></span></param>
        <param name="memoryMappedFileSecurity"><span data-ttu-id="0a469-270">可以针对内存映射文件授予的文件访问和操作权限。</span><span class="sxs-lookup"><span data-stu-id="0a469-270">The permissions that can be granted for file access and operations on memory-mapped files.</span></span>  
  
 <span data-ttu-id="0a469-271">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-271">This parameter can be <see langword="null" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="0a469-272">指定内存映射文件的句柄能否由子进程继承的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="0a469-272">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="0a469-273">默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-273">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <param name="leaveOpen">
          <span data-ttu-id="0a469-274">若为 <see langword="true" />，则在关闭 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 后不释放 <c>fileStream</c>，若为 <see langword="false" />，则释放<c>fileStream</c>。</span><span class="sxs-lookup"><span data-stu-id="0a469-274"><see langword="true" /> to not dispose <c>fileStream</c> after the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> is closed; <see langword="false" /> to dispose <c>fileStream</c>.</span></span></param>
        <summary><span data-ttu-id="0a469-275">基于磁盘上的文件创建一个具有指定名称、容量、访问类型、安全权限、继承性和释放要求的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-275">Creates a memory-mapped file that has the specified name, capacity, access type, security permissions, inheritability, and disposal requirement from a file on disk.</span></span></summary>
        <returns><span data-ttu-id="0a469-276">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-276">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a469-277">如果`capacity`大于磁盘，磁盘上的文件上的文件的大小会增加来匹配指定的容量，即使没有数据写入到内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-277">If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</span></span> <span data-ttu-id="0a469-278">若要防止此情况发生，指定 0 （零） 为默认的容量，都将内部设置`capacity`到磁盘上的文件的大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-278">To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a469-279"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="0a469-279"><paramref name="mapName" /> is an empty string.</span></span>  
  
 <span data-ttu-id="0a469-280">或</span><span class="sxs-lookup"><span data-stu-id="0a469-280">-or-</span></span>  
  
 <span data-ttu-id="0a469-281"><paramref name="capacity" /> 和文件长度为零。</span><span class="sxs-lookup"><span data-stu-id="0a469-281"><paramref name="capacity" /> and the length of the file are zero.</span></span>  
  
 <span data-ttu-id="0a469-282">或</span><span class="sxs-lookup"><span data-stu-id="0a469-282">-or-</span></span>  
  
 <span data-ttu-id="0a469-283">把 <paramref name="access" /> 设置到 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> 或 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值，这是不允许的。</span><span class="sxs-lookup"><span data-stu-id="0a469-283"><paramref name="access" /> is set to the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value, which is not allowed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a469-284"><paramref name="fileStream" /> 或 <paramref name="mapname" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-284"><paramref name="fileStream" /> or <paramref name="mapname" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a469-285"><paramref name="capacity" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="0a469-285"><paramref name="capacity" /> is less than zero.</span></span>  
  
 <span data-ttu-id="0a469-286">或</span><span class="sxs-lookup"><span data-stu-id="0a469-286">-or-</span></span>  
  
 <span data-ttu-id="0a469-287"><paramref name="capacity" /> 小于文件大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-287"><paramref name="capacity" /> is less than the file size.</span></span>  
  
 <span data-ttu-id="0a469-288">或</span><span class="sxs-lookup"><span data-stu-id="0a469-288">-or-</span></span>  
  
 <span data-ttu-id="0a469-289"><paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="0a469-289"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span>  
  
 <span data-ttu-id="0a469-290">或</span><span class="sxs-lookup"><span data-stu-id="0a469-290">-or-</span></span>  
  
 <span data-ttu-id="0a469-291"><paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="0a469-291"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0a469-292"><paramref name="fileStream" /> 已关闭。</span><span class="sxs-lookup"><span data-stu-id="0a469-292"><paramref name="fileStream" /> was closed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="0a469-293">当把 <paramref name="access" /> 的访问设置到 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /> 或 <see cref="F:System.IO.FileAccess.Read" /> 时，将把 <paramref name="fileStream" /> 设置到 <see cref="F:System.IO.FileAccess.Write" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-293"><paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /> when <paramref name="fileStream" />'s access is set to <see cref="F:System.IO.FileAccess.Read" /> or <see cref="F:System.IO.FileAccess.Write" />.</span></span></exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0a469-294"><paramref name="mapName" /> 已存在。</span><span class="sxs-lookup"><span data-stu-id="0a469-294"><paramref name="mapName" /> already exists.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="0a469-295">用于访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="0a469-295">for access to unmanaged code.</span></span> <span data-ttu-id="0a469-296">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-296">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNew">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a469-297">在系统内存中创建一个内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-297">Creates a memory-mapped file in system memory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateNew (mapName As String, capacity As Long) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="0a469-298">要分配给内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0a469-298">A name to assign to the memory-mapped file.</span></span></param>
        <param name="capacity"><span data-ttu-id="0a469-299">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="0a469-299">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="0a469-300">在系统内存中创建一个具有指定容量的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-300">Creates a memory-mapped file that has the specified capacity in system memory.</span></span></summary>
        <returns><span data-ttu-id="0a469-301">具有指定名称和容量的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-301">A memory-mapped file that has the specified name and capacity.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a469-302">使用此方法创建一个不持久保留的内存映射文件 （即，不与关联磁盘上的文件），可以用于进程之间共享数据。</span><span class="sxs-lookup"><span data-stu-id="0a469-302">Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a469-303">下面的示例由三个单独编写的进程 （控制台应用程序） 的`Boolean`到内存映射文件的值。</span><span class="sxs-lookup"><span data-stu-id="0a469-303">The following example is composed of three separate processes (console applications) that write `Boolean` values to a memory-mapped file.</span></span> <span data-ttu-id="0a469-304">各操作按下面的顺序发生：</span><span class="sxs-lookup"><span data-stu-id="0a469-304">The following sequence of actions occur:</span></span>  
  
1.  <span data-ttu-id="0a469-305">进程 A 创建内存映射文件，并向其中写入一个值。</span><span class="sxs-lookup"><span data-stu-id="0a469-305">Process A creates the memory-mapped file and writes a value to it.</span></span>  
  
2.  <span data-ttu-id="0a469-306">进程 B 打开内存映射文件，并向其中写入一个值。</span><span class="sxs-lookup"><span data-stu-id="0a469-306">Process B opens the memory-mapped file and writes a value to it.</span></span>  
  
3.  <span data-ttu-id="0a469-307">进程 C 打开内存映射文件，并向其中写入一个值。</span><span class="sxs-lookup"><span data-stu-id="0a469-307">Process C opens the memory-mapped file and writes a value to it.</span></span>  
  
4.  <span data-ttu-id="0a469-308">进程 A 读取，并显示为内存映射文件中的值。</span><span class="sxs-lookup"><span data-stu-id="0a469-308">Process A reads and displays the values from the memory-mapped file.</span></span>  
  
5.  <span data-ttu-id="0a469-309">进程 A 完成使用内存映射文件后，该文件立即回收垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="0a469-309">After Process A is finished with the memory-mapped file, the file is immediately reclaimed by garbage collection.</span></span>  
  
 <span data-ttu-id="0a469-310">若要运行此示例，请按照以下步骤操作：</span><span class="sxs-lookup"><span data-stu-id="0a469-310">To run this example, do the following:</span></span>  
  
1.  <span data-ttu-id="0a469-311">编译应用程序并打开三个命令窗口。</span><span class="sxs-lookup"><span data-stu-id="0a469-311">Compile the applications and open three Command windows.</span></span>  
  
2.  <span data-ttu-id="0a469-312">在第一个命令窗口中，运行进程 a。</span><span class="sxs-lookup"><span data-stu-id="0a469-312">In the first Command window, run Process A.</span></span>  
  
3.  <span data-ttu-id="0a469-313">在第二个命令窗口中，运行进程 b。</span><span class="sxs-lookup"><span data-stu-id="0a469-313">In the second Command window, run Process B.</span></span>  
  
4.  <span data-ttu-id="0a469-314">返回到进程 A，然后按 ENTER。</span><span class="sxs-lookup"><span data-stu-id="0a469-314">Return to Process A and press ENTER.</span></span>  
  
5.  <span data-ttu-id="0a469-315">在第三个命令窗口中，运行进程 c。</span><span class="sxs-lookup"><span data-stu-id="0a469-315">In the third Command window, run Process C.</span></span>  
  
6.  <span data-ttu-id="0a469-316">返回到进程 A，然后按 ENTER。</span><span class="sxs-lookup"><span data-stu-id="0a469-316">Return to Process A and press ENTER.</span></span>  
  
 <span data-ttu-id="0a469-317">进程 A 的输出如下所示：</span><span class="sxs-lookup"><span data-stu-id="0a469-317">The output of Process A is as follows:</span></span>  
  
```  
Start Process B and press ENTER to continue.  
Start Process C and press ENTER to continue.  
Process A says: True  
Process B says: False  
Process C says: True  
```  
  
 <span data-ttu-id="0a469-318">**Process A**</span><span class="sxs-lookup"><span data-stu-id="0a469-318">**Process A**</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_X#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/cs/program.cs#1)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_X#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/vb/program.vb#1)]  
  
 <span data-ttu-id="0a469-319">**Process B**</span><span class="sxs-lookup"><span data-stu-id="0a469-319">**Process B**</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_A#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_a/cs/program.cs#1)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_A#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_a/vb/program.vb#1)]  
  
 <span data-ttu-id="0a469-320">**Process C**</span><span class="sxs-lookup"><span data-stu-id="0a469-320">**Process C**</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_B#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_b/cs/program.cs#1)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_B#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_b/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a469-321"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="0a469-321"><paramref name="mapName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a469-322"><paramref name="mapName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-322"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a469-323"><paramref name="capacity" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="0a469-323"><paramref name="capacity" /> is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateNew (mapName As String, capacity As Long, access As MemoryMappedFileAccess) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="0a469-324">要分配给内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0a469-324">A name to assign to the memory-mapped file.</span></span></param>
        <param name="capacity"><span data-ttu-id="0a469-325">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="0a469-325">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="0a469-326">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="0a469-326">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="0a469-327">默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-327">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <summary><span data-ttu-id="0a469-328">在系统内存中创建一个具有指定容量和访问类型的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-328">Creates a memory-mapped file that has the specified capacity and access type in system memory.</span></span></summary>
        <returns><span data-ttu-id="0a469-329">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-329">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a469-330">使用此方法创建一个不持久保留的内存映射文件 （即，不与关联磁盘上的文件），可以用于进程之间共享数据。</span><span class="sxs-lookup"><span data-stu-id="0a469-330">Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a469-331"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="0a469-331"><paramref name="mapName" /> is an empty string.</span></span>  
  
 <span data-ttu-id="0a469-332">或</span><span class="sxs-lookup"><span data-stu-id="0a469-332">-or-</span></span>  
  
 <span data-ttu-id="0a469-333">通过 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值将 <paramref name="access" /> 设置为只写。</span><span class="sxs-lookup"><span data-stu-id="0a469-333"><paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a469-334"><paramref name="mapName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-334"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a469-335"><paramref name="capacity" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="0a469-335"><paramref name="capacity" /> is less than or equal to zero.</span></span>  
  
 <span data-ttu-id="0a469-336">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0a469-336">-or-</span></span>  
  
 <span data-ttu-id="0a469-337"><paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="0a469-337"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateNew (mapName As String, capacity As Long, access As MemoryMappedFileAccess, options As MemoryMappedFileOptions, inheritability As HandleInheritability) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::HandleInheritability inheritability);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="0a469-338">要分配给内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0a469-338">A name to assign to the memory-mapped file.</span></span></param>
        <param name="capacity"><span data-ttu-id="0a469-339">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="0a469-339">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="0a469-340">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="0a469-340">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="0a469-341">默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-341">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <param name="options"><span data-ttu-id="0a469-342">枚举值的按位组合，用于为内存映射文件指定内存分配选项。</span><span class="sxs-lookup"><span data-stu-id="0a469-342">A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</span></span></param>
        <param name="inheritability"><span data-ttu-id="0a469-343">一个值，该值指定内存映射文件的句柄能否由子进程继承。</span><span class="sxs-lookup"><span data-stu-id="0a469-343">A value that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="0a469-344">默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-344">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <summary><span data-ttu-id="0a469-345">创建一个具有指定名称、容量、访问类型、内存分配选项和继承性的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-345">Creates a memory-mapped file that has the specified name, capacity, access type, memory allocation options and inheritability.</span></span></summary>
        <returns><span data-ttu-id="0a469-346">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-346">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a469-347"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="0a469-347"><paramref name="mapName" /> is an empty string.</span></span>  
  
 <span data-ttu-id="0a469-348">或</span><span class="sxs-lookup"><span data-stu-id="0a469-348">-or-</span></span>  
  
 <span data-ttu-id="0a469-349">通过 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值将 <paramref name="access" /> 设置为只写。</span><span class="sxs-lookup"><span data-stu-id="0a469-349"><paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a469-350"><paramref name="mapName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-350"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a469-351"><paramref name="capacity" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="0a469-351"><paramref name="capacity" /> is less than or equal to zero.</span></span>  
  
 <span data-ttu-id="0a469-352">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0a469-352">-or-</span></span>  
  
 <span data-ttu-id="0a469-353"><paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="0a469-353"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span>  
  
 <span data-ttu-id="0a469-354">或</span><span class="sxs-lookup"><span data-stu-id="0a469-354">-or-</span></span>  
  
 <span data-ttu-id="0a469-355"><paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 值。</span><span class="sxs-lookup"><span data-stu-id="0a469-355"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity, System::IO::HandleInheritability inheritability);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" />
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="0a469-356">要分配给内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0a469-356">A name to assign to the memory-mapped file.</span></span></param>
        <param name="capacity"><span data-ttu-id="0a469-357">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="0a469-357">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="0a469-358">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="0a469-358">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="0a469-359">默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-359">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <param name="options"><span data-ttu-id="0a469-360">枚举值的按位组合，用于为内存映射文件指定内存分配选项。</span><span class="sxs-lookup"><span data-stu-id="0a469-360">A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</span></span></param>
        <param name="memoryMappedFileSecurity"><span data-ttu-id="0a469-361">可以针对内存映射文件授予的文件访问和操作权限。</span><span class="sxs-lookup"><span data-stu-id="0a469-361">The permissions that can be granted for file access and operations on memory-mapped files.</span></span>  
  
 <span data-ttu-id="0a469-362">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-362">This parameter can be <see langword="null" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="0a469-363">指定内存映射文件的句柄能否由子进程继承的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="0a469-363">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="0a469-364">默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-364">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <summary><span data-ttu-id="0a469-365">在系统内存中创建一个具有指定容量、访问类型、内存分配、安全权限和继承性的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-365">Creates a memory-mapped file that has the specified capacity, access type, memory allocation, security permissions, and inheritability in system memory.</span></span></summary>
        <returns><span data-ttu-id="0a469-366">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-366">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a469-367">使用此方法创建一个不持久保留的内存映射文件 （即，不与关联磁盘上的文件），可以用于进程之间共享数据。</span><span class="sxs-lookup"><span data-stu-id="0a469-367">Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a469-368"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="0a469-368"><paramref name="mapName" /> is an empty string.</span></span>  
  
 <span data-ttu-id="0a469-369">或</span><span class="sxs-lookup"><span data-stu-id="0a469-369">-or-</span></span>  
  
 <span data-ttu-id="0a469-370">通过 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值将 <paramref name="access" /> 设置为只写。</span><span class="sxs-lookup"><span data-stu-id="0a469-370"><paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a469-371"><paramref name="mapName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-371"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a469-372"><paramref name="capacity" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="0a469-372"><paramref name="capacity" /> is less than or equal to zero.</span></span>  
  
 <span data-ttu-id="0a469-373">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0a469-373">-or-</span></span>  
  
 <span data-ttu-id="0a469-374"><paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="0a469-374"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span>  
  
 <span data-ttu-id="0a469-375">或</span><span class="sxs-lookup"><span data-stu-id="0a469-375">-or-</span></span>  
  
 <span data-ttu-id="0a469-376"><paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="0a469-376"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="0a469-377">用于访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="0a469-377">for access to unmanaged code.</span></span> <span data-ttu-id="0a469-378">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-378">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateOrOpen">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a469-379">在系统内存中创建或打开一个内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-379">Creates or opens a memory-mapped file in system memory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOrOpen (mapName As String, capacity As Long) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="0a469-380">要分配给内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0a469-380">A name to assign to the memory-mapped file.</span></span></param>
        <param name="capacity"><span data-ttu-id="0a469-381">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="0a469-381">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="0a469-382">在系统内存中创建或打开一个具有指定容量的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-382">Creates or opens a memory-mapped file that has the specified capacity in system memory.</span></span></summary>
        <returns><span data-ttu-id="0a469-383">具有指定名称和大小的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-383">A memory-mapped file that has the specified name and size.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a469-384">使用此方法来创建或打开一个不持久保留的内存映射文件 （即，不与关联磁盘上的文件），可以用于进程之间共享数据。</span><span class="sxs-lookup"><span data-stu-id="0a469-384">Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a469-385"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="0a469-385"><paramref name="mapName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a469-386"><paramref name="mapName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-386"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a469-387"><paramref name="capacity" /> 大于逻辑地址空间的大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-387"><paramref name="capacity" /> is greater than the size of the logical address space.</span></span>  
  
 <span data-ttu-id="0a469-388">或</span><span class="sxs-lookup"><span data-stu-id="0a469-388">-or-</span></span>  
  
 <span data-ttu-id="0a469-389"><paramref name="capacity" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="0a469-389"><paramref name="capacity" /> is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOrOpen (mapName As String, capacity As Long, access As MemoryMappedFileAccess) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="0a469-390">要分配给内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0a469-390">A name to assign to the memory-mapped file.</span></span></param>
        <param name="capacity"><span data-ttu-id="0a469-391">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="0a469-391">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="0a469-392">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="0a469-392">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="0a469-393">默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-393">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <summary><span data-ttu-id="0a469-394">在系统内存中创建或打开一个具有指定容量和访问类型的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-394">Creates or opens a memory-mapped file that has the specified capacity and access type in system memory.</span></span></summary>
        <returns><span data-ttu-id="0a469-395">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-395">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a469-396">使用此方法来创建或打开一个不持久保留的内存映射文件 （即，不与关联磁盘上的文件），可以用于进程之间共享数据。</span><span class="sxs-lookup"><span data-stu-id="0a469-396">Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a469-397"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="0a469-397"><paramref name="mapName" /> is an empty string.</span></span>  
  
 <span data-ttu-id="0a469-398">或</span><span class="sxs-lookup"><span data-stu-id="0a469-398">-or-</span></span>  
  
 <span data-ttu-id="0a469-399">通过 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值将 <paramref name="access" /> 设置为只写。</span><span class="sxs-lookup"><span data-stu-id="0a469-399"><paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a469-400"><paramref name="mapName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-400"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a469-401"><paramref name="capacity" /> 大于逻辑地址空间的大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-401"><paramref name="capacity" /> is greater than the size of the logical address space.</span></span>  
  
 <span data-ttu-id="0a469-402">或</span><span class="sxs-lookup"><span data-stu-id="0a469-402">-or-</span></span>  
  
 <span data-ttu-id="0a469-403"><paramref name="capacity" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="0a469-403"><paramref name="capacity" /> is less than or equal to zero.</span></span>  
  
 <span data-ttu-id="0a469-404">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0a469-404">-or-</span></span>  
  
 <span data-ttu-id="0a469-405"><paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="0a469-405"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="0a469-406">操作系统不允许对文件的指定访问；例如，访问权限设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 或 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />，但文件或目录为只读。</span><span class="sxs-lookup"><span data-stu-id="0a469-406">The operating system denied the specified access to the file; for example, access is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />, but the file or directory is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOrOpen (mapName As String, capacity As Long, access As MemoryMappedFileAccess, options As MemoryMappedFileOptions, inheritability As HandleInheritability) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::HandleInheritability inheritability);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="0a469-407">要分配给内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0a469-407">A name to assign to the memory-mapped file.</span></span></param>
        <param name="capacity"><span data-ttu-id="0a469-408">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="0a469-408">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="0a469-409">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="0a469-409">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="0a469-410">默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-410">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <param name="options"><span data-ttu-id="0a469-411">值的按位组合，它指示要应用到文件的内存分配选项。</span><span class="sxs-lookup"><span data-stu-id="0a469-411">A bitwise combination of values that indicate the memory allocation options to apply to the file.</span></span></param>
        <param name="inheritability"><span data-ttu-id="0a469-412">一个值，该值指定内存映射文件的句柄能否由子进程继承。</span><span class="sxs-lookup"><span data-stu-id="0a469-412">A value that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="0a469-413">默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-413">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <summary><span data-ttu-id="0a469-414">创建一个新的空内存映射文件或打开一个现有的内存映射文件（如果存在具有相同名称的内存映射文件）。</span><span class="sxs-lookup"><span data-stu-id="0a469-414">Creates a new empty memory mapped file or opens an existing memory mapped file if one exists with the same name.</span></span> <span data-ttu-id="0a469-415">如果打开现有的文件，则将忽略容量、选项、内存自变量。</span><span class="sxs-lookup"><span data-stu-id="0a469-415">If opening an existing file, the capacity, options, and memory arguments will be ignored.</span></span></summary>
        <returns><span data-ttu-id="0a469-416">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-416">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a469-417"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="0a469-417"><paramref name="mapName" /> is an empty string.</span></span>  
  
 <span data-ttu-id="0a469-418">或</span><span class="sxs-lookup"><span data-stu-id="0a469-418">-or-</span></span>  
  
 <span data-ttu-id="0a469-419">通过 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值将 <paramref name="access" /> 设置为只写。</span><span class="sxs-lookup"><span data-stu-id="0a469-419"><paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a469-420"><paramref name="mapName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-420"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a469-421"><paramref name="capacity" /> 大于逻辑地址空间的大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-421"><paramref name="capacity" /> is greater than the size of the logical address space.</span></span>  
  
 <span data-ttu-id="0a469-422">或</span><span class="sxs-lookup"><span data-stu-id="0a469-422">-or-</span></span>  
  
 <span data-ttu-id="0a469-423"><paramref name="capacity" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="0a469-423"><paramref name="capacity" /> is less than or equal to zero.</span></span>  
  
 <span data-ttu-id="0a469-424">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0a469-424">-or-</span></span>  
  
 <span data-ttu-id="0a469-425"><paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="0a469-425"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span>  
  
 <span data-ttu-id="0a469-426">或</span><span class="sxs-lookup"><span data-stu-id="0a469-426">-or-</span></span>  
  
 <span data-ttu-id="0a469-427"><paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="0a469-427"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="0a469-428">操作系统不允许对文件的指定访问；例如，访问权限设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 或 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />，但文件或目录为只读。</span><span class="sxs-lookup"><span data-stu-id="0a469-428">The operating system denied the specified access to the file; for example, access is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />, but the file or directory is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity, System::IO::HandleInheritability inheritability);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" />
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="0a469-429">要分配给内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0a469-429">A name to assign to the memory-mapped file.</span></span></param>
        <param name="capacity"><span data-ttu-id="0a469-430">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="0a469-430">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="0a469-431">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="0a469-431">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="0a469-432">默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-432">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <param name="options"><span data-ttu-id="0a469-433">枚举值的按位组合，用于为内存映射文件指定内存分配选项。</span><span class="sxs-lookup"><span data-stu-id="0a469-433">A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</span></span></param>
        <param name="memoryMappedFileSecurity"><span data-ttu-id="0a469-434">可以针对内存映射文件授予的文件访问和操作权限。</span><span class="sxs-lookup"><span data-stu-id="0a469-434">The permissions that can be granted for file access and operations on memory-mapped files.</span></span>  
  
 <span data-ttu-id="0a469-435">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-435">This parameter can be <see langword="null" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="0a469-436">指定内存映射文件的句柄能否由子进程继承的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="0a469-436">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="0a469-437">默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-437">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <summary><span data-ttu-id="0a469-438">在系统内存中创建或打开一个具有指定容量、访问类型、内存分配、安全权限和继承性的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-438">Creates or opens a memory-mapped file that has the specified capacity, access type, memory allocation, security permissions, and inheritability in system memory.</span></span></summary>
        <returns><span data-ttu-id="0a469-439">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-439">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a469-440">使用此方法来创建或打开一个不持久保留的内存映射文件 （即，不与关联磁盘上的文件），可以用于进程之间共享数据。</span><span class="sxs-lookup"><span data-stu-id="0a469-440">Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a469-441"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="0a469-441"><paramref name="mapName" /> is an empty string.</span></span>  
  
 <span data-ttu-id="0a469-442">或</span><span class="sxs-lookup"><span data-stu-id="0a469-442">-or-</span></span>  
  
 <span data-ttu-id="0a469-443">通过 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值将 <paramref name="access" /> 设置为只写。</span><span class="sxs-lookup"><span data-stu-id="0a469-443"><paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a469-444"><paramref name="mapName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-444"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a469-445"><paramref name="capacity" /> 大于逻辑地址空间的大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-445"><paramref name="capacity" /> is greater than the size of the logical address space.</span></span>  
  
 <span data-ttu-id="0a469-446">或</span><span class="sxs-lookup"><span data-stu-id="0a469-446">-or-</span></span>  
  
 <span data-ttu-id="0a469-447"><paramref name="capacity" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="0a469-447"><paramref name="capacity" /> is less than or equal to zero.</span></span>  
  
 <span data-ttu-id="0a469-448">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0a469-448">-or-</span></span>  
  
 <span data-ttu-id="0a469-449"><paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="0a469-449"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span>  
  
 <span data-ttu-id="0a469-450">或</span><span class="sxs-lookup"><span data-stu-id="0a469-450">-or-</span></span>  
  
 <span data-ttu-id="0a469-451"><paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="0a469-451"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="0a469-452">操作系统不允许对文件的指定 <paramref name="access" />；例如，<paramref name="access" /> 设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 或 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />，但文件或目录为只读。</span><span class="sxs-lookup"><span data-stu-id="0a469-452">The operating system denied the specified <paramref name="access" /> to the file; for example, <paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />, but the file or directory is read-only.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="0a469-453">用于访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="0a469-453">for access to unmanaged code.</span></span> <span data-ttu-id="0a469-454">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-454">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateViewAccessor">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a469-455">创建映射到内存映射文件视图的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-455">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateViewAccessor">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewAccessor () As MemoryMappedViewAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewAccessor ^ CreateViewAccessor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewAccessor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a469-456">创建映射到内存映射文件视图的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-456">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file.</span></span></summary>
        <returns><span data-ttu-id="0a469-457">可随机访问的内存块。</span><span class="sxs-lookup"><span data-stu-id="0a469-457">A randomly accessible block of memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a469-458">你可以使用由随机访问此方法返回到一个内存映射文件的视图。</span><span class="sxs-lookup"><span data-stu-id="0a469-458">You can use the view returned by this method for random access to a memory-mapped file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="0a469-459">对内存映射文件的访问控制未获授权。</span><span class="sxs-lookup"><span data-stu-id="0a469-459">Access to the memory-mapped file is unauthorized.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateViewAccessor">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor (long offset, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor(int64 offset, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewAccessor (offset As Long, size As Long) As MemoryMappedViewAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewAccessor ^ CreateViewAccessor(long offset, long size);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewAccessor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="0a469-460">启动此视图的字节位置。</span><span class="sxs-lookup"><span data-stu-id="0a469-460">The byte at which to start the view.</span></span></param>
        <param name="size"><span data-ttu-id="0a469-461">视图的大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-461">The size of the view.</span></span> <span data-ttu-id="0a469-462">指定 0（零）以创建从 <c>offset</c> 开始，大约在内存映射文件结尾处结束的视图。</span><span class="sxs-lookup"><span data-stu-id="0a469-462">Specify 0 (zero) to create a view that starts at <c>offset</c> and ends approximately at the end of the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="0a469-463">创建一个 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />，它映射到内存映射文件的视图并具有指定的偏移和大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-463">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file, and that has the specified offset and size.</span></span></summary>
        <returns><span data-ttu-id="0a469-464">可随机访问的内存块。</span><span class="sxs-lookup"><span data-stu-id="0a469-464">A randomly accessible block of memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a469-465">你可以使用由随机访问此方法返回到一个内存映射文件的视图。</span><span class="sxs-lookup"><span data-stu-id="0a469-465">You can use the view returned by this method for random access to a memory-mapped file.</span></span>  
  
 <span data-ttu-id="0a469-466">若要创建内存映射文件的完整视图，请指定 0 （零） 为`size`参数。</span><span class="sxs-lookup"><span data-stu-id="0a469-466">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="0a469-467">如果执行此操作时，视图的大小可能小于或大于磁盘上的源文件的大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-467">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="0a469-468">这是因为系统页面的单位提供的视图和视图的大小向上舍入到下一个系统页面大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-468">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a469-469">以下示例创建一个内存映射文件的视图，并编辑它。</span><span class="sxs-lookup"><span data-stu-id="0a469-469">The following example creates a view of a memory-mapped file and edits it.</span></span> <span data-ttu-id="0a469-470">此代码示例摘自更大的示例为提供<xref:System.IO.MemoryMappedFiles.MemoryMappedFile>类。</span><span class="sxs-lookup"><span data-stu-id="0a469-470">This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> class.</span></span>  
  
 [!code-csharp[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#2](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/cs/program.cs#2)]
 [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a469-471"><paramref name="offset" /> 或 <paramref name="size" /> 是负值。</span><span class="sxs-lookup"><span data-stu-id="0a469-471"><paramref name="offset" /> or <paramref name="size" /> is a negative value.</span></span>  
  
 <span data-ttu-id="0a469-472">或</span><span class="sxs-lookup"><span data-stu-id="0a469-472">-or-</span></span>  
  
 <span data-ttu-id="0a469-473"><paramref name="size" /> 大于逻辑地址空间。</span><span class="sxs-lookup"><span data-stu-id="0a469-473"><paramref name="size" /> is greater than the logical address space.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="0a469-474">对内存映射文件的访问控制未获授权。</span><span class="sxs-lookup"><span data-stu-id="0a469-474">Access to the memory-mapped file is unauthorized.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0a469-475">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0a469-475">An I/O error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateViewAccessor">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor (long offset, long size, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor(int64 offset, int64 size, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewAccessor (offset As Long, size As Long, access As MemoryMappedFileAccess) As MemoryMappedViewAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewAccessor ^ CreateViewAccessor(long offset, long size, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewAccessor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="0a469-476">启动此视图的字节位置。</span><span class="sxs-lookup"><span data-stu-id="0a469-476">The byte at which to start the view.</span></span></param>
        <param name="size"><span data-ttu-id="0a469-477">视图的大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-477">The size of the view.</span></span> <span data-ttu-id="0a469-478">指定 0（零）以创建从 <c>offset</c> 开始，大约在内存映射文件结尾处结束的视图。</span><span class="sxs-lookup"><span data-stu-id="0a469-478">Specify 0 (zero) to create a view that starts at <c>offset</c> and ends approximately at the end of the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="0a469-479">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="0a469-479">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="0a469-480">默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-480">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <summary><span data-ttu-id="0a469-481">创建一个 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />，它映射到内存映射文件的视图并具有指定的偏移、大小和访问限制。</span><span class="sxs-lookup"><span data-stu-id="0a469-481">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file, and that has the specified offset, size, and access restrictions.</span></span></summary>
        <returns><span data-ttu-id="0a469-482">可随机访问的内存块。</span><span class="sxs-lookup"><span data-stu-id="0a469-482">A randomly accessible block of memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a469-483">你可以使用由随机访问此方法返回到一个内存映射文件的视图。</span><span class="sxs-lookup"><span data-stu-id="0a469-483">You can use the view returned by this method for random access to a memory-mapped file.</span></span>  
  
 <span data-ttu-id="0a469-484">若要创建内存映射文件的完整视图，请指定 0 （零） 为`size`参数。</span><span class="sxs-lookup"><span data-stu-id="0a469-484">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="0a469-485">如果执行此操作时，视图的大小可能小于或大于磁盘上的源文件的大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-485">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="0a469-486">这是因为系统页面的单位提供的视图和视图的大小向上舍入到下一个系统页面大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-486">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a469-487"><paramref name="offset" /> 或 <paramref name="size" /> 是负值。</span><span class="sxs-lookup"><span data-stu-id="0a469-487"><paramref name="offset" /> or <paramref name="size" /> is a negative value.</span></span>  
  
 <span data-ttu-id="0a469-488">或</span><span class="sxs-lookup"><span data-stu-id="0a469-488">-or-</span></span>  
  
 <span data-ttu-id="0a469-489"><paramref name="size" /> 大于逻辑地址空间。</span><span class="sxs-lookup"><span data-stu-id="0a469-489"><paramref name="size" /> is greater than the logical address space.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="0a469-490"><paramref name="access" /> 对于内存映射文件无效。</span><span class="sxs-lookup"><span data-stu-id="0a469-490"><paramref name="access" /> is invalid for the memory-mapped file.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0a469-491">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0a469-491">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="0a469-492">用于访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="0a469-492">for access to unmanaged code.</span></span> <span data-ttu-id="0a469-493">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-493">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateViewStream">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a469-494">创建映射到内存映射文件视图的流。</span><span class="sxs-lookup"><span data-stu-id="0a469-494">Creates a stream that maps to a view of the memory-mapped file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateViewStream">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewStream () As MemoryMappedViewStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewStream ^ CreateViewStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a469-495">创建映射到内存映射文件视图的流。</span><span class="sxs-lookup"><span data-stu-id="0a469-495">Creates a stream that maps to a view of the memory-mapped file.</span></span></summary>
        <returns><span data-ttu-id="0a469-496">内存流。</span><span class="sxs-lookup"><span data-stu-id="0a469-496">A stream of memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a469-497">你可以使用此方法返回的顺序访问到内存映射文件，如用于进程间通信流。</span><span class="sxs-lookup"><span data-stu-id="0a469-497">You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a469-498">以下示例创建一个流，并向其中写入一个值。</span><span class="sxs-lookup"><span data-stu-id="0a469-498">The following example creates a stream and writes a value to it.</span></span> <span data-ttu-id="0a469-499">此代码示例摘自更大的示例为提供<xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0a469-499">This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> method.</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_X#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/cs/program.cs#2)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_X#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="0a469-500">对内存映射文件的访问控制未获授权。</span><span class="sxs-lookup"><span data-stu-id="0a469-500">Access to the memory-mapped file is unauthorized.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateViewStream">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream (long offset, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream(int64 offset, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewStream (offset As Long, size As Long) As MemoryMappedViewStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewStream ^ CreateViewStream(long offset, long size);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="0a469-501">启动此视图的字节位置。</span><span class="sxs-lookup"><span data-stu-id="0a469-501">The byte at which to start the view.</span></span></param>
        <param name="size"><span data-ttu-id="0a469-502">视图的大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-502">The size of the view.</span></span> <span data-ttu-id="0a469-503">指定 0（零）以创建从 <c>offset</c> 开始，大约在内存映射文件结尾处结束的视图。</span><span class="sxs-lookup"><span data-stu-id="0a469-503">Specify 0 (zero) to create a view that starts at <c>offset</c> and ends approximately at the end of the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="0a469-504">创建一个流，它映射到内存映射文件的视图并具有指定的偏移和大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-504">Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset and size.</span></span></summary>
        <returns><span data-ttu-id="0a469-505">具有指定偏移和大小的内存流。</span><span class="sxs-lookup"><span data-stu-id="0a469-505">A stream of memory that has the specified offset and size.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a469-506">你可以使用此方法返回的顺序访问到内存映射文件，如用于进程间通信流。</span><span class="sxs-lookup"><span data-stu-id="0a469-506">You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</span></span>  
  
 <span data-ttu-id="0a469-507">若要创建内存映射文件的完整视图，请指定 0 （零） 为`size`参数。</span><span class="sxs-lookup"><span data-stu-id="0a469-507">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="0a469-508">如果执行此操作时，视图的大小可能小于或大于磁盘上的源文件的大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-508">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="0a469-509">这是因为系统页面的单位提供的视图和视图的大小向上舍入到下一个系统页面大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-509">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a469-510"><paramref name="offset" /> 或 <paramref name="size" /> 是负值。</span><span class="sxs-lookup"><span data-stu-id="0a469-510"><paramref name="offset" /> or <paramref name="size" /> is a negative value.</span></span>  
  
 <span data-ttu-id="0a469-511">或</span><span class="sxs-lookup"><span data-stu-id="0a469-511">-or-</span></span>  
  
 <span data-ttu-id="0a469-512"><paramref name="size" /> 大于逻辑地址空间。</span><span class="sxs-lookup"><span data-stu-id="0a469-512"><paramref name="size" /> is greater than the logical address space.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="0a469-513">对内存映射文件的访问控制未获授权。</span><span class="sxs-lookup"><span data-stu-id="0a469-513">Access to the memory-mapped file is unauthorized.</span></span></exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0a469-514"><paramref name="size" /> 大于总虚拟内存。</span><span class="sxs-lookup"><span data-stu-id="0a469-514"><paramref name="size" /> is greater than the total virtual memory.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateViewStream">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream (long offset, long size, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream(int64 offset, int64 size, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewStream (offset As Long, size As Long, access As MemoryMappedFileAccess) As MemoryMappedViewStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewStream ^ CreateViewStream(long offset, long size, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="0a469-515">启动此视图的字节位置。</span><span class="sxs-lookup"><span data-stu-id="0a469-515">The byte at which to start the view.</span></span></param>
        <param name="size"><span data-ttu-id="0a469-516">视图的大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-516">The size of the view.</span></span> <span data-ttu-id="0a469-517">指定 0（零）以创建从 <c>offset</c> 开始，大约在内存映射文件结尾处结束的视图。</span><span class="sxs-lookup"><span data-stu-id="0a469-517">Specify 0 (zero) to create a view that starts at <c>offset</c> and ends approximately at the end of the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="0a469-518">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="0a469-518">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="0a469-519">默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-519">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <summary><span data-ttu-id="0a469-520">创建一个流，它映射到内存映射文件的视图，并具有指定的偏移、大小和访问类型。</span><span class="sxs-lookup"><span data-stu-id="0a469-520">Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset, size, and access type.</span></span></summary>
        <returns><span data-ttu-id="0a469-521">具有指定特征的内存流。</span><span class="sxs-lookup"><span data-stu-id="0a469-521">A stream of memory that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a469-522">你可以使用此方法返回的顺序访问到内存映射文件，如用于进程间通信流。</span><span class="sxs-lookup"><span data-stu-id="0a469-522">You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</span></span>  
  
 <span data-ttu-id="0a469-523">若要创建内存映射文件的完整视图，请指定 0 （零） 为`size`参数。</span><span class="sxs-lookup"><span data-stu-id="0a469-523">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="0a469-524">如果执行此操作时，视图的大小可能小于或大于磁盘上的源文件的大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-524">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="0a469-525">这是因为系统页面的单位提供的视图和视图的大小向上舍入到下一个系统页面大小。</span><span class="sxs-lookup"><span data-stu-id="0a469-525">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a469-526"><paramref name="offset" /> 或 <paramref name="size" /> 是负值。</span><span class="sxs-lookup"><span data-stu-id="0a469-526"><paramref name="offset" /> or <paramref name="size" /> is a negative value.</span></span>  
  
 <span data-ttu-id="0a469-527">或</span><span class="sxs-lookup"><span data-stu-id="0a469-527">-or-</span></span>  
  
 <span data-ttu-id="0a469-528"><paramref name="size" /> 大于逻辑地址空间。</span><span class="sxs-lookup"><span data-stu-id="0a469-528"><paramref name="size" /> is greater than the logical address space.</span></span>  
  
 <span data-ttu-id="0a469-529">或</span><span class="sxs-lookup"><span data-stu-id="0a469-529">-or-</span></span>  
  
 <span data-ttu-id="0a469-530"><paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="0a469-530"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="0a469-531"><paramref name="access" /> 对于内存映射文件无效。</span><span class="sxs-lookup"><span data-stu-id="0a469-531"><paramref name="access" /> is invalid for the memory-mapped file.</span></span></exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0a469-532"><paramref name="size" /> 大于总虚拟内存。</span><span class="sxs-lookup"><span data-stu-id="0a469-532"><paramref name="size" /> is greater than the total virtual memory.</span></span>  
  
 <span data-ttu-id="0a469-533">或</span><span class="sxs-lookup"><span data-stu-id="0a469-533">-or-</span></span>  
  
 <span data-ttu-id="0a469-534"><paramref name="access" /> 对于内存映射文件无效。</span><span class="sxs-lookup"><span data-stu-id="0a469-534"><paramref name="access" /> is invalid for the memory-mapped file.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="0a469-535">用于访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="0a469-535">for access to unmanaged code.</span></span> <span data-ttu-id="0a469-536">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-536">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a469-537">释放由 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 占用的资源。</span><span class="sxs-lookup"><span data-stu-id="0a469-537">Releases the resources used by the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a469-538">释放由 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="0a469-538">Releases all resources used by the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="0a469-539">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-539"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="0a469-540">释放由 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 占用的非托管资源，还可以另外再释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="0a469-540">Releases the unmanaged resources used by the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedFileSecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As MemoryMappedFileSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ GetAccessControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFileSecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a469-541">获取对内存映射文件资源的访问控制。</span><span class="sxs-lookup"><span data-stu-id="0a469-541">Gets the access control to the memory-mapped file resource.</span></span></summary>
        <returns><span data-ttu-id="0a469-542">可以针对内存映射文件授予的文件访问和操作权限。</span><span class="sxs-lookup"><span data-stu-id="0a469-542">The permissions that can be granted for file access and operations on memory-mapped files.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a469-543">用于设置安全信息的基础调用失败。</span><span class="sxs-lookup"><span data-stu-id="0a469-543">An underlying call to set security information failed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0a469-544">用于设置安全信息的基础调用失败。</span><span class="sxs-lookup"><span data-stu-id="0a469-544">An underlying call to set security information failed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0a469-545">内存映射文件关闭。</span><span class="sxs-lookup"><span data-stu-id="0a469-545">The memory-mapped file is closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="0a469-546">当前平台是 Windows 98 或更早版本。</span><span class="sxs-lookup"><span data-stu-id="0a469-546">The current platform is Windows 98 or earlier.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="0a469-547">用于设置安全信息的基础调用失败。</span><span class="sxs-lookup"><span data-stu-id="0a469-547">An underlying call to set security information failed.</span></span>  
  
 <span data-ttu-id="0a469-548">或</span><span class="sxs-lookup"><span data-stu-id="0a469-548">-or-</span></span>  
  
 <span data-ttu-id="0a469-549">内存映射文件已作为只 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 文件打开。</span><span class="sxs-lookup"><span data-stu-id="0a469-549">The memory-mapped file was opened as <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> only.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenExisting">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a469-550">在系统内存中打开现有的已命名内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-550">Opens an existing named memory-mapped file in system memory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting(string mapName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (mapName As String) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ OpenExisting(System::String ^ mapName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="0a469-551">要打开的内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0a469-551">The name of the memory-mapped file to open.</span></span></param>
        <summary><span data-ttu-id="0a469-552">在系统内存中打开一个具有指定名称的现有内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-552">Opens an existing memory-mapped file that has the specified name in system memory.</span></span></summary>
        <returns><span data-ttu-id="0a469-553">具有指定名称的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-553">A memory-mapped file that has the specified name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a469-554">内存映射文件可以是持久的内存映射文件 （与磁盘上的文件相关联） 也可以是非持久。</span><span class="sxs-lookup"><span data-stu-id="0a469-554">The memory-mapped file can be either a persisted memory-mapped file (associated with a file on disk) or non persisted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a469-555">**打开一个持久的内存映射文件**</span><span class="sxs-lookup"><span data-stu-id="0a469-555">**Opening a Persisted Memory-Mapped File**</span></span>  
  
 <span data-ttu-id="0a469-556">下面的示例打开一个名为内存映射文件`ImgA`已创建从磁盘上的文件 (如中的示例所示<xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%28System.String%29>方法)。</span><span class="sxs-lookup"><span data-stu-id="0a469-556">The following example opens a memory-mapped file named `ImgA` that has already been created from a file on disk (as shown in the example for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%28System.String%29> method).</span></span>  
  
 [!code-csharp[memorymappedfiles.memorymappedfile.openexisting#1](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.openexisting/cs/program.cs#1)]
 [!code-vb[memorymappedfiles.memorymappedfile.openexisting#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.openexisting/vb/program.vb#1)]  
  
 <span data-ttu-id="0a469-557">**打开一个非持久化内存映射文件**</span><span class="sxs-lookup"><span data-stu-id="0a469-557">**Opening a Non-Persisted Memory-Mapped File**</span></span>  
  
 <span data-ttu-id="0a469-558">下面的示例打开进程间通信使用的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-558">The following example opens a memory-mapped file used for inter-process communication.</span></span> <span data-ttu-id="0a469-559">此代码示例摘自更大的示例为提供<xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%28System.String%2CSystem.Int64%29>方法。</span><span class="sxs-lookup"><span data-stu-id="0a469-559">This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%28System.String%2CSystem.Int64%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a469-560"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="0a469-560"><paramref name="mapName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a469-561"><paramref name="mapName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-561"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="0a469-562">为 <paramref name="mapName" /> 指定的文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0a469-562">The file specified for <paramref name="mapName" /> does not exist.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName, System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting(string mapName, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (mapName As String, desiredAccessRights As MemoryMappedFileRights) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ OpenExisting(System::String ^ mapName, System::IO::MemoryMappedFiles::MemoryMappedFileRights desiredAccessRights);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="desiredAccessRights" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="0a469-563">要打开的内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0a469-563">The name of the memory-mapped file to open.</span></span></param>
        <param name="desiredAccessRights"><span data-ttu-id="0a469-564">指定要应用于内存映射文件的访问权限的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="0a469-564">One of the enumeration values that specifies the access rights to apply to the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="0a469-565">在系统内存中打开一个具有指定名称和访问权限的现有内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-565">Opens an existing memory-mapped file that has the specified name and access rights in system memory.</span></span></summary>
        <returns><span data-ttu-id="0a469-566">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-566">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a469-567"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="0a469-567"><paramref name="mapName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a469-568"><paramref name="mapName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-568"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a469-569"><paramref name="desiredAccessRights" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="0a469-569"><paramref name="desiredAccessRights" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> enumeration value.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="0a469-570">为 <paramref name="mapName" /> 指定的文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0a469-570">The file specified for <paramref name="mapName" /> does not exist.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName, System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting(string mapName, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (mapName As String, desiredAccessRights As MemoryMappedFileRights, inheritability As HandleInheritability) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ OpenExisting(System::String ^ mapName, System::IO::MemoryMappedFiles::MemoryMappedFileRights desiredAccessRights, System::IO::HandleInheritability inheritability);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="desiredAccessRights" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="0a469-571">要打开的内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0a469-571">The name of the memory-mapped file to open.</span></span></param>
        <param name="desiredAccessRights"><span data-ttu-id="0a469-572">指定要应用于内存映射文件的访问权限的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="0a469-572">One of the enumeration values that specifies the access rights to apply to the memory-mapped file.</span></span></param>
        <param name="inheritability"><span data-ttu-id="0a469-573">指定内存映射文件的句柄能否由子进程继承的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="0a469-573">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="0a469-574">默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-574">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <summary><span data-ttu-id="0a469-575">在系统内存中打开一个具有指定名称、访问权限和继承性的现有内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-575">Opens an existing memory-mapped file that has the specified name, access rights, and inheritability in system memory.</span></span></summary>
        <returns><span data-ttu-id="0a469-576">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="0a469-576">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a469-577"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="0a469-577"><paramref name="mapName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a469-578"><paramref name="mapName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-578"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a469-579"><paramref name="desiredAccessRights" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="0a469-579"><paramref name="desiredAccessRights" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> enumeration value.</span></span>  
  
 <span data-ttu-id="0a469-580">或</span><span class="sxs-lookup"><span data-stu-id="0a469-580">-or-</span></span>  
  
 <span data-ttu-id="0a469-581"><paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="0a469-581"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="0a469-582">请求的访问对于内存映射文件无效。</span><span class="sxs-lookup"><span data-stu-id="0a469-582">The requested access is invalid for the memory-mapped file.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="0a469-583">为 <paramref name="mapName" /> 指定的文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0a469-583">The file specified for <paramref name="mapName" /> does not exist.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="0a469-584">用于访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="0a469-584">for access to unmanaged code.</span></span> <span data-ttu-id="0a469-585">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-585">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SafeMemoryMappedFileHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle SafeMemoryMappedFileHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle SafeMemoryMappedFileHandle" />
      <MemberSignature Language="DocId" Value="P:System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeMemoryMappedFileHandle As SafeMemoryMappedFileHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeMemoryMappedFileHandle ^ SafeMemoryMappedFileHandle { Microsoft::Win32::SafeHandles::SafeMemoryMappedFileHandle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a469-586">获取内存映射文件的文件句柄。</span><span class="sxs-lookup"><span data-stu-id="0a469-586">Gets the file handle of a memory-mapped file.</span></span></summary>
        <value><span data-ttu-id="0a469-587">内存映射文件的句柄。</span><span class="sxs-lookup"><span data-stu-id="0a469-587">The handle to the memory-mapped file.</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="0a469-588">用于访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="0a469-588">for access to unmanaged code.</span></span> <span data-ttu-id="0a469-589">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-589">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" />
      </Parameters>
      <Docs>
        <param name="memoryMappedFileSecurity"><span data-ttu-id="0a469-590">可以针对内存映射文件授予的文件访问和操作权限。</span><span class="sxs-lookup"><span data-stu-id="0a469-590">The permissions that can be granted for file access and operations on memory-mapped files.</span></span></param>
        <summary><span data-ttu-id="0a469-591">设置对内存映射文件资源的访问控制。</span><span class="sxs-lookup"><span data-stu-id="0a469-591">Sets the access control to the memory-mapped file resource.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a469-592"><paramref name="memoryMappedFileSecurity" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0a469-592"><paramref name="memoryMappedFileSecurity" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a469-593">用于设置安全信息的基础调用失败。</span><span class="sxs-lookup"><span data-stu-id="0a469-593">An underlying call to set security information failed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0a469-594">用于设置安全信息的基础调用失败。</span><span class="sxs-lookup"><span data-stu-id="0a469-594">An underlying call to set security information failed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="0a469-595">用于设置安全信息的基础调用失败。</span><span class="sxs-lookup"><span data-stu-id="0a469-595">An underlying call to set security information failed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>