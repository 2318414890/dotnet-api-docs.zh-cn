<Type Name="SchemaImporter" FullName="System.Xml.Serialization.SchemaImporter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="158ee9a4b9849c406a5de21b661798e0e7da4c5e" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58690826" /></Metadata><TypeSignature Language="C#" Value="public abstract class SchemaImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SchemaImporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SchemaImporter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SchemaImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SchemaImporter abstract" />
  <TypeSignature Language="F#" Value="type SchemaImporter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>描述架构导入程序。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此类描述一个架构导入程序，这将 XML 架构转换为相应的代码实体。 <xref:System.Xml.Serialization.SchemaImporter>类是父类的<xref:System.Xml.Serialization.XmlSchemaImporter>类，该类实现了此功能。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection Extensions" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SchemaImporter.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As SchemaImporterExtensionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::Advanced::SchemaImporterExtensionCollection ^ Extensions { System::Xml::Serialization::Advanced::SchemaImporterExtensionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Extensions : System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection" Usage="System.Xml.Serialization.SchemaImporter.Extensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取架构导入程序扩展的集合。</summary>
        <value><see cref="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection" />，包含架构导入程序扩展的集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 架构导入程序扩展来修改行为<xref:System.Xml.Serialization.XmlSchemaImporter>对象。 通过添加<xref:System.Xml.Serialization.Advanced.SchemaImporterExtension>对象添加到此集合中，你可以自定义特定的架构模式生成的代码。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>