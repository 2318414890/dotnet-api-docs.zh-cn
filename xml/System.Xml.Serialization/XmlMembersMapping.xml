<Type Name="XmlMembersMapping" FullName="System.Xml.Serialization.XmlMembersMapping">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="78390de4d57b92442722f81b908445bbbe0ca7bd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36439215" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlMembersMapping : System.Xml.Serialization.XmlMapping" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlMembersMapping extends System.Xml.Serialization.XmlMapping" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlMembersMapping" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlMembersMapping&#xA;Inherits XmlMapping" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlMembersMapping : System::Xml::Serialization::XmlMapping" />
  <TypeSignature Language="F#" Value="type XmlMembersMapping = class&#xA;    inherit XmlMapping" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Serialization.XmlMapping</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供 .NET Framework Web 服务方法与为 SOAP Web 服务定义的 Web 服务描述语言 (WSDL) 消息之间的映射。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlMembersMapping>类不直接使用。 相反，它使用：  
  
-   由 Wsdl.exe 工具或<xref:System.Web.Services.Description.ServiceDescriptionImporter>类，而从 WSDL 文档生成客户端代理类或抽象的服务器类。 WSDL 文档指定使用 SOAP 协议。  
  
-   若要初始化<xref:System.Xml.Serialization.XmlSerializer>对象时.NET Framework 正在初始化 SOAP Web 服务或客户端。  
  
-   通过<xref:System.Web.Services.Description.ServiceDescriptionReflector>类在创建时<xref:System.Web.Services.Description.ServiceDescription>从标识为 SOAP Web 服务的类的对象。  
  
 <xref:System.Xml.Serialization.XmlMembersMapping>类是一个替代<xref:System.Xml.Serialization.XmlTypeMapping>Web 服务方法和消息之间进行映射的类。 它用于包含任何属于 SOAP Web 服务方法的以下实体：  
  
-   输入的参数。  
  
-   输出参数和返回值。  
  
-   请求 SOAP 标头。  
  
-   响应 SOAP 标头。  
  
 具体而言，此类表示映射的 WSDL 消息定义，根据以下选择：  
  
-   使用 SOAP 编码的 Web 服务方法： 顶级<xref:System.Xml.Serialization.XmlMapping.ElementName%2A>和<xref:System.Xml.Serialization.XmlTypeMapping.TypeName%2A>属性与父级，包装元素; 由数组成员表示的消息部分。 但是，在极少数情况下的 Web 服务操作使用文档样式与.NET Framework 方法和 SOAP 编码，顶层的已包装绑定结合使用时<xref:System.Xml.Serialization.XmlMapping.ElementName%2A>和<xref:System.Xml.Serialization.XmlTypeMapping.TypeName%2A>属性与单个**一部分**显示生成的 WSDL 文档中的元素。  
  
-   对于 Web 服务使文本的方法使用 XML 架构定义的： 如果 Web 服务消息或操作使用已包装的绑定到.NET Framework 方法或只是定义的单个消息部分的顶级<xref:System.Xml.Serialization.XmlMapping.ElementName%2A>和<xref:System.Xml.Serialization.XmlTypeMapping.TypeName%2A>属性适用于该部件。 如果有多个部分 （非典型情况），顶级<xref:System.Xml.Serialization.XmlMapping.ElementName%2A>和<xref:System.Xml.Serialization.XmlTypeMapping.TypeName%2A>属性与父级，包装元素; 由表示部件<xref:System.Xml.Serialization.XmlMembersMapping.Count%2A>和索引数组访问属性。 此外，XSD`any`元素需要特殊处理。  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Xml.Serialization.XmlMemberMapping" />
    <altmember cref="T:System.Xml.Serialization.XmlReflectionMember" />
    <altmember cref="T:System.Xml.Serialization.XmlTypeMapping" />
  </Docs>
  <Members>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlMembersMapping.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Xml.Serialization.XmlMembersMapping.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 .NET Framework 代码实体的数目，这些实体属于 SOAP 消息所映射到的 Web 服务方法。</summary>
        <value>集合中映射的数目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 集合可以包含以下任何一项：  
  
-   Web 服务方法输入的参数。  
  
-   Web 服务方法输出参数，加上 1 的返回类型，如果不是 void。  
  
-   SOAP 输入标头。  
  
-   SOAP 输出标头。  
  
 请参阅<xref:System.Xml.Serialization.XmlMembersMapping>类在其下这些实体将转换为的条件`part`Web 服务描述语言 (WSDL) 文档中的元素。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMemberMapping this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlMemberMapping Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlMembersMapping.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As XmlMemberMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlMemberMapping ^ default[int] { System::Xml::Serialization::XmlMemberMapping ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Xml.Serialization.XmlMemberMapping" Usage="System.Xml.Serialization.XmlMembersMapping.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMemberMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要返回的映射的索引。</param>
        <summary>获取一项，该项包含 .NET Framework 代码实体的内部类型映射信息，而 .NET Framework 代码实体属于映射到 SOAP 消息的 Web 服务方法。</summary>
        <value>请求的 <see cref="T:System.Xml.Serialization.XmlMemberMapping" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关索引的阵列访问运算符<xref:System.Xml.Serialization.XmlMembersMapping>类从以下任一的数组中获取指定的项：  
  
-   Web 服务方法输入的参数。  
  
-   Web 服务方法输出参数，以及返回类型，如果不是 void 索引 0 处。  
  
-   SOAP 输入标头。  
  
-   SOAP 输出标头。  
  
 请参阅<xref:System.Xml.Serialization.XmlMembersMapping>类在其下这些实体将转换为的条件`part`Web 服务描述语言 (WSDL) 文档中的元素。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlMembersMapping.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string" Usage="System.Xml.Serialization.XmlMembersMapping.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 .NET Framework 类型的名称，该类型映射到表示 SOAP 消息的 XML 架构元素的数据类型。</summary>
        <value>.NET Framework 类型的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SOAP 消息定义在 Web 服务描述语言 (WSDL) 文档中使用`message`元素。  
  
 请参阅<xref:System.Xml.Serialization.XmlMembersMapping>依据的条件的类<xref:System.Xml.Serialization.XmlMembersMapping.TypeName%2A>属性是指在 Web 服务方法 （参数或返回值） 中定义而不是，额外父或包装元素的代码实体。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TypeNamespace">
      <MemberSignature Language="C#" Value="public string TypeNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlMembersMapping.TypeNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeNamespace : string" Usage="System.Xml.Serialization.XmlMembersMapping.TypeNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 .NET Framework 类型的命名空间，该类型映射到表示 SOAP 消息的 XML 架构元素的数据类型。</summary>
        <value>映射的 .NET Framework 命名空间。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SOAP 消息定义在 Web 服务描述语言 (WSDL) 文档中使用`message`元素。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>