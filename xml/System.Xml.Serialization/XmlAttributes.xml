<Type Name="XmlAttributes" FullName="System.Xml.Serialization.XmlAttributes">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="84014f981e171e4d7799fac85b836aecaa3319a7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36439771" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlAttributes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAttributes extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAttributes" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAttributes" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAttributes" />
  <TypeSignature Language="F#" Value="type XmlAttributes = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="24c36-101">表示控制 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 串行化和反序列化对象方式的属性对象的集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="24c36-101">Represents a collection of attribute objects that control how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes and deserializes an object.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c36-102">创建<xref:System.Xml.Serialization.XmlAttributes>是重写默认的进程的一部分方式<xref:System.Xml.Serialization.XmlSerializer>序列化类实例。</span><span class="sxs-lookup"><span data-stu-id="24c36-102">Creating the <xref:System.Xml.Serialization.XmlAttributes> is part of a process that overrides the default way the <xref:System.Xml.Serialization.XmlSerializer> serializes class instances.</span></span> <span data-ttu-id="24c36-103">例如，假设你想要序列化从其源不可访问的 DLL 创建一个对象。</span><span class="sxs-lookup"><span data-stu-id="24c36-103">For example, suppose you want to serialize an object that is created from a DLL which has an inaccessible source.</span></span> <span data-ttu-id="24c36-104">通过使用<xref:System.Xml.Serialization.XmlAttributeOverrides>，你可以增加或其他方式控制如何序列化对象。</span><span class="sxs-lookup"><span data-stu-id="24c36-104">By using the <xref:System.Xml.Serialization.XmlAttributeOverrides>, you can augment or otherwise control how the object is serialized.</span></span>  
  
 <span data-ttu-id="24c36-105">成员<xref:System.Xml.Serialization.XmlAttributes>类直接对应于一系列控制序列化的属性类。</span><span class="sxs-lookup"><span data-stu-id="24c36-105">The members of the <xref:System.Xml.Serialization.XmlAttributes> class correspond directly to a family of attribute classes that control serialization.</span></span> <span data-ttu-id="24c36-106">例如，<xref:System.Xml.Serialization.XmlAttributes.XmlText%2A>属性必须设置为<xref:System.Xml.Serialization.XmlTextAttribute>，该编辑器可以通过指示重写的字段或属性的序列化<xref:System.Xml.Serialization.XmlSerializer>序列化作为 XML 文本的属性值。</span><span class="sxs-lookup"><span data-stu-id="24c36-106">For example, the <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> property must be set to an <xref:System.Xml.Serialization.XmlTextAttribute>, which allows you to override serialization of a field or property by instructing the <xref:System.Xml.Serialization.XmlSerializer> to serialize the property value as XML text.</span></span> <span data-ttu-id="24c36-107">用于控制序列化的属性的完整列表，请参阅<xref:System.Xml.Serialization.XmlSerializer>。</span><span class="sxs-lookup"><span data-stu-id="24c36-107">For a complete list of attributes that control serialization, see the <xref:System.Xml.Serialization.XmlSerializer>.</span></span>  
  
 <span data-ttu-id="24c36-108">有关详细信息使用<xref:System.Xml.Serialization.XmlAttributeOverrides>与<xref:System.Xml.Serialization.XmlAttributes>类，请参阅[如何： 指定备用元素名称的 XML 流](~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md)。</span><span class="sxs-lookup"><span data-stu-id="24c36-108">For more details on using the <xref:System.Xml.Serialization.XmlAttributeOverrides> with the <xref:System.Xml.Serialization.XmlAttributes> class, see [How to: Specify an Alternate Element Name for an XML Stream](~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24c36-109">下面的示例将名为的类的实例序列化为`Orchestra`，其中包含名为的单个字段`Instruments`返回的数组`Instrument`对象。</span><span class="sxs-lookup"><span data-stu-id="24c36-109">The following example serializes an instance of a class named `Orchestra`, which contains a single field named `Instruments` that returns an array of `Instrument` objects.</span></span> <span data-ttu-id="24c36-110">名为第二个类`Brass`继承自`Instrument`类。</span><span class="sxs-lookup"><span data-stu-id="24c36-110">A second class named `Brass` inherits from the `Instrument` class.</span></span> <span data-ttu-id="24c36-111">该示例创建<xref:System.Xml.Serialization.XmlAttributes>对象来重写`Instrument`域 — — 允许该字段能够接受`Brass`对象-，并将<xref:System.Xml.Serialization.XmlAttributes>到的实例的对象<xref:System.Xml.Serialization.XmlAttributeOverrides>类。</span><span class="sxs-lookup"><span data-stu-id="24c36-111">The example creates an <xref:System.Xml.Serialization.XmlAttributes> object to override the `Instrument` field--allowing the field to accept `Brass` objects--and adds the <xref:System.Xml.Serialization.XmlAttributes> object to an instance of the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24c36-112">初始化 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-112">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributes" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributes.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributes();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="24c36-113">初始化 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-113">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributes" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="24c36-114">下面的示例将名为的类的实例序列化为`Orchestra`，其中包含名为的单个字段`Instruments`返回的数组`Instrument`对象。</span><span class="sxs-lookup"><span data-stu-id="24c36-114">The following example serializes an instance of a class named `Orchestra`, which contains a single field named `Instruments` that returns an array of `Instrument` objects.</span></span> <span data-ttu-id="24c36-115">名为第二个类`Brass`继承自`Instrument`类。</span><span class="sxs-lookup"><span data-stu-id="24c36-115">A second class named `Brass` inherits from the `Instrument` class.</span></span> <span data-ttu-id="24c36-116">该示例创建<xref:System.Xml.Serialization.XmlAttributes>对象来重写`Instrument`域 — — 允许该字段能够接受`Brass`对象-，并将<xref:System.Xml.Serialization.XmlAttributes>到的实例的对象<xref:System.Xml.Serialization.XmlAttributeOverrides>类。</span><span class="sxs-lookup"><span data-stu-id="24c36-116">The example creates an <xref:System.Xml.Serialization.XmlAttributes> object to override the `Instrument` field--allowing the field to accept `Brass` objects--and adds the <xref:System.Xml.Serialization.XmlAttributes> object to an instance of the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributes (System.Reflection.ICustomAttributeProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ICustomAttributeProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As ICustomAttributeProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributes(System::Reflection::ICustomAttributeProvider ^ provider);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAttributes : System.Reflection.ICustomAttributeProvider -&gt; System.Xml.Serialization.XmlAttributes" Usage="new System.Xml.Serialization.XmlAttributes provider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.Reflection.ICustomAttributeProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="24c36-117">可提供控制 XML 序列化的属性的其他实现的类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-117">A class that can provide alternative implementations of attributes that control XML serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24c36-118">初始化 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 类的新实例，并自定义 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 串行化和反序列化对象的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-118">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributes" /> class and customizes how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes and deserializes an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c36-119">使用默认构造函数来<xref:System.Xml.Serialization.XmlAttributes>类，而不是使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="24c36-119">Use the default constructor for the <xref:System.Xml.Serialization.XmlAttributes> class, rather than using this constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAnyAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAnyAttributeAttribute XmlAnyAttribute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAnyAttributeAttribute XmlAnyAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlAnyAttribute As XmlAnyAttributeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAnyAttributeAttribute ^ XmlAnyAttribute { System::Xml::Serialization::XmlAnyAttributeAttribute ^ get(); void set(System::Xml::Serialization::XmlAnyAttributeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlAnyAttribute : System.Xml.Serialization.XmlAnyAttributeAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAnyAttributeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="24c36-120">获取或设置要替代的 <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-120">Gets or sets the <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> to override.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="24c36-121">要重写的 <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-121">The <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> to override.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c36-122"><xref:System.Xml.Serialization.XmlAnyAttributeAttribute>可以应用于返回的数组成员<xref:System.Xml.XmlAttribute>在反序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="24c36-122">The <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> can be applied to a member that returns an array of <xref:System.Xml.XmlAttribute> objects on deserialization.</span></span> <span data-ttu-id="24c36-123">这允许<xref:System.Xml.Serialization.XmlSerializer>进行反序列化任何没有中对象所对应成员的属性反序列化-因此这些元素是"未知"的<xref:System.Xml.Serialization.XmlSerializer>。</span><span class="sxs-lookup"><span data-stu-id="24c36-123">This allows the <xref:System.Xml.Serialization.XmlSerializer> to deserialize any attributes that do not have a corresponding member in the object being deserialized--thus those elements are "unknown" to the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="24c36-124">当已由 XML Web 服务，更改 XML 流或知道随机数据始终是附带 XML 流时，这非常有用。</span><span class="sxs-lookup"><span data-stu-id="24c36-124">This is useful when the XML stream has been altered by an XML Web service, or when it is known that random data is always included with the XML stream.</span></span>  
  
 <span data-ttu-id="24c36-125"><xref:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute%2A>属性允许你重写的成员的序列化<xref:System.Xml.Serialization.XmlAnyAttributeAttribute>已应用。</span><span class="sxs-lookup"><span data-stu-id="24c36-125">The <xref:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute%2A> property allows you to override the serialization of a member to which the <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> has been applied.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAnyElements">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAnyElementAttributes XmlAnyElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAnyElementAttributes XmlAnyElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlAnyElements As XmlAnyElementAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAnyElementAttributes ^ XmlAnyElements { System::Xml::Serialization::XmlAnyElementAttributes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlAnyElements : System.Xml.Serialization.XmlAnyElementAttributes" Usage="System.Xml.Serialization.XmlAttributes.XmlAnyElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAnyElementAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="24c36-126">获取要替代的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 对象集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-126">Gets the collection of <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> objects to override.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="24c36-127">表示 <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> 对象集合的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-127">An <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> object that represents the collection of <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c36-128"><xref:System.Xml.Serialization.XmlAnyElementAttribute>可以应用于返回的数组成员<xref:System.Xml.XmlElement>在反序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="24c36-128">The <xref:System.Xml.Serialization.XmlAnyElementAttribute> can be applied to a member that returns an array of <xref:System.Xml.XmlElement> objects on deserialization.</span></span> <span data-ttu-id="24c36-129">这允许<xref:System.Xml.Serialization.XmlSerializer>进行反序列化没有中对象所对应成员的任何元素反序列化-因此这些元素是"未知"的<xref:System.Xml.Serialization.XmlSerializer>。</span><span class="sxs-lookup"><span data-stu-id="24c36-129">This allows the <xref:System.Xml.Serialization.XmlSerializer> to deserialize any elements that do not have a corresponding member in the object being deserialized--thus those elements are "unknown" to the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="24c36-130">当已由 XML Web 服务，更改 XML 流或知道随机数据始终是附带 XML 流时，这非常有用。</span><span class="sxs-lookup"><span data-stu-id="24c36-130">This is useful when the XML stream has been altered by an XML Web service, or when it is known that random data is always included with the XML stream.</span></span>  
  
 <span data-ttu-id="24c36-131"><xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A>属性允许你重写的成员，才能为其成员函数的序列<xref:System.Xml.Serialization.XmlAnyElementAttribute>已应用。</span><span class="sxs-lookup"><span data-stu-id="24c36-131">The <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A> property allows you to override the serialization of a member to function as a member to which the <xref:System.Xml.Serialization.XmlAnyElementAttribute> has been applied.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24c36-132">下面的示例创建一个新<xref:System.Xml.Serialization.XmlAnyElementAttribute>对象，并将其添加到通过访问的对象集合<xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="24c36-132">The following example creates a new <xref:System.Xml.Serialization.XmlAnyElementAttribute> object and adds it to the collection of objects accessed through the <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A> property.</span></span> <span data-ttu-id="24c36-133"><xref:System.Xml.Serialization.XmlAttributes>对象然后添加到<xref:System.Xml.Serialization.XmlAttributeOverrides>对象该对象用于创建<xref:System.Xml.Serialization.XmlSerializer>对象。</span><span class="sxs-lookup"><span data-stu-id="24c36-133">The <xref:System.Xml.Serialization.XmlAttributes> object is then added to a <xref:System.Xml.Serialization.XmlAttributeOverrides> object which is used to create an <xref:System.Xml.Serialization.XmlSerializer> object.</span></span> <span data-ttu-id="24c36-134"><xref:System.Xml.Serialization.XmlSerializer>用于序列化或反序列化对象。</span><span class="sxs-lookup"><span data-stu-id="24c36-134">The <xref:System.Xml.Serialization.XmlSerializer> is used to serialize or deserialize an object.</span></span> <span data-ttu-id="24c36-135">若要查看使用的效果<xref:System.Xml.Serialization.XmlAnyElementAttributes>属性，创建 XML 文档通过运行名为"UnknownElements.xml"`SerializeObject`中的方法`Main`方法。</span><span class="sxs-lookup"><span data-stu-id="24c36-135">To see the effect of using the <xref:System.Xml.Serialization.XmlAnyElementAttributes> property, create an XML document named "UnknownElements.xml" by running the `SerializeObject` method in the `Main` method.</span></span> <span data-ttu-id="24c36-136">编辑生成的文档，以包括其他 （未知） 的元素。</span><span class="sxs-lookup"><span data-stu-id="24c36-136">Edit the resulting document to include other (unknown) elements.</span></span> <span data-ttu-id="24c36-137">注释掉`SerializeObject`调用`Main`方法，并取消注释对的调用`DeserializeObject`方法，输出的名称和任何未知的 XML 元素的值。</span><span class="sxs-lookup"><span data-stu-id="24c36-137">Comment out the `SerializeObject` call in the `Main` method, and uncomment the call to the `DeserializeObject` method, which prints out the name and value of any unknown XML element.</span></span>  
  
 [!code-cpp[XmlAttributes.XmlAnyElements#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/CPP/xmlanyover.cpp#1)]
 [!code-csharp[XmlAttributes.XmlAnyElements#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/CS/xmlanyover.cs#1)]
 [!code-vb[XmlAttributes.XmlAnyElements#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/VB/xmlanyover.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="XmlArray">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlArrayAttribute XmlArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlArrayAttribute XmlArray" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlArray" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlArray As XmlArrayAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlArrayAttribute ^ XmlArray { System::Xml::Serialization::XmlArrayAttribute ^ get(); void set(System::Xml::Serialization::XmlArrayAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlArray : System.Xml.Serialization.XmlArrayAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlArrayAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="24c36-138">获取或设置一个对象，该对象指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 串行化返回数组的公共字段或读/写属性的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-138">Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or read/write property that returns an array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="24c36-139">一个 <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化如何返回数组的公共字段或读/写属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-139">An <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or read/write property that returns an array.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c36-140">有两种方法在其中的公共字段或公共读/写属性，返回一个数组，序列化<xref:System.Xml.Serialization.XmlSerializer>： 默认序列化和受控的序列化。</span><span class="sxs-lookup"><span data-stu-id="24c36-140">There are two ways in which a public field or public read/write property that returns an array is serialized by the <xref:System.Xml.Serialization.XmlSerializer>: the default serialization, and the controlled serialization.</span></span>  
  
 <span data-ttu-id="24c36-141">在默认序列化中，无特性应用于的成员。</span><span class="sxs-lookup"><span data-stu-id="24c36-141">In the default serialization, no attribute is applied to the member.</span></span> <span data-ttu-id="24c36-142">序列化时，数组序列化为的 XML 元素名称的嵌套序列取自成员名称与嵌套 XML 元素的序列。</span><span class="sxs-lookup"><span data-stu-id="24c36-142">When serialized, the array is serialized as a nested sequence of XML elements with the XML element name of the nested sequence taken from the member name.</span></span>  
  
 <span data-ttu-id="24c36-143">若要更精确地控制序列化，应用<xref:System.Xml.Serialization.XmlArrayAttribute>到字段或属性。</span><span class="sxs-lookup"><span data-stu-id="24c36-143">To control the serialization more precisely, apply an <xref:System.Xml.Serialization.XmlArrayAttribute> to the field or property.</span></span> <span data-ttu-id="24c36-144">例如，你可以更改生成的 XML 元素名称从默认值为其他名称通过设置<xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A>属性的新值。</span><span class="sxs-lookup"><span data-stu-id="24c36-144">For example, you can change the generated XML element name from the default to a different name by setting the <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> property to a new value.</span></span>  
  
 <span data-ttu-id="24c36-145"><xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A>属性允许你重写默认的序列化，以及通过应用控制的序列化<xref:System.Xml.Serialization.XmlArrayAttribute>给的成员。</span><span class="sxs-lookup"><span data-stu-id="24c36-145">The <xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A> property allows you to override the default serialization, as well as the serialization controlled by applying an <xref:System.Xml.Serialization.XmlArrayAttribute> to the member.</span></span> <span data-ttu-id="24c36-146">例如，可以更改为新值从默认值 （成员标识符） 生成的 XML 元素名称。</span><span class="sxs-lookup"><span data-stu-id="24c36-146">For example, you can change the XML element name generated from the default (the member identifier) to a new value.</span></span> <span data-ttu-id="24c36-147">此外，如果将应用<xref:System.Xml.Serialization.XmlArrayAttribute>于成员，它被覆盖任何<xref:System.Xml.Serialization.XmlArrayAttribute>，分配给<xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="24c36-147">In addition, if you apply an <xref:System.Xml.Serialization.XmlArrayAttribute> to a member, it is overridden by any <xref:System.Xml.Serialization.XmlArrayAttribute> that is assigned to the <xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24c36-148">下面的示例序列化类，其中包含名为字段`Members`返回对象的数组。</span><span class="sxs-lookup"><span data-stu-id="24c36-148">The following example serializes a class that contains a field named `Members` that returns an array of objects.</span></span> <span data-ttu-id="24c36-149"><xref:System.Xml.Serialization.XmlArrayAttribute>用于重写的字段，序列化和重命名的元素名称`Staff`。</span><span class="sxs-lookup"><span data-stu-id="24c36-149">The <xref:System.Xml.Serialization.XmlArrayAttribute> is used to override the serialization of the field, and rename the element name to `Staff`.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlArrayItems">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlArrayItemAttributes XmlArrayItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlArrayItemAttributes XmlArrayItems" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlArrayItems As XmlArrayItemAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlArrayItemAttributes ^ XmlArrayItems { System::Xml::Serialization::XmlArrayItemAttributes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlArrayItems : System.Xml.Serialization.XmlArrayItemAttributes" Usage="System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlArrayItemAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="24c36-150">获取或设置一个对象集合，该集合指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化插入数组（由公共字段或读/写属性返回）的项的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-150">Gets or sets a collection of objects that specify how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes items inserted into an array returned by a public field or read/write property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="24c36-151">
            <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> 对象，它包含 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 对象的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-151">An <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> object that contains a collection of <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c36-152"><xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A>属性允许你指定要插入到数组的公共字段或公共读/写属性返回的派生的类型。</span><span class="sxs-lookup"><span data-stu-id="24c36-152">The <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> property allows you to specify the derived types that can be inserted into an array returned by a public field or public read/write property.</span></span> <span data-ttu-id="24c36-153">对于所需的字段或属性接受每个新类型，创建<xref:System.Xml.Serialization.XmlArrayItemAttribute>对象和<xref:System.Xml.Serialization.XmlArrayItemAttributes.Add%2A>到<xref:System.Xml.Serialization.XmlArrayItemAttributes>) 返回<xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="24c36-153">For each new type you want the field or property to accept, create an <xref:System.Xml.Serialization.XmlArrayItemAttribute> object and <xref:System.Xml.Serialization.XmlArrayItemAttributes.Add%2A> it to the <xref:System.Xml.Serialization.XmlArrayItemAttributes>) returned by the <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> property.</span></span> <span data-ttu-id="24c36-154">（新的类型必须派生自已接受的字段或属性的类型。）<xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> <xref:System.Xml.Serialization.XmlAttributes>对象传递给<xref:System.Xml.Serialization.XmlAttributeOverrides>对象，并指定包含的字段或属性，该对象的类型和字段或属性的名称。</span><span class="sxs-lookup"><span data-stu-id="24c36-154">(The new type must be derived from the type already accepted by the field or property.) <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> the <xref:System.Xml.Serialization.XmlAttributes> object to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object and specify the type of the object that contains the field or property, and the name of the field or property.</span></span> <span data-ttu-id="24c36-155">构造<xref:System.Xml.Serialization.XmlSerializer>与<xref:System.Xml.Serialization.XmlAttributeOverrides>对象之前调用<xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>或<xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="24c36-155">Construct an <xref:System.Xml.Serialization.XmlSerializer> with the <xref:System.Xml.Serialization.XmlAttributeOverrides> object before calling <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> or <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24c36-156">下面的示例序列化类，其中包含名为字段`Members`返回对象的数组。</span><span class="sxs-lookup"><span data-stu-id="24c36-156">The following example serializes a class that contains a field named `Members` that returns an array of objects.</span></span> <span data-ttu-id="24c36-157">两个<xref:System.Xml.Serialization.XmlArrayItemAttribute>创建对象以允许要接受从名为的基类派生的对象的字段`Member`。</span><span class="sxs-lookup"><span data-stu-id="24c36-157">Two <xref:System.Xml.Serialization.XmlArrayItemAttribute> objects are created to allow the field to accept objects that derive from the base class named `Member`.</span></span> <span data-ttu-id="24c36-158">每个对象添加到<xref:System.Xml.Serialization.XmlAttributes>通过<xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="24c36-158">Each object is added to the <xref:System.Xml.Serialization.XmlAttributes> through the <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAttributeAttribute XmlAttribute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAttributeAttribute XmlAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlAttribute As XmlAttributeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAttributeAttribute ^ XmlAttribute { System::Xml::Serialization::XmlAttributeAttribute ^ get(); void set(System::Xml::Serialization::XmlAttributeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlAttribute : System.Xml.Serialization.XmlAttributeAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAttributeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="24c36-159">获取或设置一个对象，该对象指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 将公共字段或公共读/写属性串行化为 XML 特性的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-159">Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or public read/write property as an XML attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="24c36-160">控制将公共字段或读/写属性序列化为 XML 特性的 <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-160">An <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> that controls the serialization of a public field or read/write property as an XML attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c36-161">默认情况下，如果没有特性应用到一个公共字段或公共读/写属性，会将它序列化为的 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="24c36-161">By default, if no attribute is applied to a public field or public read/write property, it is serialized as an XML element.</span></span> <span data-ttu-id="24c36-162">你还可以指示<xref:System.Xml.Serialization.XmlSerializer>通过应用生成的 XML 属性<xref:System.Xml.Serialization.XmlAttributeAttribute>到字段或属性。</span><span class="sxs-lookup"><span data-stu-id="24c36-162">You can also instruct the <xref:System.Xml.Serialization.XmlSerializer> to generate an XML attribute by applying an <xref:System.Xml.Serialization.XmlAttributeAttribute> to the field or property.</span></span>  
  
 <span data-ttu-id="24c36-163"><xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A>属性允许你重写默认的序列化，以及通过应用控制的序列化<xref:System.Xml.Serialization.XmlAttributeAttribute>给的成员。</span><span class="sxs-lookup"><span data-stu-id="24c36-163">The <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> property allows you to override the default serialization, as well as the serialization controlled by applying an <xref:System.Xml.Serialization.XmlAttributeAttribute> to the member.</span></span> <span data-ttu-id="24c36-164">若要执行此操作，创建<xref:System.Xml.Serialization.XmlAttributeAttribute>并设置其属性 (如<xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A>)。</span><span class="sxs-lookup"><span data-stu-id="24c36-164">To do this, create an <xref:System.Xml.Serialization.XmlAttributeAttribute> and set its properties (such as <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A>).</span></span> <span data-ttu-id="24c36-165">分配到的新对象<xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A>属性<xref:System.Xml.Serialization.XmlAttributes>对象。</span><span class="sxs-lookup"><span data-stu-id="24c36-165">Assign the new object to the <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> property of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="24c36-166">添加<xref:System.Xml.Serialization.XmlAttributes>对象传递给<xref:System.Xml.Serialization.XmlAttributeOverrides>对象，并指定包含的字段或属性，该对象的类型和字段或属性的名称。</span><span class="sxs-lookup"><span data-stu-id="24c36-166">Add the <xref:System.Xml.Serialization.XmlAttributes> object to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object and specify the type of the object that contains the field or property, and the name of the field or property.</span></span> <span data-ttu-id="24c36-167">最后，创建<xref:System.Xml.Serialization.XmlSerializer>使用<xref:System.Xml.Serialization.XmlAttributeOverrides>对象并调用<xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>或<xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="24c36-167">Lastly, create an <xref:System.Xml.Serialization.XmlSerializer> using the <xref:System.Xml.Serialization.XmlAttributeOverrides> object and call the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> or <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24c36-168">下面的示例序列化类名为`Group`，其中包含一个名为属性`GroupName`;`GroupName`属性序列化为 XML 特性。</span><span class="sxs-lookup"><span data-stu-id="24c36-168">The following example serializes a class named `Group` that contains a property named `GroupName`; the `GroupName` property is serialized as an XML attribute.</span></span> <span data-ttu-id="24c36-169">该示例创建<xref:System.Xml.Serialization.XmlAttributeOverrides>和<xref:System.Xml.Serialization.XmlAttributes>对象来重写默认的序列化的字段。</span><span class="sxs-lookup"><span data-stu-id="24c36-169">The example creates an <xref:System.Xml.Serialization.XmlAttributeOverrides> and an <xref:System.Xml.Serialization.XmlAttributes> object to override the default serialization of the field.</span></span> <span data-ttu-id="24c36-170">然后，示例创建<xref:System.Xml.Serialization.XmlAttributeAttribute>来特别重写该属性，并且该对象设置为<xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A>属性<xref:System.Xml.Serialization.XmlAttributes>对象添加到<xref:System.Xml.Serialization.XmlAttributeOverrides>指定的重写成员同名的对象。</span><span class="sxs-lookup"><span data-stu-id="24c36-170">The example then creates an <xref:System.Xml.Serialization.XmlAttributeAttribute> to specifically override the property, and the object is set to the <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> property The <xref:System.Xml.Serialization.XmlAttributes> object is added to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object with the name of the overridden member specified.</span></span> <span data-ttu-id="24c36-171">最后，<xref:System.Xml.Serialization.XmlSerializer>进行构造并返回使用<xref:System.Xml.Serialization.XmlAttributeOverrides>对象。</span><span class="sxs-lookup"><span data-stu-id="24c36-171">Finally, an <xref:System.Xml.Serialization.XmlSerializer> is constructed and returned using the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlChoiceIdentifier">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlChoiceIdentifierAttribute XmlChoiceIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlChoiceIdentifierAttribute XmlChoiceIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlChoiceIdentifier As XmlChoiceIdentifierAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlChoiceIdentifierAttribute ^ XmlChoiceIdentifier { System::Xml::Serialization::XmlChoiceIdentifierAttribute ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlChoiceIdentifier : System.Xml.Serialization.XmlChoiceIdentifierAttribute" Usage="System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlChoiceIdentifierAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="24c36-172">获取或设置一个对象，该对象允许你区分一组选择。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-172">Gets or sets an object that allows you to distinguish between a set of choices.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="24c36-173">可应用到被序列化为 <see langword="xsi:choice" /> 元素的类成员的 <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-173">An <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> that can be applied to a class member that is serialized as an <see langword="xsi:choice" /> element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDefaultValue">
      <MemberSignature Language="C#" Value="public object XmlDefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object XmlDefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ XmlDefaultValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlDefaultValue : obj with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlDefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="24c36-174">获取或设置 XML 元素或属性的默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-174">Gets or sets the default value of an XML element or attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="24c36-175">表示 XML 元素或属性的默认值的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-175">An <see cref="T:System.Object" /> that represents the default value of an XML element or attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c36-176">你可以通过应用指定的 XML 元素或 XML 属性的默认值<xref:System.ComponentModel.DefaultValueAttribute>的成员。</span><span class="sxs-lookup"><span data-stu-id="24c36-176">You can specify the default value of an XML element or XML attribute by applying a <xref:System.ComponentModel.DefaultValueAttribute> to a member.</span></span> <span data-ttu-id="24c36-177">若要检查应用的值的结果，应用程序编译为 DLL 或可执行文件，并将生成的文件作为自变量传递到 XML 架构定义工具 (XSD.exe)。</span><span class="sxs-lookup"><span data-stu-id="24c36-177">To examine the result of applying the value, compile the application into a DLL or executable, and pass the resulting file as an argument to the XML Schema Definition tool (XSD.exe).</span></span> <span data-ttu-id="24c36-178">在 XML 架构文档中，默认值分配给`default`属性。</span><span class="sxs-lookup"><span data-stu-id="24c36-178">In the XML schema document, a default value is assigned to the `default` attribute.</span></span> <span data-ttu-id="24c36-179">在下面的示例中，默认为\<动物 > 元素是"Dogs。"</span><span class="sxs-lookup"><span data-stu-id="24c36-179">In the following example, the default for the \<Animal> element is "Dogs."</span></span>  
  
```  
<?xml version="1.0"?>  
 <schema attributeFormDefault="qualified"   
 elementFormDefault="qualified" targetNamespace=""   
 xmlns="http://www.w3.org/2000/10/XMLSchema">  
   <element name="Pets" nullable="true" type="Pets"/>  
   <complexType name="Pets">  
     <sequence>  
       <element default="Dogs" name="Animal" nullable="true"   
        type="string" minOccurs="0"/>  
     </sequence>  
   </complexType>  
 </schema>  
```  
  
 <span data-ttu-id="24c36-180">若要覆盖默认值，请创建<xref:System.Object>和将其分配给<xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A>。</span><span class="sxs-lookup"><span data-stu-id="24c36-180">To override the default value, create an <xref:System.Object> and assign it to the <xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A>.</span></span>  
  
 <span data-ttu-id="24c36-181">分配给字段或属性的值是否等于该字段或属性的默认值<xref:System.Xml.Serialization.XmlSerializer>不序列化到 XML 实例的值。</span><span class="sxs-lookup"><span data-stu-id="24c36-181">If the value assigned to a field or property is equal to the default value for that field or property, the <xref:System.Xml.Serialization.XmlSerializer> does not serialize the value to the XML-instance.</span></span> <span data-ttu-id="24c36-182">这是因为可以从 XML 架构中恢复所赋的值。</span><span class="sxs-lookup"><span data-stu-id="24c36-182">This is because the assigned value can be recovered from the XML schema.</span></span> <span data-ttu-id="24c36-183">换而言之，将字段或属性设置为其自身的默认值是根本不设置它的等效。</span><span class="sxs-lookup"><span data-stu-id="24c36-183">In other words, setting a field or property to its own default value is equivalent of not setting it at all.</span></span> <span data-ttu-id="24c36-184">同样，如果为字段或属性，不设置任何值<xref:System.Xml.Serialization.XmlSerializer>使用默认值的架构中找到。</span><span class="sxs-lookup"><span data-stu-id="24c36-184">Likewise, if no value is set for the field or property, the <xref:System.Xml.Serialization.XmlSerializer> uses the default value found in the schema.</span></span> <span data-ttu-id="24c36-185">在同时用例、 （将属性设置为其默认值，或根本不设置） 中的 XML 文档实例不包含属性的任何值。</span><span class="sxs-lookup"><span data-stu-id="24c36-185">In both cases, (setting the property to its default, or not setting it at all), the XML-document instance does not contain any value for the property.</span></span>  
  
 <span data-ttu-id="24c36-186">你可以使用而不是架构的类构造函数分配的默认值。</span><span class="sxs-lookup"><span data-stu-id="24c36-186">You can use the class constructors instead of the schema to assign the default values.</span></span> <span data-ttu-id="24c36-187">如果将 Xsd.exe 从架构生成的类，你可以注释掉或删除的所有 [System.ComponentModel.DefaultValueAttribute("myFieldName")] 属性从类文件。</span><span class="sxs-lookup"><span data-stu-id="24c36-187">If you are using Xsd.exe to generate a classes from schemas, you can comment out or remove all of the [System.ComponentModel.DefaultValueAttribute("myFieldName")] attributes from the class files.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24c36-188">下面的示例演示一个名为类`Pet`，其中包含具有一个默认值设置为"Dog"的字段。</span><span class="sxs-lookup"><span data-stu-id="24c36-188">The following example shows a class named `Pet` that contains a field that has a default value set to "Dog".</span></span> <span data-ttu-id="24c36-189">但是，此示例还创建<xref:System.Xml.Serialization.XmlAttributes>对象，并设置其<xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A>属性的新的默认值 ("Cat")。</span><span class="sxs-lookup"><span data-stu-id="24c36-189">However, the example also creates an <xref:System.Xml.Serialization.XmlAttributes> object, and sets its <xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A> property to a new default value ("Cat").</span></span> <span data-ttu-id="24c36-190">这将覆盖原始的默认值。</span><span class="sxs-lookup"><span data-stu-id="24c36-190">This overrides the original default value.</span></span> <span data-ttu-id="24c36-191">因此，如果字段值设置为"Cat"<xref:System.Xml.Serialization.XmlSerializer>会将其视为默认值，并不将它序列化。</span><span class="sxs-lookup"><span data-stu-id="24c36-191">Thus, if the field value is set to "Cat", the <xref:System.Xml.Serialization.XmlSerializer> treats it as the default value, and not serialize it.</span></span> <span data-ttu-id="24c36-192">如果设置为任何其他值，<xref:System.Xml.Serialization.XmlSerializer>序列化值。</span><span class="sxs-lookup"><span data-stu-id="24c36-192">If it is set to any other value, the <xref:System.Xml.Serialization.XmlSerializer> serializes the value.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlElements">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlElementAttributes XmlElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlElementAttributes XmlElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlElements As XmlElementAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlElementAttributes ^ XmlElements { System::Xml::Serialization::XmlElementAttributes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlElements : System.Xml.Serialization.XmlElementAttributes" Usage="System.Xml.Serialization.XmlAttributes.XmlElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlElementAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="24c36-193">获取一个对象集合，该集合指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 将公共字段或读/写属性串行化为 XML 元素的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-193">Gets a collection of objects that specify how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or read/write property as an XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="24c36-194">包含一个 <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 对象集合的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-194">An <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> that contains a collection of <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c36-195">对于序列化为的 XML 元素的每个重写的成员，你必须添加一个新<xref:System.Xml.Serialization.XmlElementAttribute>到<xref:System.Xml.Serialization.XmlElementAttributes>通过调用<xref:System.Xml.Serialization.XmlElementAttributes.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="24c36-195">For each overridden member that is serialized as an XML element, you must add a new <xref:System.Xml.Serialization.XmlElementAttribute> to an <xref:System.Xml.Serialization.XmlElementAttributes> by calling the <xref:System.Xml.Serialization.XmlElementAttributes.Add%2A> method.</span></span> <span data-ttu-id="24c36-196">默认情况下，<xref:System.Xml.Serialization.XmlElementAttributes>创建对象并将其分配给<xref:System.Xml.Serialization.XmlAttributes.XmlElements%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="24c36-196">By default, an <xref:System.Xml.Serialization.XmlElementAttributes> object is created and assigned to the <xref:System.Xml.Serialization.XmlAttributes.XmlElements%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24c36-197">下面的示例序列化`Transportation`类，该类包含一个名为的单个字段`Vehicles`返回<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="24c36-197">The following example serializes the `Transportation` class, which contains a single field named `Vehicles` that returns an <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="24c36-198">该示例将应用两个<xref:System.Xml.Serialization.XmlElementAttribute>特性以`Vehicles`字段。</span><span class="sxs-lookup"><span data-stu-id="24c36-198">The example applies two <xref:System.Xml.Serialization.XmlElementAttribute> attributes to the `Vehicles` field.</span></span> <span data-ttu-id="24c36-199">该示例创建两个<xref:System.Xml.Serialization.XmlElementAttribute>对象，并将它们添加到<xref:System.Xml.Serialization.XmlElementAttributes>集合<xref:System.Xml.Serialization.XmlAttributes>对象。</span><span class="sxs-lookup"><span data-stu-id="24c36-199">The example creates two <xref:System.Xml.Serialization.XmlElementAttribute> objects and adds them to the <xref:System.Xml.Serialization.XmlElementAttributes> collection of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="24c36-200">若要允许要接受不同的对象类型的数组<xref:System.Xml.Serialization.XmlAttributes>对象添加到<xref:System.Xml.Serialization.XmlAttributeOverrides>对象。</span><span class="sxs-lookup"><span data-stu-id="24c36-200">To allow the array to accept different object types, the <xref:System.Xml.Serialization.XmlAttributes> object is added to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEnum">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlEnumAttribute XmlEnum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlEnumAttribute XmlEnum" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlEnum" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlEnum As XmlEnumAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlEnumAttribute ^ XmlEnum { System::Xml::Serialization::XmlEnumAttribute ^ get(); void set(System::Xml::Serialization::XmlEnumAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlEnum : System.Xml.Serialization.XmlEnumAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlEnum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlEnumAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="24c36-201">获取或设置一个对象，该对象指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 串行化枚举成员的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-201">Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes an enumeration member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="24c36-202">指定 <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> 如何序列化枚举成员的 <see cref="T:System.Xml.Serialization.XmlSerializer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-202">An <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes an enumeration member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c36-203">对于你想要重写每个标识符，必须创建<xref:System.Xml.Serialization.XmlAttributes>对象，并设置<xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A>属性<xref:System.Xml.Serialization.XmlEnumAttribute>可重写标识符。</span><span class="sxs-lookup"><span data-stu-id="24c36-203">For each identifier you want to override, you must create an <xref:System.Xml.Serialization.XmlAttributes> object, and set the <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> property to an <xref:System.Xml.Serialization.XmlEnumAttribute> that overrides the identifier.</span></span> <span data-ttu-id="24c36-204">添加<xref:System.Xml.Serialization.XmlAttributes>对象传递给<xref:System.Xml.Serialization.XmlAttributeOverrides>对象，并指定同时<xref:System.Type>包含枚举和重写的成员名称的类。</span><span class="sxs-lookup"><span data-stu-id="24c36-204">Add the <xref:System.Xml.Serialization.XmlAttributes> object to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object and specify both the <xref:System.Type> of the class that contains the enumeration, and the overridden member name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24c36-205">下面的示例将名为的两个类序列化为`Food`和`FoodType`。</span><span class="sxs-lookup"><span data-stu-id="24c36-205">The following example serializes two classes named `Food` and `FoodType`.</span></span> <span data-ttu-id="24c36-206">`FoodType`类包含两个枚举已重写，并为每个枚举，该示例创建<xref:System.Xml.Serialization.XmlEnumAttribute>对象，它将分配给<xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A>属性<xref:System.Xml.Serialization.XmlAttributes>对象。</span><span class="sxs-lookup"><span data-stu-id="24c36-206">The `FoodType` class contains two enumerations that are overridden and, for each enumeration, the example creates an <xref:System.Xml.Serialization.XmlEnumAttribute> object that it assigns to the <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> property of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="24c36-207">然后该示例添加<xref:System.Xml.Serialization.XmlAttributes>对象传递给<xref:System.Xml.Serialization.XmlAttributeOverrides>对象，用于创建<xref:System.Xml.Serialization.XmlSerializer>。</span><span class="sxs-lookup"><span data-stu-id="24c36-207">The example then adds the <xref:System.Xml.Serialization.XmlAttributes> object to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object, which is used to create an <xref:System.Xml.Serialization.XmlSerializer>.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlIgnore">
      <MemberSignature Language="C#" Value="public bool XmlIgnore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool XmlIgnore" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlIgnore" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlIgnore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool XmlIgnore { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.XmlIgnore : bool with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlIgnore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="24c36-208">获取或设置一个值，该值指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否串行化公共字段或公共读/写属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-208">Gets or sets a value that specifies whether or not the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or public read/write property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="24c36-209">如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 不得序列化字段或属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-209">
              <see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must not serialize the field or property; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c36-210">默认情况下，所有公共字段和公共读/写属性序列化<xref:System.Xml.Serialization.XmlSerializer>。</span><span class="sxs-lookup"><span data-stu-id="24c36-210">By default, all public fields and public read/write properties are serialized by the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="24c36-211">也就是说，每个公共字段或属性的值仍保持为 XML 元素或 XML 文档实例中的 XML 属性。</span><span class="sxs-lookup"><span data-stu-id="24c36-211">That is, the value of each public field or property is persisted as an XML element or XML attribute in an XML-document instance.</span></span>  
  
 <span data-ttu-id="24c36-212">若要重写的默认序列化的字段或属性，请创建<xref:System.Xml.Serialization.XmlAttributes>对象，并设置其<xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A>属性`true`。</span><span class="sxs-lookup"><span data-stu-id="24c36-212">To override the default serialization of a field or property, create an <xref:System.Xml.Serialization.XmlAttributes> object, and set its <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> property to `true`.</span></span> <span data-ttu-id="24c36-213"><xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> 到对象<xref:System.Xml.Serialization.XmlAttributeOverrides>对象，并指定包含的字段或属性，若要忽略，对象的类型和字段或属性，若要忽略的名称。</span><span class="sxs-lookup"><span data-stu-id="24c36-213"><xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> the object to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object and specify the type of the object that contains the field or property to ignore, and the name of the field or property to ignore.</span></span>  
  
 <span data-ttu-id="24c36-214">如果<xref:System.Xml.Serialization.XmlIgnoreAttribute>应用于字段或属性，忽略的字段或属性。</span><span class="sxs-lookup"><span data-stu-id="24c36-214">If an <xref:System.Xml.Serialization.XmlIgnoreAttribute> is applied to a field or property, the field or property is ignored.</span></span> <span data-ttu-id="24c36-215">但是通过创建重写该行为<xref:System.Xml.Serialization.XmlAttributes>对象，并设置其<xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A>属性`false`，将其添加到<xref:System.Xml.Serialization.XmlAttributeOverrides>对象，它指定包含的字段或属性，该对象的类型和名称字段或属性。</span><span class="sxs-lookup"><span data-stu-id="24c36-215">However you can override that behavior by creating an <xref:System.Xml.Serialization.XmlAttributes> object, setting its <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> property to `false`, adding it to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object specifying the type of the object that contains the field or property, and the name of the field or property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24c36-216">下面的示例序列化类名为`Group`，其中包含名为的成员`Comment`到<xref:System.Xml.Serialization.XmlIgnoreAttribute>应用。</span><span class="sxs-lookup"><span data-stu-id="24c36-216">The following example serializes a class named `Group`, which contains a member named `Comment` to which the <xref:System.Xml.Serialization.XmlIgnoreAttribute> is applied.</span></span> <span data-ttu-id="24c36-217">该示例创建<xref:System.Xml.Serialization.XmlAttributes>对象，并设置<xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A>属性`false`，从而重写<xref:System.Xml.Serialization.XmlIgnoreAttribute>。</span><span class="sxs-lookup"><span data-stu-id="24c36-217">The example creates an <xref:System.Xml.Serialization.XmlAttributes> object, and sets the <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> property to `false`, thereby overriding the <xref:System.Xml.Serialization.XmlIgnoreAttribute>.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlIgnoreAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Xmlns">
      <MemberSignature Language="C#" Value="public bool Xmlns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Xmlns" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.Xmlns" />
      <MemberSignature Language="VB.NET" Value="Public Property Xmlns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Xmlns { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Xmlns : bool with get, set" Usage="System.Xml.Serialization.XmlAttributes.Xmlns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="24c36-218">获取或设置一个值，该值指定当替代包含返回 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 对象的成员的对象时，是否保留所有的命名空间声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-218">Gets or sets a value that specifies whether to keep all namespace declarations when an object containing a member that returns an <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> object is overridden.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="24c36-219">如果应保留命名空间声明，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-219">
              <see langword="true" /> if the namespace declarations should be kept; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="24c36-220">下面的示例包含一个名为类`Student`。</span><span class="sxs-lookup"><span data-stu-id="24c36-220">The following example contains a class named `Student`.</span></span> <span data-ttu-id="24c36-221">此类包含名为成员`MyNamespaces`返回<xref:System.Xml.Serialization.XmlSerializerNamespaces>对象。</span><span class="sxs-lookup"><span data-stu-id="24c36-221">The class contains a member named `MyNamespaces` that returns an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object.</span></span> <span data-ttu-id="24c36-222">该示例创建<xref:System.Xml.Serialization.XmlAttributes>添加到的实例的对象<xref:System.Xml.Serialization.XmlAttributeOverrides>类。</span><span class="sxs-lookup"><span data-stu-id="24c36-222">The example creates an <xref:System.Xml.Serialization.XmlAttributes> object that is added to an instance of the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span> <span data-ttu-id="24c36-223"><xref:System.Xml.Serialization.XmlAttributes.Xmlns%2A>属性设置为`true`，它指示<xref:System.Xml.Serialization.XmlSerializer>保留命名空间时的序列化`Student`对象被重写。</span><span class="sxs-lookup"><span data-stu-id="24c36-223">The <xref:System.Xml.Serialization.XmlAttributes.Xmlns%2A> property is set to `true`, which instructs the <xref:System.Xml.Serialization.XmlSerializer> to preserve the namespaces when the serialization of the `Student` object is overridden.</span></span>  
  
 [!code-cpp[XmlAttributes.Xmlns property example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/CPP/xmlns.cpp#1)]
 [!code-csharp[XmlAttributes.Xmlns property example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/CS/xmlns.cs#1)]
 [!code-vb[XmlAttributes.Xmlns property example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/VB/xmlns.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlRoot">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlRootAttribute XmlRoot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlRootAttribute XmlRoot" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlRoot" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlRoot As XmlRootAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlRootAttribute ^ XmlRoot { System::Xml::Serialization::XmlRootAttribute ^ get(); void set(System::Xml::Serialization::XmlRootAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlRoot : System.Xml.Serialization.XmlRootAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlRootAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="24c36-224">获取或设置一个对象，该对象指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 将类串行化为 XML 根元素的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-224">Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a class as an XML root element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="24c36-225">重写特性化为 XML 根元素的类的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-225">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> that overrides a class attributed as an XML root element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="24c36-226">下面的示例创建<xref:System.Xml.Serialization.XmlAttributeOverrides>对象，<xref:System.Xml.Serialization.XmlAttributes>对象，和<xref:System.Xml.Serialization.XmlRootAttribute>对象。</span><span class="sxs-lookup"><span data-stu-id="24c36-226">The following example creates an <xref:System.Xml.Serialization.XmlAttributeOverrides> object, an <xref:System.Xml.Serialization.XmlAttributes> object, and an <xref:System.Xml.Serialization.XmlRootAttribute> object.</span></span> <span data-ttu-id="24c36-227">该示例将指定<xref:System.Xml.Serialization.XmlRootAttribute>到<xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A>属性<xref:System.Xml.Serialization.XmlAttributes>对象，并将添加<xref:System.Xml.Serialization.XmlAttributes>对象传递给<xref:System.Xml.Serialization.XmlAttributeOverrides>对象。</span><span class="sxs-lookup"><span data-stu-id="24c36-227">The example assigns the <xref:System.Xml.Serialization.XmlRootAttribute> to the <xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A> property of the <xref:System.Xml.Serialization.XmlAttributes> object, and adds the <xref:System.Xml.Serialization.XmlAttributes> object to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span> <span data-ttu-id="24c36-228">最后，此示例获取<xref:System.Xml.Serialization.XmlAttributes>通过传递的对象<xref:System.Type>序列化类的<xref:System.Xml.Serialization.XmlAttributeOverrides>对象。</span><span class="sxs-lookup"><span data-stu-id="24c36-228">Lastly, the example gets the <xref:System.Xml.Serialization.XmlAttributes> object by passing the <xref:System.Type> of the serialized class to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span> <span data-ttu-id="24c36-229">(在此示例中，<xref:System.Type>是`Group`。)</span><span class="sxs-lookup"><span data-stu-id="24c36-229">(In this example, the <xref:System.Type> is `Group`.)</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlText">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTextAttribute XmlText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlTextAttribute XmlText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlText" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlText As XmlTextAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlTextAttribute ^ XmlText { System::Xml::Serialization::XmlTextAttribute ^ get(); void set(System::Xml::Serialization::XmlTextAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlText : System.Xml.Serialization.XmlTextAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTextAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="24c36-230">获取或设置一个对象，该对象指示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 将公共字段或公共读/写属性串行化为 XML 文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-230">Gets or sets an object that instructs the <see cref="T:System.Xml.Serialization.XmlSerializer" /> to serialize a public field or public read/write property as XML text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="24c36-231">重写公共属性或字段的默认序列化的 <see cref="T:System.Xml.Serialization.XmlTextAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-231">An <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> that overrides the default serialization of a public property or field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c36-232">默认情况下，公共字段或公共读/写属性序列化为 XML 元素<xref:System.Xml.Serialization.XmlSerializer>。</span><span class="sxs-lookup"><span data-stu-id="24c36-232">By default, a public field or public read/write property is serialized as an XML element by the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="24c36-233">但是，它可以强制的字段或属性序列化为 XML 文本，通过应用<xref:System.Xml.Serialization.XmlTextAttribute>到字段或属性。</span><span class="sxs-lookup"><span data-stu-id="24c36-233">However, it can force the field or property to be serialized as XML text by applying an <xref:System.Xml.Serialization.XmlTextAttribute> to the field or property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="24c36-234"><xref:System.Xml.Serialization.XmlTextAttribute>不能应用于字段或属性返回一个数组。</span><span class="sxs-lookup"><span data-stu-id="24c36-234">The <xref:System.Xml.Serialization.XmlTextAttribute> cannot be applied to a field or property that returns an array.</span></span>  
  
 <span data-ttu-id="24c36-235">若要重写的默认序列化的字段或属性 （即不返回数组），创建<xref:System.Xml.Serialization.XmlTextAttribute>和将其分配给<xref:System.Xml.Serialization.XmlAttributes.XmlText%2A>属性<xref:System.Xml.Serialization.XmlAttributes>对象。</span><span class="sxs-lookup"><span data-stu-id="24c36-235">To override the default serialization of a field or property (that does not return an array), create an <xref:System.Xml.Serialization.XmlTextAttribute> and assign it to the <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> property of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="24c36-236">添加<xref:System.Xml.Serialization.XmlAttributes>对象传递给<xref:System.Xml.Serialization.XmlAttributeOverrides>对象，并指定包含重写的字段或属性，该对象的类型和重写的字段或属性的名称。</span><span class="sxs-lookup"><span data-stu-id="24c36-236">Add the <xref:System.Xml.Serialization.XmlAttributes> object to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object and specify the type of the object that contains the overridden field or property, and the name of the overridden field or property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24c36-237">下面的示例将名为的类序列化为`Group`，其中包含名为的字段`Comment`。</span><span class="sxs-lookup"><span data-stu-id="24c36-237">The following example serializes the class named `Group`, which contains a field named `Comment`.</span></span> <span data-ttu-id="24c36-238">重写默认方式<xref:System.Xml.Serialization.XmlSerializer>序列化字段，该示例创建<xref:System.Xml.Serialization.XmlAttributeOverrides>和<xref:System.Xml.Serialization.XmlAttributes>对象。</span><span class="sxs-lookup"><span data-stu-id="24c36-238">To override the default way the <xref:System.Xml.Serialization.XmlSerializer> serializes the field, the example creates an <xref:System.Xml.Serialization.XmlAttributeOverrides> and an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="24c36-239">然后，示例创建<xref:System.Xml.Serialization.XmlTextAttribute>对象，它将分配给<xref:System.Xml.Serialization.XmlAttributes.XmlText%2A>属性，并将添加<xref:System.Xml.Serialization.XmlAttributes>对象 （具有要序列化为 XML 文本的字段的名称）<xref:System.Xml.Serialization.XmlAttributeOverrides>对象。</span><span class="sxs-lookup"><span data-stu-id="24c36-239">The example then creates an <xref:System.Xml.Serialization.XmlTextAttribute> object, which it assigns to the <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> property, and adds the <xref:System.Xml.Serialization.XmlAttributes> object (with the name of the field to be serialized as XML text) to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span> <span data-ttu-id="24c36-240">此示例创建了最后<xref:System.Xml.Serialization.XmlSerializer>使用<xref:System.Xml.Serialization.XmlAttributeOverrides>对象。</span><span class="sxs-lookup"><span data-stu-id="24c36-240">Lastly the example creates an <xref:System.Xml.Serialization.XmlSerializer> using the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlType">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeAttribute XmlType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlTypeAttribute XmlType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlType" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlType As XmlTypeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlTypeAttribute ^ XmlType { System::Xml::Serialization::XmlTypeAttribute ^ get(); void set(System::Xml::Serialization::XmlTypeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlType : System.Xml.Serialization.XmlTypeAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="24c36-241">获取或设置一个对象，该对象指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 串行化已对其应用 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 的类的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-241">Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a class to which the <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> has been applied.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="24c36-242">重写应用于类声明的 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 的 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c36-242">An <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> that overrides an <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> applied to a class declaration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c36-243"><xref:System.Xml.Serialization.XmlTypeAttribute>可用于控制类型序列化的方式<xref:System.Xml.Serialization.XmlSerializer>。</span><span class="sxs-lookup"><span data-stu-id="24c36-243">The <xref:System.Xml.Serialization.XmlTypeAttribute> can be used to control how a type is serialized by the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="24c36-244">例如，默认情况下，当一个类型被序列化，<xref:System.Xml.Serialization.XmlSerializer>使用的类名作为 XML 元素名称。</span><span class="sxs-lookup"><span data-stu-id="24c36-244">For example, by default, when a type is serialized, the <xref:System.Xml.Serialization.XmlSerializer> uses the class name as the XML element name.</span></span> <span data-ttu-id="24c36-245">通过创建<xref:System.Xml.Serialization.XmlTypeAttribute>，则设置<xref:System.Xml.Serialization.XmlAttributes.XmlType%2A>给它，以及创建属性<xref:System.Xml.Serialization.XmlAttributeOverrides>对象，你可以更改 XML 元素名称。</span><span class="sxs-lookup"><span data-stu-id="24c36-245">By creating an <xref:System.Xml.Serialization.XmlTypeAttribute>, setting the <xref:System.Xml.Serialization.XmlAttributes.XmlType%2A> property to it, and creating an <xref:System.Xml.Serialization.XmlAttributeOverrides> object, you can change the XML element name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24c36-246">下面的示例创建<xref:System.Xml.Serialization.XmlTypeAttribute>对象，并将它分配给<xref:System.Xml.Serialization.XmlAttributes.XmlType%2A>属性<xref:System.Xml.Serialization.XmlAttributes>对象。</span><span class="sxs-lookup"><span data-stu-id="24c36-246">The following example creates an <xref:System.Xml.Serialization.XmlTypeAttribute> object, and assigns it to the <xref:System.Xml.Serialization.XmlAttributes.XmlType%2A> property of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>