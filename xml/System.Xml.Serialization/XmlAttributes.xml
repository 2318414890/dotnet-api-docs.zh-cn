<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlAttributes.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5edc9671be617b74dce18228bd8abdf746446c9c8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">edc9671be617b74dce18228bd8abdf746446c9c8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>Represents a collection of attribute objects that control how the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes and deserializes an object.</source>
          <target state="translated">表示控制 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 串行化和反序列化对象方式的属性对象的集合。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>Creating the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> is part of a process that overrides the default way the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializes class instances.</source>
          <target state="translated">创建<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>是重写默认的进程的一部分方式<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>序列化类实例。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>For example, suppose you want to serialize an object that is created from a DLL which has an inaccessible source.</source>
          <target state="translated">例如，假设你想要序列化从其源不可访问的 DLL 创建一个对象。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>By using the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>, you can augment or otherwise control how the object is serialized.</source>
          <target state="translated">通过使用<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>，你可以增加或其他方式控制如何序列化对象。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>The members of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> class correspond directly to a family of attribute classes that control serialization.</source>
          <target state="translated">成员<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>类直接对应于一系列控制序列化的属性类。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>For example, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlText%2A&gt;</ph> property must be set to an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph>, which allows you to override serialization of a field or property by instructing the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to serialize the property value as XML text.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlText%2A&gt;</ph>属性必须设置为<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph>，该编辑器可以通过指示重写的字段或属性的序列化<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>序列化作为 XML 文本的属性值。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>For a complete list of attributes that control serialization, see the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
          <target state="translated">用于控制序列化的属性的完整列表，请参阅<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>For more details on using the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> with the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> class, see <bpt id="p1">[</bpt>How to: Specify an Alternate Element Name for an XML Stream<ept id="p1">](~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md)</ept>.</source>
          <target state="translated">有关详细信息使用<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>与<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>类，请参阅<bpt id="p1">[</bpt>如何： 指定备用元素名称的 XML 流<ept id="p1">](~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md)</ept>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>The following example serializes an instance of a class named <ph id="ph1">`Orchestra`</ph>, which contains a single field named <ph id="ph2">`Instruments`</ph> that returns an array of <ph id="ph3">`Instrument`</ph> objects.</source>
          <target state="translated">下面的示例将名为的类的实例序列化为<ph id="ph1">`Orchestra`</ph>，其中包含名为的单个字段<ph id="ph2">`Instruments`</ph>返回的数组<ph id="ph3">`Instrument`</ph>对象。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>A second class named <ph id="ph1">`Brass`</ph> inherits from the <ph id="ph2">`Instrument`</ph> class.</source>
          <target state="translated">名为第二个类<ph id="ph1">`Brass`</ph>继承自<ph id="ph2">`Instrument`</ph>类。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>The example creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to override the <ph id="ph2">`Instrument`</ph> field--allowing the field to accept <ph id="ph3">`Brass`</ph> objects--and adds the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to an instance of the <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> class.</source>
          <target state="translated">该示例创建<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>对象来重写<ph id="ph2">`Instrument`</ph>域 — — 允许该字段能够接受<ph id="ph3">`Brass`</ph>对象-，并将<ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>到的实例的对象<ph id="ph5">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributes" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributes" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlAttributes.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributes" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributes" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlAttributes.#ctor">
          <source>The following example serializes an instance of a class named <ph id="ph1">`Orchestra`</ph>, which contains a single field named <ph id="ph2">`Instruments`</ph> that returns an array of <ph id="ph3">`Instrument`</ph> objects.</source>
          <target state="translated">下面的示例将名为的类的实例序列化为<ph id="ph1">`Orchestra`</ph>，其中包含名为的单个字段<ph id="ph2">`Instruments`</ph>返回的数组<ph id="ph3">`Instrument`</ph>对象。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlAttributes.#ctor">
          <source>A second class named <ph id="ph1">`Brass`</ph> inherits from the <ph id="ph2">`Instrument`</ph> class.</source>
          <target state="translated">名为第二个类<ph id="ph1">`Brass`</ph>继承自<ph id="ph2">`Instrument`</ph>类。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlAttributes.#ctor">
          <source>The example creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to override the <ph id="ph2">`Instrument`</ph> field--allowing the field to accept <ph id="ph3">`Brass`</ph> objects--and adds the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to an instance of the <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> class.</source>
          <target state="translated">该示例创建<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>对象来重写<ph id="ph2">`Instrument`</ph>域 — — 允许该字段能够接受<ph id="ph3">`Brass`</ph>对象-，并将<ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>到的实例的对象<ph id="ph5">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
          <source>A class that can provide alternative implementations of attributes that control XML serialization.</source>
          <target state="translated">可提供控制 XML 序列化的属性的其他实现的类。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributes" /&gt;</ph> class and customizes how the <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes and deserializes an object.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributes" /&gt;</ph> 类的新实例，并自定义 <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 串行化和反序列化对象的方式。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
          <source>Use the default constructor for the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> class, rather than using this constructor.</source>
          <target state="translated">使用默认构造函数来<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>类，而不是使用此构造函数。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /&gt;</ph> to override.</source>
          <target state="translated">获取或设置要替代的 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /&gt;</ph> to override.</source>
          <target state="translated">要重写的 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyAttributeAttribute&gt;</ph> can be applied to a member that returns an array of <ph id="ph2">&lt;xref:System.Xml.XmlAttribute&gt;</ph> objects on deserialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyAttributeAttribute&gt;</ph>可以应用于返回的数组成员<ph id="ph2">&lt;xref:System.Xml.XmlAttribute&gt;</ph>在反序列化的对象。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
          <source>This allows the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to deserialize any attributes that do not have a corresponding member in the object being deserialized--thus those elements are "unknown" to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
          <target state="translated">这允许<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>进行反序列化任何没有中对象所对应成员的属性反序列化-因此这些元素是"未知"的<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
          <source>This is useful when the XML stream has been altered by an XML Web service, or when it is known that random data is always included with the XML stream.</source>
          <target state="translated">当已由 XML Web 服务，更改 XML 流或知道随机数据始终是附带 XML 流时，这非常有用。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute%2A&gt;</ph> property allows you to override the serialization of a member to which the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyAttributeAttribute&gt;</ph> has been applied.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute%2A&gt;</ph>属性允许你重写的成员的序列化<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyAttributeAttribute&gt;</ph>已应用。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>Gets the collection of <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /&gt;</ph> objects to override.</source>
          <target state="translated">获取要替代的 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /&gt;</ph> 对象集合。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /&gt;</ph> object that represents the collection of <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /&gt;</ph> objects.</source>
          <target state="translated">表示 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /&gt;</ph> 对象集合的 <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> can be applied to a member that returns an array of <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> objects on deserialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph>可以应用于返回的数组成员<ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph>在反序列化的对象。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>This allows the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to deserialize any elements that do not have a corresponding member in the object being deserialized--thus those elements are "unknown" to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
          <target state="translated">这允许<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>进行反序列化没有中对象所对应成员的任何元素反序列化-因此这些元素是"未知"的<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>This is useful when the XML stream has been altered by an XML Web service, or when it is known that random data is always included with the XML stream.</source>
          <target state="translated">当已由 XML Web 服务，更改 XML 流或知道随机数据始终是附带 XML 流时，这非常有用。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A&gt;</ph> property allows you to override the serialization of a member to function as a member to which the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> has been applied.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A&gt;</ph>属性允许你重写的成员，才能为其成员函数的序列<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph>已应用。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> object and adds it to the collection of objects accessed through the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A&gt;</ph> property.</source>
          <target state="translated">下面的示例创建一个新<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph>对象，并将其添加到通过访问的对象集合<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object is then added to a <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object which is used to create an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>对象然后添加到<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>对象该对象用于创建<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> is used to serialize or deserialize an object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>用于序列化或反序列化对象。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>To see the effect of using the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttributes&gt;</ph> property, create an XML document named "UnknownElements.xml" by running the <ph id="ph2">`SerializeObject`</ph> method in the <ph id="ph3">`Main`</ph> method.</source>
          <target state="translated">若要查看使用的效果<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttributes&gt;</ph>属性，创建 XML 文档通过运行名为"UnknownElements.xml"<ph id="ph2">`SerializeObject`</ph>中的方法<ph id="ph3">`Main`</ph>方法。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>Edit the resulting document to include other (unknown) elements.</source>
          <target state="translated">编辑生成的文档，以包括其他 （未知） 的元素。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>Comment out the <ph id="ph1">`SerializeObject`</ph> call in the <ph id="ph2">`Main`</ph> method, and uncomment the call to the <ph id="ph3">`DeserializeObject`</ph> method, which prints out the name and value of any unknown XML element.</source>
          <target state="translated">注释掉<ph id="ph1">`SerializeObject`</ph>调用<ph id="ph2">`Main`</ph>方法，并取消注释对的调用<ph id="ph3">`DeserializeObject`</ph>方法，输出的名称和任何未知的 XML 元素的值。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>Gets or sets an object that specifies how the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes a public field or read/write property that returns an array.</source>
          <target state="translated">获取或设置一个对象，该对象指定 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 串行化返回数组的公共字段或读/写属性的方式。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlArrayAttribute" /&gt;</ph> that specifies how the <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes a public field or read/write property that returns an array.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlArrayAttribute" /&gt;</ph>，指定 <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 序列化如何返回数组的公共字段或读/写属性。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>There are two ways in which a public field or public read/write property that returns an array is serialized by the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>: the default serialization, and the controlled serialization.</source>
          <target state="translated">有两种方法在其中的公共字段或公共读/写属性，返回一个数组，序列化<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>： 默认序列化和受控的序列化。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>In the default serialization, no attribute is applied to the member.</source>
          <target state="translated">在默认序列化中，无特性应用于的成员。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>When serialized, the array is serialized as a nested sequence of XML elements with the XML element name of the nested sequence taken from the member name.</source>
          <target state="translated">序列化时，数组序列化为的 XML 元素名称的嵌套序列取自成员名称与嵌套 XML 元素的序列。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>To control the serialization more precisely, apply an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> to the field or property.</source>
          <target state="translated">若要更精确地控制序列化，应用<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph>到字段或属性。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>For example, you can change the generated XML element name from the default to a different name by setting the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A&gt;</ph> property to a new value.</source>
          <target state="translated">例如，你可以更改生成的 XML 元素名称从默认值为其他名称通过设置<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A&gt;</ph>属性的新值。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A&gt;</ph> property allows you to override the default serialization, as well as the serialization controlled by applying an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> to the member.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A&gt;</ph>属性允许你重写默认的序列化，以及通过应用控制的序列化<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph>给的成员。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>For example, you can change the XML element name generated from the default (the member identifier) to a new value.</source>
          <target state="translated">例如，可以更改为新值从默认值 （成员标识符） 生成的 XML 元素名称。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>In addition, if you apply an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> to a member, it is overridden by any <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> that is assigned to the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A&gt;</ph> property.</source>
          <target state="translated">此外，如果将应用<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph>于成员，它被覆盖任何<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph>，分配给<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>The following example serializes a class that contains a field named <ph id="ph1">`Members`</ph> that returns an array of objects.</source>
          <target state="translated">下面的示例序列化类，其中包含名为字段<ph id="ph1">`Members`</ph>返回对象的数组。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> is used to override the serialization of the field, and rename the element name to <ph id="ph2">`Staff`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph>用于重写的字段，序列化和重命名的元素名称<ph id="ph2">`Staff`</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
          <source>Gets or sets a collection of objects that specify how the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes items inserted into an array returned by a public field or read/write property.</source>
          <target state="translated">获取或设置一个对象集合，该集合指定 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 序列化插入数组（由公共字段或读/写属性返回）的项的方式。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /&gt;</ph> object that contains a collection of <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /&gt;</ph> 对象，它包含 <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /&gt;</ph> 对象的集合。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A&gt;</ph> property allows you to specify the derived types that can be inserted into an array returned by a public field or public read/write property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A&gt;</ph>属性允许你指定要插入到数组的公共字段或公共读/写属性返回的派生的类型。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
          <source>For each new type you want the field or property to accept, create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute&gt;</ph> object and <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayItemAttributes.Add%2A&gt;</ph> it to the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlArrayItemAttributes&gt;</ph>) returned by the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A&gt;</ph> property.</source>
          <target state="translated">对于所需的字段或属性接受每个新类型，创建<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute&gt;</ph>对象和<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayItemAttributes.Add%2A&gt;</ph>到<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlArrayItemAttributes&gt;</ph>) 返回<ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
          <source>(The new type must be derived from the type already accepted by the field or property.) <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A&gt;</ph> the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object and specify the type of the object that contains the field or property, and the name of the field or property.</source>
          <target state="translated">（新的类型必须派生自已接受的字段或属性的类型。）<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A&gt;</ph> <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>对象传递给<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>对象，并指定包含的字段或属性，该对象的类型和字段或属性的名称。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
          <source>Construct an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> with the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object before calling <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> method.</source>
          <target state="translated">构造<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>与<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>对象之前调用<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph>或<ph id="ph4">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
          <source>The following example serializes a class that contains a field named <ph id="ph1">`Members`</ph> that returns an array of objects.</source>
          <target state="translated">下面的示例序列化类，其中包含名为字段<ph id="ph1">`Members`</ph>返回对象的数组。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
          <source>Two <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute&gt;</ph> objects are created to allow the field to accept objects that derive from the base class named <ph id="ph2">`Member`</ph>.</source>
          <target state="translated">两个<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute&gt;</ph>创建对象以允许要接受从名为的基类派生的对象的字段<ph id="ph2">`Member`</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
          <source>Each object is added to the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> through the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A&gt;</ph> property.</source>
          <target state="translated">每个对象添加到<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>通过<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>Gets or sets an object that specifies how the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes a public field or public read/write property as an XML attribute.</source>
          <target state="translated">获取或设置一个对象，该对象指定 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 将公共字段或公共读/写属性串行化为 XML 特性的方式。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /&gt;</ph> that controls the serialization of a public field or read/write property as an XML attribute.</source>
          <target state="translated">控制将公共字段或读/写属性序列化为 XML 特性的 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>By default, if no attribute is applied to a public field or public read/write property, it is serialized as an XML element.</source>
          <target state="translated">默认情况下，如果没有特性应用到一个公共字段或公共读/写属性，会将它序列化为的 XML 元素。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>You can also instruct the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to generate an XML attribute by applying an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph> to the field or property.</source>
          <target state="translated">你还可以指示<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>通过应用生成的 XML 属性<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph>到字段或属性。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A&gt;</ph> property allows you to override the default serialization, as well as the serialization controlled by applying an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph> to the member.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A&gt;</ph>属性允许你重写默认的序列化，以及通过应用控制的序列化<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph>给的成员。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>To do this, create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph> and set its properties (such as <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A&gt;</ph>).</source>
          <target state="translated">若要执行此操作，创建<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph>并设置其属性 (如<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>Assign the new object to the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object.</source>
          <target state="translated">分配到的新对象<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>Add the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object and specify the type of the object that contains the field or property, and the name of the field or property.</source>
          <target state="translated">添加<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>对象传递给<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>对象，并指定包含的字段或属性，该对象的类型和字段或属性的名称。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>Lastly, create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object and call the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> method.</source>
          <target state="translated">最后，创建<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>使用<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>对象并调用<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph>或<ph id="ph4">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>The following example serializes a class named <ph id="ph1">`Group`</ph> that contains a property named <ph id="ph2">`GroupName`</ph>; the <ph id="ph3">`GroupName`</ph> property is serialized as an XML attribute.</source>
          <target state="translated">下面的示例序列化类名为<ph id="ph1">`Group`</ph>，其中包含一个名为属性<ph id="ph2">`GroupName`</ph>;<ph id="ph3">`GroupName`</ph>属性序列化为 XML 特性。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>The example creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> and an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to override the default serialization of the field.</source>
          <target state="translated">该示例创建<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>和<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>对象来重写默认的序列化的字段。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>The example then creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph> to specifically override the property, and the object is set to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A&gt;</ph> property The <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object is added to the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object with the name of the overridden member specified.</source>
          <target state="translated">然后，示例创建<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph>来特别重写该属性，并且该对象设置为<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>对象添加到<ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>指定的重写成员同名的对象。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>Finally, an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> is constructed and returned using the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object.</source>
          <target state="translated">最后，<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>进行构造并返回使用<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
          <source>Gets or sets an object that allows you to distinguish between a set of choices.</source>
          <target state="translated">获取或设置一个对象，该对象允许你区分一组选择。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /&gt;</ph> that can be applied to a class member that is serialized as an <ph id="ph2">&lt;see langword="xsi:choice" /&gt;</ph> element.</source>
          <target state="translated">可应用到被序列化为 <ph id="ph2">&lt;see langword="xsi:choice" /&gt;</ph> 元素的类成员的 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>Gets or sets the default value of an XML element or attribute.</source>
          <target state="translated">获取或设置 XML 元素或属性的默认值。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the default value of an XML element or attribute.</source>
          <target state="translated">表示 XML 元素或属性的默认值的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>You can specify the default value of an XML element or XML attribute by applying a <ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph> to a member.</source>
          <target state="translated">你可以通过应用指定的 XML 元素或 XML 属性的默认值<ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph>的成员。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>To examine the result of applying the value, compile the application into a DLL or executable, and pass the resulting file as an argument to the XML Schema Definition tool (XSD.exe).</source>
          <target state="translated">若要检查应用的值的结果，应用程序编译为 DLL 或可执行文件，并将生成的文件作为自变量传递到 XML 架构定义工具 (XSD.exe)。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>In the XML schema document, a default value is assigned to the <ph id="ph1">`default`</ph> attribute.</source>
          <target state="translated">在 XML 架构文档中，默认值分配给<ph id="ph1">`default`</ph>属性。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>In the following example, the default for the <ph id="ph1">\&lt;</ph>Animal&gt; element is "Dogs."</source>
          <target state="translated">在下面的示例中，默认为<ph id="ph1">\&lt;</ph>动物 &gt; 元素是"Dogs。"</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>To override the default value, create an <ph id="ph1">&lt;xref:System.Object&gt;</ph> and assign it to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A&gt;</ph>.</source>
          <target state="translated">若要覆盖默认值，请创建<ph id="ph1">&lt;xref:System.Object&gt;</ph>和将其分配给<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>If the value assigned to a field or property is equal to the default value for that field or property, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> does not serialize the value to the XML-instance.</source>
          <target state="translated">分配给字段或属性的值是否等于该字段或属性的默认值<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>不序列化到 XML 实例的值。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>This is because the assigned value can be recovered from the XML schema.</source>
          <target state="translated">这是因为可以从 XML 架构中恢复所赋的值。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>In other words, setting a field or property to its own default value is equivalent of not setting it at all.</source>
          <target state="translated">换而言之，将字段或属性设置为其自身的默认值是根本不设置它的等效。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>Likewise, if no value is set for the field or property, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> uses the default value found in the schema.</source>
          <target state="translated">同样，如果为字段或属性，不设置任何值<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>使用默认值的架构中找到。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>In both cases, (setting the property to its default, or not setting it at all), the XML-document instance does not contain any value for the property.</source>
          <target state="translated">在同时用例、 （将属性设置为其默认值，或根本不设置） 中的 XML 文档实例不包含属性的任何值。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>You can use the class constructors instead of the schema to assign the default values.</source>
          <target state="translated">你可以使用而不是架构的类构造函数分配的默认值。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>If you are using Xsd.exe to generate a classes from schemas, you can comment out or remove all of the [System.ComponentModel.DefaultValueAttribute("myFieldName")] attributes from the class files.</source>
          <target state="translated">如果将 Xsd.exe 从架构生成的类，你可以注释掉或删除的所有 [System.ComponentModel.DefaultValueAttribute("myFieldName")] 属性从类文件。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>The following example shows a class named <ph id="ph1">`Pet`</ph> that contains a field that has a default value set to "Dog".</source>
          <target state="translated">下面的示例演示一个名为类<ph id="ph1">`Pet`</ph>，其中包含具有一个默认值设置为"Dog"的字段。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>However, the example also creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, and sets its <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A&gt;</ph> property to a new default value ("Cat").</source>
          <target state="translated">但是，此示例还创建<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>对象，并设置其<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A&gt;</ph>属性的新的默认值 ("Cat")。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>This overrides the original default value.</source>
          <target state="translated">这将覆盖原始的默认值。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>Thus, if the field value is set to "Cat", the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> treats it as the default value, and not serialize it.</source>
          <target state="translated">因此，如果字段值设置为"Cat"<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>会将其视为默认值，并不将它序列化。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>If it is set to any other value, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializes the value.</source>
          <target state="translated">如果设置为任何其他值，<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>序列化值。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlElements">
          <source>Gets a collection of objects that specify how the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes a public field or read/write property as an XML element.</source>
          <target state="translated">获取一个对象集合，该集合指定 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 将公共字段或读/写属性串行化为 XML 元素的方式。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlElements">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttributes" /&gt;</ph> that contains a collection of <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> objects.</source>
          <target state="translated">包含一个 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttributes" /&gt;</ph> 对象集合的 <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlElements">
          <source>For each overridden member that is serialized as an XML element, you must add a new <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttributes&gt;</ph> by calling the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlElementAttributes.Add%2A&gt;</ph> method.</source>
          <target state="translated">对于序列化为的 XML 元素的每个重写的成员，你必须添加一个新<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>到<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttributes&gt;</ph>通过调用<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlElementAttributes.Add%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlElements">
          <source>By default, an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttributes&gt;</ph> object is created and assigned to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlElements%2A&gt;</ph> property.</source>
          <target state="translated">默认情况下，<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttributes&gt;</ph>创建对象并将其分配给<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlElements%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlElements">
          <source>The following example serializes the <ph id="ph1">`Transportation`</ph> class, which contains a single field named <ph id="ph2">`Vehicles`</ph> that returns an <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">下面的示例序列化<ph id="ph1">`Transportation`</ph>类，该类包含一个名为的单个字段<ph id="ph2">`Vehicles`</ph>返回<ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlElements">
          <source>The example applies two <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> attributes to the <ph id="ph2">`Vehicles`</ph> field.</source>
          <target state="translated">该示例将应用两个<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>特性以<ph id="ph2">`Vehicles`</ph>字段。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlElements">
          <source>The example creates two <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> objects and adds them to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttributes&gt;</ph> collection of an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object.</source>
          <target state="translated">该示例创建两个<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>对象，并将它们添加到<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttributes&gt;</ph>集合<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlElements">
          <source>To allow the array to accept different object types, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object is added to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object.</source>
          <target state="translated">若要允许要接受不同的对象类型的数组<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>对象添加到<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
          <source>Gets or sets an object that specifies how the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes an enumeration member.</source>
          <target state="translated">获取或设置一个对象，该对象指定 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 串行化枚举成员的方式。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlEnumAttribute" /&gt;</ph> that specifies how the <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes an enumeration member.</source>
          <target state="translated">指定 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlEnumAttribute" /&gt;</ph> 如何序列化枚举成员的 <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
          <source>For each identifier you want to override, you must create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, and set the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A&gt;</ph> property to an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlEnumAttribute&gt;</ph> that overrides the identifier.</source>
          <target state="translated">对于你想要重写每个标识符，必须创建<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>对象，并设置<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlEnumAttribute&gt;</ph>可重写标识符。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
          <source>Add the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object and specify both the <ph id="ph3">&lt;xref:System.Type&gt;</ph> of the class that contains the enumeration, and the overridden member name.</source>
          <target state="translated">添加<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>对象传递给<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>对象，并指定同时<ph id="ph3">&lt;xref:System.Type&gt;</ph>包含枚举和重写的成员名称的类。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
          <source>The following example serializes two classes named <ph id="ph1">`Food`</ph> and <ph id="ph2">`FoodType`</ph>.</source>
          <target state="translated">下面的示例将名为的两个类序列化为<ph id="ph1">`Food`</ph>和<ph id="ph2">`FoodType`</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
          <source>The <ph id="ph1">`FoodType`</ph> class contains two enumerations that are overridden and, for each enumeration, the example creates an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlEnumAttribute&gt;</ph> object that it assigns to the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A&gt;</ph> property of an <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`FoodType`</ph>类包含两个枚举已重写，并为每个枚举，该示例创建<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlEnumAttribute&gt;</ph>对象，它将分配给<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A&gt;</ph>属性<ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
          <source>The example then adds the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object, which is used to create an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
          <target state="translated">然后该示例添加<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>对象传递给<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>对象，用于创建<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source>Gets or sets a value that specifies whether or not the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes a public field or public read/write property.</source>
          <target state="translated">获取或设置一个值，该值指定 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 是否串行化公共字段或公共读/写属性。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> must not serialize the field or property; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 不得序列化字段或属性，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source>By default, all public fields and public read/write properties are serialized by the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
          <target state="translated">默认情况下，所有公共字段和公共读/写属性序列化<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source>That is, the value of each public field or property is persisted as an XML element or XML attribute in an XML-document instance.</source>
          <target state="translated">也就是说，每个公共字段或属性的值仍保持为 XML 元素或 XML 文档实例中的 XML 属性。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source>To override the default serialization of a field or property, create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, and set its <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">若要重写的默认序列化的字段或属性，请创建<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>对象，并设置其<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A&gt;</ph>属性<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A&gt;</ph> the object to an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object and specify the type of the object that contains the field or property to ignore, and the name of the field or property to ignore.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A&gt;</ph> 到对象<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>对象，并指定包含的字段或属性，若要忽略，对象的类型和字段或属性，若要忽略的名称。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source>If an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph> is applied to a field or property, the field or property is ignored.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph>应用于字段或属性，忽略的字段或属性。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source>However you can override that behavior by creating an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, setting its <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A&gt;</ph> property to <ph id="ph3">`false`</ph>, adding it to an <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object specifying the type of the object that contains the field or property, and the name of the field or property.</source>
          <target state="translated">但是通过创建重写该行为<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>对象，并设置其<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A&gt;</ph>属性<ph id="ph3">`false`</ph>，将其添加到<ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>对象，它指定包含的字段或属性，该对象的类型和名称字段或属性。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source>The following example serializes a class named <ph id="ph1">`Group`</ph>, which contains a member named <ph id="ph2">`Comment`</ph> to which the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph> is applied.</source>
          <target state="translated">下面的示例序列化类名为<ph id="ph1">`Group`</ph>，其中包含名为的成员<ph id="ph2">`Comment`</ph>到<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph>应用。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source>The example creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, and sets the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A&gt;</ph> property to <ph id="ph3">`false`</ph>, thereby overriding the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph>.</source>
          <target state="translated">该示例创建<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>对象，并设置<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A&gt;</ph>属性<ph id="ph3">`false`</ph>，从而重写<ph id="ph4">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.Xmlns">
          <source>Gets or sets a value that specifies whether to keep all namespace declarations when an object containing a member that returns an <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /&gt;</ph> object is overridden.</source>
          <target state="translated">获取或设置一个值，该值指定当替代包含返回 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /&gt;</ph> 对象的成员的对象时，是否保留所有的命名空间声明。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.Xmlns">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the namespace declarations should be kept; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果应保留命名空间声明，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.Xmlns">
          <source>The following example contains a class named <ph id="ph1">`Student`</ph>.</source>
          <target state="translated">下面的示例包含一个名为类<ph id="ph1">`Student`</ph>。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.Xmlns">
          <source>The class contains a member named <ph id="ph1">`MyNamespaces`</ph> that returns an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> object.</source>
          <target state="translated">此类包含名为成员<ph id="ph1">`MyNamespaces`</ph>返回<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.Xmlns">
          <source>The example creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object that is added to an instance of the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> class.</source>
          <target state="translated">该示例创建<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>添加到的实例的对象<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.Xmlns">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.Xmlns%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, which instructs the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to preserve the namespaces when the serialization of the <ph id="ph4">`Student`</ph> object is overridden.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.Xmlns%2A&gt;</ph>属性设置为<ph id="ph2">`true`</ph>，它指示<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>保留命名空间时的序列化<ph id="ph4">`Student`</ph>对象被重写。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
          <source>Gets or sets an object that specifies how the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes a class as an XML root element.</source>
          <target state="translated">获取或设置一个对象，该对象指定 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 将类串行化为 XML 根元素的方式。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlRootAttribute" /&gt;</ph> that overrides a class attributed as an XML root element.</source>
          <target state="translated">重写特性化为 XML 根元素的类的 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlRootAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object, an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, and an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlRootAttribute&gt;</ph> object.</source>
          <target state="translated">下面的示例创建<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>对象，<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>对象，和<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlRootAttribute&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
          <source>The example assigns the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlRootAttribute&gt;</ph> to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, and adds the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to the <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object.</source>
          <target state="translated">该示例将指定<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlRootAttribute&gt;</ph>到<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>对象，并将添加<ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>对象传递给<ph id="ph5">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
          <source>Lastly, the example gets the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object by passing the <ph id="ph2">&lt;xref:System.Type&gt;</ph> of the serialized class to the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object.</source>
          <target state="translated">最后，此示例获取<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>通过传递的对象<ph id="ph2">&lt;xref:System.Type&gt;</ph>序列化类的<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
          <source>(In this example, the <ph id="ph1">&lt;xref:System.Type&gt;</ph> is <ph id="ph2">`Group`</ph>.)</source>
          <target state="translated">(在此示例中，<ph id="ph1">&lt;xref:System.Type&gt;</ph>是<ph id="ph2">`Group`</ph>。)</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>Gets or sets an object that instructs the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> to serialize a public field or public read/write property as XML text.</source>
          <target state="translated">获取或设置一个对象，该对象指示 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 将公共字段或公共读/写属性串行化为 XML 文本。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlTextAttribute" /&gt;</ph> that overrides the default serialization of a public property or field.</source>
          <target state="translated">重写公共属性或字段的默认序列化的 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlTextAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>By default, a public field or public read/write property is serialized as an XML element by the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
          <target state="translated">默认情况下，公共字段或公共读/写属性序列化为 XML 元素<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>However, it can force the field or property to be serialized as XML text by applying an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> to the field or property.</source>
          <target state="translated">但是，它可以强制的字段或属性序列化为 XML 文本，通过应用<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph>到字段或属性。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> cannot be applied to a field or property that returns an array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph>不能应用于字段或属性返回一个数组。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>To override the default serialization of a field or property (that does not return an array), create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> and assign it to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlText%2A&gt;</ph> property of an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object.</source>
          <target state="translated">若要重写的默认序列化的字段或属性 （即不返回数组），创建<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph>和将其分配给<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlText%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>Add the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object and specify the type of the object that contains the overridden field or property, and the name of the overridden field or property.</source>
          <target state="translated">添加<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>对象传递给<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>对象，并指定包含重写的字段或属性，该对象的类型和重写的字段或属性的名称。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>The following example serializes the class named <ph id="ph1">`Group`</ph>, which contains a field named <ph id="ph2">`Comment`</ph>.</source>
          <target state="translated">下面的示例将名为的类序列化为<ph id="ph1">`Group`</ph>，其中包含名为的字段<ph id="ph2">`Comment`</ph>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>To override the default way the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializes the field, the example creates an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> and an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object.</source>
          <target state="translated">重写默认方式<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>序列化字段，该示例创建<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>和<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>The example then creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> object, which it assigns to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlText%2A&gt;</ph> property, and adds the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object (with the name of the field to be serialized as XML text) to the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object.</source>
          <target state="translated">然后，示例创建<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph>对象，它将分配给<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlText%2A&gt;</ph>属性，并将添加<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>对象 （具有要序列化为 XML 文本的字段的名称）<ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>Lastly the example creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object.</source>
          <target state="translated">此示例创建了最后<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>使用<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlType">
          <source>Gets or sets an object that specifies how the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes a class to which the <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlTypeAttribute" /&gt;</ph> has been applied.</source>
          <target state="translated">获取或设置一个对象，该对象指定 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 串行化已对其应用 <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlTypeAttribute" /&gt;</ph> 的类的方式。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlType">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlTypeAttribute" /&gt;</ph> that overrides an <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlTypeAttribute" /&gt;</ph> applied to a class declaration.</source>
          <target state="translated">重写应用于类声明的 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlTypeAttribute" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlTypeAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlType">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTypeAttribute&gt;</ph> can be used to control how a type is serialized by the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTypeAttribute&gt;</ph>可用于控制类型序列化的方式<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlType">
          <source>For example, by default, when a type is serialized, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> uses the class name as the XML element name.</source>
          <target state="translated">例如，默认情况下，当一个类型被序列化，<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>使用的类名作为 XML 元素名称。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlType">
          <source>By creating an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTypeAttribute&gt;</ph>, setting the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlType%2A&gt;</ph> property to it, and creating an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object, you can change the XML element name.</source>
          <target state="translated">通过创建<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTypeAttribute&gt;</ph>，则设置<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlType%2A&gt;</ph>给它，以及创建属性<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>对象，你可以更改 XML 元素名称。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlType">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTypeAttribute&gt;</ph> object, and assigns it to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlType%2A&gt;</ph> property of an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object.</source>
          <target state="translated">下面的示例创建<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTypeAttribute&gt;</ph>对象，并将它分配给<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlType%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>对象。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>