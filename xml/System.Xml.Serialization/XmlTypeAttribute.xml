<Type Name="XmlTypeAttribute" FullName="System.Xml.Serialization.XmlTypeAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2aec38a9c49895641c903224c6286d089f892f50" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30719931" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTypeAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Interface | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="7b2d5-101">控制当属性目标由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化时生成的 XML 架构。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7b2d5-101">Controls the XML schema that is generated when the attribute target is serialized by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b2d5-102"><xref:System.Xml.Serialization.XmlTypeAttribute>属于一系列属性，用于控制如何<xref:System.Xml.Serialization.XmlSerializer>序列化或反序列化对象。</span><span class="sxs-lookup"><span data-stu-id="7b2d5-102">The <xref:System.Xml.Serialization.XmlTypeAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object.</span></span> <span data-ttu-id="7b2d5-103">类似的属性的完整列表，请参阅[属性，控制 XML 序列化](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="7b2d5-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="7b2d5-104">你可以将应用<xref:System.Xml.Serialization.XmlTypeAttribute>到类、 结构、 枚举或接口声明。</span><span class="sxs-lookup"><span data-stu-id="7b2d5-104">You can apply the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class, structure, enumeration, or interface declaration.</span></span>  
  
 <span data-ttu-id="7b2d5-105">应用<xref:System.Xml.Serialization.XmlTypeAttribute>于类，以指定的 XML 类型的命名空间、 XML 类型名称，以及是否要包含在 XML 架构文档中的类型。</span><span class="sxs-lookup"><span data-stu-id="7b2d5-105">Apply the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML schema document.</span></span> <span data-ttu-id="7b2d5-106">若要查看的属性设置结果<xref:System.Xml.Serialization.XmlTypeAttribute>类，编译应用程序作为可执行文件或 DLL，并将传递到生成的文件[XML 架构定义工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)。</span><span class="sxs-lookup"><span data-stu-id="7b2d5-106">To see the results of setting the properties of the <xref:System.Xml.Serialization.XmlTypeAttribute> class, compile your application as an executable or DLL, and pass the resulting file to the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md).</span></span> <span data-ttu-id="7b2d5-107">该工具将架构，包括类型定义。</span><span class="sxs-lookup"><span data-stu-id="7b2d5-107">The tool writes the schema, including the type definition.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7b2d5-108">如果你设置<xref:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema%2A>属性`false`、 [XML 架构定义工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)不包括架构中的类型。</span><span class="sxs-lookup"><span data-stu-id="7b2d5-108">If you set the <xref:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema%2A> property to `false`, the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) does not include the type in the schema.</span></span> <span data-ttu-id="7b2d5-109">对于每个公共类，默认情况下生成 XSD 工具`complexType`和该类型的元素。</span><span class="sxs-lookup"><span data-stu-id="7b2d5-109">By default, for each public class, the XSD tool generates a `complexType` and an element of that type.</span></span>  
  
 <span data-ttu-id="7b2d5-110">有关使用属性的详细信息，请参阅[属性](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)。</span><span class="sxs-lookup"><span data-stu-id="7b2d5-110">For more information about using attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7b2d5-111">你可以使用 word`XmlType`中你的代码而不是较长<xref:System.Xml.Serialization.XmlTypeAttribute>。</span><span class="sxs-lookup"><span data-stu-id="7b2d5-111">You can use the word `XmlType` in your code instead of the longer <xref:System.Xml.Serialization.XmlTypeAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b2d5-112">下面的示例演示两个类到<xref:System.Xml.Serialization.XmlTypeAttribute>已应用。</span><span class="sxs-lookup"><span data-stu-id="7b2d5-112">The following example shows two classes to which the <xref:System.Xml.Serialization.XmlTypeAttribute> has been applied.</span></span>  
  
 [!code-cpp[Classic XmlTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTypeAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlText" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7b2d5-113">初始化 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b2d5-113">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTypeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTypeAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTypeAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7b2d5-114">初始化 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b2d5-114">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b2d5-115">下面的示例创建两个实例<xref:System.Xml.Serialization.XmlTypeAttribute>用于重写的两个类序列化的类。</span><span class="sxs-lookup"><span data-stu-id="7b2d5-115">The following example creates two instances of the <xref:System.Xml.Serialization.XmlTypeAttribute> class that are used to override the serialization of the two classes.</span></span>  
  
 [!code-cpp[XMLTypeAttribute1_2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLTypeAttribute1_2/CPP/xmltypeattribute1_2.cpp#2)]
 [!code-csharp[XMLTypeAttribute1_2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLTypeAttribute1_2/CS/xmltypeattribute1_2.cs#2)]
 [!code-vb[XMLTypeAttribute1_2#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLTypeAttribute1_2/VB/xmltypeattribute1_2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTypeAttribute (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTypeAttribute(System::String ^ typeName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="7b2d5-116">
            <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化类实例时生成（和在反序列化类实例时识别）的 XML 类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b2d5-116">The name of the XML type that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates when it serializes the class instance (and recognizes when it deserializes the class instance).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b2d5-117">初始化 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 类的新实例，并指定 XML 类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b2d5-117">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> class and specifies the name of the XML type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b2d5-118">应用<xref:System.Xml.Serialization.XmlTypeAttribute>于类，以指定的 XML 类型的命名空间、 XML 类型名称，以及是否要包含在 XML 架构文档中的类型。</span><span class="sxs-lookup"><span data-stu-id="7b2d5-118">Apply the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML schema document.</span></span> <span data-ttu-id="7b2d5-119">若要查看的属性设置结果<xref:System.Xml.Serialization.XmlTypeAttribute>类，编译应用程序作为可执行文件或 DLL，并将传递到生成的文件[XML 架构定义工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)。</span><span class="sxs-lookup"><span data-stu-id="7b2d5-119">To see the results of setting the properties of the <xref:System.Xml.Serialization.XmlTypeAttribute> class, compile your application as an executable or DLL, and pass the resulting file to the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md).</span></span> <span data-ttu-id="7b2d5-120">该工具将架构，包括类型定义。</span><span class="sxs-lookup"><span data-stu-id="7b2d5-120">The tool writes the schema, including the type definition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b2d5-121">下面的示例创建两个实例<xref:System.Xml.Serialization.XmlTypeAttribute>用于重写的两个类序列化的类。</span><span class="sxs-lookup"><span data-stu-id="7b2d5-121">The following example creates two instances of the <xref:System.Xml.Serialization.XmlTypeAttribute> class that are used to override the serialization of the two classes.</span></span>  
  
 [!code-cpp[XMLTypeAttribute1_2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLTypeAttribute1_2/CPP/xmltypeattribute1_2.cpp#2)]
 [!code-csharp[XMLTypeAttribute1_2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLTypeAttribute1_2/CS/xmltypeattribute1_2.cs#2)]
 [!code-vb[XMLTypeAttribute1_2#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLTypeAttribute1_2/VB/xmltypeattribute1_2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousType">
      <MemberSignature Language="C#" Value="public bool AnonymousType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AnonymousType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType" />
      <MemberSignature Language="VB.NET" Value="Public Property AnonymousType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AnonymousType { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7b2d5-122">获取或设置一个值，该值确定生成的构架类型是否为 XSD 匿名类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b2d5-122">Gets or sets a value that determines whether the resulting schema type is an XSD anonymous type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b2d5-123">如果结果架构类型为 XSD 匿名类型，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b2d5-123">
              <see langword="true" />, if the resulting schema type is an XSD anonymous type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeInSchema">
      <MemberSignature Language="C#" Value="public bool IncludeInSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeInSchema" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeInSchema As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeInSchema { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7b2d5-124">获取或设置一个值，该值指示是否要在 XML 架构文档中包含该类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b2d5-124">Gets or sets a value that indicates whether to include the type in XML schema documents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b2d5-125">若要将此类型包括到 XML 架构文档中，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b2d5-125">
              <see langword="true" /> to include the type in XML schema documents; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b2d5-126">应用<xref:System.Xml.Serialization.XmlTypeAttribute>于类，以指定的 XML 类型的命名空间、 XML 类型名称，以及是否要包含在 XML 架构文档中的类型。</span><span class="sxs-lookup"><span data-stu-id="7b2d5-126">Apply the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML schema document.</span></span> <span data-ttu-id="7b2d5-127">若要查看的属性设置结果<xref:System.Xml.Serialization.XmlTypeAttribute>类，编译应用程序作为可执行文件或 DLL，并将生成的文件传递到 XML 架构定义工具 (XSD.exe)。</span><span class="sxs-lookup"><span data-stu-id="7b2d5-127">To see the results of setting the properties of the <xref:System.Xml.Serialization.XmlTypeAttribute> class, compile your application as an executable or DLL, and pass the resulting file to the XML Schema Definition tool (XSD.exe).</span></span> <span data-ttu-id="7b2d5-128">该工具将架构，包括类型定义。</span><span class="sxs-lookup"><span data-stu-id="7b2d5-128">The tool writes the schema, including the type definition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b2d5-129">下面的示例应用<xref:System.Xml.Serialization.XmlTypeAttribute>到`ExtraneousInfo`类，设置<xref:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema%2A>属性`false`。</span><span class="sxs-lookup"><span data-stu-id="7b2d5-129">The following example applies the <xref:System.Xml.Serialization.XmlTypeAttribute> to the `ExtraneousInfo` class, setting the <xref:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema%2A> property to `false`.</span></span>  
  
 [!code-cpp[Classic XmlTypeAttribute.IncludeInSchema Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTypeAttribute.IncludeInSchema Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTypeAttribute.IncludeInSchema Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTypeAttribute.IncludeInSchema Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTypeAttribute.IncludeInSchema Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTypeAttribute.IncludeInSchema Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTypeAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7b2d5-130">获取或设置 XML 类型的命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b2d5-130">Gets or sets the namespace of the XML type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b2d5-131">XML 类型的命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b2d5-131">The namespace of the XML type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b2d5-132">下面的示例应用<xref:System.Xml.Serialization.XmlTypeAttribute>于类，同时设置<xref:System.Xml.Serialization.XmlTypeAttribute.Namespace%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7b2d5-132">The following example applies the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class while setting the <xref:System.Xml.Serialization.XmlTypeAttribute.Namespace%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlTypeAttribute.Namespace Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTypeAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTypeAttribute.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTypeAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTypeAttribute.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTypeAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTypeAttribute.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7b2d5-133">获取或设置 XML 类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b2d5-133">Gets or sets the name of the XML type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b2d5-134">XML 类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b2d5-134">The name of the XML type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b2d5-135">应用<xref:System.Xml.Serialization.XmlTypeAttribute>于类，以指定的 XML 类型的命名空间、 XML 类型名称，以及是否要包含在 XML 架构文档中的类型。</span><span class="sxs-lookup"><span data-stu-id="7b2d5-135">Apply the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML schema document.</span></span> <span data-ttu-id="7b2d5-136">若要查看的属性设置结果<xref:System.Xml.Serialization.XmlTypeAttribute>类，编译应用程序作为可执行文件或 DLL，并将传递到生成的文件[XML 架构定义工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)。</span><span class="sxs-lookup"><span data-stu-id="7b2d5-136">To see the results of setting the properties of the <xref:System.Xml.Serialization.XmlTypeAttribute> class, compile your application as an executable or DLL, and pass the resulting file to the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md).</span></span> <span data-ttu-id="7b2d5-137">该工具将架构，包括类型定义。</span><span class="sxs-lookup"><span data-stu-id="7b2d5-137">The tool writes the schema, including the type definition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b2d5-138">下面的示例应用<xref:System.Xml.Serialization.XmlTypeAttribute>到`Person`和`Job`类。</span><span class="sxs-lookup"><span data-stu-id="7b2d5-138">The following example applies the <xref:System.Xml.Serialization.XmlTypeAttribute> to the `Person` and `Job` classes.</span></span> <span data-ttu-id="7b2d5-139">如果你编译该类，并将生成可执行文件传递到 XML 架构定义工具，在输出部分中显示的架构。</span><span class="sxs-lookup"><span data-stu-id="7b2d5-139">If you compile the class and pass the resulting executable file to the XML Schema Definition tool, the schema is displayed in the Output section.</span></span>  
  
 [!code-cpp[Classic XmlTypeAttribute.TypeName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTypeAttribute.TypeName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTypeAttribute.TypeName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTypeAttribute.TypeName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTypeAttribute.TypeName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTypeAttribute.TypeName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>