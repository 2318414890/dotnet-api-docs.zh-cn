<Type Name="XmlSchemaProviderAttribute" FullName="System.Xml.Serialization.XmlSchemaProviderAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bcbb2f9000c9de59c439ec64c9f88f7f07e08dae" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlSchemaProviderAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlSchemaProviderAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlSchemaProviderAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlSchemaProviderAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaProviderAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6dff8-101">应用于某个类型时，存储返回 XML 架构的该类型静态方法的名称和控制该类型序列化的 <see cref="T:System.Xml.XmlQualifiedName" />（对于匿名类型，为 <see cref="T:System.Xml.Schema.XmlSchemaType" />）。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6dff8-101">When applied to a type, stores the name of a static method of the type that returns an XML schema and a <see cref="T:System.Xml.XmlQualifiedName" /> (or <see cref="T:System.Xml.Schema.XmlSchemaType" /> for anonymous types) that controls the serialization of the type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dff8-102">主要用途<xref:System.Xml.Serialization.XmlSchemaProviderAttribute>是能够进行<xref:System.Xml.Serialization.XmlSchemaExporter>类查询由 Web 服务描述语言工具 (WSDL.exe)，或者使用时返回架构**添加 Web 引用**功能[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="6dff8-102">The main purpose of the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> is to enable the <xref:System.Xml.Serialization.XmlSchemaExporter> class to return a schema when queried by the Web Services Description Language tool (WSDL.exe), or when using the **Add Web Reference** feature of [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)].</span></span> <span data-ttu-id="6dff8-103">你可以控制中的静态方法的类型的实际架构。</span><span class="sxs-lookup"><span data-stu-id="6dff8-103">You can control the actual schema for the type in the static method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6dff8-104">该属性的目标类必须实现<xref:System.Xml.Serialization.IXmlSerializable>接口。</span><span class="sxs-lookup"><span data-stu-id="6dff8-104">The target class of the attribute must implement the <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 <span data-ttu-id="6dff8-105"><xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A>属性返回通过反射的静态方法的名称。</span><span class="sxs-lookup"><span data-stu-id="6dff8-105">The <xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A> property returns the name of a static method through reflection.</span></span> <span data-ttu-id="6dff8-106">方法，必须实现，后者必须采用单个参数，<xref:System.Xml.Schema.XmlSchemaSet>对象，该方法使用的填充对象<xref:System.Xml.Schema.XmlSchema>对象。</span><span class="sxs-lookup"><span data-stu-id="6dff8-106">The method, which must be implemented, must take a single parameter, an <xref:System.Xml.Schema.XmlSchemaSet> object, which the method populates with an <xref:System.Xml.Schema.XmlSchema> object.</span></span> <span data-ttu-id="6dff8-107">该方法还必须返回<xref:System.Xml.XmlQualifiedName>标识的数据类型的对象。</span><span class="sxs-lookup"><span data-stu-id="6dff8-107">The method must also return an <xref:System.Xml.XmlQualifiedName> object that identifies the data type.</span></span>  
  
## <a name="returning-anonymous-types"></a><span data-ttu-id="6dff8-108">返回匿名类型</span><span class="sxs-lookup"><span data-stu-id="6dff8-108">Returning Anonymous Types</span></span>  
 <span data-ttu-id="6dff8-109">无法使用返回的方法来创建匿名的复杂类型<xref:System.Xml.XmlQualifiedName>。</span><span class="sxs-lookup"><span data-stu-id="6dff8-109">An anonymous complex type cannot be created using a method that returns <xref:System.Xml.XmlQualifiedName>.</span></span> <span data-ttu-id="6dff8-110">由于一个匿名类型有没有名称，并且不能将匿名类型添加到架构，必须为返回的匿名类型<xref:System.Xml.Schema.XmlSchemaType>。</span><span class="sxs-lookup"><span data-stu-id="6dff8-110">Because an anonymous type has no name, and you cannot add an anonymous type to a schema, the anonymous type must be returned as an <xref:System.Xml.Schema.XmlSchemaType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dff8-111">下面的示例应用<xref:System.Xml.Serialization.XmlSchemaProviderAttribute>与服务器端类。</span><span class="sxs-lookup"><span data-stu-id="6dff8-111">The following example applies the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> to a server-side class.</span></span> <span data-ttu-id="6dff8-112">调用时，该方法名为通过<xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A>属性创建架构。</span><span class="sxs-lookup"><span data-stu-id="6dff8-112">When invoked, the method named by the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A> property creates the schema.</span></span> <span data-ttu-id="6dff8-113">此简单实现读取磁盘关闭现有的架构。</span><span class="sxs-lookup"><span data-stu-id="6dff8-113">This simple implementation reads an existing schema off the disk.</span></span> <span data-ttu-id="6dff8-114">但是，你还可以创建自定义架构，如果有必要，使用类型在中找到<xref:System.Xml.Schema>命名空间。</span><span class="sxs-lookup"><span data-stu-id="6dff8-114">However, you can also create a custom schema, if necessary, using the types found in the <xref:System.Xml.Schema> namespace.</span></span>  
  
 [!code-csharp[HowToChunkSerializedData#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HowToChunkSerializedData/CS/SerializationChunk.cs#2)]
 [!code-vb[HowToChunkSerializedData#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HowToChunkSerializedData/VB/SerializationChunk.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Schema.XmlSchema" />
    <altmember cref="T:System.Xml.Schema.XmlSchemaSet" />
    <altmember cref="T:System.Xml.Serialization.XmlReflectionImporter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaProviderAttribute (string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (methodName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaProviderAttribute(System::String ^ methodName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName">
          <span data-ttu-id="6dff8-115">必须实现的静态方法的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dff8-115">The name of the static method that must be implemented.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dff8-116">初始化 <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> 类的新实例，需要一个静态方法的名称，该方法提供了该类型的 XML 架构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dff8-116">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> class, taking the name of the static method that supplies the type's XML schema.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAny">
      <MemberSignature Language="C#" Value="public bool IsAny { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAny" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAny As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAny { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dff8-117">获取或设置一个值，该值确定目标类是否为通配符，或者此类架构是否只包含 <see langword="xs:any" /> 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dff8-117">Gets or sets a value that determines whether the target class is a wildcard, or that the schema for the class has contains only an <see langword="xs:any" /> element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dff8-118">如果该类是通配符，或者该架构仅包含 <see langword="true" /> 元素，则为 <see langword="xs:any" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dff8-118">
              <see langword="true" />, if the class is a wildcard, or if the schema contains only the <see langword="xs:any" /> element; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dff8-119">该属性的目标类可以是任何类。</span><span class="sxs-lookup"><span data-stu-id="6dff8-119">The target class of the attribute can be any class.</span></span> <span data-ttu-id="6dff8-120">这可以通过以下方式来实现：</span><span class="sxs-lookup"><span data-stu-id="6dff8-120">This can be achieved in the following ways:</span></span>  
  
-   <span data-ttu-id="6dff8-121">由该特性命名的方法可以返回`null`。</span><span class="sxs-lookup"><span data-stu-id="6dff8-121">The method named by the attribute can return `null`.</span></span>  
  
-   <span data-ttu-id="6dff8-122">设置此属性的值`true`以防止方法被调用。</span><span class="sxs-lookup"><span data-stu-id="6dff8-122">Set the value of this property to `true` to prevent the method from being called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public string MethodName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MethodName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dff8-123">获取静态方法的名称，该方法提供类型的 XML 架构和类型的 XML 架构数据类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dff8-123">Gets the name of the static method that supplies the type's XML schema and the name of its XML Schema data type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dff8-124">该方法的名称，XML 基础结构调用该方法以返回 XML 架构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dff8-124">The name of the method that is invoked by the XML infrastructure to return an XML schema.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>