<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlSchemaProviderAttribute.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d63614a-fd48-4a83-9dc4-ea1e401b6c15f70b55224ea951413663e9f0344547153b444cf5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f70b55224ea951413663e9f0344547153b444cf5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b4804968da1dfdf71c501075a5b66957b54f2e8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/27/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
          <source>When applied to a type, stores the name of a static method of the type that returns an XML schema and a <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> (or <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph> for anonymous types) that controls the serialization of the type.</source>
          <target state="translated">应用于某个类型时，存储返回 XML 架构的该类型静态方法的名称和控制该类型序列化的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph>（对于匿名类型，为 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
          <source>The main purpose of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSchemaProviderAttribute&gt;</ph> is to enable the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSchemaExporter&gt;</ph> class to return a schema when queried by the Web Services Description Language tool (WSDL.exe), or when using the <bpt id="p1">**</bpt>Add Web Reference<ept id="p1">**</ept> feature of Visual Studio.</source>
          <target state="translated">主要用途<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSchemaProviderAttribute&gt;</ph>是能够进行<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSchemaExporter&gt;</ph>类查询由 Web 服务描述语言工具 (WSDL.exe)，或者使用时返回架构<bpt id="p1">**</bpt>添加 Web 引用<ept id="p1">**</ept>Visual Studio 功能。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
          <source>You can control the actual schema for the type in the static method.</source>
          <target state="translated">你可以控制中的静态方法的类型的实际架构。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
          <source>The target class of the attribute must implement the <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface.</source>
          <target state="translated">该属性的目标类必须实现<ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A&gt;</ph> property returns the name of a static method through reflection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A&gt;</ph>属性返回通过反射的静态方法的名称。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
          <source>The method, which must be implemented, must take a single parameter, an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object, which the method populates with an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> object.</source>
          <target state="translated">方法，必须实现，后者必须采用单个参数，<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>对象，该方法使用的填充对象<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
          <source>The method must also return an <ph id="ph1">&lt;xref:System.Xml.XmlQualifiedName&gt;</ph> object that identifies the data type.</source>
          <target state="translated">该方法还必须返回<ph id="ph1">&lt;xref:System.Xml.XmlQualifiedName&gt;</ph>标识的数据类型的对象。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
          <source>Returning Anonymous Types</source>
          <target state="translated">返回匿名类型</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
          <source>An anonymous complex type cannot be created using a method that returns <ph id="ph1">&lt;xref:System.Xml.XmlQualifiedName&gt;</ph>.</source>
          <target state="translated">无法使用返回的方法来创建匿名的复杂类型<ph id="ph1">&lt;xref:System.Xml.XmlQualifiedName&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
          <source>Because an anonymous type has no name, and you cannot add an anonymous type to a schema, the anonymous type must be returned as an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaType&gt;</ph>.</source>
          <target state="translated">由于一个匿名类型有没有名称，并且不能将匿名类型添加到架构，必须为返回的匿名类型<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
          <source>The following example applies the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSchemaProviderAttribute&gt;</ph> to a server-side class.</source>
          <target state="translated">下面的示例应用<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSchemaProviderAttribute&gt;</ph>与服务器端类。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
          <source>When invoked, the method named by the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A&gt;</ph> property creates the schema.</source>
          <target state="translated">调用时，该方法名为通过<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A&gt;</ph>属性创建架构。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
          <source>This simple implementation reads an existing schema off the disk.</source>
          <target state="translated">此简单实现读取磁盘关闭现有的架构。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
          <source>However, you can also create a custom schema, if necessary, using the types found in the <ph id="ph1">&lt;xref:System.Xml.Schema&gt;</ph> namespace.</source>
          <target state="translated">但是，你还可以创建自定义架构，如果有必要，使用类型在中找到<ph id="ph1">&lt;xref:System.Xml.Schema&gt;</ph>命名空间。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)">
          <source>The name of the static method that must be implemented.</source>
          <target state="translated">必须实现的静态方法的名称。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /&gt;</ph> class, taking the name of the static method that supplies the type's XML schema.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /&gt;</ph> 类的新实例，需要一个静态方法的名称，该方法提供了该类型的 XML 架构。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny">
          <source>Gets or sets a value that determines whether the target class is a wildcard, or that the schema for the class has contains only an <ph id="ph1">&lt;see langword="xs:any" /&gt;</ph> element.</source>
          <target state="translated">获取或设置一个值，该值确定目标类是否为通配符，或者此类架构是否只包含 <ph id="ph1">&lt;see langword="xs:any" /&gt;</ph> 元素。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if the class is a wildcard, or if the schema contains only the <ph id="ph2">&lt;see langword="xs:any" /&gt;</ph> element; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果该类是通配符，或者该架构仅包含 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 元素，则为 <ph id="ph2">&lt;see langword="xs:any" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny">
          <source>The target class of the attribute can be any class.</source>
          <target state="translated">该属性的目标类可以是任何类。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny">
          <source>This can be achieved in the following ways:</source>
          <target state="translated">这可以通过以下方式来实现：</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny">
          <source>The method named by the attribute can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">由该特性命名的方法可以返回<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny">
          <source>Set the value of this property to <ph id="ph1">`true`</ph> to prevent the method from being called.</source>
          <target state="translated">设置此属性的值<ph id="ph1">`true`</ph>以防止方法被调用。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName">
          <source>Gets the name of the static method that supplies the type's XML schema and the name of its XML Schema data type.</source>
          <target state="translated">获取静态方法的名称，该方法提供类型的 XML 架构和类型的 XML 架构数据类型的名称。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName">
          <source>The name of the method that is invoked by the XML infrastructure to return an XML schema.</source>
          <target state="translated">该方法的名称，XML 基础结构调用该方法以返回 XML 架构。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>