<Type Name="XmlSchemaExporter" FullName="System.Xml.Serialization.XmlSchemaExporter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ab3e21b4ee46efbe1685a10de9f89dc7c7155975" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39900362" /></Metadata><TypeSignature Language="C#" Value="public class XmlSchemaExporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSchemaExporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlSchemaExporter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSchemaExporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaExporter" />
  <TypeSignature Language="F#" Value="type XmlSchemaExporter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>使用类型映射对象中的 XML 架构元素声明填充 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlSchemaExporter>类提供的编程表示形式的 XML 架构定义语言 (XSD) 文档。 而不是使用<xref:System.Xml.Serialization.XmlSchemaExporter>直接使用<xref:System.Web.Services.Description.ServiceDescriptionReflector>类或[XML 架构定义工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)。  
  
 <xref:System.Web.Services.Description.ServiceDescriptionReflector>类创建<xref:System.Web.Services.Description.ServiceDescription>中标识为 Web 服务的类的对象。 它使用<xref:System.Xml.Serialization.XmlSchemaExporter>类时指定的 Web 服务类：  
  
-   使用文本，表示 SOAP 消息的参数和返回值 （或请求和响应文档） 的内容按字面意思指定使用 XML 架构定义。  
  
-   非 SOAP 的 Web 服务使用 HTTP GET 和 HTTP POST 操作的实现。  
  
 Xsd.exe 从在运行时程序集文件中使用的一个或多个类型生成 XML 架构文档<xref:System.Xml.Serialization.XmlSchemaExporter>类和反射。  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Xml.Serialization.XmlSchemas" />
    <altmember cref="T:System.Xml.Schema.XmlSchema" />
    <altmember cref="T:System.Xml.Serialization.SoapSchemaExporter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaExporter (System.Xml.Serialization.XmlSchemas schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlSchemas schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemas As XmlSchemas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaExporter(System::Xml::Serialization::XmlSchemas ^ schemas);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSchemaExporter : System.Xml.Serialization.XmlSchemas -&gt; System.Xml.Serialization.XmlSchemaExporter" Usage="new System.Xml.Serialization.XmlSchemaExporter schemas" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Serialization.XmlSchemas" />
      </Parameters>
      <Docs>
        <param name="schemas"><see cref="T:System.Xml.Schema.XmlSchema" /> 对象的集合，其中将添加从类型映射获取的元素声明。</param>
        <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSchemaExporter" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlSchemaExporter>类提供的集合<xref:System.Xml.Schema.XmlSchema>到的 XML 架构元素声明是要添加的对象。 不需要创建的实例<xref:System.Xml.Serialization.XmlSchemaExporter>直接类。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="ExportAnyType">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将对象或类型的元素声明添加到 SOAP 消息或 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExportAnyType">
      <MemberSignature Language="C#" Value="public string ExportAnyType (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ExportAnyType(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportAnyType (ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ExportAnyType(System::String ^ ns);" />
      <MemberSignature Language="F#" Value="member this.ExportAnyType : string -&gt; string" Usage="xmlSchemaExporter.ExportAnyType ns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns">向 XML 架构文档的命名空间添加 **&lt;any&gt;** 元素。</param>
        <summary>将 **&lt;any&gt;** 元素导出到由指定命名空间标识的 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</summary>
        <returns>向 **&lt;any&gt;** 元素声明分配任意名称。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不需要直接调用该方法。  
  
 <xref:System.Web.Services.Description.ServiceDescriptionReflector>创建<xref:System.Web.Services.Description.ServiceDescription>中标识为 Web 服务的类的对象。  
  
 字段或属性的类型<xref:System.Xml.XmlElement>，使用特性<xref:System.Xml.Serialization.XmlAnyElementAttribute>，转换成**\<任何 >** 元素。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExportAnyType">
      <MemberSignature Language="C#" Value="public string ExportAnyType (System.Xml.Serialization.XmlMembersMapping members);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ExportAnyType(class System.Xml.Serialization.XmlMembersMapping members) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.Xml.Serialization.XmlMembersMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportAnyType (members As XmlMembersMapping) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ExportAnyType(System::Xml::Serialization::XmlMembersMapping ^ members);" />
      <MemberSignature Language="F#" Value="member this.ExportAnyType : System.Xml.Serialization.XmlMembersMapping -&gt; string" Usage="xmlSchemaExporter.ExportAnyType members" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="members" Type="System.Xml.Serialization.XmlMembersMapping" />
      </Parameters>
      <Docs>
        <param name="members">包含要导出的映射的 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</param>
        <summary>将对象或类型的元素声明添加到 SOAP 消息或 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</summary>
        <returns>追加有一个整数的字符串“any”。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="ExportMembersMapping">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>向文本 SOAP 消息定义中每一个元素部分的适用 <see cref="T:System.Xml.Schema.XmlSchema" /> 添加一个元素声明。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExportMembersMapping">
      <MemberSignature Language="C#" Value="public void ExportMembersMapping (System.Xml.Serialization.XmlMembersMapping xmlMembersMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportMembersMapping(class System.Xml.Serialization.XmlMembersMapping xmlMembersMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportMembersMapping(System::Xml::Serialization::XmlMembersMapping ^ xmlMembersMapping);" />
      <MemberSignature Language="F#" Value="member this.ExportMembersMapping : System.Xml.Serialization.XmlMembersMapping -&gt; unit" Usage="xmlSchemaExporter.ExportMembersMapping xmlMembersMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlMembersMapping" Type="System.Xml.Serialization.XmlMembersMapping" />
      </Parameters>
      <Docs>
        <param name="xmlMembersMapping">Web 服务描述语言 (WSDL) 消息定义中元素部分的内部 .NET Framework 类型映射。</param>
        <summary>向文本 SOAP 消息定义中每一个元素部分的适用 <see cref="T:System.Xml.Schema.XmlSchema" /> 添加一个元素声明。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对于每个 SOAP 消息部分，<xref:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping%2A>方法添加到一个 XML 架构元素声明<xref:System.Xml.Schema.XmlSchema>过程中使用相同的命名空间。 文本消息定义通常包含单个部分。  
  
 请改用 <xref:System.Web.Services.Description.ServiceDescriptionReflector> 类。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExportMembersMapping">
      <MemberSignature Language="C#" Value="public void ExportMembersMapping (System.Xml.Serialization.XmlMembersMapping xmlMembersMapping, bool exportEnclosingType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportMembersMapping(class System.Xml.Serialization.XmlMembersMapping xmlMembersMapping, bool exportEnclosingType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportMembersMapping(System::Xml::Serialization::XmlMembersMapping ^ xmlMembersMapping, bool exportEnclosingType);" />
      <MemberSignature Language="F#" Value="member this.ExportMembersMapping : System.Xml.Serialization.XmlMembersMapping * bool -&gt; unit" Usage="xmlSchemaExporter.ExportMembersMapping (xmlMembersMapping, exportEnclosingType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlMembersMapping" Type="System.Xml.Serialization.XmlMembersMapping" />
        <Parameter Name="exportEnclosingType" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="xmlMembersMapping">.NET Framework 类型和 XML 架构元素之间的内部映射。</param>
        <param name="exportEnclosingType">如果包含封闭架构的架构元素，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>向文本 SOAP 消息定义中每一个元素部分的适用 <see cref="T:System.Xml.Schema.XmlSchema" /> 添加一个元素声明，并指定是否包含封闭元素。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="ExportTypeMapping">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将对象或类型的元素声明添加到 SOAP 消息或 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.XmlQualifiedName ExportTypeMapping (System.Xml.Serialization.XmlMembersMapping xmlMembersMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlQualifiedName ExportTypeMapping(class System.Xml.Serialization.XmlMembersMapping xmlMembersMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlQualifiedName ^ ExportTypeMapping(System::Xml::Serialization::XmlMembersMapping ^ xmlMembersMapping);" />
      <MemberSignature Language="F#" Value="member this.ExportTypeMapping : System.Xml.Serialization.XmlMembersMapping -&gt; System.Xml.XmlQualifiedName" Usage="xmlSchemaExporter.ExportTypeMapping xmlMembersMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlMembersMapping" Type="System.Xml.Serialization.XmlMembersMapping" />
      </Parameters>
      <Docs>
        <param name="xmlMembersMapping">Web 服务描述语言 (WSDL) 消息定义中元素部分的内部 .NET Framework 类型映射。</param>
        <summary>向文本 SOAP 消息定义中单个元素部分的适用 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象添加一个元素声明。</summary>
        <returns><see cref="T:System.Xml.XmlQualifiedName" />，表示导出的元素声明的限定 XML 名称。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此重载添加到一个 XML 架构元素声明<xref:System.Xml.Schema.XmlSchema>与 SOAP 消息部分使用相同的命名空间。 文本消息定义必须包含单个部分。  
  
 请改用 <xref:System.Web.Services.Description.ServiceDescriptionReflector> 类。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExportTypeMapping">
      <MemberSignature Language="C#" Value="public void ExportTypeMapping (System.Xml.Serialization.XmlTypeMapping xmlTypeMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportTypeMapping(class System.Xml.Serialization.XmlTypeMapping xmlTypeMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportTypeMapping(System::Xml::Serialization::XmlTypeMapping ^ xmlTypeMapping);" />
      <MemberSignature Language="F#" Value="member this.ExportTypeMapping : System.Xml.Serialization.XmlTypeMapping -&gt; unit" Usage="xmlSchemaExporter.ExportTypeMapping xmlTypeMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlTypeMapping" Type="System.Xml.Serialization.XmlTypeMapping" />
      </Parameters>
      <Docs>
        <param name="xmlTypeMapping">.NET Framework 类型和 XML 架构元素之间的内部映射。</param>
        <summary>将 .NET Framework 类型的元素声明添加到适用 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>