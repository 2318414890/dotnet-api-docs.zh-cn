<Type Name="XmlAttributeAttribute" FullName="System.Xml.Serialization.XmlAttributeAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dd175e9271a6c14ab684fccef212eb3d4e83034b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720381" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlAttributeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAttributeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAttributeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAttributeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAttributeAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="7769a-101">指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 必须将类成员序列化为 XML 属性。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7769a-101">Specifies that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize the class member as an XML attribute.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7769a-102"><xref:System.Xml.Serialization.XmlAttributeAttribute>属于一系列属性，用于控制如何<xref:System.Xml.Serialization.XmlSerializer>序列化或反序列化对象。</span><span class="sxs-lookup"><span data-stu-id="7769a-102">The <xref:System.Xml.Serialization.XmlAttributeAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes, or deserializes, an object.</span></span> <span data-ttu-id="7769a-103">类似的属性的完整列表，请参阅[属性，控制 XML 序列化](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="7769a-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="7769a-104">当应用于一个公共字段或属性，<xref:System.Xml.Serialization.XmlAttributeAttribute>通知<xref:System.Xml.Serialization.XmlSerializer>要序列化 XML 特性的成员。</span><span class="sxs-lookup"><span data-stu-id="7769a-104">When applied to a public field or property, the <xref:System.Xml.Serialization.XmlAttributeAttribute> informs the <xref:System.Xml.Serialization.XmlSerializer> to serialize the member as an XML attribute.</span></span> <span data-ttu-id="7769a-105">默认情况下，<xref:System.Xml.Serialization.XmlSerializer>序列化公共字段和作为 XML 元素的属性。</span><span class="sxs-lookup"><span data-stu-id="7769a-105">By default, the <xref:System.Xml.Serialization.XmlSerializer> serializes public fields and properties as XML elements.</span></span>  
  
 <span data-ttu-id="7769a-106">你可以分配<xref:System.Xml.Serialization.XmlAttributeAttribute>仅为公共的字段或公共属性的返回值 （或值的数组） 可以映射到一个 XML 架构定义语言 (XSD) 的简单类型 (包括所有的内置数据类型派生自 XSD `anySimpleType`类型)。</span><span class="sxs-lookup"><span data-stu-id="7769a-106">You can assign the <xref:System.Xml.Serialization.XmlAttributeAttribute> only to public fields or public properties that return a value (or array of values) that can be mapped to one of the XML Schema definition language (XSD) simple types (including all built-in datatypes derived from the XSD `anySimpleType` type).</span></span> <span data-ttu-id="7769a-107">可能的类型包括任何可映射到 XSD 简单类型，包括<xref:System.Guid>， <xref:System.Char>，和枚举。</span><span class="sxs-lookup"><span data-stu-id="7769a-107">The possible types include any that can be mapped to the XSD simple types, including <xref:System.Guid>, <xref:System.Char>, and enumerations.</span></span> <span data-ttu-id="7769a-108">请参阅<xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A>属性列表的 XSD 类型以及它们如何映射到.net 数据类型。</span><span class="sxs-lookup"><span data-stu-id="7769a-108">See the <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> property for a list of XSD types and how they are mapped to.NET data types.</span></span>  
  
 <span data-ttu-id="7769a-109">有两种特殊的属性进行设置的<xref:System.Xml.Serialization.XmlAttributeAttribute>: `xml:lang` （指定语言） 和`xml:space`（指定如何处理空白区域） 属性。</span><span class="sxs-lookup"><span data-stu-id="7769a-109">There are two special attributes that can be set with the <xref:System.Xml.Serialization.XmlAttributeAttribute> : the `xml:lang` (specifies language) and `xml:space` (specifies how to handle white space) attributes.</span></span> <span data-ttu-id="7769a-110">这些特性用于传达只与应用程序处理的 XML 相关的信息。</span><span class="sxs-lookup"><span data-stu-id="7769a-110">These attributes are intended to convey information that is relevant only to an application processing the XML.</span></span> <span data-ttu-id="7769a-111">在下面的代码显示了这些设置的示例。</span><span class="sxs-lookup"><span data-stu-id="7769a-111">Examples of setting these are shown in the following code.</span></span>  
  
```csharp  
[XmlAttribute("xml:lang")]  
 public string Lang;  
 // Set this to 'default' or 'preserve'.  
 [XmlAttribute("space",   
 Namespace = "http://www.w3.org/XML/1998/namespace")]  
 public string Space 
 ```

 ```vb 
 <XmlAttribute("xml:lang")> _  
 Public Lang As String   
 ' Set this to 'default' or 'preserve'.  
 <XmlAttribute("space", _  
 Namespace:= "http://www.w3.org/XML/1998/namespace")> _  
 Public Space As String  
```  
  
 <span data-ttu-id="7769a-112">有关使用属性的详细信息，请参阅[属性](~/docs/standard/attributes/index.md)。</span><span class="sxs-lookup"><span data-stu-id="7769a-112">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7769a-113">你可以使用 word`XmlAttribute`中你的代码而不是较长<xref:System.Xml.Serialization.XmlAttributeAttribute>。</span><span class="sxs-lookup"><span data-stu-id="7769a-113">You can use the word `XmlAttribute` in your code instead of the longer <xref:System.Xml.Serialization.XmlAttributeAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7769a-114">下面的示例序列化类，其中包含几个字段到<xref:System.Xml.Serialization.XmlAttributeAttribute>应用。</span><span class="sxs-lookup"><span data-stu-id="7769a-114">The following example serializes a class that contains several fields to which the <xref:System.Xml.Serialization.XmlAttributeAttribute> is applied.</span></span>  
  
 [!code-cpp[Classic XmlAttributeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7769a-115">初始化 <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7769a-115">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributeAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7769a-116">初始化 <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7769a-116">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[XMLAttributeAttribute_ctr1_2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/CPP/xmlAttributeAttribute_ctr1_2.cpp#1)]
 [!code-csharp[XMLAttributeAttribute_ctr1_2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/CS/xmlattributeattribute_ctr1_2.cs#1)]
 [!code-vb[XMLAttributeAttribute_ctr1_2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/VB/xmlattributeattribute_ctr1_2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributeAttribute (string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attributeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributeAttribute(System::String ^ attributeName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeName">
          <span data-ttu-id="7769a-117">
            <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的 XML 特性的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7769a-117">The name of the XML attribute that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7769a-118">初始化 <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> 类的新实例，并指定生成的 XML 属性的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7769a-118">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class and specifies the name of the generated XML attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[XMLAttributeAttribute_ctr1_2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/CPP/xmlAttributeAttribute_ctr1_2.cpp#2)]
 [!code-csharp[XMLAttributeAttribute_ctr1_2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/CS/xmlattributeattribute_ctr1_2.cs#2)]
 [!code-vb[XMLAttributeAttribute_ctr1_2#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/VB/xmlattributeattribute_ctr1_2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributeAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributeAttribute(Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="7769a-119">用来存储特性的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7769a-119">The <see cref="T:System.Type" /> used to store the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7769a-120">初始化 <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7769a-120">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributeAttribute (string attributeName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attributeName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributeAttribute(System::String ^ attributeName, Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="attributeName">
          <span data-ttu-id="7769a-121">生成的 XML 特性的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7769a-121">The name of the XML attribute that is generated.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="7769a-122">用来存储特性的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7769a-122">The <see cref="T:System.Type" /> used to store the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7769a-123">初始化 <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7769a-123">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeName">
      <MemberSignature Language="C#" Value="public string AttributeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AttributeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName" />
      <MemberSignature Language="VB.NET" Value="Public Property AttributeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AttributeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7769a-124">获取或设置 XML 属性的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7769a-124">Gets or sets the name of the XML attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7769a-125">XML 属性的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7769a-125">The name of the XML attribute.</span>
          </span>
          <span data-ttu-id="7769a-126">默认值为成员名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7769a-126">The default is the member name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7769a-127">使用<xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A>属性指定的 XML 属性名称时无法使用默认值。</span><span class="sxs-lookup"><span data-stu-id="7769a-127">Use the <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A> property to specify an XML attribute name when the default value cannot be used.</span></span> <span data-ttu-id="7769a-128">例如，如果 XML 属性名称作为成员标识符无效，您可以使用标识符，而设置的有效名称<xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A>为无效名称。</span><span class="sxs-lookup"><span data-stu-id="7769a-128">For example, if the XML attribute name is invalid as a member identifier, you can use a valid name for the identifier while setting the <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A> to an invalid name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7769a-129">下面的示例设置<xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A>属性<xref:System.Xml.Serialization.XmlAttributeAttribute>。</span><span class="sxs-lookup"><span data-stu-id="7769a-129">The following example sets the <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A> property of an <xref:System.Xml.Serialization.XmlAttributeAttribute>.</span></span>  
  
 [!code-cpp[Classic XmlAttributeAttribute.AttributeName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.AttributeName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute.AttributeName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.AttributeName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute.AttributeName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute.AttributeName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlElementAttribute.ElementName" />
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7769a-130">获取或设置 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的 XML 属性的 XSD 数据类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7769a-130">Gets or sets the XSD data type of the XML attribute generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7769a-131">一种 XSD（XML 架构文档）数据类型，由名为“XML Schema: DataTypes”（XML 架构：数据类型）的万维网联合会 (www.w3.org) 文档定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7769a-131">An XSD (XML Schema Document) data type, as defined by the World Wide Web Consortium (www.w3.org) document named "XML Schema: DataTypes".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7769a-132">下表列出了 XSD 简单数据类型及其.net 等效项。</span><span class="sxs-lookup"><span data-stu-id="7769a-132">The following table lists the XSD simple data types with their.NET equivalents.</span></span>  
  
 <span data-ttu-id="7769a-133">Xsd`base64Binary`和`hexBinary`数据类型使用的数组<xref:System.Byte>结构，并应用<xref:System.Xml.Serialization.XmlArrayItemAttribute>与<xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A>属性设置为"base64Binary"或"hexBinary"根据需要。</span><span class="sxs-lookup"><span data-stu-id="7769a-133">For the XSD `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> structures, and apply a <xref:System.Xml.Serialization.XmlArrayItemAttribute> with the <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> property set to "base64Binary" or "hexBinary", as appropriate.</span></span> <span data-ttu-id="7769a-134">Xsd`time`和`date`数据类型，使用<xref:System.DateTime>键入并应用<xref:System.Xml.Serialization.XmlAttributeAttribute>与<xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A>设置为"日期"或"时间"。</span><span class="sxs-lookup"><span data-stu-id="7769a-134">For the XSD `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.XmlAttributeAttribute> with the <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> set to "date" or "time".</span></span>  
  
 <span data-ttu-id="7769a-135">对于每种 XSD 类型，映射到一个字符串，将应用于<xref:System.Xml.Serialization.XmlAttributeAttribute>与其<xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A>属性设置为 XSD 类型。</span><span class="sxs-lookup"><span data-stu-id="7769a-135">For every XSD type that is mapped to a string, apply the <xref:System.Xml.Serialization.XmlAttributeAttribute> with its <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> property set to the XSD type.</span></span> <span data-ttu-id="7769a-136">但是，这不会更改的序列化格式，仅该成员的架构。</span><span class="sxs-lookup"><span data-stu-id="7769a-136">However, this does not change the serialization format, only the schema for the member.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7769a-137">属性是区分大小写，，因此你必须将其设置完全为 XSD 数据类型之一。</span><span class="sxs-lookup"><span data-stu-id="7769a-137">The property is case-sensitive, so you must set it exactly to one of the XSD data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7769a-138">将二进制数据作为 XML 传递元素会更加高效比将其传递 XML 特性。</span><span class="sxs-lookup"><span data-stu-id="7769a-138">Passing binary data as an XML element is more efficient than passing it as an XML attribute.</span></span>  
  
 <span data-ttu-id="7769a-139">有关 XML 数据类型的详细信息，请参阅名为"XML 架构第 2： 数据类型"World Wide Web 联合会 (www.w3.org) 文档。</span><span class="sxs-lookup"><span data-stu-id="7769a-139">For more information about XML data types, see the World Wide Web Consortium (www.w3.org) document named "XML Schema Part 2: Datatypes".</span></span>  
  
|<span data-ttu-id="7769a-140">XSD 数据类型</span><span class="sxs-lookup"><span data-stu-id="7769a-140">XSD data type</span></span>|<span data-ttu-id="7769a-141">.NET 数据类型</span><span class="sxs-lookup"><span data-stu-id="7769a-141">.NET data type</span></span>|  
|-------------------|--------------------|  
|<span data-ttu-id="7769a-142">anyURI</span><span class="sxs-lookup"><span data-stu-id="7769a-142">anyURI</span></span>|<xref:System.String>|  
|<span data-ttu-id="7769a-143">base64Binary</span><span class="sxs-lookup"><span data-stu-id="7769a-143">base64Binary</span></span>|<span data-ttu-id="7769a-144">数组<xref:System.Byte>对象</span><span class="sxs-lookup"><span data-stu-id="7769a-144">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="7769a-145">boolean</span><span class="sxs-lookup"><span data-stu-id="7769a-145">boolean</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="7769a-146">byte</span><span class="sxs-lookup"><span data-stu-id="7769a-146">byte</span></span>|<xref:System.SByte>|  
|<span data-ttu-id="7769a-147">date</span><span class="sxs-lookup"><span data-stu-id="7769a-147">date</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="7769a-148">dateTime</span><span class="sxs-lookup"><span data-stu-id="7769a-148">dateTime</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="7769a-149">decimal</span><span class="sxs-lookup"><span data-stu-id="7769a-149">decimal</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="7769a-150">double</span><span class="sxs-lookup"><span data-stu-id="7769a-150">double</span></span>|<xref:System.Double>|  
|<span data-ttu-id="7769a-151">ENTITY</span><span class="sxs-lookup"><span data-stu-id="7769a-151">ENTITY</span></span>|<xref:System.String>|  
|<span data-ttu-id="7769a-152">实体</span><span class="sxs-lookup"><span data-stu-id="7769a-152">ENTITIES</span></span>|<xref:System.String>|  
|<span data-ttu-id="7769a-153">float</span><span class="sxs-lookup"><span data-stu-id="7769a-153">float</span></span>|<xref:System.Single>|  
|<span data-ttu-id="7769a-154">gDay</span><span class="sxs-lookup"><span data-stu-id="7769a-154">gDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="7769a-155">gMonth</span><span class="sxs-lookup"><span data-stu-id="7769a-155">gMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="7769a-156">gMonthDay</span><span class="sxs-lookup"><span data-stu-id="7769a-156">gMonthDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="7769a-157">gYear</span><span class="sxs-lookup"><span data-stu-id="7769a-157">gYear</span></span>|<xref:System.String>|  
|<span data-ttu-id="7769a-158">gYearMonth</span><span class="sxs-lookup"><span data-stu-id="7769a-158">gYearMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="7769a-159">hexBinary</span><span class="sxs-lookup"><span data-stu-id="7769a-159">hexBinary</span></span>|<span data-ttu-id="7769a-160">数组<xref:System.Byte>对象</span><span class="sxs-lookup"><span data-stu-id="7769a-160">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="7769a-161">Id</span><span class="sxs-lookup"><span data-stu-id="7769a-161">ID</span></span>|<xref:System.String>|  
|<span data-ttu-id="7769a-162">IDREF</span><span class="sxs-lookup"><span data-stu-id="7769a-162">IDREF</span></span>|<xref:System.String>|  
|<span data-ttu-id="7769a-163">IDREFS</span><span class="sxs-lookup"><span data-stu-id="7769a-163">IDREFS</span></span>|<xref:System.String>|  
|<span data-ttu-id="7769a-164">int</span><span class="sxs-lookup"><span data-stu-id="7769a-164">int</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="7769a-165">整数</span><span class="sxs-lookup"><span data-stu-id="7769a-165">integer</span></span>|<xref:System.String>|  
|<span data-ttu-id="7769a-166">语言</span><span class="sxs-lookup"><span data-stu-id="7769a-166">language</span></span>|<xref:System.String>|  
|<span data-ttu-id="7769a-167">long</span><span class="sxs-lookup"><span data-stu-id="7769a-167">long</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="7769a-168">name</span><span class="sxs-lookup"><span data-stu-id="7769a-168">Name</span></span>|<xref:System.String>|  
|<span data-ttu-id="7769a-169">NCName</span><span class="sxs-lookup"><span data-stu-id="7769a-169">NCName</span></span>|<xref:System.String>|  
|<span data-ttu-id="7769a-170">negativeInteger</span><span class="sxs-lookup"><span data-stu-id="7769a-170">negativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="7769a-171">NMTOKEN</span><span class="sxs-lookup"><span data-stu-id="7769a-171">NMTOKEN</span></span>|<xref:System.String>|  
|<span data-ttu-id="7769a-172">NMTOKENS</span><span class="sxs-lookup"><span data-stu-id="7769a-172">NMTOKENS</span></span>|<xref:System.String>|  
|<span data-ttu-id="7769a-173">normalizedString</span><span class="sxs-lookup"><span data-stu-id="7769a-173">normalizedString</span></span>|<xref:System.String>|  
|<span data-ttu-id="7769a-174">nonNegativeInteger</span><span class="sxs-lookup"><span data-stu-id="7769a-174">nonNegativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="7769a-175">nonPositiveInteger</span><span class="sxs-lookup"><span data-stu-id="7769a-175">nonPositiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="7769a-176">NOTATION</span><span class="sxs-lookup"><span data-stu-id="7769a-176">NOTATION</span></span>|<xref:System.String>|  
|<span data-ttu-id="7769a-177">positiveInteger</span><span class="sxs-lookup"><span data-stu-id="7769a-177">positiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="7769a-178">QName</span><span class="sxs-lookup"><span data-stu-id="7769a-178">QName</span></span>|<xref:System.Xml.XmlQualifiedName>|  
|<span data-ttu-id="7769a-179">持续时间</span><span class="sxs-lookup"><span data-stu-id="7769a-179">duration</span></span>|<xref:System.String>|  
|<span data-ttu-id="7769a-180">字符串</span><span class="sxs-lookup"><span data-stu-id="7769a-180">string</span></span>|<xref:System.String>|  
|<span data-ttu-id="7769a-181">short</span><span class="sxs-lookup"><span data-stu-id="7769a-181">short</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="7769a-182">时间</span><span class="sxs-lookup"><span data-stu-id="7769a-182">time</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="7769a-183">token</span><span class="sxs-lookup"><span data-stu-id="7769a-183">token</span></span>|<xref:System.String>|  
|<span data-ttu-id="7769a-184">unsignedByte</span><span class="sxs-lookup"><span data-stu-id="7769a-184">unsignedByte</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="7769a-185">unsignedInt</span><span class="sxs-lookup"><span data-stu-id="7769a-185">unsignedInt</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="7769a-186">unsignedLong</span><span class="sxs-lookup"><span data-stu-id="7769a-186">unsignedLong</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="7769a-187">unsignedShort</span><span class="sxs-lookup"><span data-stu-id="7769a-187">unsignedShort</span></span>|<xref:System.UInt16>|  
  
   
  
## Examples  
 <span data-ttu-id="7769a-188">下面的示例应用<xref:System.Xml.Serialization.XmlAttributeAttribute>到两个成员，并设置<xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A>属性设置为不同的值。</span><span class="sxs-lookup"><span data-stu-id="7769a-188">The following example applies the <xref:System.Xml.Serialization.XmlAttributeAttribute> to two members, and sets the <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> property set to different values.</span></span>  
  
 [!code-cpp[Classic XmlAttributeAttribute.DataType Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.DataType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute.DataType Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute.DataType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7769a-189">获取或设置一个值，该值指示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的 XML 属性名称是否是限定的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7769a-189">Gets or sets a value that indicates whether the XML attribute name generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> is qualified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7769a-190">
            <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7769a-190">One of the <see cref="T:System.Xml.Schema.XmlSchemaForm" /> values.</span>
          </span>
          <span data-ttu-id="7769a-191">默认值为 <see langword="XmlForm.None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7769a-191">The default is <see langword="XmlForm.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7769a-192"><xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A>属性确定是否限定或非限定 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="7769a-192">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property determines whether an XML element is qualified or unqualified.</span></span> <span data-ttu-id="7769a-193"><xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A>属性符合 1999年http://www.w3.org规范`Namespaces in XML`。</span><span class="sxs-lookup"><span data-stu-id="7769a-193">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property conforms to the 1999 http://www.w3.org specification `Namespaces in XML`.</span></span>  
  
 <span data-ttu-id="7769a-194">如果<xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A>属性设置为任何值，尝试设置<xref:System.Xml.Serialization.XmlElementAttribute.Form%2A>属性`XmlSchemaForm.Unqualified`引发异常。</span><span class="sxs-lookup"><span data-stu-id="7769a-194">If the <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property is set to any value, attempting to set the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified` throws an exception.</span></span>  
  
 <span data-ttu-id="7769a-195">默认设置， `XmlSchemaForm.None`，指示<xref:System.Xml.Serialization.XmlSerializer>检查要确定是否为限定命名空间的 XML 文档的架构。</span><span class="sxs-lookup"><span data-stu-id="7769a-195">The default setting, `XmlSchemaForm.None`, instructs the <xref:System.Xml.Serialization.XmlSerializer> to check the schema for the XML document to determine whether the namespace is qualified.</span></span> <span data-ttu-id="7769a-196">如果架构未指定的值的单个元素或属性，<xref:System.Xml.Serialization.XmlSerializer>使用`elementFormDefault`和`attributeFormDefault`值以确定是否为限定元素或属性。</span><span class="sxs-lookup"><span data-stu-id="7769a-196">If the schema does not specify a value for an individual element or attribute, the <xref:System.Xml.Serialization.XmlSerializer> uses the `elementFormDefault` and `attributeFormDefault` values to determine whether an element or attribute is qualified.</span></span> <span data-ttu-id="7769a-197">下面的 XML 代码演示一个架构：</span><span class="sxs-lookup"><span data-stu-id="7769a-197">The following XML code shows a schema:</span></span>  
  
```xml  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified"... >  
   <element name="Name"/>  
   <attribute name="Number"/>  
</schema>  
```  
  
 <span data-ttu-id="7769a-198">当<xref:System.Xml.Serialization.XmlSerializer>读取架构，<xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A>值都`Name`和`Number`是`XmlSchemaForm.None`，但`Name`将限定元素而时`Number`元素是非限定。</span><span class="sxs-lookup"><span data-stu-id="7769a-198">When the <xref:System.Xml.Serialization.XmlSerializer> reads the schema, the <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> value for both the `Name` and `Number` is `XmlSchemaForm.None`, but the `Name` element is qualified, while the `Number` element is unqualified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7769a-199">下面的示例应用<xref:System.Xml.Serialization.XmlAttributeAttribute>到类中包含的两个字段。</span><span class="sxs-lookup"><span data-stu-id="7769a-199">The following example applies the <xref:System.Xml.Serialization.XmlAttributeAttribute> to two fields contained in a class.</span></span>  
  
 [!code-cpp[Classic XmlAttributeAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7769a-200">获取或设置 XML 属性的 XML 命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7769a-200">Gets or sets the XML namespace of the XML attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7769a-201">XML 属性的 XML 命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7769a-201">The XML namespace of the XML attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7769a-202"><xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A>属性符合http://www.w3.org规范`Namespaces in XML`。</span><span class="sxs-lookup"><span data-stu-id="7769a-202">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property conforms to the http://www.w3.org specification `Namespaces in XML`.</span></span>  
  
 <span data-ttu-id="7769a-203">若要创建与前缀关联的命名空间，必须创建<xref:System.Xml.Serialization.XmlSerializerNamespaces>包含的命名空间和前缀的 XML 文档中使用的对象。</span><span class="sxs-lookup"><span data-stu-id="7769a-203">To create namespaces that are associated with prefixes, you must create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object that contains the namespaces and prefixes used in the XML document.</span></span> <span data-ttu-id="7769a-204">每个设置的命名空间<xref:System.Xml.Serialization.XmlAttributeAttribute>必须与一种中的命名空间<xref:System.Xml.Serialization.XmlSerializerNamespaces>对象。</span><span class="sxs-lookup"><span data-stu-id="7769a-204">The namespace you set for each <xref:System.Xml.Serialization.XmlAttributeAttribute> must match one of the namespaces in the <xref:System.Xml.Serialization.XmlSerializerNamespaces> object.</span></span> <span data-ttu-id="7769a-205">当<xref:System.Xml.Serialization.XmlSerializer>生成 XML 代码中，它正确加上前缀每个属性名称。</span><span class="sxs-lookup"><span data-stu-id="7769a-205">When the <xref:System.Xml.Serialization.XmlSerializer> generates the XML code, it correctly prefixes each attribute name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7769a-206">下面的示例应用<xref:System.Xml.Serialization.XmlAttributeAttribute>到类中包含的两个字段。</span><span class="sxs-lookup"><span data-stu-id="7769a-206">The following example applies the <xref:System.Xml.Serialization.XmlAttributeAttribute> to two fields contained in a class.</span></span> <span data-ttu-id="7769a-207">该示例设置<xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A>为不同于成员标识符值的每个属性的属性。</span><span class="sxs-lookup"><span data-stu-id="7769a-207">The example sets the <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property for each attribute to a value different from the member identifier.</span></span>  
  
 [!code-cpp[Classic XmlAttributeAttribute.Namespace Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7769a-208">获取或设置 XML 属性的复杂类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7769a-208">Gets or sets the complex type of the XML attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7769a-209">XML 属性的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7769a-209">The type of the XML attribute.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>