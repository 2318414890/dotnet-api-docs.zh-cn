<Type Name="SoapTypeAttribute" FullName="System.Xml.Serialization.SoapTypeAttribute">
  <TypeSignature Language="C#" Value="public class SoapTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapTypeAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Interface | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="bc7e2-101">将类实例序列化为 SOAP 编码的 XML 时，控制 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的架构。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-101">Controls the schema generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> when a class instance is serialized as SOAP encoded XML.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc7e2-102"><xref:System.Xml.Serialization.SoapTypeAttribute>类属于一系列属性，用于控制如何<xref:System.Xml.Serialization.XmlSerializer>序列化或反序列化对象作为编码的 SOAP XML。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-102">The <xref:System.Xml.Serialization.SoapTypeAttribute> class belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object as encoded SOAP XML.</span></span> <span data-ttu-id="bc7e2-103">结果 XML 符合万维网联合会 (www.w3.org) 文档，"简单对象访问协议 (SOAP) 1.1"的第 5 节。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-103">The resulting XML conforms to section 5 of the World Wide Web Consortium (www.w3.org) document, "Simple Object Access Protocol (SOAP) 1.1".</span></span> <span data-ttu-id="bc7e2-104">类似的属性的完整列表，请参阅[属性，控制编码 SOAP 序列化](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-104">For a complete list of similar attributes, see [Attributes That Control Encoded SOAP Serialization](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md).</span></span>  
  
 <span data-ttu-id="bc7e2-105">要序列化作为编码 SOAP 消息的对象，构造<xref:System.Xml.Serialization.XmlSerializer>使用<xref:System.Xml.Serialization.XmlTypeMapping>使用创建<xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A>方法<xref:System.Xml.Serialization.SoapReflectionImporter>类。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-105">To serialize an object as an encoded SOAP message, construct the <xref:System.Xml.Serialization.XmlSerializer> using an <xref:System.Xml.Serialization.XmlTypeMapping> created with the <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> method of the <xref:System.Xml.Serialization.SoapReflectionImporter> class.</span></span>  
  
 <span data-ttu-id="bc7e2-106"><xref:System.Xml.Serialization.SoapTypeAttribute>仅可以应用于类声明。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-106">The <xref:System.Xml.Serialization.SoapTypeAttribute> can only be applied to class declarations.</span></span>  
  
 <span data-ttu-id="bc7e2-107"><xref:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema%2A>属性确定是否生成 XML 流的 XML 架构文档 (.xsd) 中包含生成的 XML 元素类型。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-107">The <xref:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema%2A> property determines whether the resulting XML element type is included in the XML Schema document (.xsd) for the generated XML stream.</span></span> <span data-ttu-id="bc7e2-108">若要查看架构，请将该类编译为 DLL 文件中。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-108">To see the schema, compile the class into a DLL file.</span></span> <span data-ttu-id="bc7e2-109">将生成的文件的自变量作为传递[XML 架构定义工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-109">Pass the resulting file as an argument to the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md).</span></span> <span data-ttu-id="bc7e2-110">该工具将生成 XML 架构为类序列化的实例时生成的 XML 流<xref:System.Xml.Serialization.XmlSerializer>类。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-110">The tool generates the XML Schema for the XML stream generated when the class is serialized by an instance of the <xref:System.Xml.Serialization.XmlSerializer> class.</span></span>  
  
 <span data-ttu-id="bc7e2-111">设置不同的命名空间将导致 Xsd.exe 要写入序列化类时生成的 XML 流的不同架构 (.xsd) 文件。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-111">Setting a different namespace causes Xsd.exe to write a different schema (.xsd) file for the XML stream generated when the class is serialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc7e2-112">下面的示例序列化类名为`Group`。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-112">The following example serializes a class named `Group`.</span></span> <span data-ttu-id="bc7e2-113"><xref:System.Xml.Serialization.SoapTypeAttribute>与应用于类，<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>设置为"SoapGroupType"。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-113">The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class, with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to "SoapGroupType".</span></span> <span data-ttu-id="bc7e2-114"><xref:System.Xml.Serialization.SoapTypeAttribute>还将重写，更改<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>到"团队"。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-114">The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to "Team".</span></span> <span data-ttu-id="bc7e2-115">这两个版本序列化，从而导致两个文件： SoapType.xml 和 SoapType2.xml。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-115">Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</span></span>  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bc7e2-116">初始化 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-116">Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bc7e2-117">初始化 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-117">Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc7e2-118">创建<xref:System.Xml.Serialization.SoapTypeAttribute>时重写一种类型的序列化。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-118">Create a <xref:System.Xml.Serialization.SoapTypeAttribute> when overriding the serialization of a type.</span></span> <span data-ttu-id="bc7e2-119">将对象分配给<xref:System.Xml.Serialization.SoapAttributes.SoapType%2A>属性<xref:System.Xml.Serialization.SoapAttributes>并添加<xref:System.Xml.Serialization.SoapAttributes>到<xref:System.Xml.Serialization.SoapAttributeOverrides>。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-119">Assign the object to the <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> and add the <xref:System.Xml.Serialization.SoapAttributes> to a <xref:System.Xml.Serialization.SoapAttributeOverrides>.</span></span> <span data-ttu-id="bc7e2-120">请参阅<xref:System.Xml.Serialization.SoapAttributeOverrides>类概述有关重写 SOAP 序列化的详细信息。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-120">See the <xref:System.Xml.Serialization.SoapAttributeOverrides> class overview for more details about overriding SOAP serialization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc7e2-121">下面的示例序列化类名为`Group`。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-121">The following example serializes a class named `Group`.</span></span> <span data-ttu-id="bc7e2-122"><xref:System.Xml.Serialization.SoapTypeAttribute>应用于类<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>设置为"SoapGroupType"。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-122">The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to "SoapGroupType".</span></span> <span data-ttu-id="bc7e2-123"><xref:System.Xml.Serialization.SoapTypeAttribute>还将重写，更改<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>到"团队"。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-123">The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to "Team".</span></span> <span data-ttu-id="bc7e2-124">这两个版本序列化，从而导致两个文件： SoapType.xml 和 SoapType2.xml。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-124">Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</span></span>  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute(System::String ^ typeName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="bc7e2-125"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化类实例时生成（和在反序列化类实例时识别）的 XML 类型的名称。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-125">The name of the XML type that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates when it serializes the class instance (and recognizes when it deserializes the class instance).</span></span></param>
        <summary><span data-ttu-id="bc7e2-126">初始化 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 类的新实例，并指定 XML 类型的名称。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-126">Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> class and specifies the name of the XML type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc7e2-127">创建<xref:System.Xml.Serialization.SoapTypeAttribute>时重写一种类型的序列化。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-127">Create a <xref:System.Xml.Serialization.SoapTypeAttribute> when overriding the serialization of a type.</span></span> <span data-ttu-id="bc7e2-128">将对象分配给<xref:System.Xml.Serialization.SoapAttributes.SoapType%2A>属性<xref:System.Xml.Serialization.SoapAttributes>并添加<xref:System.Xml.Serialization.SoapAttributes>到<xref:System.Xml.Serialization.SoapAttributeOverrides>。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-128">Assign the object to the <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> and add the <xref:System.Xml.Serialization.SoapAttributes> to a <xref:System.Xml.Serialization.SoapAttributeOverrides>.</span></span> <span data-ttu-id="bc7e2-129">请参阅<xref:System.Xml.Serialization.SoapAttributeOverrides>类概述有关重写 SOAP 序列化的详细信息。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-129">See the <xref:System.Xml.Serialization.SoapAttributeOverrides> class overview for more details about overriding SOAP serialization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc7e2-130">下面的示例序列化类名为`Group`。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-130">The following example serializes a class named `Group`.</span></span> <span data-ttu-id="bc7e2-131"><xref:System.Xml.Serialization.SoapTypeAttribute>应用于类<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>设置为"SoapGroupType"。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-131">The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to "SoapGroupType".</span></span> <span data-ttu-id="bc7e2-132"><xref:System.Xml.Serialization.SoapTypeAttribute>还将重写，更改<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>到"团队"。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-132">The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to "Team".</span></span> <span data-ttu-id="bc7e2-133">这两个版本序列化，从而导致两个文件： SoapType.xml 和 SoapType2.xml。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-133">Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</span></span>  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute(System::String ^ typeName, System::String ^ ns);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="bc7e2-134"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化类实例时生成（和在反序列化类实例时识别）的 XML 类型的名称。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-134">The name of the XML type that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates when it serializes the class instance (and recognizes when it deserializes the class instance).</span></span></param>
        <param name="ns"><span data-ttu-id="bc7e2-135">类型的 XML 命名空间。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-135">The XML namespace of the type.</span></span></param>
        <summary><span data-ttu-id="bc7e2-136">初始化 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 类的新实例，并指定类型的名称和 XML 命名空间。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-136">Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> class and specifies the name and XML namespace of the type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc7e2-137">创建<xref:System.Xml.Serialization.SoapTypeAttribute>时重写一种类型的序列化。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-137">Create a <xref:System.Xml.Serialization.SoapTypeAttribute> when overriding the serialization of a type.</span></span> <span data-ttu-id="bc7e2-138">将对象分配给<xref:System.Xml.Serialization.SoapAttributes.SoapType%2A>属性<xref:System.Xml.Serialization.SoapAttributes>并添加<xref:System.Xml.Serialization.SoapAttributes>到<xref:System.Xml.Serialization.SoapAttributeOverrides>。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-138">Assign the object to the <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> and add the <xref:System.Xml.Serialization.SoapAttributes> to a <xref:System.Xml.Serialization.SoapAttributeOverrides>.</span></span> <span data-ttu-id="bc7e2-139">请参阅<xref:System.Xml.Serialization.SoapAttributeOverrides>重写 SOAP 序列化的更多详细信息的类概述。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-139">See the <xref:System.Xml.Serialization.SoapAttributeOverrides> class overview for more details on overriding SOAP serialization.</span></span>  
  
 <span data-ttu-id="bc7e2-140">如果你设置<xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A>多个类型的值 (即，如果将特性应用于多个替换为其他类<xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A>为每个值)，则[XML 架构定义工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)生成单独每个类型的架构文件 (.xsd)。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-140">If you set a <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> value for more than one type (that is, if you apply the attribute to more than one class with a different <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> value for each one), the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) generates a separate schema file (.xsd) for each type.</span></span> <span data-ttu-id="bc7e2-141">这是因为将设置不同的命名空间为每种类型会呈现每个类型不同于其他，这样，就需要对要写一个独立的实体为每个类型。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-141">This is because setting a different namespace for each type renders each type distinct from the others, which makes it necessary for each type to be written out as an independent entity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc7e2-142">下面的示例序列化类名为`Group`。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-142">The following example serializes a class named `Group`.</span></span> <span data-ttu-id="bc7e2-143"><xref:System.Xml.Serialization.SoapTypeAttribute>应用于类<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>设置为"SoapGroupType"。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-143">The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to "SoapGroupType".</span></span> <span data-ttu-id="bc7e2-144"><xref:System.Xml.Serialization.SoapTypeAttribute>还将重写，更改<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>到"团队"。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-144">The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to "Team".</span></span> <span data-ttu-id="bc7e2-145">这两个版本序列化，从而导致两个文件： SoapType.xml 和 SoapType2.xml。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-145">Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</span></span>  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeInSchema">
      <MemberSignature Language="C#" Value="public bool IncludeInSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeInSchema" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeInSchema As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeInSchema { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc7e2-146">获取或设置一个值，该值指示是否在 SOAP 编码的 XML 架构文档中包括该类型。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-146">Gets or sets a value that indicates whether to include the type in SOAP-encoded XML Schema documents.</span></span></summary>
        <value>
          <span data-ttu-id="bc7e2-147">要在 SOAP 编码的“XML 架构”文档中包括该类型，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-147"><see langword="true" /> to include the type in SOAP-encoded XML Schema documents; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bc7e2-148">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-148">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc7e2-149">应用<xref:System.Xml.Serialization.SoapTypeAttribute>到类声明，以指定是否要包含在 XML 架构文档中的类型。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-149">Apply the <xref:System.Xml.Serialization.SoapTypeAttribute> to a class declaration to specify whether to include the type in the XML schema document.</span></span> <span data-ttu-id="bc7e2-150">若要查看的属性设置结果<xref:System.Xml.Serialization.SoapTypeAttribute>类，编译应用程序作为可执行文件或 DLL，并将传递到生成的文件[XML 架构定义工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-150">To see the results of setting the properties of the <xref:System.Xml.Serialization.SoapTypeAttribute> class, compile your application as an executable or DLL, and pass the resulting file to the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md).</span></span> <span data-ttu-id="bc7e2-151">该工具将架构，包括类序列化时生成的 XML 流的类型定义。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-151">The tool writes the schema, including the type definition of the XML stream generated when the class is serialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc7e2-152">下面的示例序列化类名为`Group`。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-152">The following example serializes a class named `Group`.</span></span> <span data-ttu-id="bc7e2-153"><xref:System.Xml.Serialization.SoapTypeAttribute>应用于类<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>设置为"SoapGroupType"。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-153">The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to "SoapGroupType".</span></span> <span data-ttu-id="bc7e2-154"><xref:System.Xml.Serialization.SoapTypeAttribute>还将重写，更改<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>到"团队"。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-154">The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to "Team".</span></span> <span data-ttu-id="bc7e2-155">这两个版本序列化，从而导致两个文件： SoapType.xml 和 SoapType2.xml。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-155">Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</span></span>  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc7e2-156">获取或设置 XML 类型的命名空间。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-156">Gets or sets the namespace of the XML type.</span></span></summary>
        <value><span data-ttu-id="bc7e2-157">XML 类型的命名空间。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-157">The namespace of the XML type.</span></span> <span data-ttu-id="bc7e2-158">默认值为空字符串("")。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-158">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc7e2-159">如果你设置<xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A>多个类型的值 (即，如果将特性应用于多个替换为其他类<xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A>为每个值)，则[XML 架构定义工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)生成单独每个类型的架构文件 (.xsd)。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-159">If you set a <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> value for more than one type (that is, if you apply the attribute to more than one class with a different <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> value for each one), the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) generates a separate schema file (.xsd) for each type.</span></span> <span data-ttu-id="bc7e2-160">这是因为将设置不同的命名空间为每种类型会呈现每个类型不同于其他，这样，就需要对要写一个独立的实体为每个类型。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-160">This is because setting a different namespace for each type renders each type distinct from the others, which makes it necessary for each type to be written out as an independent entity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc7e2-161">下面的示例序列化类名为`Group`。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-161">The following example serializes a class named `Group`.</span></span> <span data-ttu-id="bc7e2-162"><xref:System.Xml.Serialization.SoapTypeAttribute>应用于类<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>设置为"SoapGroupType"。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-162">The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to "SoapGroupType".</span></span> <span data-ttu-id="bc7e2-163"><xref:System.Xml.Serialization.SoapTypeAttribute>还将重写，更改<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>到"团队"。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-163">The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to "Team".</span></span> <span data-ttu-id="bc7e2-164">这两个版本序列化，从而导致两个文件： SoapType.xml 和 SoapType2.xml。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-164">Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</span></span>  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc7e2-165">获取或设置 XML 类型的名称。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-165">Gets or sets the name of the XML type.</span></span></summary>
        <value><span data-ttu-id="bc7e2-166">XML 类型的名称。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-166">The name of the XML type.</span></span> <span data-ttu-id="bc7e2-167">默认为类名称。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-167">The default is the class name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc7e2-168">应用<xref:System.Xml.Serialization.SoapTypeAttribute>于类，以指定的 XML 类型的命名空间、 XML 类型名称，以及是否要包含在 XML 架构文档中的类型。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-168">Apply the <xref:System.Xml.Serialization.SoapTypeAttribute> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML Schema document.</span></span> <span data-ttu-id="bc7e2-169">若要查看的结果设置<xref:System.Xml.Serialization.SoapTypeAttribute>对象的属性，编译应用程序作为可执行文件或 DLL，并将传递到生成的文件[XML 架构定义工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-169">To see the results of setting the <xref:System.Xml.Serialization.SoapTypeAttribute> object's properties, compile your application as an executable or DLL, and pass the resulting file to the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md).</span></span> <span data-ttu-id="bc7e2-170">该工具将架构，包括类型定义。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-170">The tool writes the schema, including the type definition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc7e2-171">下面的示例序列化类名为`Group`。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-171">The following example serializes a class named `Group`.</span></span> <span data-ttu-id="bc7e2-172"><xref:System.Xml.Serialization.SoapTypeAttribute>应用于类<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>设置为"SoapGroupType"。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-172">The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to "SoapGroupType".</span></span> <span data-ttu-id="bc7e2-173"><xref:System.Xml.Serialization.SoapTypeAttribute>还将重写，更改<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>到"团队"。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-173">The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to "Team".</span></span> <span data-ttu-id="bc7e2-174">这两个版本序列化，从而导致两个文件： SoapType.xml 和 SoapType2.xml。</span><span class="sxs-lookup"><span data-stu-id="bc7e2-174">Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</span></span>  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>