<Type Name="SoapTypeAttribute" FullName="System.Xml.Serialization.SoapTypeAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cfc16219eb7e142fa2d5f27d46fd40417d7ac555" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37732500" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SoapTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapTypeAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type SoapTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Interface | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="dbef5-101">将类实例序列化为 SOAP 编码的 XML 时，控制 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的架构。</span>
      <span class="sxs-lookup">
        <span data-stu-id="dbef5-101">Controls the schema generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> when a class instance is serialized as SOAP encoded XML.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbef5-102"><xref:System.Xml.Serialization.SoapTypeAttribute>类属于一系列属性，用于控制如何<xref:System.Xml.Serialization.XmlSerializer>序列化或反序列化为编码的 SOAP XML 的对象。</span><span class="sxs-lookup"><span data-stu-id="dbef5-102">The <xref:System.Xml.Serialization.SoapTypeAttribute> class belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object as encoded SOAP XML.</span></span> <span data-ttu-id="dbef5-103">生成的 XML 符合万维网联合会 (www.w3.org) 文档"简单对象访问协议 (SOAP) 1.1"的第 5 节。</span><span class="sxs-lookup"><span data-stu-id="dbef5-103">The resulting XML conforms to section 5 of the World Wide Web Consortium (www.w3.org) document, "Simple Object Access Protocol (SOAP) 1.1".</span></span> <span data-ttu-id="dbef5-104">有关类似属性的完整列表，请参阅[属性 That Control Encoded SOAP Serialization](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="dbef5-104">For a complete list of similar attributes, see [Attributes That Control Encoded SOAP Serialization](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md).</span></span>  
  
 <span data-ttu-id="dbef5-105">若要编码的 SOAP 消息将对象序列化为，构造<xref:System.Xml.Serialization.XmlSerializer>使用<xref:System.Xml.Serialization.XmlTypeMapping>附带<xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A>方法的<xref:System.Xml.Serialization.SoapReflectionImporter>类。</span><span class="sxs-lookup"><span data-stu-id="dbef5-105">To serialize an object as an encoded SOAP message, construct the <xref:System.Xml.Serialization.XmlSerializer> using an <xref:System.Xml.Serialization.XmlTypeMapping> created with the <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> method of the <xref:System.Xml.Serialization.SoapReflectionImporter> class.</span></span>  
  
 <span data-ttu-id="dbef5-106"><xref:System.Xml.Serialization.SoapTypeAttribute>仅应用于类声明。</span><span class="sxs-lookup"><span data-stu-id="dbef5-106">The <xref:System.Xml.Serialization.SoapTypeAttribute> can only be applied to class declarations.</span></span>  
  
 <span data-ttu-id="dbef5-107"><xref:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema%2A>属性确定是否生成 XML 元素类型包含在生成的 XML 流的 XML 架构文档 (.xsd)。</span><span class="sxs-lookup"><span data-stu-id="dbef5-107">The <xref:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema%2A> property determines whether the resulting XML element type is included in the XML Schema document (.xsd) for the generated XML stream.</span></span> <span data-ttu-id="dbef5-108">若要查看架构，请将该类编译为 DLL 文件。</span><span class="sxs-lookup"><span data-stu-id="dbef5-108">To see the schema, compile the class into a DLL file.</span></span> <span data-ttu-id="dbef5-109">将生成的文件作为参数传递[XML 架构定义工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)。</span><span class="sxs-lookup"><span data-stu-id="dbef5-109">Pass the resulting file as an argument to the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md).</span></span> <span data-ttu-id="dbef5-110">该工具将生成的实例序列化类时生成的 XML 流的 XML 架构<xref:System.Xml.Serialization.XmlSerializer>类。</span><span class="sxs-lookup"><span data-stu-id="dbef5-110">The tool generates the XML Schema for the XML stream generated when the class is serialized by an instance of the <xref:System.Xml.Serialization.XmlSerializer> class.</span></span>  
  
 <span data-ttu-id="dbef5-111">设置不同的命名空间会导致 Xsd.exe 要写入序列化类时生成的 XML 流的不同架构 (.xsd) 文件。</span><span class="sxs-lookup"><span data-stu-id="dbef5-111">Setting a different namespace causes Xsd.exe to write a different schema (.xsd) file for the XML stream generated when the class is serialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dbef5-112">下面的示例序列化类名为`Group`。</span><span class="sxs-lookup"><span data-stu-id="dbef5-112">The following example serializes a class named `Group`.</span></span> <span data-ttu-id="dbef5-113"><xref:System.Xml.Serialization.SoapTypeAttribute>应用于类，与<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>设置为"SoapGroupType"。</span><span class="sxs-lookup"><span data-stu-id="dbef5-113">The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class, with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to "SoapGroupType".</span></span> <span data-ttu-id="dbef5-114"><xref:System.Xml.Serialization.SoapTypeAttribute>还将重写，更改<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>到"团队"。</span><span class="sxs-lookup"><span data-stu-id="dbef5-114">The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to "Team".</span></span> <span data-ttu-id="dbef5-115">这两个版本进行序列化，从而在两个文件： SoapType.xml 和 SoapType2.xml。</span><span class="sxs-lookup"><span data-stu-id="dbef5-115">Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</span></span>  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dbef5-116">初始化 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbef5-116">Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dbef5-117">初始化 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbef5-117">Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbef5-118">创建<xref:System.Xml.Serialization.SoapTypeAttribute>时重写类型的序列化。</span><span class="sxs-lookup"><span data-stu-id="dbef5-118">Create a <xref:System.Xml.Serialization.SoapTypeAttribute> when overriding the serialization of a type.</span></span> <span data-ttu-id="dbef5-119">将对象分配给<xref:System.Xml.Serialization.SoapAttributes.SoapType%2A>的属性<xref:System.Xml.Serialization.SoapAttributes>并添加<xref:System.Xml.Serialization.SoapAttributes>到<xref:System.Xml.Serialization.SoapAttributeOverrides>。</span><span class="sxs-lookup"><span data-stu-id="dbef5-119">Assign the object to the <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> and add the <xref:System.Xml.Serialization.SoapAttributes> to a <xref:System.Xml.Serialization.SoapAttributeOverrides>.</span></span> <span data-ttu-id="dbef5-120">请参阅<xref:System.Xml.Serialization.SoapAttributeOverrides>有关重写的 SOAP 序列化的更多详细信息的类概述。</span><span class="sxs-lookup"><span data-stu-id="dbef5-120">See the <xref:System.Xml.Serialization.SoapAttributeOverrides> class overview for more details about overriding SOAP serialization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dbef5-121">下面的示例序列化类名为`Group`。</span><span class="sxs-lookup"><span data-stu-id="dbef5-121">The following example serializes a class named `Group`.</span></span> <span data-ttu-id="dbef5-122"><xref:System.Xml.Serialization.SoapTypeAttribute>应用于与类<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>设置为"SoapGroupType"。</span><span class="sxs-lookup"><span data-stu-id="dbef5-122">The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to "SoapGroupType".</span></span> <span data-ttu-id="dbef5-123"><xref:System.Xml.Serialization.SoapTypeAttribute>还将重写，更改<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>到"团队"。</span><span class="sxs-lookup"><span data-stu-id="dbef5-123">The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to "Team".</span></span> <span data-ttu-id="dbef5-124">这两个版本进行序列化，从而在两个文件： SoapType.xml 和 SoapType2.xml。</span><span class="sxs-lookup"><span data-stu-id="dbef5-124">Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</span></span>  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapTypeAttribute : string -&gt; System.Xml.Serialization.SoapTypeAttribute" Usage="new System.Xml.Serialization.SoapTypeAttribute typeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="dbef5-125">
            <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化类实例时生成（和在反序列化类实例时识别）的 XML 类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbef5-125">The name of the XML type that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates when it serializes the class instance (and recognizes when it deserializes the class instance).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dbef5-126">初始化 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 类的新实例，并指定 XML 类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbef5-126">Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> class and specifies the name of the XML type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbef5-127">创建<xref:System.Xml.Serialization.SoapTypeAttribute>时重写类型的序列化。</span><span class="sxs-lookup"><span data-stu-id="dbef5-127">Create a <xref:System.Xml.Serialization.SoapTypeAttribute> when overriding the serialization of a type.</span></span> <span data-ttu-id="dbef5-128">将对象分配给<xref:System.Xml.Serialization.SoapAttributes.SoapType%2A>的属性<xref:System.Xml.Serialization.SoapAttributes>并添加<xref:System.Xml.Serialization.SoapAttributes>到<xref:System.Xml.Serialization.SoapAttributeOverrides>。</span><span class="sxs-lookup"><span data-stu-id="dbef5-128">Assign the object to the <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> and add the <xref:System.Xml.Serialization.SoapAttributes> to a <xref:System.Xml.Serialization.SoapAttributeOverrides>.</span></span> <span data-ttu-id="dbef5-129">请参阅<xref:System.Xml.Serialization.SoapAttributeOverrides>有关重写的 SOAP 序列化的更多详细信息的类概述。</span><span class="sxs-lookup"><span data-stu-id="dbef5-129">See the <xref:System.Xml.Serialization.SoapAttributeOverrides> class overview for more details about overriding SOAP serialization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dbef5-130">下面的示例序列化类名为`Group`。</span><span class="sxs-lookup"><span data-stu-id="dbef5-130">The following example serializes a class named `Group`.</span></span> <span data-ttu-id="dbef5-131"><xref:System.Xml.Serialization.SoapTypeAttribute>应用于与类<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>设置为"SoapGroupType"。</span><span class="sxs-lookup"><span data-stu-id="dbef5-131">The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to "SoapGroupType".</span></span> <span data-ttu-id="dbef5-132"><xref:System.Xml.Serialization.SoapTypeAttribute>还将重写，更改<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>到"团队"。</span><span class="sxs-lookup"><span data-stu-id="dbef5-132">The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to "Team".</span></span> <span data-ttu-id="dbef5-133">这两个版本进行序列化，从而在两个文件： SoapType.xml 和 SoapType2.xml。</span><span class="sxs-lookup"><span data-stu-id="dbef5-133">Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</span></span>  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute(System::String ^ typeName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapTypeAttribute : string * string -&gt; System.Xml.Serialization.SoapTypeAttribute" Usage="new System.Xml.Serialization.SoapTypeAttribute (typeName, ns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="dbef5-134">
            <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化类实例时生成（和在反序列化类实例时识别）的 XML 类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbef5-134">The name of the XML type that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates when it serializes the class instance (and recognizes when it deserializes the class instance).</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="dbef5-135">类型的 XML 命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbef5-135">The XML namespace of the type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dbef5-136">初始化 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 类的新实例，并指定类型的名称和 XML 命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbef5-136">Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> class and specifies the name and XML namespace of the type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbef5-137">创建<xref:System.Xml.Serialization.SoapTypeAttribute>时重写类型的序列化。</span><span class="sxs-lookup"><span data-stu-id="dbef5-137">Create a <xref:System.Xml.Serialization.SoapTypeAttribute> when overriding the serialization of a type.</span></span> <span data-ttu-id="dbef5-138">将对象分配给<xref:System.Xml.Serialization.SoapAttributes.SoapType%2A>的属性<xref:System.Xml.Serialization.SoapAttributes>并添加<xref:System.Xml.Serialization.SoapAttributes>到<xref:System.Xml.Serialization.SoapAttributeOverrides>。</span><span class="sxs-lookup"><span data-stu-id="dbef5-138">Assign the object to the <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> and add the <xref:System.Xml.Serialization.SoapAttributes> to a <xref:System.Xml.Serialization.SoapAttributeOverrides>.</span></span> <span data-ttu-id="dbef5-139">请参阅<xref:System.Xml.Serialization.SoapAttributeOverrides>重写的 SOAP 序列化的更多详细信息的类概述。</span><span class="sxs-lookup"><span data-stu-id="dbef5-139">See the <xref:System.Xml.Serialization.SoapAttributeOverrides> class overview for more details on overriding SOAP serialization.</span></span>  
  
 <span data-ttu-id="dbef5-140">如果您设置<xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A>多个类型的值 (即，如果将特性应用于多个类与其他<xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A>为每个值)，则[XML 架构定义工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)生成单独的每种类型的架构文件 (.xsd)。</span><span class="sxs-lookup"><span data-stu-id="dbef5-140">If you set a <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> value for more than one type (that is, if you apply the attribute to more than one class with a different <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> value for each one), the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) generates a separate schema file (.xsd) for each type.</span></span> <span data-ttu-id="dbef5-141">这是因为对于每种类型设置不同的命名空间呈现每个类型不同于其他，从而使每个要写为一个独立的实体类型。</span><span class="sxs-lookup"><span data-stu-id="dbef5-141">This is because setting a different namespace for each type renders each type distinct from the others, which makes it necessary for each type to be written out as an independent entity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dbef5-142">下面的示例序列化类名为`Group`。</span><span class="sxs-lookup"><span data-stu-id="dbef5-142">The following example serializes a class named `Group`.</span></span> <span data-ttu-id="dbef5-143"><xref:System.Xml.Serialization.SoapTypeAttribute>应用于与类<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>设置为"SoapGroupType"。</span><span class="sxs-lookup"><span data-stu-id="dbef5-143">The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to "SoapGroupType".</span></span> <span data-ttu-id="dbef5-144"><xref:System.Xml.Serialization.SoapTypeAttribute>还将重写，更改<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>到"团队"。</span><span class="sxs-lookup"><span data-stu-id="dbef5-144">The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to "Team".</span></span> <span data-ttu-id="dbef5-145">这两个版本进行序列化，从而在两个文件： SoapType.xml 和 SoapType2.xml。</span><span class="sxs-lookup"><span data-stu-id="dbef5-145">Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</span></span>  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeInSchema">
      <MemberSignature Language="C#" Value="public bool IncludeInSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeInSchema" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeInSchema As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeInSchema { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeInSchema : bool with get, set" Usage="System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dbef5-146">获取或设置一个值，该值指示是否在 SOAP 编码的 XML 架构文档中包括该类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbef5-146">Gets or sets a value that indicates whether to include the type in SOAP-encoded XML Schema documents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dbef5-147">要在 SOAP 编码的“XML 架构”文档中包括该类型，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbef5-147">
              <see langword="true" /> to include the type in SOAP-encoded XML Schema documents; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="dbef5-148">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbef5-148">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbef5-149">将应用<xref:System.Xml.Serialization.SoapTypeAttribute>到类声明，以指定是否包括 XML 架构文档中的类型。</span><span class="sxs-lookup"><span data-stu-id="dbef5-149">Apply the <xref:System.Xml.Serialization.SoapTypeAttribute> to a class declaration to specify whether to include the type in the XML schema document.</span></span> <span data-ttu-id="dbef5-150">若要查看设置的属性的结果<xref:System.Xml.Serialization.SoapTypeAttribute>类，编译应用程序作为可执行文件或 DLL，并将传递到生成的文件[XML 架构定义工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)。</span><span class="sxs-lookup"><span data-stu-id="dbef5-150">To see the results of setting the properties of the <xref:System.Xml.Serialization.SoapTypeAttribute> class, compile your application as an executable or DLL, and pass the resulting file to the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md).</span></span> <span data-ttu-id="dbef5-151">该工具将写入架构，包括的类型定义的类进行序列化时生成的 XML 流。</span><span class="sxs-lookup"><span data-stu-id="dbef5-151">The tool writes the schema, including the type definition of the XML stream generated when the class is serialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dbef5-152">下面的示例序列化类名为`Group`。</span><span class="sxs-lookup"><span data-stu-id="dbef5-152">The following example serializes a class named `Group`.</span></span> <span data-ttu-id="dbef5-153"><xref:System.Xml.Serialization.SoapTypeAttribute>应用于与类<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>设置为"SoapGroupType"。</span><span class="sxs-lookup"><span data-stu-id="dbef5-153">The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to "SoapGroupType".</span></span> <span data-ttu-id="dbef5-154"><xref:System.Xml.Serialization.SoapTypeAttribute>还将重写，更改<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>到"团队"。</span><span class="sxs-lookup"><span data-stu-id="dbef5-154">The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to "Team".</span></span> <span data-ttu-id="dbef5-155">这两个版本进行序列化，从而在两个文件： SoapType.xml 和 SoapType2.xml。</span><span class="sxs-lookup"><span data-stu-id="dbef5-155">Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</span></span>  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.SoapTypeAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dbef5-156">获取或设置 XML 类型的命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbef5-156">Gets or sets the namespace of the XML type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dbef5-157">XML 类型的命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbef5-157">The namespace of the XML type.</span>
          </span>
          <span data-ttu-id="dbef5-158">默认值为空字符串("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbef5-158">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbef5-159">如果您设置<xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A>多个类型的值 (即，如果将特性应用于多个类与其他<xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A>为每个值)，则[XML 架构定义工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)生成单独的每种类型的架构文件 (.xsd)。</span><span class="sxs-lookup"><span data-stu-id="dbef5-159">If you set a <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> value for more than one type (that is, if you apply the attribute to more than one class with a different <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> value for each one), the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) generates a separate schema file (.xsd) for each type.</span></span> <span data-ttu-id="dbef5-160">这是因为对于每种类型设置不同的命名空间呈现每个类型不同于其他，从而使每个要写为一个独立的实体类型。</span><span class="sxs-lookup"><span data-stu-id="dbef5-160">This is because setting a different namespace for each type renders each type distinct from the others, which makes it necessary for each type to be written out as an independent entity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dbef5-161">下面的示例序列化类名为`Group`。</span><span class="sxs-lookup"><span data-stu-id="dbef5-161">The following example serializes a class named `Group`.</span></span> <span data-ttu-id="dbef5-162"><xref:System.Xml.Serialization.SoapTypeAttribute>应用于与类<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>设置为"SoapGroupType"。</span><span class="sxs-lookup"><span data-stu-id="dbef5-162">The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to "SoapGroupType".</span></span> <span data-ttu-id="dbef5-163"><xref:System.Xml.Serialization.SoapTypeAttribute>还将重写，更改<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>到"团队"。</span><span class="sxs-lookup"><span data-stu-id="dbef5-163">The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to "Team".</span></span> <span data-ttu-id="dbef5-164">这两个版本进行序列化，从而在两个文件： SoapType.xml 和 SoapType2.xml。</span><span class="sxs-lookup"><span data-stu-id="dbef5-164">Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</span></span>  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Xml.Serialization.SoapTypeAttribute.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dbef5-165">获取或设置 XML 类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbef5-165">Gets or sets the name of the XML type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dbef5-166">XML 类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbef5-166">The name of the XML type.</span>
          </span>
          <span data-ttu-id="dbef5-167">默认为类名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbef5-167">The default is the class name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbef5-168">将应用<xref:System.Xml.Serialization.SoapTypeAttribute>于类，以指定的 XML 类型命名空间、 XML 类型名称，以及是否包括 XML 架构文档中的类型。</span><span class="sxs-lookup"><span data-stu-id="dbef5-168">Apply the <xref:System.Xml.Serialization.SoapTypeAttribute> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML Schema document.</span></span> <span data-ttu-id="dbef5-169">若要查看设置结果<xref:System.Xml.Serialization.SoapTypeAttribute>对象的属性，编译应用程序作为可执行文件或 DLL，并将传递到生成的文件[XML 架构定义工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)。</span><span class="sxs-lookup"><span data-stu-id="dbef5-169">To see the results of setting the <xref:System.Xml.Serialization.SoapTypeAttribute> object's properties, compile your application as an executable or DLL, and pass the resulting file to the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md).</span></span> <span data-ttu-id="dbef5-170">该工具将写入架构，包括类型定义。</span><span class="sxs-lookup"><span data-stu-id="dbef5-170">The tool writes the schema, including the type definition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dbef5-171">下面的示例序列化类名为`Group`。</span><span class="sxs-lookup"><span data-stu-id="dbef5-171">The following example serializes a class named `Group`.</span></span> <span data-ttu-id="dbef5-172"><xref:System.Xml.Serialization.SoapTypeAttribute>应用于与类<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>设置为"SoapGroupType"。</span><span class="sxs-lookup"><span data-stu-id="dbef5-172">The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to "SoapGroupType".</span></span> <span data-ttu-id="dbef5-173"><xref:System.Xml.Serialization.SoapTypeAttribute>还将重写，更改<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>到"团队"。</span><span class="sxs-lookup"><span data-stu-id="dbef5-173">The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to "Team".</span></span> <span data-ttu-id="dbef5-174">这两个版本进行序列化，从而在两个文件： SoapType.xml 和 SoapType2.xml。</span><span class="sxs-lookup"><span data-stu-id="dbef5-174">Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</span></span>  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>