<Type Name="XmlRootAttribute" FullName="System.Xml.Serialization.XmlRootAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c9cf80ab673be0bbbe67687a4fac8b6008ac6e07" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlRootAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlRootAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlRootAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlRootAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlRootAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Interface | System.AttributeTargets.ReturnValue | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5cbe2-101">控制视为 XML 根元素的属性目标的 XML 序列化。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5cbe2-101">Controls XML serialization of the attribute target as an XML root element.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cbe2-102"><xref:System.Xml.Serialization.XmlRootAttribute>属于一系列属性，用于控制如何<xref:System.Xml.Serialization.XmlSerializer>序列化或反序列化对象。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-102">The <xref:System.Xml.Serialization.XmlRootAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object.</span></span> <span data-ttu-id="5cbe2-103">类似的属性的完整列表，请参阅[属性，控制 XML 序列化](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="5cbe2-104">你可以将应用<xref:System.Xml.Serialization.XmlRootAttribute>到类、 结构、 枚举或接口。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-104">You can apply the <xref:System.Xml.Serialization.XmlRootAttribute> to a class, structure, enumeration, or interface.</span></span> <span data-ttu-id="5cbe2-105">你还可以将特性应用于 XML Web service 方法的返回值。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-105">You can also apply the attribute to the return value of an XML Web service method.</span></span>  
  
 <span data-ttu-id="5cbe2-106">每个 XML 文档必须具有一个包含所有其他元素的单个根元素。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-106">Every XML document must have a single root element that contains all the other elements.</span></span> <span data-ttu-id="5cbe2-107"><xref:System.Xml.Serialization.XmlRootAttribute>允许你控制如何<xref:System.Xml.Serialization.XmlSerializer>通过设置某些属性生成的根元素。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-107">The <xref:System.Xml.Serialization.XmlRootAttribute> allows you to control how the <xref:System.Xml.Serialization.XmlSerializer> generates the root element by setting certain properties.</span></span> <span data-ttu-id="5cbe2-108">例如，通过设置指定生成的 XML 元素的名称<xref:System.Xml.Serialization.XmlRootAttribute.ElementName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-108">For example, specify the name of the generated XML element by setting the <xref:System.Xml.Serialization.XmlRootAttribute.ElementName%2A> property.</span></span>  
  
 <span data-ttu-id="5cbe2-109">有关使用属性的详细信息，请参阅[属性](~/docs/standard/attributes/index.md)。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-109">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5cbe2-110">你可以使用 word`XmlRoot`中你的代码而不是较长<xref:System.Xml.Serialization.XmlRootAttribute>。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-110">You can use the word `XmlRoot` in your code instead of the longer <xref:System.Xml.Serialization.XmlRootAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cbe2-111">下面的示例应用<xref:System.Xml.Serialization.XmlRootAttribute>类。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-111">The following example applies the <xref:System.Xml.Serialization.XmlRootAttribute> to a class.</span></span> <span data-ttu-id="5cbe2-112">该属性指定元素名称、 命名空间，以及是否将限定元素，以及是否`xsi:nil`如果类设置为生成的属性`null`。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-112">The attribute specifies the element name, namespace, and whether the element is qualified, and whether the `xsi:nil` attribute is generated if the class is set to `null`.</span></span>  
  
 [!code-cpp[Classic XmlRootAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlRootAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlRootAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlRootAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlRootAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlRootAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlArrayAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlElementAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5cbe2-113">初始化 <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 类的新实例，并将类名用作 XML 根元素的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cbe2-113">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> class and uses the class name as the name of the XML root element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlRootAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlRootAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlRootAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5cbe2-114">初始化 <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cbe2-114">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5cbe2-115">下面的示例创建的实例<xref:System.Xml.Serialization.XmlRootAttribute>并将它分配给<xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A>属性<xref:System.Xml.Serialization.XmlAttributes>对象。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-115">The following example creates an instance of an <xref:System.Xml.Serialization.XmlRootAttribute> and assigns it to the <xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A> property of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="5cbe2-116">当<xref:System.Xml.Serialization.XmlSerializer>序列化`MyClass`对象，它使用<xref:System.Xml.Serialization.XmlRootAttribute>对象来重写的默认根元素。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-116">When the <xref:System.Xml.Serialization.XmlSerializer> serializes the `MyClass` object, it uses the <xref:System.Xml.Serialization.XmlRootAttribute> object to override the default root element.</span></span>  
  
 [!code-cpp[Classic XmlRootAttribute.XmlRootAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlRootAttribute.XmlRootAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlRootAttribute.XmlRootAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlRootAttribute.XmlRootAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlRootAttribute.XmlRootAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlRootAttribute.XmlRootAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlRoot" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlRootAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlRootAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlRootAttribute(System::String ^ elementName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="5cbe2-117">XML 根元素的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cbe2-117">The name of the XML root element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cbe2-118">初始化 <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 类的新实例，并指定 XML 根元素的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cbe2-118">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> class and specifies the name of the XML root element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5cbe2-119">下面的示例创建 XmlRootAttribute 的实例，并使用它来重写一个名为"学生"类的实例的序列。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-119">The following example creates an instance of the XmlRootAttribute and uses it to override the serialization of an instance of a class named "Student".</span></span>  
  
 [!code-cpp[XMLRootAttribute_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLRootAttribute_Constructor/CPP/xmlrootattribute_constructor.cpp#1)]
 [!code-csharp[XMLRootAttribute_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLRootAttribute_Constructor/CS/xmlrootattribute_constructor.cs#1)]
 [!code-vb[XMLRootAttribute_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLRootAttribute_Constructor/VB/xmlrootattribute_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlRootAttribute.ElementName" />
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlRootAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5cbe2-120">获取或设置 XML 根元素的 XSD 数据类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cbe2-120">Gets or sets the XSD data type of the XML root element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5cbe2-121">一种 XSD（XML 架构文档）数据类型，由名为“XML Schema: DataTypes”（XML 架构：数据类型）的万维网联合会 (www.w3.org) 文档定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cbe2-121">An XSD (XML Schema Document) data type, as defined by the World Wide Web Consortium (www.w3.org) document named "XML Schema: DataTypes".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cbe2-122">下表列出的 XSD 简单数据类型及其.NET 等效项。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-122">The following table lists the XSD simple data types with their .NET equivalents.</span></span>  
  
 <span data-ttu-id="5cbe2-123">Xsd`base64Binary`和`hexBinary`数据类型使用的数组<xref:System.Byte>结构，并应用<xref:System.Xml.Serialization.XmlRootAttribute>与<xref:System.Xml.Serialization.XmlRootAttribute.DataType%2A>属性设置为"base64Binary"或"hexBinary"根据需要。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-123">For the XSD `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> structures, and apply a <xref:System.Xml.Serialization.XmlRootAttribute> with the <xref:System.Xml.Serialization.XmlRootAttribute.DataType%2A> property set to "base64Binary" or "hexBinary", as appropriate.</span></span> <span data-ttu-id="5cbe2-124">Xsd`time`和`date`数据类型，使用<xref:System.DateTime>键入并应用<xref:System.Xml.Serialization.XmlRootAttribute>与<xref:System.Xml.Serialization.XmlRootAttribute.DataType%2A>设置为"日期"或"时间"。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-124">For the XSD `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.XmlRootAttribute> with the <xref:System.Xml.Serialization.XmlRootAttribute.DataType%2A> set to "date" or "time".</span></span>  
  
 <span data-ttu-id="5cbe2-125">对于每种 XSD 类型，映射到一个字符串，将应用于<xref:System.Xml.Serialization.XmlRootAttribute>与其<xref:System.Xml.Serialization.XmlRootAttribute.DataType%2A>属性设置为 XSD 类型。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-125">For every XSD type that is mapped to a string, apply the <xref:System.Xml.Serialization.XmlRootAttribute> with its <xref:System.Xml.Serialization.XmlRootAttribute.DataType%2A> property set to the XSD type.</span></span> <span data-ttu-id="5cbe2-126">但是，这不会更改的序列化格式，仅该成员的架构。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-126">However, this does not change the serialization format, only the schema for the member.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5cbe2-127">属性是区分大小写，，因此你必须将其设置完全为 XSD 数据类型之一。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-127">The property is case-sensitive, so you must set it exactly to one of the XSD data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5cbe2-128">将二进制数据作为 XML 传递元素会更加高效比将其传递 XML 特性。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-128">Passing binary data as an XML element is more efficient than passing it as an XML attribute.</span></span>  
  
 <span data-ttu-id="5cbe2-129">有关 XML 数据类型的详细信息，请参阅名为"XML 架构第 2： 数据类型"World Wide Web 联合会 (www.w3.org) 文档。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-129">For more information about XML data types, see the World Wide Web Consortium (www.w3.org) document named "XML Schema Part 2: Datatypes".</span></span>  
  
|<span data-ttu-id="5cbe2-130">XSD 数据类型</span><span class="sxs-lookup"><span data-stu-id="5cbe2-130">XSD data type</span></span>|<span data-ttu-id="5cbe2-131">.NET 数据类型</span><span class="sxs-lookup"><span data-stu-id="5cbe2-131">.NET data type</span></span>|  
|-------------------|--------------------|  
|<span data-ttu-id="5cbe2-132">anyURI</span><span class="sxs-lookup"><span data-stu-id="5cbe2-132">anyURI</span></span>|<xref:System.String>|  
|<span data-ttu-id="5cbe2-133">base64Binary</span><span class="sxs-lookup"><span data-stu-id="5cbe2-133">base64Binary</span></span>|<span data-ttu-id="5cbe2-134">数组<xref:System.Byte>对象</span><span class="sxs-lookup"><span data-stu-id="5cbe2-134">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="5cbe2-135">boolean</span><span class="sxs-lookup"><span data-stu-id="5cbe2-135">boolean</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="5cbe2-136">byte</span><span class="sxs-lookup"><span data-stu-id="5cbe2-136">byte</span></span>|<xref:System.SByte>|  
|<span data-ttu-id="5cbe2-137">date</span><span class="sxs-lookup"><span data-stu-id="5cbe2-137">date</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="5cbe2-138">dateTime</span><span class="sxs-lookup"><span data-stu-id="5cbe2-138">dateTime</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="5cbe2-139">decimal</span><span class="sxs-lookup"><span data-stu-id="5cbe2-139">decimal</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="5cbe2-140">double</span><span class="sxs-lookup"><span data-stu-id="5cbe2-140">double</span></span>|<xref:System.Double>|  
|<span data-ttu-id="5cbe2-141">ENTITY</span><span class="sxs-lookup"><span data-stu-id="5cbe2-141">ENTITY</span></span>|<xref:System.String>|  
|<span data-ttu-id="5cbe2-142">实体</span><span class="sxs-lookup"><span data-stu-id="5cbe2-142">ENTITIES</span></span>|<xref:System.String>|  
|<span data-ttu-id="5cbe2-143">float</span><span class="sxs-lookup"><span data-stu-id="5cbe2-143">float</span></span>|<xref:System.Single>|  
|<span data-ttu-id="5cbe2-144">gDay</span><span class="sxs-lookup"><span data-stu-id="5cbe2-144">gDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="5cbe2-145">gMonth</span><span class="sxs-lookup"><span data-stu-id="5cbe2-145">gMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="5cbe2-146">gMonthDay</span><span class="sxs-lookup"><span data-stu-id="5cbe2-146">gMonthDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="5cbe2-147">gYear</span><span class="sxs-lookup"><span data-stu-id="5cbe2-147">gYear</span></span>|<xref:System.String>|  
|<span data-ttu-id="5cbe2-148">gYearMonth</span><span class="sxs-lookup"><span data-stu-id="5cbe2-148">gYearMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="5cbe2-149">hexBinary</span><span class="sxs-lookup"><span data-stu-id="5cbe2-149">hexBinary</span></span>|<span data-ttu-id="5cbe2-150">数组<xref:System.Byte>对象</span><span class="sxs-lookup"><span data-stu-id="5cbe2-150">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="5cbe2-151">Id</span><span class="sxs-lookup"><span data-stu-id="5cbe2-151">ID</span></span>|<xref:System.String>|  
|<span data-ttu-id="5cbe2-152">IDREF</span><span class="sxs-lookup"><span data-stu-id="5cbe2-152">IDREF</span></span>|<xref:System.String>|  
|<span data-ttu-id="5cbe2-153">IDREFS</span><span class="sxs-lookup"><span data-stu-id="5cbe2-153">IDREFS</span></span>|<xref:System.String>|  
|<span data-ttu-id="5cbe2-154">int</span><span class="sxs-lookup"><span data-stu-id="5cbe2-154">int</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="5cbe2-155">整数</span><span class="sxs-lookup"><span data-stu-id="5cbe2-155">integer</span></span>|<xref:System.String>|  
|<span data-ttu-id="5cbe2-156">语言</span><span class="sxs-lookup"><span data-stu-id="5cbe2-156">language</span></span>|<xref:System.String>|  
|<span data-ttu-id="5cbe2-157">long</span><span class="sxs-lookup"><span data-stu-id="5cbe2-157">long</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="5cbe2-158">name</span><span class="sxs-lookup"><span data-stu-id="5cbe2-158">Name</span></span>|<xref:System.String>|  
|<span data-ttu-id="5cbe2-159">NCName</span><span class="sxs-lookup"><span data-stu-id="5cbe2-159">NCName</span></span>|<xref:System.String>|  
|<span data-ttu-id="5cbe2-160">negativeInteger</span><span class="sxs-lookup"><span data-stu-id="5cbe2-160">negativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="5cbe2-161">NMTOKEN</span><span class="sxs-lookup"><span data-stu-id="5cbe2-161">NMTOKEN</span></span>|<xref:System.String>|  
|<span data-ttu-id="5cbe2-162">NMTOKENS</span><span class="sxs-lookup"><span data-stu-id="5cbe2-162">NMTOKENS</span></span>|<xref:System.String>|  
|<span data-ttu-id="5cbe2-163">normalizedString</span><span class="sxs-lookup"><span data-stu-id="5cbe2-163">normalizedString</span></span>|<xref:System.String>|  
|<span data-ttu-id="5cbe2-164">nonNegativeInteger</span><span class="sxs-lookup"><span data-stu-id="5cbe2-164">nonNegativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="5cbe2-165">nonPositiveInteger</span><span class="sxs-lookup"><span data-stu-id="5cbe2-165">nonPositiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="5cbe2-166">NOTATION</span><span class="sxs-lookup"><span data-stu-id="5cbe2-166">NOTATION</span></span>|<xref:System.String>|  
|<span data-ttu-id="5cbe2-167">positiveInteger</span><span class="sxs-lookup"><span data-stu-id="5cbe2-167">positiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="5cbe2-168">QName</span><span class="sxs-lookup"><span data-stu-id="5cbe2-168">QName</span></span>|<xref:System.Xml.XmlQualifiedName>|  
|<span data-ttu-id="5cbe2-169">recurringDate</span><span class="sxs-lookup"><span data-stu-id="5cbe2-169">recurringDate</span></span>|<xref:System.String>|  
|<span data-ttu-id="5cbe2-170">持续时间</span><span class="sxs-lookup"><span data-stu-id="5cbe2-170">duration</span></span>|<xref:System.String>|  
|<span data-ttu-id="5cbe2-171">字符串</span><span class="sxs-lookup"><span data-stu-id="5cbe2-171">string</span></span>|<xref:System.String>|  
|<span data-ttu-id="5cbe2-172">short</span><span class="sxs-lookup"><span data-stu-id="5cbe2-172">short</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="5cbe2-173">时间</span><span class="sxs-lookup"><span data-stu-id="5cbe2-173">time</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="5cbe2-174">token</span><span class="sxs-lookup"><span data-stu-id="5cbe2-174">token</span></span>|<xref:System.String>|  
|<span data-ttu-id="5cbe2-175">unsignedByte</span><span class="sxs-lookup"><span data-stu-id="5cbe2-175">unsignedByte</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="5cbe2-176">unsignedInt</span><span class="sxs-lookup"><span data-stu-id="5cbe2-176">unsignedInt</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="5cbe2-177">unsignedLong</span><span class="sxs-lookup"><span data-stu-id="5cbe2-177">unsignedLong</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="5cbe2-178">unsignedShort</span><span class="sxs-lookup"><span data-stu-id="5cbe2-178">unsignedShort</span></span>|<xref:System.UInt16>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlRootAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5cbe2-179">获取或设置由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的 <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> 和 <see cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" /> 方法分别生成和识别的 XML 元素的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cbe2-179">Gets or sets the name of the XML element that is generated and recognized by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class's <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> and <see cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" /> methods, respectively.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5cbe2-180">在 XML 文档实例中生成和识别的 XML 根元素的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cbe2-180">The name of the XML root element that is generated and recognized in an XML-document instance.</span>
          </span>
          <span data-ttu-id="5cbe2-181">默认值为序列化类的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cbe2-181">The default is the name of the serialized class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cbe2-182">指定<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>如果你想要不同于的类名称的生成的 XML 元素的名称。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-182">Specify an <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> if you want the name of the generated XML element to differ from the class name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cbe2-183">下面的示例创建的实例<xref:System.Xml.Serialization.XmlRootAttribute>类并设置<xref:System.Xml.Serialization.XmlRootAttribute.ElementName%2A>属性的新值。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-183">The following example creates an instance of the <xref:System.Xml.Serialization.XmlRootAttribute> class and sets the <xref:System.Xml.Serialization.XmlRootAttribute.ElementName%2A> property to a new value.</span></span> <span data-ttu-id="5cbe2-184">该对象然后用于创建<xref:System.Xml.Serialization.XmlAttributeOverrides>用于重写对象的序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-184">The object is then used to create an <xref:System.Xml.Serialization.XmlAttributeOverrides> object used to override the serialization of an object.</span></span>  
  
 [!code-cpp[XMLRootAttribute_ElementName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLRootAttribute_ElementName/CPP/xmlrootattribute_elementname.cpp#1)]
 [!code-csharp[XMLRootAttribute_ElementName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLRootAttribute_ElementName/CS/xmlrootattribute_elementname.cs#1)]
 [!code-vb[XMLRootAttribute_ElementName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLRootAttribute_ElementName/VB/xmlrootattribute_elementname.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlRootAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5cbe2-185">获取或设置一个值，该值指示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否必须将设置为 <see langword="null" /> 的成员序列化为设置为 <see langword="xsi:nil" /> 的 <see langword="true" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cbe2-185">Gets or sets a value that indicates whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize a member that is set to <see langword="null" /> into the <see langword="xsi:nil" /> attribute set to <see langword="true" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5cbe2-186">如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成 <see langword="true" /> 属性，则为 <see langword="xsi:nil" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cbe2-186">
              <see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates the <see langword="xsi:nil" /> attribute; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cbe2-187">结构的 XML 架构规范允许 XML 文档以显式指示缺少元素的内容时。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-187">The XML schema specification for structures allows an XML document to explicitly signal that an element's content is missing.</span></span> <span data-ttu-id="5cbe2-188">此类元素包含属性`xsi:nil`设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-188">Such an element contains the attribute `xsi:nil` set to `true`.</span></span> <span data-ttu-id="5cbe2-189">有关详细信息，请参阅http://www.w3.org/TR/xmlschema-1/规范名为`XML Schema Part 1: Structures`。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-189">For more information, see the http://www.w3.org/TR/xmlschema-1/ specification named `XML Schema Part 1: Structures`.</span></span>  
  
 <span data-ttu-id="5cbe2-190">如果<xref:System.Xml.Serialization.XmlRootAttribute.IsNullable%2A>属性设置为`true`、`xsi:nil`生成的属性，如下面的 XML 中所示：</span><span class="sxs-lookup"><span data-stu-id="5cbe2-190">If the <xref:System.Xml.Serialization.XmlRootAttribute.IsNullable%2A> property is set to `true`, the `xsi:nil` attribute is generated as shown in the following XML:</span></span>  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
xmlns:xsd="http://www.w3.org/2001/XMLSchema" xsi:nil="true" />  
```  
  
 <span data-ttu-id="5cbe2-191">如果<xref:System.Xml.Serialization.XmlRootAttribute.IsNullable%2A>属性是`false`，如下面的代码中所示创建空元素：</span><span class="sxs-lookup"><span data-stu-id="5cbe2-191">If the <xref:System.Xml.Serialization.XmlRootAttribute.IsNullable%2A> property is `false`, an empty element is created as shown in the following code:</span></span>  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
xmlns:xsd="http://www.w3.org/2001/XMLSchema" />  
```  
  
   
  
## Examples  
 <span data-ttu-id="5cbe2-192">下面的示例序列化类名为`Group`。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-192">The following example serializes a class named `Group`.</span></span> <span data-ttu-id="5cbe2-193">该示例将应用<xref:System.Xml.Serialization.XmlRootAttribute>于类和集<xref:System.Xml.Serialization.XmlRootAttribute.IsNullable%2A>属性`false`。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-193">The example applies the <xref:System.Xml.Serialization.XmlRootAttribute> to the class, and sets the <xref:System.Xml.Serialization.XmlRootAttribute.IsNullable%2A> property to `false`.</span></span>  
  
 [!code-cpp[Classic XmlRootAttribute.IsNullable Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlRootAttribute.IsNullable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlRootAttribute.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlRootAttribute.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic XmlRootAttribute.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlRootAttribute.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlRootAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5cbe2-194">获取或设置 XML 根元素的命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cbe2-194">Gets or sets the namespace for the XML root element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5cbe2-195">XML 元素的命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cbe2-195">The namespace for the XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cbe2-196"><xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A>属性符合万维网联合会 (www.w3.org) 规格的名为`Namespaces in XML`。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-196">The <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> property conforms to the World Wide Web Consortium (www.w3.org) specification named `Namespaces in XML`.</span></span>  
  
 <span data-ttu-id="5cbe2-197">若要创建 XML 文档中的带前缀的命名空间，创建<xref:System.Xml.Serialization.XmlSerializerNamespaces>对象，其中包含所有前缀和命名空间对。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-197">To create prefixed namespaces in the XML document, create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object that contains all the prefix-namespace pairs.</span></span> <span data-ttu-id="5cbe2-198">每个设置的命名空间<xref:System.Xml.Serialization.XmlArrayAttribute>必须包含在<xref:System.Xml.Serialization.XmlSerializerNamespaces>对象。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-198">The namespace you set for each <xref:System.Xml.Serialization.XmlArrayAttribute> must be contained in the <xref:System.Xml.Serialization.XmlSerializerNamespaces> object.</span></span> <span data-ttu-id="5cbe2-199">当<xref:System.Xml.Serialization.XmlSerializer>生成文档时，它正确加上前缀每个数组项的元素名称。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-199">When the <xref:System.Xml.Serialization.XmlSerializer> generates the document, it correctly prefixes the element name for each array item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cbe2-200">下面的示例应用<xref:System.Xml.Serialization.XmlRootAttribute>到某个类并设置<xref:System.Xml.Serialization.XmlRootAttribute.Namespace%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="5cbe2-200">The following example applies the <xref:System.Xml.Serialization.XmlRootAttribute> to a class and sets the <xref:System.Xml.Serialization.XmlRootAttribute.Namespace%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlRootAttribute.Namespace Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlRootAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlRootAttribute.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlRootAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlRootAttribute.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlRootAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlRoot" />
      </Docs>
    </Member>
  </Members>
</Type>