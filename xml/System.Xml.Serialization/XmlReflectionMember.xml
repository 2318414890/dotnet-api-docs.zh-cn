<Type Name="XmlReflectionMember" FullName="System.Xml.Serialization.XmlReflectionMember">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="914e40360d99be638fe972623554e900f0651187" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720011" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlReflectionMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlReflectionMember extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlReflectionMember" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlReflectionMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlReflectionMember" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供 .NET Framework Web 服务方法中的代码实体与为 SOAP Web 服务定义的 Web 服务描述语言 (WSDL) 消息的内容之间的映射。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlReflectionMember>类不直接使用。 相反，它使用：  
  
-   若要初始化<xref:System.Xml.Serialization.XmlSerializer>对象时.NET Framework 正在初始化 SOAP Web 服务或客户端。  
  
-   通过<xref:System.Web.Services.Description.ServiceDescriptionReflector>类在时<xref:System.Web.Services.Description.ServiceDescriptionReflector>创建<xref:System.Web.Services.Description.ServiceDescription>从标识为 SOAP Web 服务的类的对象。  
  
 期间反射的 SOAP Web 服务方法，数组的<xref:System.Xml.Serialization.XmlReflectionMember>对象生成表示 WSDL 消息定义的内容。 为每个属于 SOAP Web 服务方法的以下项生成一个数组：  
  
-   输入的参数。  
  
-   输出参数和返回值。  
  
-   请求通过属性的 SOAP 标头。  
  
-   通过属性响应 SOAP 标头。  
  
 <xref:System.Xml.Serialization.SoapReflectionImporter>和<xref:System.Xml.Serialization.XmlReflectionImporter>类转换<xref:System.Xml.Serialization.XmlReflectionMember>数组转换<xref:System.Xml.Serialization.XmlMembersMapping>包含<xref:System.Xml.Serialization.XmlMemberMapping>集合，以做进一步处理。  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Xml.Serialization.XmlMembersMapping" />
    <altmember cref="T:System.Xml.Serialization.XmlMemberMapping" />
    <altmember cref="T:System.Xml.Serialization.SoapReflectionImporter" />
    <altmember cref="T:System.Xml.Serialization.XmlReflectionImporter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionMember ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionMember.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReflectionMember();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsReturnValue">
      <MemberSignature Language="C#" Value="public bool IsReturnValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReturnValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlReflectionMember.IsReturnValue" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReturnValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReturnValue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 是否表示 Web 服务方法返回值（而不是输出参数）。</summary>
        <value>
          如果成员表示 Web 服务返回值，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不需要使用<xref:System.Xml.Serialization.XmlReflectionMember>类和直接其属性。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MemberName">
      <MemberSignature Language="C#" Value="public string MemberName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MemberName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlReflectionMember.MemberName" />
      <MemberSignature Language="VB.NET" Value="Public Property MemberName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MemberName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置映射的 Web 服务方法成员的名称。</summary>
        <value>Web 服务方法的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 服务方法成员可能是输入的参数、 输出参数、 返回类型、 一个输入的标头或一个输出标头。  
  
 不需要使用<xref:System.Xml.Serialization.XmlReflectionMember>类和直接其属性。  
  
 请参阅<xref:System.Xml.Serialization.XmlMembersMapping>类情况下，当成员对应于`<part>`在 Web 服务描述语言 (WSDL) 文档中定义的元素。 但请注意，使用 WSDL 操作与.NET Framework 方法之间的已包装绑定 (由<xref:System.Web.Services.Protocols.SoapParameterStyle.Wrapped>枚举成员)，方法参数和返回值未出现的 WSDL 文档中。  
  
 当被反射 Web 服务方法、 返回类型的<xref:System.Xml.Serialization.XmlReflectionMember.MemberName%2A>属性将成为 （使其不同于其他成员名称，如有必要） 的方法名称追加了"Result"。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public Type MemberType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlReflectionMember.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public Property MemberType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ MemberType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置此映射所表示的 Web 服务方法成员代码实体的类型。</summary>
        <value>此映射所表示的 Web 服务方法成员代码实体的 <see cref="T:System.Type" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 服务方法成员代码实体可能是输入的参数、 输出参数、 返回类型或 SOAP 标头属性。  
  
 不需要使用<xref:System.Xml.Serialization.XmlReflectionMember>类和直接其属性。  
  
 请参阅<xref:System.Xml.Serialization.XmlMembersMapping>在成员对应于在 Web 服务描述语言 (WSDL) 文档中定义的一部分元素的情况下的类。 但请注意，使用 WSDL 操作与.NET Framework 方法之间的已包装绑定 (由<xref:System.Web.Services.Protocols.SoapParameterStyle.Wrapped>枚举成员)，方法参数和返回值未出现的 WSDL 文档中。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="OverrideIsNullable">
      <MemberSignature Language="C#" Value="public bool OverrideIsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OverrideIsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlReflectionMember.OverrideIsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property OverrideIsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OverrideIsNullable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示相应 XML 元素定义的 <c>isNullable</c> 属性的值是 <see langword="false" />。</summary>
        <value>
          如果要重写 <see cref="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" /> 属性，则为 <see langword="True" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此设置将替代<xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A>属性<xref:System.Xml.Serialization.XmlElementAttribute>属性。 设置为`true`SOAP 标头的类型时才都<xref:System.Web.Services.Protocols.SoapHeader>也不<xref:System.Web.Services.Protocols.SoapUnknownHeader>。  
  
 不需要使用<xref:System.Xml.Serialization.XmlReflectionMember>类和直接其属性。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SoapAttributes">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.SoapAttributes SoapAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.SoapAttributes SoapAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlReflectionMember.SoapAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapAttributes As SoapAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::SoapAttributes ^ SoapAttributes { System::Xml::Serialization::SoapAttributes ^ get(); void set(System::Xml::Serialization::SoapAttributes ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.SoapAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用应用于成员代码实体的 SOAP 相关特性的集合获取或设置 <see cref="T:System.Xml.Serialization.SoapAttributes" />。</summary>
        <value>包含对象的 <see cref="T:System.Xml.Serialization.SoapAttributes" />，这些对象表示应用于成员的 SOAP 特性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 服务方法成员代码实体可能是输入的参数、 输出参数、 返回类型、 输入的 SOAP 标头属性或输出 SOAP 标头属性。  
  
 不需要使用<xref:System.Xml.Serialization.XmlReflectionMember>类和直接其属性。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="XmlAttributes">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAttributes XmlAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAttributes XmlAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlReflectionMember.XmlAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlAttributes As XmlAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAttributes ^ XmlAttributes { System::Xml::Serialization::XmlAttributes ^ get(); void set(System::Xml::Serialization::XmlAttributes ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用应用于成员代码实体的 <see cref="T:System.Xml.Serialization.XmlAttributes" />相关属性的集合获取或设置 <see cref="T:System.Xml.Serialization.XmlSerializer" />。</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlAttributes" />，表示应用于成员代码的 XML 属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 服务方法成员代码实体可能是输入的参数、 输出参数、 返回类型、 输入的 SOAP 标头属性或输出 SOAP 标头属性。  
  
 不需要使用<xref:System.Xml.Serialization.XmlReflectionMember>类和直接其属性。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>