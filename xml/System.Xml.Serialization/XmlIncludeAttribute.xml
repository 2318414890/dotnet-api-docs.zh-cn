<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlIncludeAttribute.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b227c8faee0ed9352113563510ecbf1fdcfc59eb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b227c8faee0ed9352113563510ecbf1fdcfc59eb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlIncludeAttribute">
          <source>Allows the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> to recognize a type when it serializes or deserializes an object.</source>
          <target state="translated">允许 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 在它序列化或反序列化对象时识别类型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlIncludeAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIncludeAttribute&gt;</ph> when you call the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIncludeAttribute&gt;</ph>当调用<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph>或<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph>方法<ph id="ph4">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlIncludeAttribute">
          <source>When applying the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIncludeAttribute&gt;</ph>, specify the <ph id="ph2">&lt;xref:System.Type&gt;</ph> of the derived class.</source>
          <target state="translated">应用时<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIncludeAttribute&gt;</ph>，指定<ph id="ph2">&lt;xref:System.Type&gt;</ph>的派生类。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlIncludeAttribute">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializes objects that include both the base and the derived class, it can then recognize both object types.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>序列化对象，包含基类和派生的类中，它就可以识别这两种对象类型。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlIncludeAttribute">
          <source>You can use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIncludeAttribute&gt;</ph> to include derived classes in service description documents that are written in the Web Services Description Language (WSDL).</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIncludeAttribute&gt;</ph>要包含在 Web 服务描述语言 (WSDL) 中编写的服务说明文档中的派生的类。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlIncludeAttribute">
          <source>For example, if a method returns an <ph id="ph1">&lt;xref:System.Object&gt;</ph>, apply the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlIncludeAttribute&gt;</ph> to the method and specify the actual types to return.</source>
          <target state="translated">例如，如果某方法返回<ph id="ph1">&lt;xref:System.Object&gt;</ph>，应用<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlIncludeAttribute&gt;</ph>给该方法并指定要返回的实际类型。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlIncludeAttribute">
          <source>For more information on the WSDL, see "Web Services Description Language (WSDL) 1.1" at www.w3.org.</source>
          <target state="translated">WSDL 的详细信息，请参阅"Web 服务描述语言 (WSDL) 1.1"在 www.w3.org。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlIncludeAttribute">
          <source>The following example shows three classes, two of which inherit from the third.</source>
          <target state="translated">下面的示例演示三个类，其中两个继承自第三个。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlIncludeAttribute">
          <source>The example applies the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIncludeAttribute&gt;</ph> to a method that returns an instance of one of the derived classes.</source>
          <target state="translated">该示例将应用<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIncludeAttribute&gt;</ph>返回一个派生的类的实例的方法。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the object to include.</source>
          <target state="translated">要包含的对象的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
          <source>The following example shows three classes, two of which inherit from the third.</source>
          <target state="translated">下面的示例演示三个类，其中两个继承自第三个。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
          <source>The example applies the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIncludeAttribute&gt;</ph> to a method that returns an instance of one of the two derived classes.</source>
          <target state="translated">该示例将应用<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIncludeAttribute&gt;</ph>的方法的返回实例的两种状态之一派生类。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIncludeAttribute.Type%2A&gt;</ph> property to the type of the returned object.</source>
          <target state="translated">该示例设置<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIncludeAttribute.Type%2A&gt;</ph>属性返回的对象的类型。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
          <source>Gets or sets the type of the object to include.</source>
          <target state="translated">获取或设置要包含的对象的类型。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the object to include.</source>
          <target state="translated">要包含的对象的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
          <source>The following example defines a class named <ph id="ph1">`Group`</ph>, which contains a field named <ph id="ph2">`Employees`</ph> that returns an array of <ph id="ph3">`Employee`</ph> objects.</source>
          <target state="translated">下面的示例定义一个名为<ph id="ph1">`Group`</ph>，其中包含名为的字段<ph id="ph2">`Employees`</ph>返回的数组<ph id="ph3">`Employee`</ph>对象。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
          <source>The example derives the <ph id="ph1">`Manager`</ph> class from the <ph id="ph2">`Employee`</ph> class, and applies the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlIncludeAttribute&gt;</ph> to the <ph id="ph4">`Employee`</ph> class.</source>
          <target state="translated">该示例从<ph id="ph1">`Manager`</ph>类<ph id="ph2">`Employee`</ph>类，并将应用<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlIncludeAttribute&gt;</ph>到<ph id="ph4">`Employee`</ph>类。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
          <source>When the example creates a <ph id="ph1">`Group`</ph> object, it inserts a <ph id="ph2">`Manager`</ph> object into the <ph id="ph3">`Employee`</ph> array.</source>
          <target state="translated">当该示例创建<ph id="ph1">`Group`</ph>对象，则会插入<ph id="ph2">`Manager`</ph>对象插入<ph id="ph3">`Employee`</ph>数组。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
          <source>Lastly, the example serializes the <ph id="ph1">`Group`</ph> object.</source>
          <target state="translated">最后，该示例的序列化<ph id="ph1">`Group`</ph>对象。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>