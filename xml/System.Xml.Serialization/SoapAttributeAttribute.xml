<Type Name="SoapAttributeAttribute" FullName="System.Xml.Serialization.SoapAttributeAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fbb753fc6a4da5d301a566c79035087fd1f3c37f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36440580" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SoapAttributeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapAttributeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapAttributeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapAttributeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapAttributeAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type SoapAttributeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifies that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize the class member as an encoded SOAP attribute.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapAttributeAttribute>类属于一系列属性，用于控制如何<xref:System.Xml.Serialization.XmlSerializer>序列化或反序列化对象作为编码的 SOAP XML。 结果 XML 符合万维网联合会 (www.w3.org) 文档，"简单对象访问协议 (SOAP) 1.1"的第 5 节。 类似的属性的完整列表，请参阅[属性，控制编码 SOAP 序列化](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md)。  
  
 要序列化作为编码 SOAP 消息的对象，您必须先构造<xref:System.Xml.Serialization.XmlSerializer>使用<xref:System.Xml.Serialization.XmlTypeMapping>使用创建<xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A>方法<xref:System.Xml.Serialization.SoapReflectionImporter>类。  
  
 应用<xref:System.Xml.Serialization.SoapAttributeAttribute>到公共字段，以指定<xref:System.Xml.Serialization.XmlSerializer>序列化为 XML 特性字段。 你可以通过设置指定该属性的替代名称<xref:System.Xml.Serialization.SoapAttributeAttribute.AttributeName%2A>属性。 设置<xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A>如果特性必须提供特定的 XML 架构定义语言 (XSD) 数据类型。 如果该属性属于特定 XML 命名空间，设置<xref:System.Xml.Serialization.SoapAttributeAttribute.Namespace%2A>属性。  
  
 有关使用属性的详细信息，请参阅[属性](~/docs/standard/attributes/index.md)  
  
> [!NOTE]
>  你可以使用 word`SoapAttribute`中你的代码而不是较长<xref:System.Xml.Serialization.SoapAttributeAttribute>。  
  
   
  
## Examples  
 下面的示例序列化类，其中包含几个字段到<xref:System.Xml.Serialization.SoapAttributeAttribute>应用。  
  
 [!code-cpp[SoapAttribute#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttribute/CPP/soapattribute.cpp#1)]
 [!code-csharp[SoapAttribute#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttribute/CS/soapattribute.cs#1)]
 [!code-vb[SoapAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttribute/VB/soapattribute.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="T:System.Xml.Serialization.SoapAttributeOverrides" />
    <altmember cref="P:System.Xml.Serialization.SoapAttributes.SoapAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapAttributeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapAttributeAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数创建<xref:System.Xml.Serialization.SoapAttributeAttribute>当你重写类成员的序列化。 创建<xref:System.Xml.Serialization.SoapAttributeAttribute>、 设置其属性，并将该对象设置为<xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A>属性<xref:System.Xml.Serialization.SoapAttributes>对象。 有关更多详细信息，请参阅<xref:System.Xml.Serialization.SoapAttributeOverrides>类概述。  
  
   
  
## Examples  
 下面的示例创建一个新<xref:System.Xml.Serialization.SoapAttributeAttribute>用于重写的字段的序列。 在创建后<xref:System.Xml.Serialization.SoapAttributeAttribute>并设置其属性，该对象设置为<xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A>属性<xref:System.Xml.Serialization.SoapAttributes>。 <xref:System.Xml.Serialization.SoapAttributes>随后添加到<xref:System.Xml.Serialization.SoapAttributeOverrides>用于创建<xref:System.Xml.Serialization.XmlSerializer>。  
  
 [!code-cpp[SoapAttributeAttributeEx2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributeAttributeEx2/CPP/soapattributeex2.cpp#1)]
 [!code-csharp[SoapAttributeAttributeEx2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributeAttributeEx2/CS/soapattributeex2.cs#1)]
 [!code-vb[SoapAttributeAttributeEx2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributeAttributeEx2/VB/soapattributeex2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapAttributeAttribute (string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attributeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapAttributeAttribute(System::String ^ attributeName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapAttributeAttribute : string -&gt; System.Xml.Serialization.SoapAttributeAttribute" Usage="new System.Xml.Serialization.SoapAttributeAttribute attributeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeName">The name of the XML attribute.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> class using the specified value as the name of the XML attribute.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例序列化类，其中包含几个字段到<xref:System.Xml.Serialization.SoapAttributeAttribute>应用。  
  
 [!code-cpp[SoapAttribute#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttribute/CPP/soapattribute.cpp#1)]
 [!code-csharp[SoapAttribute#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttribute/CS/soapattribute.cs#1)]
 [!code-vb[SoapAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttribute/VB/soapattribute.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeName">
      <MemberSignature Language="C#" Value="public string AttributeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AttributeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapAttributeAttribute.AttributeName" />
      <MemberSignature Language="VB.NET" Value="Public Property AttributeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AttributeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AttributeName : string with get, set" Usage="System.Xml.Serialization.SoapAttributeAttribute.AttributeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the XML attribute generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
        <value>XML 属性的名称。 默认值是成员标识符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Xml.Serialization.SoapAttributeAttribute.AttributeName%2A>属性指定的 XML 属性名称时无法使用默认值。 例如，如果 XML 属性名称作为成员标识符无效，使用标识符，而设置的有效名称<xref:System.Xml.Serialization.SoapAttributeAttribute.AttributeName%2A>为无效名称。  
  
   
  
## Examples  
 下面的示例序列化类，其中包含几个字段到<xref:System.Xml.Serialization.SoapAttributeAttribute>应用。 <xref:System.Xml.Serialization.SoapAttributeAttribute.AttributeName%2A>属性设置为`Today`字段。  
  
 [!code-cpp[SoapAttribute#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttribute/CPP/soapattribute.cpp#1)]
 [!code-csharp[SoapAttribute#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttribute/CS/soapattribute.cs#1)]
 [!code-vb[SoapAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttribute/VB/soapattribute.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapAttributeAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.SoapAttributeAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the XML Schema definition language (XSD) data type of the SOAP attribute generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
        <value>XML 架构数据类型，按照万维网联合会 (www.w3.org) 文档定义名为"XML 架构第 2： 数据类型"。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表列出了 XML 架构的简单数据类型及其.net 等效项。  
  
 XML 架构`base64Binary`和`hexBinary`数据类型使用的数组<xref:System.Byte>结构，并应用<xref:System.Xml.Serialization.SoapAttributeAttribute>与<xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A>设置为"base64Binary"或"hexBinary"根据需要。 XML 架构`time`和`date`数据类型，使用<xref:System.DateTime>键入并应用<xref:System.Xml.Serialization.SoapAttributeAttribute>与<xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A>设置为"日期"或"时间"。  
  
 对于每个 XML 架构数据类型映射到一个字符串，将应用于<xref:System.Xml.Serialization.SoapAttributeAttribute>与其<xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A>属性设置为 XML 架构数据类型。 请注意这不会更改的序列化格式，仅该成员的架构。  
  
> [!NOTE]
>  因此你必须将其设置完全符合 XML 架构数据类型之一，该属性是区分大小写。  
  
> [!NOTE]
>  将二进制数据作为 XML 传递元素会更加高效，然后将其传递为 XML 特性。  
  
 有关 XML 架构数据类型的详细信息，请参阅名为"XML 架构第 2： 数据类型"万维网联合会 (www.w3.org) 文档。  
  
|XSD 数据类型|.NET 数据类型|  
|-------------------|--------------------|  
|anyURI|<xref:System.String>|  
|base64Binary|数组<xref:System.Byte>对象|  
|boolean|<xref:System.Boolean>|  
|byte|<xref:System.SByte>|  
|date|<xref:System.DateTime>|  
|dateTime|<xref:System.DateTime>|  
|decimal|<xref:System.Decimal>|  
|double|<xref:System.Double>|  
|ENTITY|<xref:System.String>|  
|实体|<xref:System.String>|  
|float|<xref:System.Single>|  
|gDay|<xref:System.String>|  
|gMonth|<xref:System.String>|  
|gMonthDay|<xref:System.String>|  
|gYear|<xref:System.String>|  
|gYearMonth|<xref:System.String>|  
|hexBinary|数组<xref:System.Byte>对象|  
|Id|<xref:System.String>|  
|IDREF|<xref:System.String>|  
|IDREFS|<xref:System.String>|  
|int|<xref:System.Int32>|  
|整数|<xref:System.String>|  
|语言|<xref:System.String>|  
|long|<xref:System.Int64>|  
|name|<xref:System.String>|  
|NCName|<xref:System.String>|  
|negativeInteger|<xref:System.String>|  
|NMTOKEN|<xref:System.String>|  
|NMTOKENS|<xref:System.String>|  
|normalizedString|<xref:System.String>|  
|nonNegativeInteger|<xref:System.String>|  
|nonPositiveInteger|<xref:System.String>|  
|NOTATION|<xref:System.String>|  
|positiveInteger|<xref:System.String>|  
|QName|<xref:System.Xml.XmlQualifiedName>|  
|持续时间|<xref:System.String>|  
|字符串|<xref:System.String>|  
|short|<xref:System.Int16>|  
|时间|<xref:System.DateTime>|  
|token|<xref:System.String>|  
|unsignedByte|<xref:System.Byte>|  
|unsignedInt|<xref:System.UInt32>|  
|unsignedLong|<xref:System.UInt64>|  
|unsignedShort|<xref:System.UInt16>|  
  
   
  
## Examples  
 下面的示例序列化类，其中包含几个字段到<xref:System.Xml.Serialization.SoapAttributeAttribute>应用。 <xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A>属性设置为`GroupNumber`和`Today`字段。  
  
 [!code-cpp[SoapAttribute#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttribute/CPP/soapattribute.cpp#1)]
 [!code-csharp[SoapAttribute#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttribute/CS/soapattribute.cs#1)]
 [!code-vb[SoapAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttribute/VB/soapattribute.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">The XML Schema data type you have specified cannot be mapped to the .NET data type.</exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapAttributeAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.SoapAttributeAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the XML namespace of the XML attribute.</summary>
        <value>XML 属性的 XML 命名空间。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A>属性符合万维网联合会 (www.w3.org) 规范"命名空间中 XML"。  
  
 若要创建与前缀关联的命名空间，必须创建<xref:System.Xml.Serialization.XmlSerializerNamespaces>，包含的命名空间和前缀的 XML 文档中使用。 每个设置的命名空间<xref:System.Xml.Serialization.XmlAttributeAttribute>必须与一种中的命名空间<xref:System.Xml.Serialization.XmlSerializerNamespaces>。 当<xref:System.Xml.Serialization.XmlSerializer>生成 XML 代码中，它正确加上前缀每个属性名称。  
  
   
  
## Examples  
 下面的示例序列化类，其中包含几个字段到<xref:System.Xml.Serialization.SoapAttributeAttribute>应用。 <xref:System.Xml.Serialization.SoapAttributeAttribute.Namespace%2A>属性设置为`GroupName`字段。  
  
 [!code-cpp[SoapAttribute#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttribute/CPP/soapattribute.cpp#1)]
 [!code-csharp[SoapAttribute#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttribute/CS/soapattribute.cs#1)]
 [!code-vb[SoapAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttribute/VB/soapattribute.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>