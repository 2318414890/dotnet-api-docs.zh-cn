<Type Name="SoapIncludeAttribute" FullName="System.Xml.Serialization.SoapIncludeAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dc60e1bad079842bfaacd6b28cf2a7286fc29d23" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30719711" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SoapIncludeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapIncludeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapIncludeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapIncludeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapIncludeAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface | System.AttributeTargets.Method | System.AttributeTargets.Struct, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>允许 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 在将对象序列化或反序列化为编码的 SOAP XML 时识别类型。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapIncludeAttribute>类属于一系列属性，用于控制如何<xref:System.Xml.Serialization.XmlSerializer>序列化或反序列化对象作为编码的 SOAP XML。 结果 XML 符合万维网联合会 (www.w3.org) 文档，"简单对象访问协议 (SOAP) 1.1"的第 5 节。 类似的属性的完整列表，请参阅[属性，控制编码 SOAP 序列化](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md)。  
  
 要序列化作为编码 SOAP 消息的对象，您必须先构造<xref:System.Xml.Serialization.XmlSerializer>使用<xref:System.Xml.Serialization.XmlTypeMapping>使用创建<xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A>方法<xref:System.Xml.Serialization.SoapReflectionImporter>类。  
  
 应用时<xref:System.Xml.Serialization.SoapIncludeAttribute>，指定<xref:System.Type>的派生类。 当<xref:System.Xml.Serialization.XmlSerializer>序列化对象，包含基类和派生的类中，它就可以识别这两种对象类型。  
  
 你可以使用<xref:System.Xml.Serialization.SoapIncludeAttribute>要包含在 Web 服务描述语言 (WSDL) 中编写的服务说明文档中的派生的类。 例如，如果某方法返回<xref:System.Object>，应用<xref:System.Xml.Serialization.SoapIncludeAttribute>给该方法并指定应返回的实际类型。  
  
 有关 WSDL 的详细信息，请参阅万维网联合会 (www.w3.org) 规范中，"Web 服务描述语言 (WSDL) 1.1"。  
  
 有关使用属性的详细信息，请参阅[属性](~/docs/standard/attributes/index.md)。  
  
   
  
## Examples  
 下面的示例应用<xref:System.Xml.Serialization.SoapIncludeAttribute>指向 XML Web service 方法的两次。 该方法返回类型的对象`Vehicle`（基类）。 <xref:System.Xml.Serialization.SoapIncludeAttribute>允许该方法以返回派生自的类的实例`Vehicle`类。  
  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapIncludeAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapIncludeAttribute(Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">要包含的对象的类型。</param>
        <summary>使用指定的类型初始化 <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 应用的多个实例<xref:System.Xml.Serialization.SoapIncludeAttribute>到字段或属性返回的对象，其中一个数组<xref:System.Collections.ArrayList>，包含对象或可以返回多个类型的对象的集合。 设置<xref:System.Xml.Serialization.SoapIncludeAttribute.Type%2A>的所需的字段或属性以包含每个类型的属性。  
  
   
  
## Examples  
 下面的示例应用<xref:System.Xml.Serialization.SoapIncludeAttribute>两次到 XML Web services 方法。 该方法返回类型的对象`Vehicle`（基类）。 <xref:System.Xml.Serialization.SoapIncludeAttribute>允许该方法以返回派生自的类的实例`Vehicle`类。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapIncludeAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在序列化或反序列化对象时应使用的对象的类型。</summary>
        <value>要包含的对象的类型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 应用的多个实例<xref:System.Xml.Serialization.SoapIncludeAttribute>到字段或属性返回的对象，其中一个数组<xref:System.Collections.ArrayList>，包含对象或可以返回多个类型的对象的集合。 设置<xref:System.Xml.Serialization.SoapIncludeAttribute.Type%2A>的所需的字段或属性以包含每个类型的属性。  
  
   
  
## Examples  
 下面的示例应用<xref:System.Xml.Serialization.SoapIncludeAttribute>两次到 XML Web services 方法。 该方法返回类型的对象`Vehicle`（基类）。 <xref:System.Xml.Serialization.SoapIncludeAttribute>允许该方法以返回派生自的类的实例`Vehicle`类。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>