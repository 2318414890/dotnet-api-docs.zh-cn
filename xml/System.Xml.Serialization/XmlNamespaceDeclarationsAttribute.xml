<Type Name="XmlNamespaceDeclarationsAttribute" FullName="System.Xml.Serialization.XmlNamespaceDeclarationsAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="91e18a62eeee651bd007ceba2bd0752175048039" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30719341" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlNamespaceDeclarationsAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlNamespaceDeclarationsAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlNamespaceDeclarationsAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNamespaceDeclarationsAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="83131-101">指定目标属性、参数、返回值或类成员包含与 XML 文档中使用的命名空间相关联的前缀。</span>
      <span class="sxs-lookup">
        <span data-stu-id="83131-101">Specifies that the target property, parameter, return value, or class member contains prefixes associated with namespaces that are used within an XML document.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83131-102"><xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute>属性只能应用一次类中的字段或属性返回到<xref:System.Xml.Serialization.XmlSerializerNamespaces>对象。</span><span class="sxs-lookup"><span data-stu-id="83131-102">The <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute> attribute can only be applied once in a class to a field or property that returns an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object.</span></span>  
  
 <span data-ttu-id="83131-103"><xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute>使你可以存储的前缀以及关联的命名空间，使用 XML 文档中。</span><span class="sxs-lookup"><span data-stu-id="83131-103">The <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute> allows you to store the prefixes, and the associated namespaces, used in an XML document.</span></span> <span data-ttu-id="83131-104">例如，一个常见用法的属性是存储 XPath 数据，因为它由万维网联合会 (www.w3.org) 文档定义名为"XML 语言 (XPath) 1.0 版"。</span><span class="sxs-lookup"><span data-stu-id="83131-104">For example, one common usage of the attribute is to store XPath data, as it is defined by the World Wide Web Consortium (www.w3.org) document named "XML Language (XPath) Version 1.0".</span></span> <span data-ttu-id="83131-105">简单地说，XPath 是一个字符串，包含许多命名空间前缀和本地名称，以及某些其他语法。</span><span class="sxs-lookup"><span data-stu-id="83131-105">In brief, an XPath is a string that contains many namespace prefixes and local names, along with some other syntax.</span></span>  
  
 <span data-ttu-id="83131-106">XPath 语言可用于将包含路径，并使用 XML 文档中的前缀的前缀关联。</span><span class="sxs-lookup"><span data-stu-id="83131-106">The XPath language allows for the association of a prefix with a path, and using the prefix within the XML document.</span></span> <span data-ttu-id="83131-107">例如，名为"选择"下面的 XML 文档包含与特定 URI 关联的前缀 ("cal") (http://www.cohowinery.com/calendar/)。</span><span class="sxs-lookup"><span data-stu-id="83131-107">For example, the following XML document named "select" contains a prefix ("cal") associated with a specific URI (http://www.cohowinery.com/calendar/).</span></span> <span data-ttu-id="83131-108">该元素包含一个名为"路径"，其中包含 XPath 特性。</span><span class="sxs-lookup"><span data-stu-id="83131-108">The element contains an attribute named "path" that contains the XPath.</span></span>  
  
```  
<select xmlns:cal ="http://www.cohowinery.com/calendar/" path="cal:appointments/@startTime" />  
```  
  
 <span data-ttu-id="83131-109">此架构可能是：</span><span class="sxs-lookup"><span data-stu-id="83131-109">The schema for this might be:</span></span>  
  
```  
<element name="select">  
   <complexType>  
      <simpleContent>  
         <attribute name="path" />  
      </simpleContent>  
   </complexType>  
</element>  
```  
  
 <span data-ttu-id="83131-110">而无需<xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute>，前缀和命名空间之间的关联将丢失。</span><span class="sxs-lookup"><span data-stu-id="83131-110">Without the <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute>, the association between the prefix and the namespace is lost.</span></span>  
  
 <span data-ttu-id="83131-111">若要保留的前缀和命名空间 URI 之间的关联，添加成员返回<xref:System.Xml.Serialization.XmlSerializerNamespaces>对象并应用<xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute>属性设为该成员，如下面的 C# 和 Visual Basic 代码中所示：</span><span class="sxs-lookup"><span data-stu-id="83131-111">To retain the association between the prefix and the namespace URI, add a member that returns an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object and apply the <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute> attribute to the member, as shown in the following C# and Visual Basic code:</span></span>  
  
```  
// C#  
public class Select {  
  [XmlAttribute] public string path;  
  [XmlNamespaceDeclarations] public XmlSerializerNamespaces xmlns;  
}  
' Visual Basic  
Public Class Select  
   <XmlAttribute> Public path As String  
   <XmlNamespaceDeclarations> Public xmlns As XmlSerializerNamespaces  
End Class  
```  
  
 <span data-ttu-id="83131-112">序列化时，生成的 XML 文档的架构包含名为的 XML 架构定义 (XSD) 元素`appinfo`。</span><span class="sxs-lookup"><span data-stu-id="83131-112">When serialized, the schema for the generated XML document contains the XML Schema definition (XSD) element named `appinfo`.</span></span> <span data-ttu-id="83131-113">进一步的元素包含名为的元数据元素`keepNamespaceDeclarations`，设置为包含的命名空间声明的成员的名称。</span><span class="sxs-lookup"><span data-stu-id="83131-113">The element further contains a metadata element named `keepNamespaceDeclarations`, set to the name of the member that contains the namespace declarations.</span></span> <span data-ttu-id="83131-114">以下 XML 片段显示的架构：</span><span class="sxs-lookup"><span data-stu-id="83131-114">The following XML fragment shows the schema:</span></span>  
  
```  
<xs:element name="select">  
   <xs:complexType>  
      <xs:annotation>   
         <xs:appinfo>  
          <keepNamespaceDeclarations>xmlns</keepNamespaceDeclarations>  
         </xs:appinfo>   
      </xs:annotation>   
      <xs:simpleContent>  
         <xs:attribute name="path" />  
      </xs:simpleContent>  
   </xs:complexType>  
</xs:element>  
```  
  
 <span data-ttu-id="83131-115">在反序列化，`xmlns`字段包含<xref:System.Xml.Serialization.XmlSerializerNamespaces>对象，其中包含所有命名空间前缀定义。</span><span class="sxs-lookup"><span data-stu-id="83131-115">On deserialization, the `xmlns` field contains an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object that contains all namespace prefix definitions.</span></span>  
  
 <span data-ttu-id="83131-116">在序列化，用户可以添加到的前缀和命名空间对<xref:System.Xml.Serialization.XmlSerializerNamespaces>对象使用<xref:System.Xml.Serialization.XmlSerializerNamespaces.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="83131-116">On serialization, the user can add prefix-namespace pairs to the <xref:System.Xml.Serialization.XmlSerializerNamespaces> object using the <xref:System.Xml.Serialization.XmlSerializerNamespaces.Add%2A> method.</span></span> <span data-ttu-id="83131-117">以下 C# 和 Visual Basic 代码所示：</span><span class="sxs-lookup"><span data-stu-id="83131-117">This is shown in the following C# and Visual Basic code:</span></span>  
  
```  
// C#  
using System;  
using System.IO;  
using System.Xml.Serialization;  
[XmlRoot("select")]  
public class Select {  
   [XmlAttribute]  
   public string xpath;  
   [XmlNamespaceDeclarations]  
   public XmlSerializerNamespaces xmlns;  
}  
public class Test {  
   public static void Main(string[] args) {  
      Select mySelect = new Select();  
      mySelect.xpath = "myNS:ref/@common:y";  
      mySelect.xmlns = new XmlSerializerNamespaces();  
      mySelect.xmlns.Add("MyNS", "myNS.tempuri.org");  
      mySelect.xmlns.Add("common", "common.tempuri.org");  
      XmlSerializer ser = new XmlSerializer(typeof(Select));  
      ser.Serialize(Console.Out, mySelect);  
   }  
}  
// Output:  
// <?xml version="1.0" encoding="IBM437"?>  
// <select xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
// xmlns:common="common.tempuri.org" xmlns:MyNS="myNS.tempuri.org" xpath="myNS:ref/@common:y" />  
' Visual Basic  
Imports System  
Imports System.IO  
Imports System.Xml.Serialization  
<XmlRoot("select")> _  
Public Class SelectPath  
   <XmlAttribute> _  
   Public xpath As String   
   <XmlNamespaceDeclarations> _  
   public xmlns As XmlSerializerNamespaces   
End Class  
Public Class Test   
   Public Shared Sub Main()   
      Dim mySelect As SelectPath = New SelectPath()  
      mySelect.xpath = "myNS:ref/@common:y"  
      mySelect.xmlns = New XmlSerializerNamespaces()  
      mySelect.xmlns.Add("MyNS", "myNS.tempuri.org")  
      mySelect.xmlns.Add("common", "common.tempuri.org")  
      Dim ser As XmlSerializer = New XmlSerializer(mySelect.GetType)  
      ser.Serialize(Console.Out, mySelect)  
   End Sub  
End Class  
'Output:  
' <?xml version="1.0" encoding="IBM437"?>  
' <select xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
' xmlns:common="common.tempuri.org" xmlns:MyNS="myNS.tempuri.org" xpath="myNS:ref/@common:y" />  
```  
  
 <span data-ttu-id="83131-118">另请注意，向其应用该属性的成员包含属于由类定义的 XML 元素的前缀和命名空间对。</span><span class="sxs-lookup"><span data-stu-id="83131-118">Also note that the member to which the attribute is applied contains only the prefix-namespace pairs that belong to the XML element defined by the class.</span></span> <span data-ttu-id="83131-119">例如，在下面的 XML 文档，该前缀对"cal"仅捕获后，但不是"x"前缀。</span><span class="sxs-lookup"><span data-stu-id="83131-119">For example, in the following XML document, only the prefix pair "cal" is captured, but not the "x" prefix.</span></span> <span data-ttu-id="83131-120">若要获取该数据，将添加一个具有成员<xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute>表示的类到`root`元素。</span><span class="sxs-lookup"><span data-stu-id="83131-120">To get that data, add a member with the <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute> to the class that represents the `root` element.</span></span>  
  
```  
<?xml version="1.0"?>  
<x:root xmlns:x="http://www.cohowinery.com/x/">  
  <x:select xmlns:cal="http://www.cohowinery.com/calendar/" path="cal:appointments/@cal:startTime" />  
</x:root>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlNamespaceDeclarationsAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlNamespaceDeclarationsAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="83131-121">初始化 <see cref="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83131-121">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83131-122"><xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute>只能应用到的目标，返回<xref:System.Xml.Serialization.XmlSerializerNamespaces>对象。</span><span class="sxs-lookup"><span data-stu-id="83131-122">The <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute> can only be applied to a target that returns an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>