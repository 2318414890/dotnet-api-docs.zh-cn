<Type Name="XmlArrayItemAttribute" FullName="System.Xml.Serialization.XmlArrayItemAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="91439c735fd0ac54113bf71984159917e11e9291" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36439917" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlArrayItemAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlArrayItemAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlArrayItemAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlArrayItemAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlArrayItemAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlArrayItemAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="84495-101">表示指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可以放置在序列化数组中的派生类型的特性。</span>
      <span class="sxs-lookup">
        <span data-stu-id="84495-101">Represents an attribute that specifies the derived types that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> can place in a serialized array.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84495-102"><xref:System.Xml.Serialization.XmlArrayItemAttribute>属于一系列属性，用于控制如何<xref:System.Xml.Serialization.XmlSerializer>序列化或反序列化对象。</span><span class="sxs-lookup"><span data-stu-id="84495-102">The <xref:System.Xml.Serialization.XmlArrayItemAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object.</span></span> <span data-ttu-id="84495-103">类似的属性的完整列表，请参阅[属性，控制 XML 序列化](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="84495-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="84495-104">你可以将应用<xref:System.Xml.Serialization.XmlArrayItemAttribute>返回一个数组，或提供对一个访问权限的任何公共读/写成员。</span><span class="sxs-lookup"><span data-stu-id="84495-104">You can apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to any public read/write member that returns an array, or provides access to one.</span></span> <span data-ttu-id="84495-105">例如，返回的对象，一个集合，数组的字段<xref:System.Collections.ArrayList>，或实现的任何类<xref:System.Collections.IEnumerable>接口。</span><span class="sxs-lookup"><span data-stu-id="84495-105">For example, a field that returns an array of objects, a collection, an <xref:System.Collections.ArrayList>, or any class that implements the <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 <span data-ttu-id="84495-106"><xref:System.Xml.Serialization.XmlArrayItemAttribute>支持多态性-换而言之，它允许<xref:System.Xml.Serialization.XmlSerializer>将派生的对象添加到数组。</span><span class="sxs-lookup"><span data-stu-id="84495-106">The <xref:System.Xml.Serialization.XmlArrayItemAttribute> supports polymorphism--in other words, it allows the <xref:System.Xml.Serialization.XmlSerializer> to add derived objects to an array.</span></span> <span data-ttu-id="84495-107">例如，假设一个名为类`Mammal`派生自的基类名为`Animal`。</span><span class="sxs-lookup"><span data-stu-id="84495-107">For example, suppose a class named `Mammal` is derived from a base class named `Animal`.</span></span> <span data-ttu-id="84495-108">此外，假设一个名为`MyAnimals`包含返回的数组的字段`Animal`对象。</span><span class="sxs-lookup"><span data-stu-id="84495-108">Further suppose that a class named `MyAnimals` contains a field that returns an array of `Animal` objects.</span></span> <span data-ttu-id="84495-109">若要允许<xref:System.Xml.Serialization.XmlSerializer>要序列化同时`Animal`和`Mammal`类型，请应用<xref:System.Xml.Serialization.XmlArrayItemAttribute>于字段两次，每次请指定两个可接受的类型之一。</span><span class="sxs-lookup"><span data-stu-id="84495-109">To allow the <xref:System.Xml.Serialization.XmlSerializer> to serialize both the `Animal` and `Mammal` type, apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field twice, each time specifying one of the two acceptable types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="84495-110">你可以将应用的多个实例<xref:System.Xml.Serialization.XmlArrayItemAttribute>或<xref:System.Xml.Serialization.XmlElementAttribute>以指定可以插入到数组的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="84495-110">You can apply multiple instances of the <xref:System.Xml.Serialization.XmlArrayItemAttribute> or <xref:System.Xml.Serialization.XmlElementAttribute> to specify types of objects that can be inserted into the array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="84495-111">不支持的序列化的字段或属性返回的接口的数组。</span><span class="sxs-lookup"><span data-stu-id="84495-111">The serialization of a field or property that returns an interface or array of interfaces is not supported.</span></span>  
  
 <span data-ttu-id="84495-112">有关使用属性的详细信息，请参阅[属性](~/docs/standard/attributes/index.md)。</span><span class="sxs-lookup"><span data-stu-id="84495-112">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="84495-113">你可以使用 word`XmlArrayItem`中你的代码而不是较长<xref:System.Xml.Serialization.XmlArrayItemAttribute>。</span><span class="sxs-lookup"><span data-stu-id="84495-113">You can use the word `XmlArrayItem` in your code instead of the longer <xref:System.Xml.Serialization.XmlArrayItemAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84495-114">下面的示例序列化类名为`Group`，其中包含名为的字段`Employees`返回的数组`Employee`对象。</span><span class="sxs-lookup"><span data-stu-id="84495-114">The following example serializes a class named `Group` that contains a field named `Employees` that returns an array of `Employee` objects.</span></span> <span data-ttu-id="84495-115">该示例将应用<xref:System.Xml.Serialization.XmlArrayItemAttribute>到字段，从而指示<xref:System.Xml.Serialization.XmlSerializer>它可以插入的两个基类的对象 (`Employee`) 类型和派生的类类型 (`Manager`) 到序列化的数组。</span><span class="sxs-lookup"><span data-stu-id="84495-115">The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, thereby instructing the <xref:System.Xml.Serialization.XmlSerializer> that it can insert objects of both the base class (`Employee`) type and derived class type (`Manager`) into the serialized array.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlArrayAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="84495-116">初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84495-116">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="84495-117">初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84495-117">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="84495-118">下面的示例序列化类名为`Transportation`，其中包含名为的字段`MyVehicles`返回的数组`Vehicle`对象。</span><span class="sxs-lookup"><span data-stu-id="84495-118">The following example serializes a class named `Transportation` that contains a field named `MyVehicles` that returns an array of `Vehicle` objects.</span></span> <span data-ttu-id="84495-119">该示例将应用<xref:System.Xml.Serialization.XmlArrayItemAttribute>到字段，允许<xref:System.Xml.Serialization.XmlSerializer>要插入的实例`Car`类，该类派生自`Vehicle`类，到数组。</span><span class="sxs-lookup"><span data-stu-id="84495-119">The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, allowing the <xref:System.Xml.Serialization.XmlSerializer> to insert instances of the `Car` class, which is derived from the `Vehicle` class, into the array.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlArrayItemAttribute : string -&gt; System.Xml.Serialization.XmlArrayItemAttribute" Usage="new System.Xml.Serialization.XmlArrayItemAttribute elementName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="84495-120">XML 元素的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84495-120">The name of the XML element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84495-121">初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 类的新实例，并指定在 XML 文档中生成的 XML 元素的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84495-121">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class and specifies the name of the XML element generated in the XML document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84495-122">此重载设置<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="84495-122">This overload sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property.</span></span>  
  
 <span data-ttu-id="84495-123">如果你希望生成的 XML 元素，不同于该成员的标识符的名称，请使用此重载。</span><span class="sxs-lookup"><span data-stu-id="84495-123">Use this overload if you want the name of the generated XML element to differ from the member's identifier.</span></span>  
  
 <span data-ttu-id="84495-124">包括命名空间的 XML 文档可以包含元素名称的多个的版本。</span><span class="sxs-lookup"><span data-stu-id="84495-124">An XML document that includes namespaces can contain more than one version of an element name.</span></span> <span data-ttu-id="84495-125">有关详细信息，请参见 <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="84495-125">For details, see the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84495-126">下面的示例序列化类名为`Transportation`，其中包含名为的字段`MyVehicles`返回的数组`Vehicle`对象。</span><span class="sxs-lookup"><span data-stu-id="84495-126">The following example serializes a class named `Transportation` that contains a field named `MyVehicles` that returns an array of `Vehicle` objects.</span></span> <span data-ttu-id="84495-127">该示例将应用<xref:System.Xml.Serialization.XmlArrayItemAttribute>到字段，允许<xref:System.Xml.Serialization.XmlSerializer>要插入的实例`Car`类，该类派生自`Vehicle`类，到数组。</span><span class="sxs-lookup"><span data-stu-id="84495-127">The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, allowing the <xref:System.Xml.Serialization.XmlSerializer> to insert instances of the `Car` class, which is derived from the `Vehicle` class, into the array.</span></span> <span data-ttu-id="84495-128">在应用特性时，该示例设置<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>属性使用`elementName`参数。</span><span class="sxs-lookup"><span data-stu-id="84495-128">While applying the attribute, the example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property using the `elementName` parameter.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlArrayItemAttribute : Type -&gt; System.Xml.Serialization.XmlArrayItemAttribute" Usage="new System.Xml.Serialization.XmlArrayItemAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="84495-129">要序列化的对象的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84495-129">The <see cref="T:System.Type" /> of the object to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84495-130">初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 类的新实例，并指定可插入到序列化数组中的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84495-130">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class and specifies the <see cref="T:System.Type" /> that can be inserted into the serialized array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="84495-131">下面的示例序列化类名为`Transportation`，其中包含名为的字段`MyVehicles`返回的数组`Vehicle`对象。</span><span class="sxs-lookup"><span data-stu-id="84495-131">The following example serializes a class named `Transportation` that contains a field named `MyVehicles` that returns an array of `Vehicle` objects.</span></span> <span data-ttu-id="84495-132">该示例将应用<xref:System.Xml.Serialization.XmlArrayItemAttribute>到字段，允许<xref:System.Xml.Serialization.XmlSerializer>要插入的实例`Car`类，该类派生自`Vehicle`类，到数组。</span><span class="sxs-lookup"><span data-stu-id="84495-132">The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, allowing the <xref:System.Xml.Serialization.XmlSerializer> to insert instances of the `Car` class, which is derived from the `Vehicle` class, into the array.</span></span> <span data-ttu-id="84495-133">在应用特性时，该示例设置<xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A>属性使用`type`参数。</span><span class="sxs-lookup"><span data-stu-id="84495-133">While applying the attribute, the example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> property using the `type` parameter.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute (string elementName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute(System::String ^ elementName, Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlArrayItemAttribute : string * Type -&gt; System.Xml.Serialization.XmlArrayItemAttribute" Usage="new System.Xml.Serialization.XmlArrayItemAttribute (elementName, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="84495-134">XML 元素的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84495-134">The name of the XML element.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="84495-135">要序列化的对象的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84495-135">The <see cref="T:System.Type" /> of the object to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84495-136">初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 类的新实例，并指定在 XML 文档中生成的 XML 元素的名称，以及可插入到所生成的 XML 文档中的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84495-136">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class and specifies the name of the XML element generated in the XML document and the <see cref="T:System.Type" /> that can be inserted into the generated XML document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84495-137">此重载设置<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>和<xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="84495-137">This overload sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> and the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> properties.</span></span>  
  
 <span data-ttu-id="84495-138">如果你希望生成的 XML 元素，不同于该成员的标识符的名称，请使用此重载。</span><span class="sxs-lookup"><span data-stu-id="84495-138">Use this overload if you want the name of the generated XML element to differ from the member's identifier.</span></span>  
  
 <span data-ttu-id="84495-139">包括命名空间的 XML 文档可以包含元素名称的多个的版本。</span><span class="sxs-lookup"><span data-stu-id="84495-139">An XML document that includes namespaces can contain more than one version of an element name.</span></span> <span data-ttu-id="84495-140">有关详细信息，请参见 <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="84495-140">For details, see the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84495-141">下面的示例序列化类名为`Transportation`，其中包含名为的字段`MyVehicles`返回的数组`Vehicle`对象。</span><span class="sxs-lookup"><span data-stu-id="84495-141">The following example serializes a class named `Transportation` that contains a field named `MyVehicles` that returns an array of `Vehicle` objects.</span></span> <span data-ttu-id="84495-142">该示例将应用<xref:System.Xml.Serialization.XmlArrayItemAttribute>到字段，允许<xref:System.Xml.Serialization.XmlSerializer>要插入的实例`Car`类，该类派生自`Vehicle`类，到数组。</span><span class="sxs-lookup"><span data-stu-id="84495-142">The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, allowing the <xref:System.Xml.Serialization.XmlSerializer> to insert instances of the `Car` class, which is derived from the `Vehicle` class, into the array.</span></span> <span data-ttu-id="84495-143">在应用特性时，该示例设置<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>属性使用`elementName`参数，与<xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A>属性使用`type`参数。</span><span class="sxs-lookup"><span data-stu-id="84495-143">While applying the attribute, the example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property using the `elementName` parameter, and the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> property using the `type` parameter.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84495-144">获取或设置生成的 XML 元素的 XML 数据类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84495-144">Gets or sets the XML data type of the generated XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84495-145">“XML 架构定义”(XSD) 数据类型，定义见名为“XML 架构第 2 部分：数据类型”的“万维网联合会”(www.w3.org) 文档。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84495-145">An XML schema definition (XSD) data type, as defined by the World Wide Web Consortium (www.w3.org) document "XML Schema Part 2: DataTypes".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84495-146">下表列出了 XML 架构简单数据类型及其.NET 等效项。</span><span class="sxs-lookup"><span data-stu-id="84495-146">The following table lists the XML Schema simple data types with their .NET equivalents.</span></span>  
  
 <span data-ttu-id="84495-147">XML 架构`base64Binary`和`hexBinary`数据类型使用的数组<xref:System.Byte>对象，并应用<xref:System.Xml.Serialization.XmlArrayItemAttribute>与<xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A>属性设置为"base64Binary"或"hexBinary"根据需要。</span><span class="sxs-lookup"><span data-stu-id="84495-147">For the XML Schema `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> objects, and apply an <xref:System.Xml.Serialization.XmlArrayItemAttribute> with the <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> property set to "base64Binary" or "hexBinary", as appropriate.</span></span> <span data-ttu-id="84495-148">XML 架构`time`和`date`数据类型，使用<xref:System.DateTime>键入并应用<xref:System.Xml.Serialization.XmlArrayItemAttribute>与<xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A>设置为"日期"或"时间"。</span><span class="sxs-lookup"><span data-stu-id="84495-148">For the XML Schema `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute> with the <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> set to "date" or "time".</span></span>  
  
 <span data-ttu-id="84495-149">对于每种 XML 架构类型，映射到一个字符串，将应用于<xref:System.Xml.Serialization.XmlArrayItemAttribute>与其<xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A>属性设置为 XML 架构类型。</span><span class="sxs-lookup"><span data-stu-id="84495-149">For every XML Schema type that is mapped to a string, apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute> with its <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> property set to the XML Schema type.</span></span> <span data-ttu-id="84495-150">但是，这不会更改的序列化格式，仅该成员的架构。</span><span class="sxs-lookup"><span data-stu-id="84495-150">However, this does not change the serialization format, only the schema for the member.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="84495-151">因此你必须将其设置完全符合 XML 架构数据类型之一，该属性是区分大小写。</span><span class="sxs-lookup"><span data-stu-id="84495-151">The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="84495-152">将二进制数据作为 XML 传递元素会更加高效，然后将其传递为 XML 特性。</span><span class="sxs-lookup"><span data-stu-id="84495-152">Passing binary data as an XML element is more efficient then passing it as an XML attribute.</span></span>  
  
 <span data-ttu-id="84495-153">有关 XML 架构数据类型的详细信息，请参阅万维网联合会 (www.w3.org) 文档"XML 架构第 2 部分： 数据类型。"</span><span class="sxs-lookup"><span data-stu-id="84495-153">For more information about XML Schema data types, see the World Wide Web Consortium (www.w3.org) document "XML Schema Part 2: Datatypes."</span></span>  
  
|<span data-ttu-id="84495-154">XSD 数据类型</span><span class="sxs-lookup"><span data-stu-id="84495-154">XSD data type</span></span>|<span data-ttu-id="84495-155">.NET 数据类型</span><span class="sxs-lookup"><span data-stu-id="84495-155">.NET data type</span></span>|  
|-------------------|--------------------|  
|<span data-ttu-id="84495-156">anyURI</span><span class="sxs-lookup"><span data-stu-id="84495-156">anyURI</span></span>|<xref:System.String>|  
|<span data-ttu-id="84495-157">base64Binary</span><span class="sxs-lookup"><span data-stu-id="84495-157">base64Binary</span></span>|<span data-ttu-id="84495-158">数组<xref:System.Byte>对象</span><span class="sxs-lookup"><span data-stu-id="84495-158">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="84495-159">boolean</span><span class="sxs-lookup"><span data-stu-id="84495-159">boolean</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="84495-160">byte</span><span class="sxs-lookup"><span data-stu-id="84495-160">byte</span></span>|<xref:System.SByte>|  
|<span data-ttu-id="84495-161">date</span><span class="sxs-lookup"><span data-stu-id="84495-161">date</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="84495-162">dateTime</span><span class="sxs-lookup"><span data-stu-id="84495-162">dateTime</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="84495-163">decimal</span><span class="sxs-lookup"><span data-stu-id="84495-163">decimal</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="84495-164">double</span><span class="sxs-lookup"><span data-stu-id="84495-164">double</span></span>|<xref:System.Double>|  
|<span data-ttu-id="84495-165">ENTITY</span><span class="sxs-lookup"><span data-stu-id="84495-165">ENTITY</span></span>|<xref:System.String>|  
|<span data-ttu-id="84495-166">实体</span><span class="sxs-lookup"><span data-stu-id="84495-166">ENTITIES</span></span>|<xref:System.String>|  
|<span data-ttu-id="84495-167">float</span><span class="sxs-lookup"><span data-stu-id="84495-167">float</span></span>|<xref:System.Single>|  
|<span data-ttu-id="84495-168">gDay</span><span class="sxs-lookup"><span data-stu-id="84495-168">gDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="84495-169">gMonth</span><span class="sxs-lookup"><span data-stu-id="84495-169">gMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="84495-170">gMonthDay</span><span class="sxs-lookup"><span data-stu-id="84495-170">gMonthDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="84495-171">gYear</span><span class="sxs-lookup"><span data-stu-id="84495-171">gYear</span></span>|<xref:System.String>|  
|<span data-ttu-id="84495-172">gYearMonth</span><span class="sxs-lookup"><span data-stu-id="84495-172">gYearMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="84495-173">hexBinary</span><span class="sxs-lookup"><span data-stu-id="84495-173">hexBinary</span></span>|<span data-ttu-id="84495-174">数组<xref:System.Byte>对象</span><span class="sxs-lookup"><span data-stu-id="84495-174">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="84495-175">Id</span><span class="sxs-lookup"><span data-stu-id="84495-175">ID</span></span>|<xref:System.String>|  
|<span data-ttu-id="84495-176">IDREF</span><span class="sxs-lookup"><span data-stu-id="84495-176">IDREF</span></span>|<xref:System.String>|  
|<span data-ttu-id="84495-177">IDREFS</span><span class="sxs-lookup"><span data-stu-id="84495-177">IDREFS</span></span>|<xref:System.String>|  
|<span data-ttu-id="84495-178">int</span><span class="sxs-lookup"><span data-stu-id="84495-178">int</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="84495-179">整数</span><span class="sxs-lookup"><span data-stu-id="84495-179">integer</span></span>|<xref:System.String>|  
|<span data-ttu-id="84495-180">语言</span><span class="sxs-lookup"><span data-stu-id="84495-180">language</span></span>|<xref:System.String>|  
|<span data-ttu-id="84495-181">long</span><span class="sxs-lookup"><span data-stu-id="84495-181">long</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="84495-182">name</span><span class="sxs-lookup"><span data-stu-id="84495-182">Name</span></span>|<xref:System.String>|  
|<span data-ttu-id="84495-183">NCName</span><span class="sxs-lookup"><span data-stu-id="84495-183">NCName</span></span>|<xref:System.String>|  
|<span data-ttu-id="84495-184">negativeInteger</span><span class="sxs-lookup"><span data-stu-id="84495-184">negativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="84495-185">NMTOKEN</span><span class="sxs-lookup"><span data-stu-id="84495-185">NMTOKEN</span></span>|<xref:System.String>|  
|<span data-ttu-id="84495-186">NMTOKENS</span><span class="sxs-lookup"><span data-stu-id="84495-186">NMTOKENS</span></span>|<xref:System.String>|  
|<span data-ttu-id="84495-187">normalizedString</span><span class="sxs-lookup"><span data-stu-id="84495-187">normalizedString</span></span>|<xref:System.String>|  
|<span data-ttu-id="84495-188">nonNegativeInteger</span><span class="sxs-lookup"><span data-stu-id="84495-188">nonNegativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="84495-189">nonPositiveInteger</span><span class="sxs-lookup"><span data-stu-id="84495-189">nonPositiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="84495-190">NOTATION</span><span class="sxs-lookup"><span data-stu-id="84495-190">NOTATION</span></span>|<xref:System.String>|  
|<span data-ttu-id="84495-191">positiveInteger</span><span class="sxs-lookup"><span data-stu-id="84495-191">positiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="84495-192">QName</span><span class="sxs-lookup"><span data-stu-id="84495-192">QName</span></span>|<xref:System.Xml.XmlQualifiedName>|  
|<span data-ttu-id="84495-193">持续时间</span><span class="sxs-lookup"><span data-stu-id="84495-193">duration</span></span>|<xref:System.String>|  
|<span data-ttu-id="84495-194">字符串</span><span class="sxs-lookup"><span data-stu-id="84495-194">string</span></span>|<xref:System.String>|  
|<span data-ttu-id="84495-195">short</span><span class="sxs-lookup"><span data-stu-id="84495-195">short</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="84495-196">时间</span><span class="sxs-lookup"><span data-stu-id="84495-196">time</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="84495-197">token</span><span class="sxs-lookup"><span data-stu-id="84495-197">token</span></span>|<xref:System.String>|  
|<span data-ttu-id="84495-198">unsignedByte</span><span class="sxs-lookup"><span data-stu-id="84495-198">unsignedByte</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="84495-199">unsignedInt</span><span class="sxs-lookup"><span data-stu-id="84495-199">unsignedInt</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="84495-200">unsignedLong</span><span class="sxs-lookup"><span data-stu-id="84495-200">unsignedLong</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="84495-201">unsignedShort</span><span class="sxs-lookup"><span data-stu-id="84495-201">unsignedShort</span></span>|<xref:System.UInt16>|  
  
   
  
## Examples  
 <span data-ttu-id="84495-202">下面的示例序列化类名为`PurchaseOrder`。</span><span class="sxs-lookup"><span data-stu-id="84495-202">The following example serializes a class named `PurchaseOrder`.</span></span> <span data-ttu-id="84495-203">几个实例<xref:System.Xml.Serialization.XmlArrayItemAttribute>类适用于三个成员和<xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A>每个实例的属性设置为允许数组中的类型。</span><span class="sxs-lookup"><span data-stu-id="84495-203">Several instances of the <xref:System.Xml.Serialization.XmlArrayItemAttribute> class are applied to three members, and the <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> property for each instance is set to a type allowed in the array.</span></span>  
  
 [!code-cpp[XmlArrayItemAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlArrayItemAttribute Example/CPP/arrayitem.cpp#1)]
 [!code-csharp[XmlArrayItemAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlArrayItemAttribute Example/CS/arrayitem.cs#1)]
 [!code-vb[XmlArrayItemAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlArrayItemAttribute Example/VB/arrayitem.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84495-204">获取或设置生成的 XML 元素的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84495-204">Gets or sets the name of the generated XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84495-205">生成的 XML 元素的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84495-205">The name of the generated XML element.</span>
          </span>
          <span data-ttu-id="84495-206">默认值为成员标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84495-206">The default is the member identifier.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84495-207">指定<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>如果要生成的 XML 元素，该成员的标识符名称不同的名称。</span><span class="sxs-lookup"><span data-stu-id="84495-207">Specify an <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> if you want the name of the generated XML element to differ from the member's identifier.</span></span>  
  
 <span data-ttu-id="84495-208">你可以将设置为相同<xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A>名为成员对多个类成员如果生成的 XML 文档使用 XML 命名空间来区分名称相同的值。</span><span class="sxs-lookup"><span data-stu-id="84495-208">You can set the same <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> value to more than one class member if the generated XML document uses XML namespaces to distinguish between identically named members.</span></span> <span data-ttu-id="84495-209">有关如何使用 XML 文档中的命名空间和前缀的名称的详细信息，请参阅<xref:System.Xml.Serialization.XmlSerializerNamespaces>类。</span><span class="sxs-lookup"><span data-stu-id="84495-209">For details about how to use namespaces and prefixed names in the XML document, see the <xref:System.Xml.Serialization.XmlSerializerNamespaces> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84495-210">下面的示例设置<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>属性`Vehicle`和`Car`类-从而更改的 XML 元素的名称，<xref:System.Xml.Serialization.XmlSerializer>生成这些类。</span><span class="sxs-lookup"><span data-stu-id="84495-210">The following example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property for the `Vehicle` and `Car` class--thereby changing the names of XML elements that the <xref:System.Xml.Serialization.XmlSerializer> generates for those classes.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.ElementName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.ElementName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.ElementName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.ElementName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.ElementName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.ElementName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Xml.Schema.XmlSchemaForm with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84495-211">获取或设置一个值，该值指示生成的 XML 元素的名称是否是限定的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84495-211">Gets or sets a value that indicates whether the name of the generated XML element is qualified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84495-212">
            <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84495-212">One of the <see cref="T:System.Xml.Schema.XmlSchemaForm" /> values.</span>
          </span>
          <span data-ttu-id="84495-213">默认值为 <see langword="XmlSchemaForm.None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84495-213">The default is <see langword="XmlSchemaForm.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84495-214"><xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A>属性确定是否是 XML 元素名称限定，基于万维网联合会 (www.w3.org) 规范"命名空间中 XML"。</span><span class="sxs-lookup"><span data-stu-id="84495-214">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property determines whether an XML element name is qualified, based on the World Wide Web Consortium (www.w3.org) specification "Namespaces in XML."</span></span>  
  
 <span data-ttu-id="84495-215">如果<xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A>属性设置为任何值，尝试设置<xref:System.Xml.Serialization.XmlElementAttribute.Form%2A>属性`XmlSchemaForm.Unqualified`引发异常。</span><span class="sxs-lookup"><span data-stu-id="84495-215">If the <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property is set to any value, attempting to set the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified` throws an exception.</span></span>  
  
 <span data-ttu-id="84495-216">默认值， `XmlSchemaForm.None`，指示<xref:System.Xml.Serialization.XmlSerializer>检查要确定是否为限定命名空间的 XML 文档的架构。</span><span class="sxs-lookup"><span data-stu-id="84495-216">The default value, `XmlSchemaForm.None`, instructs the <xref:System.Xml.Serialization.XmlSerializer> to check the schema for the XML document to determine whether the namespace is qualified.</span></span> <span data-ttu-id="84495-217">对于元素，<xref:System.Xml.Serialization.XmlSerializer>检查架构元素属性的值`elementFormDefault`。</span><span class="sxs-lookup"><span data-stu-id="84495-217">For elements, the <xref:System.Xml.Serialization.XmlSerializer> checks the value of the schema-element attribute `elementFormDefault`.</span></span> <span data-ttu-id="84495-218">对于属性，它会检查架构元素属性的值`attributeFormDefault`。</span><span class="sxs-lookup"><span data-stu-id="84495-218">For attributes, it checks the value of the schema-element attribute `attributeFormDefault`.</span></span> <span data-ttu-id="84495-219">例如，下面的 XML 架构表示`Name`将限定元素而时`Number`元素是非限定。</span><span class="sxs-lookup"><span data-stu-id="84495-219">For example, the following XML Schema indicates that the `Name` element is qualified, while the `Number` element is unqualified.</span></span>  
  
```  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified">  
   <element name="Name"/>  
   <attribute name="Number"/>  
</schema>  
```  
  
   
  
## Examples  
 <span data-ttu-id="84495-220">下面的示例设置<xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A>属性`Vehicle`类到`XmlSchemaForm.Unqualified`，和<xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A>属性`Car`类到`XmlSchemaForm.Qualified`。</span><span class="sxs-lookup"><span data-stu-id="84495-220">The following example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A> property for the `Vehicle` class to `XmlSchemaForm.Unqualified`, and the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A> property for the `Car` class to `XmlSchemaForm.Qualified`.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="84495-221">
            <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> 属性设置为 <see langword="XmlSchemaForm.Unqualified" />，并且指定 <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84495-221">The <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> property is set to <see langword="XmlSchemaForm.Unqualified" /> and a <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> value is specified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84495-222">获取或设置一个值，该值指示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否必须将成员序列化为 <see langword="xsi:nil" /> 属性设置为 <see langword="true" /> 的 XML 空标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84495-222">Gets or sets a value that indicates whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize a member as an empty XML tag with the <see langword="xsi:nil" /> attribute set to <see langword="true" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84495-223">如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成 <see langword="true" /> 特性，则为 <see langword="xsi:nil" />；否则为 <see langword="false" />，且不生成实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84495-223">
              <see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates the <see langword="xsi:nil" /> attribute; otherwise, <see langword="false" />, and no instance is generated.</span>
          </span>
          <span data-ttu-id="84495-224">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84495-224">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84495-225">结构的 XML 架构规范允许 XML 文档以显式指示缺少元素的内容时。</span><span class="sxs-lookup"><span data-stu-id="84495-225">The XML schema specification for structures allows an XML document to explicitly signal that an element's content is missing.</span></span> <span data-ttu-id="84495-226">此类元素包含属性`xsi:nil`设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="84495-226">Such an element contains the attribute `xsi:nil` set to `true`.</span></span> <span data-ttu-id="84495-227">有关详细信息，请参阅万维网联合会 (www.w3.org) 规范标题为"XML 架构第 1 部分： 结构。"</span><span class="sxs-lookup"><span data-stu-id="84495-227">For more information, see the World Wide Web Consortium (www.w3.org) specification titled "XML Schema Part 1: Structures."</span></span>  
  
 <span data-ttu-id="84495-228">如果<xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A>属性是`true`、`xsi:nil`属性为已设置为的类成员生成`null`。</span><span class="sxs-lookup"><span data-stu-id="84495-228">If the <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> property is `true`, the `xsi:nil` attribute is generated for class members that have been set to `null`.</span></span> <span data-ttu-id="84495-229">例如，如果将名为字段设置`MyStringArray`到`null`、<xref:System.Xml.Serialization.XmlSerializer>生成以下 XML 代码。</span><span class="sxs-lookup"><span data-stu-id="84495-229">For example, if you set a field named `MyStringArray` to `null`, the <xref:System.Xml.Serialization.XmlSerializer> generates the following XML code.</span></span>  
  
```  
<MyStringArray xsi:nil = "true" />  
```  
  
 <span data-ttu-id="84495-230">如果<xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A>属性是`false`，会生成任何 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="84495-230">If the <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> property is `false`, no XML element is generated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="84495-231">不能将应用<xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A>指向成员的属性类型为值类型，因为值类型不能包含`null`。</span><span class="sxs-lookup"><span data-stu-id="84495-231">You cannot apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> property to a member typed as a value type because a value type cannot contain `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84495-232">下面的示例序列化类名为`Group`，其中包含名为的字段`Employees`返回的数组`Employee`对象。</span><span class="sxs-lookup"><span data-stu-id="84495-232">The following example serializes a class named `Group`, which contains a field named `Employees` that returns an array of `Employee` objects.</span></span> <span data-ttu-id="84495-233">名为第二个类`Manager`派生自`Employee`。</span><span class="sxs-lookup"><span data-stu-id="84495-233">A second class named `Manager` derives from `Employee`.</span></span> <span data-ttu-id="84495-234"><xref:System.Xml.Serialization.XmlArrayItemAttribute>指定<xref:System.Xml.Serialization.XmlSerializer>可以插入这两类`Employee`和`Manager`到数组的对象。</span><span class="sxs-lookup"><span data-stu-id="84495-234">An <xref:System.Xml.Serialization.XmlArrayItemAttribute> specifies that the <xref:System.Xml.Serialization.XmlSerializer> can insert both `Employee` and `Manager` objects into the array.</span></span> <span data-ttu-id="84495-235">该示例设置<xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A>属性，从而通知<xref:System.Xml.Serialization.XmlSerializer>无法生成`xsi:nil`数组中的属性对象设置为`null`。</span><span class="sxs-lookup"><span data-stu-id="84495-235">The example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> property, thereby telling the <xref:System.Xml.Serialization.XmlSerializer> not to generate the `xsi:nil` attribute objects in the array set to `null`.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.IsNullable Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.IsNullable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84495-236">获取或设置生成的 XML 元素的命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84495-236">Gets or sets the namespace of the generated XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84495-237">生成的 XML 元素的命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84495-237">The namespace of the generated XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84495-238"><xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A>属性符合万维网联合会 (www.w3.org) 规范"命名空间中 XML"。</span><span class="sxs-lookup"><span data-stu-id="84495-238">The <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> property conforms to the World Wide Web Consortium (www.w3.org) specification "Namespaces in XML."</span></span>  
  
 <span data-ttu-id="84495-239">若要创建命名空间以使用关联的前缀和 XML 文档中，你必须创建<xref:System.Xml.Serialization.XmlSerializerNamespaces>包含所有的前缀和命名空间对。</span><span class="sxs-lookup"><span data-stu-id="84495-239">To create namespaces to use in the XML document and associated prefixes, you must create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> that contains all the prefix and namespace pairs.</span></span> <span data-ttu-id="84495-240">每个设置的命名空间<xref:System.Xml.Serialization.XmlArrayAttribute>必须包含在<xref:System.Xml.Serialization.XmlSerializerNamespaces>。</span><span class="sxs-lookup"><span data-stu-id="84495-240">The namespace you set for each <xref:System.Xml.Serialization.XmlArrayAttribute> must be contained in the <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span></span> <span data-ttu-id="84495-241">当<xref:System.Xml.Serialization.XmlSerializer>生成文档时，它正确加上前缀每个数组项的元素名称。</span><span class="sxs-lookup"><span data-stu-id="84495-241">When the <xref:System.Xml.Serialization.XmlSerializer> generates the document, it correctly prefixes the element name for each array item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84495-242">下面的示例应用<xref:System.Xml.Serialization.XmlArrayItemAttribute>和设置<xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="84495-242">The following example applies an <xref:System.Xml.Serialization.XmlArrayItemAttribute> and sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.Namespace Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NestingLevel">
      <MemberSignature Language="C#" Value="public int NestingLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NestingLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property NestingLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NestingLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NestingLevel : int with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84495-243">获取或设置受 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 影响的 XML 元素的层次结构中的级别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84495-243">Gets or sets the level in a hierarchy of XML elements that the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> affects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84495-244">数组的数组中的索引集从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84495-244">The zero-based index of a set of indexes in an array of arrays.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84495-245">XML 文档可以包含 XML 元素的层次的结构。</span><span class="sxs-lookup"><span data-stu-id="84495-245">An XML document can contain hierarchies of XML elements.</span></span> <span data-ttu-id="84495-246">若要表示这一层次结构，请使用由数组的数组。</span><span class="sxs-lookup"><span data-stu-id="84495-246">To represent such a hierarchy, an array of arrays is used.</span></span> <span data-ttu-id="84495-247">在这样的数组，每个索引表示层次结构中的级别。</span><span class="sxs-lookup"><span data-stu-id="84495-247">In such an array, each index represents a level in the hierarchy.</span></span> <span data-ttu-id="84495-248">因此，<xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>属性才会使用应用时<xref:System.Xml.Serialization.XmlArrayItemAttribute>到返回数组的数组的字段。</span><span class="sxs-lookup"><span data-stu-id="84495-248">Therefore, the <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> property is only used when applying an <xref:System.Xml.Serialization.XmlArrayItemAttribute> to a field that returns an array of arrays.</span></span>  
  
 <span data-ttu-id="84495-249">在应用特性时，指定通过设置会影响该属性的层次结构级别<xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>。</span><span class="sxs-lookup"><span data-stu-id="84495-249">When applying the attribute, specify which hierarchy level the attribute affects by setting the <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>.</span></span> <span data-ttu-id="84495-250">第一个索引始终具有值为 0;因此，它是可选若要设置其<xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>--<xref:System.Xml.Serialization.XmlArrayItemAttribute>而无需<xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>值应用于第一个数组索引。</span><span class="sxs-lookup"><span data-stu-id="84495-250">The first index always has the value of 0; therefore it is optional to set its <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> --an <xref:System.Xml.Serialization.XmlArrayItemAttribute> without a <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> value is applied to the first array index.</span></span> <span data-ttu-id="84495-251">仅后续<xref:System.Xml.Serialization.XmlArrayItemAttribute>对象需要<xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>指定 （如 1、 2、 3，依此类推） 的值。</span><span class="sxs-lookup"><span data-stu-id="84495-251">Only the subsequent <xref:System.Xml.Serialization.XmlArrayItemAttribute> objects require <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> values specified (as 1, 2, 3, and so forth).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84495-252">下面的示例应用三个<xref:System.Xml.Serialization.XmlArrayItemAttribute>特性以数组组成的数组。</span><span class="sxs-lookup"><span data-stu-id="84495-252">The following example applies three <xref:System.Xml.Serialization.XmlArrayItemAttribute> attributes to an array of arrays.</span></span> <span data-ttu-id="84495-253">若要指定的数组的每个属性应用于<xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>属性设置为数组的索引。</span><span class="sxs-lookup"><span data-stu-id="84495-253">To specify which of the arrays each attribute applies to, the <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> property is set to the index of the arrays.</span></span>  
  
 [!code-cpp[NestingLevel#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NestingLevel/cpp/nestinglevel.cpp#1)]
 [!code-csharp[NestingLevel#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NestingLevel/CS/nestinglevel.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84495-254">获取或设置数组中允许的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84495-254">Gets or sets the type allowed in an array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84495-255">数组中允许的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84495-255">A <see cref="T:System.Type" /> that is allowed in the array.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84495-256">使用<xref:System.Xml.Serialization.XmlElementAttribute.Type%2A>属性来重写为指定类型的公共字段或公共读/写属性值。</span><span class="sxs-lookup"><span data-stu-id="84495-256">Use the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify an overridden type for a public field or public read/write property value.</span></span>  
  
 <span data-ttu-id="84495-257">如果字段或属性将返回类型的数组<xref:System.Object>，应用的多个实例<xref:System.Xml.Serialization.XmlArrayItemAttribute>到字段或属性。</span><span class="sxs-lookup"><span data-stu-id="84495-257">If a field or property returns an array of type <xref:System.Object>, apply multiple instances of the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field or property.</span></span> <span data-ttu-id="84495-258">对于每个实例，设置<xref:System.Xml.Serialization.XmlElementAttribute.Type%2A>到一种可以插入到数组的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="84495-258">For each instance, set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to a type of object that can be inserted into the array.</span></span>  
  
 <span data-ttu-id="84495-259">如果数组包含只有基元类型，不需要应用<xref:System.Xml.Serialization.XmlArrayItemAttribute>。</span><span class="sxs-lookup"><span data-stu-id="84495-259">If an array contains only primitive types, you do not need to apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute>.</span></span> <span data-ttu-id="84495-260">默认情况下，<xref:System.Xml.Serialization.XmlSerializer>会为每个值，但每个元素的类型设置为 XML 架构数据类型生成一系列元素，每个都有相同的元素名称。</span><span class="sxs-lookup"><span data-stu-id="84495-260">By default, the <xref:System.Xml.Serialization.XmlSerializer> generates a series of elements, each with the same element name, for each value, but the type of each element is set to the XML Schema data type.</span></span> <span data-ttu-id="84495-261">例如，以下代码：</span><span class="sxs-lookup"><span data-stu-id="84495-261">For example, the following code:</span></span>  
  
```  
' Visual Basic code  
Public Class Arrays  
   Public XSDTypes ()As Object= New Object(){"one", 2, 3.0}  
End Class  
// C# code  
public class MyArray{  
   // No XmlArrayItemAttribute is applied.  
   public object[] XSDTypes= new object[]{"one", 2, 3.2};  
}  
```  
  
 <span data-ttu-id="84495-262">在此 XML 的结果：</span><span class="sxs-lookup"><span data-stu-id="84495-262">results in this XML:</span></span>  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Arrays xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <XSDTypes>  
    <Object xsi:type="xsd:string">one</Object>  
    <Object xsi:type="xsd:int">2</Object>  
    <Object xsi:type="xsd:double">3</Object>  
  </XSDTypes>  
</Arrays>  
```  
  
 <span data-ttu-id="84495-263">但是，如果你指定<xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A>使用.NET 类型名称生成对于每个基元类型，每个值的元素名称的属性。</span><span class="sxs-lookup"><span data-stu-id="84495-263">However, if you specify the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> property for each primitive type, the element name for each value is generated using the .NET type name.</span></span> <span data-ttu-id="84495-264">有关此代码示例：</span><span class="sxs-lookup"><span data-stu-id="84495-264">For example this code:</span></span>  
  
```  
' Visual Basic code  
Public Class Arrays  
   <XmlArrayItem(GetType(String)), _  
   XmlArrayItem(GetType(Integer)), _  
   XmlArrayItem(GetType(Double))> _  
   Public PrimitiveTypes () As Object = New Object(){"one", 2, 3.0}  
End Class  
// C# code  
public class Arrays{  
   [XmlArrayItem(typeof(string))]  
   [XmlArrayItem(typeof(int))]  
   [XmlArrayItem(typeof(double))]  
   public object [] PrimitiveTypes = new object[]{"one", 2, 3.0};  
}  
```  
  
 <span data-ttu-id="84495-265">在此 XML 的结果：</span><span class="sxs-lookup"><span data-stu-id="84495-265">results in this XML:</span></span>  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Arrays xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <PrimitiveTypes>  
    <string>one</string>  
    <int>2</int>  
    <double>3</double>  
  </PrimitiveTypes>  
</Arrays>  
```  
  
   
  
## Examples  
 <span data-ttu-id="84495-266">下面的示例序列化对象的数组。</span><span class="sxs-lookup"><span data-stu-id="84495-266">The following example serializes an array of objects.</span></span> <span data-ttu-id="84495-267">返回数组的字段使用两个特性化<xref:System.Xml.Serialization.XmlArrayItemAttribute>实例。</span><span class="sxs-lookup"><span data-stu-id="84495-267">The field that returns the array is attributed with two <xref:System.Xml.Serialization.XmlArrayItemAttribute> instances.</span></span> <span data-ttu-id="84495-268">每个实例指示<xref:System.Xml.Serialization.XmlSerializer>以接受指定<xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A>数组中。</span><span class="sxs-lookup"><span data-stu-id="84495-268">Each instance instructs the <xref:System.Xml.Serialization.XmlSerializer> to accept the specified <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> in the array.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.Type Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Type Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.Type Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Type Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.Type Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Type Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>