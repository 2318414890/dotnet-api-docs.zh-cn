<Type Name="IXmlSerializable" FullName="System.Xml.Serialization.IXmlSerializable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6b7fc94bb14f6a03040ba51e51b69ae4a5a92699" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48712492" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IXmlSerializable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXmlSerializable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXmlSerializable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXmlSerializable" />
  <TypeSignature Language="F#" Value="type IXmlSerializable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c8a20-101">为 XML 序列化和反序列化提供自定义格式。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c8a20-101">Provides custom formatting for XML serialization and deserialization.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a20-102">有两个原因，若要实现此接口。</span><span class="sxs-lookup"><span data-stu-id="c8a20-102">There are two reasons to implement this interface.</span></span> <span data-ttu-id="c8a20-103">第一种是控制您的对象序列化或反序列化方式<xref:System.Xml.Serialization.XmlSerializer>。</span><span class="sxs-lookup"><span data-stu-id="c8a20-103">The first is to control how your object is serialized or deserialized by the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="c8a20-104">例如，可以为字节而不是缓冲大型数据集时，消息的分块数据并也避免膨胀时发生数据使用 Base64 编码进行编码的。</span><span class="sxs-lookup"><span data-stu-id="c8a20-104">For example, you can chunk data into bytes instead of buffering large data sets, and also avoid the inflation that occurs when the data is encoded using Base64 encoding.</span></span> <span data-ttu-id="c8a20-105">若要控制的序列化，实现<xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A>并<xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A>方法可用于控制<xref:System.Xml.XmlReader>和<xref:System.Xml.XmlWriter>类用于读取和写入 XML。</span><span class="sxs-lookup"><span data-stu-id="c8a20-105">To control the serialization, implement the <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> and <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> methods to control the <xref:System.Xml.XmlReader> and <xref:System.Xml.XmlWriter> classes used to read and write the XML.</span></span> <span data-ttu-id="c8a20-106">此示例，请参阅[如何： 序列化数据块区](~/docs/standard/serialization/how-to-chunk-serialized-data.md)。</span><span class="sxs-lookup"><span data-stu-id="c8a20-106">For an example of this, see [How to: Chunk Serialized Data](~/docs/standard/serialization/how-to-chunk-serialized-data.md).</span></span>  
  
 <span data-ttu-id="c8a20-107">第二个原因是为了能够控制的架构。</span><span class="sxs-lookup"><span data-stu-id="c8a20-107">The second reason is to be able to control the schema.</span></span> <span data-ttu-id="c8a20-108">若要启用此功能，必须应用<xref:System.Xml.Serialization.XmlSchemaProviderAttribute>到的可序列化类型，并指定返回的架构的静态成员的名称。</span><span class="sxs-lookup"><span data-stu-id="c8a20-108">To enable this, you must apply the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> to the serializable type, and specify the name of the static member that returns the schema.</span></span> <span data-ttu-id="c8a20-109">请参阅<xref:System.Xml.Serialization.XmlSchemaProviderAttribute>有关的示例。</span><span class="sxs-lookup"><span data-stu-id="c8a20-109">See the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> for an example.</span></span>  
  
 <span data-ttu-id="c8a20-110">实现接口的类必须具有无参数构造函数。</span><span class="sxs-lookup"><span data-stu-id="c8a20-110">A class that implements the interface must have a parameterless constructor.</span></span> <span data-ttu-id="c8a20-111">这是一项要求的<xref:System.Xml.Serialization.XmlSerializer>类。</span><span class="sxs-lookup"><span data-stu-id="c8a20-111">This is a requirement of the <xref:System.Xml.Serialization.XmlSerializer> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8a20-112">下面的代码示例演示一种实现<xref:System.Xml.Serialization.IXmlSerializable>序列化的私有字段的接口。</span><span class="sxs-lookup"><span data-stu-id="c8a20-112">The following example code shows an implementation of the <xref:System.Xml.Serialization.IXmlSerializable> interface that serializes a private field.</span></span>  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#0](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#0)]
 [!code-csharp[XmlSerialization_IXmlSerializable#0](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#0)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">
      <span data-ttu-id="c8a20-113">XML 序列化简介</span>
      <span class="sxs-lookup">
        <span data-stu-id="c8a20-113">Introducing XML Serialization</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.Schema.XmlSchema GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSchema () As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ GetSchema();" />
      <MemberSignature Language="F#" Value="abstract member GetSchema : unit -&gt; System.Xml.Schema.XmlSchema" Usage="iXmlSerializable.GetSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c8a20-114">此方法是保留方法，请不要使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8a20-114">This method is reserved and should not be used.</span>
          </span>
          <span data-ttu-id="c8a20-115">在实现 <see langword="IXmlSerializable" /> 接口时，应从此方法返回 <see langword="null" />（在 Visual Basic 中为 <see langword="Nothing" />），如果需要指定自定义架构，应向该类应用 <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8a20-115">When implementing the <see langword="IXmlSerializable" /> interface, you should return <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> to the class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8a20-116">一个 <see cref="T:System.Xml.Schema.XmlSchema" />，描述由 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> 方法生成并由 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> 方法使用的对象的 XML 表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8a20-116">An <see cref="T:System.Xml.Schema.XmlSchema" /> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a20-117">序列化或反序列化对象时<xref:System.Xml.Serialization.XmlSerializer>类不执行 XML 验证。</span><span class="sxs-lookup"><span data-stu-id="c8a20-117">When serializing or deserializing an object, the <xref:System.Xml.Serialization.XmlSerializer> class does not perform XML validation.</span></span> <span data-ttu-id="c8a20-118">出于此原因，通常很安全地忽略架构信息通过提供的简单实现来这种方法，例如通过返回`null`(`Nothing`在 Visual Basic 中)。</span><span class="sxs-lookup"><span data-stu-id="c8a20-118">For this reason, it is often safe to omit schema information by providing a trivial implementation of this method, for example by returning `null` (`Nothing` in Visual Basic).</span></span>  
  
 <span data-ttu-id="c8a20-119">如果提供的架构信息是必需的则应使用<xref:System.Xml.Serialization.XmlSchemaProviderAttribute>属性。</span><span class="sxs-lookup"><span data-stu-id="c8a20-119">If providing schema information is necessary, you should use the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> attribute.</span></span> <span data-ttu-id="c8a20-120">`GetSchema`方法应仍然返回`null`(或`Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="c8a20-120">The `GetSchema` method should still return `null` (or `Nothing`).</span></span>  
  
 <span data-ttu-id="c8a20-121">某些[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]类型，以及旧的自定义类型实现`IXmlSerializable`可能使用接口`GetSchema`而不是`XmlSchemaProvider`。</span><span class="sxs-lookup"><span data-stu-id="c8a20-121">Some [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] types as well as legacy custom types implementing the `IXmlSerializable` interface may be using `GetSchema` instead of `XmlSchemaProvider`.</span></span> <span data-ttu-id="c8a20-122">在这种情况下，该方法返回准确的 XML 架构描述生成的对象的 XML 表示形式<xref:System.Data.DataSet.WriteXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c8a20-122">In this case, the method returns an accurate XML schema that describes the XML representation of the object generated by the <xref:System.Data.DataSet.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public void ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXml (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXml(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadXml : System.Xml.XmlReader -&gt; unit" Usage="iXmlSerializable.ReadXml reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="c8a20-123">对象从中进行反序列化的 <see cref="T:System.Xml.XmlReader" /> 流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8a20-123">The <see cref="T:System.Xml.XmlReader" /> stream from which the object is deserialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8a20-124">从对象的 XML 表示形式生成该对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8a20-124">Generates an object from its XML representation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a20-125"><xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A>方法必须重建对象使用的信息已写入<xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c8a20-125">The <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> method must reconstitute your object using the information that was written by the <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="c8a20-126">调用此方法时，读取器定位在包装你的类型的信息的开始标记。</span><span class="sxs-lookup"><span data-stu-id="c8a20-126">When this method is called, the reader is positioned on the start tag that wraps the information for your type.</span></span> <span data-ttu-id="c8a20-127">也就是说，直接在开始标记上，该值指示序列化对象的开头。</span><span class="sxs-lookup"><span data-stu-id="c8a20-127">That is, directly on the start tag that indicates the beginning of a serialized object.</span></span> <span data-ttu-id="c8a20-128">此方法返回时，它必须具有读取整个元素从开始到结束，包括其所有内容。</span><span class="sxs-lookup"><span data-stu-id="c8a20-128">When this method returns, it must have read the entire element from beginning to end, including all of its contents.</span></span> <span data-ttu-id="c8a20-129">与不同<xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A>方法，该框架不会自动处理的包装元素。</span><span class="sxs-lookup"><span data-stu-id="c8a20-129">Unlike the <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> method, the framework does not handle the wrapper element automatically.</span></span> <span data-ttu-id="c8a20-130">您的实现必须执行此操作。</span><span class="sxs-lookup"><span data-stu-id="c8a20-130">Your implementation must do so.</span></span> <span data-ttu-id="c8a20-131">如果不遵守这些定位规则可能会导致代码，以生成意外的运行时异常或已损坏的数据。</span><span class="sxs-lookup"><span data-stu-id="c8a20-131">Failing to observe these positioning rules may cause code to generate unexpected runtime exceptions or corrupt data.</span></span>  
  
 <span data-ttu-id="c8a20-132">实现此方法时，应考虑可能的恶意用户可能会提供格式正确但无效的 XML 表示形式，以破坏或改变你的应用程序的行为。</span><span class="sxs-lookup"><span data-stu-id="c8a20-132">When implementing this method, you should consider the possibility that a malicious user might provide a well-formed but invalid XML representation in order to disable or otherwise alter the behavior of your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8a20-133">下面的示例演示的实现<xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c8a20-133">The following example illustrates an implementation of the <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> method.</span></span>  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#2](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#2)]
 [!code-csharp[XmlSerialization_IXmlSerializable#2](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#2)]  
  
 <span data-ttu-id="c8a20-134">下面的示例演示如何使用<xref:System.Xml.Serialization.XmlSerializer>类反序列化此对象。</span><span class="sxs-lookup"><span data-stu-id="c8a20-134">The following example illustrates the use of the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize this object.</span></span>  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#20](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/reader.cpp#20)]
 [!code-csharp[XmlSerialization_IXmlSerializable#20](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/reader.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member WriteXml : System.Xml.XmlWriter -&gt; unit" Usage="iXmlSerializable.WriteXml writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="c8a20-135">对象要序列化为的 <see cref="T:System.Xml.XmlWriter" /> 流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8a20-135">The <see cref="T:System.Xml.XmlWriter" /> stream to which the object is serialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8a20-136">将对象转换为其 XML 表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8a20-136">Converts an object into its XML representation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a20-137"><xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A>你提供的实现应写出对象的 XML 表示形式。</span><span class="sxs-lookup"><span data-stu-id="c8a20-137">The <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> implementation you provide should write out the XML representation of the object.</span></span> <span data-ttu-id="c8a20-138">框架写入包装元素，并将其启动后的 XML 编写器。</span><span class="sxs-lookup"><span data-stu-id="c8a20-138">The framework writes a wrapper element and positions the XML writer after its start.</span></span> <span data-ttu-id="c8a20-139">您的实现可能会编写其内容，包括子元素。</span><span class="sxs-lookup"><span data-stu-id="c8a20-139">Your implementation may write its contents, including child elements.</span></span> <span data-ttu-id="c8a20-140">Framework 然后关闭包装元素。</span><span class="sxs-lookup"><span data-stu-id="c8a20-140">The framework then closes the wrapper element.</span></span>  
  
 <span data-ttu-id="c8a20-141">将足够信息写入<xref:System.Xml.XmlWriter>流，以允许<xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A>方法来重新构建您的对象。</span><span class="sxs-lookup"><span data-stu-id="c8a20-141">Write sufficient information to the <xref:System.Xml.XmlWriter> stream to allow the <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> method to reconstitute your object.</span></span>  
  
 <span data-ttu-id="c8a20-142">例如，如果对象的状态包括一个数组变量，一定要记数组的长度，或使用父元素包含的元素的描述的数组值，以便您知道多少个值时重建对象读取。</span><span class="sxs-lookup"><span data-stu-id="c8a20-142">For example, if your object state includes an array variable, be sure to write the length of the array, or use a parent element to contain the elements that describe the array values, so that you know how many values to read when the object is reconstituted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8a20-143">下面的示例演示的实现<xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c8a20-143">The following example illustrates an implementation of the <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> method.</span></span>  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#1)]
 [!code-csharp[XmlSerialization_IXmlSerializable#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#1)]  
  
 <span data-ttu-id="c8a20-144">下面的示例演示如何使用<xref:System.Xml.Serialization.XmlSerializer>类反序列化此对象。</span><span class="sxs-lookup"><span data-stu-id="c8a20-144">The following example illustrates the use of the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize this object.</span></span>  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#10](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/writer.cpp#10)]
 [!code-csharp[XmlSerialization_IXmlSerializable#10](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/writer.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>