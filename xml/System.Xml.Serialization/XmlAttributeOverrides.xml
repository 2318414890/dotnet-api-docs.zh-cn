<Type Name="XmlAttributeOverrides" FullName="System.Xml.Serialization.XmlAttributeOverrides">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c6e10e30e0f9d671c6fccbe9797ab7724f729c79" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37732372" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlAttributeOverrides" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAttributeOverrides extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAttributeOverrides" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAttributeOverrides" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAttributeOverrides" />
  <TypeSignature Language="F#" Value="type XmlAttributeOverrides = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>允许在使用 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 串行化或反序列化对象时替代属性、字段和类特性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAttributeOverrides>使<xref:System.Xml.Serialization.XmlSerializer>重写序列化的一组对象的默认方式。 重写以这种方式序列化有两个用途： 首先，您可以控制和增强在 DLL 中找到的对象的序列化即使到源，则不能访问第二，您可以创建一组可序列化类，但序列化多个方法中的对象。 例如，而不是序列化的类实例成员作为 XML 元素，可以序列化它们作为 XML 特性，从而得到更高效的文档中传输。  
  
 在创建后<xref:System.Xml.Serialization.XmlAttributeOverrides>对象，将其作为参数传递<xref:System.Xml.Serialization.XmlSerializer.%23ctor%2A>构造函数。 得到<xref:System.Xml.Serialization.XmlSerializer>使用包含的数据<xref:System.Xml.Serialization.XmlAttributeOverrides>重写来控制如何序列化对象的属性。 若要实现此目的，<xref:System.Xml.Serialization.XmlAttributeOverrides>包含一系列重写的对象类型以及<xref:System.Xml.Serialization.XmlAttributes>与每个重写的对象类型相关联的对象。 <xref:System.Xml.Serialization.XmlAttributes>对象本身包含一组适当的控制如何序列化每个字段、 属性或类的属性对象。  
  
 创建和使用的过程<xref:System.Xml.Serialization.XmlAttributeOverrides>对象是按如下所示：  
  
1.  创建<xref:System.Xml.Serialization.XmlAttributes>对象。  
  
2.  创建一个属性对象，它适合于正在重写的对象。 例如，若要重写字段或属性，创建<xref:System.Xml.Serialization.XmlElementAttribute>，使用新的派生类型。 您可以根据需要分配一个新<xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A>，或<xref:System.Xml.Serialization.XmlElementAttribute.Namespace%2A>重写基类的属性名称或命名空间。  
  
3.  将属性对象添加到相应<xref:System.Xml.Serialization.XmlAttributes>属性或集合。 例如，您将添加<xref:System.Xml.Serialization.XmlElementAttribute>到<xref:System.Xml.Serialization.XmlAttributes.XmlElements%2A>的集合<xref:System.Xml.Serialization.XmlAttributes>对象，指定会重写的成员名称。  
  
4.  创建<xref:System.Xml.Serialization.XmlAttributeOverrides>对象。  
  
5.  使用<xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A>方法中，添加<xref:System.Xml.Serialization.XmlAttributes>对象传递给<xref:System.Xml.Serialization.XmlAttributeOverrides>对象。 正在重写的对象是否<xref:System.Xml.Serialization.XmlRootAttribute>或<xref:System.Xml.Serialization.XmlTypeAttribute>，仅需要指定重写的对象的类型。 但如果您要重写字段或属性，则必须指定重写的成员的名称。  
  
6.  构造时<xref:System.Xml.Serialization.XmlSerializer>，传递<xref:System.Xml.Serialization.XmlAttributeOverrides>到<xref:System.Xml.Serialization.XmlSerializer.%23ctor%2A>构造函数。  
  
7.  使用生成<xref:System.Xml.Serialization.XmlSerializer>要序列化或反序列化派生的类对象。  
  
   
  
## Examples  
 下面的示例将名为的类序列化为`Orchestra`，其中包含名为的单个字段`Instruments`返回的数组`Instrument`对象。 名为第二个类`Brass`继承`Instrument`类。 该示例使用的实例<xref:System.Xml.Serialization.XmlAttributeOverrides>类重写`Instrument`字段中，使该字段能够接受`Brass`对象。  
  
 [!code-cpp[Classic XmlAttributeOverrides Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeOverrides Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeOverrides Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeOverrides Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeOverrides Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeOverrides Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
    <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributeOverrides ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributeOverrides();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象添加到 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象的集合中。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Type type, System.Xml.Serialization.XmlAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Type type, class System.Xml.Serialization.XmlAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(Type ^ type, System::Xml::Serialization::XmlAttributes ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.Add : Type * System.Xml.Serialization.XmlAttributes -&gt; unit" Usage="xmlAttributeOverrides.Add (type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Xml.Serialization.XmlAttributes" />
      </Parameters>
      <Docs>
        <param name="type">所替代的对象的 <see cref="T:System.Type" />。</param>
        <param name="attributes">表示替代属性的 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象。</param>
        <summary>将 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象添加到 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象的集合中。 <paramref name="type" /> 参数指定由 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象替代的对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAttributes>对象包含的 attribute 对象会导致联合<xref:System.Xml.Serialization.XmlSerializer>重写的一组对象及其默认序列化行为。 选择要将放入的属性对象<xref:System.Xml.Serialization.XmlAttributes>对象，具体取决于您想要覆盖特定行为。 例如，<xref:System.Xml.Serialization.XmlSerializer>将类成员序列化的 XML 元素形式，默认情况下。 如果你想要序列化为 XM 特性的成员，将创建<xref:System.Xml.Serialization.XmlAttributeAttribute>，将其分配给<xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A>的属性<xref:System.Xml.Serialization.XmlAttributes>，并添加<xref:System.Xml.Serialization.XmlAttributes>对象传递给<xref:System.Xml.Serialization.XmlAttributeOverrides>对象。  
  
 使用此重载来重写<xref:System.Xml.Serialization.XmlRootAttribute>或<xref:System.Xml.Serialization.XmlTypeAttribute>。  
  
   
  
## Examples  
 下面的示例将名为的类序列化为`Band`它派生自的类名为`Orchestra`。 此示例将创建<xref:System.Xml.Serialization.XmlRootAttribute>对象，并将它分配给<xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A>属性的<xref:System.Xml.Serialization.XmlAttributes>对象。 该示例然后调用<xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A>方法中添加<xref:System.Xml.Serialization.XmlAttributes>对象传递给<xref:System.Xml.Serialization.XmlAttributeOverrides>对象。  
  
 [!code-cpp[Classic XmlAttributeOverrides.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeOverrides.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeOverrides.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeOverrides.Add Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeOverrides.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeOverrides.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Type type, string member, System.Xml.Serialization.XmlAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Type type, string member, class System.Xml.Serialization.XmlAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(Type ^ type, System::String ^ member, System::Xml::Serialization::XmlAttributes ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.Add : Type * string * System.Xml.Serialization.XmlAttributes -&gt; unit" Usage="xmlAttributeOverrides.Add (type, member, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="member" Type="System.String" />
        <Parameter Name="attributes" Type="System.Xml.Serialization.XmlAttributes" />
      </Parameters>
      <Docs>
        <param name="type">要替代的对象的 <see cref="T:System.Type" />。</param>
        <param name="member">要替代的成员的名称。</param>
        <param name="attributes">表示替代属性的 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象。</param>
        <summary>将 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象添加到 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象的集合中。 <paramref name="type" /> 参数指定要替代的对象。 <paramref name="member" /> 参数指定所替代的成员名称。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAttributes>对象包含的 attribute 对象会导致联合<xref:System.Xml.Serialization.XmlSerializer>重写的一组对象及其默认序列化行为。 选择要将放入的属性对象<xref:System.Xml.Serialization.XmlAttributes>对象，具体取决于您想要覆盖特定行为。 例如，<xref:System.Xml.Serialization.XmlSerializer>将类成员序列化的 XML 元素形式，默认情况下。 如果你想要序列化为 XML 特性的成员，将创建<xref:System.Xml.Serialization.XmlAttributeAttribute>，将其分配给<xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A>的属性<xref:System.Xml.Serialization.XmlAttributes>，并添加<xref:System.Xml.Serialization.XmlAttributes>对象传递给<xref:System.Xml.Serialization.XmlAttributeOverrides>对象。  
  
 如果尝试使用此方法重写<xref:System.Xml.Serialization.XmlElementAttribute>， <xref:System.Xml.Serialization.XmlAttributeAttribute>， <xref:System.Xml.Serialization.XmlArrayAttribute>， <xref:System.Xml.Serialization.XmlArrayItemAttribute>，或<xref:System.Xml.Serialization.XmlIgnoreAttribute>。  
  
   
  
## Examples  
 下面的示例创建<xref:System.Xml.Serialization.XmlAttributeAttribute>对象，并将它分配给<xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A>属性的<xref:System.Xml.Serialization.XmlAttributes>对象。 然后该示例添加<xref:System.Xml.Serialization.XmlAttributes>对象传递给<xref:System.Xml.Serialization.XmlAttributeOverrides>对象，然后再创建<xref:System.Xml.Serialization.XmlSerializer>。  
  
 [!code-cpp[Classic XmlAttributeOverrides.Add1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeOverrides.Add1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeOverrides.Add1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeOverrides.Add1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeOverrides.Add1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeOverrides.Add1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取表示替代属性的集合的对象。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAttributes this[Type type] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAttributes Item(class System.Type)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(type As Type) As XmlAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAttributes ^ default[Type ^] { System::Xml::Serialization::XmlAttributes ^ get(Type ^ type); };" />
      <MemberSignature Language="F#" Value="member this.Item(Type) : System.Xml.Serialization.XmlAttributes" Usage="System.Xml.Serialization.XmlAttributeOverrides.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAttributes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">与要检索的属性的集合相关联的基类 <see cref="T:System.Type" />。</param>
        <summary>获取与指定的基类类型相关联的对象。</summary>
        <value>表示重写属性集合的 <see cref="T:System.Xml.Serialization.XmlAttributes" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此重载以返回<xref:System.Xml.Serialization.XmlAttributes>对象，它包含特性<xref:System.Xml.Serialization.XmlRootAttribute>或<xref:System.Xml.Serialization.XmlTypeAttribute>对象。  
  
 如果<xref:System.Xml.Serialization.XmlAttributes>对象包含对象的重写<xref:System.Xml.Serialization.XmlArrayAttribute>， <xref:System.Xml.Serialization.XmlArrayItemAttribute>， <xref:System.Xml.Serialization.XmlElementAttribute>， <xref:System.Xml.Serialization.XmlEnumAttribute>，或<xref:System.Xml.Serialization.XmlAttributeAttribute>，则必须使用指定重写的成员，以及该类型的重载。  
  
   
  
## Examples  
 下面的示例创建<xref:System.Xml.Serialization.XmlAttributeOverrides>对象，<xref:System.Xml.Serialization.XmlAttributes>对象，和一个<xref:System.Xml.Serialization.XmlRootAttribute>对象。 该示例将分配<xref:System.Xml.Serialization.XmlRootAttribute>到<xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A>的属性<xref:System.Xml.Serialization.XmlAttributes>对象，并添加<xref:System.Xml.Serialization.XmlAttributes>对象传递给<xref:System.Xml.Serialization.XmlAttributeOverrides>对象。 最后，示例将获取<xref:System.Xml.Serialization.XmlAttributes>对象通过传递<xref:System.Type>序列化到类的<xref:System.Xml.Serialization.XmlAttributeOverrides>对象。 在此示例中，<xref:System.Type>是`Group`。  
  
 [!code-cpp[Classic XmlAttributeOverrides.this Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeOverrides.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeOverrides.this Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeOverrides.this Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeOverrides.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeOverrides.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAttributes this[Type type, string member] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAttributes Item(class System.Type, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(type As Type, member As String) As XmlAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAttributes ^ default[Type ^, System::String ^] { System::Xml::Serialization::XmlAttributes ^ get(Type ^ type, System::String ^ member); };" />
      <MemberSignature Language="F#" Value="member this.Item(Type * string) : System.Xml.Serialization.XmlAttributes" Usage="System.Xml.Serialization.XmlAttributeOverrides.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAttributes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="member" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">与所需属性的集合相关联的基类 <see cref="T:System.Type" />。</param>
        <param name="member">指定要返回的 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 的替代成员名称。</param>
        <summary>获取与指定（基类）类型相关联的对象。 成员参数指定被替代的基类成员。</summary>
        <value>表示重写属性集合的 <see cref="T:System.Xml.Serialization.XmlAttributes" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此重载以返回<xref:System.Xml.Serialization.XmlAttributes>对象，包含对象重写<xref:System.Xml.Serialization.XmlArrayAttribute>， <xref:System.Xml.Serialization.XmlArrayItemAttribute>， <xref:System.Xml.Serialization.XmlAttributeAttribute>， <xref:System.Xml.Serialization.XmlElementAttribute>，或<xref:System.Xml.Serialization.XmlEnumAttribute>。 如果<xref:System.Xml.Serialization.XmlAttributes>对象包含<xref:System.Xml.Serialization.XmlRootAttribute>或<xref:System.Xml.Serialization.XmlTypeAttribute>，则必须使用指定仅重写的类型的重载。  
  
   
  
## Examples  
 下面的示例创建<xref:System.Xml.Serialization.XmlAttributeOverrides>对象， <xref:System.Xml.Serialization.XmlAttributes>，和一个<xref:System.Xml.Serialization.XmlAttributeAttribute>对象。 该示例将分配<xref:System.Xml.Serialization.XmlAttributeAttribute>到<xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A>的属性<xref:System.Xml.Serialization.XmlAttributes>对象，并添加<xref:System.Xml.Serialization.XmlAttributes>对象传递给<xref:System.Xml.Serialization.XmlAttributeOverrides>对象。 最后，示例将获取<xref:System.Xml.Serialization.XmlAttributes>对象通过传递<xref:System.Type>到序列化的类和成员名称的<xref:System.Xml.Serialization.XmlAttributeOverrides>对象。  
  
 [!code-cpp[Classic XmlAttributeOverrides.this1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeOverrides.this1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeOverrides.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeOverrides.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeOverrides.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeOverrides.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
  </Members>
</Type>