<Type Name="RelationshipQuery" FullName="System.Management.RelationshipQuery">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ed2fd723db19bbd39b79a1b45c94be395eb56045" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460291" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RelationshipQuery : System.Management.WqlObjectQuery" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationshipQuery extends System.Management.WqlObjectQuery" />
  <TypeSignature Language="DocId" Value="T:System.Management.RelationshipQuery" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationshipQuery&#xA;Inherits WqlObjectQuery" />
  <TypeSignature Language="C++ CLI" Value="public ref class RelationshipQuery : System::Management::WqlObjectQuery" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.WqlObjectQuery</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示 WQL REFERENCES OF 数据查询。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Management.RelationshipQuery" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationshipQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.RelationshipQuery.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelationshipQuery();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Management.RelationshipQuery" /> 类的新实例。 这是默认构造函数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationshipQuery (string queryOrSourceObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string queryOrSourceObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.RelationshipQuery.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (queryOrSourceObject As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelationshipQuery(System::String ^ queryOrSourceObject);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="queryOrSourceObject" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="queryOrSourceObject">查询字符串或此查询的类名。</param>
        <summary>初始化 <see cref="T:System.Management.RelationshipQuery" /> 类的新实例。 如果可以将指定的字符串成功地分析为 WQL 查询，则认为该字符串是查询字符串；否则，将假定它是查询的源对象的路径。 在此情况下，假定该查询为实例查询。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。  
  
   
  
## Examples  
 下面的示例设置 WMI 类之间的关系类型和<xref:System.Management.RelatedObjectQuery>。  
  
 [!code-csharp[wminet_RelationshipQuery-S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_RelationshipQuery-S/cs/RelationshipQuery-S.cs#1)]
 [!code-vb[wminet_RelationshipQuery-S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_RelationshipQuery-S/vb/RelationshipQuery-S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationshipQuery (string sourceObject, string relationshipClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sourceObject, string relationshipClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.RelationshipQuery.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceObject As String, relationshipClass As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelationshipQuery(System::String ^ sourceObject, System::String ^ relationshipClass);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourceObject" Type="System.String" />
        <Parameter Name="relationshipClass" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceObject">该查询的源对象的路径。</param>
        <param name="relationshipClass">要查询的关系的类型。</param>
        <summary>根据给定的源对象和关系类初始化 <see cref="T:System.Management.RelationshipQuery" /> 类的新实例。 假定查询为实例查询（相对于架构查询）。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationshipQuery (bool isSchemaQuery, string sourceObject, string relationshipClass, string relationshipQualifier, string thisRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool isSchemaQuery, string sourceObject, string relationshipClass, string relationshipQualifier, string thisRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.RelationshipQuery.#ctor(System.Boolean,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (isSchemaQuery As Boolean, sourceObject As String, relationshipClass As String, relationshipQualifier As String, thisRole As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelationshipQuery(bool isSchemaQuery, System::String ^ sourceObject, System::String ^ relationshipClass, System::String ^ relationshipQualifier, System::String ^ thisRole);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isSchemaQuery" Type="System.Boolean" />
        <Parameter Name="sourceObject" Type="System.String" />
        <Parameter Name="relationshipClass" Type="System.String" />
        <Parameter Name="relationshipQualifier" Type="System.String" />
        <Parameter Name="thisRole" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="isSchemaQuery">
          如果指示这是架构查询，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="sourceObject">此查询的源类的路径。</param>
        <param name="relationshipClass">要查询的关系的类型。</param>
        <param name="relationshipQualifier">需要在关系类中存在的限定符。</param>
        <param name="thisRole">源类需要在关系中扮演的角色。</param>
        <summary>使用给定的参数集，为架构查询初始化 <see cref="T:System.Management.RelationshipQuery" /> 类的新实例。 此构造函数仅用于架构查询，因此第一个参数必须为 true。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationshipQuery (string sourceObject, string relationshipClass, string relationshipQualifier, string thisRole, bool classDefinitionsOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sourceObject, string relationshipClass, string relationshipQualifier, string thisRole, bool classDefinitionsOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.RelationshipQuery.#ctor(System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceObject As String, relationshipClass As String, relationshipQualifier As String, thisRole As String, classDefinitionsOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelationshipQuery(System::String ^ sourceObject, System::String ^ relationshipClass, System::String ^ relationshipQualifier, System::String ^ thisRole, bool classDefinitionsOnly);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourceObject" Type="System.String" />
        <Parameter Name="relationshipClass" Type="System.String" />
        <Parameter Name="relationshipQualifier" Type="System.String" />
        <Parameter Name="thisRole" Type="System.String" />
        <Parameter Name="classDefinitionsOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceObject">该查询的源对象的路径。</param>
        <param name="relationshipClass">要查询的关系的类型。</param>
        <param name="relationshipQualifier">需要在关系对象中存在的限定符。</param>
        <param name="thisRole">源对象需要在关系中扮演的角色。</param>
        <param name="classDefinitionsOnly">当此方法返回时，它包含一个布尔值，该值指示只返回结果对象的类定义。</param>
        <summary>按照给定的参数集初始化 <see cref="T:System.Management.RelationshipQuery" /> 类的新实例。 假定查询为实例查询（相对于架构查询）。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildQuery">
      <MemberSignature Language="C#" Value="protected internal void BuildQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void BuildQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.RelationshipQuery.BuildQuery" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub BuildQuery ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void BuildQuery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>根据当前属性值生成查询字符串。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassDefinitionsOnly">
      <MemberSignature Language="C#" Value="public bool ClassDefinitionsOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ClassDefinitionsOnly" />
      <MemberSignature Language="DocId" Value="P:System.Management.RelationshipQuery.ClassDefinitionsOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ClassDefinitionsOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ClassDefinitionsOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示只返回相关关系对象的类定义。</summary>
        <value>返回一个 <see cref="T:System.Boolean" /> 值，该值指示只返回相关关系对象的类定义。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置此属性的值将覆盖任何以前的值存储在对象中。 作为其副作用是，查询字符串重新生成，以反映新的标志。  
  
## <a name="property-value"></a>属性值  
 `true` 如果查询请求的结果集中; 只能使用类定义，否则为`false`。  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.RelationshipQuery.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建对象的一个副本。</summary>
        <returns>所复制的对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ICloneable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="IsSchemaQuery">
      <MemberSignature Language="C#" Value="public bool IsSchemaQuery { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSchemaQuery" />
      <MemberSignature Language="DocId" Value="P:System.Management.RelationshipQuery.IsSchemaQuery" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSchemaQuery As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSchemaQuery { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示此查询是架构查询还是实例查询。</summary>
        <value>返回一个 <see cref="T:System.Boolean" /> 值，该值指示此查询是否为架构查询。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置此属性的值将覆盖任何以前的值存储在对象中。 重新生成的查询字符串以反映新的查询类型。  
  
## <a name="property-value"></a>属性值  
 `true` 如果此查询应求得架构;`false`如果查询应求得实例。  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseQuery">
      <MemberSignature Language="C#" Value="protected internal override void ParseQuery (string query);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void ParseQuery(string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.RelationshipQuery.ParseQuery(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub ParseQuery (query As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void ParseQuery(System::String ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="query">要分析的查询字符串。</param>
        <summary>分析查询字符串并相应地设置属性值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipClass">
      <MemberSignature Language="C#" Value="public string RelationshipClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipClass" />
      <MemberSignature Language="DocId" Value="P:System.Management.RelationshipQuery.RelationshipClass" />
      <MemberSignature Language="VB.NET" Value="Public Property RelationshipClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelationshipClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置查询中所需的关系对象的类。</summary>
        <value>返回一个 <see cref="T:System.String" /> 值，该值包含关系类名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置此属性的值将覆盖任何以前的值存储在对象中。 重新生成的查询字符串以反映新的类。  
  
## <a name="property-value"></a>属性值  
 包含关系类名称的字符串。  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipQualifier">
      <MemberSignature Language="C#" Value="public string RelationshipQualifier { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipQualifier" />
      <MemberSignature Language="DocId" Value="P:System.Management.RelationshipQuery.RelationshipQualifier" />
      <MemberSignature Language="VB.NET" Value="Public Property RelationshipQualifier As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelationshipQualifier { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置关系对象上所需的限定符。</summary>
        <value>返回一个 <see cref="T:System.String" /> 值，该值包含关系对象所需的限定符的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置此属性的值将覆盖任何以前的值存储在对象中。 重新生成的查询字符串以反映新的限定符。  
  
## <a name="property-value"></a>属性值  
 包含所需的关系对象的限定符的名称的字符串。  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceObject">
      <MemberSignature Language="C#" Value="public string SourceObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Management.RelationshipQuery.SourceObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceObject As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceObject { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置此查询的源对象。</summary>
        <value>返回一个 <see cref="T:System.String" /> 值，该值包含要用于查询的对象的路径。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置此属性的值将覆盖任何以前的值存储在对象中。 重新生成的查询字符串以反映新的源对象。  
  
## <a name="property-value"></a>属性值  
 表示要用于此查询的对象的路径的字符串。  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisRole">
      <MemberSignature Language="C#" Value="public string ThisRole { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThisRole" />
      <MemberSignature Language="DocId" Value="P:System.Management.RelationshipQuery.ThisRole" />
      <MemberSignature Language="VB.NET" Value="Public Property ThisRole As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThisRole { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置源对象在关系中扮演的角色。</summary>
        <value>返回一个 <see cref="T:System.String" /> 值，该值包含此对象的角色。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置此属性的值将覆盖任何以前的值存储在对象中。 重新生成的查询字符串以反映新的角色。  
  
## <a name="property-value"></a>属性值  
 包含此对象的角色的字符串。  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>