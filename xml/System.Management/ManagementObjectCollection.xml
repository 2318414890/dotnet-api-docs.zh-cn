<Type Name="ManagementObjectCollection" FullName="System.Management.ManagementObjectCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f5d61c9d4c7eafd8070e97d82709b3df60343e21" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36554686" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ManagementObjectCollection : IDisposable, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagementObjectCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Management.ManagementObjectCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementObjectCollection&#xA;Implements ICollection, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementObjectCollection : IDisposable, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type ManagementObjectCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="8e69b-101">表示通过 WMI 检索到的管理对象的不同集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8e69b-101">Represents different collections of management objects retrieved through WMI.</span>
      </span>
      <span data-ttu-id="8e69b-102">此集合中的对象为从 <see cref="T:System.Management.ManagementBaseObject" /> 派生的类型，包括 <see cref="T:System.Management.ManagementObject" /> 和 <see cref="T:System.Management.ManagementClass" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8e69b-102">The objects in this collection are of <see cref="T:System.Management.ManagementBaseObject" />-derived types, including <see cref="T:System.Management.ManagementObject" /> and <see cref="T:System.Management.ManagementClass" />.</span>
      </span>
      <span data-ttu-id="8e69b-103">通过 <see cref="T:System.Management.ManagementObjectSearcher" /> 对象执行 WMI 查询，或者通过表示指定类型的 <see cref="T:System.Management.ManagementClass" /> 检索该类型管理对象的枚举，可得到此集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8e69b-103">The collection can be the result of a WMI query executed through a <see cref="T:System.Management.ManagementObjectSearcher" />, or an enumeration of management objects of a specified type retrieved through a <see cref="T:System.Management.ManagementClass" /> representing that type.</span>
      </span>
      <span data-ttu-id="8e69b-104">此外，这也可能是以指定方式与特定管理对象相关的管理对象集合 — 在这种情况下，此集合可以通过诸如 <see cref="M:System.Management.ManagementObject.GetRelated" /> 之类的方法检索到。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8e69b-104">In addition, this can be a collection of management objects related in a specified way to a specific management object - in this case the collection would be retrieved through a method such as <see cref="M:System.Management.ManagementObject.GetRelated" />.</span>
      </span>
      <span data-ttu-id="8e69b-105">此集合可以通过 <see cref="T:System.Management.ManagementObjectCollection.ManagementObjectEnumerator" /> 遍历，并且能够针对各种管理任务对集合中的对象进行检查或操作。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8e69b-105">The collection can be walked using the <see cref="T:System.Management.ManagementObjectCollection.ManagementObjectEnumerator" /> and objects in it can be inspected or manipulated for various management tasks.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8e69b-106">将集合复制到数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e69b-106">Copies the collection to an array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementObjectCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="managementObjectCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="8e69b-107">要复制到的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e69b-107">An array to copy to.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="8e69b-108">从其开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e69b-108">The index to start from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8e69b-109">将集合复制到数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e69b-109">Copies the collection to an array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="8e69b-110">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="8e69b-110">.NET Framework Security</span></span>  
 <span data-ttu-id="8e69b-111">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="8e69b-111">Full trust for the immediate caller.</span></span> <span data-ttu-id="8e69b-112">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="8e69b-112">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8e69b-113">有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。</span><span class="sxs-lookup"><span data-stu-id="8e69b-113">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Management.ManagementBaseObject[] objectCollection, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Management.ManagementBaseObject[] objectCollection, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementObjectCollection.CopyTo(System.Management.ManagementBaseObject[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (objectCollection As ManagementBaseObject(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Management::ManagementBaseObject ^&gt; ^ objectCollection, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Management.ManagementBaseObject[] * int -&gt; unit" Usage="managementObjectCollection.CopyTo (objectCollection, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectCollection" Type="System.Management.ManagementBaseObject[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="objectCollection">
          <span data-ttu-id="8e69b-114">目标数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e69b-114">The target array.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="8e69b-115">从其开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e69b-115">The index to start from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8e69b-116">将集合中的项复制到一个 <see cref="T:System.Management.ManagementBaseObject" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e69b-116">Copies the items in the collection to a <see cref="T:System.Management.ManagementBaseObject" /> array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="8e69b-117">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="8e69b-117">.NET Framework Security</span></span>  
 <span data-ttu-id="8e69b-118">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="8e69b-118">Full trust for the immediate caller.</span></span> <span data-ttu-id="8e69b-119">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="8e69b-119">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8e69b-120">有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。</span><span class="sxs-lookup"><span data-stu-id="8e69b-120">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementObjectCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Management.ManagementObjectCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8e69b-121">获取指示集合中的对象数的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e69b-121">Gets a value indicating the number of objects in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8e69b-122">返回一个 <see cref="T:System.Int32" /> 值，该值指示集合中对象的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e69b-122">Returns an <see cref="T:System.Int32" /> value indicating the number of objects in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e69b-123">此属性是代价很高-它要求被枚举集合的所有成员。</span><span class="sxs-lookup"><span data-stu-id="8e69b-123">This property is very expensive - it requires that all members of the collection be enumerated.</span></span>  
  
## <a name="property-value"></a><span data-ttu-id="8e69b-124">属性值</span><span class="sxs-lookup"><span data-stu-id="8e69b-124">Property Value</span></span>  
 <span data-ttu-id="8e69b-125">集合中的对象数。</span><span class="sxs-lookup"><span data-stu-id="8e69b-125">The number of objects in the collection.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="8e69b-126">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="8e69b-126">.NET Framework Security</span></span>  
 <span data-ttu-id="8e69b-127">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="8e69b-127">Full trust for the immediate caller.</span></span> <span data-ttu-id="8e69b-128">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="8e69b-128">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8e69b-129">有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。</span><span class="sxs-lookup"><span data-stu-id="8e69b-129">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementObjectCollection.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="managementObjectCollection.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8e69b-130">释放与该对象关联的资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e69b-130">Releases resources associated with this object.</span>
          </span>
          <span data-ttu-id="8e69b-131">调用该方法后，尝试使用该对象将导致引发 <see cref="T:System.ObjectDisposedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e69b-131">After this method has been called, an attempt to use this object will result in an <see cref="T:System.ObjectDisposedException" /> being thrown.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="8e69b-132">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="8e69b-132">.NET Framework Security</span></span>  
 <span data-ttu-id="8e69b-133">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="8e69b-133">Full trust for the immediate caller.</span></span> <span data-ttu-id="8e69b-134">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="8e69b-134">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8e69b-135">有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。</span><span class="sxs-lookup"><span data-stu-id="8e69b-135">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IDisposable.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ManagementObjectCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementObjectCollection.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ManagementObjectCollection ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="managementObjectCollection.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8e69b-136">处置对象所保留的资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e69b-136">Disposes of resources the object is holding.</span>
          </span>
          <span data-ttu-id="8e69b-137">这是该对象的析构函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e69b-137">This is the destructor for the object.</span>
          </span>
          <span data-ttu-id="8e69b-138">使用析构函数语法表示终结器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e69b-138">Finalizers are expressed using destructor syntax.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="8e69b-139">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="8e69b-139">.NET Framework Security</span></span>  
 <span data-ttu-id="8e69b-140">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="8e69b-140">Full trust for the immediate caller.</span></span> <span data-ttu-id="8e69b-141">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="8e69b-141">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8e69b-142">有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。</span><span class="sxs-lookup"><span data-stu-id="8e69b-142">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Management.ManagementObjectCollection.ManagementObjectEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementObjectCollection/ManagementObjectEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementObjectCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As ManagementObjectCollection.ManagementObjectEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementObjectCollection::ManagementObjectEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Management.ManagementObjectCollection.ManagementObjectEnumerator" Usage="managementObjectCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementObjectCollection+ManagementObjectEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8e69b-143">返回集合的枚举器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e69b-143">Returns the enumerator for the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8e69b-144">可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e69b-144">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e69b-145">仅可以循环 (如 Visual Basic.NET 中所示`For Each`语句或 C#`For`语句) 通过一个只进的枚举一次。</span><span class="sxs-lookup"><span data-stu-id="8e69b-145">You can only iterate (as in a Visual Basic .NET `For Each` statement or a C# `For` statement) through a forward-only enumerator one time.</span></span> <span data-ttu-id="8e69b-146">WMI 会释放包含这些实例的内存，以使无法回退枚举数。</span><span class="sxs-lookup"><span data-stu-id="8e69b-146">The memory containing the instances is released by WMI so that the enumerator cannot be rewound.</span></span> <span data-ttu-id="8e69b-147">因此，<xref:System.Management.ManagementObjectCollection.Count%2A>方法不能使用，因为它要求不用倒带枚举数。</span><span class="sxs-lookup"><span data-stu-id="8e69b-147">Therefore, the <xref:System.Management.ManagementObjectCollection.Count%2A> method cannot be used since it requires rewinding the enumerator.</span></span>  
  
 <span data-ttu-id="8e69b-148">只进的枚举器通常速度更快，并使用的内存少于传统枚举器，但它们不允许调用<xref:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Reset%2A>。</span><span class="sxs-lookup"><span data-stu-id="8e69b-148">Forward-only enumerators are generally much faster and use less memory than conventional enumerators, but they do not allow calls to  <xref:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Reset%2A>.</span></span>  
  
 <span data-ttu-id="8e69b-149">如果枚举数就可倒回，集合中的对象将保留可用于多个枚举。</span><span class="sxs-lookup"><span data-stu-id="8e69b-149">If an enumerator is rewindable, the objects in the collection will be kept available for multiple enumerations.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="8e69b-150">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="8e69b-150">.NET Framework Security</span></span>  
 <span data-ttu-id="8e69b-151">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="8e69b-151">Full trust for the immediate caller.</span></span> <span data-ttu-id="8e69b-152">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="8e69b-152">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8e69b-153">有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。</span><span class="sxs-lookup"><span data-stu-id="8e69b-153">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementObjectCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Management.ManagementObjectCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8e69b-154">获取一个指示对象是否已同步的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e69b-154">Gets a value indicating whether the object is synchronized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8e69b-155">返回一个指示对象是否已同步的 <see cref="T:System.Boolean" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e69b-155">Returns a <see cref="T:System.Boolean" /> value indicating whether the object is synchronized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="8e69b-156">属性值</span><span class="sxs-lookup"><span data-stu-id="8e69b-156">Property Value</span></span>  
 <span data-ttu-id="8e69b-157">`true`如果同步对象，否则`false`。</span><span class="sxs-lookup"><span data-stu-id="8e69b-157">`true`, if the object is synchronized, otherwise `false`.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="8e69b-158">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="8e69b-158">.NET Framework Security</span></span>  
 <span data-ttu-id="8e69b-159">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="8e69b-159">Full trust for the immediate caller.</span></span> <span data-ttu-id="8e69b-160">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="8e69b-160">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8e69b-161">有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。</span><span class="sxs-lookup"><span data-stu-id="8e69b-161">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementObjectCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Management.ManagementObjectCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8e69b-162">获取要用于同步的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e69b-162">Gets the object to be used for synchronization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8e69b-163">返回一个 <see cref="T:System.Object" /> 值，该值表示要用于同步的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e69b-163">Returns an <see cref="T:System.Object" /> value that represents the object to be used for synchronization.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="8e69b-164">属性值</span><span class="sxs-lookup"><span data-stu-id="8e69b-164">Property Value</span></span>  
 <span data-ttu-id="8e69b-165">要用于同步的对象。</span><span class="sxs-lookup"><span data-stu-id="8e69b-165">The object to be used for synchronization.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="8e69b-166">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="8e69b-166">.NET Framework Security</span></span>  
 <span data-ttu-id="8e69b-167">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="8e69b-167">Full trust for the immediate caller.</span></span> <span data-ttu-id="8e69b-168">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="8e69b-168">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8e69b-169">有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。</span><span class="sxs-lookup"><span data-stu-id="8e69b-169">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8e69b-170">返回循环访问 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Management.ManagementObjectCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e69b-170">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Management.ManagementObjectCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8e69b-171">
            <see cref="T:System.Collections.IEnumerator" /> 的一个 <see cref="T:System.Management.ManagementObjectCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e69b-171">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Management.ManagementObjectCollection" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e69b-172">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="8e69b-172">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="8e69b-173">C# 语言的 `foreach` 语句（在 Visual Basic 中为 `for each`）隐藏了枚举数的复杂性。</span><span class="sxs-lookup"><span data-stu-id="8e69b-173">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="8e69b-174">因此，建议使用 `foreach`，而不是直接操作枚举数。</span><span class="sxs-lookup"><span data-stu-id="8e69b-174">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="8e69b-175">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="8e69b-175">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="8e69b-176">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="8e69b-176">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="8e69b-177"><xref:System.Collections.IEnumerator.Reset%2A> 也会将枚举器放回此位置。</span><span class="sxs-lookup"><span data-stu-id="8e69b-177"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="8e69b-178">在此位置，调用<xref:System.Collections.IEnumerator.Current%2A>引发异常。</span><span class="sxs-lookup"><span data-stu-id="8e69b-178">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="8e69b-179">因此，在读取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必须调用 <xref:System.Collections.IEnumerator.Current%2A> 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="8e69b-179">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="8e69b-180">在调用 <xref:System.Collections.IEnumerator.Current%2A> 或 <xref:System.Collections.IEnumerator.MoveNext%2A> 之前，<xref:System.Collections.IEnumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="8e69b-180"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="8e69b-181"><xref:System.Collections.IEnumerator.MoveNext%2A> 将 <xref:System.Collections.IEnumerator.Current%2A> 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="8e69b-181"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="8e69b-182">如果<xref:System.Collections.IEnumerator.MoveNext%2A>越过的末尾的集合，枚举数定位在集合中的最后一个元素的后面和<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`。</span><span class="sxs-lookup"><span data-stu-id="8e69b-182">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="8e69b-183">当枚举器位于此位置上，后续调用<xref:System.Collections.IEnumerator.MoveNext%2A>还返回`false`。</span><span class="sxs-lookup"><span data-stu-id="8e69b-183">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="8e69b-184">如果最后一次调用到<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`，则调用<xref:System.Collections.IEnumerator.Current%2A>引发异常。</span><span class="sxs-lookup"><span data-stu-id="8e69b-184">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="8e69b-185">若要再次将 <xref:System.Collections.IEnumerator.Current%2A> 设置为集合的第一个元素，可以调用 <xref:System.Collections.IEnumerator.Reset%2A> 并接着调用 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="8e69b-185">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="8e69b-186">只要集合保持不变，枚举数就保持有效。</span><span class="sxs-lookup"><span data-stu-id="8e69b-186">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="8e69b-187">如果对集合进行更改，例如添加、 修改或删除元素，则枚举数将失效且不可恢复失效，并且下次调用<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>引发<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="8e69b-187">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="8e69b-188">如果之间修改集合<xref:System.Collections.IEnumerator.MoveNext%2A>和<xref:System.Collections.IEnumerator.Current%2A>，<xref:System.Collections.IEnumerator.Current%2A>返回到，设置的元素，即使枚举数已经无效。</span><span class="sxs-lookup"><span data-stu-id="8e69b-188">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="8e69b-189">该枚举数不具有独占访问集合的权限；因此，枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="8e69b-189">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="8e69b-190">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="8e69b-190">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="8e69b-191">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="8e69b-191">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="8e69b-192">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="8e69b-192">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>