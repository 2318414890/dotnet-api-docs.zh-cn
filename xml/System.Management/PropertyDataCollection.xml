<Type Name="PropertyDataCollection" FullName="System.Management.PropertyDataCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="63daeab99b9ec25b905dc7c9c676822679bdd350" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37648276" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PropertyDataCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyDataCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Management.PropertyDataCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyDataCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyDataCollection : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type PropertyDataCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="0c598-101">表示 WMI 对象的属性集。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c598-101">Represents the set of properties of a WMI object.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0c598-102">下面的示例列出有关的信息**Win32_OperatingSystem**类使用<xref:System.Management.PropertyData>类。</span><span class="sxs-lookup"><span data-stu-id="0c598-102">The following example lists information about the **Win32_OperatingSystem** class using the <xref:System.Management.PropertyData> class.</span></span> <span data-ttu-id="0c598-103">有关详细信息**Win32_OperatingSystem**，请参阅位于 MSDN Library 中的 Windows Management Instrumentation 文档http://msdn.microsoft.com/library。</span><span class="sxs-lookup"><span data-stu-id="0c598-103">For more information about **Win32_OperatingSystem**, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span>  
  
 [!code-csharp[wminet_PropertyDataCollection#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_PropertyDataCollection/cs/PropertyDataCollection.cs#1)]
 [!code-vb[wminet_PropertyDataCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_PropertyDataCollection/vb/PropertyDataCollection.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c598-104">添加一个新的 <see cref="T:System.Management.PropertyData" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-104">Adds a new <see cref="T:System.Management.PropertyData" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (string propertyName, object propertyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string propertyName, object propertyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.PropertyDataCollection.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (propertyName As String, propertyValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ propertyName, System::Object ^ propertyValue);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj -&gt; unit&#xA;override this.Add : string * obj -&gt; unit" Usage="propertyDataCollection.Add (propertyName, propertyValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="0c598-105">新属性的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-105">The name of the new property.</span>
          </span>
        </param>
        <param name="propertyValue">
          <span data-ttu-id="0c598-106">属性的值（不能为 null）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-106">The value of the property (cannot be null).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c598-107">添加新的、带有指定值的 <see cref="T:System.Management.PropertyData" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-107">Adds a new <see cref="T:System.Management.PropertyData" /> with the specified value.</span>
          </span>
          <span data-ttu-id="0c598-108">值不能为 null，并且必须能够转换为公共信息模型 (CIM) 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-108">The value cannot be null and must be convertible to a Common Information Model (CIM) type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c598-109">属性可以仅添加到类定义，而不是实例中。</span><span class="sxs-lookup"><span data-stu-id="0c598-109">Properties can only be added to class definitions, not to instances.</span></span> <span data-ttu-id="0c598-110">此方法仅在调用时有效<xref:System.Management.PropertyDataCollection>在<xref:System.Management.ManagementClass>。</span><span class="sxs-lookup"><span data-stu-id="0c598-110">This method is only valid when invoked on a <xref:System.Management.PropertyDataCollection> in a <xref:System.Management.ManagementClass>.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="0c598-111">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="0c598-111">.NET Framework Security</span></span>  
 <span data-ttu-id="0c598-112">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="0c598-112">Full trust for the immediate caller.</span></span> <span data-ttu-id="0c598-113">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="0c598-113">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="0c598-114">有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。</span><span class="sxs-lookup"><span data-stu-id="0c598-114">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string propertyName, System.Management.CimType propertyType, bool isArray);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string propertyName, valuetype System.Management.CimType propertyType, bool isArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.PropertyDataCollection.Add(System.String,System.Management.CimType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (propertyName As String, propertyType As CimType, isArray As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ propertyName, System::Management::CimType propertyType, bool isArray);" />
      <MemberSignature Language="F#" Value="member this.Add : string * System.Management.CimType * bool -&gt; unit" Usage="propertyDataCollection.Add (propertyName, propertyType, isArray)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Management.CimType" />
        <Parameter Name="isArray" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="0c598-115">属性的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-115">The name of the property.</span>
          </span>
        </param>
        <param name="propertyType">
          <span data-ttu-id="0c598-116">属性的公共信息模型 (CIM) 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-116">The Common Information Model (CIM) type of the property.</span>
          </span>
        </param>
        <param name="isArray">
          <span data-ttu-id="0c598-117">若为 <see langword="true" />，则指定属性为数组类型；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-117">
              <see langword="true" /> to specify that the property is an array type; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c598-118">添加新的、没有赋值的 <see cref="T:System.Management.PropertyData" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-118">Adds a new <see cref="T:System.Management.PropertyData" /> with no assigned value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c598-119">属性可以仅添加到类定义，而不是实例中。</span><span class="sxs-lookup"><span data-stu-id="0c598-119">Properties can only be added to class definitions, not to instances.</span></span> <span data-ttu-id="0c598-120">此方法仅在调用时有效<xref:System.Management.PropertyDataCollection>在<xref:System.Management.ManagementClass>。</span><span class="sxs-lookup"><span data-stu-id="0c598-120">This method is only valid when invoked on a <xref:System.Management.PropertyDataCollection> in a <xref:System.Management.ManagementClass>.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="0c598-121">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="0c598-121">.NET Framework Security</span></span>  
 <span data-ttu-id="0c598-122">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="0c598-122">Full trust for the immediate caller.</span></span> <span data-ttu-id="0c598-123">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="0c598-123">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="0c598-124">有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。</span><span class="sxs-lookup"><span data-stu-id="0c598-124">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string propertyName, object propertyValue, System.Management.CimType propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string propertyName, object propertyValue, valuetype System.Management.CimType propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.PropertyDataCollection.Add(System.String,System.Object,System.Management.CimType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (propertyName As String, propertyValue As Object, propertyType As CimType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ propertyName, System::Object ^ propertyValue, System::Management::CimType propertyType);" />
      <MemberSignature Language="F#" Value="member this.Add : string * obj * System.Management.CimType -&gt; unit" Usage="propertyDataCollection.Add (propertyName, propertyValue, propertyType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyValue" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Management.CimType" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="0c598-125">属性的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-125">The name of the property.</span>
          </span>
        </param>
        <param name="propertyValue">
          <span data-ttu-id="0c598-126">属性的值（可以为 null）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-126">The value of the property (which can be null).</span>
          </span>
        </param>
        <param name="propertyType">
          <span data-ttu-id="0c598-127">属性的 CIM 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-127">The CIM type of the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c598-128">添加一个具有指定值和公共信息模型 (CIM) 类型的新 <see cref="T:System.Management.PropertyData" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-128">Adds a new <see cref="T:System.Management.PropertyData" /> with the specified value and Common Information Model (CIM) type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c598-129">属性可以仅添加到类定义，而不是实例中。</span><span class="sxs-lookup"><span data-stu-id="0c598-129">Properties can only be added to class definitions, not to instances.</span></span> <span data-ttu-id="0c598-130">此方法仅在调用时有效<xref:System.Management.PropertyDataCollection>在<xref:System.Management.ManagementClass>。</span><span class="sxs-lookup"><span data-stu-id="0c598-130">This method is only valid when invoked on a <xref:System.Management.PropertyDataCollection> in a <xref:System.Management.ManagementClass>.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="0c598-131">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="0c598-131">.NET Framework Security</span></span>  
 <span data-ttu-id="0c598-132">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="0c598-132">Full trust for the immediate caller.</span></span> <span data-ttu-id="0c598-133">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="0c598-133">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="0c598-134">有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。</span><span class="sxs-lookup"><span data-stu-id="0c598-134">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c598-135">将 <see cref="T:System.Management.PropertyDataCollection" /> 对象复制到数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-135">Copies the <see cref="T:System.Management.PropertyDataCollection" /> object into an array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.PropertyDataCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="propertyDataCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0c598-136">
            <see cref="T:System.Management.PropertyDataCollection" /> 所要复制到的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-136">The array to which to copy the <see cref="T:System.Management.PropertyDataCollection" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0c598-137">复制操作开始所在的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-137">The index from which to start copying.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c598-138">将 <see cref="T:System.Management.PropertyDataCollection" /> 复制到一个数组中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-138">Copies the <see cref="T:System.Management.PropertyDataCollection" /> into an array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="0c598-139">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="0c598-139">.NET Framework Security</span></span>  
 <span data-ttu-id="0c598-140">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="0c598-140">Full trust for the immediate caller.</span></span> <span data-ttu-id="0c598-141">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="0c598-141">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="0c598-142">有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。</span><span class="sxs-lookup"><span data-stu-id="0c598-142">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Management.PropertyData[] propertyArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Management.PropertyData[] propertyArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.PropertyDataCollection.CopyTo(System.Management.PropertyData[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (propertyArray As PropertyData(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Management::PropertyData ^&gt; ^ propertyArray, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Management.PropertyData[] * int -&gt; unit" Usage="propertyDataCollection.CopyTo (propertyArray, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyArray" Type="System.Management.PropertyData[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propertyArray">
          <span data-ttu-id="0c598-143">将包含要复制的 <see cref="T:System.Management.PropertyDataCollection" /> 的目标数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-143">The destination array to contain the copied <see cref="T:System.Management.PropertyDataCollection" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0c598-144">目标数组中开始复制处的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-144">The index in the destination array from which to start copying.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c598-145">将 <see cref="T:System.Management.PropertyDataCollection" /> 复制到一个专用的 <see cref="T:System.Management.PropertyData" /> 对象数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-145">Copies the <see cref="T:System.Management.PropertyDataCollection" /> to a specialized <see cref="T:System.Management.PropertyData" /> object array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="0c598-146">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="0c598-146">.NET Framework Security</span></span>  
 <span data-ttu-id="0c598-147">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="0c598-147">Full trust for the immediate caller.</span></span> <span data-ttu-id="0c598-148">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="0c598-148">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="0c598-149">有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。</span><span class="sxs-lookup"><span data-stu-id="0c598-149">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Management.PropertyDataCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Management.PropertyDataCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c598-150">获取 <see cref="T:System.Management.PropertyDataCollection" /> 中的对象的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-150">Gets the number of objects in the <see cref="T:System.Management.PropertyDataCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c598-151">返回一个 <see cref="T:System.Int32" /> 值，该值表示集合中对象的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-151">Returns an <see cref="T:System.Int32" /> value representing the number of objects in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="0c598-152">属性值</span><span class="sxs-lookup"><span data-stu-id="0c598-152">Property Value</span></span>  
 <span data-ttu-id="0c598-153">集合中的对象数。</span><span class="sxs-lookup"><span data-stu-id="0c598-153">The number of objects in the collection.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="0c598-154">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="0c598-154">.NET Framework Security</span></span>  
 <span data-ttu-id="0c598-155">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="0c598-155">Full trust for the immediate caller.</span></span> <span data-ttu-id="0c598-156">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="0c598-156">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="0c598-157">有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。</span><span class="sxs-lookup"><span data-stu-id="0c598-157">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Management.PropertyDataCollection.PropertyDataEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.PropertyDataCollection/PropertyDataEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.PropertyDataCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As PropertyDataCollection.PropertyDataEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::PropertyDataCollection::PropertyDataEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Management.PropertyDataCollection.PropertyDataEnumerator" Usage="propertyDataCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.PropertyDataCollection+PropertyDataEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c598-158">返回此 <see cref="T:System.Management.PropertyDataCollection" /> 的枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-158">Returns the enumerator for this <see cref="T:System.Management.PropertyDataCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c598-159">可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-159">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c598-160">仅可循环访问 (如 Visual Basic.NET 中所示`For Each`语句或 C#`For`语句) 通过一个只进的枚举器一次。</span><span class="sxs-lookup"><span data-stu-id="0c598-160">You can only iterate (as in a Visual Basic .NET `For Each` statement or a C# `For` statement) through a forward-only enumerator one time.</span></span> <span data-ttu-id="0c598-161">WMI 会释放包含实例的内存，以使不能回退枚举器。</span><span class="sxs-lookup"><span data-stu-id="0c598-161">The memory containing the instances is released by WMI so that the enumerator cannot be rewound.</span></span> <span data-ttu-id="0c598-162">因此，<xref:System.Management.PropertyDataCollection.Count%2A>不能使用方法，因为它需要回退枚举数。</span><span class="sxs-lookup"><span data-stu-id="0c598-162">Therefore, the <xref:System.Management.PropertyDataCollection.Count%2A> method cannot be used since it requires rewinding the enumerator.</span></span>  
  
 <span data-ttu-id="0c598-163">只进的枚举器通常速度要快得多，使用更少的内存比传统的枚举器，但它们不允许对调用<xref:System.Management.PropertyDataCollection.PropertyDataEnumerator.Reset%2A>。</span><span class="sxs-lookup"><span data-stu-id="0c598-163">Forward-only enumerators are generally much faster and use less memory than conventional enumerators, but they do not allow calls to <xref:System.Management.PropertyDataCollection.PropertyDataEnumerator.Reset%2A>.</span></span>  
  
 <span data-ttu-id="0c598-164">一个枚举器是可回退，如果集合中的对象将保留用于多次枚举。</span><span class="sxs-lookup"><span data-stu-id="0c598-164">If an enumerator is rewindable, the objects in the collection will be kept available for multiple enumerations.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="0c598-165">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="0c598-165">.NET Framework Security</span></span>  
 <span data-ttu-id="0c598-166">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="0c598-166">Full trust for the immediate caller.</span></span> <span data-ttu-id="0c598-167">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="0c598-167">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="0c598-168">有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。</span><span class="sxs-lookup"><span data-stu-id="0c598-168">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Management.PropertyDataCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Management.PropertyDataCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c598-169">获取一个指示对象是否已同步的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-169">Gets a value indicating whether the object is synchronized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c598-170">返回一个指示对象是否已同步的 <see cref="T:System.Boolean" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-170">Returns a <see cref="T:System.Boolean" /> value indicating whether the object is synchronized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="0c598-171">属性值</span><span class="sxs-lookup"><span data-stu-id="0c598-171">Property Value</span></span>  
 <span data-ttu-id="0c598-172">`true` 如果对象已同步;否则为`false`。</span><span class="sxs-lookup"><span data-stu-id="0c598-172">`true` if the object is synchronized; otherwise, `false`.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="0c598-173">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="0c598-173">.NET Framework Security</span></span>  
 <span data-ttu-id="0c598-174">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="0c598-174">Full trust for the immediate caller.</span></span> <span data-ttu-id="0c598-175">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="0c598-175">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="0c598-176">有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。</span><span class="sxs-lookup"><span data-stu-id="0c598-176">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Management.PropertyData this[string propertyName] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.PropertyData Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Management.PropertyDataCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(propertyName As String) As PropertyData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Management::PropertyData ^ default[System::String ^] { System::Management::PropertyData ^ get(System::String ^ propertyName); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Management.PropertyData" Usage="System.Management.PropertyDataCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.PropertyData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="0c598-177">要检索的属性的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-177">The name of the property to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c598-178">使用 [] 语法从 <see cref="T:System.Management.PropertyDataCollection" /> 中获取指定属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-178">Gets the specified property from the <see cref="T:System.Management.PropertyDataCollection" />, using [] syntax.</span>
          </span>
          <span data-ttu-id="0c598-179">此属性是 <see cref="T:System.Management.PropertyDataCollection" /> 类的索引器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-179">This property is the indexer for the <see cref="T:System.Management.PropertyDataCollection" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c598-180">返回一个 <see cref="T:System.Management.PropertyData" />，它包含集合中指定属性的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-180">Returns a <see cref="T:System.Management.PropertyData" /> containing the data for a specified property in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="0c598-181">属性值</span><span class="sxs-lookup"><span data-stu-id="0c598-181">Property Value</span></span>  
 <span data-ttu-id="0c598-182">一个<xref:System.Management.PropertyData>、 根据指定的名称。</span><span class="sxs-lookup"><span data-stu-id="0c598-182">A <xref:System.Management.PropertyData>, based on the name specified.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="0c598-183">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="0c598-183">.NET Framework Security</span></span>  
 <span data-ttu-id="0c598-184">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="0c598-184">Full trust for the immediate caller.</span></span> <span data-ttu-id="0c598-185">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="0c598-185">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="0c598-186">有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。</span><span class="sxs-lookup"><span data-stu-id="0c598-186">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c598-187">下面的示例获取**Freespace**属性从<xref:System.Management.ManagementClass>。</span><span class="sxs-lookup"><span data-stu-id="0c598-187">The following example gets the **Freespace** property from a <xref:System.Management.ManagementClass>.</span></span>  
  
 [!code-csharp[wminet_PropertyDataCollection_Item#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_PropertyDataCollection_Item/cs/PropertyDataCollection_Item.cs#1)]
 [!code-vb[wminet_PropertyDataCollection_Item#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_PropertyDataCollection_Item/vb/PropertyDataCollection_Item.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.PropertyDataCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; unit&#xA;override this.Remove : string -&gt; unit" Usage="propertyDataCollection.Remove propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="0c598-188">要删除的属性的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-188">The name of the property to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c598-189">从 <see cref="T:System.Management.PropertyData" /> 中移除 <see cref="T:System.Management.PropertyDataCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-189">Removes a <see cref="T:System.Management.PropertyData" /> from the <see cref="T:System.Management.PropertyDataCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c598-190">仅可以从类定义，不能从实例中删除属性。</span><span class="sxs-lookup"><span data-stu-id="0c598-190">Properties can only be removed from class definitions, not from instances.</span></span> <span data-ttu-id="0c598-191">此方法仅对属性集合在调用时有效<xref:System.Management.ManagementClass>。</span><span class="sxs-lookup"><span data-stu-id="0c598-191">This method is only valid when invoked on a property collection in a <xref:System.Management.ManagementClass>.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="0c598-192">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="0c598-192">.NET Framework Security</span></span>  
 <span data-ttu-id="0c598-193">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="0c598-193">Full trust for the immediate caller.</span></span> <span data-ttu-id="0c598-194">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="0c598-194">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="0c598-195">有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。</span><span class="sxs-lookup"><span data-stu-id="0c598-195">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Management.PropertyDataCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Management.PropertyDataCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c598-196">获取要用于同步的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-196">Gets the object to be used for synchronization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c598-197">返回一个 <see cref="T:System.Object" /> 值，该值包含要用于同步的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-197">Returns an <see cref="T:System.Object" /> value containing the object to be used for synchronization.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="0c598-198">属性值</span><span class="sxs-lookup"><span data-stu-id="0c598-198">Property Value</span></span>  
 <span data-ttu-id="0c598-199">要用于同步的对象。</span><span class="sxs-lookup"><span data-stu-id="0c598-199">The object to be used for synchronization.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="0c598-200">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="0c598-200">.NET Framework Security</span></span>  
 <span data-ttu-id="0c598-201">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="0c598-201">Full trust for the immediate caller.</span></span> <span data-ttu-id="0c598-202">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="0c598-202">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="0c598-203">有关详细信息，请参阅[通过部分受信任的代码使用库](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。</span><span class="sxs-lookup"><span data-stu-id="0c598-203">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c598-204">返回循环访问 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Management.PropertyDataCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-204">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Management.PropertyDataCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c598-205">
            <see cref="T:System.Collections.IEnumerator" /> 的一个 <see cref="T:System.Management.PropertyDataCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c598-205">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Management.PropertyDataCollection" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c598-206">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="0c598-206">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="0c598-207">C# 语言的 `foreach` 语句（在 Visual Basic 中为 `for each`）隐藏了枚举数的复杂性。</span><span class="sxs-lookup"><span data-stu-id="0c598-207">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="0c598-208">因此，建议使用 `foreach`，而不是直接操作枚举数。</span><span class="sxs-lookup"><span data-stu-id="0c598-208">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="0c598-209">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="0c598-209">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="0c598-210">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="0c598-210">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="0c598-211"><xref:System.Collections.IEnumerator.Reset%2A> 也会将枚举器放回此位置。</span><span class="sxs-lookup"><span data-stu-id="0c598-211"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="0c598-212">在此位置，调用<xref:System.Collections.IEnumerator.Current%2A>将引发异常。</span><span class="sxs-lookup"><span data-stu-id="0c598-212">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="0c598-213">因此，在读取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必须调用 <xref:System.Collections.IEnumerator.Current%2A> 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="0c598-213">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="0c598-214">在调用 <xref:System.Collections.IEnumerator.Current%2A> 或 <xref:System.Collections.IEnumerator.MoveNext%2A> 之前，<xref:System.Collections.IEnumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="0c598-214"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="0c598-215"><xref:System.Collections.IEnumerator.MoveNext%2A> 将 <xref:System.Collections.IEnumerator.Current%2A> 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="0c598-215"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="0c598-216">如果<xref:System.Collections.IEnumerator.MoveNext%2A>越过集合，枚举器的末尾放置在集合中的最后一个元素的后面和<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`。</span><span class="sxs-lookup"><span data-stu-id="0c598-216">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="0c598-217">当枚举数位于此位置上，对后续调用<xref:System.Collections.IEnumerator.MoveNext%2A>还返回`false`。</span><span class="sxs-lookup"><span data-stu-id="0c598-217">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="0c598-218">如果最后一次调用到<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`，则调用<xref:System.Collections.IEnumerator.Current%2A>将引发异常。</span><span class="sxs-lookup"><span data-stu-id="0c598-218">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="0c598-219">若要再次将 <xref:System.Collections.IEnumerator.Current%2A> 设置为集合的第一个元素，可以调用 <xref:System.Collections.IEnumerator.Reset%2A> 并接着调用 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="0c598-219">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="0c598-220">只要集合保持不变，枚举数就保持有效。</span><span class="sxs-lookup"><span data-stu-id="0c598-220">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="0c598-221">如果进行了更改到集合中，例如添加、 修改或删除元素，该枚举数将失效且不可恢复，并且下次调用<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>引发<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="0c598-221">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="0c598-222">如果集合修改之间<xref:System.Collections.IEnumerator.MoveNext%2A>并<xref:System.Collections.IEnumerator.Current%2A>，<xref:System.Collections.IEnumerator.Current%2A>返回设置为时，该元素，即使该枚举数已经无效。</span><span class="sxs-lookup"><span data-stu-id="0c598-222">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="0c598-223">该枚举数不具有独占访问集合的权限；因此，枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="0c598-223">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="0c598-224">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="0c598-224">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="0c598-225">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="0c598-225">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="0c598-226">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="0c598-226">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>