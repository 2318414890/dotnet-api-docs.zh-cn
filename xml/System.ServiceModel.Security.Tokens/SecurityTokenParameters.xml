<Type Name="SecurityTokenParameters" FullName="System.ServiceModel.Security.Tokens.SecurityTokenParameters">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5e168d8bde453ff8bd8097d240e8825afd384e04" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56776803" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityTokenParameters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenParameters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenParameters" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenParameters abstract" />
  <TypeSignature Language="F#" Value="type SecurityTokenParameters = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fb87c-101">指定实现时表示安全令牌参数的 <see langword="abstract" /> 类。</span><span class="sxs-lookup"><span data-stu-id="fb87c-101">Specifies an <see langword="abstract" /> class that when implemented represents security token parameters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb87c-102">安全令牌参数提供安全绑定元素所需的有关令牌的信息（例如，令牌类型、颁发者等）。</span><span class="sxs-lookup"><span data-stu-id="fb87c-102">Security token parameters provide information about the tokens (for example, token type, issuer, and so on) required by the security binding element.</span></span>  
  
 <span data-ttu-id="fb87c-103">从该安全令牌参数派生的安全令牌参数类是令牌属性和方法的集合，并且可用于创建各种不同的安全绑定元素和令牌。</span><span class="sxs-lookup"><span data-stu-id="fb87c-103">The security token parameter classes derived from this one are a collection of token properties and methods, and are used in creating different kinds of security binding elements and tokens.</span></span> <span data-ttu-id="fb87c-104">并非所有的属性都与所有的派生类相关。</span><span class="sxs-lookup"><span data-stu-id="fb87c-104">Not all of the properties are relevant to all derived classes.</span></span> <span data-ttu-id="fb87c-105">例如，在令牌（SAML 令牌）已颁发的情况下，<xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.ReferenceStyle%2A> 就没有相关性。</span><span class="sxs-lookup"><span data-stu-id="fb87c-105">For example, the <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.ReferenceStyle%2A> has no relevance in an issued token (SAML token) case.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb87c-106">下面的代码演示调用此类的自定义重写*CreditCardTokenParameters*。</span><span class="sxs-lookup"><span data-stu-id="fb87c-106">The following code shows a custom override of this class called *CreditCardTokenParameters*.</span></span>  
  
 [!code-csharp[c_CustomToken#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_customtoken/cs/source.cs#2)]
 [!code-vb[c_CustomToken#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customtoken/vb/source.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fb87c-107">初始化 <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="fb87c-107">Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb87c-108">这些重载之间的区别是各个实例属性值的来源。</span><span class="sxs-lookup"><span data-stu-id="fb87c-108">The difference between these overloads is where instance property values come from.</span></span> <span data-ttu-id="fb87c-109"><xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.%23ctor%2A> 将它们设置为各自的默认值。</span><span class="sxs-lookup"><span data-stu-id="fb87c-109"><xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.%23ctor%2A> sets them to their default values.</span></span> <span data-ttu-id="fb87c-110"><xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.%23ctor%2A> 从输入参数引用的实例中获取它们。</span><span class="sxs-lookup"><span data-stu-id="fb87c-110"><xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.%23ctor%2A> takes them from the instance referenced by the input parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenParameters();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb87c-111">初始化 <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="fb87c-111">Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb87c-112">将新实例属性值设置为各自的默认值：</span><span class="sxs-lookup"><span data-stu-id="fb87c-112">The new instance property values are set to their defaults:</span></span>  
  
-   <span data-ttu-id="fb87c-113">将 <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.InclusionMode%2A> 设置为 <xref:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.AlwaysToRecipient>。</span><span class="sxs-lookup"><span data-stu-id="fb87c-113"><xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.InclusionMode%2A> is set to <xref:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.AlwaysToRecipient>.</span></span>  
  
-   <span data-ttu-id="fb87c-114">将 <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.ReferenceStyle%2A> 设置为 <xref:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle.Internal>。</span><span class="sxs-lookup"><span data-stu-id="fb87c-114"><xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.ReferenceStyle%2A> is set to <xref:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle.Internal>.</span></span>  
  
-   <span data-ttu-id="fb87c-115">将 <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.RequireDerivedKeys%2A> 设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="fb87c-115"><xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.RequireDerivedKeys%2A> is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenParameters (System.ServiceModel.Security.Tokens.SecurityTokenParameters other);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Security.Tokens.SecurityTokenParameters other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.SecurityTokenParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (other As SecurityTokenParameters)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenParameters(System::ServiceModel::Security::Tokens::SecurityTokenParameters ^ other);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Security.Tokens.SecurityTokenParameters : System.ServiceModel.Security.Tokens.SecurityTokenParameters -&gt; System.ServiceModel.Security.Tokens.SecurityTokenParameters" Usage="new System.ServiceModel.Security.Tokens.SecurityTokenParameters other" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.ServiceModel.Security.Tokens.SecurityTokenParameters" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="fb87c-116">该类的其他实例。</span><span class="sxs-lookup"><span data-stu-id="fb87c-116">The other instance of this class.</span></span></param>
        <summary><span data-ttu-id="fb87c-117">从 <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" /> 类的一个实例初始化另一个新实例。</span><span class="sxs-lookup"><span data-stu-id="fb87c-117">Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" /> class from another instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb87c-118">将新实例属性值设置为 `other` 中相应的值。</span><span class="sxs-lookup"><span data-stu-id="fb87c-118">The new instance property values are set to the corresponding values in `other`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fb87c-119"><paramref name="other" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fb87c-119"><paramref name="other" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.Tokens.SecurityTokenParameters Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Security.Tokens.SecurityTokenParameters Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As SecurityTokenParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Security::Tokens::SecurityTokenParameters ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.ServiceModel.Security.Tokens.SecurityTokenParameters" Usage="securityTokenParameters.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.Tokens.SecurityTokenParameters</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb87c-120">为该类的实例克隆另一个实例。</span><span class="sxs-lookup"><span data-stu-id="fb87c-120">Clones another instance of this instance of the class.</span></span></summary>
        <returns><span data-ttu-id="fb87c-121">一个 <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" /> 实例的副本。</span><span class="sxs-lookup"><span data-stu-id="fb87c-121">A copy of <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb87c-122"><xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.Clone%2A> 和 <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CloneCore%2A> 方法遵循核心设计模式。</span><span class="sxs-lookup"><span data-stu-id="fb87c-122">The <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.Clone%2A> and <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CloneCore%2A> methods follow the Core design pattern.</span></span> <span data-ttu-id="fb87c-123">在该模式中，此方法执行一些验证，然后调用 <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CloneCore%2A>，它是 `abstract` 方法，该方法将在派生类中被重写以执行核心功能。</span><span class="sxs-lookup"><span data-stu-id="fb87c-123">In that pattern, this method performs some validation and then calls <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CloneCore%2A>, which is an `abstract` method that is overridden in derived classes to perform the core functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fb87c-124">无法克隆该类的此实例。</span><span class="sxs-lookup"><span data-stu-id="fb87c-124">Unable to clone this instance of the class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected abstract System.ServiceModel.Security.Tokens.SecurityTokenParameters CloneCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Security.Tokens.SecurityTokenParameters CloneCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CloneCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CloneCore () As SecurityTokenParameters" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::ServiceModel::Security::Tokens::SecurityTokenParameters ^ CloneCore();" />
      <MemberSignature Language="F#" Value="abstract member CloneCore : unit -&gt; System.ServiceModel.Security.Tokens.SecurityTokenParameters" Usage="securityTokenParameters.CloneCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.Tokens.SecurityTokenParameters</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb87c-125">为该类的实例克隆另一个实例。</span><span class="sxs-lookup"><span data-stu-id="fb87c-125">Clones another instance of this instance of the class.</span></span></summary>
        <returns><span data-ttu-id="fb87c-126">表示副本的 <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="fb87c-126">A <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" /> instance that represents the copy.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb87c-127"><xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.Clone%2A> 和 <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CloneCore%2A> 方法遵循核心设计模式。</span><span class="sxs-lookup"><span data-stu-id="fb87c-127">The <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.Clone%2A> and <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CloneCore%2A> methods follow the Core design pattern.</span></span> <span data-ttu-id="fb87c-128"><xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CloneCore%2A> 是`abstract`派生类中重写的方法。</span><span class="sxs-lookup"><span data-stu-id="fb87c-128"><xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CloneCore%2A> is an `abstract` method that is overridden in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateKeyIdentifierClause">
      <MemberSignature Language="C#" Value="protected internal abstract System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateKeyIdentifierClause (System.IdentityModel.Tokens.SecurityToken token, System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle referenceStyle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityToken token, valuetype System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle referenceStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CreateKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function CreateKeyIdentifierClause (token As SecurityToken, referenceStyle As SecurityTokenReferenceStyle) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ CreateKeyIdentifierClause(System::IdentityModel::Tokens::SecurityToken ^ token, System::ServiceModel::Security::Tokens::SecurityTokenReferenceStyle referenceStyle);" />
      <MemberSignature Language="F#" Value="abstract member CreateKeyIdentifierClause : System.IdentityModel.Tokens.SecurityToken * System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="securityTokenParameters.CreateKeyIdentifierClause (token, referenceStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="referenceStyle" Type="System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="fb87c-129">令牌。</span><span class="sxs-lookup"><span data-stu-id="fb87c-129">The token.</span></span></param>
        <param name="referenceStyle"><span data-ttu-id="fb87c-130">安全标记的引用类型。</span><span class="sxs-lookup"><span data-stu-id="fb87c-130">The reference style of the security token.</span></span></param>
        <summary><span data-ttu-id="fb87c-131">为令牌创建密钥标识符子句。</span><span class="sxs-lookup"><span data-stu-id="fb87c-131">Creates a key identifier clause for a token.</span></span></summary>
        <returns><span data-ttu-id="fb87c-132">标记的密钥标识符子句。</span><span class="sxs-lookup"><span data-stu-id="fb87c-132">The key identifier clause for a token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb87c-133">必须在派生类中实现此方法。</span><span class="sxs-lookup"><span data-stu-id="fb87c-133">This method must be implemented in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAsymmetricKey">
      <MemberSignature Language="C#" Value="protected abstract bool HasAsymmetricKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAsymmetricKey" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.SecurityTokenParameters.HasAsymmetricKey" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property HasAsymmetricKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property bool HasAsymmetricKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAsymmetricKey : bool" Usage="System.ServiceModel.Security.Tokens.SecurityTokenParameters.HasAsymmetricKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb87c-134">当在派生类中重写时，获取一个指示该标记是否有非对称密钥的值。</span><span class="sxs-lookup"><span data-stu-id="fb87c-134">When overridden in a derived class, gets a value that indicates whether the token has an asymmetric key.</span></span></summary>
        <value><span data-ttu-id="fb87c-135">如果该令牌具有非对称密钥，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fb87c-135"><see langword="true" /> if the token has an asymmetric key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb87c-136">非对称密钥用于公钥加密，公钥加密使用两个密钥，即在数学上相关的一个公钥和一个私钥。</span><span class="sxs-lookup"><span data-stu-id="fb87c-136">Asymmetric keys are used in public-key cryptography, which uses two keys, a public key and a private key, which are related mathematically.</span></span> <span data-ttu-id="fb87c-137">公钥可广泛分发，私钥则保密。</span><span class="sxs-lookup"><span data-stu-id="fb87c-137">The public key is distributed widely, but the private key is kept secret.</span></span> <span data-ttu-id="fb87c-138">在公钥加密中，无需交换公共密钥。</span><span class="sxs-lookup"><span data-stu-id="fb87c-138">In public-key cryptography, there is no need to exchange a common key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InclusionMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode InclusionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode InclusionMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.SecurityTokenParameters.InclusionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property InclusionMode As SecurityTokenInclusionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::Tokens::SecurityTokenInclusionMode InclusionMode { System::ServiceModel::Security::Tokens::SecurityTokenInclusionMode get(); void set(System::ServiceModel::Security::Tokens::SecurityTokenInclusionMode value); };" />
      <MemberSignature Language="F#" Value="member this.InclusionMode : System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode with get, set" Usage="System.ServiceModel.Security.Tokens.SecurityTokenParameters.InclusionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb87c-139">获取或设置令牌包含要求。</span><span class="sxs-lookup"><span data-stu-id="fb87c-139">Gets or sets the token inclusion requirements.</span></span></summary>
        <value><span data-ttu-id="fb87c-140">令牌包含要求。</span><span class="sxs-lookup"><span data-stu-id="fb87c-140">The token inclusion requirements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb87c-141">令牌包含需求指定是否需要将令牌序列化为请求和响应的一部分。</span><span class="sxs-lookup"><span data-stu-id="fb87c-141">The token inclusion requirements specify whether the token needs to be serialized as part of the request and response.</span></span>  
  
 <span data-ttu-id="fb87c-142"><xref:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode>枚举具有以下值：</span><span class="sxs-lookup"><span data-stu-id="fb87c-142">The <xref:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode> enumeration has the following values:</span></span>  
  
-   <xref:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.AlwaysToInitiator>  
  
-   <xref:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.AlwaysToRecipient>  
  
-   <xref:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.Never>  
  
-   <xref:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.Once>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeSecurityTokenRequirement">
      <MemberSignature Language="C#" Value="protected internal abstract void InitializeSecurityTokenRequirement (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void InitializeSecurityTokenRequirement(class System.IdentityModel.Selectors.SecurityTokenRequirement requirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.InitializeSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub InitializeSecurityTokenRequirement (requirement As SecurityTokenRequirement)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void InitializeSecurityTokenRequirement(System::IdentityModel::Selectors::SecurityTokenRequirement ^ requirement);" />
      <MemberSignature Language="F#" Value="abstract member InitializeSecurityTokenRequirement : System.IdentityModel.Selectors.SecurityTokenRequirement -&gt; unit" Usage="securityTokenParameters.InitializeSecurityTokenRequirement requirement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="requirement"><span data-ttu-id="fb87c-143">安全标记的要求。</span><span class="sxs-lookup"><span data-stu-id="fb87c-143">The requirement of the security token.</span></span></param>
        <summary><span data-ttu-id="fb87c-144">在派生类中重写时，初始化安全标记要求。</span><span class="sxs-lookup"><span data-stu-id="fb87c-144">When overridden in a derived class, initializes a security token requirement.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb87c-145">在输入到安全令牌管理器的同时提供令牌需求，以获取安全令牌提供程序或令牌的安全令牌身份验证器。</span><span class="sxs-lookup"><span data-stu-id="fb87c-145">The token requirement is provided as input to the security token manager to obtain a security token provider or security token authenticator for the token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchesKeyIdentifierClause">
      <MemberSignature Language="C#" Value="protected internal virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityToken token, System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle referenceStyle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityToken token, class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, valuetype System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle referenceStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function MatchesKeyIdentifierClause (token As SecurityToken, keyIdentifierClause As SecurityKeyIdentifierClause, referenceStyle As SecurityTokenReferenceStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityToken ^ token, System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, System::ServiceModel::Security::Tokens::SecurityTokenReferenceStyle referenceStyle);" />
      <MemberSignature Language="F#" Value="abstract member MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityToken * System.IdentityModel.Tokens.SecurityKeyIdentifierClause * System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle -&gt; bool&#xA;override this.MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityToken * System.IdentityModel.Tokens.SecurityKeyIdentifierClause * System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle -&gt; bool" Usage="securityTokenParameters.MatchesKeyIdentifierClause (token, keyIdentifierClause, referenceStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="referenceStyle" Type="System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="fb87c-146">安全令牌。</span><span class="sxs-lookup"><span data-stu-id="fb87c-146">The security token.</span></span></param>
        <param name="keyIdentifierClause"><span data-ttu-id="fb87c-147">指定的密钥标识符子句。</span><span class="sxs-lookup"><span data-stu-id="fb87c-147">The specified key identifier clause.</span></span></param>
        <param name="referenceStyle"><span data-ttu-id="fb87c-148">安全标记的引用类型。</span><span class="sxs-lookup"><span data-stu-id="fb87c-148">The reference style of the security token.</span></span></param>
        <summary><span data-ttu-id="fb87c-149">指示令牌是否与密钥标识符子句匹配。</span><span class="sxs-lookup"><span data-stu-id="fb87c-149">Indicates whether a token matches a key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="fb87c-150">如果令牌与密钥标识符子句匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fb87c-150"><see langword="true" /> if the token matches the key identifier clause; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fb87c-151"><paramref name="token" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fb87c-151"><paramref name="token" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fb87c-152"><paramref name="referenceStyle" /> 不是 <see cref="F:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle.External" /> 或 <see cref="F:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle.Internal" />。</span><span class="sxs-lookup"><span data-stu-id="fb87c-152"><paramref name="referenceStyle" /> is not <see cref="F:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle.External" /> or <see cref="F:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle.Internal" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReferenceStyle">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle ReferenceStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle ReferenceStyle" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.SecurityTokenParameters.ReferenceStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ReferenceStyle As SecurityTokenReferenceStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::Tokens::SecurityTokenReferenceStyle ReferenceStyle { System::ServiceModel::Security::Tokens::SecurityTokenReferenceStyle get(); void set(System::ServiceModel::Security::Tokens::SecurityTokenReferenceStyle value); };" />
      <MemberSignature Language="F#" Value="member this.ReferenceStyle : System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle with get, set" Usage="System.ServiceModel.Security.Tokens.SecurityTokenParameters.ReferenceStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb87c-153">获取或设置令牌的引用样式。</span><span class="sxs-lookup"><span data-stu-id="fb87c-153">Gets or sets the token reference style.</span></span></summary>
        <value><span data-ttu-id="fb87c-154">用于令牌的引用类型。</span><span class="sxs-lookup"><span data-stu-id="fb87c-154">The reference style for the token.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb87c-155">令牌引用样式指定如何在 SOAP 消息中引用令牌。</span><span class="sxs-lookup"><span data-stu-id="fb87c-155">The token reference style specifies how to refer to the token in the SOAP message.</span></span>  
  
 <span data-ttu-id="fb87c-156">此属性返回的枚举成员设置了所需的引用样式，该样式用于在消息中从签名和加密元素生成安全令牌的安全令牌引用 (STR)。</span><span class="sxs-lookup"><span data-stu-id="fb87c-156">This property returns a member of an enumeration that sets the desired referencing style that is used to generate security token references (STR) to the security tokens from the signature and encryption elements in the message.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fb87c-157"><see langword="set" />的令牌引用样式无效。</span><span class="sxs-lookup"><span data-stu-id="fb87c-157">An invalid token reference style was <see langword="set" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RequireDerivedKeys">
      <MemberSignature Language="C#" Value="public bool RequireDerivedKeys { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireDerivedKeys" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.SecurityTokenParameters.RequireDerivedKeys" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireDerivedKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequireDerivedKeys { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequireDerivedKeys : bool with get, set" Usage="System.ServiceModel.Security.Tokens.SecurityTokenParameters.RequireDerivedKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb87c-158">获取或设置一个值，该值指示是否可以从原始校验密钥中派生密钥。</span><span class="sxs-lookup"><span data-stu-id="fb87c-158">Gets or sets a value that indicates whether keys can be derived from the original proof keys.</span></span></summary>
        <value><span data-ttu-id="fb87c-159">如果需要从令牌的密钥中派生密钥，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fb87c-159"><see langword="true" /> if keys need to be derived from the token's key; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fb87c-160">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="fb87c-160">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb87c-161">WCF 需要派生密钥令牌的密钥执行签名和加密，使用该令牌时。</span><span class="sxs-lookup"><span data-stu-id="fb87c-161">WCF needs to derive keys from the token's key when performing signature and encryption using the token.</span></span>  
  
 <span data-ttu-id="fb87c-162">派生密钥在具有共享安全上下文的安全对话中生成，这样对话中的所有消息均可应用相同的安全性。</span><span class="sxs-lookup"><span data-stu-id="fb87c-162">Derived keys originate in Secure Conversations where there is a shared security context so that the same security can be applied across all messages in the conversation.</span></span> <span data-ttu-id="fb87c-163">安全上下文令牌包含共享的秘密，可用于消息签名和加密。</span><span class="sxs-lookup"><span data-stu-id="fb87c-163">A security context token involves a shared secret, which is used for message signing and encryption.</span></span> <span data-ttu-id="fb87c-164">共享秘密用于创建派生密钥。</span><span class="sxs-lookup"><span data-stu-id="fb87c-164">The shared secret is used to create derived keys.</span></span> <span data-ttu-id="fb87c-165">要在长时间的对话中保持高级别的安全性，可定期创建新的派生密钥。</span><span class="sxs-lookup"><span data-stu-id="fb87c-165">To maintain a high level of security through a lengthy conversation, new derived keys can be created periodically.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsClientAuthentication">
      <MemberSignature Language="C#" Value="protected abstract bool SupportsClientAuthentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsClientAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.SecurityTokenParameters.SupportsClientAuthentication" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property SupportsClientAuthentication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property bool SupportsClientAuthentication { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsClientAuthentication : bool" Usage="System.ServiceModel.Security.Tokens.SecurityTokenParameters.SupportsClientAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb87c-166">在派生类中重写时，获取一个指示该标记是否支持客户端身份验证的值。</span><span class="sxs-lookup"><span data-stu-id="fb87c-166">When overridden in a derived class, gets a value that indicates whether the token supports client authentication.</span></span></summary>
        <value><span data-ttu-id="fb87c-167">如果该令牌支持客户端身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fb87c-167"><see langword="true" /> if the token supports client authentication; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsClientWindowsIdentity">
      <MemberSignature Language="C#" Value="protected abstract bool SupportsClientWindowsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsClientWindowsIdentity" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.SecurityTokenParameters.SupportsClientWindowsIdentity" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property SupportsClientWindowsIdentity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property bool SupportsClientWindowsIdentity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsClientWindowsIdentity : bool" Usage="System.ServiceModel.Security.Tokens.SecurityTokenParameters.SupportsClientWindowsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb87c-168">在派生类中重写时，获取一个指示该标记是否支持身份验证的 Windows 标识的值。</span><span class="sxs-lookup"><span data-stu-id="fb87c-168">When overridden in a derived class, gets a value that indicates whether the token supports a Windows identity for authentication.</span></span></summary>
        <value><span data-ttu-id="fb87c-169">如果该令牌支持 Windows 标识的身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fb87c-169"><see langword="true" /> if the token supports a Windows identity for authentication; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsServerAuthentication">
      <MemberSignature Language="C#" Value="protected abstract bool SupportsServerAuthentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsServerAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.SecurityTokenParameters.SupportsServerAuthentication" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property SupportsServerAuthentication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property bool SupportsServerAuthentication { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsServerAuthentication : bool" Usage="System.ServiceModel.Security.Tokens.SecurityTokenParameters.SupportsServerAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb87c-170">在派生类中重写时，获取一个指示该标记是否支持服务器身份验证的值。</span><span class="sxs-lookup"><span data-stu-id="fb87c-170">When overridden in a derived class, gets a value that indicates whether the token supports server authentication.</span></span></summary>
        <value><span data-ttu-id="fb87c-171">如果该令牌支持服务器身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fb87c-171"><see langword="true" /> if the token supports server authentication; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="securityTokenParameters.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb87c-172">显示该类实例的文本表示形式。</span><span class="sxs-lookup"><span data-stu-id="fb87c-172">Displays a text representation of this instance of the class.</span></span></summary>
        <returns><span data-ttu-id="fb87c-173">该类实例的文本表示形式。</span><span class="sxs-lookup"><span data-stu-id="fb87c-173">A text representation of this instance of the class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb87c-174">此方法显示此类的名称、<xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.InclusionMode%2A>、<xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.ReferenceStyle%2A> 和 <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.RequireDerivedKeys%2A>。</span><span class="sxs-lookup"><span data-stu-id="fb87c-174">The method displays the name of this class, <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.InclusionMode%2A>, <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.ReferenceStyle%2A>, and <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.RequireDerivedKeys%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>