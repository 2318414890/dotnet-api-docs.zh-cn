<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ClaimTypeRequirement.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5763c975d8962dc91bd0b1aa5c08d2d37ea1a38f0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">763c975d8962dc91bd0b1aa5c08d2d37ea1a38f0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement">
          <source>Specifies the types of required and optional claims expected to appear in the federated credential.</source>
          <target state="translated">指定希望出现在联合凭据中的必选和可选的声明类型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement">
          <source>In a federated scenario, services state the requirements on incoming credentials.</source>
          <target state="translated">在联合方案中，服务规定有关传入凭据的要求。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement">
          <source>For example, the incoming credentials must possess a certain set of claim types.</source>
          <target state="translated">例如，传入凭据必须具有某组声明类型。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement">
          <source>This requirement is manifested in a security policy.</source>
          <target state="translated">此需求出现在安全策略中。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement">
          <source>When a client requests a security token from a security token service (for example, <ph id="ph1">[!INCLUDE[infocard](~/includes/infocard-md.md)]</ph>), it puts the requirements into a token request so that the security token service can issue the security token that satisfies the requirements accordingly.</source>
          <target state="translated">当客户端向安全令牌服务（例如 <ph id="ph1">[!INCLUDE[infocard](~/includes/infocard-md.md)]</ph>）请求安全令牌时，它会将要求放置在令牌请求中，以便安全令牌服务能够相应地颁发符合要求的安全令牌。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement">
          <source>The following code adds two claim type requirements to a security binding.</source>
          <target state="translated">下面的代码将两个声明类型需求添加到安全绑定。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement">
          <source>The following config file is used with the preceding code.</source>
          <target state="translated">下面的配置文件与前面的代码一起使用。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String)">
          <source>The claim type.</source>
          <target state="translated">声明类型。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" /&gt;</ph> class for a required claim of the specified type.</source>
          <target state="translated">为所需的指定类型声明初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String)">
          <source>The predefined claim types can be found at   <ph id="ph1">&lt;xref:System.IdentityModel.Claims.ClaimTypes&gt;</ph>.</source>
          <target state="translated">预定义的声明类型可以在 <ph id="ph1">&lt;xref:System.IdentityModel.Claims.ClaimTypes&gt;</ph> 中找到。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String)">
          <source>The following code adds two claim type requirements to a security binding.</source>
          <target state="translated">下面的代码将两个声明类型需求添加到安全绑定。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String,System.Boolean)">
          <source>The claim type.</source>
          <target state="translated">声明类型。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the claim is required; otherwise, it is optional.</source>
          <target state="translated">如果值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>，则声明是必选的；否则声明是可选的。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" /&gt;</ph> class for a claim of the specified type.</source>
          <target state="translated">为指定类型的声明初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String,System.Boolean)">
          <source>The following code adds two claim type requirements to a security binding.</source>
          <target state="translated">下面的代码将两个声明类型需求添加到安全绑定。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType">
          <source>Gets the claim type that was specified in the constructor.</source>
          <target state="translated">获取构造函数中指定的声明类型。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType">
          <source>The claim type.</source>
          <target state="translated">声明类型。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType">
          <source>This property is a URI that defines the type of a claim.</source>
          <target state="translated">此属性是一个用于定义声明类型的 URI。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType">
          <source>For example, to purchase a product from a Web site, the user must present a valid credit card with a sufficient credit limit.</source>
          <target state="translated">例如，若要从网站上购买产品，用户必须提供具有足够信用额度的有效信用卡。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType">
          <source>The claim type would be the credit card URI.</source>
          <target state="translated">声明类型将为信用卡 URI。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType">
          <source>The following code shows how to get this property.</source>
          <target state="translated">下面的代码演示如何获取此属性。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional">
          <source>Gets a value that indicates whether the claim is optional.</source>
          <target state="translated">获取一个值，该值指示声明是否可选。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this instance of the class is for an optional claim; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if it specifies a required claim.</source>
          <target state="translated">如果该类实例指定声明是可选的，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果它指定声明是必选的，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional">
          <source>An example of how to use this property is the scenario in which the service asks for some information but does not require it.</source>
          <target state="translated">使用此属性的一个示例就是服务请求一些非必要信息的情况。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional">
          <source>For instance, you are required to enter your first name, last name, and address, but your phone number is optional.</source>
          <target state="translated">例如，您必须输入名、姓和地址，但是可以选择是否输入电话号码。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional">
          <source>The following code shows how to get this property.</source>
          <target state="translated">下面的代码演示如何获取此属性。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>