<Type Name="JournalEntry" FullName="System.Windows.Navigation.JournalEntry">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dae555991bee3294b73bba5a56197a9711bb57ec" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36465423" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class JournalEntry : System.Windows.DependencyObject, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit JournalEntry extends System.Windows.DependencyObject implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Navigation.JournalEntry" />
  <TypeSignature Language="VB.NET" Value="Public Class JournalEntry&#xA;Inherits DependencyObject&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class JournalEntry : System::Windows::DependencyObject, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type JournalEntry = class&#xA;    inherit DependencyObject&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>表示后退或前进导航历史记录中的一个条目。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows Presentation Foundation 实现导航历史记录服务，它存储每个已以前导航到，就像导航历史记录中的内容的一个条目[!INCLUDE[TLA#tla_ie](~/includes/tlasharptla-ie-md.md)]。 导航历史记录包含两个堆栈、 一个会记住后退导航历史记录，另一个会记住前进导航历史记录。  
  
 当前项的一个条目添加前进导航发生时后退导航历史记录。 在以下情况下发生这种情况：  
  
-   `Navigate`调用方法 (<xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>， <xref:System.Windows.Navigation.NavigationWindow.Navigate%2A?displayProperty=nameWithType>， <xref:System.Windows.Controls.Frame.Navigate%2A?displayProperty=nameWithType>)。  
  
-   `GoForward`调用方法 (<xref:System.Windows.Navigation.NavigationService.GoForward%2A?displayProperty=nameWithType>， <xref:System.Windows.Navigation.NavigationWindow.GoForward%2A?displayProperty=nameWithType>， <xref:System.Windows.Controls.Frame.GoForward%2A?displayProperty=nameWithType>)。  
  
-   转发按钮上的导航从当前导航器显示的用户界面 ([!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)]， <xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>)。  
  
 同样，当前项的一个条目之前添加到前进导航历史记录发生后导航，该优化发生时：  
  
-   `GoBack`调用方法 (<xref:System.Windows.Navigation.NavigationService.GoBack%2A?displayProperty=nameWithType>， <xref:System.Windows.Navigation.NavigationWindow.GoBack%2A?displayProperty=nameWithType>， <xref:System.Windows.Controls.Frame.GoBack%2A?displayProperty=nameWithType>)。  
  
-   导航从当前导航器显示的用户界面上的后退按钮 ([!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)]， <xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>)。  
  
 每个条目后退和前进导航历史记录是的一个实例<xref:System.Windows.Navigation.JournalEntry>类。  
  
 每个<xref:System.Windows.Navigation.JournalEntry>对象封装有关特定导航，包括条目的名称的信息 (<xref:System.Windows.Navigation.JournalEntry.Name%2A>)、 是否条目保持活动状态 (<xref:System.Windows.Navigation.JournalEntry.KeepAlive%2A>) 和[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]导航到的内容 (<xref:System.Windows.Navigation.JournalEntry.Source%2A>)。  
  
 你可以检索所有<xref:System.Windows.Navigation.JournalEntry>通过枚举对象后退导航历史记录<xref:System.Windows.Navigation.NavigationWindow.BackStack%2A?displayProperty=nameWithType>或<xref:System.Windows.Controls.Frame.BackStack%2A?displayProperty=nameWithType>属性。 对于前进导航历史记录，你可以检索所有<xref:System.Windows.Navigation.JournalEntry>对象通过枚举<xref:System.Windows.Navigation.NavigationWindow.ForwardStack%2A?displayProperty=nameWithType>或<xref:System.Windows.Controls.Frame.ForwardStack%2A?displayProperty=nameWithType>属性。  
  
 如果你需要删除最近<xref:System.Windows.Navigation.JournalEntry>对象后退导航历史记录，以防止例如，导航到其中，可以调用`RemoveBackEntry`方法 (<xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A?displayProperty=nameWithType>， <xref:System.Windows.Navigation.NavigationWindow.RemoveBackEntry%2A?displayProperty=nameWithType>， <xref:System.Windows.Controls.Frame.RemoveBackEntry%2A?displayProperty=nameWithType>)，哪些删除<xref:System.Windows.Navigation.JournalEntry>对象并返回对它的引用。  
  
 无法添加<xref:System.Windows.Navigation.JournalEntry>对象添加到导航历史记录，但是，因为不能实例化或派生自<xref:System.Windows.Navigation.JournalEntry>，而且因为没有任何类型实现的成员，若要这样做。 但是，你可以添加自定义<xref:System.Windows.Navigation.CustomContentState>对象通过调用后退导航历史记录`AddBackEntry`方法 (<xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>， <xref:System.Windows.Navigation.NavigationWindow.AddBackEntry%2A>， <xref:System.Windows.Controls.Frame.AddBackEntry%2A>);<xref:System.Windows.Navigation.NavigationService>添加<xref:System.Windows.Navigation.CustomContentState>到内部创建的对象<xref:System.Windows.Navigation.JournalEntry>对象，然后添加到后退导航历史记录。  
  
   
  
## Examples  
 下面的示例演示如何检索最新<xref:System.Windows.Navigation.JournalEntry>后退导航堆栈，以获取从对象<xref:System.Windows.Navigation.JournalEntry.Name%2A>和<xref:System.Windows.Navigation.JournalEntry.Source%2A>属性值。  
  
 [!code-csharp[JournalEntrySnippets#GetJournalEntryCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/JournalEntrySnippets/CSharp/DatePage.xaml.cs#getjournalentrycodebehind)]
 [!code-vb[JournalEntrySnippets#GetJournalEntryCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/JournalEntrySnippets/visualbasic/datepage.xaml.vb#getjournalentrycodebehind)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JournalEntry (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.JournalEntry.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JournalEntry(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Windows.Navigation.JournalEntry : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Windows.Navigation.JournalEntry" Usage="new System.Windows.Navigation.JournalEntry (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">序列化信息。</param>
        <param name="context">流上下文。</param>
        <summary>初始化 <see cref="T:System.Windows.Navigation.JournalEntry" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomContentState">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.CustomContentState CustomContentState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Navigation.CustomContentState CustomContentState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.JournalEntry.CustomContentState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomContentState As CustomContentState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Navigation::CustomContentState ^ CustomContentState { System::Windows::Navigation::CustomContentState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomContentState : System.Windows.Navigation.CustomContentState" Usage="System.Windows.Navigation.JournalEntry.CustomContentState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.CustomContentState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与日记条目关联的 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象。</summary>
        <value>与日记条目关联的 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象。 如果没有关联对象，则返回 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeepAlive">
      <MemberSignature Language="C#" Value="public static bool GetKeepAlive (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetKeepAlive(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.JournalEntry.GetKeepAlive(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetKeepAlive(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member GetKeepAlive : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Navigation.JournalEntry.GetKeepAlive dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">从中获取附加属性值的元素。</param>
        <summary>返回指定元素的日记条目的附加属性 <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" />。</summary>
        <returns>指定元素的日记条目的 <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> 附加属性的值。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:System.Windows.Navigation.JournalEntry.KeepAliveProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public static string GetName (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetName(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.JournalEntry.GetName(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetName(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member GetName : System.Windows.DependencyObject -&gt; string" Usage="System.Windows.Navigation.JournalEntry.GetName dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">从中获取附加属性值的元素。</param>
        <summary>设置指定元素日记条目的 <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> 附加属性。</summary>
        <returns>指定元素日记条目的 <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> 附加属性。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:System.Windows.Navigation.JournalEntry.NameProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.JournalEntry.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="journalEntry.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">序列化目标对象所必需的数据。</param>
        <param name="context">流上下文。</param>
        <summary>将此对象序列化时调用。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="see GetKeepAlive, and SetKeepAlive" />
      <MemberSignature Language="ILAsm" Value="see GetKeepAlive, and SetKeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.JournalEntry.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="see GetKeepAlive, and SetKeepAlive" />
      <MemberSignature Language="F#" Value="see GetKeepAlive, and SetKeepAlive" Usage="see GetKeepAlive, and SetKeepAlive" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAliveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty KeepAliveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty KeepAliveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Navigation.JournalEntry.KeepAliveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeepAliveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ KeepAliveProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeepAliveProperty : System.Windows.DependencyProperty" Usage="System.Windows.Navigation.JournalEntry.KeepAliveProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> 附加属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.JournalEntry.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Navigation.JournalEntry.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置日记条目的名称。</summary>
        <value>日记条目的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 承载的内容<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>，或[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]，显示导航用户界面，使用户能够导航到后退和前进导航历史记录。 每个条目导航历史记录中显示的文本取决于它的数据的以下部分用于自动构造的导航历史记录条目名称，按优先级顺序：  
  
-   附加<xref:System.Windows.Navigation.JournalEntry.Name%2A>属性。  
  
-   <xref:System.Windows.Controls.Page.Title%2A>。  
  
-   <xref:System.Windows.Controls.Page.WindowTitle%2A> 与[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]针对当前页  
  
-   当前页的 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。  
  
<a name="xamlAttributeUsage_Name"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性用法  
 \<*object* **JournalEntry.Name**="<xref:System.String>"/>  
  
<a name="dependencyPropertyInfo_Name"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Navigation.JournalEntry.NameProperty>|  
|元数据属性设置为 `true`|无|  
  
   
  
## Examples  
 下面的示例演示如何设置<xref:System.Windows.Navigation.JournalEntry.Name%2A>属性<xref:System.Windows.Controls.Page>标记中，从与[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]附加属性的用法。  
  
 [!code-xaml[JournalEntrySnippets#JENameMARKUP](~/samples/snippets/csharp/VS_Snippets_Wpf/JournalEntrySnippets/CSharp/JENamePage.xaml#jenamemarkup)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Navigation.JournalEntry.NameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ NameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable NameProperty : System.Windows.DependencyProperty" Usage="System.Windows.Navigation.JournalEntry.NameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> 附加属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetKeepAlive">
      <MemberSignature Language="C#" Value="public static void SetKeepAlive (System.Windows.DependencyObject dependencyObject, bool keepAlive);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetKeepAlive(class System.Windows.DependencyObject dependencyObject, bool keepAlive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.JournalEntry.SetKeepAlive(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetKeepAlive(System::Windows::DependencyObject ^ dependencyObject, bool keepAlive);" />
      <MemberSignature Language="F#" Value="static member SetKeepAlive : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Navigation.JournalEntry.SetKeepAlive (dependencyObject, keepAlive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
        <Parameter Name="keepAlive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">要在其上设置附加属性值的元素。</param>
        <param name="keepAlive">若要将日记条目保留在内存中，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>设置指定元素的 <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> 附加属性。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" />
      </Docs>
    </Member>
    <Member MemberName="SetName">
      <MemberSignature Language="C#" Value="public static void SetName (System.Windows.DependencyObject dependencyObject, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetName(class System.Windows.DependencyObject dependencyObject, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.JournalEntry.SetName(System.Windows.DependencyObject,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetName(System::Windows::DependencyObject ^ dependencyObject, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member SetName : System.Windows.DependencyObject * string -&gt; unit" Usage="System.Windows.Navigation.JournalEntry.SetName (dependencyObject, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">要在其上设置附加属性值的元素。</param>
        <param name="name">要分配给附加属性的名称。</param>
        <summary>设置指定元素的 <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> 附加属性。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="F:System.Windows.Navigation.JournalEntry.NameProperty" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.JournalEntry.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Source { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : Uri with get, set" Usage="System.Windows.Navigation.JournalEntry.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置导航到的内容的 URI。</summary>
        <value>导航到的内容的 URI，如果条目没有关联任何 URI，则为 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>