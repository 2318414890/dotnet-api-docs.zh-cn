<Type Name="UrlAuthorizationModule" FullName="System.Web.Security.UrlAuthorizationModule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9108c549b46f5ce68fa6c135f76efce668d61658" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46684945" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class UrlAuthorizationModule : System.Web.IHttpModule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit UrlAuthorizationModule extends System.Object implements class System.Web.IHttpModule" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.UrlAuthorizationModule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UrlAuthorizationModule&#xA;Implements IHttpModule" />
  <TypeSignature Language="C++ CLI" Value="public ref class UrlAuthorizationModule sealed : System::Web::IHttpModule" />
  <TypeSignature Language="F#" Value="type UrlAuthorizationModule = class&#xA;    interface IHttpModule" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpModule</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>验证用户具有访问所请求的 URL 的权限。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.UrlAuthorizationModule>确定当前用户是否与请求的 URL，根据用户允许访问<xref:System.Security.Principal.IIdentity.Name%2A>或用户所属的成员的角色的列表。 有关如何确定用户名称的信息，请参阅[ASP.NET 身份验证](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100))。 有关如何管理用户角色的信息，请参阅[使用角色管理授权](http://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195)。  
  
 管理授权的用户或角色使用配置元素。 可以允许或拒绝用户或角色使用`allow`或`deny`子元素，分别。 `allow`和`deny`子元素的解释它们出现在配置中的顺序。 元素指定允许或拒绝访问后<xref:System.Web.Security.UrlAuthorizationModule>完成其授权检查。 例如，Web.config 文件中的以下节要求用户 （通过拒绝匿名用户），登录，然后仅允许用户具有访问权限的管理员角色中。 不在的管理员角色的用户被拒绝。  
  
```  
<authorization>  
  <deny users="?" />  
  <allow roles="Administrators" />  
  <deny users="*" />  
</authorization>  
```  
  
 用户或角色必须专门为拒绝，若要拒绝对 URL 的用户或角色授予的权限。 也就是说，如果未指定前面的示例有`<deny users="*" />`元素，则所有经过身份验证的用户已允许对所请求的 URL，而不考虑它们属于何种角色的访问。  
  
   
  
## Examples  
 下面的代码示例时拒绝对 John 和所有匿名用户，供 Kim 和管理员角色的成员授予访问权限。  
  
```  
<authorization>  
  <allow users="Kim"/>  
  <allow roles="Admins"/>  
  <deny users="John"/>  
  <deny users="?"/>  
</authorization>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/ba7c17d4-f709-4501-8441-2340e2d6db05">ASP.NET 授权</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UrlAuthorizationModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.UrlAuthorizationModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UrlAuthorizationModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>创建 <see cref="T:System.Web.Security.UrlAuthorizationModule" /> 类的实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数不是应用程序代码中调用。  
  
 ASP.NET 将调用此构造函数可创建的实例<xref:System.Web.Security.UrlAuthorizationModule>类。 后调用的构造函数，它会调用<xref:System.Web.Security.UrlAuthorizationModule.Init%2A>方法来初始化新<xref:System.Web.Security.UrlAuthorizationModule>对象。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/ba7c17d4-f709-4501-8441-2340e2d6db05">ASP.NET 授权</related>
      </Docs>
    </Member>
    <Member MemberName="CheckUrlAccessForPrincipal">
      <MemberSignature Language="C#" Value="public static bool CheckUrlAccessForPrincipal (string virtualPath, System.Security.Principal.IPrincipal user, string verb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CheckUrlAccessForPrincipal(string virtualPath, class System.Security.Principal.IPrincipal user, string verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal(System.String,System.Security.Principal.IPrincipal,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CheckUrlAccessForPrincipal (virtualPath As String, user As IPrincipal, verb As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CheckUrlAccessForPrincipal(System::String ^ virtualPath, System::Security::Principal::IPrincipal ^ user, System::String ^ verb);" />
      <MemberSignature Language="F#" Value="static member CheckUrlAccessForPrincipal : string * System.Security.Principal.IPrincipal * string -&gt; bool" Usage="System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal (virtualPath, user, verb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="user" Type="System.Security.Principal.IPrincipal" />
        <Parameter Name="verb" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">文件的虚拟路径。</param>
        <param name="user">一个表示当前用户的 <see cref="T:System.Security.Principal.IPrincipal" /> 对象。</param>
        <param name="verb">用于进行请求的 HTTP 谓词。</param>
        <summary>确定用户是否具有对所请求的文件的访问权。</summary>
        <returns>如果当前用户可以访问该文件，则返回 <see langword="true" />；否则返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal%2A>方法检查以查看当前用户是否被授予访问权限的应用程序的 Web.config 文件中所请求的文件。  
  
 如果为用于发出请求的 HTTP 谓词`GET`， `POST`，或`HEAD`，则<xref:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal%2A>方法检查文件的读取访问权限。 如果使用其他任何谓词，则<xref:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal%2A>检查文件的读/写访问权限。  
  
 有关详细信息和示例 Web.config 文件，请参阅<xref:System.Web.Security.UrlAuthorizationModule>类文档。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualPath" /> 为 <see langword="null" />。  
  
\- 或 - 
 <paramref name="user" /> 为 <see langword="null" />。  
  
\- 或 - 
 <paramref name="verb" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualPath" /> 位于应用程序根路径之外。</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.UrlAuthorizationModule.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="urlAuthorizationModule.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpModule.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>释放 <see cref="T:System.Web.Security.UrlAuthorizationModule" /> 使用的所有资源，内存除外。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法不是应用程序代码中调用。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/ba7c17d4-f709-4501-8441-2340e2d6db05">ASP.NET 授权</related>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (System.Web.HttpApplication app);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init(class System.Web.HttpApplication app) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.UrlAuthorizationModule.Init(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Init (app As HttpApplication)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Init(System::Web::HttpApplication ^ app);" />
      <MemberSignature Language="F#" Value="abstract member Init : System.Web.HttpApplication -&gt; unit&#xA;override this.Init : System.Web.HttpApplication -&gt; unit" Usage="urlAuthorizationModule.Init app" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpModule.Init(System.Web.HttpApplication)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="app" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="app">当前的 <see cref="T:System.Web.HttpApplication" /> 实例。</param>
        <summary>初始化 <see cref="T:System.Web.Security.UrlAuthorizationModule" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法不是应用程序代码中调用。  
  
 <xref:System.Web.Security.UrlAuthorizationModule.Init%2A>方法可确保<xref:System.Web.Security.UrlAuthorizationModule>中的处理包含<xref:System.Web.HttpApplication.AuthorizeRequest>事件。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/ba7c17d4-f709-4501-8441-2340e2d6db05">ASP.NET 授权</related>
      </Docs>
    </Member>
  </Members>
</Type>