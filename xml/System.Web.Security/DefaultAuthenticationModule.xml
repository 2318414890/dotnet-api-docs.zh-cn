<Type Name="DefaultAuthenticationModule" FullName="System.Web.Security.DefaultAuthenticationModule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="201fbbcfb1cc458613c7616d96c7f9411b6afbfc" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36596954" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DefaultAuthenticationModule : System.Web.IHttpModule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DefaultAuthenticationModule extends System.Object implements class System.Web.IHttpModule" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.DefaultAuthenticationModule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DefaultAuthenticationModule&#xA;Implements IHttpModule" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultAuthenticationModule sealed : System::Web::IHttpModule" />
  <TypeSignature Language="F#" Value="type DefaultAuthenticationModule = class&#xA;    interface IHttpModule" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpModule</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>确保上下文中存在身份验证对象。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.DefaultAuthenticationModule>确保<xref:System.Web.HttpContext.User%2A>属性的当前<xref:System.Web.HttpContext>实例设置为<xref:System.Security.Principal.IPrincipal>为每个请求的对象。 <xref:System.Web.Security.DefaultAuthenticationModule>检查<xref:System.Web.HttpContext.User%2A>属性后的<xref:System.Web.HttpApplication.AuthenticateRequest>事件和之前<xref:System.Web.HttpApplication.AuthorizeRequest>事件。 如果<xref:System.Web.HttpContext.User%2A>属性是`null`、<xref:System.Web.Security.DefaultAuthenticationModule>设置<xref:System.Web.HttpContext.User%2A>属性<xref:System.Security.Principal.GenericPrincipal>不包含任何用户信息的对象。  
  
 如果身份验证模块设置<xref:System.Web.HttpResponse.StatusCode%2A>属性 401，<xref:System.Web.Security.DefaultAuthenticationModule>将呈现一个拒绝访问错误页面。 如果值<xref:System.Web.HttpResponse.StatusCode%2A>属性设置为一个值大于 200，<xref:System.Web.Security.DefaultAuthenticationModule>对象将结束请求。 在这种情况下，仅 HTTP 模块，这些订阅<xref:System.Web.HttpApplication.EndRequest>事件在当前请求完成之前调用。  
  
 <xref:System.Web.Security.DefaultAuthenticationModule>公开<xref:System.Web.Security.DefaultAuthenticationModule.Authenticate>事件。 你可以使用此事件来提供自定义<xref:System.Security.Principal.IPrincipal>对象<xref:System.Web.HttpContext.User%2A>属性的当前<xref:System.Web.HttpContext>实例。 <xref:System.Web.Security.WindowsAuthenticationModule.Authenticate>事件可通过指定名为事件**DefaultAuthentication_OnAuthenticate**应用程序的 Global.asax 文件中。  
  
   
  
## Examples  
 下面的示例使用**DefaultAuthentication_OnAuthenticate**事件来测试是否<xref:System.Web.HttpContext.User%2A>属性的当前<xref:System.Web.HttpContext>实例是`null`。 如果<xref:System.Web.HttpContext.User%2A>属性是`null`，然后样本集<xref:System.Web.HttpContext.User%2A>属性的当前<xref:System.Web.HttpContext>到实例<xref:System.Security.Principal.GenericPrincipal>对象其中<xref:System.Security.Principal.GenericPrincipal.Identity%2A>的<xref:System.Security.Principal.GenericPrincipal>对象是<xref:System.Security.Principal.GenericIdentity>与<xref:System.Security.Principal.GenericIdentity.Name%2A>值的"default。  
  
> [!NOTE]
>  **DefaultAuthentication_OnAuthenticate**事件之前，将引发<xref:System.Web.HttpApplication.AuthorizeRequest>事件。 因此，如果你设置<xref:System.Web.HttpContext.User%2A>属性的当前<xref:System.Web.HttpContext>实例到自定义标识，它可能会影响你的应用程序的行为。 例如，如果你使用<xref:System.Web.Security.FormsAuthentication>类并且你指定`<deny users="?" />`在确保仅经过身份验证的用户能够访问你的站点，此示例将会导致元素被忽略，因为用户将具有名称的配置节，即"默认值。" 作为替代，你将指定`<deny users="default" />`以确保只有经过身份验证的用户才能访问你的站点。  
  
 [!code-csharp[System.Web.Security.DefaultAuthenticationModule#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.DefaultAuthenticationModule/CS/global.asax#1)]
 [!code-vb[System.Web.Security.DefaultAuthenticationModule#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.DefaultAuthenticationModule/VB/global.asax#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultAuthenticationModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.DefaultAuthenticationModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultAuthenticationModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Security.DefaultAuthenticationModule" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数不应从应用程序代码中调用。  
  
 ASP.NET 调用此构造函数可创建的实例<xref:System.Web.Security.DefaultAuthenticationModule>类。 后调用的构造函数，它调用<xref:System.Web.Security.DefaultAuthenticationModule.Init%2A>方法以初始化新<xref:System.Web.Security.DefaultAuthenticationModule>对象。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public event System.Web.Security.DefaultAuthenticationEventHandler Authenticate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Security.DefaultAuthenticationEventHandler Authenticate" />
      <MemberSignature Language="DocId" Value="E:System.Web.Security.DefaultAuthenticationModule.Authenticate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Authenticate As DefaultAuthenticationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Security::DefaultAuthenticationEventHandler ^ Authenticate;" />
      <MemberSignature Language="F#" Value="member this.Authenticate : System.Web.Security.DefaultAuthenticationEventHandler " Usage="member this.Authenticate : System.Web.Security.DefaultAuthenticationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.DefaultAuthenticationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>对请求进行身份验证后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.DefaultAuthenticationModule.Authenticate>后引发事件<xref:System.Web.HttpApplication.AuthenticateRequest>事件。 它用于确保<xref:System.Web.HttpContext.User%2A>属性的当前<xref:System.Web.HttpContext>实例填入<xref:System.Security.Principal.IPrincipal>对象。  
  
 你可以访问<xref:System.Web.Security.DefaultAuthenticationModule.Authenticate>事件<xref:System.Web.Security.DefaultAuthenticationModule>类通过指定一个名为子例程**DefaultAuthentication_OnAuthenticate**应用程序的 Global.asax 文件中。  
  
 你可以使用<xref:System.Web.Security.DefaultAuthenticationEventArgs.Context%2A>属性<xref:System.Web.Security.DefaultAuthenticationEventArgs>对象在**DefaultAuthentication_OnAuthenticate**事件设置<xref:System.Web.HttpContext.User%2A>属性的当前<xref:System.Web.HttpContext>实例向自定义<xref:System.Security.Principal.IPrincipal>对象。 如果未指定的值<xref:System.Web.HttpContext.User%2A>属性，<xref:System.Web.Security.DefaultAuthenticationModule>设置<xref:System.Web.HttpContext.User%2A>属性<xref:System.Web.HttpContext>到实例<xref:System.Security.Principal.GenericPrincipal>不包含任何用户信息的对象。  
  
 **DefaultAuthentication_OnAuthenticate**后引发事件<xref:System.Web.HttpApplication.AuthenticateRequest>事件和之前<xref:System.Web.HttpApplication.AuthorizeRequest>事件。 如果你有一个部分，其中取决于要拒绝或允许访问应用程序的用户名称，修改<xref:System.Web.HttpContext.User%2A>属性的当前<xref:System.Web.HttpContext>实例可能会影响你的应用程序的行为。 请确保在设置的用户名称**DefaultAuthentication_OnAuthenticate**事件被视为时在你配置中指定部分。  
  
> [!NOTE]
>  如果在集成模式下，IIS 7.0 中运行 Web 应用<xref:System.Web.Security.DefaultAuthenticationModule.Authenticate>事件<xref:System.Web.Security.DefaultAuthenticationModule>则不会引发。 如果`mode`配置元素的属性设置为"None"和应用程序订阅到<xref:System.Web.Security.DefaultAuthenticationModule.Authenticate>事件，<xref:System.PlatformNotSupportedException>引发错误。 在此方案中，若要接收身份验证通知，订阅<xref:System.Web.HttpApplication.AuthenticateRequest>事件<xref:System.Web.HttpApplication>实例。 有关在集成模式下的兼容性问题的详细信息，请参阅[从 IIS 6.0 的 ASP.NET 应用程序迁移到 IIS 7.0](http://msdn.microsoft.com/library/76f9cc78-f978-4837-b1c8-51d642ec4847)。  
  
   
  
## Examples  
 下面的代码示例使用**DefaultAuthentication_OnAuthenticate**事件来测试是否<xref:System.Web.HttpContext.User%2A>属性的当前<xref:System.Web.HttpContext>实例是`null`。 如果<xref:System.Web.HttpContext.User%2A>属性是`null`，然后样本集<xref:System.Web.HttpContext.User%2A>属性的当前<xref:System.Web.HttpContext>到实例<xref:System.Security.Principal.GenericPrincipal>对象其中<xref:System.Security.Principal.GenericPrincipal.Identity%2A>的<xref:System.Security.Principal.GenericPrincipal>对象是<xref:System.Security.Principal.GenericIdentity>与<xref:System.Security.Principal.GenericIdentity.Name%2A>值的"default。  
  
> [!NOTE]
>  **DefaultAuthentication_OnAuthenticate**事件之前，将引发<xref:System.Web.HttpApplication.AuthorizeRequest>事件。 因此，如果你设置<xref:System.Web.HttpContext.User%2A>属性的当前<xref:System.Web.HttpContext>实例到自定义标识，它可能会影响你的应用程序的行为。 例如，如果你使用<xref:System.Web.Security.FormsAuthentication>类并且你指定`<deny users="?" />`在确保仅经过身份验证的用户能够访问你的站点，此示例将会导致元素被忽略，因为用户将具有名称的配置节，即"默认值。" 作为替代，你将指定`<deny users="default" />`以确保只有经过身份验证的用户才能访问你的站点。  
  
 [!code-csharp[System.Web.Security.DefaultAuthenticationModule#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.DefaultAuthenticationModule/CS/global.asax#1)]
 [!code-vb[System.Web.Security.DefaultAuthenticationModule#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.DefaultAuthenticationModule/VB/global.asax#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.DefaultAuthenticationModule.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="defaultAuthenticationModule.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpModule.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>释放 <see cref="T:System.Web.Security.DefaultAuthenticationModule" /> 使用的所有资源，内存除外。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法不应从应用程序代码中调用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (System.Web.HttpApplication app);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init(class System.Web.HttpApplication app) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.DefaultAuthenticationModule.Init(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Init (app As HttpApplication)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Init(System::Web::HttpApplication ^ app);" />
      <MemberSignature Language="F#" Value="abstract member Init : System.Web.HttpApplication -&gt; unit&#xA;override this.Init : System.Web.HttpApplication -&gt; unit" Usage="defaultAuthenticationModule.Init app" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpModule.Init(System.Web.HttpApplication)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="app" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="app">当前的 <see cref="T:System.Web.HttpApplication" /> 实例。</param>
        <summary>初始化 <see cref="T:System.Web.Security.DefaultAuthenticationModule" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法不应从应用程序代码中调用。  
  
 <xref:System.Web.Security.DefaultAuthenticationModule.Init%2A>方法可确保<xref:System.Web.Security.DefaultAuthenticationModule>包含在处理事件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>