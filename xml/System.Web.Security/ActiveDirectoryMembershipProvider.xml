<Type Name="ActiveDirectoryMembershipProvider" FullName="System.Web.Security.ActiveDirectoryMembershipProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a191e20906fee23f6ca2e5a86e8d8b26052725e6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30550841" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ActiveDirectoryMembershipProvider : System.Web.Security.MembershipProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActiveDirectoryMembershipProvider extends System.Web.Security.MembershipProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.ActiveDirectoryMembershipProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class ActiveDirectoryMembershipProvider&#xA;Inherits MembershipProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActiveDirectoryMembershipProvider : System::Web::Security::MembershipProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.MembershipProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 Active Directory 和 Active Directory 应用程序模式服务器中的 ASP.NET 应用程序管理成员资格信息的存储。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此类由<xref:System.Web.Security.Membership>和<xref:System.Web.Security.MembershipUser>类提供成员资格服务 ASP.NET 应用程序，请使用 Active Directory (AD) 或 Active Directory 应用程序模式 (ADAM) 服务器。  
  
> [!NOTE]
>  使用 ADAM 服务器需要特定的配置。 有关详细信息，请参阅下面的 ADAM 配置节。  
  
> [!IMPORTANT]
>  <xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例只适用于 ASP.NET 的完全信任策略默认配置。 若要使用<xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例任一部分信任级别，你必须针对你的应用程序对适当的信任策略文件进行更改或者必须在 GAC 中创建的"沙盒"程序集的部署。  
>   
>  <xref:System.Web.Security.ActiveDirectoryMembershipProvider>类要求不受限制的<xref:System.DirectoryServices.DirectoryServicesPermission>运行的权限。 此权限不会添加到任何使用 ASP.NET 提供的部分信任策略文件。 尽管添加<xref:System.DirectoryServices.DirectoryServicesPermission>对部分信任策略文件的权限将允许使用<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类，这样也使<xref:System.DirectoryServices>命名空间类可用于在 ASP.NET 页中运行的任意代码。 此选项不建议用于任何需要在一种安全的锁定模式中运行的 Web 服务器。  
>   
>  作为替代方法，你可以创建一个"沙盒"程序集调用<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类。 此程序集可以包含其中一个将转发到的方法调用的包装类<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类或派生自类<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类。 在任一情况下，包装器类必须声明不受限制<xref:System.DirectoryServices.DirectoryServicesPermission>权限。 部署位于 GAC 中的沙盒程序集并将磁带标记为程序集<xref:System.Security.AllowPartiallyTrustedCallersAttribute>(APTCA) 特性。 这将使你部分受信任的 ASP.NET 代码，即可调用包装器类，并且自包装类在内部断言不受限制<xref:System.DirectoryServices.DirectoryServicesPermission>权限，包装器类将为能够成功调用提供程序  
  
 你必须创建[connectionStrings 元素 （ASP.NET 设置架构）](http://msdn.microsoft.com/library/b6ffbb2e-a4d1-410e-8f7e-9755e92c65de) Web.config 文件中标识的 Active Directory 服务器、 Active Directory 域或要使用的 ADAM 应用程序分区中的条目。 在域作用域，或在范围之内域，将仅运行提供程序。 下表列出了允许的连接字符串和使用的范围。  
  
|连接字符串|范围|  
|-----------------------|-----------|  
|LDAP: / /\<域或服务器 >: [端口]<br /><br /> 端口号是可选的 ADAM 和 Active Directory 时不需要。|针对指定的域或服务器运行提供程序。 与 AD，用户创建和删除已完成的默认用户容器中。 所有其他操作，包括任何搜索方法中，将某个位于默认命名上下文中，为域中。<br /><br /> 如果连接字符串指定的 Active Directory 域而不是特定服务器和<xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A>属性是`true`、<xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例将始终连接到具有要确保该密码的域的 PDC 角色的服务器更改生效，并且可用<xref:System.Web.Security.ActiveDirectoryMembershipProvider.ValidateUser%2A>调用方法。<br /><br /> 此连接字符串时不允许使用 ADAM，并且会在引发<xref:System.NotSupportedException>。|  
|LDAP: / /\<域或服务器 >: [端口] /\<容器 dn ><br /><br /> 端口号是可选的 ADAM 和 Active Directory 时不需要。|针对指定的域或服务器运行提供程序。 用户创建和删除仅在指定的容器中完成。 所有其他操作，包括任何搜索方法中，执行在容器取得 root 权限的子树搜索。<br /><br /> 对于 ADAM 服务器，该容器指定应用程序分区或应用程序分区中的容器的根目录。<br /><br /> 我们建议的连接字符串定义特定容器，以便提高性能。|  
  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例映射到的目录属性<xref:System.Web.Security.ActiveDirectoryMembershipUser>属性。 如果没有属性映射在 Web.config 文件中完成，则使用默认属性。 属性映射的详细信息，请参阅中的各个属性<xref:System.Web.Security.ActiveDirectoryMembershipUser>类文档。  
  
 下表列出<xref:System.Web.Security.ActiveDirectoryMembershipUser>属性及其默认特性映射。  
  
> [!IMPORTANT]
>  <xref:System.Web.Security.ActiveDirectoryMembershipProvider>类不显式检查提供程序属性将不映射到目录中的用户对象的核心属性。 你必须确保该目录中的敏感信息不公开可通过映射特性。  
  
|Property|默认目录属性|可以映射？|  
|--------------|---------------------------------|--------------------|  
|<xref:System.Web.Security.ActiveDirectoryMembershipUser.ProviderUserKey%2A>|securityIdentifier|否|  
|<xref:System.Web.Security.MembershipUser.UserName%2A>|userPrincipalName|是，但必须 userPrincipalName 或 sAMAccountName|  
|<xref:System.Web.Security.ActiveDirectoryMembershipUser.Comment%2A>|注释|否|  
|<xref:System.Web.Security.MembershipUser.CreationDate%2A>|whenCreated|否|  
|<xref:System.Web.Security.ActiveDirectoryMembershipUser.Email%2A>|邮件|是，但必须是 Unicode String 类型的单值属性。|  
|<xref:System.Web.Security.ActiveDirectoryMembershipUser.LastActivityDate%2A>|n/a|不支持<xref:System.Web.Security.ActiveDirectoryMembershipProvider>。|  
|<xref:System.Web.Security.ActiveDirectoryMembershipUser.LastLoginDate%2A>|n/a|不支持<xref:System.Web.Security.ActiveDirectoryMembershipProvider>。|  
|<xref:System.Web.Security.MembershipUser.LastPasswordChangedDate%2A>|pwdLastSet|否|  
|<xref:System.Web.Security.MembershipUser.PasswordQuestion%2A>|无|是，但必须是 Unicode String 类型的单值属性。|  
|<xref:System.Web.Security.ActiveDirectoryMembershipUser.IsApproved%2A>|用户帐户控制 (AD)<br /><br /> mDS UserAccountDisabled (ADAM)|否|  
|<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>|计算从 'lockouttime' 和 AD 锁定持续时间 (在 Windows 2000 上的 AD)<br /><br /> msDS 用户的帐户的控件的计算 (AD 在 Windows Server 2003)<br /><br /> msDS 用户的帐户的控件的计算 (ADAM)|否|  
|<xref:System.Web.Security.MembershipUser.LastLockoutDate%2A>|如果由于尝试输入太多次不正确的密码，用户被锁定，则返回锁定时间属性。<br /><br /> 如果用户锁定由于过多错误密码答案尝试，通过定义的特性中存储的值`attributeMapFailedPasswordAnswerLockoutTime`返回。<br /><br /> 如果用户锁定由于密码错误并尝试输入太多次不正确的密码、 最新的日期/时间值返回。<br /><br /> 如果帐户未锁定，则返回 1/1/1754，以便与 SQL 兼容性。|否|  
  
 当同时<xref:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer%2A>和<xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A>属性`true`、<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类支持密码重置安全通过要求用户在回答预先确定的问题。 若要支持问题和答案，你必须设置以下配置属性使用[将元素添加为成员资格 （ASP.NET 设置架构） 的提供程序](http://msdn.microsoft.com/library/8423ec7f-a06d-4606-977e-a46400b2fc18)应用程序配置文件中。  
  
|配置属性|特性类型|  
|-----------------------------|--------------------|  
|`attributeMapPasswordQuestion`|必须是 Unicode String 类型的单值属性。|  
|`attributeMapPasswordAnswer`|必须是 Unicode String 类型的单值属性。|  
|`attributeMapFailedPasswordAnswerCount`|必须是整数类型的单值属性。|  
|`attributeMapFailedPasswordAnswerTime`|必须是类型大的整数间隔的单值属性。|  
|`attributeMapFailedPasswordAnswerLockoutTime`|必须是类型大的整数间隔的单值属性。|  
  
 使用密码重置安全机制的详细信息，请参阅<xref:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer%2A>属性。  
  
## <a name="active-directory-connections"></a>Active Directory 连接  
 当<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类用于连接到 Active Directory 或 Active Directory 应用程序模式 (ADAM) 服务器上，`connectionProtection`使用设置的属性[将元素添加为成员资格 （ASP.NET 设置架构） 的提供程序](http://msdn.microsoft.com/library/8423ec7f-a06d-4606-977e-a46400b2fc18)在应用程序配置文件可能会限制的操作类型<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类可通过连接执行。 `connectionProtection`属性也确定方法<xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例将用于创建与 Active Directory 或 ADAM 服务器的连接。  
  
 下表显示的效果`connectionProtection`属性时连接到 Active Directory。  
  
|`connectionProtection` 设置|效果|  
|------------------------------------|------------|  
|<xref:System.Web.Security.ActiveDirectoryConnectionProtection.None>|<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类将连接到 Active Directory，与这些限制。<br /><br /> 的设置密码任何方法将失败。 Active Directory 要求安全连接时更改密码。<br />-您必须显式设置`connectionUsername`和`connectionPassword`属性使用[将元素添加为成员资格 （ASP.NET 设置架构） 的提供程序](http://msdn.microsoft.com/library/8423ec7f-a06d-4606-977e-a46400b2fc18)中应用程序配置文件; 否则为<xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例则会引发<xref:System.Configuration.Provider.ProviderException>异常。|  
|`Secure`|<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类将尝试连接到使用 SSL 的 Active Directory。 如果 SSL 失败，则将进行第二个尝试连接到 Active Directory 使用签名-密封。 如果这两个尝试都失败，<xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例则会引发<xref:System.Configuration.Provider.ProviderException>异常。<br /><br /> 支持进程凭据和显式凭据。|  
  
 下表显示的效果`connectionProtection`属性连接到 ADAM 服务器时。  
  
|`connectionProtection` 设置|效果|  
|------------------------------------|------------|  
|<xref:System.Web.Security.ActiveDirectoryConnectionProtection.None>|<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类将连接到一个具有此限制的 ADAM 服务器。<br /><br /> 的设置密码任何方法将失败，除非您显式配置 ADAM 服务器，以便能够发送并更改通过不安全连接的密码的服务器。<br /><br /> 支持进程凭据和显式凭据。|  
|`Secure`|<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类将尝试连接到使用 SSL 的 ADAM 服务器。 如果无法建立连接，<xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例则会引发<xref:System.Configuration.Provider.ProviderException>异常。<br /><br /> 支持进程凭据和显式凭据。|  
  
## <a name="adam-configuration"></a>ADAM 配置  
 使用 ADAM 服务器时，ADAM 实例必须包含定义的架构`User`类。 你可以导入`User`LDIF 导入类`MS-User.ldf`文件 ADAM 安装目录中可用。  
  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider>类会使用 ADAM 服务器配置为使用默认网络端口。 下表显示的默认 ADAM 服务器所预期的值。  
  
|connectionProtection 设置|预期的 ADAM 端口|  
|----------------------------------|------------------------|  
|<xref:System.Web.Security.ActiveDirectoryConnectionProtection.None>|389|  
|`Secure`|636|  
  
 如果你的 ADAM 服务器未使用的默认端口，请参阅文章 Q817583，"Active Directory 服务不要求安全授权通过 SSL 连接，"在[Microsoft 知识库文章](http://go.microsoft.com/fwlink/?linkid=37115)。  
  
   
  
## Examples  
 下面的代码示例显示配置为使用 ASP.NET 应用程序的 Web.config 文件<xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例。 第一个示例对于 Active Directory 属性，使用默认映射，并不支持密码重置安全问题答案，也不调用搜索方法的能力。 第二个示例显示允许的所有属性设置<xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例。  
  
 第一个示例是使用 Active Directory 属性的默认映射的简单配置文件。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 此示例将显示所有可用的实例的属性设置<xref:System.Web.Security.ActiveDirectoryMembershipProvider>。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership  
      defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"  
          type="System.Web.Security.ActiveDirectoryMembershipProvider,  
          System.Web, Version=1.0.3600, Culture=neutral,  
          PublicKeyToken=b03f5f7f11d50a3a"  
          connectionStringName="ADService"  
          connectionUsername="UserWithAppropriateRights"  
          connectionPassword="PasswordForUser"  
          connectionProtection="Secure"  
          enablePasswordReset="true"  
          enableSearchMethods="true"  
          requiresQuestionAndAnswer="true"  
          applicationName="/"  
          description="Default AD connection"  
          requiresUniqueEmail="false"  
          clientSearchTimeout="30"  
          serverSearchTimeout="30"  
          timeoutUnit="Minutes"  
          attributeMapPasswordQuestion="department"  
          attributeMapPasswordAnswer="division"  
          attributeMapFailedPasswordAnswerCount="singleIntAttribute"  
         attributeMapFailedPasswordAnswerTime="singleLargeIntAttribute"  
         attributeMapFailedPasswordAnswerLockoutTime="singleLargeIntAttribute"  
          attributeMapEmail = "mail"  
          attributeMapUsername = "userPrincipalName"  
          maxInvalidPasswordAttempts = "5"  
          passwordAttemptWindow = "10"  
          passwordAnswerAttemptLockoutDuration = "30"  
          minRequiredPasswordLength="7"  
          minRequiredNonalphanumericCharacters="1"  
          passwordStrengthRegularExpression="  
          @\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})" />  
        />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 `clientSearchTimeout` 和`serverSearchTimeout`到几分钟的默认值。 若要更改单位，设置`timeoutUnit`属性值设为"Days"、"Hours"、"分钟数"、"Seconds"或"毫秒"之一。 如果未指定的属性，则默认值为"分钟数"。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActiveDirectoryMembershipProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActiveDirectoryMembershipProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>创建 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider> ASP.NET 创建的实例将调用构造函数<xref:System.Web.Security.ActiveDirectoryMembershipProvider>为应用程序的配置中指定的类。 此构造函数不应在代码中使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用自定义成员资格提供程序的应用程序的名称。</summary>
        <value>使用自定义成员资格提供程序的应用程序的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ApplicationName%2A>属性可以设置为 ASP.NET 应用程序的名称; 但是，应用程序名称不由<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类。  
  
 因此，与其他不同<xref:System.Web.Security.MembershipProvider>实现交互操作，访问相同的 Active Directory 数据存储区始终将共享相同的用户数据的所有 ASP.NET 应用程序。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">已尝试设置 <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.ApplicationName" /> 属性。</exception>
        <exception cref="T:System.InvalidOperationException">在初始化 <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.ApplicationName" /> 实例之前，已尝试访问 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 属性。</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public override bool ChangePassword (string username, string oldPassword, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePassword(string username, string oldPassword, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePassword(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePassword (username As String, oldPassword As String, newPassword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePassword(System::String ^ username, System::String ^ oldPassword, System::String ^ newPassword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="oldPassword" Type="System.String" />
        <Parameter Name="newPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要为其更新密码的用户的名称。</param>
        <param name="oldPassword">指定的用户的当前密码。</param>
        <param name="newPassword">指定的用户的新密码。</param>
        <summary>更改指定用户的密码。</summary>
        <returns>
          如果密码更新成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePassword%2A>方法用于更新 Active Directory 数据存储区中的用户的密码。 而不考虑凭据，<xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例配置为使用，提供程序连接到 Active Directory 服务器使用`username`和`oldPassword`连接凭据作为参数。  
  
 如果<xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A>属性是`true`、 用户不能更改他或她如果因为用户太多，所以以前锁定帐户的密码尝试回答密码提示问题。 用户将需要等待中指定的分钟数<xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A>更改密码之前的属性。  
  
 如果密码更改成功和<xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A>属性是`true`，然后用户的密码不正确答案跟踪计数器将重置。  
  
 提供程序查找要通过执行开始连接字符串中指定的搜索点的用户名称的子树搜索更新的用户实例。 请参阅<xref:System.Web.Security.ActiveDirectoryMembershipProvider>有关连接字符串的详细信息的类主题。  
  
 若要更改 Active Directory 服务器上的密码`connectionProtection`属性必须设置为<xref:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal>。  
  
 如果使用 ADAM 服务器，`connectionProtection`属性可以设置为<xref:System.Web.Security.ActiveDirectoryConnectionProtection.None>，但仅当显式配置 ADAM 服务器以允许通过不安全的连接进行密码更改。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 为空，或超过用户名的最大长度（通常为 256 个字符）。  
  
 \- 或 -  
  
 <paramref name="username" /> 包含逗号。  
  
 \- 或 -  
  
 用户名映射到 <see langword="userPrincipalName" /> 特性，并且 <paramref name="username" /> 参数包含反斜杠。  
  
 \- 或 -  
  
 <paramref name="oldPassword" /> 或 <paramref name="newPassword" /> 是长度为零的字符串。  
  
 \- 或 -  
  
 <paramref name="oldPassword" /> 或 <paramref name="newPassword" /> 超过最大密码长度（通常为 128 个字符）。  
  
 \- 或 -  
  
 <paramref name="newPassword" /> 小于 <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredPasswordLength" /> 属性所指定的最小密码长度  
  
 \- 或 -  
  
 <paramref name="newPassword" /> 包含的非字母字符数比 <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredNonAlphanumericCharacters" /> 属性所指定的数目少。  
  
 \- 或 -  
  
 根据 <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression" /> 属性中定义的正则表达式进行的 <paramref name="newPassword" /> 验证失败。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> 为 <see langword="null" />。  
  
 \- 或 -  
  
 <paramref name="oldPassword" /> 为 <see langword="null" />。  
  
 \- 或 -  
  
 <paramref name="newPassword" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="newPassword" /> 不满足 Active Directory 服务器所定义的复杂性要求。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">未能建立到 Active Directory 应用程序模式服务器的安全连接。</exception>
        <exception cref="T:System.InvalidOperationException">在初始化 <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePassword(System.String,System.String,System.String)" /> 实例前，调用了 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 方法。</exception>
        <exception cref="T:System.Exception">发生了未经处理的异常。</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePasswordQuestionAndAnswer(string username, string password, string newPasswordQuestion, string newPasswordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePasswordQuestionAndAnswer (username As String, password As String, newPasswordQuestion As String, newPasswordAnswer As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePasswordQuestionAndAnswer(System::String ^ username, System::String ^ password, System::String ^ newPasswordQuestion, System::String ^ newPasswordAnswer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="newPasswordQuestion" Type="System.String" />
        <Parameter Name="newPasswordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要为其更改密码提示问题和答案的用户。</param>
        <param name="password">指定的用户的密码。</param>
        <param name="newPasswordQuestion">指定的用户的新密码提示问题。</param>
        <param name="newPasswordAnswer">指定的用户的新密码提示问题答案。</param>
        <summary>更新 Active Directory 存储区中的用户密码提示问题和答案。</summary>
        <returns>
          如果更新操作成功，则为 <see langword="true" />；否则为 <see langword="false" />。 如果密码不正确、用户已锁定或用户不在 Active Directory 数据存储区中，也会返回一个 <see langword="false" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用该方法<xref:System.Web.Security.ActiveDirectoryMembershipUser>类来更新密码提示问题和答案 Active Directory 成员资格存储区中的用户。  
  
 在重置用户的密码时，需要密码提示问题和答案提供额外的安全层。 在创建时的用户名称，用户可以提供的问题和答案，以后可用于重置忘记了的密码。 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePasswordQuestionAndAnswer%2A>方法更新密码提示问题和成员资格用户的答案，为新值。  
  
 若要使用<xref:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePasswordQuestionAndAnswer%2A>方法，你必须在你的应用程序配置文件中设置这些附加属性：  
  
-   `requiresQuestionAndAnswer` 必须是 `true.`  
  
-   `attributeMapPasswordQuestion` 和`attributeMapPasswordAnswer`必须映射到 Active Directory 架构中的属性。  
  
 如果不满足上述条件，<xref:System.Configuration.Provider.ProviderException>在初始化时引发。  
  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例连接到 Active Directory 数据存储区中提供的凭据与`username`和`password`参数来验证用户名/密码组合。 问题和答案的实际更新提供程序的配置的连接凭据执行。  
  
 如果不正确的密码提供给<xref:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePasswordQuestionAndAnswer%2A>方法，目录服务器将递增跟踪无效的密码尝试的计数器。 这可能会导致用户被锁定，无法登录之前清除锁定状态是通过调用<xref:System.Web.Security.ActiveDirectoryMembershipProvider.UnlockUser%2A>方法或经过目录中指定的锁定持续时间。  
  
 如果对问题和答案的更新成功和<xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A>属性是`true`，跟踪用户的错误的密码提示问题答案计数器将重置。  
  
 使用加密密码提示问题答案<xref:System.Web.Security.MembershipProvider.EncryptPassword%2A>方法之前存储在 Active Directory 数据存储区。 通过指定的加密密钥和算法[machineKey 元素 （ASP.NET 设置架构）](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46)配置元素。 上的解密属性[machineKey 元素 （ASP.NET 设置架构）](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46)必须指定元素，<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类不支持自动生成加密密钥。  
  
 密码提示问题的最大长度为 256 个字符。 密码提示问题答案的最大长度为 128 个字符。  
  
 除外的所有参数值中裁剪掉前导空格和尾随空格`password`。  
  
 提供程序查找要通过执行开始连接字符串中指定的搜索点的用户名称的子树搜索更新的用户实例。 请参阅<xref:System.Web.Security.ActiveDirectoryMembershipProvider>有关连接字符串的详细信息的类主题。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">管理员尚未将密码提示问题和答案字段映射到 Active Directory 架构的特性。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 为空，或超过用户名的最大长度（通常为 256 个字符）。  
  
 \- 或 -  
  
 <paramref name="username" /> 包含逗号。  
  
 \- 或 -  
  
 用户名映射到 <see langword="userPrincipalName" /> 特性，并且 <paramref name="username" /> 参数包含反斜杠。  
  
 \- 或 -  
  
 <paramref name="password" /> 是一个长度为零的字符串。  
  
 \- 或 -  
  
 <paramref name="password" /> 超过最大密码长度（通常为 128 个字符）。  
  
 \- 或 -  
  
 <paramref name="newPasswordQuestion" /> 为空，并且 <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer" /> 属性值为 <see langword="true" />。  
  
 \- 或 -  
  
 <paramref name="newPasswordQuestion" /> 的长度超过 256 个字符。  
  
 \- 或 -  
  
 <paramref name="newPasswordAnswer" /> 加密后的长度超过 128 个字符。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> 为 <see langword="null" />。  
  
 \- 或 -  
  
 <paramref name="password" /> 为 <see langword="null" />。  
  
 \- 或 -  
  
 <paramref name="newPasswordQuestion" /> 为 <see langword="null" />，但 <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer" /> 属性为 <see langword="true" />。  
  
 \- 或 -  
  
 <paramref name="newPasswordAnswer" /> 为 <see langword="null" />，但 <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer" /> 属性为 <see langword="true" />。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">[machineKey 元素（ASP.NET 设置框架）](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46)配置元素指示自动生成的计算机加密密钥。 必须将 [machineKey 元素（ASP.NET 设置框架）](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46)元素的 <see langword="decriptionKey" /> 属性显式设置为使用 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 存储密码提示问题答案。</exception>
        <exception cref="T:System.InvalidOperationException">在初始化 <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)" /> 实例前，调用了 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 方法。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">新用户的用户名。</param>
        <param name="password">新用户的密码。</param>
        <param name="email">新用户的电子邮件地址。</param>
        <param name="passwordQuestion">新用户的密码提示问题。</param>
        <param name="passwordAnswer">新用户的密码提示问题答案。</param>
        <param name="isApproved">是否批准对新的用户进行验证。</param>
        <param name="providerUserKey">用户的成员资格数据源中的唯一标识符。 使用 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 类时，此参数必须为 <see langword="null" />。</param>
        <param name="status">此方法返回时，包含一个 <see cref="T:System.Web.Security.MembershipCreateStatus" /> 枚举值，指示是否成功创建了用户。</param>
        <summary>将新用户添加到 Active Directory 数据存储区。</summary>
        <returns>一个 <see cref="T:System.Web.Security.ActiveDirectoryMembershipUser" /> 实例，包含新创建用户的信息；如果未成功创建用户，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.CreateUser%2A>方法由调用<xref:System.Web.Security.Membership>类在 Active Directory 数据存储区中创建新用户。  
  
 对于 Active Directory 和 Active Directory 应用程序模式 (ADAM) 服务器，<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类需要将目录中的实例类`user`。 可选用户类，如`inetOrgPerson`不支持。  
  
 当使用 Active Directory 服务器和用户名称映射到`userPrincipalName`属性，<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类自动生成的随机 20 个字符的用户名称`sAMAccountName`代表你的参数。  
  
 参数默认为最大长度如下。  
  
|参数|最大长度|  
|---------------|--------------------|  
|`username`|如果使用的 64 个字符`userPrincipalName`属性。 如果使用`sAMAccountName`属性，则通常限制为 20 个字符或更少。|  
|`password`|128 个字符。|  
|`email`|256 个字符。|  
|`passwordQuestion`|256 个字符。|  
|`passwordAnswer`|之前和之后加密 128 个字符。|  
  
 <xref:System.Web.Security.ActiveDirectoryMembershipUser.Comment%2A>属性对返回<xref:System.Web.Security.ActiveDirectoryMembershipUser>实例被限制为 1024年个字符。  
  
 如果已通过减少这些属性的最大允许长度修改目录架构，这些长度将优先。  
  
 在创建用户之前,<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类将确保用户名称是唯一的。 如果<xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例配置为需要唯一的电子邮件地址，它还将确保电子邮件地址是唯一的。  
  
 在 Active Directory 用户名称的唯一性将强制执行通过执行时的用户名称映射到 GC 搜索`userPrincipalName`。 如果`sAMAccountName`使用，则目录将自动强制实施的唯一性`sAMAccountName`跨 Active Directory 域。  
  
 ADAM 服务器将自动强制实施的用户名称的唯一性`userPrincipalName`跨所有应用程序分区。  
  
 通过执行从在其中创建用户的容器的根目录开始的重复电子邮件地址的子树搜索强制唯一性的电子邮件地址。 这是默认用户容器 （连接字符串中指定如果连接到 Active Directory 和非容器） 或连接字符串中指定的容器。  
  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider>类直接在连接字符串中指定的用户容器中创建用户。 请参阅<xref:System.Web.Security.ActiveDirectoryMembershipProvider>有关连接字符串的详细信息的类主题。  
  
 在 Active Directory 服务器上，设置密码`connectionProtection`属性必须设置为<xref:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal>。  
  
 当使用 ADAM 服务器时，`connectionProtection`属性可以设置为<xref:System.Web.Security.ActiveDirectoryConnectionProtection.None>，但仅当你显式配置 ADAM 服务器，以便通过不安全连接的密码更改的服务器。  
  
 除之外的所有字符串参数值中裁剪掉前导空格和尾随空格`password`。  
  
> [!IMPORTANT]
>  除非用来连接到 Active Directory 服务器的凭据拥有域管理员权限 （不推荐） 或"创建子实例"，无法创建新用户"删除子实例"和"设置密码"访问权限。 "删除子实例"访问权限是必需的因为创建用户是一个多步骤过程，并且如果用户创建的任何步骤失败，<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类将删除该用户实例而不保留中的部分构造完整的用户实例目录。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerUserKey" /> 参数不为 <see langword="null" />。</exception>
        <exception cref="T:System.NotSupportedException">管理员尚未将密码提示问题和答案字段映射到 Active Directory 架构的特性，并且 <paramref name="passwordQuestion" /> 或 <paramref name="passwordAnswer" /> 参数不是 <see langword="null" />。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">[machineKey 元素（ASP.NET 设置框架）](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46)配置元素指示自动生成的计算机加密密钥。 必须将 [machineKey 元素（ASP.NET 设置框架）](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46)元素的 <see langword="decriptionKey" /> 属性显式设置为使用 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 存储密码提示问题答案。  
  
 \- 或 -  
  
 尝试设置新用户的密码时，<see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 无法建立到目录的安全连接。</exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">尝试创建用户时出现错误。</exception>
        <exception cref="T:System.InvalidOperationException">在初始化 <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" /> 实例前，调用了 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 方法。</exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentConnectionProtection">
      <MemberSignature Language="C#" Value="public System.Web.Security.ActiveDirectoryConnectionProtection CurrentConnectionProtection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Security.ActiveDirectoryConnectionProtection CurrentConnectionProtection" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.CurrentConnectionProtection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentConnectionProtection As ActiveDirectoryConnectionProtection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Security::ActiveDirectoryConnectionProtection CurrentConnectionProtection { System::Web::Security::ActiveDirectoryConnectionProtection get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.ActiveDirectoryConnectionProtection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于保护与服务器的通信的当前安全级别。</summary>
        <value>
          <see cref="T:System.Web.Security.ActiveDirectoryConnectionProtection" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.CurrentConnectionProtection%2A>属性指示当前的安全级别，<xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例配置为使用。 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.CurrentConnectionProtection%2A>属性基于`connnectionProtection`属性设置与[将元素添加为成员资格 （ASP.NET 设置架构） 的提供程序](http://msdn.microsoft.com/library/8423ec7f-a06d-4606-977e-a46400b2fc18)应用程序配置文件中。  
  
 `connectionProtection`属性只能设置为<xref:System.Web.Security.ActiveDirectoryConnectionProtection.None>或<xref:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal>配置文件中。  
  
 请参阅<xref:System.Web.Security.ActiveDirectoryMembershipProvider>有关连接字符串的详细信息的类主题。  
  
   
  
## Examples  
 下面的代码示例显示配置 Web.config 条目<xref:System.Web.Security.ActiveDirectoryMembershipProvider>要使用的 SSL 安全协议连接到 Active Directory 服务器实例。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,  
          PublicKeyToken=b03f5f7f11d50a3a"  
          connectionProtection="SignAndSeal" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在初始化 <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.CurrentConnectionProtection" /> 实例之前，已尝试访问 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 属性。</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public override bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">要删除的用户的名称。</param>
        <param name="deleteAllRelatedData">
          <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.DeleteUser(System.String,System.Boolean)" /> 方法将此参数忽略。</param>
        <summary>从 Active Directory 数据存储区移除用户的成员资格信息。</summary>
        <returns>
          如果删除了用户，则为 <see langword="true" />；如果在数据存储区中未找到该用户，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.DeleteUser%2A>方法可以立即删除标识的用户`username`参数。 由于 Active Directory 数据存储在单独的目录的区域中不存储用户信息`deleteAllRelatedData`参数将被忽略，尽管它必须设置为`true`或`false`调用时<xref:System.Web.Security.ActiveDirectoryMembershipProvider.DeleteUser%2A>方法。  
  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider>类查找要删除通过由连接字符串的用户容器中执行搜索的用户名单级别的用户实例。 请参阅<xref:System.Web.Security.ActiveDirectoryMembershipProvider>有关连接字符串的详细信息的类主题。  
  
 `username` 必须是 64 个字符或更少。  
  
> [!IMPORTANT]
>  除非用来连接到 Active Directory 服务器的凭据具有 （不推荐） 任一域管理员权限或"删除子实例"访问权限，无法删除用户。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 为空，或超过用户名的最大长度（通常为 256 个字符）。  
  
 \- 或 -  
  
 <paramref name="username" /> 包含逗号。  
  
 \- 或 -  
  
 用户名映射到 <see langword="userPrincipalName" /> 特性，并且 <paramref name="userName" /> 参数包含反斜杠。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">尝试删除用户时出现错误。</exception>
        <exception cref="T:System.InvalidOperationException">在初始化 <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.DeleteUser(System.String,System.Boolean)" /> 实例前，调用了 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 方法。</exception>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordReset { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 实例是否已配置为允许用户重置其密码。</summary>
        <value>
          如果允许密码重置，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A>属性指示是否可以使用<xref:System.Web.Security.ActiveDirectoryMembershipProvider.ResetPassword%2A>方法来重置用户的密码。 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A>属性设置在应用程序的配置文件中使用`enablePasswordReset`属性[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)元素。  
  
 仅可设置<xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A>属性`true`时以下[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)进行了元素设置。  
  
-   `requiresQuestionAndAnswer` 必须是`true`。  
  
-   必须修改 Active Directory 架构以包含用于存储的密码提示问题和答案，以及密码提示问题答案更改尝试的三个跟踪字段的特性。  
  
-   `attributeMapPasswordQuestion``attributeMapPasswordAnswer`， `attributeMapFailedPasswordAnswerCount`， `attributeMapFailedPasswordAnswerTime`，和`attributeMapFailedPasswordAnswerLockoutTime`必须映射到 Active Directory 架构中的属性。  
  
 如果不满足上述条件，<xref:System.Configuration.Provider.ProviderException>在初始化时引发。  
  
 当应用程序配置文件中的连接字符串指定的 Active Directory 域而不是特定的服务器，<xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例将始终连接到包含要确保的域的 PDC 角色的域控制器密码更改生效，并且可用<xref:System.Web.Security.ActiveDirectoryMembershipProvider.ValidateUser%2A>调用方法。  
  
> [!NOTE]
>  即使<xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A>属性是`true`，除非用于连接到 Active Directory 服务器的凭据具有域管理员权限 （不推荐） 或的"重置密码"访问权限，你无法重置用户密码。  
  
   
  
## Examples  
 下面的代码示例显示配置 Web.config 条目<xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例启用密码重置。 它使用显式凭据的用户给出的"重置密码"访问权限。  
  
> [!IMPORTANT]
>  当将用户凭据放在 Web.config 文件中时，有潜在的安全威胁。 对包含 Web.config 文件的目录具有访问权限的用户可以读取该文件，并因此查看这些凭据。 有关如何防范此威胁的详细信息，请参阅[加密配置信息使用受保护的配置](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1)。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a"  
          connectionUsername="UserWithResetPasswordRights"  
          connectionPassword="PasswordForUser"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          attributeMapPasswordQuestion="PasswordQuestionADAttribute"  
          attributeMapPasswordAnswer="PasswordAnswerADAttribute"  
          attributeMapFailedPasswordAnswerCount="AnswerCountADAttribute"  
          attributeMapFailedPasswordAnswerTime="AnswerTimeADAttribute"  
          attributeMapFailedPasswordAnswerLockoutTime="LockOutTimeADAttribute" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在初始化 <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset" /> 实例之前，已尝试访问 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 属性。</exception>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示是否可从 Active Directory 数据存储区检索用户密码。 此属性始终返回 <see langword="false" />。</summary>
        <value>
          <see langword="false" /> 指示 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 类不支持密码检索。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider>类不支持密码检索。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在初始化 <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordRetrieval" /> 实例之前，已尝试访问 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 属性。</exception>
      </Docs>
    </Member>
    <Member MemberName="EnableSearchMethods">
      <MemberSignature Language="C#" Value="public bool EnableSearchMethods { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSearchMethods" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnableSearchMethods As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSearchMethods { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示面向搜索的 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 方法是否可用。</summary>
        <value>
          如果搜索方法可用，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 搜索 Active Directory 服务器可能是占用大量资源，因为<xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A>属性使您能够将关闭搜索面向<xref:System.Web.Security.ActiveDirectoryMembershipProvider>方法。 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A>属性设置在应用程序的配置文件中使用`enableSearchMethods`属性[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)元素。  
  
 当<xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A>属性是`false`，以下方法不可用：  
  
-   <xref:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByName%2A>  
  
-   <xref:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByEmail%2A>  
  
-   <xref:System.Web.Security.ActiveDirectoryMembershipProvider.GetAllUsers%2A>  
  
 提供程序使用连接字符串中指定的搜索点启动的子树搜索。 请参阅<xref:System.Web.Security.ActiveDirectoryMembershipProvider>有关连接字符串的详细信息的类主题。  
  
 我们建议你不要启用搜索在生产系统上，直到您已确认的搜索查询签发<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类不会产生负面影响你的目录服务器的性能。 由于<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类旨在用于无状态 Web 环境，则你无法使用公开基础的分页优化<xref:System.DirectoryServices>Api。 这意味着分页操作期间对较大目录搜索时非常贵，应当避免。 搜索操作始终发出针对配置连接字符串中的目录服务器或在连接字符串指向域的情况下自动选择的服务器中。 用于其搜索方法，该提供程序不使用全局编录。  
  
   
  
## Examples  
 下面的代码示例显示配置 Web.config 条目<xref:System.Web.Security.ActiveDirectoryMembershipProvider>若要启用搜索 Active Directory 服务器的实例。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a"  
          enableSearchMethods="true" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在初始化 <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods" /> 实例之前，已尝试访问 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 属性。</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">要搜索的电子邮件地址或部分电子邮件地址。</param>
        <param name="pageIndex">要返回的结果页的索引。 <c>pageIndex</c> 是从零开始的。</param>
        <param name="pageSize">要返回的结果页的大小。</param>
        <param name="totalRecords">此方法返回时，包含集合中返回的用户总数。 此参数未经初始化即被传递。</param>
        <summary>根据用户的电子邮件地址，从 Active Directory 数据存储返回成员资格用户集合。</summary>
        <returns>一个 <see cref="T:System.Web.Security.MembershipUserCollection" />，其中包含从 <paramref name="pageSize" /> 所指定的页开始的 <paramref name="pageIndex" /><see cref="T:System.Web.Security.MembershipUser" /> 实例。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByEmail%2A>方法获取<xref:System.Web.Security.MembershipUserCollection>包含在 Active Directory 中的用户记录存储该匹配项`emailToMatch`参数。 电子邮件地址会返回用户记录以升序排序。  
  
 `emailToMatch`参数最多为 256 个字符。  
  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider>类将颁发同时使用搜索`clientSearchTimeout`和`serverSearchTimeout`配置值。 由于<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类执行针对使用 512 行每页的页的目录服务器的搜索、 超时值应用到每一页结果通过提取<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类。 例如，如果搜索查询结果中的数据，1,000 行<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类将提取该信息作为两个数据页。 这意味着客户端和搜索超时将开始计数从零在<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类请求数据的第二页。  
  
 返回的结果<xref:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByEmail%2A>方法受到`pageIndex`和`pageSize`参数。 `pageSize`参数指定的最大数目<xref:System.Web.Security.MembershipUser>实例以返回<xref:System.Web.Security.MembershipUserCollection>。 `pageIndex`参数指定的结果返回，其中 0 （零） 指示的第一页的页。  
  
 `totalRecords`参数是`out`在 Active Directory 数据存储区中找到匹配的成员资格用户的总数设置的参数。 例如，如果有 13 个用户配置的数据存储中，与`pageIndex`值为 1，`pageSize`为 5，<xref:System.Web.Security.MembershipUserCollection>返回将包含到 10 个用户的第六个。 `totalRecords`参数将设置为 13。  
  
 您可以控制是否允许用户，通过设置搜索<xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A>属性在应用程序的配置文件中使用`enableSearchMethods`属性[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)元素. 设置<xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A>属性`false`导致<xref:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByEmail%2A>方法会引发<xref:System.NotSupportedException>异常。  
  
 提供程序使用连接字符串中指定的搜索点启动的子树搜索。 请参阅<xref:System.Web.Security.ActiveDirectoryMembershipProvider>有关连接字符串的详细信息的类主题。  
  
 我们建议你不要启用搜索在生产系统上，直到您已确认的搜索查询签发<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类不会产生负面影响你的目录服务器的性能。 由于<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类旨在用于无状态 Web 环境，则你无法使用公开基础的分页优化<xref:System.DirectoryServices>Api。 这意味着分页操作期间对较大目录搜索时非常贵，应当避免。 搜索操作始终发出针对配置连接字符串中的目录服务器或在连接字符串指向域的情况下自动选择的服务器中。 用于其搜索方法，该提供程序不使用全局编录。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在初始化 <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" /> 实例前，调用了 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 方法。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="emailToMatch" /> 为空。  
  
 \- 或 -  
  
 <paramref name="emailToMatch" /> 的长度超过 256 个字符。  
  
 \- 或 -  
  
 <paramref name="pageIndex" /> 小于 0。  
  
 \- 或 -  
  
 <paramref name="pageSize" /> 小于 1。  
  
 \- 或 -  
  
 <paramref name="pageSize" /> 乘以 <paramref name="pageIndex" />，然后加上 <paramref name="pageSize" />，再减去 1 后得到的值大于 <see cref="F:System.Int32.MaxValue" />。</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods" /> 属性为 <see langword="false" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">要搜索的用户名或部分用户名。</param>
        <param name="pageIndex">要返回的结果页的索引。 <c>pageIndex</c> 是从零开始的。</param>
        <param name="pageSize">要返回的结果页的大小。</param>
        <param name="totalRecords">当此方法返回时，此参数包含在集合中返回的记录的总数。 此参数未经初始化即被传递。</param>
        <summary>根据用户名从 Active Directory 数据存储区返回用户的集合。</summary>
        <returns>一个 <see cref="T:System.Web.Security.MembershipUserCollection" />，其中包含从 <paramref name="pageSize" /> 所指定的页开始的 <paramref name="pageIndex" /><see cref="T:System.Web.Security.MembershipUser" /> 实例。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByName%2A>方法返回<xref:System.Web.Security.MembershipUserCollection>实例包含从 Active Directory 数据存储的所有匹配的用户名称的用户记录`userNameToMatch`参数。 记录将返回按用户名称按字母顺序进行排序。  
  
 返回的结果<xref:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByName%2A>方法受到`pageIndex`和`pageSize`参数。 `pageSize`参数指定的最大数目<xref:System.Web.Security.MembershipUser>实例以返回<xref:System.Web.Security.MembershipUserCollection>。 `pageIndex`参数指定的结果返回，其中 0 （零） 指示的第一页的页。  
  
 `totalRecords`参数是`out`在 Active Directory 数据存储区中找到匹配的成员资格用户的总数设置的参数。 例如，如果有 13 个用户配置的数据存储中，与`pageIndex`值为 1，`pageSize`为 5，<xref:System.Web.Security.MembershipUserCollection>返回将包含到 10 个用户的第六个。 `totalRecords`参数将设置为 13。  
  
 您可以控制是否允许用户，通过设置搜索<xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A>属性在应用程序的配置文件中使用`enableSearchMethods`属性[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)元素. 设置<xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A>属性值设置为`false`导致<xref:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByName%2A>方法会引发<xref:System.NotSupportedException>异常。  
  
 提供程序使用连接字符串中指定的搜索点启动的子树搜索。 请参阅<xref:System.Web.Security.ActiveDirectoryMembershipProvider>有关连接字符串的详细信息的类主题。  
  
 我们建议你不要启用搜索在生产系统上，直到您已确认的搜索查询签发<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类不会产生负面影响你的目录服务器的性能。 由于<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类旨在用于无状态 Web 环境，则你无法使用公开基础的分页优化<xref:System.DirectoryServices>Api。 这意味着分页操作期间对较大目录搜索时非常贵，应当避免。 搜索操作始终发出针对配置连接字符串中的目录服务器或在连接字符串指向域的情况下自动选择的服务器中。 用于其搜索方法，该提供程序不使用全局编录。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在初始化 <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" /> 实例前，调用了 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 方法。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> 为空，或超过用户名的最大长度（通常为 256 个字符）。  
  
 \- 或 -  
  
 <paramref name="usernameToMatch" /> 包含逗号。  
  
 \- 或 -  
  
 <paramref name="pageIndex" /> 小于 0。  
  
 - 或 -  
  
 <paramref name="pageSize" /> 小于 1。  
  
 \- 或 -  
  
 <paramref name="pageSize" /> 乘以 <paramref name="pageIndex" />，然后加上 <paramref name="pageSize" />，再减去 1 后得到的值大于 <see cref="F:System.Int32.MaxValue" />。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods" /> 属性为 <see langword="false" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GeneratePassword">
      <MemberSignature Language="C#" Value="public virtual string GeneratePassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GeneratePassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.GeneratePassword" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GeneratePassword () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GeneratePassword();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>生成随机密码。</summary>
        <returns>随机密码。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.GeneratePassword%2A>方法<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类调用<xref:System.Web.Security.Membership.GeneratePassword%2A>方法<xref:System.Web.Security.Membership>类检索一个随机密码。 密码长度设置为值<xref:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredPasswordLength%2A>属性。 密码长度不能小于 14。  
  
 你可以明确调用<xref:System.Web.Security.Membership.GeneratePassword%2A>方法通过引用<xref:System.Web.Security.ActiveDirectoryMembershipProvider>直接从提供程序属性的类<xref:System.Web.Security.Membership>类。  
  
 生成的密码仅包含字母数字字符和以下标点符号: ！ @# $%^ & * （） _-+ = [{}]};: <>&#124;。 /？。 生成的密码中包含没有隐藏或非可打印的控制字符。  
  
 生成的密码将包含至少中指定的非字母数字字符数<xref:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>属性。 生成的密码不到测试中的正则表达式<xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression%2A>属性。  
  
> [!NOTE]
>  <xref:System.Web.Security.ActiveDirectoryMembershipProvider>类不会生成匹配的目录中设置的复杂性要求的密码。 就可以生成失败设置目录的密码复杂性规则的随机密码。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">要返回的结果页的索引。 <c>pageIndex</c> 是从零开始的。</param>
        <param name="pageSize">要返回的结果页的大小。</param>
        <param name="totalRecords">当此方法返回时，此参数包含在集合中返回的记录的总数。 此参数未经初始化即被传递。</param>
        <summary>获取 Active Directory 数据源中存储的所有用户的集合。</summary>
        <returns>一个 <see cref="T:System.Web.Security.MembershipUserCollection" />，其中包含从 <paramref name="pageSize" /> 所指定的页开始的 <paramref name="pageIndex" /><see cref="T:System.Web.Security.MembershipUser" /> 实例。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法<xref:System.Web.Security.Membership>类从 ASP.NET 应用程序的配置文件中指定的 Active Directory 数据存储中检索用户信息。  
  
 返回的结果<xref:System.Web.Security.ActiveDirectoryMembershipProvider.GetAllUsers%2A>方法受到`pageIndex`和`pageSize`参数。 `pageSize`参数指定的最大数目<xref:System.Web.Security.MembershipUser>实例以返回<xref:System.Web.Security.MembershipUserCollection>集合。 `pageIndex`参数指定的结果返回，其中 0 （零） 指示的第一页的页。  
  
 `totalRecords`参数是`out`在 Active Directory 数据存储区中找到匹配的成员资格用户的总数设置的参数。 例如，如果有 13 个用户配置的数据存储中，与`pageIndex`值为 1，la`pageSize`为 5，<xref:System.Web.Security.MembershipUserCollection>返回将包含到 10 个用户的第六个。 `totalRecords`参数将设置为 13。  
  
 您可以控制是否允许用户通过设置搜索<xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A>属性在应用程序的配置文件中使用`enableSearchMethods`属性[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)元素。 设置<xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A>属性`false`导致<xref:System.Web.Security.ActiveDirectoryMembershipProvider.GetAllUsers%2A>方法会引发<xref:System.NotSupportedException>异常。  
  
 提供程序使用连接字符串中指定的搜索点启动的子树搜索。 请参阅<xref:System.Web.Security.ActiveDirectoryMembershipProvider>有关连接字符串的详细信息的类主题。  
  
 我们建议你不要启用搜索在生产系统上，直到您已确认的搜索查询签发<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类不会产生负面影响你的目录服务器的性能。 由于<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类旨在用于无状态 Web 环境，则你无法使用公开基础的分页优化<xref:System.DirectoryServices>Api。 这意味着分页操作期间对较大目录搜索时非常贵，应当避免。 搜索操作始终发出针对配置连接字符串中的目录服务器或在连接字符串指向域的情况下自动选择的服务器中。 用于其搜索方法，该提供程序不使用全局编录。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在初始化 <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)" /> 实例前，调用了 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 方法。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> 小于 0。  
  
 - 或 -  
  
 <paramref name="pageSize" /> 小于 1。  
  
 \- 或 -  
  
 <paramref name="pageSize" /> 乘以 <paramref name="pageIndex" />，然后加上 <paramref name="pageSize" />，再减去 1 后得到的值大于 <see cref="F:System.Int32.MaxValue" />。</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods" /> 属性为 <see langword="false" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public override int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetNumberOfUsersOnline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在所有情况下都会引发 <see cref="T:System.NotSupportedException" /> 异常。</summary>
        <returns>所有情况下均为 <see cref="T:System.NotSupportedException" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider>类不支持返回联机用户数。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">对 <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetNumberOfUsersOnline" /> 方法的任何调用。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPassword">
      <MemberSignature Language="C#" Value="public override string GetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要为其检索密码的用户。</param>
        <param name="passwordAnswer">用户的密码提示问题答案。</param>
        <summary>从数据库返回指定用户的密码。 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 类不支持此方法。</summary>
        <returns>总是引发 <see cref="T:System.NotSupportedException" /> 异常。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider>类不支持返回用户的密码。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 不支持密码检索。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取 Active Directory 数据存储区中的成员资格用户的信息。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">用户的唯一标识符。</param>
        <param name="userIsOnline">
          <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser(System.Object,System.Boolean)" /> 方法忽略此参数。</param>
        <summary>获取与指定用户密钥关联的成员资格用户信息。</summary>
        <returns>一个 <see cref="T:System.Web.Security.MembershipUser" /> 实例，它表示指定的用户。 如果在 Active Directory 数据存储区中没有找到任何具有指定 <paramref name="providerUserKey" /> 值的用户，则返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser%2A>方法由调用<xref:System.Web.Security.Membership>类从 Active Directory 数据存储区中检索指定的用户的信息。  
  
 搜索为用户实例将查找其中`objectSID`属性匹配`providerUserKey`参数。  
  
 提供程序使用连接字符串中指定的搜索点启动的子树搜索。 请参阅<xref:System.Web.Security.ActiveDirectoryMembershipProvider>有关连接字符串的详细信息的类主题。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在初始化 <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser(System.Object,System.Boolean)" /> 实例前，调用了 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 方法。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerUserKey" /> 的类型不是 <see cref="T:System.Security.Principal.SecurityIdentifier" />。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerUserKey" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">要为其获取信息的用户的名称。</param>
        <param name="userIsOnline">
          <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser(System.String,System.Boolean)" /> 方法忽略此参数。</param>
        <summary>获取与指定用户名关联的成员资格用户信息。</summary>
        <returns>一个 <see cref="T:System.Web.Security.MembershipUser" /> 实例，它表示指定的用户。 如果在 Active Directory 数据存储区中没有找到任何具有指定 <paramref name="username" /> 值的用户，则返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser%2A>方法由调用<xref:System.Web.Security.Membership>类从 Active Directory 数据存储区中检索指定的用户的信息。  
  
 提供程序使用连接字符串中指定的搜索点启动的子树搜索。 请参阅<xref:System.Web.Security.ActiveDirectoryMembershipProvider>有关连接字符串的详细信息的类主题。  
  
 删除 `username` 参数值的前导和尾随空格。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 为空，或超过用户名的最大长度（通常为 256 个字符）。  
  
 \- 或 -  
  
 <paramref name="username" /> 包含逗号。  
  
 \- 或 -  
  
 用户名映射到 <see langword="userPrincipalName" /> 特性，并且 <paramref name="username" /> 参数包含反斜杠。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">在初始化 <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser(System.String,System.Boolean)" /> 实例前，调用了 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 方法。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public override string GetUserNameByEmail (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetUserNameByEmail(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUserNameByEmail (email As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetUserNameByEmail(System::String ^ email);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">要搜索的电子邮件地址。</param>
        <summary>获取与指定电子邮件地址关联的用户名。</summary>
        <returns>与指定电子邮件地址关联的用户名。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法<xref:System.Web.Security.Membership>类从 Active Directory 数据存储检索的用户名称基于用户的电子邮件地址。  
  
 如果成员资格数据存储区中的多个用户具有相同的电子邮件地址，则返回遇到的第一个用户名。 你可以设置`requiresUniqueEmail`属性[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)元素`true`在应用程序配置文件，以确保每封电子邮件地址在数据库中的是唯一的。  
  
 删除 `email` 参数值的前导和尾随空格。 如果修整后, 的电子邮件地址为空<xref:System.ArgumentException>引发。 如果电子邮件地址为`null`，搜索 Active Directory 数据存储区中的所有用户名称，并返回第一个用户名。  
  
 我们建议你不要启用搜索在生产系统上，直到您已确认的搜索查询签发<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类不会产生负面影响你的目录服务器的性能。  
  
> [!IMPORTANT]
>  <xref:System.Web.Security.ActiveDirectoryMembershipProvider.GetUserNameByEmail%2A>方法将运行，即使<xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A>属性是`false`。  
  
 由于<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类旨在用于无状态 Web 环境，则你无法使用公开基础的分页优化<xref:System.DirectoryServices>Api。 这意味着分页操作期间对较大目录搜索时非常贵，应当避免。 搜索操作始终发出针对配置连接字符串中的目录服务器或在连接字符串指向域的情况下自动选择的服务器中。 用于其搜索方法，该提供程序不使用全局编录。  
  
 提供程序使用连接字符串中指定的搜索点启动的子树搜索。 请参阅<xref:System.Web.Security.ActiveDirectoryMembershipProvider>有关连接字符串的详细信息的类主题。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="email" /> 的长度超过 256 个字符  
  
 \- 或 -  
  
 修整后，<paramref name="email" /> 为空。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">数据存储区中存在多个具有相同电子邮件地址的用户，而 <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail" /> 属性值为 <see langword="true" />。</exception>
        <exception cref="T:System.InvalidOperationException">该提供程序未初始化。</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">要初始化的 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 实例的名称。</param>
        <param name="config">包含名称和值的 <see cref="T:System.Collections.Specialized.NameValueCollection" />，这些名称和值用于成员资格提供程序的配置选项。</param>
        <summary>使用应用程序配置文件中的属性值初始化 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 实例。 此方法不应在您的代码中调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法初始化<xref:System.Web.Security.ActiveDirectoryMembershipProvider>对象的属性值指定在 ASP.NET 应用程序配置文件 (Web.config) 中，并且不应在代码中直接使用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="config" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">在应用程序配置中指定的 <see langword="applicationName" /> 特性超过 256 个字符。  
  
 \- 或 -  
  
 <see langword="connectionStringName" /> 特性为空或应用程序配置中不存在该特性。  
  
 \- 或 -  
  
 在应用程序配置文件中的 <see langword="connectionStringName" /> 特性中指定的连接字符串为空或不存在。  
  
 \- 或 -  
  
 在应用程序配置文件中，<see langword="connectionProtection" /> 特性设置为 <see cref="F:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal" /> 或 <see cref="F:System.Web.Security.ActiveDirectoryConnectionProtection.None" /> 以外的值。  
  
 \- 或 -  
  
 应用程序配置文件中指定了 <see langword="connectionUsername" /> 特性，但其值为空。  
  
 \- 或 -  
  
 应用程序配置文件中指定了 <see langword="connectionPassword" /> 特性，但其值为空。  
  
 \- 或 -  
  
 在应用程序配置文件中指定了 <see langword="connectionUsername" /> 特性或 <see langword="connectionPassword" /> 特性，但未同时指定两者。  
  
 \- 或 -  
  
 指定了 <see langword="clientSearchTimeout" /> 特性，但它不是正整数。  
  
 \- 或 -  
  
 指定了 <see langword="serverSearchTimeout" /> 特性，但它不是正整数。  
  
 \- 或 -  
  
 指定了 <see langword="enableSearchMethods" /> 特性，但它不是布尔值。  
  
 \- 或 -  
  
 指定了 <see langword="requiresUniqueEmail" /> 特性，但它不是布尔值。  
  
 \- 或 -  
  
 指定了 <see langword="enablePasswordReset" /> 特性，但它不是布尔值。  
  
 \- 或 -  
  
 指定了 <see langword="requiresQuestionAndAnswer" /> 特性，但它不是布尔值。  
  
 \- 或 -  
  
 指定了 <see langword="minRequiredPasswordLength" /> 特性，但它为负或大于 128。  
  
 \- 或 -  
  
 指定了 <see langword="minRequiredNonalphanumericCharacters" /> 特性，但它为负或大于 128。  
  
 \- 或 -  
  
 在应用程序配置文件的 <see langword="passwordStrengthRegularExpression" /> 特性中指定的正则表达式不是有效的正则表达式  
  
 \- 或 -  
  
 指定了 <see langword="attributeMapUsername" /> 特性，但它是一个空字符串。  
  
 \- 或 -  
  
 <see langword="connectionString" /> 特性不以“LDAP”开头。  
  
 \- 或 -  
  
 在 <see langword="connectionString" /> 特性中指定的连接字符串无效。  
  
 \- 或 -  
  
 <see langword="connectionString" /> 特性中的连接字符串指定了一个无服务器绑定。  
  
 \- 或 -  
  
 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 未能建立与域或目录服务器的连接。  
  
 \- 或 -  
  
 <see langword="connectionProtection" /> 特性设置为 <see cref="F:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal" />，但不能与服务器建立 SSL 和经过签名且密封的连接。  
  
 \- 或 -  
  
 <see langword="connectionProtection" /> 特性设置为 <see cref="F:System.Web.Security.ActiveDirectoryConnectionProtection.None" />，但未设置 <see langword="connectionUsername" /> 和 <see langword="connectionPassword" /> 特性。  
  
 \- 或 -  
  
 <see langword="connectionProtection" /> 特性设置为 <see cref="F:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal" />，但 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 未能与 ADAM 服务器建立 SSL 连接。  
  
 \- 或 -  
  
 <see langword="connectionString" /> 特性指定全局编录 (GC) 或 SSL 全局编录端口。  
  
 \- 或 -  
  
 <see langword="connectionString" /> 特性指定 Active Directory 服务器或域，但 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 未能检索域的默认命名上下文。  
  
 \- 或 -  
  
 <see langword="connectionString" /> 特性指定 Active Directory 服务器或域，但 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 未能检索默认用户容器。  
  
 \- 或 -  
  
 <see langword="connectionString" /> 特性指定 ADAM 服务器，但未指定应用程序分区或容器。  
  
 \- 或 -  
  
 <see langword="connectionString" /> 特性指定应用程序分区或容器，但指定的容器不存在。  
  
 \- 或 -  
  
 <see langword="connectionString" /> 特性指定的容器不允许包含用户实例。  
  
 指定了一个特性映射，但该特性映射的值为空。  
  
 \- 或 -  
  
 同一个特性映射指定了两次。  
  
 \- 或 -  
  
 指定了一个特性映射，但用户实例中不存在该特性。  
  
 \- 或 -  
  
 指定了一个特性映射，但该目录特性的数据类型不正确。  
  
 \- 或 -  
  
 指定了一个特性映射，但该目录特性是多值特性。  
  
 \- 或 -  
  
 指定了 <see langword="attributeMapUserName" /> 特性，但在连接到 Active Directory 时未将该特性映射到 <c>sAMAccountName</c> 或 <c>userPrincipalName</c> 目录特性。  
  
 \- 或 -  
  
 指定了 <see langword="attributeMapUserName" /> 特性，但在连接到 ADAM 服务器时未将该特性映射到 <c>userPrincipalName</c> 目录特性。  
  
 \- 或 -  
  
 在应用程序配置文件中，<see langword="enablePasswordReset" /> 特性为 <see langword="true" />，<see langword="requiresQuestionAndAnswer" /> 特性为 <see langword="false" />。  
  
 \- 或 -  
  
 指定了 <see langword="maxInvalidPasswordAttempts" /> 特性，但它不是非零正整数。  
  
 \- 或 -  
  
 指定了 <see langword="passwordAttemptWindow" /> 特性，但它不是非零正整数。  
  
 \- 或 -  
  
 指定了 <see langword="passwordAnswerAttemptLockoutDuration" /> 特性，但它不是非零正整数。  
  
 \- 或 -  
  
 <see langword="enablePasswordReset" /> 特性为 <see langword="true" />，但 <see langword="attributeMapFailedPasswordAnswerCount" />、<see langword="attributeMapFailedPasswordAnswerTime" /> 和 <see langword="attributeMapFailedPasswordAnswerLockoutTime" /> 特性中的任何一个为空。  
  
 \- 或 -  
  
 <see langword="requiresQuestionAndAnswer" /> 特性为 <see langword="true" />，但 <see langword="attributeMapPasswordQuestion" /> 或 <see langword="attributeMapPasswordAnswer" /> 特性为空。  
  
 \- 或 -  
  
 在应用程序配置文件中指定的一个特性无效。</exception>
        <exception cref="T:System.Web.HttpException">应用程序在承载环境中运行，但 <see cref="T:System.Web.AspNetHostingPermissionLevel" /> 设置为 <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />。</exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">查询目录时发生错误。</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public override int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用户回答密码重置问题时允许失败的次数。</summary>
        <value>在帐户被锁定之前，允许用户回答密码提示问题的失败次数。 默认值是<c>5</c>。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A>属性是`true`，用户必须回答密码提示问题以重置他或她的密码。 用户通过建立的时间范围内允许有限的数量的提示问题答案尝试<xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow%2A>属性。 如果密码提示问题答案尝试数大于或等于中存储的值<xref:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts%2A>属性，用户锁定的分钟数存储在以后尝试<xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A>属性。  
  
> [!NOTE]
>  此属性不控制用户能够进行锁定前的失败的登录尝试次数。Active Directory 服务器句柄失败登录尝试，不受此属性的值。  
  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts%2A>属性设置在应用程序的配置文件中使用`maxInvalidPasswordAttempts`属性[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)元素。 如果在应用程序的配置文件中，未设置的属性<xref:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts%2A>属性设置的默认值为`5`。  
  
   
  
## Examples  
 下面的代码示例显示配置 Web.config 条目<xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例锁定生成三个失败的用户尝试在 10 分钟的时间窗口中输入的密码答案。 如果用户被锁定，没有任何进一步在负载测试时回答密码提示问题的尝试可能会进行 15 分钟。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,  
          PublicKeyToken=b03f5f7f11d50a3a"  
          maxInvalidPasswordAttempts="3"  
          passwordAttemptWindow="10"  
          passwordAnswerAttemptLockoutDuration="15" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在初始化 <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts" /> 实例之前，已尝试访问 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 属性。</exception>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public override int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取有效密码中必须包含的最少特殊字符数。</summary>
        <value>有效密码中必须包含的最少特殊字符数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>属性返回的最小创建有效密码时必须输入的特殊、 非字母数字字符数。  
  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>在该应用程序配置中设置了属性值`minRequiredNonalphanumericCharacters`属性[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)配置元素。  
  
 非字母数字字符是为其字符<xref:System.Char.IsLetterOrDigit%2A>方法返回`false`。  
  
   
  
## Examples  
 下面的示例演示[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)中的配置元素`system.web`的应用程序的 Web.config 文件的部分。 它指定应用程序使用的实例<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类以提供成员资格服务，并设置`minRequiredNonalphanumericCharacters`属性设为一个字符。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a"  
          minRequiredNonalphanumericCharacters = "1" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在初始化 <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredNonAlphanumericCharacters" /> 实例前，访问了 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 属性。</exception>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public override int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredPasswordLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取密码所需的最小长度。</summary>
        <value>密码所需的最小长度。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredPasswordLength%2A>属性获取的最小创建有效密码时必须输入的字符数。  
  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredPasswordLength%2A>在该应用程序配置中设置了属性值`minRequiredPasswordLength`属性[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)配置元素。  
  
   
  
## Examples  
 下面的示例演示[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)中的配置元素`system.web`的应用程序的 Web.config 文件的部分。 它指定应用程序使用的实例<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类以提供成员资格服务，并设置`minRequiredPasswordLength`属性设为七个字符。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a"  
          minRequiredPasswordLength = "7" />  
  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在初始化 <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredPasswordLength" /> 实例前，访问了 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 属性。</exception>
      </Docs>
    </Member>
    <Member MemberName="PasswordAnswerAttemptLockoutDuration">
      <MemberSignature Language="C#" Value="public int PasswordAnswerAttemptLockoutDuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordAnswerAttemptLockoutDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordAnswerAttemptLockoutDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PasswordAnswerAttemptLockoutDuration { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用户多次未能正确回答密码提示问题后用户帐户的锁定时间长度。</summary>
        <value>用户多次提供错误的密码提示问题答案后的锁定时间（以分钟为单位）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A>属性是`true`，用户必须回答密码提示问题以重置他或她的密码。 如果用户无法提供正确答案连续的次数等于<xref:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts%2A>观察指定的时间段内的属性值<xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow%2A>属性，用户不能进一步进行尝试锁定的分钟数中包含<xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A>属性。  
  
> [!NOTE]
>  此属性未设置用户无法输入有效的密码后的锁定的持续时间。 Active Directory 服务器句柄失败登录尝试，不受此属性的值。 我们建议，<xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A>属性设置为相同的值为许多失败登录尝试在 Active Directory 配置为指定的帐户锁定持续时间。 这将显示用户而不考虑是否被锁定由于尝试登录失败或错误的密码提示问题答案的一致的自动锁定行为。  
  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A>属性设置在应用程序的配置文件中使用`passwordAnswerAttemptLockoutDuration`属性[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)元素。 如果在应用程序的配置文件中，未设置的属性<xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A>属性设置为默认值为 30 分钟。  
  
   
  
## Examples  
 下面的代码示例显示配置 Web.config 条目<xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例锁定生成三个失败的用户尝试在 10 分钟的时间窗口中输入的密码答案。 如果用户被锁定，没有任何进一步在负载测试时回答密码提示问题的尝试可能会进行 15 分钟。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a"  
          maxInvalidPasswordAttempts="3"  
          passwordAttemptWindow="10"  
          passwordAnswerAttemptLockoutDuration="15" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在初始化 <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration" /> 实例之前，已尝试访问 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 属性。</exception>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public override int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PasswordAttemptWindow { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取时间长度，在该时间间隔内对提供有效密码或密码答案的连续失败尝试次数进行跟踪。</summary>
        <value>对未能提供有效密码或密码答案的连续尝试次数进行跟踪的时间长度（以分钟为单位）。 默认值为 10 分钟。 如果两次失败尝试之间的间隔大于 <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow" /> 属性设置，则 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 实例将每次失败尝试都视为第一次失败尝试。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow%2A>属性与结合工作<xref:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts%2A>属性，以帮助防止不需要的源猜测的密码或密码提示问题答案的成员资格用户通过反复尝试。 当用户尝试登录，更改其密码或重置其密码时，在指定的时间窗口内只允许一定数量的连续尝试次数。 通过指定的时间范围的长度<xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow%2A>属性，它标识的无效尝试之间所允许的分钟数。 如果的连续失败次数尝试用户重置他或她的密码等于中存储的值<xref:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts%2A>属性，且时间自以来所经过最后一次的无效尝试为指定的分钟数小于<xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow%2A>属性，则用户帐户 s 锁定中包含的分钟数<xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A>属性。 如果当前的失败的尝试和最后一次失败的尝试之间的间隔大于<xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow%2A>属性设置，当前的无效尝试计为第一次尝试。 如果在达到最大允许的无效尝试次数之前提供有效的密码提示问题答案，则，设置的无效密码提示问题答案尝试次数的计数为零。 如果之前所允许的最大数量无效提供一个有效的密码，则尝试达到的无效密码尝试次数的计数和的无效密码提示问题答案尝试次数的计数设置为零。  
  
 我们建议，<xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A>属性设置为相同的值为帐户锁定持续时间指定最大的失败登录尝试次数 Active Directory 配置中。 是否由于尝试登录失败或错误的密码提示问题答案被锁定，这将显示用户的一致的自动锁定行为。  
  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A>属性设置在应用程序的配置文件中使用`passwordAttemptWindow`属性[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)元素。 如果在应用程序的配置文件中，未设置的属性<xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A>属性设置为 10 分钟的默认值。  
  
   
  
## Examples  
 下面的代码示例显示配置 Web.config 条目<xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例锁定生成三个失败的用户尝试在 10 分钟的时间窗口中输入的密码答案。 如果用户被锁定，没有任何进一步在负载测试时回答密码提示问题的尝试可能会进行 15 分钟。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,  
          PublicKeyToken=b03f5f7f11d50a3a"  
          maxInvalidPasswordAttempts="3"  
          passwordAttemptWindow="10"  
        passwordAnswerAttemptLockoutDuration="15" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在初始化 <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow" /> 实例之前，已尝试访问 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 属性。</exception>
      </Docs>
    </Member>
    <Member MemberName="PasswordFormat">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Security.MembershipPasswordFormat PasswordFormat" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordFormat As MembershipPasswordFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Security::MembershipPasswordFormat PasswordFormat { System::Web::Security::MembershipPasswordFormat get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipPasswordFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 Active Directory 数据存储区中的密码的格式。</summary>
        <value>
          <see cref="T:System.Web.Security.MembershipPasswordFormat" /> 值之一。 <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordFormat" /> 属性总是返回 <see cref="F:System.Web.Security.MembershipPasswordFormat.Hashed" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider>属性不支持密码检索。 行为<xref:System.Web.Security.ActiveDirectoryMembershipProvider>对象等同于使用其他提供程序`Hashed`密码。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public override string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于计算密码的正则表达式。</summary>
        <value>用于计算密码的正则表达式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression%2A>属性获取用于计算密码复杂性的正则表达式。  
  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression%2A>属性不用于验证中的自动生成密码<xref:System.Web.Security.ActiveDirectoryMembershipProvider.ResetPassword%2A>方法。  
  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression%2A>属性设置在应用程序配置中使用`passwordStrengthRegularExpression`属性[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)配置元素。  
  
   
  
## Examples  
 下面的示例演示[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)中的配置元素`system.web`的应用程序的 Web.config 文件的部分。 它指定应用程序使用的实例<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类以提供成员资格服务和集`passwordStrengthRegularExpression`属性设为正则表达式验证密码是否满足以下条件：  
  
-   大于七个字符。  
  
-   包含至少一个数字。  
  
-   包含至少一个特殊的 （非字母数字） 字符。  
  
 如果密码不满足这些条件，密码不接受的成员资格提供程序。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a"  
          passwordStrengthRegularExpression=  
            "@\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在初始化 <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression" /> 实例前，访问了 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 属性。</exception>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示成员资格提供程序是否配置为要求在创建用户时提供密码提示问题和答案。</summary>
        <value>
          如果 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 对象配置为需要用户的密码提示问题和答案，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer%2A>属性设置在应用程序的配置文件中使用`requiresQuestionAndAnswer`属性[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)元素。 如果在应用程序的配置文件中，未设置的属性<xref:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer%2A>属性设置的默认值为`false`。  
  
 当`requiresQuestionAndAnswer`属性设置为`true`，还必须设置这些附加属性。  
  
-   `attributeMapPasswordQuestion` 和`attributeMapPasswordAnswer`必须映射到 Active Directory 架构中的属性。  
  
 如果不满足上述条件，<xref:System.Configuration.Provider.ProviderException>在初始化时引发。  
  
> [!NOTE]
>  您可以创建用户时, 需要密码提示问题和答案，但设置<xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A>属性`false`以防止用户更改其密码使用<xref:System.Web.Security.ActiveDirectoryMembershipProvider>类。  
  
   
  
## Examples  
 下面的代码示例显示配置 Web.config 条目<xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例启用密码重置。 它使用显式凭据的用户给出的"重置密码"访问权限。  
  
> [!IMPORTANT]
>  当将用户凭据放在 Web.config 文件中时，有潜在的安全威胁。 对包含 Web.config 文件的目录具有访问权限的用户可以读取该文件，并因此查看这些凭据。 有关如何防范此威胁的详细信息，请参阅[加密配置信息使用受保护的配置](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1)。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,  
          PublicKeyToken=b03f5f7f11d50a3a"  
          connectionUsername="UserWithResetPasswordRights"  
          connectionPassword="PasswordForUser"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          attributeMapPasswordQuestion="PasswordQuestionADAttribute"  
          attributeMapPasswordAnswer="PasswordAnswerADAttribute"  
          attributeMapFailedPasswordAnswerCount="AnswerCountADAttribute"  
          attributeMapFailedPasswordAnswerTime="AnswerTimeADAttribute"  
          attributeMapFailedPasswordAnswerLockoutTime="LockOutTimeADAttribute" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在初始化 <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer" /> 实例之前，已尝试访问 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 属性。</exception>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueEmail">
      <MemberSignature Language="C#" Value="public override bool RequiresUniqueEmail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueEmail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresUniqueEmail As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueEmail { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 Active Directory 服务器中存储的电子邮件地址是否必须是唯一的。</summary>
        <value>
          <see langword="true" /> 如果电子邮件地址必须是唯一的;否则为<see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail%2A>属性是`true`、<xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例可确保电子邮件地址不使用任何其他用户在当前作用域时或者<xref:System.Web.Security.ActiveDirectoryMembershipProvider.CreateUser%2A>或<xref:System.Web.Security.ActiveDirectoryMembershipProvider.UpdateUser%2A>调用方法。  
  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail%2A>属性设置在应用程序的配置文件中使用`requiresUniqueEmail`属性[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)元素。 如果在应用程序的配置文件中，未设置的属性<xref:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail%2A>属性设置的默认值为`false`。  
  
   
  
## Examples  
 下面的代码示例显示配置 Web.config 条目<xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例需要唯一的电子邮件地址的 Active Directory 服务器上存储的用户。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a"  
          requiresUniqueEmail="true" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在初始化 <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail" /> 实例之前，已尝试访问 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 属性。</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetPassword">
      <MemberSignature Language="C#" Value="public override string ResetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ResetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.ResetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ResetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要为其重置密码的用户。</param>
        <param name="passwordAnswer">指定的用户的密码提示问题答案。</param>
        <summary>将用户密码重置为自动生成的新密码。</summary>
        <returns>指定的用户的新密码。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用该方法<xref:System.Web.Security.Membership>类以将 Active Directory 数据存储区中的用户的密码重置为新随机生成的值。 返回新的密码。  
  
> [!NOTE]
>  通过创建随机密码<xref:System.Web.Security.ActiveDirectoryMembershipProvider.ResetPassword%2A>方法不能保证传递中的正则表达式<xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression%2A>属性。 但是，随机的密码将满足条件由建立<xref:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredPasswordLength%2A>和<xref:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>属性。  
  
 如果要为提供不正确答案<xref:System.Web.Security.ActiveDirectoryMembershipProvider.ResetPassword%2A>方法时，内部计数器跟踪无效密码提示问题答案尝试就会递增 1。 这可能会导致用户无法登录，直到通过调用清除锁定状态<xref:System.Web.Security.ActiveDirectoryMembershipProvider.UnlockUser%2A>方法。 如果提供正确的密码提示问题答案，并且用户当前未被锁定，则跟踪无效的密码尝试次数的内部计数器重置为零。 有关详细信息，请参阅<xref:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts%2A>和<xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow%2A>属性。  
  
 删除所有参数值的前导和尾随空格。  
  
 你可以调用<xref:System.Web.Security.ActiveDirectoryMembershipProvider.ResetPassword%2A>直接通过第一个获取对引用的方法<xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例从<xref:System.Web.Security.Membership.Provider%2A?displayProperty=nameWithType>属性。  
  
 提供程序使用连接字符串中指定的搜索点启动的子树搜索。 请参阅<xref:System.Web.Security.ActiveDirectoryMembershipProvider>有关连接字符串的详细信息的类主题。  
  
 若要在 Active Directory 服务器上，设置密码`connectionProtection`属性必须设置为<xref:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal>。  
  
 如果使用 ADAM 服务器，`connectionProtection`属性可以设置为<xref:System.Web.Security.ActiveDirectoryConnectionProtection.None>，但仅当你显式配置 ADAM 服务器，以便通过不安全连接的密码更改的服务器。  
  
> [!IMPORTANT]
>  除非用来连接到 Active Directory 服务器的凭据具有域管理员权限 （不推荐） 或的"重置密码"访问权限，无法重置密码。  
  
 若要重置密码，必须满足所有以下条件：  
  
-   <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A>属性必须设置为`true`。  
  
-   必须修改 Active Directory 架构以包含用于存储的密码提示问题和答案，属性和密码的三个跟踪字段回答更改。  
  
-   `attributeMapPasswordQuestion`， `attributeMapPasswordAnswer`， `attributMapFailedPasswordAnswerCount`， `attributeMapFailedPasswordAnswerTime`，和`attributeMapFailedPasswordAnswerLockedTime`必须在应用程序配置文件中设置属性。  
  
-   <xref:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer%2A>属性必须设置为`true`。  
  
-   连接到 Active Directory 数据存储 （进程帐户或显式凭据） 的安全上下文必须具有足够的权限来更改密码。 用于连接到 Active Directory 服务器的凭据具有域管理员权限 （不推荐） 或的"重置密码"访问权限。  
  
> [!NOTE]
>  在 Active Directory 服务器上设置安全策略可能使其不可能<xref:System.Web.Security.ActiveDirectoryMembershipProvider.ResetPassword%2A>方法以生成密码符合策略。 默认实现<xref:System.Web.Security.ActiveDirectoryMembershipProvider.GeneratePassword%2A>方法将生成满足运行 Windows Server 2003 SP1 的域控制器上的默认密码策略的密码。 如果密码不能重置安全策略在 Active Directory 服务器上，由于<xref:System.Configuration.Provider.ProviderException>引发。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在初始化 <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.ResetPassword(System.String,System.String)" /> 实例前，调用了 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 方法。</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset" /> 属性值为 <see langword="false" />。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="passwordAnswer" /> 为 <see langword="null" />。  
  
 \- 或 -  
  
 <paramref name="username" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          修整后，<paramref name="passwordAnswer" /> 为空  
  
 \- 或 -  
  
 <paramref name="passwordAnswer" /> 的长度超过 128 个字符。  
  
 \- 或 -  
  
 <paramref name="username" /> 为空，或超过用户名允许的最大长度（通常为 256 个字符）。  
  
 \- 或 -  
  
 <paramref name="username" /> 包含逗号。  
  
 \- 或 -  
  
 用户名映射到 <see langword="userPrincipalName" />，但 <paramref name="username" /> 参数包含反斜杠。</exception>
        <exception cref="T:System.Web.Security.MembershipPasswordException">由于多次登录失败或多次重置密码提示问题失败，用户被锁定。  
  
 \- 或 -  
  
 <paramref name="passwordAnswer" /> 与存储的密码提示问题答案不一致。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="username" /> 所指定的用户在 Active Directory 数据存储区中不存在。  
  
 \- 或 -  
  
 生成的密码不能传递自定义验证处理程序。  
  
 \- 或 -  
  
 生成的密码不够复杂，无法满足 Active Directory 服务器所设置的自定义密码策略。  
  
 \- 或 -  
  
 无法建立到 Active Directory 应用程序模式服务器的安全连接，因此不能设置新密码。</exception>
        <exception cref="T:System.Exception">发生了未经处理的异常。</exception>
      </Docs>
    </Member>
    <Member MemberName="UnlockUser">
      <MemberSignature Language="C#" Value="public override bool UnlockUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool UnlockUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.UnlockUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnlockUser (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool UnlockUser(System::String ^ username);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要为其清除锁定状态的成员资格用户的名称。</param>
        <summary>清除锁定，以便成员资格用户能够进行验证。</summary>
        <returns>
          如果成功取消成员资格用户的锁定，则为 <see langword="true" />；否则为 <see langword="false" />。 如果数据存储区中找不到该成员资格用户，<see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.UnlockUser(System.String)" /> 方法也会返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用户通常情况下锁定，并且无法通过验证<xref:System.Web.Security.ActiveDirectoryMembershipProvider.ValidateUser%2A>方法时<xref:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts%2A>中指定的时间内超过属性<xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow%2A>属性或者当尝试输入太多次已使用了错误的密码登录。  
  
 如果<xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A>属性是`true`，当用户时的错误的密码被重置解锁计数器。  
  
 提供程序使用连接字符串中指定的搜索点启动的子树搜索。 请参阅<xref:System.Web.Security.ActiveDirectoryMembershipProvider>有关连接字符串的详细信息的类主题。  
  
 删除 `username` 参数值的前导和尾随空格。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 为空，或超过用户名允许的最大长度（通常为 256 个字符）。  
  
 \- 或 -  
  
 <paramref name="username" /> 包含逗号。  
  
 \- 或 -  
  
 用户名映射到 <see langword="userPrincipalName" />，但 <paramref name="username" /> 参数包含反斜杠。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">在初始化 <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.UnlockUser(System.String)" /> 实例前，调用了 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 方法。</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public override void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">一个 <see cref="T:System.Web.Security.MembershipUser" /> 实例，它表示要更新的用户以及该用户的更新信息。</param>
        <summary>更新 Active Directory 数据存储区中某个用户的信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法<xref:System.Web.Security.Membership>类来更新 Active Directory 数据存储区中的用户信息。 <xref:System.Web.Security.MembershipUser.Email%2A>， <xref:System.Web.Security.MembershipUser.Comment%2A>，和<xref:System.Web.Security.MembershipUser.IsApproved%2A>指定的成员资格用户更新属性值。 将忽略所有其他属性。  
  
 最大长度`username`参数为 256 个字符。 最大长度<xref:System.Web.Security.MembershipUser.Email%2A>属性为 256 个字符。  
  
 成员资格用户的密码不能使用更新<xref:System.Web.Security.ActiveDirectoryMembershipProvider.UpdateUser%2A>方法。 若要更新成员资格用户的密码，使用<xref:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePassword%2A>方法。  
  
 提供程序使用连接字符串中指定的搜索点启动的子树搜索。 请参阅<xref:System.Web.Security.ActiveDirectoryMembershipProvider>有关连接字符串的详细信息的类主题。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在初始化 <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)" /> 实例前，调用了 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 方法。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="user" /> 为 <see langword="null" />。  
  
 \- 或 -  
  
 <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail" /> 属性为 <see langword="true" />，但所提供的 <see cref="T:System.Web.Security.MembershipUser" /> 实例的电子邮件地址为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">修整后，<see cref="P:System.Web.Security.MembershipUser.Email" /> 属性为空。  
  
 \- 或 -  
  
 <see cref="P:System.Web.Security.MembershipUser.Email" /> 属性超过 256 个字符。  
  
 \- 或 -  
  
 <see cref="P:System.Web.Security.MembershipUser.Comment" /> 属性超过 1024 个字符。  
  
 \- 或 -  
  
 <see cref="P:System.Web.Security.MembershipUser.Comment" /> 属性为空。  
  
 \- 或 -  
  
 所提供的 <see cref="T:System.Web.Security.MembershipUser" /> 实例的用户名为空，或超过用户名允许的最大长度（通常为 256 个字符）。  
  
 \- 或 -  
  
 所提供的 <see cref="T:System.Web.Security.MembershipUser" /> 实例的用户名包含逗号。  
  
 \- 或 -  
  
 用户名已映射到 <see langword="userPrincipalName" />，但所提供的 <see cref="T:System.Web.Security.MembershipUser" /> 实例的用户名包含反斜杠。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Active Directory 数据存储区中找不到指定的用户。  
  
 \- 或 -  
  
 <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail" /> 属性为 <see langword="true" />，而 <see cref="P:System.Web.Security.MembershipUser.Email" /> 属性的新值与现有电子邮件地址重复。</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public override bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要验证的用户的名称。</param>
        <param name="password">指定的用户的密码。</param>
        <summary>验证 Active Directory 数据存储区中是否存在指定的用户名和密码。</summary>
        <returns>
          如果指定的 <paramref name="username" /> 和 <paramref name="password" /> 有效，则为 <see langword="true" />；否则为 <see langword="false" />。 如果 Active Directory 数据存储区中不存在指定的用户，<see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.ValidateUser(System.String,System.String)" /> 方法则返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法<xref:System.Web.Security.Membership>类来验证针对 Active Directory 数据存储的用户凭据。  
  
 如果<xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A>属性是`true`和提供的凭据有效，不正确的密码提示问题答案的用户的跟踪计数器将重置。  
  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ValidateUser%2A>方法可能返回`false`正确的凭据提供后，可以在下列情况下：  
  
1.  用户帐户被锁定的目录服务器由于失败的登录尝试次数太多。 用户将无法登录，直到目录的锁定时间结束为止。  
  
2.  如果<xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A>属性是`true`，如果用户提供错误的密码提示问题答案次数过多，则将锁定用户帐户。 用户的帐户将在指定的时间后进行解锁<xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A>属性已通过。  
  
3.  用户必须在连接字符串中指定的容器中存在。 为位于一个不同的容器或不同域中的用户帐户提供有效的凭据。 用户必须在连接字符串中指定的容器中存在。  
  
 在验证用户时，提供程序通过连接到 Active Directory 数据存储区中使用指定的用户名和密码，不在应用程序配置文件中配置的凭据来验证凭据。  
  
 但是，<xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例将连接到下列原因造成使用配置的凭据的目录。  
  
-   若要确认用户存在内搜索范围所确定的那样<xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例的连接字符串。 提供程序使用连接字符串中指定的搜索点启动的子树搜索以确定用户是否存在。 用户必须存在于指定的容器。 将不会验证之外的连接字符串指定的容器如果是有效的凭据。 请参阅<xref:System.Web.Security.ActiveDirectoryMembershipProvider>有关连接字符串的详细信息的类主题。  
  
-   如果<xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A>属性是`true`、<xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例将使用配置的凭据以加载用户实例，以检查是否用户已锁定因为他或她所作的更改密码提示问题答案尝试次数过多失败.  
  
> [!IMPORTANT]
>  使用启用了"来宾"帐户连接到 Active Directory 域控制器是一个潜在的安全威胁。 具有启用"来宾"帐户在 Active Directory 域控制器上所做的所有验证尝试将会都成功。 若要使用 Active Directory 域控制器时，可提高安全性，应禁用在域控制器上的"来宾"帐户。  
  
 <xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例将尝试根据 Active Directory 的并发绑定，当满足以下条件之一：  
  
-   <xref:System.Web.Security.ActiveDirectoryMembershipProvider.CurrentConnectionProtection%2A> 属性设置为 <xref:System.Web.Security.ActiveDirectoryConnectionProtection.None>。  
  
-   <xref:System.Web.Security.ActiveDirectoryMembershipProvider.CurrentConnectionProtection%2A>属性设置为<xref:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal>和选择 SSL<xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例保护连接的安全。  
  
 此外，进行并发绑定，以下条件必须为 true:  
  
-   必须在 Windows Server 2003 上运行的目录服务器。  
  
-   运行的 Web 服务器的操作系统<xref:System.Web.Security.ActiveDirectoryMembershipProvider>实例必须支持并发绑定 (例如，Windows Server 2003)。  
  
 当使用并发绑定时，用户的最后登录日期未在目录中; 中更新因此，<xref:System.Web.Security.ActiveDirectoryMembershipUser.LastLoginDate%2A>不能依赖属性。  
  
 删除前导和尾随空格`username`参数。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在初始化 <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.ValidateUser(System.String,System.String)" /> 实例前，调用了 <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> 方法。</exception>
      </Docs>
    </Member>
  </Members>
</Type>