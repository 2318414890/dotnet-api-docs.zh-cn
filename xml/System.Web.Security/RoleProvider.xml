<Type Name="RoleProvider" FullName="System.Web.Security.RoleProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3757f1028efe51406cc012df7b30024bd71a31b6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30550261" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class RoleProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RoleProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.RoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RoleProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoleProvider abstract : System::Configuration::Provider::ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web.ApplicationServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web, Version=2.0.0.0, Culture=Neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5fe3e-101">定义 ASP.NET 为使用自定义角色提供程序提供角色管理服务而实现的协定。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5fe3e-101">Defines the contract that ASP.NET implements to provide role-management services using custom role providers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fe3e-102">ASP.NET 角色管理旨在使你能够轻松地为 ASP.NET 应用程序中使用大量不同的角色提供程序。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-102">ASP.NET role management is designed to enable you to easily use a number of different role providers for your ASP.NET applications.</span></span> <span data-ttu-id="5fe3e-103">你可以使用提供的角色提供程序所包含的.NET Framework 中，或者你可以实现自己的提供程序。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-103">You can use the supplied role providers that are included with the .NET Framework, or you can implement your own provider.</span></span>  
  
 <span data-ttu-id="5fe3e-104">在实现自定义角色提供程序时，你需要继承<xref:System.Web.Security.RoleProvider>抽象类。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-104">When implementing a custom role provider, you are required to inherit the <xref:System.Web.Security.RoleProvider> abstract class.</span></span>  
  
 <span data-ttu-id="5fe3e-105">有两个主要原因创建自定义角色提供程序。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-105">There are two primary reasons for creating a custom role provider.</span></span>  
  
-   <span data-ttu-id="5fe3e-106">你需要将角色信息存储在.NET Framework 中，如 FoxPro 数据库、 Oracle 数据库或其他数据源中包含的角色提供程序不支持的数据源。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-106">You need to store role information in a data source that is not supported by the role providers included with the .NET Framework, such as a FoxPro database, an Oracle database, or other data sources.</span></span>  
  
-   <span data-ttu-id="5fe3e-107">你需要管理角色使用的是不同于使用.NET Framework 会随附的提供程序的数据库架构的数据库架构的信息。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-107">You need to manage role information using a database schema that is different from the database schema used by the providers that ship with the .NET Framework.</span></span> <span data-ttu-id="5fe3e-108">此常见示例是角色中的公司或网站的 SQL Server 数据库已存在的数据。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-108">A common example of this would be role data that already exists in a SQL Server database for a company or Web site.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5fe3e-109">初始化 <see cref="T:System.Web.Security.RoleProvider" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-109">Initializes a new instance of the <see cref="T:System.Web.Security.RoleProvider" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fe3e-110">不需要实现继承的类的构造函数<xref:System.Web.Security.RoleProvider>抽象类。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-110">You are not required to implement a constructor for a class that inherits the <xref:System.Web.Security.RoleProvider> abstract class.</span></span> <span data-ttu-id="5fe3e-111">值初始化<xref:System.Web.Security.RoleProvider>实现传递给<xref:System.Configuration.Provider.ProviderBase.Initialize%2A>方法实现。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-111">Initialization values for a <xref:System.Web.Security.RoleProvider> implementation are passed to the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public abstract void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">
          <span data-ttu-id="5fe3e-112">要添加到指定的角色的用户名的字符串数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-112">A string array of user names to be added to the specified roles.</span>
          </span>
        </param>
        <param name="roleNames">
          <span data-ttu-id="5fe3e-113">要添加指定的用户名的角色名称的字符串数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-113">A string array of the role names to add the specified user names to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5fe3e-114">向配置的 <see langword="applicationName" /> 的指定角色添加指定的用户名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-114">Adds the specified user names to the specified roles for the configured <see langword="applicationName" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fe3e-115"><xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A> 由调用<xref:System.Web.Security.Roles>类将指定的用户与数据源的指定角色关联。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-115"><xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A> is called by the <xref:System.Web.Security.Roles> class to associate the specified users with the specified roles at the data source.</span></span> <span data-ttu-id="5fe3e-116">角色添加到已配置<xref:System.Web.Security.RoleProvider.ApplicationName%2A>。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-116">Roles are added to the configured <xref:System.Web.Security.RoleProvider.ApplicationName%2A>.</span></span>  
  
 <span data-ttu-id="5fe3e-117">如果指定的角色名称中的任何是已配置的找不到`applicationName`，我们建议你提供程序引发<xref:System.Configuration.Provider.ProviderException>。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-117">If any of the specified role names are not found for the configured `applicationName`, we recommend that your provider throw a <xref:System.Configuration.Provider.ProviderException>.</span></span>  
  
 <span data-ttu-id="5fe3e-118">如果指定的用户名称中的任何不与相关联的任何已配置的指定的角色名称`applicationName`，我们建议你提供程序引发<xref:System.Configuration.Provider.ProviderException>。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-118">If any of the specified user names are not associated with any of the specified role names for the configured `applicationName`, we recommend that your provider throw a <xref:System.Configuration.Provider.ProviderException>.</span></span>  
  
 <span data-ttu-id="5fe3e-119">如果任何指定的用户名为`null`或为空字符串，我们建议你提供程序引发异常。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-119">If any of the specified user names is `null` or is an empty string, we recommend that your provider throw an exception.</span></span>  
  
 <span data-ttu-id="5fe3e-120">如果任何指定的角色名为`null`或为空字符串，我们建议你提供程序引发异常。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-120">If any of the specified role names is `null` or is an empty string, we recommend that your provider throw an exception.</span></span>  
  
 <span data-ttu-id="5fe3e-121">如果您的数据源支持事务，我们建议你包含每个在事务中添加操作的并且回滚事务而引发异常，如果有任何添加操作失败。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-121">If your data source supports transactions, we recommend that you include each add operation in a transaction and that you roll back the transaction and throw an exception if any add operation fails.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5fe3e-122">下面的代码示例演示的示例实现<xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-122">The following code example shows a sample implementation of the <xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Security.IRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#2)]
 [!code-vb[System.Web.Security.IRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5fe3e-123">获取或设置要存储和检索其角色信息的应用程序的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-123">Gets or sets the name of the application to store and retrieve role information for.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5fe3e-124">要存储和检索其角色信息的应用程序的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-124">The name of the application to store and retrieve role information for.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fe3e-125"><xref:System.Web.Security.RoleProvider.ApplicationName%2A>由<xref:System.Web.Security.Roles>类，以将用户和角色与不同的应用程序相关联。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-125">The <xref:System.Web.Security.RoleProvider.ApplicationName%2A> is used by the <xref:System.Web.Security.Roles> class to associate users and roles with different applications.</span></span> <span data-ttu-id="5fe3e-126">这使多个应用程序使用相同的数据库来存储用户和角色信息而不会遇到重复的用户名称或角色名称之间的冲突。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-126">This enables multiple applications to use the same database to store user and role information without running into conflicts between duplicate user names or role names.</span></span> <span data-ttu-id="5fe3e-127">多个 ASP.NET 应用程序可以通过指定相同的值中使用相同的数据库<xref:System.Web.Security.Roles.ApplicationName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-127">Multiple ASP.NET applications can use the same database by specifying the same value in the <xref:System.Web.Security.Roles.ApplicationName%2A> property.</span></span> <span data-ttu-id="5fe3e-128"><xref:System.Web.Security.Roles.ApplicationName%2A>可以以编程方式设置属性或可以在 Web 应用程序使用的配置文件中以声明方式设置`applicationName`属性。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-128">The <xref:System.Web.Security.Roles.ApplicationName%2A> property can be set programmatically, or it can be set declaratively in the configuration file for the Web application using the `applicationName` attribute.</span></span>  
  
 <span data-ttu-id="5fe3e-129">如果没有<xref:System.Web.Security.RoleProvider.ApplicationName%2A>指定属性，我们建议，<xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A>使用属性值。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-129">If no <xref:System.Web.Security.RoleProvider.ApplicationName%2A> property is specified, we recommend that the <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> property value be used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5fe3e-130">下面的代码示例演示的示例实现<xref:System.Web.Security.RoleProvider.ApplicationName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-130">The following code example shows a sample implementation of the <xref:System.Web.Security.RoleProvider.ApplicationName%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Security.IRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#1)]
 [!code-vb[System.Web.Security.IRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public abstract void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CreateRole(System::String ^ roleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">
          <span data-ttu-id="5fe3e-131">要创建的角色的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-131">The name of the role to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5fe3e-132">在数据源中为已配置的 <see langword="applicationName" /> 添加一个新角色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-132">Adds a new role to the data source for the configured <see langword="applicationName" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fe3e-133"><xref:System.Web.Security.RoleProvider.CreateRole%2A> 由调用<xref:System.Web.Security.Roles.CreateRole%2A>方法<xref:System.Web.Security.Roles>类添加到已配置的数据源的指定的角色<xref:System.Web.Security.RoleProvider.ApplicationName%2A>。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-133"><xref:System.Web.Security.RoleProvider.CreateRole%2A> is called by the <xref:System.Web.Security.Roles.CreateRole%2A> method of the <xref:System.Web.Security.Roles> class to add the specified role to the data source for the configured <xref:System.Web.Security.RoleProvider.ApplicationName%2A>.</span></span>  
  
 <span data-ttu-id="5fe3e-134">如果指定的角色名称已经存在已配置的`applicationName`，是`null`，或为空字符串，我们建议你提供程序引发异常。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-134">If the specified role name already exists for the configured `applicationName`, is `null`, or is an empty string, we recommend that your provider throw an exception.</span></span>  
  
 <span data-ttu-id="5fe3e-135">如果指定的角色名称包含逗号，我们建议，提供程序引发异常。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-135">If the specified role name contains a comma, we recommend that your provider throw an exception.</span></span>  
  
 <span data-ttu-id="5fe3e-136">如果您的数据源限制角色名称的长度，例如，通过在数据库中，表的固定长度列建议引发异常，如果角色名称超出允许的数据源的最大长度。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-136">If your data source restricts the length of the role name, for example, through a fixed-length column of a table in a database, we recommend that you throw an exception if the role name exceeds the maximum length allowed by the data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5fe3e-137">下面的代码示例演示的示例实现<xref:System.Web.Security.RoleProvider.CreateRole%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-137">The following code example shows a sample implementation of the <xref:System.Web.Security.RoleProvider.CreateRole%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Security.IRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#3)]
 [!code-vb[System.Web.Security.IRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public abstract bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">
          <span data-ttu-id="5fe3e-138">要删除的角色的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-138">The name of the role to delete.</span>
          </span>
        </param>
        <param name="throwOnPopulatedRole">
          <span data-ttu-id="5fe3e-139">如果为 <see langword="true" />，则在 <c>roleName</c> 具有一个或多个成员时引发异常，并且不删除 <c>roleName</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-139">If <see langword="true" />, throw an exception if <c>roleName</c> has one or more members and do not delete <c>roleName</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5fe3e-140">从数据源中删除已配置的 <see langword="applicationName" /> 的一个角色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-140">Removes a role from the data source for the configured <see langword="applicationName" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5fe3e-141">若已成功删除此角色，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-141">
              <see langword="true" /> if the role was successfully deleted; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fe3e-142"><xref:System.Web.Security.RoleProvider.DeleteRole%2A> 由调用<xref:System.Web.Security.Roles.DeleteRole%2A>和<xref:System.Web.Security.Roles.DeleteRole%2A>方法<xref:System.Web.Security.Roles>要配置的数据源中删除指定的角色类<xref:System.Web.Security.RoleProvider.ApplicationName%2A>。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-142"><xref:System.Web.Security.RoleProvider.DeleteRole%2A> is called by the <xref:System.Web.Security.Roles.DeleteRole%2A> and the <xref:System.Web.Security.Roles.DeleteRole%2A> methods of the <xref:System.Web.Security.Roles> class to delete the specified role from the data source for the configured <xref:System.Web.Security.RoleProvider.ApplicationName%2A>.</span></span>  
  
 <span data-ttu-id="5fe3e-143">当从数据源中删除角色时，请确保你还删除任何用户名称和配置的已删除的角色之间的关联`applicationName`。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-143">When you delete a role from the data source, ensure that you also delete any associations between a user name and the deleted role for the configured `applicationName`.</span></span>  
  
 <span data-ttu-id="5fe3e-144">如果`throwOnPopulatedRole`是`true`，和由标识角色`roleName`参数具有一个或多个成员，则引发<xref:System.Configuration.Provider.ProviderException>并且不删除该角色。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-144">If `throwOnPopulatedRole` is `true`, and the role identified by the `roleName` parameter has one or more members, throw a <xref:System.Configuration.Provider.ProviderException> and do not delete the role.</span></span> <span data-ttu-id="5fe3e-145">如果`throwOnPopulatedRole`是`false`，然后删除该角色，它是空的还是不。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-145">If `throwOnPopulatedRole` is `false`, then delete the role whether it is empty or not.</span></span>  
  
 <span data-ttu-id="5fe3e-146">如果指定的角色名称不存在，则`null`，或为空字符串，我们建议你提供程序引发异常。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-146">If the specified role name does not exist, is `null`, or is an empty string, we recommend that your provider throw an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5fe3e-147">下面的代码示例演示的示例实现<xref:System.Web.Security.RoleProvider.DeleteRole%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-147">The following code example shows a sample implementation of the <xref:System.Web.Security.RoleProvider.DeleteRole%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Security.IRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#4)]
 [!code-vb[System.Web.Security.IRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public abstract string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">
          <span data-ttu-id="5fe3e-148">作为搜索范围的角色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-148">The role to search in.</span>
          </span>
        </param>
        <param name="usernameToMatch">
          <span data-ttu-id="5fe3e-149">要搜索的用户名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-149">The user name to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5fe3e-150">获取属于某个角色且与指定的用户名相匹配的用户名的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-150">Gets an array of user names in a role where the user name contains the specified user name to match.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5fe3e-151">一个字符串数组，包含用户名与 <paramref name="usernameToMatch" /> 匹配且用户是指定角色的成员的所有用户的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-151">A string array containing the names of all the users where the user name matches <paramref name="usernameToMatch" /> and the user is a member of the specified role.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fe3e-152"><xref:System.Web.Security.RoleProvider.FindUsersInRole%2A>方法由调用<xref:System.Web.Security.Roles>类，并在角色中返回的用户列表，其中用户名包含所提供的匹配项`usernameToMatch`已配置的`applicationName`。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-152">The <xref:System.Web.Security.RoleProvider.FindUsersInRole%2A> method is called by the <xref:System.Web.Security.Roles> class and returns a list of users in a role where the user name contains a match of the supplied `usernameToMatch` for the configured `applicationName`.</span></span> <span data-ttu-id="5fe3e-153">通配符的支持是包含基于数据源。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-153">Wildcard support is included based on the data source.</span></span> <span data-ttu-id="5fe3e-154">按用户名称按字母顺序返回用户。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-154">Users are returned in alphabetical order by user name.</span></span>  
  
 <span data-ttu-id="5fe3e-155">我们建议您引发<xref:System.Configuration.Provider.ProviderException>如果`roleName`数据源中不存在。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-155">We recommend that you throw a <xref:System.Configuration.Provider.ProviderException> if `roleName` does not exist in the data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5fe3e-156">下面的代码示例显示了一个示例<xref:System.Web.Security.RoleProvider.FindUsersInRole%2A>实现。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-156">The following code example shows a sample <xref:System.Web.Security.RoleProvider.FindUsersInRole%2A> implementation.</span></span>  
  
 [!code-csharp[System.Web.Security.IRoleProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#11)]
 [!code-vb[System.Web.Security.IRoleProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public abstract string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5fe3e-157">获取已配置的 <see langword="applicationName" /> 的所有角色的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-157">Gets a list of all the roles for the configured <see langword="applicationName" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5fe3e-158">一个字符串数组，包含在数据源中存储的已配置的 <see langword="applicationName" /> 的所有角色的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-158">A string array containing the names of all the roles stored in the data source for the configured <see langword="applicationName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fe3e-159"><xref:System.Web.Security.RoleProvider.GetAllRoles%2A> 由调用<xref:System.Web.Security.Roles.GetAllRoles%2A>方法<xref:System.Web.Security.Roles>类来从数据源中检索角色名称的列表。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-159"><xref:System.Web.Security.RoleProvider.GetAllRoles%2A> is called by the <xref:System.Web.Security.Roles.GetAllRoles%2A> method of the <xref:System.Web.Security.Roles> class to retrieve a list of role names from the data source.</span></span> <span data-ttu-id="5fe3e-160">仅为指定角色<xref:System.Web.Security.RoleProvider.ApplicationName%2A>检索。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-160">Only the roles for the specified <xref:System.Web.Security.RoleProvider.ApplicationName%2A> are retrieved.</span></span>  
  
 <span data-ttu-id="5fe3e-161">如果已配置的不存在任何角色`applicationName`，我们建议你提供程序返回不含任何元素的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-161">If no roles exist for the configured `applicationName`, we recommend that your provider return a string array with no elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5fe3e-162">下面的代码示例演示的示例实现<xref:System.Web.Security.RoleProvider.GetAllRoles%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-162">The following code example shows a sample implementation of the <xref:System.Web.Security.RoleProvider.GetAllRoles%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Security.IRoleProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#5)]
 [!code-vb[System.Web.Security.IRoleProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public abstract string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">
          <span data-ttu-id="5fe3e-163">要为其返回角色列表的用户。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-163">The user to return a list of roles for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5fe3e-164">获取指定用户对于已配置的 <see langword="applicationName" /> 所属于的角色的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-164">Gets a list of the roles that a specified user is in for the configured <see langword="applicationName" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5fe3e-165">一个字符串数组，其中包含指定用户对于已配置的 <see langword="applicationName" /> 所属于的所有角色的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-165">A string array containing the names of all the roles that the specified user is in for the configured <see langword="applicationName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fe3e-166"><xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> 由调用<xref:System.Web.Security.Roles.GetRolesForUser%2A>方法<xref:System.Web.Security.Roles>类检索指定的用户从数据源是否与关联的角色名称。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-166"><xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> is called by the <xref:System.Web.Security.Roles.GetRolesForUser%2A> method of the <xref:System.Web.Security.Roles> class to retrieve the role names that the specified user is associated with from the data source.</span></span> <span data-ttu-id="5fe3e-167">仅已配置的角色<xref:System.Web.Security.RoleProvider.ApplicationName%2A>检索。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-167">Only the roles for the configured <xref:System.Web.Security.RoleProvider.ApplicationName%2A> are retrieved.</span></span>  
  
 <span data-ttu-id="5fe3e-168">对于已配置的指定用户是否存在任何角色`applicationName`，我们建议你提供程序返回不含任何元素的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-168">If no roles exist for the specified user for the configured `applicationName`, we recommend that your provider return a string array with no elements.</span></span>  
  
 <span data-ttu-id="5fe3e-169">如果指定的用户名称是`null`或为空字符串，我们建议你提供程序引发异常。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-169">If the specified user name is `null` or is an empty string, we recommend that your provider throw an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5fe3e-170">下面的代码示例演示的示例实现<xref:System.Web.Security.RoleProvider.GetRolesForUser%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-170">The following code example shows a sample implementation of the <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Security.IRoleProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#6)]
 [!code-vb[System.Web.Security.IRoleProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public abstract string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">
          <span data-ttu-id="5fe3e-171">要获取其用户列表的角色的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-171">The name of the role to get the list of users for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5fe3e-172">获取属于已配置的 <see langword="applicationName" /> 的指定角色的用户的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-172">Gets a list of users in the specified role for the configured <see langword="applicationName" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5fe3e-173">一个字符串数组，其中包含属于已配置的 <see langword="applicationName" /> 的指定角色的成员的所有用户名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-173">A string array containing the names of all the users who are members of the specified role for the configured <see langword="applicationName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fe3e-174"><xref:System.Web.Security.RoleProvider.GetUsersInRole%2A> 由调用<xref:System.Web.Security.Roles.GetUsersInRole%2A>方法<xref:System.Web.Security.Roles>类来检索与数据源中的角色关联的用户名称。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-174"><xref:System.Web.Security.RoleProvider.GetUsersInRole%2A> is called by the <xref:System.Web.Security.Roles.GetUsersInRole%2A> method of the <xref:System.Web.Security.Roles> class to retrieve the user names associated with a role from the data source.</span></span> <span data-ttu-id="5fe3e-175">仅已配置的角色<xref:System.Web.Security.RoleProvider.ApplicationName%2A>检索。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-175">Only the roles for the configured <xref:System.Web.Security.RoleProvider.ApplicationName%2A> are retrieved.</span></span>  
  
 <span data-ttu-id="5fe3e-176">如果指定的角色名称不存在已配置的`applicationName`或如果它是`null`或空字符串，我们建议你提供程序引发异常。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-176">If the specified role name does not exist for the configured `applicationName` or if it is `null` or an empty string, we recommend that your provider throw an exception.</span></span>  
  
 <span data-ttu-id="5fe3e-177">如果没有用户会与指定的角色已配置的相关`applicationName`，我们建议你提供程序返回不含任何元素的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-177">If no users are associated with the specified role for the configured `applicationName`, we recommend that your provider return a string array with no elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5fe3e-178">下面的代码示例演示的示例实现<xref:System.Web.Security.RoleProvider.GetUsersInRole%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-178">The following code example shows a sample implementation of the <xref:System.Web.Security.RoleProvider.GetUsersInRole%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Security.IRoleProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#7)]
 [!code-vb[System.Web.Security.IRoleProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public abstract bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">
          <span data-ttu-id="5fe3e-179">要搜索的用户名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-179">The user name to search for.</span>
          </span>
        </param>
        <param name="roleName">
          <span data-ttu-id="5fe3e-180">作为搜索范围的角色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-180">The role to search in.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5fe3e-181">获取一个值，指示指定用户是否属于已配置的 <see langword="applicationName" /> 的指定角色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-181">Gets a value indicating whether the specified user is in the specified role for the configured <see langword="applicationName" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5fe3e-182">如果指定用户属于已配置的 <see langword="true" /> 的指定角色，则为 <see langword="applicationName" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-182">
              <see langword="true" /> if the specified user is in the specified role for the configured <see langword="applicationName" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fe3e-183"><xref:System.Web.Security.RoleProvider.IsUserInRole%2A>方法由调用<xref:System.Web.Security.Roles.IsUserInRole%2A>方法<xref:System.Web.Security.Roles>类以确定当前登录的用户是否已配置的数据源中的角色相关联<xref:System.Web.Security.Roles.ApplicationName%2A>。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-183">The <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> method is called by the <xref:System.Web.Security.Roles.IsUserInRole%2A> method of the <xref:System.Web.Security.Roles> class to determine whether the current logged-on user is associated with a role from the data source for the configured <xref:System.Web.Security.Roles.ApplicationName%2A>.</span></span>  
  
 <span data-ttu-id="5fe3e-184">如果指定的用户名称是`null`或为空字符串，我们建议你提供程序引发异常。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-184">If the specified user name is `null` or is an empty string, we recommend that your provider throw an exception.</span></span>  
  
 <span data-ttu-id="5fe3e-185">如果指定的角色名称为`null`或为空字符串，我们建议你提供程序引发异常。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-185">If the specified role name is `null` or is an empty string, we recommend that your provider throw an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5fe3e-186">下面的代码示例演示的示例实现<xref:System.Web.Security.RoleProvider.IsUserInRole%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-186">The following code example shows a sample implementation of the <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Security.IRoleProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#8)]
 [!code-vb[System.Web.Security.IRoleProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public abstract void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">
          <span data-ttu-id="5fe3e-187">一个字符串数组，其中包含要从指定的角色移除的用户名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-187">A string array of user names to be removed from the specified roles.</span>
          </span>
        </param>
        <param name="roleNames">
          <span data-ttu-id="5fe3e-188">一个字符串数组，其中包含要将指定的用户名从中移除的角色的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-188">A string array of role names to remove the specified user names from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5fe3e-189">移除已配置的 <see langword="applicationName" /> 的指定角色中的指定用户名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-189">Removes the specified user names from the specified roles for the configured <see langword="applicationName" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fe3e-190"><xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A> 由调用<xref:System.Web.Security.Roles.RemoveUserFromRole%2A>， <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A> ， <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A> ，和<xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A>方法<xref:System.Web.Security.Roles>类来从数据源的指定角色中删除指定的用户。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-190"><xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A> is called by <xref:System.Web.Security.Roles.RemoveUserFromRole%2A> , <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A> , <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A> , and <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> methods of the <xref:System.Web.Security.Roles> class to remove the specified users from the specified roles at the data source.</span></span> <span data-ttu-id="5fe3e-191">仅为已配置的角色<xref:System.Web.Security.RoleProvider.ApplicationName%2A>进行修改。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-191">Only roles for the configured <xref:System.Web.Security.RoleProvider.ApplicationName%2A> are modified.</span></span>  
  
 <span data-ttu-id="5fe3e-192">如果指定的角色名称中的任何是已配置的找不到`applicationName`，我们建议你提供程序引发<xref:System.Configuration.Provider.ProviderException>。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-192">If any of the specified role names are not found for the configured `applicationName`, we recommend that your provider throw a <xref:System.Configuration.Provider.ProviderException>.</span></span>  
  
 <span data-ttu-id="5fe3e-193">如果指定的用户名称中的任何不与相关联的任何已配置的指定的角色名称`applicationName`，我们建议你提供程序引发<xref:System.Configuration.Provider.ProviderException>。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-193">If any of the specified user names are not associated with any of the specified role names for the configured `applicationName`, we recommend that your provider throw a <xref:System.Configuration.Provider.ProviderException>.</span></span>  
  
 <span data-ttu-id="5fe3e-194">如果任何指定的用户名为`null`或为空字符串，我们建议你提供程序引发异常。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-194">If any of the specified user names is `null` or is an empty string, we recommend that your provider throw an exception.</span></span>  
  
 <span data-ttu-id="5fe3e-195">如果任何指定的角色名为`null`或为空字符串，我们建议你提供程序引发异常。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-195">If any of the specified role names is `null` or is an empty string, we recommend that your provider throw an exception.</span></span>  
  
 <span data-ttu-id="5fe3e-196">如果您的数据源支持事务，我们建议在事务中包括每个删除操作并回滚事务，并引发异常，如果任何删除操作失败。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-196">If your data source supports transactions, we recommend that you include each remove operation in a transaction and that you roll back the transaction and throw an exception if any remove operation fails.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5fe3e-197">下面的代码示例演示的示例实现<xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-197">The following code example shows a sample implementation of the <xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Security.IRoleProvider#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#9)]
 [!code-vb[System.Web.Security.IRoleProvider#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public abstract bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool RoleExists(System::String ^ roleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">
          <span data-ttu-id="5fe3e-198">要在数据源中搜索的角色名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-198">The name of the role to search for in the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5fe3e-199">获取一个值，该值指示指定角色名是否已存在于已配置的 <see langword="applicationName" /> 的角色数据源中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-199">Gets a value indicating whether the specified role name already exists in the role data source for the configured <see langword="applicationName" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5fe3e-200">如果角色名已存在于已配置的 <see langword="true" /> 的数据源中，则为 <see langword="applicationName" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fe3e-200">
              <see langword="true" /> if the role name already exists in the data source for the configured <see langword="applicationName" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fe3e-201"><xref:System.Web.Security.RoleProvider.RoleExists%2A> 由调用<xref:System.Web.Security.Roles.RoleExists%2A>方法<xref:System.Web.Security.Roles>类以确定是否已配置的数据源中存在的角色名称<xref:System.Web.Security.Roles.ApplicationName%2A>。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-201"><xref:System.Web.Security.RoleProvider.RoleExists%2A> is called by the <xref:System.Web.Security.Roles.RoleExists%2A> method of the <xref:System.Web.Security.Roles> class to determine whether a role name exists in the data source for the configured <xref:System.Web.Security.Roles.ApplicationName%2A>.</span></span>  
  
 <span data-ttu-id="5fe3e-202">如果指定的角色名称为`null`或为空字符串，我们建议你提供程序引发异常。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-202">If the specified role name is `null` or is an empty string, we recommend that your provider throw an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5fe3e-203">下面的代码示例演示的示例实现<xref:System.Web.Security.RoleProvider.RoleExists%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5fe3e-203">The following code example shows a sample implementation of the <xref:System.Web.Security.RoleProvider.RoleExists%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Security.IRoleProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#10)]
 [!code-vb[System.Web.Security.IRoleProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>