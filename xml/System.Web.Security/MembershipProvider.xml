<Type Name="MembershipProvider" FullName="System.Web.Security.MembershipProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f064e6e45bef758adfd25795f5c889e2fa5ddaa0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36597090" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MembershipProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MembershipProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.MembershipProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MembershipProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class MembershipProvider abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type MembershipProvider = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web.ApplicationServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web, Version=2.0.0.0, Culture=Neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines the contract that ASP.NET implements to provide membership services using custom membership providers.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 成员资格旨在使你能够轻松地为 ASP.NET 应用程序中使用大量不同的成员资格提供程序。 可以使用提供的成员资格提供程序所包含的.NET Framework 中，或者可以实现自己的提供程序。  
  
> [!NOTE]
>  如果你不熟悉 ASP.NET 成员资格功能，请参阅[简介成员资格](http://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980)才能继续。 与成员资格相关的其他主题的列表，请参阅[使用成员资格管理用户](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd)。  
  
 在实现自定义成员资格提供程序时，你需要继承<xref:System.Web.Security.MembershipProvider>抽象类。  
  
 有两个主要原因创建自定义成员资格提供程序。  
  
-   你需要将成员资格信息存储在.NET Framework 中，如 FoxPro 数据库、 Oracle 数据库或其他数据源中包含的成员资格提供程序不支持的数据源。  
  
-   你需要管理使用的数据库架构不同于使用.NET Framework 会随附的提供程序的数据库架构中的成员身份信息。 此常见示例是针对公司或网站的 SQL Server 数据库中已存在的成员身份数据。  
  
 <xref:System.Web.Security.MembershipProvider>抽象类继承自<xref:System.Configuration.Provider.ProviderBase>抽象类。 <xref:System.Web.Security.MembershipProvider> 实现还必须实现的所需的成员<xref:System.Configuration.Provider.ProviderBase>。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MembershipProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MembershipProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Security.MembershipProvider" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不需要实现继承的类的构造函数<xref:System.Web.Security.MembershipProvider>抽象类。 值初始化<xref:System.Web.Security.MembershipProvider>实现传递给<xref:System.Configuration.Provider.ProviderBase.Initialize%2A>方法实现。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.MembershipProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the application using the custom membership provider.</summary>
        <value>使用自定义成员资格提供程序的应用程序的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.ApplicationName%2A>属性值存储在具有相关的用户信息以将用户与特定的应用程序关联的数据源。 此属性为读/写，默认值为<xref:System.Web.HttpRequest.ApplicationPath%2A>如果未显式指定的属性值。  
  
 成员资格提供程序存储单独为每个应用程序的用户信息，因为多个 ASP.NET 应用程序可以使用相同的数据源，而不会遇到冲突，如果会创建重复的用户名称。 或者，多个 ASP.NET 应用程序可以使用相同的用户数据源，通过指定相同<xref:System.Web.Security.MembershipProvider.ApplicationName%2A>。  
  
 在成员资格提供程序实现中，你将需要确保你数据的架构，包括<xref:System.Web.Security.MembershipProvider.ApplicationName%2A>和数据源查询和更新还包括<xref:System.Web.Security.MembershipProvider.ApplicationName%2A>。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public abstract bool ChangePassword (string username, string oldPassword, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ChangePassword(string username, string oldPassword, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.ChangePassword(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ChangePassword (username As String, oldPassword As String, newPassword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ChangePassword(System::String ^ username, System::String ^ oldPassword, System::String ^ newPassword);" />
      <MemberSignature Language="F#" Value="abstract member ChangePassword : string * string * string -&gt; bool" Usage="membershipProvider.ChangePassword (username, oldPassword, newPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="oldPassword" Type="System.String" />
        <Parameter Name="newPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to update the password for.</param>
        <param name="oldPassword">The current password for the specified user.</param>
        <param name="newPassword">The new password for the specified user.</param>
        <summary>Processes a request to update the password for a membership user.</summary>
        <returns>
          <see langword="true" /> if the password was updated successfully; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 采用和作为输入，用户名称、 当前的密码、 新密码，并更新数据源中的密码，如果提供的用户名称和当前密码都有效。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public abstract bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ChangePasswordQuestionAndAnswer(string username, string password, string newPasswordQuestion, string newPasswordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ChangePasswordQuestionAndAnswer (username As String, password As String, newPasswordQuestion As String, newPasswordAnswer As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ChangePasswordQuestionAndAnswer(System::String ^ username, System::String ^ password, System::String ^ newPasswordQuestion, System::String ^ newPasswordAnswer);" />
      <MemberSignature Language="F#" Value="abstract member ChangePasswordQuestionAndAnswer : string * string * string * string -&gt; bool" Usage="membershipProvider.ChangePasswordQuestionAndAnswer (username, password, newPasswordQuestion, newPasswordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="newPasswordQuestion" Type="System.String" />
        <Parameter Name="newPasswordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to change the password question and answer for.</param>
        <param name="password">The password for the specified user.</param>
        <param name="newPasswordQuestion">The new password question for the specified user.</param>
        <param name="newPasswordAnswer">The new password answer for the specified user.</param>
        <summary>Processes a request to update the password question and answer for a membership user.</summary>
        <returns>
          <see langword="true" /> if the password question and answer are updated successfully; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 采用，输入、 用户名称、 密码、 密码提示问题和密码提示问题答案，并更新密码提示问题和数据源中的答案，如果提供的用户名和密码都有效。  
  
 如果提供的用户名和密码无效，`false`返回。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="abstract member CreateUser : string * string * string * string * string * bool * obj *  -&gt; System.Web.Security.MembershipUser" Usage="membershipProvider.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, providerUserKey, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">The user name for the new user.</param>
        <param name="password">The password for the new user.</param>
        <param name="email">The email address for the new user.</param>
        <param name="passwordQuestion">The password question for the new user.</param>
        <param name="passwordAnswer">The password answer for the new user</param>
        <param name="isApproved">Whether or not the new user is approved to be validated.</param>
        <param name="providerUserKey">The unique identifier from the membership data source for the user.</param>
        <param name="status">A <see cref="T:System.Web.Security.MembershipCreateStatus" /> enumeration value indicating whether the user was created successfully.</param>
        <summary>Adds a new membership user to the data source.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object populated with the information for the newly created user.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将新用户、 密码和电子邮件地址的名称作为输入，并将应用程序的新用户插入到数据源。 <xref:System.Web.Security.MembershipProvider.CreateUser%2A>方法返回<xref:System.Web.Security.MembershipUser>使用新创建的用户的信息填充的对象。 <xref:System.Web.Security.MembershipProvider.CreateUser%2A>方法还定义`out`参数 (在 Visual Basic 中，你可以使用`ByRef`)，该属性返回<xref:System.Web.Security.MembershipCreateStatus>值，该值指示用户已成功创建，或该用户创建失败原因。  
  
 <xref:System.Web.Security.MembershipProvider.CreateUser%2A>方法引发<xref:System.Web.Security.MembershipProvider.ValidatingPassword>事件，如果<xref:System.Web.Security.MembershipValidatePasswordEventHandler>事件处理程序已指定，并继续或取消基于该事件的结果的创建用户操作。 你可以使用<xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A>才能执行指定的虚拟方法<xref:System.Web.Security.MembershipValidatePasswordEventHandler>事件处理程序。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptPassword">
      <MemberSignature Language="C#" Value="protected virtual byte[] DecryptPassword (byte[] encodedPassword);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] DecryptPassword(unsigned int8[] encodedPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.DecryptPassword(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function DecryptPassword (encodedPassword As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Byte&gt; ^ DecryptPassword(cli::array &lt;System::Byte&gt; ^ encodedPassword);" />
      <MemberSignature Language="F#" Value="abstract member DecryptPassword : byte[] -&gt; byte[]&#xA;override this.DecryptPassword : byte[] -&gt; byte[]" Usage="membershipProvider.DecryptPassword encodedPassword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedPassword" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="encodedPassword">A byte array that contains the encrypted password to decrypt.</param>
        <summary>Decrypts an encrypted password.</summary>
        <returns>A byte array that contains the decrypted password.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.DecryptPassword%2A>方法是一个虚方法来提供成员资格提供程序实现支持时要使用加密密码格式。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see cref="P:System.Web.Configuration.MachineKeySection.ValidationKey" /> property or <see cref="P:System.Web.Configuration.MachineKeySection.DecryptionKey" /> property is set to <see langword="AutoGenerate" />.</exception>
        <exception cref="T:System.PlatformNotSupportedException">This method is not available. This can occur if the application targets the [!INCLUDE[net_client_v40_long](~/includes/net-client-v40-long-md.md)]. To prevent this exception, override the method, or change the application to target the full version of the .NET Framework.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public abstract bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberSignature Language="F#" Value="abstract member DeleteUser : string * bool -&gt; bool" Usage="membershipProvider.DeleteUser (username, deleteAllRelatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to delete.</param>
        <param name="deleteAllRelatedData">
          <see langword="true" /> to delete data related to the user from the database; <see langword="false" /> to leave data related to the user in the database.</param>
        <summary>Removes a user from the membership data source.</summary>
        <returns>
          <see langword="true" /> if the user was successfully deleted; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将用户的名称作为输入，并从数据源中删除该用户的信息。 如果`deleteAllRelatedData`是`true`，然后存储的所有用户数据的数据库中<xref:System.Web.Security.Roles>， <xref:System.Web.HttpContext.Profile%2A>，和<xref:System.Web.UI.WebControls.WebParts.WebPart>个性化也将被删除。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public abstract bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool EnablePasswordReset { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordReset : bool" Usage="System.Web.Security.MembershipProvider.EnablePasswordReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether the membership provider is configured to allow users to reset their passwords.</summary>
        <value>如果成员资格提供程序支持密码重置，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A> 包含在该配置文件 (Web.config) 中指定的布尔值`enablePasswordReset`属性。 值指示用户是否可以使用<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>方法使用一个新的随机生成密码覆盖他们当前的密码。 此属性是只读的。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public abstract bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordRetrieval : bool" Usage="System.Web.Security.MembershipProvider.EnablePasswordRetrieval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether the membership provider is configured to allow users to retrieve their passwords.</summary>
        <value>如果成员资格提供程序配置为支持密码检索，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A>属性包含在该配置文件 (Web.config) 中指定的布尔值`enablePasswordRetrieval`属性。 值指示用户是否可以使用<xref:System.Web.Security.MembershipProvider.GetPassword%2A>方法来从数据源检索他们当前的密码。 此属性是只读的。  
  
 如果你自定义成员资格提供程序支持经过哈希处理的密码，你<xref:System.Web.Security.MembershipProvider.GetPassword%2A>方法实现应引发异常，如果<xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A>设置为`true`和密码格式设置为`Hashed`。 无法检索经过哈希处理的密码。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="EncryptPassword">
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Encrypts a password.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法返回包含加密的密码的字节数组。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncryptPassword">
      <MemberSignature Language="C#" Value="protected virtual byte[] EncryptPassword (byte[] password);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] EncryptPassword(unsigned int8[] password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EncryptPassword (password As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Byte&gt; ^ EncryptPassword(cli::array &lt;System::Byte&gt; ^ password);" />
      <MemberSignature Language="F#" Value="abstract member EncryptPassword : byte[] -&gt; byte[]&#xA;override this.EncryptPassword : byte[] -&gt; byte[]" Usage="membershipProvider.EncryptPassword password" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="password">A byte array that contains the password to encrypt.</param>
        <summary>Encrypts a password.</summary>
        <returns>A byte array that contains the encrypted password.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.EncryptPassword%2A>方法是一个虚方法来提供成员资格提供程序实现支持时要使用加密密码格式。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see cref="P:System.Web.Configuration.MachineKeySection.ValidationKey" /> property or <see cref="P:System.Web.Configuration.MachineKeySection.DecryptionKey" /> property is set to <see langword="AutoGenerate" />.</exception>
        <exception cref="T:System.PlatformNotSupportedException">This method is not available. This can occur if the application targets the [!INCLUDE[net_client_v40_long](~/includes/net-client-v40-long-md.md)]. To prevent this exception, override the method, or change the application to target the full version of the .NET Framework.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptPassword">
      <MemberSignature Language="C#" Value="protected virtual byte[] EncryptPassword (byte[] password, System.Web.Configuration.MembershipPasswordCompatibilityMode legacyPasswordCompatibilityMode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] EncryptPassword(unsigned int8[] password, valuetype System.Web.Configuration.MembershipPasswordCompatibilityMode legacyPasswordCompatibilityMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[],System.Web.Configuration.MembershipPasswordCompatibilityMode)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EncryptPassword (password As Byte(), legacyPasswordCompatibilityMode As MembershipPasswordCompatibilityMode) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Byte&gt; ^ EncryptPassword(cli::array &lt;System::Byte&gt; ^ password, System::Web::Configuration::MembershipPasswordCompatibilityMode legacyPasswordCompatibilityMode);" />
      <MemberSignature Language="F#" Value="abstract member EncryptPassword : byte[] * System.Web.Configuration.MembershipPasswordCompatibilityMode -&gt; byte[]&#xA;override this.EncryptPassword : byte[] * System.Web.Configuration.MembershipPasswordCompatibilityMode -&gt; byte[]" Usage="membershipProvider.EncryptPassword (password, legacyPasswordCompatibilityMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
        <Parameter Name="legacyPasswordCompatibilityMode" Type="System.Web.Configuration.MembershipPasswordCompatibilityMode" />
      </Parameters>
      <Docs>
        <param name="password">A byte array that contains the password to encrypt.</param>
        <param name="legacyPasswordCompatibilityMode">The membership password-compatibility mode.</param>
        <summary>Encrypts the specified password using the specified password-compatibility mode.</summary>
        <returns>A byte array that contains the encrypted password.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see cref="P:System.Web.Configuration.MachineKeySection.ValidationKey" /> property or <see cref="P:System.Web.Configuration.MachineKeySection.DecryptionKey" /> property is set to <see langword="AutoGenerate" />.</exception>
        <exception cref="T:System.PlatformNotSupportedException">This method is not available. This can occur if the application targets the [!INCLUDE[net_client_v40_long](~/includes/net-client-v40-long-md.md)]. To prevent this exception, override the method, or change the application to target the full version of the .NET Framework.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="abstract member FindUsersByEmail : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="membershipProvider.FindUsersByEmail (emailToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">The email address to search for.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">The total number of matched users.</param>
        <summary>Gets a collection of membership users where the email address contains the specified email address to match.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> collection that contains a page of <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> objects beginning at the page specified by <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.FindUsersByEmail%2A> 返回用户的电子邮件地址匹配所提供的成员资格用户的列表`emailToMatch`已配置的<xref:System.Web.Security.MembershipProvider.ApplicationName%2A>属性。 如果您的数据源支持附加搜索功能，如通配符字符，你可以电子邮件地址来提供更广泛的搜索功能。  
  
 返回的结果<xref:System.Web.Security.MembershipProvider.FindUsersByEmail%2A>受到`pageIndex`和`pageSize`参数。 `pageSize`参数标识的数<xref:System.Web.Security.MembershipUser>对象中返回<xref:System.Web.Security.MembershipUserCollection>集合。 `pageIndex`参数标识要返回其中 0 标识的第一页的结果页。 `totalRecords`参数是`out`参数设置为匹配的成员资格用户的总数`emailToMatch`值。 例如，如果找到 13 个`emailToMatch`匹配的一部分或整个电子邮件地址，与`pageIndex`值为 1，`pageSize`为 5，则<xref:System.Web.Security.MembershipUserCollection>将包含通过返回的第 10 个用户的第六个。 `totalRecords` 将设置为 13。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="abstract member FindUsersByName : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="membershipProvider.FindUsersByName (usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">The user name to search for.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">The total number of matched users.</param>
        <summary>Gets a collection of membership users where the user name contains the specified user name to match.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> collection that contains a page of <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> objects beginning at the page specified by <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.FindUsersByName%2A> 返回成员资格用户的列表在用户名与匹配所提供`usernameToMatch`已配置的<xref:System.Web.Security.MembershipProvider.ApplicationName%2A>属性。 如果您的数据源支持附加搜索功能，如通配符字符，你可以为用户名称提供更广泛搜索功能。  
  
 返回的结果<xref:System.Web.Security.MembershipProvider.FindUsersByName%2A>受到`pageIndex`和`pageSize`参数。 `pageSize`参数标识的数<xref:System.Web.Security.MembershipUser>对象中返回<xref:System.Web.Security.MembershipUserCollection>集合。 `pageIndex`参数标识要返回，其中 0 标识的第一页的结果页。 `totalRecords`参数是`out`参数设置为匹配的成员资格用户的总数`usernameToMatch`值。 例如，如果找到 13 个`usernameToMatch`匹配的一部分或整个的用户名，和`pageIndex`值为 1，`pageSize`为 5，则<xref:System.Web.Security.MembershipUserCollection>将包含通过返回的第 10 个用户的第六个。 `totalRecords` 将设置为 13。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="abstract member GetAllUsers : int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="membershipProvider.GetAllUsers (pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">The total number of matched users.</param>
        <summary>Gets a collection of all the users in the data source in pages of data.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> collection that contains a page of <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> objects beginning at the page specified by <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.GetAllUsers%2A> 已配置的数据源中返回所有用户的列表<xref:System.Web.Security.MembershipProvider.ApplicationName%2A>属性。 按用户名称按字母顺序返回用户。  
  
 返回的结果<xref:System.Web.Security.MembershipProvider.GetAllUsers%2A>受到`pageIndex`和`pageSize`参数。 `pageSize`参数标识的数<xref:System.Web.Security.MembershipUser>对象中返回<xref:System.Web.Security.MembershipUserCollection>集合。 `pageIndex`参数标识要返回，其中 0 标识的第一页的结果页。 `totalRecords`参数是`out`参数设置为在数据库中的成员资格用户的总数。 例如，如果在数据库中，有 13 个用户和`pageIndex`值为 1，`pageSize`为 5，则<xref:System.Web.Security.MembershipUserCollection>将包含通过返回的第 10 个用户的第六个。 `totalRecords` 将设置为 13。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public abstract int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetNumberOfUsersOnline();" />
      <MemberSignature Language="F#" Value="abstract member GetNumberOfUsersOnline : unit -&gt; int" Usage="membershipProvider.GetNumberOfUsersOnline " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the number of users currently accessing the application.</summary>
        <returns>The number of users currently accessing the application.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回一个整数值是数据源中的所有用户的计数，其中<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>大于当前日期和时间减去<xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>。 <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>指定时要使用的分钟数的正整数值确定用户是否处于联机状态。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPassword">
      <MemberSignature Language="C#" Value="public abstract string GetPassword (string username, string answer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPassword(string username, string answer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.GetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPassword (username As String, answer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetPassword(System::String ^ username, System::String ^ answer);" />
      <MemberSignature Language="F#" Value="abstract member GetPassword : string * string -&gt; string" Usage="membershipProvider.GetPassword (username, answer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="answer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to retrieve the password for.</param>
        <param name="answer">The password answer for the user.</param>
        <summary>Gets the password for the specified user name from the data source.</summary>
        <returns>The password for the specified user name.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 采用作为输入、 用户名和密码提示问题答案和从数据源中检索该用户的密码，并返回以字符串形式的密码。  
  
 <xref:System.Web.Security.MembershipProvider.GetPassword%2A>方法可确保<xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A>标志设置为`true`之前执行任何操作。 如果<xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A>是`false`、<xref:System.NotSupportedException>引发异常。  
  
 <xref:System.Web.Security.MembershipProvider.GetPassword%2A> 此外将检查的值<xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A>属性。 如果<xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A>是`true`，<xref:System.Web.Security.MembershipProvider.GetPassword%2A>检查对照数据源中存储的密码提示问题答案提供的答案参数的值。 如果不匹配，<xref:System.Web.Security.MembershipPasswordException>引发异常。  
  
 如果你自定义成员资格提供程序支持经过哈希处理的密码<xref:System.Web.Security.MembershipProvider.GetPassword%2A>方法应引发异常，如果<xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A>属性设置为`true`和密码格式设置为`Hashed`。 无法检索经过哈希处理的密码。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets information from the data source for a membership user.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="abstract member GetUser : obj * bool -&gt; System.Web.Security.MembershipUser" Usage="membershipProvider.GetUser (providerUserKey, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">The unique identifier for the membership user to get information for.</param>
        <param name="userIsOnline">
          <see langword="true" /> to update the last-activity date/time stamp for the user; <see langword="false" /> to return user information without updating the last-activity date/time stamp for the user.</param>
        <summary>Gets user information from the data source based on the unique identifier for the membership user. Provides an option to update the last-activity date/time stamp for the user.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object populated with the specified user's information from the data source.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将用户记录和一个布尔值，该值指示是否要更新的唯一标识符作为输入，<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>用户以显示该用户是否处于联机状态的值。 <xref:System.Web.Security.MembershipProvider.GetUser%2A>方法返回<xref:System.Web.Security.MembershipUser>中指定的用户的数据源的当前值填充的对象。 如果在数据源中找不到用户名<xref:System.Web.Security.MembershipProvider.GetUser%2A>返回`null`。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="abstract member GetUser : string * bool -&gt; System.Web.Security.MembershipUser" Usage="membershipProvider.GetUser (username, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to get information for.</param>
        <param name="userIsOnline">
          <see langword="true" /> to update the last-activity date/time stamp for the user; <see langword="false" /> to return user information without updating the last-activity date/time stamp for the user.</param>
        <summary>Gets information from the data source for a user. Provides an option to update the last-activity date/time stamp for the user.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object populated with the specified user's information from the data source.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 采用，作为输入、 用户名称和一个布尔值，该值指示是否更新<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>要显示用户是否处于联机状态的用户的属性值。 <xref:System.Web.Security.MembershipProvider.GetUser%2A> 返回<xref:System.Web.Security.MembershipUser>中指定的用户的数据源的当前值填充的对象。 如果在数据源中找不到用户名<xref:System.Web.Security.MembershipProvider.GetUser%2A>返回`null`。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public abstract string GetUserNameByEmail (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetUserNameByEmail(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUserNameByEmail (email As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetUserNameByEmail(System::String ^ email);" />
      <MemberSignature Language="F#" Value="abstract member GetUserNameByEmail : string -&gt; string" Usage="membershipProvider.GetUserNameByEmail email" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">The email address to search for.</param>
        <summary>Gets the user name associated with the specified email address.</summary>
        <returns>The user name associated with the specified email address. If no match is found, return <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将电子邮件地址作为输入，并从电子邮件地址匹配所提供的数据源返回的第一个用户名`email`参数值。  
  
 如果没有用户名称找到具有匹配的电子邮件地址，`null`返回。  
  
 如果找到与匹配特定电子邮件地址的多个用户名称，则应返回仅第一个找到的用户名。 你可以实现自定义机制可确保对于每个用户名称是唯一的电子邮件地址，如<xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>属性受<xref:System.Web.Security.SqlMembershipProvider>提供程序。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public abstract int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxInvalidPasswordAttempts : int" Usage="System.Web.Security.MembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.</summary>
        <value>锁定成员资格用户之前允许的无效密码或密码答案尝试次数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>属性与结合工作<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>属性以防止不需要的源猜测的密码或密码提示问题答案的成员资格用户通过反复尝试。 无效密码或提供成员资格用户的密码提示问题数是否大于或等于<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>属性值指定的分钟数内<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>，然后通过设置锁定成员资格用户<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>属性`true`直到用户解锁通过调用<xref:System.Web.Security.MembershipUser.UnlockUser%2A>方法。 如果之前提供有效的密码或密码提示问题答案<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>达到值、 跟踪的无效尝试次数的计数器重置为零。  
  
 无效的密码和密码提示问题答案尝试次数累积独立于另一个。 例如，如果<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>属性设置为 5，和三个无效的密码尝试，随后进行了两个无效的密码提示问题答案尝试，则两个更多的无效密码尝试 （或三个更多的无效密码提示问题答案尝试） 必须进行内<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>成员资格用户被锁定。  
  
 如果<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>属性设置为`false`，则不会跟踪无效密码提示问题答案尝试次数。  
  
 跟踪中的无效密码和密码提示问题答案尝试次数<xref:System.Web.Security.MembershipProvider.ValidateUser%2A>， <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>， <xref:System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer%2A>， <xref:System.Web.Security.MembershipProvider.GetPassword%2A>，和<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>方法。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public abstract int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredNonAlphanumericCharacters : int" Usage="System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minimum number of special characters that must be present in a valid password.</summary>
        <value>有效密码中必须包含的最少特殊字符数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A>属性返回的最小创建的有效密码时必须输入的特殊、 非字母字符数<xref:System.Web.Security.MembershipProvider>对象。  
  
 <xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A>在该应用程序配置中设置了属性值`minRequiredNonalphanumericCharacters`属性[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)配置元素。  
  
 非字母数字字符是为其字符<xref:System.Char.IsLetterOrDigit%2A>方法返回`false`。  
  
   
  
## Examples  
 下面的示例演示[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)中的配置元素`system.web`的应用程序的 Web.config 文件的部分。 它指定应用程序使用的实例<xref:System.Web.Security.SqlMembershipProvider>类以提供成员资格服务，并设置`minRequiredNonalphanumericCharacters`属性设为 1 个字符。  
  
```  
<membership>  
  <providers>  
    <clear/>  
    <add name="AspNetSqlMembershipProvider"   
      type="System.Web.Security.SqlMembershipProvider"   
      connectionStringName="ApplicationServices"   
      enablePasswordRetrieval="false"   
      enablePasswordReset="true"   
      requiresQuestionAndAnswer="false"   
      requiresUniqueEmail="false"   
      maxInvalidPasswordAttempts="5"   
      minRequiredPasswordLength="6"   
      minRequiredNonalphanumericCharacters="1"   
      passwordAttemptWindow="10"   
      applicationName="/"/>  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public abstract int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int MinRequiredPasswordLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredPasswordLength : int" Usage="System.Web.Security.MembershipProvider.MinRequiredPasswordLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minimum length required for a password.</summary>
        <value>密码所需的最小长度。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A>属性获取的最小创建的有效密码时必须输入的字符数<xref:System.Web.Security.MembershipProvider>对象。  
  
 <xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A>在该应用程序配置中设置了属性值`minRequiredPasswordLength`属性[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)配置元素。  
  
   
  
## Examples  
 下面的示例演示[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)中的配置元素`system.web`的应用程序的 Web.config 文件的部分。 它指定应用程序使用的实例<xref:System.Web.Security.SqlMembershipProvider>类以提供成员资格服务，并设置`minRequiredPasswordLength`属性设为七个字符。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredPasswordLength="7"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnValidatingPassword">
      <MemberSignature Language="C#" Value="protected virtual void OnValidatingPassword (System.Web.Security.ValidatePasswordEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidatingPassword(class System.Web.Security.ValidatePasswordEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.OnValidatingPassword(System.Web.Security.ValidatePasswordEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValidatingPassword (e As ValidatePasswordEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValidatingPassword(System::Web::Security::ValidatePasswordEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnValidatingPassword : System.Web.Security.ValidatePasswordEventArgs -&gt; unit&#xA;override this.OnValidatingPassword : System.Web.Security.ValidatePasswordEventArgs -&gt; unit" Usage="membershipProvider.OnValidatingPassword e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.Security.ValidatePasswordEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The <see cref="T:System.Web.Security.ValidatePasswordEventArgs" /> to pass to the <see cref="E:System.Web.Security.MembershipProvider.ValidatingPassword" /> event handler.</param>
        <summary>Raises the <see cref="E:System.Web.Security.MembershipProvider.ValidatingPassword" /> event if an event handler has been defined.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A>过程中使用虚拟方法<xref:System.Web.Security.MembershipProvider.CreateUser%2A>， <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>，和<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>方法来引发<xref:System.Web.Security.MembershipProvider.ValidatingPassword>事件如果<xref:System.Web.Security.MembershipValidatePasswordEventHandler>已指定。 `e`参数用于传递<xref:System.Web.Security.ValidatePasswordEventArgs>对象传递给<xref:System.Web.Security.MembershipValidatePasswordEventHandler>事件处理程序。 当<xref:System.Web.Security.MembershipProvider.ValidatingPassword>事件已完成的属性<xref:System.Web.Security.ValidatePasswordEventArgs>作为对象提供`e`参数可以进行检查以便确定是否应取消当前操作，如果特定<xref:System.Exception>、 存储在<xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>属性，应引发。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public abstract int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int PasswordAttemptWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordAttemptWindow : int" Usage="System.Web.Security.MembershipProvider.PasswordAttemptWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of minutes in which a maximum number of invalid password or password-answer attempts are allowed before the membership user is locked out.</summary>
        <value>在锁定成员资格用户之前允许的最大无效密码或无效密码提示问题答案尝试次数的分钟数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>属性与结合工作<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>属性以防止不需要的源猜测的密码或密码提示问题答案的成员资格用户通过反复尝试。 如果的无效密码或密码提示问题答案成员资格用户的数量超过<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>在指定的分钟数内<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>，然后通过设置锁定成员资格用户<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>属性`true`直到用户解锁通过调用<xref:System.Web.Security.MembershipUser.UnlockUser%2A>方法。 如果之前提供有效的密码或密码提示问题答案<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>是达到，跟踪的无效尝试次数的计数器重置为零。  
  
 无效的密码和密码提示问题答案尝试次数累积独立于另一个。 例如，如果<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>属性设置为 5，和三个无效的密码尝试，随后进行了两个无效的密码提示问题答案尝试，则两个更多的无效密码尝试 （或三个更多的无效密码提示问题答案尝试） 必须进行内<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>成员资格用户被锁定的值。  
  
 如果<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>属性设置为`false`，则不会跟踪无效密码提示问题答案尝试次数。  
  
 跟踪中的无效密码和密码提示问题答案尝试次数<xref:System.Web.Security.MembershipProvider.ValidateUser%2A>， <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>， <xref:System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer%2A>， <xref:System.Web.Security.MembershipProvider.GetPassword%2A>，和<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>方法。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordFormat">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Security.MembershipPasswordFormat PasswordFormat" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.PasswordFormat" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PasswordFormat As MembershipPasswordFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Web::Security::MembershipPasswordFormat PasswordFormat { System::Web::Security::MembershipPasswordFormat get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordFormat : System.Web.Security.MembershipPasswordFormat" Usage="System.Web.Security.MembershipProvider.PasswordFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipPasswordFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating the format for storing passwords in the membership data store.</summary>
        <value>
          <see cref="T:System.Web.Security.MembershipPasswordFormat" /> 值之一，它指示数据存储中存储密码的格式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.PasswordFormat%2A>属性指示密码存储中的格式。 使用`Hashed`仅，`Clear`和`Encrypted`是不安全的。 `Hashed` 密码是使用单向哈希算法和一个随机生成的 salt 值时存储在数据库中哈希处理。 密码验证时，会将它哈希与验证的数据库中的 salt 值。 无法检索经过哈希处理的密码。 `Encrypted` 密码不会视为安全的如受到破坏，可以显示出您的数据库的内容还可以公开的加密密钥。 这意味着无法解密加密的密码，并将其公开。  
  
 你可以使用<xref:System.Web.Security.MembershipProvider.EncryptPassword%2A>和<xref:System.Web.Security.MembershipProvider.DecryptPassword%2A>的虚拟方法<xref:System.Web.Security.MembershipProvider>类进行加密和解密密码值，也可以提供加密数据的代码。 如果你使用<xref:System.Web.Security.MembershipProvider.EncryptPassword%2A>和<xref:System.Web.Security.MembershipProvider.DecryptPassword%2A>的虚拟方法<xref:System.Web.Security.MembershipProvider>类，`Encrypted`密码进行加密使用中提供的密钥信息[machineKey 元素 （ASP.NET 设置架构）](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46)在配置中的元素。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public abstract string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordStrengthRegularExpression : string" Usage="System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the regular expression used to evaluate a password.</summary>
        <value>用于计算密码的正则表达式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A>属性获取用于计算密码复杂性为正则表达式<xref:System.Web.Security.MembershipProvider>对象。  
  
 <xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A>属性设置在应用程序配置中使用`passwordStrengthRegularExpression`属性[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)配置元素。  
  
   
  
## Examples  
 下面的示例演示[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)中的配置元素`system.web`的应用程序的 Web.config 文件的部分。 它指定应用程序使用的实例<xref:System.Web.Security.SqlMembershipProvider>类以提供成员资格服务，并设置`passwordStrengthRegularExpression`属性设为正则表达式验证密码是否满足以下条件：  
  
-   大于七个字符。  
  
-   包含至少一个数字。  
  
-   包含至少一个特殊的 （非字母数字） 字符。  
  
 如果密码不满足这些条件，密码不接受的成员资格提供程序。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression="@\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public abstract bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresQuestionAndAnswer : bool" Usage="System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the membership provider is configured to require the user to answer a password question for password reset and retrieval.</summary>
        <value>
          <see langword="true" /> 如果密码提示问题答案，才能使用密码重置和检索;否则为<see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 配置文件 (Web.config) 中指定一个布尔值。 <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A>属性指示用户是否必须提供密码提示问题答案以检索其密码使用<xref:System.Web.Security.MembershipProvider.GetPassword%2A>方法，或重置其密码使用<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>方法。  
  
 此属性是只读的。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueEmail">
      <MemberSignature Language="C#" Value="public abstract bool RequiresUniqueEmail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueEmail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.RequiresUniqueEmail" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property RequiresUniqueEmail As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool RequiresUniqueEmail { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueEmail : bool" Usage="System.Web.Security.MembershipProvider.RequiresUniqueEmail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the membership provider is configured to require a unique email address for each user name.</summary>
        <value>
          <see langword="true" /> 如果成员资格提供程序需要唯一的电子邮件地址;否则为<see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.RequiresUniqueEmail%2A>属性指示是否创建用户时，用户必须提供一个唯一的电子邮件地址值。 如果用户已存在于当前的数据源<xref:System.Web.Security.MembershipProvider.ApplicationName%2A>，则<xref:System.Web.Security.MembershipProvider.CreateUser%2A>方法返回`null`和 status 值为<xref:System.Web.Security.MembershipCreateStatus.DuplicateEmail>。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPassword">
      <MemberSignature Language="C#" Value="public abstract string ResetPassword (string username, string answer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ResetPassword(string username, string answer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.ResetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ResetPassword (username As String, answer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ ResetPassword(System::String ^ username, System::String ^ answer);" />
      <MemberSignature Language="F#" Value="abstract member ResetPassword : string * string -&gt; string" Usage="membershipProvider.ResetPassword (username, answer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="answer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to reset the password for.</param>
        <param name="answer">The password answer for the specified user.</param>
        <summary>Resets a user's password to a new, automatically generated password.</summary>
        <returns>The new password for the specified user.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用，作为输入、 用户名和密码提示问题答案并生成一个新的随机密码，用于指定用户。  
  
> [!NOTE]
>  通过创建随机密码<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>方法不能保证传递中的正则表达式<xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A>属性。 但是，随机的密码将满足条件由建立<xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A>和<xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A>属性  
  
 <xref:System.Web.Security.MembershipProvider.ResetPassword%2A>方法用新的密码值更新数据源中的用户信息，并返回以字符串形式的新密码。 一个用于生成随机密码方便机制是<xref:System.Web.Security.Membership.GeneratePassword%2A>方法。  
  
 <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> 确保<xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A>标志设置为`true`之前执行任何操作。 如果<xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A>是`false`、<xref:System.NotSupportedException>引发异常。  
  
 <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> 此外将检查的值<xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A>属性。 如果<xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A>是`true`，<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>检查对照数据源中存储的密码提示问题答案提供的答案参数的值。 如果不匹配，<xref:System.Web.Security.MembershipPasswordException>引发异常。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnlockUser">
      <MemberSignature Language="C#" Value="public abstract bool UnlockUser (string userName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool UnlockUser(string userName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.UnlockUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function UnlockUser (userName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool UnlockUser(System::String ^ userName);" />
      <MemberSignature Language="F#" Value="abstract member UnlockUser : string -&gt; bool" Usage="membershipProvider.UnlockUser userName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">The membership user whose lock status you want to clear.</param>
        <summary>Clears a lock so that the membership user can be validated.</summary>
        <returns>
          <see langword="true" /> if the membership user was successfully unlocked; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 作为输入，采用用户名，并更新存储的数据源中的字段<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>属性`false`。 <xref:System.Web.Security.MembershipProvider.UnlockUser%2A>方法返回`true`是否成功; 否则为更新了成员资格用户记录`false`。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public abstract void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberSignature Language="F#" Value="abstract member UpdateUser : System.Web.Security.MembershipUser -&gt; unit" Usage="membershipProvider.UpdateUser user" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">A <see cref="T:System.Web.Security.MembershipUser" /> object that represents the user to update and the updated information for the user.</param>
        <summary>Updates information about a user in the data source.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用，作为输入，<xref:System.Web.Security.MembershipUser>对象使用的用户信息填充，并使用提供的值更新数据源。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public abstract bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="abstract member ValidateUser : string * string -&gt; bool" Usage="membershipProvider.ValidateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to validate.</param>
        <param name="password">The password for the specified user.</param>
        <summary>Verifies that the specified user name and password exist in the data source.</summary>
        <returns>
          <see langword="true" /> if the specified username and password are valid; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 采用，作为输入、 用户名和密码，并验证的值匹配的数据源中。 <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> 返回`true`成功地进行用户名称和密码匹配; 否则为`false`。  
  
 验证成功，<xref:System.Web.Security.MembershipProvider.ValidateUser%2A>更新<xref:System.Web.Security.MembershipUser.LastLoginDate%2A>指定的用户。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatingPassword">
      <MemberSignature Language="C#" Value="public event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword" />
      <MemberSignature Language="DocId" Value="E:System.Web.Security.MembershipProvider.ValidatingPassword" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ValidatingPassword As MembershipValidatePasswordEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Security::MembershipValidatePasswordEventHandler ^ ValidatingPassword;" />
      <MemberSignature Language="F#" Value="member this.ValidatingPassword : System.Web.Security.MembershipValidatePasswordEventHandler " Usage="member this.ValidatingPassword : System.Web.Security.MembershipValidatePasswordEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipValidatePasswordEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a user is created, a password is changed, or a password is reset.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.ValidatingPassword>期间引发事件<xref:System.Web.Security.MembershipProvider.CreateUser%2A>， <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>，和<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>方法。  
  
 <xref:System.Web.Security.MembershipProvider.ValidatingPassword>请求的操作之前发生的事件，并使用户能够继续还是取消所请求的操作。 如果取消操作，用户可以指定将引发异常。  
  
 用户使用<xref:System.Web.Security.MembershipValidatePasswordEventHandler>事件处理程序以指定的处理程序<xref:System.Web.Security.MembershipProvider.ValidatingPassword>事件。 提供程序实施者可以使用<xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A>虚拟方法来引发<xref:System.Web.Security.MembershipProvider.ValidatingPassword>事件。  
  
   
  
## Examples  
 有关的示例<xref:System.Web.Security.MembershipProvider>实现，请参阅[实现配置文件提供程序](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>