<Type Name="Membership" FullName="System.Web.Security.Membership">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2a836f4057bc6bc438b9dfd085e7d6d677be8366" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36597223" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Membership" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Membership extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.Membership" />
  <TypeSignature Language="VB.NET" Value="Public Class Membership" />
  <TypeSignature Language="C++ CLI" Value="public ref class Membership abstract sealed" />
  <TypeSignature Language="F#" Value="type Membership = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Validates user credentials and manages user settings. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership>类用于 ASP.NET 应用程序中验证用户凭据和管理用户设置，例如密码和电子邮件地址。 <xref:System.Web.Security.Membership>类可用于在其自身，或结合<xref:System.Web.Security.FormsAuthentication>创建一个完整的系统的 Web 应用程序或站点的用户进行身份验证。 <xref:System.Web.UI.WebControls.Login>控件封装<xref:System.Web.Security.Membership>类以提供一个用于验证用户的方便机制。  
  
> [!NOTE]
>  如果你不熟悉 ASP.NET 成员资格功能，请参阅[简介成员资格](http://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980)才能继续。 与成员资格相关的其他主题的列表，请参阅[使用成员资格管理用户](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd)。  
  
 <xref:System.Web.Security.Membership>类提供用于工具：  
  
-   创建新用户。  
  
-   在 Microsoft SQL Server 或备用数据存储区中存储成员身份信息 （用户名、 密码、 电子邮件地址和支持的数据）。  
  
-   对访问您的网站的用户进行身份验证。 可以验证用户身份以编程方式，或者可以使用<xref:System.Web.UI.WebControls.Login>控件创建一个要求很少或没有代码的完整的身份验证系统。  
  
-   管理密码，其中包括创建、 更改、 检索和重置密码，等等。 你可以选择配置为需要的密码提示问题和答案忘记密码的用户的密码重置和检索请求进行身份验证的 ASP.NET 成员资格。  
  
 尽管 ASP.NET 成员资格是 ASP.NET 为身份验证中的独立功能，但它可以与 ASP.NET 角色管理，以便提供你的站点的授权服务集成。 此外可以与 ASP.NET 用户集成成员资格<xref:System.Web.Profile>向单个用户提供特定于应用程序可以定制的自定义项。 有关详细信息，请参阅[了解角色管理](http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6)和[ASP.NET 配置文件属性概述](http://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d)。  
  
 <xref:System.Web.Security.Membership>类依赖于成员资格提供程序与数据源进行通信。 .NET Framework 包括<xref:System.Web.Security.SqlMembershipProvider>，它在 Microsoft SQL Server 数据库中，用于存储用户信息和<xref:System.Web.Security.ActiveDirectoryMembershipProvider>，从而使你可以在 Active Directory 或 Active Directory 应用程序模式 (ADAM) 服务器上存储用户信息。 你也可以实现一个自定义成员资格提供程序来与可以通过使用备用数据源进行通信<xref:System.Web.Security.Membership>类。 自定义成员资格提供程序继承<xref:System.Web.Security.MembershipProvider>抽象类。 有关详细信息，请参阅[实现成员资格提供程序](http://msdn.microsoft.com/library/d8658b8e-c962-4f64-95e1-4acce35e4582)。  
  
 默认情况下，已为所有 ASP.NET 应用程序中启用 ASP.NET 成员身份。 默认成员资格提供程序<xref:System.Web.Security.SqlMembershipProvider>和同名的计算机配置中指定`AspNetSqlProvider`。 默认实例<xref:System.Web.Security.SqlMembershipProvider>配置为连接到 Microsoft SQL Server 的本地实例。  
  
 你可以修改默认设置以指定<xref:System.Web.Security.SqlMembershipProvider>以外`AspNetSqlProvider`实例作为默认的提供程序，或为 ASP.NET 应用程序使用 Web.config 文件的默认提供程序指定的自定义提供程序实例。 Web 应用程序的 Web.config 文件中使用的配置节，可以指定 ASP.NET 成员身份配置。 你可以使用`providers`要指定非默认的提供程序的其他成员资格提供程序的部分的子部分。 例如下, 一节从当前的应用程序配置中移除默认成员资格提供程序并添加新的提供程序名称为`SqlProvider`用于将连接到名为的 SQL Server 实例`AspSqlServer`。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=AspSqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <remove name="AspNetSqlProvider" />  
        <add name="SqlProvider"  
          type="System.Web.Security.SqlMembershipProvider"  
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          passwordFormat="Hashed"  
          applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
   
  
## Examples  
 下面的代码示例演示 ASP.NET 应用程序配置为使用 forms 身份验证和 ASP.NET 成员身份的登录页。 如果提供的用户凭据无效，则向用户显示一条消息。 否则，用户将重定向到最初请求的 URL 使用<xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>方法。  
  
> [!NOTE]
>  ASP.NET 登录控件 (<xref:System.Web.UI.WebControls.Login>， <xref:System.Web.UI.WebControls.LoginView>， <xref:System.Web.UI.WebControls.LoginStatus>， <xref:System.Web.UI.WebControls.LoginName>，和<xref:System.Web.UI.WebControls.PasswordRecovery>) 封装几乎所有提示用户输入凭据并在成员资格系统中验证凭据所需的逻辑和可以是以编程方式检查使用来代替<xref:System.Web.Security.Membership>类。  
  
> [!IMPORTANT]
>  此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public static string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.Membership.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the application.</summary>
        <value>应用程序的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.ApplicationName%2A>用于标识特定于应用程序的用户。 即，同一用户名称可以存在多个 ASP.NET 应用程序指定不同的数据库中<xref:System.Web.Security.Membership.ApplicationName%2A>。 这使多个应用程序能够使用相同的数据库来存储用户信息而不会遇到重复的用户名称冲突。 或者，多个 ASP.NET 应用程序可以使用相同的用户数据库，通过指定相同<xref:System.Web.Security.Membership.ApplicationName%2A>。 <xref:System.Web.Security.Membership.ApplicationName%2A>可以在 Web 应用程序的配置中以编程方式或以声明方式设置。  
  
> [!CAUTION]
>  因为一个默认成员资格提供程序实例用于所有服务的请求<xref:System.Web.HttpApplication>对象，您可以有多个请求并发执行，并尝试设置<xref:System.Web.Security.Membership.ApplicationName%2A>属性值。 <xref:System.Web.Security.Membership.ApplicationName%2A>属性不是线程安全的多个写操作，并不断变化<xref:System.Web.Security.Membership.ApplicationName%2A>属性值可能会导致多个用户的应用程序的意外行为。 我们建议你避免编写代码，用户可设置<xref:System.Web.Security.Membership.ApplicationName%2A>属性，除非必要，否则。 应用程序的示例设置<xref:System.Web.Security.Membership.ApplicationName%2A>属性可能需要是管理应用程序管理多个应用程序的成员身份数据。 此类应用程序应为单用户应用程序和不是 Web 应用程序。  
  
   
  
## Examples  
 下面的代码示例演示中的元素`system.web`的 ASP.NET 应用程序的 Web.config 文件的部分。 它指定应用程序使用<xref:System.Web.Security.SqlMembershipProvider>实例并设置<xref:System.Web.Security.Membership.ApplicationName%2A>到`MyApplication`。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Adds a new user to the data store.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user name for the new user.</param>
        <param name="password">The password for the new user.</param>
        <summary>Adds a new user to the data store.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object for the newly created user.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> 将新用户添加到数据存储并返回<xref:System.Web.Security.MembershipUser>新创建的用户的对象。 如果用户创建失败，<xref:System.Web.Security.MembershipCreateUserException>引发。 你可以检索<xref:System.Web.Security.MembershipCreateStatus>值从<xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A>属性<xref:System.Web.Security.MembershipCreateUserException>，该值指示用户创建失败的原因。  
  
 成员资格用户已创建且您拥有对引用<xref:System.Web.Security.MembershipUser>为该用户对象，可以修改该用户的设置与<xref:System.Web.Security.MembershipUser>公共方法，如<xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A>应用程序的其中<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>是`true`，或通过设置属性值的<xref:System.Web.Security.MembershipUser>对象并将它们传递给<xref:System.Web.Security.Membership.UpdateUser%2A>方法。  
  
 如果用户已存在于应用程序的数据源，可以获取<xref:System.Web.Security.MembershipUser>与现有的用户对象<xref:System.Web.Security.Membership.GetUser%2A>方法。  
  
 <xref:System.Web.Security.SqlMembershipProvider>提供一个选项以便为每个用户都需要唯一的电子邮件地址。 如果<xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>属性是`true`，你将需要使用之一<xref:System.Web.Security.Membership.CreateUser%2A>重载，您可以指定要创建的用户的电子邮件地址。 否则为<xref:System.Web.Security.MembershipCreateUserException>将引发。  
  
 删除所有参数值的前导和尾随空格。  
  
   
  
## Examples  
 下面的代码示例创建一个新 ASP.NET 应用程序配置为使用 forms 身份验证和 ASP.NET 成员资格用户。 如果未成功创建用户，则向用户显示一条消息。 否则，用户重定向到应用程序的登录页。  
  
> [!IMPORTANT]
>  此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/createuser2cs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.Membership#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/createuser2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipCreateUserException">The user was not created. Check the <see cref="P:System.Web.Security.MembershipCreateUserException.StatusCode" /> property for a <see cref="T:System.Web.Security.MembershipCreateStatus" /> value.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string * string -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password, email)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user name for the new user.</param>
        <param name="password">The password for the new user.</param>
        <param name="email">The email address for the new user.</param>
        <summary>Adds a new user with a specified email address to the data store.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object for the newly created user.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> 将新用户添加到数据存储并返回<xref:System.Web.Security.MembershipUser>新创建的用户的对象。 如果用户创建失败，<xref:System.Web.Security.MembershipCreateUserException>引发。 你可以检索<xref:System.Web.Security.MembershipCreateStatus>值从<xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A>属性<xref:System.Web.Security.MembershipCreateUserException>，该值指示用户创建失败的原因。  
  
 成员资格用户已创建且您拥有对引用<xref:System.Web.Security.MembershipUser>为该用户对象，可以修改该用户的设置与<xref:System.Web.Security.MembershipUser>公共方法，如<xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A>应用程序的其中<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>是`true`，或通过设置属性值的<xref:System.Web.Security.MembershipUser>对象并将它们传递给<xref:System.Web.Security.Membership.UpdateUser%2A>方法。  
  
 如果用户已存在于应用程序的数据源，可以获取<xref:System.Web.Security.MembershipUser>与现有的用户对象<xref:System.Web.Security.Membership.GetUser%2A>方法。  
  
 删除所有参数值的前导和尾随空格。  
  
   
  
## Examples  
 下面的代码示例创建一个新 ASP.NET 应用程序配置为使用 forms 身份验证和 ASP.NET 成员资格用户。 如果未成功创建用户，则向用户显示一条消息。 否则，用户重定向到应用程序的登录页。  
  
> [!IMPORTANT]
>  此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/createuser1cs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.Membership#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/createuser1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipCreateUserException">The user was not created. Check the <see cref="P:System.Web.Security.MembershipCreateUserException.StatusCode" /> property for a <see cref="T:System.Web.Security.MembershipCreateStatus" /> value.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string * string * string * string * bool *  -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">The user name for the new user.</param>
        <param name="password">The password for the new user.</param>
        <param name="email">The email address for the new user.</param>
        <param name="passwordQuestion">The password-question value for the membership user.</param>
        <param name="passwordAnswer">The password-answer value for the membership user.</param>
        <param name="isApproved">A Boolean that indicates whether the new user is approved to log on.</param>
        <param name="status">A <see cref="T:System.Web.Security.MembershipCreateStatus" /> indicating that the user was created successfully or the reason that creation failed.</param>
        <summary>Adds a new user with specified property values to the data store and returns a status parameter indicating that the user was successfully created or the reason the user creation failed.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object for the newly created user. If no user was created, this method returns <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> 将新用户添加到数据存储并返回<xref:System.Web.Security.MembershipUser>新创建的用户的对象。 如果用户创建失败，则可以检索<xref:System.Web.Security.MembershipCreateStatus>值从`status`输出参数，该值指示用户创建失败的原因。  
  
 <xref:System.Web.Security.Membership.CreateUser%2A>方法将返回`null`如果`password`为空字符串或`null`，`username`为空字符串或`null`或包含逗号 （，）、`passwordQuestion`不`null`和为空字符串，或`passwordAnswer`不`null`和包含一个空字符串。  
  
 成员资格用户已创建且您拥有对引用<xref:System.Web.Security.MembershipUser>为该用户对象，可以修改该用户的设置与<xref:System.Web.Security.MembershipUser>公共方法，以及设置的属性值<xref:System.Web.Security.MembershipUser>对象，然后将<xref:System.Web.Security.MembershipUser>对象传递给<xref:System.Web.Security.Membership.UpdateUser%2A>方法。  
  
 如果用户已存在于应用程序的数据源，可以获取<xref:System.Web.Security.MembershipUser>与现有的用户对象<xref:System.Web.Security.Membership.GetUser%2A>方法。  
  
 删除所有字符串参数值的前导和尾随空格。  
  
   
  
## Examples  
 下面的代码示例创建一个新 ASP.NET 应用程序配置为使用 forms 身份验证和 ASP.NET 成员资格用户。 如果未成功创建用户，则向用户显示一条消息。 否则，用户重定向到应用程序的登录页。  
  
> [!IMPORTANT]
>  此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string * string * string * string * bool * obj *  -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, providerUserKey, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">The user name for the new user.</param>
        <param name="password">The password for the new user.</param>
        <param name="email">The email address for the new user.</param>
        <param name="passwordQuestion">The password-question value for the membership user.</param>
        <param name="passwordAnswer">The password-answer value for the membership user.</param>
        <param name="isApproved">A Boolean that indicates whether the new user is approved to log on.</param>
        <param name="providerUserKey">The user identifier for the user that should be stored in the membership data store.</param>
        <param name="status">A <see cref="T:System.Web.Security.MembershipCreateStatus" /> indicating that the user was created successfully or the reason creation failed.</param>
        <summary>Adds a new user with specified property values and a unique identifier to the data store and returns a status parameter indicating that the user was successfully created or the reason the user creation failed.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object for the newly created user. If no user was created, this method returns <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> 将新用户添加到数据存储并返回<xref:System.Web.Security.MembershipUser>新创建的用户的对象。 如果用户创建失败，则可以检索<xref:System.Web.Security.MembershipCreateStatus>值从`status`输出参数，该值指示用户创建失败的原因。 你可以通过使用指定的用户，如数据库的主键值的唯一标识符`providerUserKey`参数。  
  
 <xref:System.Web.Security.Membership.CreateUser%2A>方法将返回`null`如果`password`为空字符串或`null`，`username`为空字符串或`null`或包含逗号 （，）、`passwordQuestion`不`null`和包含一个空字符串，或`passwordAnswer`不`null`和包含一个空字符串。  
  
 成员资格用户已创建且您拥有对引用<xref:System.Web.Security.MembershipUser>为该用户对象，可以修改该用户的设置与<xref:System.Web.Security.MembershipUser>公共方法，以及设置的属性值<xref:System.Web.Security.MembershipUser>对象，然后将<xref:System.Web.Security.MembershipUser>对象传递给<xref:System.Web.Security.Membership.UpdateUser%2A>方法。  
  
 如果用户已存在于应用程序的数据源，可以获取<xref:System.Web.Security.MembershipUser>与现有的用户对象<xref:System.Web.Security.Membership.GetUser%2A>方法。  
  
 删除所有字符串参数值的前导和尾随空格。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Deletes a user from the database.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public static bool DeleteUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.DeleteUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteUser (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member DeleteUser : string -&gt; bool" Usage="System.Web.Security.Membership.DeleteUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to delete.</param>
        <summary>Deletes a user and any related user data from the database.</summary>
        <returns>
          <see langword="true" /> if the user was deleted; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用户数据存储在数据库中为<xref:System.Web.Security.Roles>， <xref:System.Web.HttpContext.Profile%2A>，或<xref:System.Web.UI.WebControls.WebParts.WebPart>使用时，则也会删除个性化<xref:System.Web.Security.SqlRoleProvider>， <xref:System.Web.Profile.SqlProfileProvider>，和<xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider>用于数据存储的对象。  
  
   
  
## Examples  
 下面的代码示例将删除当前登录的用户以及所有相关数据。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/DeleteUsercs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.Membership#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/DeleteUservb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string or contains a comma (,).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null." /></exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public static bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberSignature Language="F#" Value="static member DeleteUser : string * bool -&gt; bool" Usage="System.Web.Security.Membership.DeleteUser (username, deleteAllRelatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to delete.</param>
        <param name="deleteAllRelatedData">
          <see langword="true" /> to delete data related to the user from the database; <see langword="false" /> to leave data related to the user in the database.</param>
        <summary>Deletes a user from the database.</summary>
        <returns>
          <see langword="true" /> if the user was deleted; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仅删除从数据库中删除的用户从配置`applicationName`。  
  
 如果`deleteAllRelatedData`是`true`，存储在数据库中为用户数据<xref:System.Web.Security.Roles>， <xref:System.Web.HttpContext.Profile%2A>，或<xref:System.Web.UI.WebControls.WebParts.WebPart>使用时，则也会删除个性化<xref:System.Web.Security.SqlRoleProvider>， <xref:System.Web.Profile.SqlProfileProvider>，和<xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider>对象数据存储。  
  
   
  
## Examples  
 下面的代码示例将删除当前登录的用户以及所有相关数据。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/DeleteUsercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/DeleteUservb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string or contains a comma (,).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public static bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnablePasswordReset { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordReset : bool" Usage="System.Web.Security.Membership.EnablePasswordReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the current membership provider is configured to allow users to reset their passwords.</summary>
        <value>如果成员资格提供程序支持密码重置，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 密码重置是指 ASP.NET 成员资格用户忘记其密码或当前的密码将不再有效时替换当前的密码为一个新的用户名称随机生成密码的能力。 这是特别有用的当密码格式设置为<xref:System.Web.Security.MembershipPasswordFormat.Hashed>，因为用户无法检索经过哈希处理的密码值。  
  
   
  
## Examples  
 下面的代码示例演示中的元素`system.web`的 ASP.NET 应用程序的 Web.config 文件的部分。 它指定应用程序使用的实例<xref:System.Web.Security.SqlMembershipProvider>并启用密码重置。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 下面的代码示例首先验证<xref:System.Web.Security.Membership.EnablePasswordReset%2A>是`true`，然后重置用户的密码，并返回自动生成的新密码。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ResetPasswordcs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ResetPasswordvb.aspx#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public static bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordRetrieval : bool" Usage="System.Web.Security.Membership.EnablePasswordRetrieval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the current membership provider is configured to allow users to retrieve their passwords.</summary>
        <value>
          <see langword="true" /> 如果成员资格提供程序支持密码检索;否则为<see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A>是`false`，基础成员资格提供程序可能会引发<xref:System.Web.HttpException>。  
  
 .NET Framework 附带的提供程序支持多个密码格式，以增强密码的安全性。 如果密码格式设置为<xref:System.Web.Security.MembershipPasswordFormat.Hashed>，则用户将无法从数据库中检索其现有的密码。 <xref:System.Web.Security.MembershipPasswordFormat.Hashed>密码格式提供的密码值的单向编码。 密码是"哈希"，并为身份验证的数据库中存储的值进行比较。 "哈希"值不能为反编码来检索原始密码值。 有关详细信息，请参阅<xref:System.Web.Security.MembershipPasswordFormat>。  
  
   
  
## Examples  
 下面的代码示例演示中的元素`system.web`的 ASP.NET 应用程序的 Web.config 文件的部分。 它指定应用程序使用的实例<xref:System.Web.Security.SqlMembershipProvider>并启用密码检索。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="false"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 下面的代码示例首先验证<xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A>是`true`，然后检索指定的用户名的密码，并将其发送到的电子邮件地址指定的用户。  
  
> [!IMPORTANT]
>  对于需要高的安全级别的站点不建议以使用电子邮件的明文形式返回的密码。 对于高安全站点，我们建议你返回使用加密，如 SSL 的密码。  
>   
>  此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindUsersByEmail">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets a collection of membership users where the email address contains the specified email address to match.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByEmail (emailToMatch As String) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch);" />
      <MemberSignature Language="F#" Value="static member FindUsersByEmail : string -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByEmail emailToMatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">The email address to search for.</param>
        <summary>Gets a collection of membership users where the email address contains the specified email address to match.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> that contains all users that match the <paramref name="emailToMatch" /> parameter.  Leading and trailing spaces are trimmed from the <paramref name="emailToMatch" /> parameter value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.FindUsersByEmail%2A> 返回成员资格用户的列表的电子邮件地址匹配所提供`emailToMatch`已配置的`applicationName`。  
  
 <xref:System.Web.Security.SqlMembershipProvider>执行使用 LIKE 子句针对其搜索`emailToMatch`参数。 像子句可以用在 SQL Server 支持任何通配符`emailToMatch`参数值。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Web.Security.Membership.FindUsersByEmail%2A>从成员资格数据库中检索成员资格用户信息方法根据用户输入和数据页中显示结果。  
  
> [!IMPORTANT]
>  此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/FindUsersByEmailcs.aspx#9)]
 [!code-aspx-vb[System.Web.Security.Membership#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/FindUsersByEmailvb.aspx#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindUsersByEmail : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByEmail (emailToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">The email address to search for.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">The total number of matched users.</param>
        <summary>Gets a collection of membership users, in a page of data, where the email address contains the specified email address to match.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> that contains a page of <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> objects beginning at the page specified by <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.FindUsersByEmail%2A> 返回成员资格用户的列表的电子邮件地址匹配所提供`emailToMatch`已配置的`applicationName`。  
  
 <xref:System.Web.Security.SqlMembershipProvider>执行使用 LIKE 子句针对其搜索`emailToMatch`参数。 像子句可以用在 SQL Server 支持任何通配符`emailToMatch`参数值。  
  
 返回的结果<xref:System.Web.Security.Membership.FindUsersByEmail%2A>受到`pageIndex`和`pageSize`参数。 `pageSize`参数标识的最大数<xref:System.Web.Security.MembershipUser>对象中返回<xref:System.Web.Security.MembershipUserCollection>。 `pageIndex`参数标识要返回，其中 0 标识的第一页的结果页。 `totalRecords`参数是`out`参数设置为匹配的成员资格用户的总数`emailToMatch`值。 例如，如果找到 13 个`emailToMatch`匹配的一部分或整个电子邮件地址，与`pageIndex`值为 1，`pageSize`为 5，<xref:System.Web.Security.MembershipUserCollection>返回将包含通过返回的第 10 个用户的第六个。 `totalRecords` 将设置为 13。  
  
 删除前导和尾随空格`emailToMatch`参数值。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Web.Security.Membership.FindUsersByEmail%2A>从成员资格数据库中检索成员资格用户信息方法根据用户输入和数据页中显示结果。  
  
> [!IMPORTANT]
>  此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByEmailcs.aspx#13)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByEmailvb.aspx#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> is less than zero.  -or-  <paramref name="pageSize" /> is less than 1.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindUsersByName">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets a collection of membership users where the user name contains the specified user name to match.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByName (usernameToMatch As String) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="static member FindUsersByName : string -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByName usernameToMatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">The user name to search for.</param>
        <summary>Gets a collection of membership users where the user name contains the specified user name to match.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> that contains all users that match the <paramref name="usernameToMatch" /> parameter.  Leading and trailing spaces are trimmed from the <paramref name="usernameToMatch" /> parameter value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> 返回成员资格用户的列表在用户名与匹配所提供`usernameToMatch`已配置的`applicationName`。  
  
 <xref:System.Web.Security.SqlMembershipProvider>执行使用 LIKE 子句针对其搜索`usernameToMatch`参数。 像子句可以用在 SQL Server 支持任何通配符`usernameToMatch`参数值。  
  
 删除所有参数值的前导和尾随空格。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Web.Security.Membership.FindUsersByName%2A>从成员资格数据库中检索成员资格用户信息方法根据用户输入和数据页中显示结果。  
  
> [!IMPORTANT]
>  此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/FindUsersByNamecs.aspx#10)]
 [!code-aspx-vb[System.Web.Security.Membership#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/FindUsersByNamevb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> is an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindUsersByName : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByName (usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">The user name to search for.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">The total number of matched users.</param>
        <summary>Gets a collection of membership users, in a page of data, where the user name contains the specified user name to match.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> that contains a page of <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> objects beginning at the page specified by <paramref name="pageIndex" />.  Leading and trailing spaces are trimmed from the <paramref name="usernameToMatch" /> parameter value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> 返回成员资格用户的列表在用户名与匹配所提供`usernameToMatch`已配置的`applicationName`。  
  
 <xref:System.Web.Security.SqlMembershipProvider>执行使用 LIKE 子句针对其搜索`usernameToMatch`参数。 像子句可以用在 SQL Server 支持任何通配符`usernameToMatch`参数值。  
  
 返回的结果<xref:System.Web.Security.Membership.FindUsersByName%2A>受到`pageIndex`和`pageSize`参数。 `pageSize`参数标识的最大数<xref:System.Web.Security.MembershipUser>对象中返回<xref:System.Web.Security.MembershipUserCollection>。 `pageIndex`参数标识要返回，其中 0 标识的第一页的结果页。 `totalRecords`参数是`out`参数设置为匹配的成员资格用户的总数`usernameToMatch`值。 例如，如果找到 13 个`usernameToMatch`匹配的一部分或整个的用户名，和`pageIndex`值为 1，`pageSize`为 5，<xref:System.Web.Security.MembershipUserCollection>返回将包含通过返回的第 10 个用户的第六个。 `totalRecords` 将设置为 13。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Web.Security.Membership.FindUsersByName%2A>从成员资格数据库中检索成员资格用户信息方法根据用户输入和数据页中显示结果。  
  
> [!IMPORTANT]
>  此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByNamecs.aspx#12)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByNamevb.aspx#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> is an empty string.  -or-  <paramref name="pageIndex" /> is less than zero.  -or-  <paramref name="pageSize" /> is less than 1.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GeneratePassword">
      <MemberSignature Language="C#" Value="public static string GeneratePassword (int length, int numberOfNonAlphanumericCharacters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GeneratePassword(int32 length, int32 numberOfNonAlphanumericCharacters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GeneratePassword (length As Integer, numberOfNonAlphanumericCharacters As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GeneratePassword(int length, int numberOfNonAlphanumericCharacters);" />
      <MemberSignature Language="F#" Value="static member GeneratePassword : int * int -&gt; string" Usage="System.Web.Security.Membership.GeneratePassword (length, numberOfNonAlphanumericCharacters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="numberOfNonAlphanumericCharacters" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">The number of characters in the generated password. The length must be between 1 and 128 characters.</param>
        <param name="numberOfNonAlphanumericCharacters">The minimum number of non-alphanumeric characters (such as @, #, !, %, &amp;, and so on) in the generated password.</param>
        <summary>Generates a random password of the specified length.</summary>
        <returns>A random password of the specified length.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GeneratePassword%2A>方法可用于生成随机密码并最常使用的<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>方法实现的成员资格提供程序的用户密码重置为新的临时密码。  
  
 生成的密码仅包含字母数字字符和以下标点符号： `!@#$%^&*()_-+=[{]};:<>|./?`。 生成的密码中包含没有隐藏或非可打印的控制字符。  
  
> [!NOTE]
>  通过创建随机密码<xref:System.Web.Security.Membership.GeneratePassword%2A>方法不能保证传递中的正则表达式<xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>属性。 但是，随机的密码将满足条件由建立<xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>属性和`numberOfNonAlphanumericCharacters`参数。  
  
   
  
## Examples  
 下面的代码示例创建新的成员资格用户，并使用<xref:System.Web.Security.Membership.GeneratePassword%2A>方法以初始化新的随机值，向用户显示用户的密码。  
  
> [!IMPORTANT]
>  此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/GeneratePasswordcs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.Membership#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/GeneratePasswordvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="length" /> is less than 1 or greater than 128 -or-  <paramref name="numberOfNonAlphanumericCharacters" /> is less than 0 or greater than <paramref name="length" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllUsers">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets a collection of the users in the database.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection GetAllUsers ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection GetAllUsers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetAllUsers" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllUsers () As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ GetAllUsers();" />
      <MemberSignature Language="F#" Value="static member GetAllUsers : unit -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.GetAllUsers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a collection of all the users in the database.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> of <see cref="T:System.Web.Security.MembershipUser" /> objects representing all of the users in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetAllUsers%2A> 返回集合的形式为应用程序的所有成员资格用户的信息<xref:System.Web.Security.MembershipUser>对象。 请谨慎使用<xref:System.Web.Security.Membership.GetAllUsers%2A>对于非常大的用户数据库，作为生成的方法<xref:System.Web.Security.MembershipUserCollection>在你的 ASP.NET 页可能会降低你的应用程序的性能。  
  
   
  
## Examples  
 下面的代码示例返回的用户具有的用户数的计数列表处于联机状态。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member GetAllUsers : int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.GetAllUsers (pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">The index of the page of results to return. Use 0 to indicate the first page.</param>
        <param name="pageSize">The size of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="totalRecords">The total number of users.</param>
        <summary>Gets a collection of all the users in the database in pages of data.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> of <see cref="T:System.Web.Security.MembershipUser" /> objects representing all the users in the database for the configured <see langword="applicationName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回的结果<xref:System.Web.Security.Membership.GetAllUsers%2A>受到`pageIndex`和`pageSize`参数。 `pageSize`参数标识的最大数<xref:System.Web.Security.MembershipUser>对象中返回<xref:System.Web.Security.MembershipUserCollection>。 `pageIndex`参数标识要返回，其中 0 标识的第一页的结果页。 `totalRecords`参数是`out`参数，它设置为已配置的成员资格用户的总数`applicationName`。 例如，如果有 13 个用户配置的`applicationName`，和`pageIndex`值为 1，`pageSize`为 5，<xref:System.Web.Security.MembershipUserCollection>返回将包含通过返回的第 10 个用户的第六个。 `totalRecords` 将设置为 13。  
  
   
  
## Examples  
 下面的代码示例返回的用户列表中具有的用户数的计数的数据页处于联机状态。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> is less than zero.  -or-  <paramref name="pageSize" /> is less than 1.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public static int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNumberOfUsersOnline();" />
      <MemberSignature Language="F#" Value="static member GetNumberOfUsersOnline : unit -&gt; int" Usage="System.Web.Security.Membership.GetNumberOfUsersOnline " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the number of users currently accessing an application.</summary>
        <returns>The number of users currently accessing an application.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> 返回当前的用户数<xref:System.Web.Security.Membership.ApplicationName%2A>上一次活动日期大于当前时间更少<xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>。 上一次活动日期/时间戳更新时通过验证用户凭据的当前日期和时间为<xref:System.Web.Security.Membership.ValidateUser%2A>或<xref:System.Web.Security.Membership.UpdateUser%2A>方法或在调用时<xref:System.Web.Security.Membership.GetUser%2A>重载采用任何参数或另一个使用`userIsOnline`参数来指定应更新的日期/时间戳。  
  
   
  
## Examples  
 下面的代码示例返回的用户具有的用户数的计数列表处于联机状态。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets the information for a membership user from the data source.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser () As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser();" />
      <MemberSignature Language="F#" Value="static member GetUser : unit -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the information from the data source and updates the last-activity date/time stamp for the current logged-on membership user.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the current logged-on user.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser> 从数据源中检索用户信息并创建<xref:System.Web.Security.MembershipUser>使用返回的数据填充的对象。 如果你使用之一<xref:System.Web.Security.Membership.GetUser%2A>重载不采用`username`参数，<xref:System.Web.Security.Membership.GetUser%2A>返回当前登录的成员资格用户的信息。 由标识当前的登录的成员资格用户<xref:System.Security.Principal.IIdentity.Name%2A>在当前用户的<xref:System.Web.HttpContext>。  
  
 你还可以指定是否希望<xref:System.Web.Security.Membership.GetUser%2A>若要更新的上一次活动日期/时间戳的用户正在检索使用`userIsOnline`参数。 <xref:System.Web.Security.Membership.GetUser%2A>不采用重载`userIsOnline`参数，`GetUser()`隐式用户的更新上一次活动日期/时间戳。 `GetUser(System.String)` 和`GetUser(System.Object)`不这样做。  
  
   
  
## Examples  
 下面的代码示例更新上一次活动日期/时间戳的当前登录的成员资格用户和显示 ASP.NET 页中的用户名。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/default1cs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.Membership#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/default1vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">No membership user is currently logged in.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(bool userIsOnline);" />
      <MemberSignature Language="F#" Value="static member GetUser : bool -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser userIsOnline" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userIsOnline">If <see langword="true" />, updates the last-activity date/time stamp for the specified user.</param>
        <summary>Gets the information from the data source for the current logged-on membership user. Updates the last-activity date/time stamp for the current logged-on membership user, if specified.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the current logged-on user.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A>方法从数据源中检索用户信息并创建<xref:System.Web.Security.MembershipUser>使用返回的数据填充的对象。 如果你使用之一<xref:System.Web.Security.Membership.GetUser%2A>重载不采用`username`参数，<xref:System.Web.Security.Membership.GetUser%2A>返回当前登录的成员资格用户的信息。 由标识当前的登录的成员资格用户<xref:System.Security.Principal.IIdentity.Name%2A>在当前用户的<xref:System.Web.HttpContext>。  
  
 你还可以指定是否希望<xref:System.Web.Security.Membership.GetUser%2A>若要更新的上一次活动日期/时间戳的用户正在检索使用`userIsOnline`参数。 <xref:System.Web.Security.Membership.GetUser%2A>不采用重载`userIsOnline`参数，`GetUser()`隐式用户的更新上一次活动日期/时间戳。 `GetUser(System.String)` 和`GetUser(System.Object)`不这样做。  
  
   
  
## Examples  
 下面的代码示例显示用户 ASP.NET 页中的当前登录的成员资格用户的名称而无需更新的上一次活动日期/时间戳的用户。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/default2cs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.Membership#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/default2vb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">No membership user is currently logged in.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (object providerUserKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(object providerUserKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (providerUserKey As Object) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey);" />
      <MemberSignature Language="F#" Value="static member GetUser : obj -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser providerUserKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">The unique user identifier from the membership data source for the user.</param>
        <summary>Gets the information from the data source for the membership user associated with the specified unique identifier.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the user associated with the specified unique identifier.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A>方法从数据源中检索用户信息并创建<xref:System.Web.Security.MembershipUser>使用返回的数据填充的对象。 从指定使用的数据源使用的唯一标识符标识该用户`providerUserKey`参数。  
  
 此外可以指定是否希望<xref:System.Web.Security.Membership.GetUser%2A>若要更新的上一次活动日期/时间戳与正在检索用户`userIsOnline`参数。 <xref:System.Web.Security.Membership.GetUser%2A>不采用重载`userIsOnline`参数，`GetUser()`隐式用户的更新上一次活动日期/时间戳。 `GetUser(System.String)` 和`GetUser(System.Object)`不这样做  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerUserKey" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (username As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member GetUser : string -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to retrieve.</param>
        <summary>Gets the information from the data source for the specified membership user.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the specified user. If the <paramref name="username" /> parameter does not correspond to an existing user, this method returns <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A>方法从数据源中检索用户信息并创建<xref:System.Web.Security.MembershipUser>使用返回的数据填充的对象。 如果你使用之一<xref:System.Web.Security.Membership.GetUser%2A>重载不采用`username`参数，<xref:System.Web.Security.Membership.GetUser%2A>返回当前登录的成员资格用户的信息。 由标识当前的登录的成员资格用户<xref:System.Security.Principal.IIdentity.Name%2A>在当前用户的<xref:System.Web.HttpContext>。  
  
 此外可以指定是否希望<xref:System.Web.Security.Membership.GetUser%2A>若要更新的上一次活动日期/时间戳与正在检索用户`userIsOnline`参数。 <xref:System.Web.Security.Membership.GetUser%2A>不采用重载`userIsOnline`参数，<xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType>隐式用户的更新上一次活动日期/时间戳。 <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> 和<xref:System.Web.Security.Membership.GetUser%2A>不这样做。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Web.Security.Membership.GetUser%2A>方法以返回<xref:System.Web.Security.MembershipUser>当前登录的用户和更新的电子邮件地址的用户对象。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> contains a comma (,).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="static member GetUser : obj * bool -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser (providerUserKey, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">The unique user identifier from the membership data source for the user.</param>
        <param name="userIsOnline">If <see langword="true" />, updates the last-activity date/time stamp for the specified user.</param>
        <summary>Gets the information from the data source for the membership user associated with the specified unique identifier. Updates the last-activity date/time stamp for the user, if specified.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the user associated with the specified unique identifier.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A>方法从数据源中检索用户信息并创建<xref:System.Web.Security.MembershipUser>使用返回的数据填充的对象。 附带中指定的数据源中的唯一标识符标识该用户`providerUserKey`参数。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerUserKey" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="static member GetUser : string * bool -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser (username, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to retrieve.</param>
        <param name="userIsOnline">If <see langword="true" />, updates the last-activity date/time stamp for the specified user.</param>
        <summary>Gets the information from the data source for the specified membership user. Updates the last-activity date/time stamp for the user, if specified.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the specified user. If the <paramref name="username" /> parameter does not correspond to an existing user, this method returns <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A>方法从数据源中检索用户信息并创建<xref:System.Web.Security.MembershipUser>使用返回的数据填充的对象。  
  
 如果你使用之一<xref:System.Web.Security.Membership.GetUser%2A>重载不采用`username`参数，<xref:System.Web.Security.Membership.GetUser%2A>返回当前登录的成员资格用户的信息。 由标识当前的登录的成员资格用户<xref:System.Security.Principal.IIdentity.Name%2A>在当前用户的<xref:System.Web.HttpContext>。  
  
 此外可以指定是否希望<xref:System.Web.Security.Membership.GetUser%2A>若要更新的上一次活动日期/时间戳与正在检索用户`userIsOnline`参数。 <xref:System.Web.Security.Membership.GetUser%2A>不采用重载`userIsOnline`参数，<xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType>隐式用户的更新上一次活动日期/时间戳。 <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> 和<xref:System.Web.Security.Membership.GetUser%2A>不这样做。  
  
   
  
## Examples  
 下面的代码示例检索指定的用户名的密码，并将其发送到的电子邮件地址指定的用户。 调用<xref:System.Web.Security.Membership.GetUser%2A>指定上, 一次活动日期/时间戳的用户不会更新。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> contains a comma (,).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public static string GetUserNameByEmail (string emailToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetUserNameByEmail(string emailToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUserNameByEmail (emailToMatch As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetUserNameByEmail(System::String ^ emailToMatch);" />
      <MemberSignature Language="F#" Value="static member GetUserNameByEmail : string -&gt; string" Usage="System.Web.Security.Membership.GetUserNameByEmail emailToMatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">The email address to search for.</param>
        <summary>Gets a user name where the email address for the user matches the specified email address.</summary>
        <returns>The user name where the email address for the user matches the specified email address. If no match is found, <see langword="null" /> is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUserNameByEmail%2A> 可以用于检索这种情况，其中用户不知道用户名称，但不能确定其电子邮件地址中的成员资格用户的用户名。 如果数据存储区中的多个用户具有相同的电子邮件地址，则返回遇到的第一个用户名。  
  
 删除所有参数值的前导和尾随空格。  
  
   
  
## Examples  
 下面的代码示例检索指定的电子邮件地址的用户名。  
  
> [!IMPORTANT]
>  此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GetUserByEmailcs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GetUserByEmailvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithmType">
      <MemberSignature Language="C#" Value="public static string HashAlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string HashAlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.HashAlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property HashAlgorithmType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ HashAlgorithmType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithmType : string" Usage="System.Web.Security.Membership.HashAlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The identifier of the algorithm used to hash passwords.</summary>
        <value>使用哈希密码，或为空以使用默认哈希算法的算法标识符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.HashAlgorithmType%2A>属性标识使用的自定义的哈希算法<xref:System.Web.Security.Membership>类。 你设置<xref:System.Web.Security.Membership.HashAlgorithmType%2A>属性使用`hashAlgorithmType`元素的特性。  
  
 .NET Framework 可以配置自定义加密类使用的元素的配置节。 <xref:System.Web.Security.Membership.HashAlgorithmType%2A>属性必须与匹配`name`元素中的元素的属性。 有关详细信息，请参阅[将算法名称映射到加密类](~/docs/framework/configure-apps/map-algorithm-names-to-cryptography-classes.md)。  
  
 如果<xref:System.Web.Security.Membership.HashAlgorithmType%2A>未设置属性，<xref:System.Web.Security.Membership>类使用在中设置的哈希算法`validation`元素的特性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public static int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxInvalidPasswordAttempts : int" Usage="System.Web.Security.Membership.MaxInvalidPasswordAttempts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.</summary>
        <value>锁定成员资格用户之前允许的无效密码或密码答案尝试次数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>属性与结合工作<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>属性以防止不需要的源使用重复尝试猜测的密码或密码提示问题答案的成员资格用户。  
  
 如果成员资格用户是否大于或等于的值输入数无效密码或密码提示问题答案<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>属性中指定的分钟数<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>属性，则用户无法访问网站设置<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>属性`true`直到用户解锁通过调用<xref:System.Web.Security.MembershipUser.UnlockUser%2A>方法。  
  
 如果值之前提供有效的密码或密码提示问题答案<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>达到属性，跟踪的无效尝试次数的计数器设置为零。  
  
 无效的密码和密码提示问题答案尝试分别进行跟踪。 例如，如果<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>属性设置为 5，用户具有最多五个尝试输入正确的密码和多达五次尝试不被锁定的情况下输入正确的密码答案。  
  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>在该应用程序配置中设置了属性值`maxInvalidPasswordAttempts`配置元素的属性。  
  
 如果<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>属性是`false`，则不会跟踪无效密码提示问题答案尝试次数。  
  
   
  
## Examples  
 下面的代码示例演示中的元素`system.web`的应用程序的 Web.config 文件的部分。 它指定应用程序使用的实例<xref:System.Web.Security.SqlMembershipProvider>类以提供成员资格服务，并设置`maxInvalidPasswordAttempts`属性设为五个无效的尝试次数和`passwordAttemptWindow`到 30 分钟。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      maxInvalidPasswordAttempts="5"  
      passwordAttemptWindow="30"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public static int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredNonAlphanumericCharacters : int" Usage="System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minimum number of special characters that must be present in a valid password.</summary>
        <value>有效密码中必须包含的最少特殊字符数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>属性返回的最小为在指定的成员资格提供程序创建一个有效的密码时必须输入的特殊、 非字母数字字符数<xref:System.Web.Security.Membership.Provider%2A>属性。  
  
 <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>在该应用程序配置中设置了属性值`minRequiredNonAlphanumericCharacters`配置元素的属性。  
  
 非字母数字字符是为其字符<xref:System.Char.IsLetterOrDigit%2A>方法返回`false`。  
  
   
  
## Examples  
 下面的代码示例演示中的配置元素`system.web`的应用程序的 Web.config 文件的部分。 它指定应用程序使用的实例<xref:System.Web.Security.SqlMembershipProvider>类以提供成员资格服务，并设置`minRequiredNonAlphanumericCharacters`属性设为 1 个字符。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredNonAlphanumericCharacters="1"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public static int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MinRequiredPasswordLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredPasswordLength : int" Usage="System.Web.Security.Membership.MinRequiredPasswordLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minimum length required for a password.</summary>
        <value>密码所需的最小长度。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>属性获取的最小为在指定的成员资格提供程序创建一个有效的密码时必须输入的字符数<xref:System.Web.Security.Membership.Provider%2A>属性。  
  
 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>在该应用程序配置中设置了属性值`minRequiredPasswordLength`配置元素的属性。  
  
   
  
## Examples  
 下面的代码示例演示中的配置元素`system.web`的应用程序的 Web.config 文件的部分。 它指定应用程序使用的实例<xref:System.Web.Security.SqlMembershipProvider>类以提供成员资格服务，并设置`minRequiredPasswordLength`属性设为七个字符。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredPasswordLength="7"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public static int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int PasswordAttemptWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordAttemptWindow : int" Usage="System.Web.Security.Membership.PasswordAttemptWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the time window between which consecutive failed attempts to provide a valid password or password answer are tracked.</summary>
        <value>时间窗口中，以分钟为单位，在此期间连续失败尝试提供有效的密码或密码提示问题答案进行跟踪。 默认值为 10 分钟。 如果当前的失败的尝试和最后一次失败的尝试之间的间隔大于<see cref="P:System.Web.Security.Membership.PasswordAttemptWindow" />属性设置，每个失败的尝试被处理，就像它是第一次失败的尝试。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>属性与结合工作<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>属性，以帮助防止不需要的源猜测的密码或密码提示问题答案的成员资格用户通过反复尝试。 当用户尝试登录、 更改或重置他或她的密码时，在指定的时间窗口内只允许一定数量的连续尝试次数。 中指定的此时间窗口长度<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>属性，它标识的无效尝试之间所允许的分钟数。  
  
 如果的用户进行的连续失败尝试次数重置他或她的密码等于中存储的值<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>属性，且时间自以来所经过最后一次的无效尝试中指定的分钟数小于<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>属性，则成员资格用户被锁定。通过设置锁定用户<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>属性`true`直到用户解锁通过调用<xref:System.Web.Security.MembershipUser.UnlockUser%2A>方法。  
  
 如果当前的失败的尝试和最后一次失败的尝试之间的间隔大于<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>属性设置，当前的无效尝试计为第一个。 如果在达到最大允许的无效尝试次数之前提供有效的密码提示问题答案，则的无效密码提示问题答案尝试次数的计数设置为 0 （零）。 如果之前所允许的最大数量无效提供一个有效的密码，则尝试达到的无效密码尝试次数的计数和的无效密码提示问题答案尝试次数的计数设置为 0 （零）。  
  
 无效的密码和密码提示问题答案尝试次数累积独立于另一个。 例如，如果<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>设置为 5，和三个无效的密码尝试，随后进行了两个无效的密码提示问题答案尝试，两个更多的无效密码尝试 （或三个更多的无效密码提示问题答案尝试） 必须内进行<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>成员资格用户被锁定。  
  
 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>使用应用程序配置中设置属性值`passwordAttemptWindow`节的配置元素属性。  
  
 如果<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>属性设置为`false`，则不会跟踪无效密码提示问题答案尝试次数。  
  
   
  
## Examples  
 下面的代码示例演示中的元素`system.web`的 ASP.NET 应用程序的 Web.config 文件的部分。 它指定应用程序使用的实例<xref:System.Web.Security.SqlMembershipProvider>和设置`maxInvalidPasswordAttempts`属性设为五个无效的尝试次数和`passwordAttemptWindow`到 30 分钟。  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      maxInvalidPasswordAttempts="5"  
      passwordAttemptWindow="30"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public static string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordStrengthRegularExpression : string" Usage="System.Web.Security.Membership.PasswordStrengthRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the regular expression used to evaluate a password.</summary>
        <value>用于计算密码的正则表达式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>属性获取用于验证从提供程序中指定的密码复杂性的正则表达式<xref:System.Web.Security.Membership.Provider%2A>属性。  
  
 <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>属性设置在应用程序配置中使用`passwordStrengthRegularExpression`配置元素的属性。  
  
 有关正则表达式的详细信息，请参阅[.NET Framework 正则表达式](~/docs/standard/base-types/regular-expressions.md)。  
  
   
  
## Examples  
 下面的代码示例演示中的配置元素`system.web`的应用程序的 Web.config 文件的部分。 它指定应用程序使用的实例<xref:System.Web.Security.SqlMembershipProvider>类以提供成员资格服务，并设置`passwordStrengthRegularExpression`属性设置为验证密码的正则表达式满足以下条件：  
  
-   大于七个字符。  
  
-   包含至少一个数字。  
  
-   包含至少一个特殊的 （非字母数字） 字符。  
  
 如果密码不满足这些条件，密码不接受的成员资格提供程序。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression=" @\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
   </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Security.MembershipProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Provider As MembershipProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::MembershipProvider ^ Provider { System::Web::Security::MembershipProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.Security.MembershipProvider" Usage="System.Web.Security.Membership.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to the default membership provider for the application.</summary>
        <value>默认成员资格提供程序应用程序使用公开<see cref="T:System.Web.Security.MembershipProvider" />抽象基类。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.Provider%2A>属性使您能够直接引用应用程序的默认成员资格提供程序。 这通常用于访问自定义成员资格提供程序的成员，它们不属于<xref:System.Web.Security.MembershipProvider>抽象基类。  
  
   
  
## Examples  
 下面的代码示例访问默认<xref:System.Web.Security.SqlMembershipProvider>为应用程序使用启用<xref:System.Web.Security.Membership.Provider%2A>属性，以便确定其值的自定义<xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>属性。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/Providercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.Membership#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/Providervb.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Security.MembershipProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Providers As MembershipProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::MembershipProviderCollection ^ Providers { System::Web::Security::MembershipProviderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Web.Security.MembershipProviderCollection" Usage="System.Web.Security.Membership.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of the membership providers for the ASP.NET application.</summary>
        <value>A<see cref="T:System.Web.Security.MembershipProviderCollection" />成员资格提供程序为 ASP.NET 应用程序配置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.Providers%2A>属性引用所有应用程序启用的成员资格提供程序，包括提供程序添加应用程序的 Web.config 文件和 Machine.config 文件的所有应用程序中。 你可以控制那些成员身份提供程序可用于应用程序中使用`providers`中你的应用程序的配置部分的元素。 例如，下面的示例演示在 Web.config 文件中的应用程序中删除部分<xref:System.Web.Security.SqlMembershipProvider>实例 (`AspNetSqlProvider`) 在计算机配置文件中指定并添加<xref:System.Web.Security.SqlMembershipProvider>实例名为`SqlProvider`为应用程序的默认成员资格提供程序。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <remove name="AspNetSqlProvider" />  
          <add name="SqlProvider"  
            type="System.Web.Security.SqlMembershipProvider"  
            connectionStringName="SqlServices"  
            enablePasswordRetrieval="false"  
            enablePasswordReset="true"  
            requiresQuestionAndAnswer="true"  
            passwordFormat="Hashed"  
            applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 指定时[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)部分中，你必须指定`defaultProvider`属性。 如果不指定[元素 （ASP.NET 设置架构） 的成员身份](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)将 web.config 文件，该计算机配置中的值中使用和<xref:System.Web.Security.SqlMembershipProvider>实例名为`AspNetSqlProvider`则在建立作为`defaultProvider`.  
  
 你可以获取的提供程序的强类型化的引用<xref:System.Web.Security.Membership.Providers%2A>编制索引按名称的成员资格提供程序，然后将它强制转换为所需的类型的集合。  
  
   
  
## Examples  
 下面的代码示例列出了为应用程序和它们各自的类型启用的提供程序。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/Providerscs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.Membership#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/Providersvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public static bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresQuestionAndAnswer : bool" Usage="System.Web.Security.Membership.RequiresQuestionAndAnswer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the default membership provider requires the user to answer a password question for password reset and retrieval.</summary>
        <value>
          <see langword="true" /> 如果密码提示问题答案，才能使用密码重置和检索;否则为<see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 需要密码提示问题和答案提供额外的安全性，在检索或重置用户的密码时。 用户可以提供问题和答案创建其用户名称时，他们将可以更高版本使用，以检索或重置忘记了的密码。  
  
 <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> 时，检查<xref:System.Web.Security.MembershipUser.ResetPassword%2A>或<xref:System.Web.Security.MembershipUser.GetPassword%2A>调用。 提供使用.NET Framework 提供程序会引发<xref:System.NotSupportedException>如果<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>是`true`和提供的密码答案`null`。  
  
 如果<xref:System.Web.Security.Membership.EnablePasswordReset%2A>和<xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A>都`false`，<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>仍可用于强制实施的问题和答案创建时创建新用户的; 但是，问题和答案将不使用。 你将能够使用检索问题<xref:System.Web.Security.MembershipUser>类。  
  
 有关详细信息，请参阅 <xref:System.Web.Security.MembershipUser.ResetPassword%2A> 和 <xref:System.Web.Security.MembershipUser.GetPassword%2A>。  
  
   
  
## Examples  
 下面的代码示例演示中的元素`system.web`的 ASP.NET 应用程序的 Web.config 文件的部分。 它指定应用程序使用的实例<xref:System.Web.Security.SqlMembershipProvider>，可以让密码重置，而且在执行重置时需要密码提示问题答案。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 下面的代码示例检查的值<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>并添加所需的密码提示问题和答案以创建用户时提供的控件。  
  
> [!IMPORTANT]
>  此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public static void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberSignature Language="F#" Value="static member UpdateUser : System.Web.Security.MembershipUser -&gt; unit" Usage="System.Web.Security.Membership.UpdateUser user" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">A <see cref="T:System.Web.Security.MembershipUser" /> object that represents the user to be updated and the updated information for the user.</param>
        <summary>Updates the database with the information for the specified user.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.UpdateUser%2A> 使用，作为输入，<xref:System.Web.Security.MembershipUser>对象使用成员资格用户的当前信息填充并更新数据源的属性值与<xref:System.Web.Security.MembershipUser>对象。 你可以构造一个新<xref:System.Web.Security.MembershipUser>，或检索<xref:System.Web.Security.MembershipUser>对象在数据源中使用的当前值填充，填充<xref:System.Web.Security.Membership.GetUser%2A>， <xref:System.Web.Security.Membership.GetAllUsers%2A>， <xref:System.Web.Security.Membership.FindUsersByName%2A>，或<xref:System.Web.Security.Membership.FindUsersByEmail%2A>方法。  
  
   
  
## Examples  
 下面的代码示例将更新当前登录的用户的电子邮件地址。  
  
> [!IMPORTANT]
>  此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="user" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UserIsOnlineTimeWindow">
      <MemberSignature Language="C#" Value="public static int UserIsOnlineTimeWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 UserIsOnlineTimeWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.UserIsOnlineTimeWindow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UserIsOnlineTimeWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int UserIsOnlineTimeWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.UserIsOnlineTimeWindow : int" Usage="System.Web.Security.Membership.UserIsOnlineTimeWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies the number of minutes after the last-activity date/time stamp for a user during which the user is considered online.</summary>
        <value>最后一个活动之后的分钟数的日期/时间戳以便用户在此期间用户被视为联机。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>属性值期间对的调用将检查<xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A>。 如果<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>晚于当前日期和时间减去用户为<xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>值以分钟为单位，则用户将被视为联机。 你可以确定成员资格用户是否被视为与联机<xref:System.Web.Security.MembershipUser.IsOnline%2A>属性<xref:System.Web.Security.MembershipUser>类。  
  
 <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>为用户的凭据成功通过验证后，将更新用户<xref:System.Web.Security.Membership.ValidateUser%2A>方法。 你还可以更新<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>成员资格用户时调用的一个<xref:System.Web.Security.Membership.GetUser%2A>重载。 如果调用<xref:System.Web.Security.Membership.GetUser%2A>采用重载`userIsOnline`参数，将值指定为`true`更新<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>用户。  
  
   
  
## Examples  
 下面的代码示例演示中的元素`system.web`的 ASP.NET 应用程序的 Web.config 文件的部分。 它指定应用程序使用的实例<xref:System.Web.Security.SqlMembershipProvider>和设置`userIsOnlineTimeWindow`属性为 20 分钟。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public static bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member ValidateUser : string * string -&gt; bool" Usage="System.Web.Security.Membership.ValidateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to be validated.</param>
        <param name="password">The password for the specified user.</param>
        <summary>Verifies that the supplied user name and password are valid.</summary>
        <returns>
          <see langword="true" /> if the supplied user name and password are valid; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.ValidateUser%2A> 提供验证的用户名和密码从数据源的简单办法。 请注意，如果`username`参数为空或`null`、<xref:System.Web.HttpException>引发。  
  
   
  
## Examples  
 下面的代码示例显示配置为使用窗体身份验证的 ASP.NET 应用程序的登录页和<xref:System.Web.Security.Membership>类。 如果提供的用户凭据无效，则向用户显示一条消息。 否则，用户将重定向到最初请求的 URL<xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>方法。  
  
> [!IMPORTANT]
>  此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatingPassword">
      <MemberSignature Language="C#" Value="public static event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword" />
      <MemberSignature Language="DocId" Value="E:System.Web.Security.Membership.ValidatingPassword" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event ValidatingPassword As MembershipValidatePasswordEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Web::Security::MembershipValidatePasswordEventHandler ^ ValidatingPassword;" />
      <MemberSignature Language="F#" Value="member this.ValidatingPassword : System.Web.Security.MembershipValidatePasswordEventHandler " Usage="member this.ValidatingPassword : System.Web.Security.MembershipValidatePasswordEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipValidatePasswordEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a user is created, a password is changed, or a password is reset.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.ValidatingPassword>引发事件时<xref:System.Web.Security.MembershipProvider.CreateUser%2A>方法，<xref:System.Web.Security.MembershipProvider.ChangePassword%2A>方法，或<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>调用的成员资格提供程序方法。  
  
 你可以使用<xref:System.Web.Security.MembershipProvider.ValidatingPassword>事件来验证密码格式和的成员资格用户的值。  
  
 你可以取消当前<xref:System.Web.Security.MembershipProvider.CreateUser%2A>， <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>，或<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>通过设置的操作<xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A>属性所提供的<xref:System.Web.Security.ValidatePasswordEventArgs>到`true`期间<xref:System.Web.Security.MembershipProvider.ValidatingPassword>事件。  
  
 如果通过设置取消当前操作<xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A>属性`true`，你可以设置<xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>属性所提供的<xref:System.Web.Security.ValidatePasswordEventArgs>到描述密码验证失败的原因的异常。 调用的方法将引发异常，<xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>属性设置为。 如果<xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>属性是`null`，调用方将引发一般密码验证失败异常。  
  
   
  
## Examples  
 下面的代码示例演示<xref:System.Web.Security.MembershipProvider.ValidatingPassword>事件，用于验证用户的密码的格式并取消操作，如果密码不匹配所需的格式。  
  
 [!code-csharp[System.Web.Security.Membership#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/CreateUser3cs.aspx#11)]
 [!code-vb[System.Web.Security.Membership#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/CreateUser3vb.aspx#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>