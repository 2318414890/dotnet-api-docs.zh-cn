<Type Name="Membership" FullName="System.Web.Security.Membership">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dd4071fc135a5e328ec63addda2a14bba4464480" /><Meta Name="ms.sourcegitcommit" Value="954560a1b131dce1872e29ce5c01cd9f2c927f11" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/11/2019" /><Meta Name="ms.locfileid" Value="54235016" /></Metadata><TypeSignature Language="C#" Value="public static class Membership" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Membership extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.Membership" />
  <TypeSignature Language="VB.NET" Value="Public Class Membership" />
  <TypeSignature Language="C++ CLI" Value="public ref class Membership abstract sealed" />
  <TypeSignature Language="F#" Value="type Membership = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>验证用户凭据并管理用户设置。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership>类用于 ASP.NET 应用程序中验证用户凭据并管理用户设置，如密码和电子邮件地址。 <xref:System.Web.Security.Membership>本身，或与结合使用，可以使用类<xref:System.Web.Security.FormsAuthentication>创建 Web 应用程序或站点的用户进行身份验证的完整系统。 <xref:System.Web.UI.WebControls.Login>控件封装<xref:System.Web.Security.Membership>类提供了方便的机制，用于验证用户。  
  
> [!NOTE]
>  如果您不熟悉 ASP.NET 成员资格功能，请参阅[成员资格简介](https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100))然后再继续。 与成员资格相关的其他主题的列表，请参阅[使用成员资格管理用户](https://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd)。  
  
 <xref:System.Web.Security.Membership>类提供的功能：  
  
-   创建新用户。  
  
-   将成员身份信息 （用户名、 密码、 电子邮件地址和支持数据） 存储在 Microsoft SQL Server 或备用数据存储。  
  
-   身份验证的用户访问您的网站。 可以验证用户身份以编程方式，也可以使用<xref:System.Web.UI.WebControls.Login>控件创建要求很少或没有代码的完整的身份验证系统。  
  
-   管理密码，其中包括创建、 更改、 检索和重置密码，等等。 你可以选择配置 ASP.NET 成员资格要求的密码提示问题和答案忘记其密码的用户的密码重置和检索请求进行身份验证。  
  
 尽管 ASP.NET 成员资格是 ASP.NET 的身份验证中的独立功能，但它可以与 ASP.NET 角色管理，以便提供你的站点的授权服务集成。 此外可以与 ASP.NET 用户集成成员资格<xref:System.Web.Profile>向单个用户提供特定于应用程序可以定制的自定义项。 有关详细信息，请参阅[了解角色管理](https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6)并[ASP.NET 配置文件属性概述](https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d)。  
  
 <xref:System.Web.Security.Membership>类依赖于成员资格提供程序与数据源进行通信。 .NET Framework 包括<xref:System.Web.Security.SqlMembershipProvider>，它在 Microsoft SQL Server 数据库中，存储用户信息和<xref:System.Web.Security.ActiveDirectoryMembershipProvider>，这样您就可以在 Active Directory 或 Active Directory 应用程序模式 (ADAM) 服务器上存储用户信息。 您还可以实现一个自定义成员资格提供程序来与可由其他数据源通信<xref:System.Web.Security.Membership>类。 自定义成员资格提供程序继承<xref:System.Web.Security.MembershipProvider>抽象类。 有关详细信息，请参阅[实现成员资格提供程序](https://msdn.microsoft.com/library/d8658b8e-c962-4f64-95e1-4acce35e4582)。  
  
 默认情况下，为所有 ASP.NET 应用程序启用 ASP.NET 成员资格。 默认成员资格提供程序<xref:System.Web.Security.SqlMembershipProvider>，并且名称在计算机配置中指定`AspNetSqlProvider`。 默认实例<xref:System.Web.Security.SqlMembershipProvider>配置为连接到 Microsoft SQL Server 的本地实例。  
  
 您可以修改默认设置，以指定<xref:System.Web.Security.SqlMembershipProvider>而不`AspNetSqlProvider`实例作为默认的提供程序，或指定自定义提供程序的实例作为使用 Web.config 文件的 ASP.NET 应用程序的默认提供程序。 可以为 Web 应用程序使用指定的 ASP.NET 成员身份配置[成员身份](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))Web.config 文件中的配置节。 可以使用[提供程序](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/6d4936ht(v%3dvs.100))子节[成员身份](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))部分以指定非默认提供程序之一的成员身份提供程序。 例如，以下[成员资格](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))部分从当前的应用程序配置中删除默认成员资格提供程序并将添加一个名为新的提供程序`SqlProvider`： 连接到名为的 SQL Server 实例`AspSqlServer`.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=AspSqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <remove name="AspNetSqlProvider" />  
        <add name="SqlProvider"  
          type="System.Web.Security.SqlMembershipProvider"  
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          passwordFormat="Hashed"  
          applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
   
  
## Examples  
 下面的代码示例显示了 ASP.NET 应用程序配置为使用 forms 身份验证和 ASP.NET 成员身份的登录页。 如果提供的用户凭据无效，则是向用户显示一条消息。 否则，将用户定向到最初请求的 URL 使用<xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>方法。  
  
> [!NOTE]
>  ASP.NET 登录控件 (<xref:System.Web.UI.WebControls.Login>， <xref:System.Web.UI.WebControls.LoginView>， <xref:System.Web.UI.WebControls.LoginStatus>， <xref:System.Web.UI.WebControls.LoginName>，和<xref:System.Web.UI.WebControls.PasswordRecovery>) 封装了几乎所有所需提示用户输入凭据并验证凭据的成员身份系统中的逻辑，可以是用来以编程方式检查使用替代<xref:System.Web.Security.Membership>类。  
  
> [!IMPORTANT]
>  此示例包含一个文本框，用于接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">成员资格简介</related>
  </Docs>
  <Members>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public static string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.Membership.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置应用程序的名称。</summary>
        <value>应用程序的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.ApplicationName%2A>用于标识特定于应用程序的用户。 也就是说，同一用户名称可以存在于指定不同的多个 ASP.NET 应用程序数据库中<xref:System.Web.Security.Membership.ApplicationName%2A>。 这使多个应用程序可以使用相同的数据库来存储用户信息而不会遇到重复的用户名称冲突。 或者，多个 ASP.NET 应用程序可以使用相同的用户数据库，通过指定相同<xref:System.Web.Security.Membership.ApplicationName%2A>。 <xref:System.Web.Security.Membership.ApplicationName%2A>可以为 Web 应用程序配置中以编程方式或以声明方式设置。  
  
> [!CAUTION]
>  因为一个默认成员资格提供程序实例用于所有服务的请求<xref:System.Web.HttpApplication>对象，可以有多个请求同时执行，并尝试设置<xref:System.Web.Security.Membership.ApplicationName%2A>属性值。 <xref:System.Web.Security.Membership.ApplicationName%2A>属性不是线程安全的多个写入操作，且不断变化<xref:System.Web.Security.Membership.ApplicationName%2A>属性值可能会导致多个用户的应用程序的意外行为。 我们建议你避免编写代码，使用户能够设置<xref:System.Web.Security.Membership.ApplicationName%2A>属性，除非必要，否则。 应用程序的示例情况<xref:System.Web.Security.Membership.ApplicationName%2A>属性可能需要是管理应用程序，用于管理多个应用程序的成员身份数据。 此类应用程序应在单用户应用程序并不是 Web 应用程序。  
  
   
  
## Examples  
 下面的代码示例演示[成员资格](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))中的元素`system.web`的 ASP.NET 应用程序的 Web.config 文件部分。 它指定应用程序使用<xref:System.Web.Security.SqlMembershipProvider>实例并设置<xref:System.Web.Security.Membership.ApplicationName%2A>到`MyApplication`。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将新用户添加到数据存储区。</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">新用户的用户名。</param>
        <param name="password">新用户的密码。</param>
        <summary>将新用户添加到数据存储区。</summary>
        <returns>用于新创建用户的 <see cref="T:System.Web.Security.MembershipUser" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> 将新用户添加到数据存储并返回<xref:System.Web.Security.MembershipUser>新创建的用户对象。 如果用户创建失败，<xref:System.Web.Security.MembershipCreateUserException>引发。 可以检索<xref:System.Web.Security.MembershipCreateStatus>值从<xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A>属性的<xref:System.Web.Security.MembershipCreateUserException>，该值指示用户创建失败的原因。  
  
 成员资格用户已创建并具有对的引用后<xref:System.Web.Security.MembershipUser>为该用户对象，可以修改该用户的设置与<xref:System.Web.Security.MembershipUser>公共方法，如<xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A>应用程序的其中<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>是`true`，或通过设置的属性值<xref:System.Web.Security.MembershipUser>对象并将它们传递给<xref:System.Web.Security.Membership.UpdateUser%2A>方法。  
  
 如果应用程序的数据源中已存在用户，则可以获取<xref:System.Web.Security.MembershipUser>具有的现有用户对象<xref:System.Web.Security.Membership.GetUser%2A>方法。  
  
 <xref:System.Web.Security.SqlMembershipProvider>提供一个选项以便为每个用户都需要唯一的电子邮件地址。 如果<xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>属性是`true`，将需要使用其中一个<xref:System.Web.Security.Membership.CreateUser%2A>重载，可用于指定要创建的用户的电子邮件地址。 否则为<xref:System.Web.Security.MembershipCreateUserException>将引发。  
  
 删除所有参数值的前导和尾随空格。  
  
   
  
## Examples  
 下面的代码示例创建一个新 ASP.NET 应用程序配置为使用 forms 身份验证和 ASP.NET 成员资格用户。 如果未成功创建用户，向用户显示一条消息。 否则，用户重定向到应用程序的登录页。  
  
> [!IMPORTANT]
>  此示例包含一个文本框，用于接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/createuser2cs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.Membership#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/createuser2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipCreateUserException">未创建用户。 请检查 <see cref="P:System.Web.Security.MembershipCreateUserException.StatusCode" /> 属性的 <see cref="T:System.Web.Security.MembershipCreateStatus" /> 值。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string * string -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password, email)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">新用户的用户名。</param>
        <param name="password">新用户的密码。</param>
        <param name="email">新用户的电子邮件地址。</param>
        <summary>将具有指定电子邮件地址的新用户添加到数据存储。</summary>
        <returns>用于新创建用户的 <see cref="T:System.Web.Security.MembershipUser" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> 将新用户添加到数据存储并返回<xref:System.Web.Security.MembershipUser>新创建的用户对象。 如果用户创建失败，<xref:System.Web.Security.MembershipCreateUserException>引发。 可以检索<xref:System.Web.Security.MembershipCreateStatus>值从<xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A>属性的<xref:System.Web.Security.MembershipCreateUserException>，该值指示用户创建失败的原因。  
  
 成员资格用户已创建并具有对的引用后<xref:System.Web.Security.MembershipUser>为该用户对象，可以修改该用户的设置与<xref:System.Web.Security.MembershipUser>公共方法，如<xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A>应用程序的其中<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>是`true`，或通过设置的属性值<xref:System.Web.Security.MembershipUser>对象并将它们传递给<xref:System.Web.Security.Membership.UpdateUser%2A>方法。  
  
 如果应用程序的数据源中已存在用户，则可以获取<xref:System.Web.Security.MembershipUser>具有的现有用户对象<xref:System.Web.Security.Membership.GetUser%2A>方法。  
  
 删除所有参数值的前导和尾随空格。  
  
   
  
## Examples  
 下面的代码示例创建一个新 ASP.NET 应用程序配置为使用 forms 身份验证和 ASP.NET 成员资格用户。 如果未成功创建用户，向用户显示一条消息。 否则，用户重定向到应用程序的登录页。  
  
> [!IMPORTANT]
>  此示例包含一个文本框，用于接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/createuser1cs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.Membership#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/createuser1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipCreateUserException">未创建用户。 请检查 <see cref="P:System.Web.Security.MembershipCreateUserException.StatusCode" /> 属性的 <see cref="T:System.Web.Security.MembershipCreateStatus" /> 值。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string * string * string * string * bool *  -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">新用户的用户名。</param>
        <param name="password">新用户的密码。</param>
        <param name="email">新用户的电子邮件地址。</param>
        <param name="passwordQuestion">成员资格用户的密码提示问题的值。</param>
        <param name="passwordAnswer">成员资格用户的密码提示问题答案的值。</param>
        <param name="isApproved">一个布尔值，该值指示是否批准新用户登录。</param>
        <param name="status">一个 <see cref="T:System.Web.Security.MembershipCreateStatus" /> 值，该值指示该用户是否成功创建或用户创建失败的原因。</param>
        <summary>将具有指定属性值的新用户添加到数据存储区，并返回一个状态参数，指示该用户是否成功创建或用户创建失败的原因。</summary>
        <returns>用于新创建用户的 <see cref="T:System.Web.Security.MembershipUser" /> 对象。 如果没有创建用户，此方法将返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> 将新用户添加到数据存储并返回<xref:System.Web.Security.MembershipUser>新创建的用户对象。 如果用户创建失败，则可以检索<xref:System.Web.Security.MembershipCreateStatus>值从`status`输出参数，用于指示用户创建失败的原因。  
  
 <xref:System.Web.Security.Membership.CreateUser%2A>方法将返回`null`如果`password`为空字符串或`null`，`username`为空字符串或`null`或包含逗号 （，）、`passwordQuestion`不是`null`和为空字符串，或`passwordAnswer`不是`null`和包含空字符串。  
  
 成员资格用户已创建并具有对的引用后<xref:System.Web.Security.MembershipUser>为该用户对象，可以修改该用户的设置与<xref:System.Web.Security.MembershipUser>公共方法，以及设置的属性值<xref:System.Web.Security.MembershipUser>对象，然后将传递<xref:System.Web.Security.MembershipUser>对象传递给<xref:System.Web.Security.Membership.UpdateUser%2A>方法。  
  
 如果应用程序的数据源中已存在用户，则可以获取<xref:System.Web.Security.MembershipUser>具有的现有用户对象<xref:System.Web.Security.Membership.GetUser%2A>方法。  
  
 删除所有字符串参数值的前导和尾随空格。  
  
   
  
## Examples  
 下面的代码示例创建一个新 ASP.NET 应用程序配置为使用 forms 身份验证和 ASP.NET 成员资格用户。 如果未成功创建用户，向用户显示一条消息。 否则，用户重定向到应用程序的登录页。  
  
> [!IMPORTANT]
>  此示例包含一个文本框，用于接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string * string * string * string * bool * obj *  -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, providerUserKey, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">新用户的用户名。</param>
        <param name="password">新用户的密码。</param>
        <param name="email">新用户的电子邮件地址。</param>
        <param name="passwordQuestion">成员资格用户的密码提示问题的值。</param>
        <param name="passwordAnswer">成员资格用户的密码提示问题答案的值。</param>
        <param name="isApproved">一个布尔值，该值指示是否批准新用户登录。</param>
        <param name="providerUserKey">该用户的用户标识符，应存储在成员资格数据存储区。</param>
        <param name="status">一个 <see cref="T:System.Web.Security.MembershipCreateStatus" /> 值，该值指示该用户是否成功创建或用户创建失败的原因。</param>
        <summary>将具有指定的属性值和唯一的标识符的新用户添加到数据存储区，并返回一个状态参数，指示该用户是否成功创建或用户创建失败的原因。</summary>
        <returns>用于新创建用户的 <see cref="T:System.Web.Security.MembershipUser" /> 对象。 如果没有创建用户，此方法将返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> 将新用户添加到数据存储并返回<xref:System.Web.Security.MembershipUser>新创建的用户对象。 如果用户创建失败，则可以检索<xref:System.Web.Security.MembershipCreateStatus>值从`status`输出参数，用于指示用户创建失败的原因。 可以通过使用指定用户，如一个数据库的主键值的唯一标识符`providerUserKey`参数。  
  
 <xref:System.Web.Security.Membership.CreateUser%2A>方法将返回`null`如果`password`为空字符串或`null`，`username`为空字符串或`null`或包含逗号 （，）、`passwordQuestion`不是`null`和包含一个空字符串，或`passwordAnswer`不是`null`和包含空字符串。  
  
 成员资格用户已创建并具有对的引用后<xref:System.Web.Security.MembershipUser>为该用户对象，可以修改该用户的设置与<xref:System.Web.Security.MembershipUser>公共方法，以及设置的属性值<xref:System.Web.Security.MembershipUser>对象，然后将传递<xref:System.Web.Security.MembershipUser>对象传递给<xref:System.Web.Security.Membership.UpdateUser%2A>方法。  
  
 如果应用程序的数据源中已存在用户，则可以获取<xref:System.Web.Security.MembershipUser>具有的现有用户对象<xref:System.Web.Security.Membership.GetUser%2A>方法。  
  
 删除所有字符串参数值的前导和尾随空格。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>从数据库中删除一个用户。</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public static bool DeleteUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.DeleteUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteUser (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member DeleteUser : string -&gt; bool" Usage="System.Web.Security.Membership.DeleteUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要删除的用户的名称。</param>
        <summary>从数据库中删除用户和任何相关的用户数据。</summary>
        <returns>如果用户已删除，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 为数据库中存储的用户数据<xref:System.Web.Security.Roles>， <xref:System.Web.HttpContext.Profile%2A>，或<xref:System.Web.UI.WebControls.WebParts.WebPart>正在使用时，将同时删除个性化<xref:System.Web.Security.SqlRoleProvider>， <xref:System.Web.Profile.SqlProfileProvider>，和<xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider>对象用于数据存储。  
  
   
  
## Examples  
 以下代码示例将删除当前登录的用户和所有相关数据。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/DeleteUsercs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.Membership#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/DeleteUservb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> 为空字符串或者包含逗号 (,)。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> 为 <see langword="null." /></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public static bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberSignature Language="F#" Value="static member DeleteUser : string * bool -&gt; bool" Usage="System.Web.Security.Membership.DeleteUser (username, deleteAllRelatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">要删除的用户的名称。</param>
        <param name="deleteAllRelatedData">如果要从数据库中删除与用户相关的数据，则为 <see langword="true" />；如果要在数据库中保留与用户相关的数据，则为 <see langword="false" />。</param>
        <summary>从数据库中删除一个用户。</summary>
        <returns>如果用户已删除，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仅删除从数据库中删除的用户从已配置`applicationName`。  
  
 如果`deleteAllRelatedData`是`true`，为数据库中存储的用户数据<xref:System.Web.Security.Roles>， <xref:System.Web.HttpContext.Profile%2A>，或<xref:System.Web.UI.WebControls.WebParts.WebPart>使用时，也会删除个性化设置<xref:System.Web.Security.SqlRoleProvider>， <xref:System.Web.Profile.SqlProfileProvider>，和<xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider>对象数据存储。  
  
   
  
## Examples  
 以下代码示例将删除当前登录的用户和所有相关数据。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/DeleteUsercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/DeleteUservb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> 为空字符串或者包含逗号 (,)。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> 为 <see langword="null" />。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public static bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnablePasswordReset { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordReset : bool" Usage="System.Web.Security.Membership.EnablePasswordReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获得一个值，指示当前成员资格提供程序是否配置为允许用户重置其密码。</summary>
        <value>如果成员资格提供程序支持密码重置，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 密码重置，ASP.NET 成员资格用户忘记其密码或当前密码不再有效时替换当前的密码的用户名具有一个新的随机生成的密码的功能。 密码格式设置为时，此方法特别有用<xref:System.Web.Security.MembershipPasswordFormat.Hashed>，因为用户不能检索哈希的密码值。  
  
   
  
## Examples  
 下面的代码示例演示[成员资格](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))中的元素`system.web`的 ASP.NET 应用程序的 Web.config 文件部分。 它指定应用程序使用的实例<xref:System.Web.Security.SqlMembershipProvider>并启用密码重置。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 下面的代码示例首先验证<xref:System.Web.Security.Membership.EnablePasswordReset%2A>是`true`，然后将重置用户的密码，并返回新的、 自动生成密码。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ResetPasswordcs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ResetPasswordvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public static bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordRetrieval : bool" Usage="System.Web.Security.Membership.EnablePasswordRetrieval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获得一个值，指示当前成员资格提供程序是否配置为允许用户检索其密码。</summary>
        <value>如果成员资格提供程序支持密码检索，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A>是`false`，基础成员资格提供程序可能会引发<xref:System.Web.HttpException>。  
  
 随.NET Framework 的提供程序支持多个密码格式来增强密码的安全性。 如果密码格式设置为<xref:System.Web.Security.MembershipPasswordFormat.Hashed>，则用户将不能从数据库中检索其现有的密码。 <xref:System.Web.Security.MembershipPasswordFormat.Hashed>密码格式提供单向编码的密码值。 密码是"哈希处理"，相比于身份验证的数据库中存储的值。 "哈希"的值不能为未编码，以检索原始密码值。 有关详情，请参阅<xref:System.Web.Security.MembershipPasswordFormat>。  
  
   
  
## Examples  
 下面的代码示例演示[成员资格](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))中的元素`system.web`的 ASP.NET 应用程序的 Web.config 文件部分。 它指定应用程序使用的实例<xref:System.Web.Security.SqlMembershipProvider>并启用密码检索。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="false"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 下面的代码示例首先验证<xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A>是`true`，然后检索指定的用户名的密码，并将其发送到的电子邮件地址为指定的用户。  
  
> [!IMPORTANT]
>  需要高级别的安全性的站点，不建议使用电子邮件以明文返回的密码。 对于高度安全的站点，我们建议返回密码使用加密，例如 SSL。  
>   
>  此示例包括接受用户输入，这是潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindUsersByEmail">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取成员资格用户集合，这些用户的电子邮件地址包含要匹配的指定电子邮件地址。</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByEmail (emailToMatch As String) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch);" />
      <MemberSignature Language="F#" Value="static member FindUsersByEmail : string -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByEmail emailToMatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">要搜索的电子邮件地址。</param>
        <summary>获取成员资格用户集合，这些用户的电子邮件地址包含要匹配的指定电子邮件地址。</summary>
        <returns>一个 <see cref="T:System.Web.Security.MembershipUserCollection" /> 集合，其中包含与 <paramref name="emailToMatch" /> 参数匹配的所有用户。  
  
删除 <paramref name="emailToMatch" /> 参数值的前导和尾随空格。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.FindUsersByEmail%2A> 返回成员资格用户的列表的电子邮件地址匹配所提供`emailToMatch`已配置的`applicationName`。  
  
 <xref:System.Web.Security.SqlMembershipProvider>执行使用 LIKE 子句对其搜索`emailToMatch`参数。 SQL Server 等子句可用于支持任何通配符`emailToMatch`参数值。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Web.Security.Membership.FindUsersByEmail%2A>方法从成员资格数据库中检索成员资格用户信息根据用户输入并将结果显示中的数据页。  
  
> [!IMPORTANT]
>  此示例包含一个文本框，用于接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/FindUsersByEmailcs.aspx#9)]
 [!code-aspx-vb[System.Web.Security.Membership#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/FindUsersByEmailvb.aspx#9)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindUsersByEmail : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByEmail (emailToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">要搜索的电子邮件地址。</param>
        <param name="pageIndex">要返回的结果页的索引。 <paramref name="pageIndex" /> 从零开始。</param>
        <param name="pageSize">要返回的结果页的大小。</param>
        <param name="totalRecords">匹配用户的总数。</param>
        <summary>获取成员资格用户集合并显示在一个数据页中，这些用户的电子邮件地址包含要匹配的指定电子邮件地址。</summary>
        <returns>包含一页 <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> 对象的 <see cref="T:System.Web.Security.MembershipUserCollection" />，这些对象从 <paramref name="pageIndex" /> 指定的页开始。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.FindUsersByEmail%2A> 返回成员资格用户的列表的电子邮件地址匹配所提供`emailToMatch`已配置的`applicationName`。  
  
 <xref:System.Web.Security.SqlMembershipProvider>执行使用 LIKE 子句对其搜索`emailToMatch`参数。 SQL Server 等子句可用于支持任何通配符`emailToMatch`参数值。  
  
 返回的结果<xref:System.Web.Security.Membership.FindUsersByEmail%2A>受到`pageIndex`和`pageSize`参数。 `pageSize`参数标识的最大数目<xref:System.Web.Security.MembershipUser>对象中返回<xref:System.Web.Security.MembershipUserCollection>。 `pageIndex`参数标识要返回，其中 0 标识的第一页的结果页。 `totalRecords`参数是`out`参数设置为匹配的成员资格用户的总数`emailToMatch`值。 例如，如果找到 13 个`emailToMatch`匹配的一部分或整个电子邮件地址，并`pageIndex`值为 1，`pageSize`为 5，<xref:System.Web.Security.MembershipUserCollection>返回将包含 6 到返回的第十个用户。 `totalRecords` 将设置为 13。  
  
 删除 `emailToMatch` 参数值的前导和尾随空格。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Web.Security.Membership.FindUsersByEmail%2A>方法从成员资格数据库中检索成员资格用户信息根据用户输入并将结果显示中的数据页。  
  
> [!IMPORTANT]
>  此示例包含一个文本框，用于接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByEmailcs.aspx#13)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByEmailvb.aspx#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="pageIndex" /> 小于零。  
  
- 或 - 
 <paramref name="pageSize" /> 小于 1。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindUsersByName">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取成员资格用户的集合，其中用户名包含要匹配的指定用户名。</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByName (usernameToMatch As String) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="static member FindUsersByName : string -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByName usernameToMatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">要搜索的用户名。</param>
        <summary>获取成员资格用户的集合，其中用户名包含要匹配的指定用户名。</summary>
        <returns>一个 <see cref="T:System.Web.Security.MembershipUserCollection" /> 集合，其中包含与 <paramref name="usernameToMatch" /> 参数匹配的所有用户。  
  
删除 <paramref name="usernameToMatch" /> 参数值的前导和尾随空格。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> 返回一组成员资格用户的用户名与匹配所提供`usernameToMatch`已配置的`applicationName`。  
  
 <xref:System.Web.Security.SqlMembershipProvider>执行使用 LIKE 子句对其搜索`usernameToMatch`参数。 SQL Server 等子句可用于支持任何通配符`usernameToMatch`参数值。  
  
 删除所有参数值的前导和尾随空格。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Web.Security.Membership.FindUsersByName%2A>方法从成员资格数据库中检索成员资格用户信息根据用户输入并将结果显示中的数据页。  
  
> [!IMPORTANT]
>  此示例包含一个文本框，用于接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/FindUsersByNamecs.aspx#10)]
 [!code-aspx-vb[System.Web.Security.Membership#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/FindUsersByNamevb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="usernameToMatch" /> 是一个空字符串。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernameToMatch" /> 为 <see langword="null" />。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindUsersByName : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByName (usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">要搜索的用户名。</param>
        <param name="pageIndex">要返回的结果页的索引。 <paramref name="pageIndex" /> 从零开始。</param>
        <param name="pageSize">要返回的结果页的大小。</param>
        <param name="totalRecords">匹配用户的总数。</param>
        <summary>获取一个成员资格用户的集合，并显示在一个数据页中，这些用户的用户名包含要匹配的指定用户名。</summary>
        <returns>包含一页 <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> 对象的 <see cref="T:System.Web.Security.MembershipUserCollection" />，这些对象从 <paramref name="pageIndex" /> 指定的页开始。  
  
删除 <paramref name="usernameToMatch" /> 参数值的前导和尾随空格。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> 返回一组成员资格用户的用户名与匹配所提供`usernameToMatch`已配置的`applicationName`。  
  
 <xref:System.Web.Security.SqlMembershipProvider>执行使用 LIKE 子句对其搜索`usernameToMatch`参数。 SQL Server 等子句可用于支持任何通配符`usernameToMatch`参数值。  
  
 返回的结果<xref:System.Web.Security.Membership.FindUsersByName%2A>受到`pageIndex`和`pageSize`参数。 `pageSize`参数标识的最大数目<xref:System.Web.Security.MembershipUser>对象中返回<xref:System.Web.Security.MembershipUserCollection>。 `pageIndex`参数标识要返回，其中 0 标识的第一页的结果页。 `totalRecords`参数是`out`参数设置为匹配的成员资格用户的总数`usernameToMatch`值。 例如，如果找到 13 个`usernameToMatch`匹配的一部分或整个用户名称，并`pageIndex`值为 1，`pageSize`为 5，<xref:System.Web.Security.MembershipUserCollection>返回将包含 6 到返回的第十个用户。 `totalRecords` 将设置为 13。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Web.Security.Membership.FindUsersByName%2A>方法从成员资格数据库中检索成员资格用户信息根据用户输入并将结果显示中的数据页。  
  
> [!IMPORTANT]
>  此示例包含一个文本框，用于接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByNamecs.aspx#12)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByNamevb.aspx#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="usernameToMatch" /> 是一个空字符串。  
  
- 或 - 
 <paramref name="pageIndex" /> 小于零。  
  
- 或 - 
 <paramref name="pageSize" /> 小于 1。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernameToMatch" /> 为 <see langword="null" />。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="GeneratePassword">
      <MemberSignature Language="C#" Value="public static string GeneratePassword (int length, int numberOfNonAlphanumericCharacters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GeneratePassword(int32 length, int32 numberOfNonAlphanumericCharacters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GeneratePassword (length As Integer, numberOfNonAlphanumericCharacters As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GeneratePassword(int length, int numberOfNonAlphanumericCharacters);" />
      <MemberSignature Language="F#" Value="static member GeneratePassword : int * int -&gt; string" Usage="System.Web.Security.Membership.GeneratePassword (length, numberOfNonAlphanumericCharacters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="numberOfNonAlphanumericCharacters" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">生成的密码的字符数。 长度必须介于 1 和 128 个字符之间。</param>
        <param name="numberOfNonAlphanumericCharacters">生成的密码中非字母数字字符（如 @, #, !, %, &amp; 等）的最小数。</param>
        <summary>生成指定长度的随机密码。</summary>
        <returns>指定长度的随机密码。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GeneratePassword%2A>方法用于生成随机密码，并通过最常用于<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>实现成员资格提供程序以用户的密码重置为新的临时密码的方法。  
  
 生成的密码仅包含字母数字字符和以下标点符号： `!@#$%^&*()_-+=[{]};:<>|./?`。 没有隐藏的或非可打印的控制字符都包含在生成的密码。  
  
> [!NOTE]
>  通过创建随机密码<xref:System.Web.Security.Membership.GeneratePassword%2A>方法不能保证传递中的正则表达式<xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>属性。 但是，随机的密码将符合确立的条件<xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>属性和`numberOfNonAlphanumericCharacters`参数。  
  
   
  
## Examples  
 下面的代码示例创建新的成员资格用户，并使用<xref:System.Web.Security.Membership.GeneratePassword%2A>方法来初始化为随机值，该值向用户显示新的用户的密码。  
  
> [!IMPORTANT]
>  此示例包含一个文本框，用于接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/GeneratePasswordcs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.Membership#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/GeneratePasswordvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="length" /> 小于 1 或大于 128 - 或 - 
 <paramref name="numberOfNonAlphanumericCharacters" /> 小于 0 或大于 <paramref name="length" />。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllUsers">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取数据库中用户的集合。</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection GetAllUsers ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection GetAllUsers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetAllUsers" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllUsers () As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ GetAllUsers();" />
      <MemberSignature Language="F#" Value="static member GetAllUsers : unit -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.GetAllUsers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取数据库中所有用户的集合。</summary>
        <returns><see cref="T:System.Web.Security.MembershipUserCollection" /> 对象的 <see cref="T:System.Web.Security.MembershipUser" />，表示数据库中的所有用户。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetAllUsers%2A> 返回作为一系列应用程序的所有成员资格用户的信息<xref:System.Web.Security.MembershipUser>对象。 使用时要小心<xref:System.Web.Security.Membership.GetAllUsers%2A>方法使用非常大的用户数据库，作为生成<xref:System.Web.Security.MembershipUserCollection>在您的 ASP.NET 页可能会降低应用程序的性能。  
  
   
  
## Examples  
 下面的代码示例返回一系列具有的用户数计数的用户当前已联机。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member GetAllUsers : int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.GetAllUsers (pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">要返回的结果页的索引。 使用 0 来指示第一页。</param>
        <param name="pageSize">要返回的结果页的大小。 <paramref name="pageIndex" /> 从零开始。</param>
        <param name="totalRecords">用户的总数。</param>
        <summary>获取数据库中的所有用户的集合，并显示在数据页中。</summary>
        <returns><see cref="T:System.Web.Security.MembershipUserCollection" /> 对象的 <see cref="T:System.Web.Security.MembershipUser" />，表示数据库中配置的 <see langword="applicationName" /> 的所有用户。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回的结果<xref:System.Web.Security.Membership.GetAllUsers%2A>受到`pageIndex`和`pageSize`参数。 `pageSize`参数标识的最大数目<xref:System.Web.Security.MembershipUser>对象中返回<xref:System.Web.Security.MembershipUserCollection>。 `pageIndex`参数标识要返回，其中 0 标识的第一页的结果页。 `totalRecords`参数是`out`参数设置为已配置的成员资格用户的总数`applicationName`。 例如，如果有已配置的 13 个用户`applicationName`，并`pageIndex`值为 1，`pageSize`为 5，<xref:System.Web.Security.MembershipUserCollection>返回将包含 6 到返回的第十个用户。 `totalRecords` 将设置为 13。  
  
   
  
## Examples  
 下面的代码示例返回用户的列表中的数据页的用户数的计数与当前已联机。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="pageIndex" /> 小于零。  
  
- 或 - 
 <paramref name="pageSize" /> 小于 1。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public static int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNumberOfUsersOnline();" />
      <MemberSignature Language="F#" Value="static member GetNumberOfUsersOnline : unit -&gt; int" Usage="System.Web.Security.Membership.GetNumberOfUsersOnline " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取当前访问应用程序的用户数。</summary>
        <returns>当前访问应用程序的用户数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> 返回当前用户数<xref:System.Web.Security.Membership.ApplicationName%2A>上次活动日期是晚于当前时间更少<xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>。 上次活动日期/时间戳更新为当前日期和时间时通过验证用户凭据<xref:System.Web.Security.Membership.ValidateUser%2A>或<xref:System.Web.Security.Membership.UpdateUser%2A>方法或在调用<xref:System.Web.Security.Membership.GetUser%2A>重载采用任何参数或另一个使用`userIsOnline`参数来指定应更新的日期/时间戳。  
  
   
  
## Examples  
 下面的代码示例返回一系列具有的用户数计数的用户当前已联机。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>从数据源获取成员资格用户的信息。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser () As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser();" />
      <MemberSignature Language="F#" Value="static member GetUser : unit -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从数据源获取信息并为当前已登录的成员资格用户更新最后一次活动日期/时间戳。</summary>
        <returns>一个 <see cref="T:System.Web.Security.MembershipUser" /> 对象，表示当前已登录的用户。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser> 从数据源中检索用户信息并创建<xref:System.Web.Security.MembershipUser>使用返回的数据填充的对象。 如果你使用之一<xref:System.Web.Security.Membership.GetUser%2A>重载不采用`username`参数，<xref:System.Web.Security.Membership.GetUser%2A>返回当前登录的成员资格用户的信息。 当前登录的成员资格用户由<xref:System.Security.Principal.IIdentity.Name%2A>在当前用户的<xref:System.Web.HttpContext>。  
  
 此外可以指定是否希望<xref:System.Web.Security.Membership.GetUser%2A>来更新上一次活动日期/时间戳; 如果为正在检索使用`userIsOnline`参数。 <xref:System.Web.Security.Membership.GetUser%2A>重载不采用`userIsOnline`参数，`GetUser()`隐式用户的更新上一次活动日期/时间戳。 `GetUser(System.String)` 和`GetUser(System.Object)`不这样做。  
  
   
  
## Examples  
 以下代码示例更新上一次活动日期/时间戳为当前登录的成员资格用户并显示该用户名 ASP.NET 页中。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/default1cs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.Membership#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/default1vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">当前没有成员资格用户登陆。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(bool userIsOnline);" />
      <MemberSignature Language="F#" Value="static member GetUser : bool -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser userIsOnline" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userIsOnline">如果为 <see langword="true" />，则更新指定用户的最近活动日期/时间戳。</param>
        <summary>从数据源获取当前已登录的成员资格用户的信息。 为当前已登录的成员资格用户（如果被指定）更新最后一次活动的日期/时间戳。</summary>
        <returns>一个 <see cref="T:System.Web.Security.MembershipUser" /> 对象，表示当前已登录的用户。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A>方法从数据源中检索用户信息并创建<xref:System.Web.Security.MembershipUser>使用返回的数据填充的对象。 如果你使用之一<xref:System.Web.Security.Membership.GetUser%2A>重载不采用`username`参数，<xref:System.Web.Security.Membership.GetUser%2A>返回当前登录的成员资格用户的信息。 当前登录的成员资格用户由<xref:System.Security.Principal.IIdentity.Name%2A>在当前用户的<xref:System.Web.HttpContext>。  
  
 此外可以指定是否希望<xref:System.Web.Security.Membership.GetUser%2A>来更新上一次活动日期/时间戳; 如果为正在检索使用`userIsOnline`参数。 <xref:System.Web.Security.Membership.GetUser%2A>重载不采用`userIsOnline`参数，`GetUser()`隐式用户的更新上一次活动日期/时间戳。 `GetUser(System.String)` 和`GetUser(System.Object)`不这样做。  
  
   
  
## Examples  
 下面的代码示例显示用户 ASP.NET 页面中的当前登录的成员资格用户的名称而无需更新的上次活动日期/时间戳的用户。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/default2cs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.Membership#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/default2vb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">当前没有成员资格用户登陆。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (object providerUserKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(object providerUserKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (providerUserKey As Object) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey);" />
      <MemberSignature Language="F#" Value="static member GetUser : obj -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser providerUserKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">用户的成员资格数据源中的唯一用户标识符。</param>
        <summary>从数据源获取与指定的唯一标识符关联的成员资格用户信息。</summary>
        <returns>一个 <see cref="T:System.Web.Security.MembershipUser" /> 对象，它表示与指定的唯一标识符关联的用户。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A>方法从数据源中检索用户信息并创建<xref:System.Web.Security.MembershipUser>使用返回的数据填充的对象。 从指定使用的数据源使用的唯一标识符标识该用户`providerUserKey`参数。  
  
 此外可以指定是否希望<xref:System.Web.Security.Membership.GetUser%2A>来更新上一次活动日期/时间戳; 如果为正在检索与`userIsOnline`参数。 <xref:System.Web.Security.Membership.GetUser%2A>重载不采用`userIsOnline`参数，`GetUser()`隐式用户的更新上一次活动日期/时间戳。 `GetUser(System.String)` 和`GetUser(System.Object)`不这样做  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="providerUserKey" /> 为 <see langword="null" />。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (username As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member GetUser : string -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要检索的用户名。</param>
        <summary>从数据源获取指定成员资格用户的信息。</summary>
        <returns>一个 <see cref="T:System.Web.Security.MembershipUser" /> 对象，它表示指定的用户。 如果 <paramref name="username" /> 参数并不对应于现有的用户，则此方法返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A>方法从数据源中检索用户信息并创建<xref:System.Web.Security.MembershipUser>使用返回的数据填充的对象。 如果你使用之一<xref:System.Web.Security.Membership.GetUser%2A>重载不采用`username`参数，<xref:System.Web.Security.Membership.GetUser%2A>返回当前登录的成员资格用户的信息。 当前登录的成员资格用户由<xref:System.Security.Principal.IIdentity.Name%2A>在当前用户的<xref:System.Web.HttpContext>。  
  
 此外可以指定是否希望<xref:System.Web.Security.Membership.GetUser%2A>来更新上一次活动日期/时间戳; 如果为正在检索与`userIsOnline`参数。 <xref:System.Web.Security.Membership.GetUser%2A>重载不采用`userIsOnline`参数，<xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType>隐式用户的更新上一次活动日期/时间戳。 <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> 和<xref:System.Web.Security.Membership.GetUser%2A>不这样做。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Web.Security.Membership.GetUser%2A>方法以返回<xref:System.Web.Security.MembershipUser>对象的当前登录的用户和更新该用户的电子邮件地址。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> 包含一个逗号 (,)。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> 为 <see langword="null" />。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="static member GetUser : obj * bool -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser (providerUserKey, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">用户的成员资格数据源中的唯一用户标识符。</param>
        <param name="userIsOnline">如果为 <see langword="true" />，则更新指定用户的最近活动日期/时间戳。</param>
        <summary>从数据源获取与指定的唯一标识符关联的成员资格用户信息。 更新用户（如果指定）的最近一次活动的日期/时间戳。</summary>
        <returns>一个 <see cref="T:System.Web.Security.MembershipUser" /> 对象，它表示与指定的唯一标识符关联的用户。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A>方法从数据源中检索用户信息并创建<xref:System.Web.Security.MembershipUser>使用返回的数据填充的对象。 在指定的数据源中的唯一标识符标识该用户`providerUserKey`参数。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="providerUserKey" /> 为 <see langword="null" />。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="static member GetUser : string * bool -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser (username, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">要检索的用户名。</param>
        <param name="userIsOnline">如果为 <see langword="true" />，则更新指定用户的最近活动日期/时间戳。</param>
        <summary>从数据源获取指定成员资格用户的信息。 更新用户（如果指定）的最近一次活动的日期/时间戳。</summary>
        <returns>一个 <see cref="T:System.Web.Security.MembershipUser" /> 对象，它表示指定的用户。 如果 <paramref name="username" /> 参数并不对应于现有的用户，则此方法返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A>方法从数据源中检索用户信息并创建<xref:System.Web.Security.MembershipUser>使用返回的数据填充的对象。  
  
 如果你使用之一<xref:System.Web.Security.Membership.GetUser%2A>重载不采用`username`参数，<xref:System.Web.Security.Membership.GetUser%2A>返回当前登录的成员资格用户的信息。 当前登录的成员资格用户由<xref:System.Security.Principal.IIdentity.Name%2A>在当前用户的<xref:System.Web.HttpContext>。  
  
 此外可以指定是否希望<xref:System.Web.Security.Membership.GetUser%2A>来更新上一次活动日期/时间戳; 如果为正在检索与`userIsOnline`参数。 <xref:System.Web.Security.Membership.GetUser%2A>重载不采用`userIsOnline`参数，<xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType>隐式用户的更新上一次活动日期/时间戳。 <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> 和<xref:System.Web.Security.Membership.GetUser%2A>不这样做。  
  
   
  
## Examples  
 下面的代码示例检索指定的用户名的密码，并将其发送到的电子邮件地址为指定的用户。 对调用<xref:System.Web.Security.Membership.GetUser%2A>指定，上次活动日期/时间戳的用户不会更新。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> 包含一个逗号 (,)。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> 为 <see langword="null" />。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public static string GetUserNameByEmail (string emailToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetUserNameByEmail(string emailToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUserNameByEmail (emailToMatch As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetUserNameByEmail(System::String ^ emailToMatch);" />
      <MemberSignature Language="F#" Value="static member GetUserNameByEmail : string -&gt; string" Usage="System.Web.Security.Membership.GetUserNameByEmail emailToMatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">要搜索的电子邮件地址。</param>
        <summary>获取一个用户名，该用户的电子邮件地址与指定的电子邮件地址匹配。</summary>
        <returns>用户名，其中该用户的电子邮件地址与指定的电子邮件地址匹配。 如果未发现匹配项，则返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUserNameByEmail%2A> 可以用于检索在其中用户不知道其用户名称，但不能确定其电子邮件地址的情况下成员资格用户的用户名。 如果数据存储区中的多个用户具有相同的电子邮件地址，则返回遇到的第一个用户名。  
  
 删除所有参数值的前导和尾随空格。  
  
   
  
## Examples  
 下面的代码示例检索指定的电子邮件地址的用户名称。  
  
> [!IMPORTANT]
>  此示例包含一个文本框，用于接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GetUserByEmailcs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GetUserByEmailvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithmType">
      <MemberSignature Language="C#" Value="public static string HashAlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string HashAlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.HashAlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property HashAlgorithmType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ HashAlgorithmType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithmType : string" Usage="System.Web.Security.Membership.HashAlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>用于哈希密码的算法的标识符。</summary>
        <value>用于哈希密码的算法的标识符，或为空以使用默认哈希算法。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.HashAlgorithmType%2A>属性标识使用的自定义哈希算法<xref:System.Web.Security.Membership>类。 您设置<xref:System.Web.Security.Membership.HashAlgorithmType%2A>属性使用`hashAlgorithmType`的属性[成员身份](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))元素。  
  
 .NET Framework 使您能够配置自定义加密类使用[ `<cryptographySettings>` ](~/docs/framework/configure-apps/file-schema/cryptography/cryptographysettings-element.md)元素配置节。 <xref:System.Web.Security.Membership.HashAlgorithmType%2A>属性必须与匹配`name`的属性[ `<nameEntry>` ](~/docs/framework/configure-apps/file-schema/cryptography/nameentry-element.md)中的元素[ `<cryptoNameMapping>` ](~/docs/framework/configure-apps/file-schema/cryptography/cryptonamemapping-element.md)元素。 有关详细信息，请参阅[将算法名称映射到加密类](~/docs/framework/configure-apps/map-algorithm-names-to-cryptography-classes.md)。  
  
 如果<xref:System.Web.Security.Membership.HashAlgorithmType%2A>未设置属性，<xref:System.Web.Security.Membership>类使用中设置的哈希算法`validation`属性的`<machineKey>`元素。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public static int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxInvalidPasswordAttempts : int" Usage="System.Web.Security.Membership.MaxInvalidPasswordAttempts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在锁定成员资格用户之前允许的无效密码或密码答案尝试次数。</summary>
        <value>锁定成员资格用户之前允许的无效密码或密码答案尝试次数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>属性的工作原理与结合<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>属性以防止出现不需要的源使用反复尝试来猜测密码或成员资格用户的密码提示问题答案。  
  
 如果成员资格用户是大于或等于的值输入的无效密码或密码提示问题答案的号码<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>属性中指定的分钟数<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>属性，则为用户锁定的网站设置<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>属性设置为`true`直到通过调用解除锁定用户<xref:System.Web.Security.MembershipUser.UnlockUser%2A>方法。  
  
 如果之前的值提供有效密码或密码提示问题答案<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>达到属性时，会跟踪无效尝试的次数的计数器设置为零。  
  
 单独跟踪无效密码和密码提示问题答案尝试。 例如，如果<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>属性设置为 5，用户具有最多五个尝试输入正确的密码和多达五次尝试来输入正确的密码答案，而不被锁定。  
  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>在该应用程序配置中设置属性值`maxInvalidPasswordAttempts`的属性[成员身份](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))配置元素。  
  
 如果<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>属性是`false`，不跟踪无效密码提示问题答案尝试次数。  
  
   
  
## Examples  
 下面的代码示例演示[成员资格](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))中的元素`system.web`部分中的应用程序的 Web.config 文件。 它指定应用程序使用的实例<xref:System.Web.Security.SqlMembershipProvider>类提供成员资格服务，并设置`maxInvalidPasswordAttempts`属性为五个的无效尝试和`passwordAttemptWindow`为 30 分钟。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      maxInvalidPasswordAttempts="5"  
      passwordAttemptWindow="30"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public static int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredNonAlphanumericCharacters : int" Usage="System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取有效密码中必须包含的最少特殊字符数。</summary>
        <value>有效密码中必须包含的最少特殊字符数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>属性返回的最小为在指定的成员资格提供程序创建一个有效的密码，必须输入的特殊的非字母数字字符数<xref:System.Web.Security.Membership.Provider%2A>属性。  
  
 <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>在该应用程序配置中设置属性值`minRequiredNonAlphanumericCharacters`的属性[成员身份](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))配置元素。  
  
 非字母数字字符是为其字符<xref:System.Char.IsLetterOrDigit%2A>方法将返回`false`。  
  
   
  
## Examples  
 下面的代码示例演示[成员资格](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))中的配置元素`system.web`部分中的应用程序的 Web.config 文件。 它指定应用程序使用的实例<xref:System.Web.Security.SqlMembershipProvider>类提供成员资格服务和集`minRequiredNonAlphanumericCharacters`属性为 1 个字符。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredNonAlphanumericCharacters="1"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public static int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MinRequiredPasswordLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredPasswordLength : int" Usage="System.Web.Security.Membership.MinRequiredPasswordLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取密码所需的最小长度。</summary>
        <value>密码所需的最小长度。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>属性获取的最小为在指定的成员资格提供程序创建一个有效的密码，必须输入的字符数<xref:System.Web.Security.Membership.Provider%2A>属性。  
  
 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>在该应用程序配置中设置属性值`minRequiredPasswordLength`的属性[成员身份](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))配置元素。  
  
   
  
## Examples  
 下面的代码示例演示[成员资格](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))中的配置元素`system.web`部分中的应用程序的 Web.config 文件。 它指定应用程序使用的实例<xref:System.Web.Security.SqlMembershipProvider>类提供成员资格服务和集`minRequiredPasswordLength`属性为七个字符。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredPasswordLength="7"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public static int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int PasswordAttemptWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordAttemptWindow : int" Usage="System.Web.Security.Membership.PasswordAttemptWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取时间长度，在该时间间隔内对提供有效密码或密码答案的连续失败尝试次数进行跟踪。</summary>
        <value>对未能提供有效密码或密码答案的连续尝试次数进行跟踪的时间长度（以分钟为单位）。 默认值为 10 分钟。 如果当前失败尝试和上次失败尝试之间的间隔大于 <see cref="P:System.Web.Security.Membership.PasswordAttemptWindow" /> 属性设置，则每个失败尝试均被视为第一次失败尝试。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>属性的工作原理与结合<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>属性以帮助防止不需要的源猜测密码或密码提示问题答案的成员资格用户通过反复尝试。 当用户尝试登录、 更改或重置其密码时，在指定的时间范围内只允许一定数量的连续尝试次数。 在指定的此时间窗口长度<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>属性，用于标识的无效尝试之间所允许的分钟数。  
  
 如果向用户发出的连续失败尝试次数重置他或她的密码与存储中的值相等<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>属性，以及时间自以来所经过最后一次的无效尝试在指定的分钟数小于<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>属性，则成员资格用户被锁定。通过设置锁定用户<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>属性设置为`true`直到通过调用解除锁定用户<xref:System.Web.Security.MembershipUser.UnlockUser%2A>方法。  
  
 如果当前失败的尝试和上次失败的尝试之间的间隔大于<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>属性设置，则当前的无效尝试计为第一个。 如果达到允许的无效尝试的最大数目之前提供有效密码提示问题答案，则无效密码提示问题答案尝试次数设置为 0 （零）。 如果允许无效的最大数目之前提供一个有效的密码尝试次数达到，无效密码尝试次数和无效密码提示问题答案尝试次数设置为 0 （零）。  
  
 无效的密码和密码提示问题答案尝试会互相独立地累积。 例如，如果<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>设置为 5，和三次无效密码尝试，跟两次无效密码提示问题答案尝试，则必须在进行两次无效密码尝试 （或三次无效密码提示问题答案尝试） <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>成员资格用户才会被锁定。  
  
 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>属性值使用应用程序配置中设置`passwordAttemptWindow`的属性[成员身份](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))配置元素节的配置。  
  
 如果<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>属性设置为`false`，不跟踪无效密码提示问题答案尝试次数。  
  
   
  
## Examples  
 下面的代码示例演示[成员资格](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))中的元素`system.web`的 ASP.NET 应用程序的 Web.config 文件部分。 它指定应用程序使用的实例<xref:System.Web.Security.SqlMembershipProvider>，并设置`maxInvalidPasswordAttempts`属性为五个的无效尝试和`passwordAttemptWindow`为 30 分钟。  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      maxInvalidPasswordAttempts="5"  
      passwordAttemptWindow="30"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public static string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordStrengthRegularExpression : string" Usage="System.Web.Security.Membership.PasswordStrengthRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于计算密码的正则表达式。</summary>
        <value>用于计算密码的正则表达式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>属性获取用于评估从提供程序中指定的密码复杂性的正则表达式<xref:System.Web.Security.Membership.Provider%2A>属性。  
  
 <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>属性设置在应用程序配置中使用`passwordStrengthRegularExpression`的属性[成员身份](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))配置元素。  
  
 有关正则表达式的详细信息，请参阅[.NET Framework 正则表达式](~/docs/standard/base-types/regular-expressions.md)。  
  
   
  
## Examples  
 下面的代码示例演示[成员资格](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))中的配置元素`system.web`部分中的应用程序的 Web.config 文件。 它指定应用程序使用的实例<xref:System.Web.Security.SqlMembershipProvider>类提供成员资格服务和集`passwordStrengthRegularExpression`属性设置为验证密码的正则表达式满足以下条件：  
  
-   大于七个字符。  
  
-   包含至少一个数字。  
  
-   包含至少一个特殊的 （非字母数字） 字符。  
  
 如果密码不满足这些条件，成员资格提供程序不接受此密码。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression=" @\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
   </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Security.MembershipProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Provider As MembershipProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::MembershipProvider ^ Provider { System::Web::Security::MembershipProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.Security.MembershipProvider" Usage="System.Web.Security.Membership.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对应用程序的默认成员资格提供程序的引用。</summary>
        <value>使用 <see cref="T:System.Web.Security.MembershipProvider" /> 抽象基类公开的应用程序的默认成员资格提供程序。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.Provider%2A>属性使您能够直接引用应用程序的默认成员资格提供程序。 这常用于访问不属于的自定义成员的成员资格提供程序的一部分<xref:System.Web.Security.MembershipProvider>抽象基类。  
  
   
  
## Examples  
 下面的代码示例访问默认<xref:System.Web.Security.SqlMembershipProvider>为应用程序使用启用<xref:System.Web.Security.Membership.Provider%2A>属性，以便确定其值的自定义<xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>属性。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/Providercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.Membership#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/Providervb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Security.MembershipProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Providers As MembershipProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::MembershipProviderCollection ^ Providers { System::Web::Security::MembershipProviderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Web.Security.MembershipProviderCollection" Usage="System.Web.Security.Membership.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个用于 ASP.NET 应用程序的成员资格提供程序的集合。</summary>
        <value>一个为 ASP.NET 应用程序配置的成员资格提供程序的 <see cref="T:System.Web.Security.MembershipProviderCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.Providers%2A>属性引用所有启用的应用程序的成员资格提供程序，其中包括提供程序添加该应用程序的 Web.config 文件和所有应用程序的 Machine.config 文件中。 您可以控制哪些成员资格提供程序可用于应用程序中使用[提供程序](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/6d4936ht(v%3dvs.100))的元素[成员身份](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))中你的应用程序的配置部分。 例如，下面的示例演示[成员资格](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))删除应用程序的 Web.config 文件中的部分<xref:System.Web.Security.SqlMembershipProvider>实例 (`AspNetSqlProvider`) 指定计算机配置文件中，并将添加<xref:System.Web.Security.SqlMembershipProvider>实例名为`SqlProvider`作为应用程序的默认成员资格提供程序。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <remove name="AspNetSqlProvider" />  
          <add name="SqlProvider"  
            type="System.Web.Security.SqlMembershipProvider"  
            connectionStringName="SqlServices"  
            enablePasswordRetrieval="false"  
            enablePasswordReset="true"  
            requiresQuestionAndAnswer="true"  
            passwordFormat="Hashed"  
            applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 指定时[元素 （ASP.NET 设置架构） 的成员身份](https://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)部分中，您必须指定`defaultProvider`属性。 如果未指定[元素 （ASP.NET 设置架构） 的成员身份](https://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)将 web.config 文件，计算机配置中的值中使用并<xref:System.Web.Security.SqlMembershipProvider>实例名为`AspNetSqlProvider`作为建立`defaultProvider`.  
  
 你可以获取从提供程序的强类型化的引用<xref:System.Web.Security.Membership.Providers%2A>通过按名称索引成员资格提供程序并将其强制转换为所需的类型的集合。  
  
   
  
## Examples  
 下面的代码示例列出了为应用程序和其各自的类型启用的提供程序。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/Providerscs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.Membership#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/Providersvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public static bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresQuestionAndAnswer : bool" Usage="System.Web.Security.Membership.RequiresQuestionAndAnswer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示默认成员资格提供程序是否求用户在进行密码重置和检索时回答密码提示问题。</summary>
        <value>如果密码重置和检索需要提供密码提示问题答案，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 要求密码提示问题和答案可提供额外的安全时检索或重置用户的密码。 用户可以提供问题和答案创建其用户名称时，他们将可以更高版本使用，以检索或重置忘记的密码。  
  
 <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> 当已选中<xref:System.Web.Security.MembershipUser.ResetPassword%2A>或<xref:System.Web.Security.MembershipUser.GetPassword%2A>调用。 使用.NET Framework 提供的提供程序将引发<xref:System.NotSupportedException>如果<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>是`true`提供的密码答案是`null`。  
  
 如果<xref:System.Web.Security.Membership.EnablePasswordReset%2A>并<xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A>都`false`，<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>仍可用于创建新用户时强制实施问题和答案的创建; 但是，问题和答案将不使用。 你将能够使用检索问题<xref:System.Web.Security.MembershipUser>类。  
  
 有关详细信息，请参阅 <xref:System.Web.Security.MembershipUser.ResetPassword%2A> 和 <xref:System.Web.Security.MembershipUser.GetPassword%2A>。  
  
   
  
## Examples  
 下面的代码示例演示[成员资格](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))中的元素`system.web`的 ASP.NET 应用程序的 Web.config 文件部分。 它指定应用程序使用的实例<xref:System.Web.Security.SqlMembershipProvider>、 启用密码重置，并在执行重置时需要密码提示问题答案。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 下面的代码示例检查的值<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>并添加密码提示问题和答案来创建用户时提供所需的控件。  
  
> [!IMPORTANT]
>  此示例包括接受用户输入，这是潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public static void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberSignature Language="F#" Value="static member UpdateUser : System.Web.Security.MembershipUser -&gt; unit" Usage="System.Web.Security.Membership.UpdateUser user" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">一个 <see cref="T:System.Web.Security.MembershipUser" /> 对象，表示要更新的用户及其更新信息。</param>
        <summary>用指定用户的信息更新数据库。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.UpdateUser%2A> 将作为输入，<xref:System.Web.Security.MembershipUser>对象的成员资格用户的当前信息填充和更新数据源的属性值与<xref:System.Web.Security.MembershipUser>对象。 您可以构造一个新<xref:System.Web.Security.MembershipUser>，或检索<xref:System.Web.Security.MembershipUser>对象用在数据源中使用的当前值填充<xref:System.Web.Security.Membership.GetUser%2A>， <xref:System.Web.Security.Membership.GetAllUsers%2A>， <xref:System.Web.Security.Membership.FindUsersByName%2A>，或<xref:System.Web.Security.Membership.FindUsersByEmail%2A>方法。  
  
   
  
## Examples  
 下面的代码示例更新当前登录的用户的电子邮件地址。  
  
> [!IMPORTANT]
>  此示例包含一个文本框，用于接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="user" /> 为 <see langword="null" />。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="UserIsOnlineTimeWindow">
      <MemberSignature Language="C#" Value="public static int UserIsOnlineTimeWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 UserIsOnlineTimeWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.UserIsOnlineTimeWindow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UserIsOnlineTimeWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int UserIsOnlineTimeWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.UserIsOnlineTimeWindow : int" Usage="System.Web.Security.Membership.UserIsOnlineTimeWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定用户在最近一次活动的日期/时间戳之后被视为联机的分钟数。</summary>
        <value>用户在最近一次活动的日期/时间戳之后被视为联机的分钟数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>期间对的调用检查属性值<xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A>。 如果<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>晚于当前日期和时间减去用户为<xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>值以分钟为单位，则被视为联机。 您可以确定成员资格用户是否被视为与联机<xref:System.Web.Security.MembershipUser.IsOnline%2A>属性的<xref:System.Web.Security.MembershipUser>类。  
  
 <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>的用户的凭据成功通过验证时，将更新用户<xref:System.Web.Security.Membership.ValidateUser%2A>方法。 此外可以更新<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>时调用的一个成员资格用户<xref:System.Web.Security.Membership.GetUser%2A>重载。 如果在调用<xref:System.Web.Security.Membership.GetUser%2A>采用重载`userIsOnline`参数，将值指定为`true`更新<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>用户。  
  
   
  
## Examples  
 下面的代码示例演示[成员资格](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))中的元素`system.web`的 ASP.NET 应用程序的 Web.config 文件部分。 它指定应用程序使用的实例<xref:System.Web.Security.SqlMembershipProvider>，并设置`userIsOnlineTimeWindow`属性为 20 分钟。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public static bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member ValidateUser : string * string -&gt; bool" Usage="System.Web.Security.Membership.ValidateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要验证的用户的名称。</param>
        <param name="password">指定的用户的密码。</param>
        <summary>验证提供的用户名和密码是有效的。</summary>
        <returns>如果提供的用户名和密码有效，则返回 <see langword="true" />；否则返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.ValidateUser%2A> 提供验证的用户名和密码从数据源的简单方法。 请注意，如果`username`参数为空或`null`、<xref:System.Web.HttpException>引发。  
  
   
  
## Examples  
 下面的代码示例显示了 ASP.NET 应用程序配置为使用 forms 身份验证的登录页和<xref:System.Web.Security.Membership>类。 如果提供的用户凭据无效，则是向用户显示一条消息。 否则，将用户定向到最初请求的 URL 通过<xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>方法。  
  
> [!IMPORTANT]
>  此示例包含一个文本框，用于接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="ValidatingPassword">
      <MemberSignature Language="C#" Value="public static event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword" />
      <MemberSignature Language="DocId" Value="E:System.Web.Security.Membership.ValidatingPassword" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event ValidatingPassword As MembershipValidatePasswordEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Web::Security::MembershipValidatePasswordEventHandler ^ ValidatingPassword;" />
      <MemberSignature Language="F#" Value="member this.ValidatingPassword : System.Web.Security.MembershipValidatePasswordEventHandler " Usage="member this.ValidatingPassword : System.Web.Security.MembershipValidatePasswordEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipValidatePasswordEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在创建了用户、更改了密码或重置了密码时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.ValidatingPassword>引发事件时<xref:System.Web.Security.MembershipProvider.CreateUser%2A>方法，<xref:System.Web.Security.MembershipProvider.ChangePassword%2A>方法，或<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>调用的成员资格提供程序的方法。  
  
 可以使用<xref:System.Web.Security.MembershipProvider.ValidatingPassword>事件，以便验证密码的格式和成员资格用户的值。  
  
 您可以取消当前<xref:System.Web.Security.MembershipProvider.CreateUser%2A>， <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>，或<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>通过设置操作<xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A>所提供的属性<xref:System.Web.Security.ValidatePasswordEventArgs>到`true`期间<xref:System.Web.Security.MembershipProvider.ValidatingPassword>事件。  
  
 如果通过设置取消当前操作<xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A>属性设置为`true`，可以设置<xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>与提供<xref:System.Web.Security.ValidatePasswordEventArgs>描述密码验证失败的原因的异常。 调用方法将引发的异常的<xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>属性设置为。 如果<xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>属性是`null`，调用方将引发一般的密码验证失败异常。  
  
   
  
## Examples  
 下面的代码示例演示<xref:System.Web.Security.MembershipProvider.ValidatingPassword>事件，用于验证用户的密码的格式并取消操作，如果密码与所需的格式不匹配。  
  
 [!code-csharp[System.Web.Security.Membership#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/CreateUser3cs.aspx#11)]
 [!code-vb[System.Web.Security.Membership#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/CreateUser3vb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
  </Members>
</Type>