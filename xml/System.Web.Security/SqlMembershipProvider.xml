<Type Name="SqlMembershipProvider" FullName="System.Web.Security.SqlMembershipProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cab1f2e0470805768d4c0d846b9af39a7b8061e9" /><Meta Name="ms.sourcegitcommit" Value="954560a1b131dce1872e29ce5c01cd9f2c927f11" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/11/2019" /><Meta Name="ms.locfileid" Value="54235081" /></Metadata><TypeSignature Language="C#" Value="public class SqlMembershipProvider : System.Web.Security.MembershipProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlMembershipProvider extends System.Web.Security.MembershipProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.SqlMembershipProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlMembershipProvider&#xA;Inherits MembershipProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlMembershipProvider : System::Web::Security::MembershipProvider" />
  <TypeSignature Language="F#" Value="type SqlMembershipProvider = class&#xA;    inherit MembershipProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.MembershipProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>管理 SQL Server 数据库中 ASP.NET 应用程序的成员资格信息存储。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此类<xref:System.Web.Security.Membership>和<xref:System.Web.Security.MembershipUser>类提供成员资格服务使用 SQL Server 数据库的 ASP.NET 应用程序。 不能使用<xref:System.Web.Security.SqlMembershipProvider>不带 SQL Server。 您的计算机具有安装默认实例名称与 SQL Server Express 和启用，用户实例时<xref:System.Web.Security.SqlMembershipProvider>对象将创建一个数据库，称为`aspnetdb`在应用程序的`App_Data`directory 第一次应用程序运行时。  
  
 若要手动创建数据库，运行`Aspnet_regsql.exe`中找到可执行文件`%systemroot%\Microsoft.NET\Framework\ versionNumber`文件夹，并指定`-A m`选项 (例如`aspnet_regsql.exe -A m`)。 创建的数据库称为 Aspnetdb。 或者，运行`Aspnet_regsql.exe`GUI 配置模式中请求并选择要配置所有 ASP.NET 功能。  
  
 如果使用集成的安全性的连接字符串配置成员资格提供程序，ASP.NET 应用程序的进程帐户必须有权连接到 SQL Server 数据库。  
  
 在 Machine.config 文件定义一个默认值<xref:System.Web.Security.SqlMembershipProvider>实例名为`AspNetSqlMembershipProvider`： 连接到本地计算机上的默认 SQL Server Express 实例。 如果您安装了 SQL Server Express 使用默认实例名称，或 ASP.NET 应用程序，可以在 Web.config 文件中定义你自己的实例，可以使用提供程序的此实例。  
  
 如果您设置`passwordCompatMode`属性为<xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework40>、 应用程序可以使用哈希算法和加密的成员身份选项，ASP.NET 4 中增加了。 但是，如果`passwordCompatMode`属性设置为<xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20>、 仅哈希和加密的成员身份选项从 ASP.NET 2.0 中，ASP.NET 3.5 中，并可以在 ASP.NET 3.5 SP1。 默认值为 <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20>。 有关详情，请参阅<xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>。  
  
   
  
## Examples  
 下面的代码示例显示了配置为使用 ASP.NET 应用程序的 Web.config 文件<xref:System.Web.Security.SqlMembershipProvider>。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx"  
        name=".ASPXFORMSAUTH" />  
    </authentication>  
    <authorization>  
      <deny users="?" />  
    </authorization>  
    <membership defaultProvider="SqlProvider"  
      userIsOnlineTimeWindow="15">  
      <providers>  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          applicationName="MyApplication"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          requiresUniqueEmail="false"  
          passwordFormat="Hashed"  
          maxInvalidPasswordAttempts="5"  
          passwordAttemptWindow="10" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlMembershipProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlMembershipProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Security.SqlMembershipProvider" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.%23ctor%2A>构造函数由 ASP.NET 创建的实例调用<xref:System.Web.Security.SqlMembershipProvider>为应用程序的配置中指定的类。 此构造函数不是要在代码中使用。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.SqlMembershipProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要存储和检索其成员资格信息的应用程序的名称。</summary>
        <value>应用程序的名称，将存储和检索该应用程序的成员资格信息。 默认值为当前 <see cref="P:System.Web.HttpRequest.ApplicationPath" /> 的 <see cref="P:System.Web.HttpContext.Request" /> 属性值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>由<xref:System.Web.Security.SqlMembershipProvider>对用户信息进行分组。 通过符合条件的用户信息与应用程序名称，可以在单个数据库中存储多个应用程序的信息，而无需重复的用户名称之间发生冲突。 此外，多个 ASP.NET 应用程序可以通过指定相同的值中使用相同的用户数据库<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>属性。 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>可以以编程方式设置属性或者可以使用 Web 应用程序配置文件中以声明方式设置`applicationName`属性。  
  
 如果没有为指定值`applicationName`Web 应用程序，在配置文件中的属性则<xref:System.Web.HttpRequest.ApplicationPath%2A>使用对应用程序所做的第一个请求的属性值。  
  
> [!CAUTION]
>  因为一个默认成员资格提供程序实例用于所有服务的请求<xref:System.Web.HttpApplication>对象，可以有多个请求同时执行，并尝试设置<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>属性值。 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>属性不是线程安全的多个写入操作，且不断变化<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>属性值可能会导致多个用户的应用程序的意外行为。 我们建议你避免编写代码来允许用户设置<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>属性除非必要，否则。 应用程序的示例情况<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>属性可能需要是管理应用程序，用于管理多个应用程序的成员身份数据。 此类应用程序应在单用户应用程序并不是 Web 应用程序。  
  
   
  
## Examples  
 下面的代码示例演示[成员资格](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))中的元素`system.web`的 ASP.NET 应用程序的 Web.config 文件部分。 指定应用程序的<xref:System.Web.Security.SqlMembershipProvider>实例并设置<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>到`MyApplication`。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">尝试将 <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> 属性设置为空字符串或 <see langword="null" />。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">尝试将 <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> 属性设置为长于 256 个字符的字符串。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public override bool ChangePassword (string username, string oldPassword, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePassword(string username, string oldPassword, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePassword (username As String, oldPassword As String, newPassword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePassword(System::String ^ username, System::String ^ oldPassword, System::String ^ newPassword);" />
      <MemberSignature Language="F#" Value="override this.ChangePassword : string * string * string -&gt; bool" Usage="sqlMembershipProvider.ChangePassword (username, oldPassword, newPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="oldPassword" Type="System.String" />
        <Parameter Name="newPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要为其更新密码的用户。</param>
        <param name="oldPassword">指定的用户的当前密码。</param>
        <param name="newPassword">指定的用户的新密码。</param>
        <summary>修改用户密码。</summary>
        <returns>如果密码更新成功，则为 <see langword="true" />。 如果提供的旧密码无效、用户被锁定或数据库中不存在该用户，则返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法<xref:System.Web.Security.Membership>类在 ASP.NET 应用程序的配置文件 (Web.config) 中指定的 SQL Server 数据库中的用户对密码进行更新。  
  
 最大密码长度为 128 个字符。  
  
 如果不正确密码提供给<xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A>方法中，内部计数器跟踪无效密码尝试次数就会递增 1。 这可能导致用户被锁定而无法登录，直到通过调用清除锁定状态<xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>方法。 如果提供正确的密码，用户当前未被锁定，则内部计数器跟踪无效密码和密码提示问题答案尝试将重置为零。 有关详细信息，请参阅<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>和<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>属性。  
  
 您可以调用<xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A>方法首先获取对引用由直接<xref:System.Web.Security.SqlMembershipProvider>实例通过<xref:System.Web.Security.Membership.Provider%2A>属性的<xref:System.Web.Security.Membership>类。 <xref:System.Web.Security.Membership.Provider%2A>属性公开`defaultProvider`应用程序的 Web.config 文件中指定。 配置提供程序不是默认的提供程序使用引用<xref:System.Web.Security.Membership.Providers%2A>属性。  
  
 此外可以通过更改用户密码<xref:System.Web.Security.MembershipUser.ChangePassword%2A>方法。  
  
 删除所有参数值的前导和尾随空格。  
  
   
  
## Examples  
 下面的代码示例修改为指定的用户的密码。  
  
> [!NOTE]
>  此示例使用<xref:System.Web.Security.Membership.Provider%2A>的属性<xref:System.Web.Security.Membership>类来调用<xref:System.Web.Security.SqlMembershipProvider>指定为`defaultProvider`Web.config 文件中。 如果需要访问作为类型的默认提供程序<xref:System.Web.Security.SqlMembershipProvider>，可以强制转换<xref:System.Web.Security.Membership.Provider%2A>属性的<xref:System.Web.Security.Membership>类。 若要访问其他配置提供程序为特定的提供程序类型，你可以通过其配置名称和访问它们<xref:System.Web.Security.Membership.Providers%2A>属性的<xref:System.Web.Security.Membership>类，并应将它们转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordcs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> 为空字符串 ("")、包含一个逗号或长度超过 256 个字符。  
  
- 或 - 
 <paramref name="oldPassword" /> 为空字符串，或者长度超过 128 个字符。  
  
- 或 - 
 <paramref name="newPassword" /> 为空字符串，或者长度超过 128 个字符。  
  
- 或 - 
编码版本的 <paramref name="newPassword" /> 的长度超过 128 个字符。  
  
- 或 - 
更改密码操作被 <see cref="E:System.Web.Security.Membership.ValidatingPassword" /> 事件的订户取消，并且 <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" /> 属性为 <see langword="null" />。  
  
- 或 - 
<paramref name="newPassword" /> 的长度小于 <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" /> 属性中指定的最小长度。  
  
- 或 - 
<paramref name="newPassword" /> 中非字母字符数量少于 <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" /> 属性中指定的所需非字母字符数量。  
  
- 或 - 
 <paramref name="newPassword" /> 未通过 <see cref="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" /> 属性中定义的正则表达式的验证。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="oldPassword" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="newPassword" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Web.Security.MembershipPasswordException">在数据库中找不到 <paramref name="username" />。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">设置数据库新密码值时出现错误。</exception>
        <exception cref="T:System.Exception">发生了未经处理的异常。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePasswordQuestionAndAnswer(string username, string password, string newPasswordQuestion, string newPasswordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePasswordQuestionAndAnswer (username As String, password As String, newPasswordQuestion As String, newPasswordAnswer As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePasswordQuestionAndAnswer(System::String ^ username, System::String ^ password, System::String ^ newPasswordQuestion, System::String ^ newPasswordAnswer);" />
      <MemberSignature Language="F#" Value="override this.ChangePasswordQuestionAndAnswer : string * string * string * string -&gt; bool" Usage="sqlMembershipProvider.ChangePasswordQuestionAndAnswer (username, password, newPasswordQuestion, newPasswordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="newPasswordQuestion" Type="System.String" />
        <Parameter Name="newPasswordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要为其更改密码提示问题和答案的用户。</param>
        <param name="password">指定的用户的密码。</param>
        <param name="newPasswordQuestion">指定的用户的新密码提示问题。</param>
        <param name="newPasswordAnswer">指定的用户的新密码提示问题答案。</param>
        <summary>更新 SQL Server 成员资格数据库中用户的密码提示问题和答案。</summary>
        <returns>如果更新操作成功，则为 <see langword="true" />；否则为 <see langword="false" />。 如果 <paramref name="password" /> 错误、用户被锁定或数据库中不存在该用户，还将返回 <see langword="false" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法<xref:System.Web.Security.MembershipUser>类，以更新密码提示问题和答案 ASP.NET 应用程序的配置文件 (Web.config) 中指定的 SQL Server 数据库中的用户。 使用中指定的格式加密密码提示问题答案<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>属性。  
  
 要求密码提示问题和答案可提供额外的安全时检索或重置用户的密码。 在创建时的用户名称，用户可以提供的问题和答案，以后可用于检索或重置忘记的密码。 <xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A>方法更新密码提示问题和答案成员资格用户。  
  
 如果不正确密码提供给<xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A>方法中，内部计数器跟踪无效密码尝试次数就会递增 1。 这可能导致用户被锁定而无法登录，直到通过调用清除锁定状态<xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>方法。 如果提供正确的密码，用户当前未被锁定，则内部计数器跟踪无效密码和密码提示问题答案尝试将重置为零。 有关详细信息，请参阅<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>和<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>属性。  
  
 密码提示问题的最大长度为 256 个字符。 密码提示问题答案的最大长度为 128 个字符。  
  
 有关详细信息，请参阅<xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>、<xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>和<xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>。  
  
 删除所有参数值的前导和尾随空格。  
  
   
  
## Examples  
 下面的代码示例更新密码提示问题和答案的用户。  
  
> [!NOTE]
>  此示例使用<xref:System.Web.Security.Membership.Provider%2A>的属性<xref:System.Web.Security.Membership>类来调用<xref:System.Web.Security.SqlMembershipProvider>指定为`defaultProvider`Web.config 文件中。 如果需要访问作为类型的默认提供程序<xref:System.Web.Security.SqlMembershipProvider>，可以强制转换<xref:System.Web.Security.Membership.Provider%2A>属性的<xref:System.Web.Security.Membership>类。 若要访问其他配置提供程序为特定的提供程序类型，你可以通过其配置名称和访问它们<xref:System.Web.Security.Membership.Providers%2A>属性的<xref:System.Web.Security.Membership>类，并应将它们转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordQuestioncs.aspx#10)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordQuestionvb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> 为空字符串 ("")、包含一个逗号或长度超过 256 个字符。  
  
- 或 - 
 <paramref name="password" /> 为空字符串，或者长度超过 128 个字符。  
  
- 或 - 
 <paramref name="newPasswordQuestion" /> 为空字符串，或者长度超过 256 个字符。  
  
- 或 - 
 <paramref name="newPasswordAnswer" /> 为空字符串，或者长度超过 128 个字符。  
  
- 或 - 
<paramref name="newPasswordAnswer" /> 的编码版本长度 128 个字符。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="password" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="newPasswordQuestion" /> 为 <see langword="null" />，而 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> 为 <see langword="true" />。  
  
- 或 - 
 <paramref name="newPasswordAnswer" /> 为 <see langword="null" />，而 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> 为 <see langword="true" />。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">更改数据库中的密码提示问题和答案时出错。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="override this.CreateUser : string * string * string * string * string * bool * obj *  -&gt; System.Web.Security.MembershipUser" Usage="sqlMembershipProvider.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, providerUserKey, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">新用户的用户名。</param>
        <param name="password">新用户的密码。</param>
        <param name="email">新用户的电子邮件地址。</param>
        <param name="passwordQuestion">新用户的密码提示问题。</param>
        <param name="passwordAnswer">新用户的密码提示问题答案。</param>
        <param name="isApproved">是否批准对新的用户进行验证。</param>
        <param name="providerUserKey">唯一标识 SQL Server 数据库中成员资格用户的 <see cref="T:System.Guid" />。</param>
        <param name="status">一个 <see cref="T:System.Web.Security.MembershipCreateStatus" /> 值，指示是否成功创建用户。</param>
        <summary>向 SQL Server 成员资格数据库添加一个新用户。</summary>
        <returns>用于新创建用户的 <see cref="T:System.Web.Security.MembershipUser" /> 对象。 如果没有创建用户，此方法将返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法<xref:System.Web.Security.Membership>类，以在 ASP.NET 应用程序的配置文件中指定的 SQL Server 数据库中创建一个新用户。  
  
 新的用户标识与已配置<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>。  
  
 如果<xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>属性设置为`true`，并`null`或空字符串 ("") 为指定`email`参数，用户创建将失败。 创建用户也将失败，如果<xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>属性设置为`true`的值指定为`email`参数与已配置的数据库中的现有用户的电子邮件地址重复<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>。  
  
 用户名称的最大长度为 256 个字符。 电子邮件地址的最大长度为 256 个字符。 密码以明文形式或哈希或加密后的最大长度为 128 个字符。  
  
 其他会导致用户创建失败的条件：  
  
-   `password`参数是`null`，或修整后变成空字符串。  
  
-   长度`password`参数是中指定的值小于<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>属性。  
  
-   中非字母字符数`password`参数是中指定的值小于<xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>属性。  
  
-   `password`参数将正则表达式中的不传递<xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>属性。  
  
-   自定义密码验证代码已取消在过程中的用户创建<xref:System.Web.Security.MembershipProvider.ValidatingPassword>事件。  
  
-   <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>属性是`true`并`passwordAnswer`参数为`null`或修整后变成空字符串。  
  
-   `passwordAnswer` 参数是空字符串。  
  
-   `passwordAnswer`参数的长度超过 128 个字符。  
  
-   <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>属性是`true`和密码提示问题是`null`或修整后变成空字符串。  
  
-   `passwordQuestion` 参数是空字符串。  
  
-   `passwordQuestion`参数的长度超过 256 个字符。  
  
-   `providerUserKey`参数设置为一种类型的对象而不<xref:System.Guid?displayProperty=nameWithType>。  
  
-   `providerUserKey`参数是现有的用户密钥的副本。  
  
-   `username`参数是重复的现有用户的名称。  
  
 删除所有字符串参数值的前导和尾随空格。  
  
   
  
## Examples  
 下面的代码示例创建新的 ASP.NET 应用程序配置为使用 forms 身份验证用户和<xref:System.Web.Security.SqlMembershipProvider>。 如果未成功创建用户，向用户显示一条消息。 否则，用户重定向到应用程序的登录页。  
  
> [!NOTE]
>  此示例会调用<xref:System.Web.Security.SqlMembershipProvider>指定为`defaultProvider`在 Web.config 文件中使用<xref:System.Web.Security.Membership>类。 如果需要访问作为类型的默认提供程序<xref:System.Web.Security.SqlMembershipProvider>，可以强制转换<xref:System.Web.Security.Membership.Provider%2A>属性的<xref:System.Web.Security.Membership>类。 若要访问其他配置提供程序为特定的提供程序类型，你可以通过其配置名称和访问它们<xref:System.Web.Security.Membership.Providers%2A>属性的<xref:System.Web.Security.Membership>类，并应将它们转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public override bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberSignature Language="F#" Value="override this.DeleteUser : string * bool -&gt; bool" Usage="sqlMembershipProvider.DeleteUser (username, deleteAllRelatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">要删除的用户的名称。</param>
        <param name="deleteAllRelatedData">如果要从数据库中删除与用户相关的数据，则为 <see langword="true" />；如果要在数据库中保留与用户相关的数据，则为 <see langword="false" />。</param>
        <summary>从 SQL Server 成员资格数据库删除用户的成员资格信息。</summary>
        <returns>如果用户已删除，则为 <see langword="true" />；否则为 <see langword="false" />。 如果数据库中没有此用户，也会返回 <see langword="false" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法<xref:System.Web.Security.Membership>类，以从 ASP.NET 应用程序的配置文件中指定的 SQL Server 数据库中删除用户。  
  
 仅删除已删除的用户从已配置<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>。  
  
 如果`deleteAllRelatedData`设置为`true`，然后存储的所有用户数据在数据库中为<xref:System.Web.Security.Roles>， <xref:System.Web.HttpContext.Profile%2A>，或<xref:System.Web.UI.WebControls.WebParts.WebPart>个性化功能也会删除已配置的<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>。  
  
 如果成员资格用户不存在在数据库中，并`deleteAllRelatedData`是`true`，然后相关的数据并为存储的用户信息<xref:System.Web.Security.Roles>， <xref:System.Web.HttpContext.Profile%2A>，或<xref:System.Web.UI.WebControls.WebParts.WebPart>个性化功能仍将被删除的应用程序中指定<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>属性。 因此，<xref:System.Web.Security.SqlMembershipProvider.DeleteUser%2A>方法可用于快速删除与用户相关的信息，即使<xref:System.Web.Security.SqlMembershipProvider>对象未用于存储身份验证的用户信息。  
  
 删除 `username` 参数值的前导和尾随空格。  
  
   
  
## Examples  
 下面的代码示例将删除当前登录的用户。  
  
> [!NOTE]
>  此示例使用<xref:System.Web.Security.SqlMembershipProvider>来调用<xref:System.Web.Security.SqlMembershipProvider>指定为`defaultProvider`Web.config 文件中。 如果需要访问作为类型的默认提供程序<xref:System.Web.Security.SqlMembershipProvider>，可以强制转换<xref:System.Web.Security.Membership.Provider%2A>属性的<xref:System.Web.Security.Membership>类。 若要访问其他配置提供程序为特定的提供程序类型，你可以通过其配置名称和访问它们<xref:System.Web.Security.Membership.Providers%2A>属性的<xref:System.Web.Security.Membership>类，并应将它们转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/DeleteUsercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/DeleteUservb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> 为空字符串 ("")、包含一个逗号或长度超过 256 个字符。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> 为 <see langword="null" />。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordReset { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordReset : bool" Usage="System.Web.Security.SqlMembershipProvider.EnablePasswordReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，指示 SQL Server 成员资格提供程序是否配置为允许用户重置其密码。</summary>
        <value>如果成员资格提供程序支持密码重置，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 密码重置允许成员资格提供程序，以替换当前的密码的用户名具有一个新的随机生成的密码。 时，此操作特别有用<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>属性设置为<xref:System.Web.Security.MembershipPasswordFormat.Hashed>，因为用户不能检索哈希的密码值。  
  
   
  
## Examples  
 下面的代码示例演示[成员资格](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))中的元素`system.web`的 ASP.NET 应用程序的 Web.config 文件部分。 指定应用程序的<xref:System.Web.Security.SqlMembershipProvider>实例并启用密码重置。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordRetrieval : bool" Usage="System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，指示 SQL Server 成员资格提供程序是否配置为允许用户检索其密码。</summary>
        <value>如果成员资格提供程序支持密码检索，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>属性设置为<xref:System.Web.Security.MembershipPasswordFormat.Hashed>，用户将不能从数据库中检索现有密码。 <xref:System.Web.Security.MembershipPasswordFormat.Hashed>密码格式提供单向编码的密码值。 密码是随机生成的 salt 值使用哈希处理，相比于身份验证的数据库中存储的值。 哈希的值不能为未编码以检索原始密码值。  
  
 如果<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>属性设置为<xref:System.Web.Security.MembershipPasswordFormat.Hashed>，并<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A>设置为`true`、<xref:System.Configuration.Provider.ProviderException>初始化提供程序时引发。  
  
   
  
## Examples  
 下面的代码示例演示[成员资格](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))中的元素`system.web`的 ASP.NET 应用程序的 Web.config 文件部分。 指定应用程序的<xref:System.Web.Security.SqlMembershipProvider>实例并启用密码检索。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="false"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.FindUsersByEmail : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="sqlMembershipProvider.FindUsersByEmail (emailToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">要搜索的电子邮件地址。</param>
        <param name="pageIndex">要返回的结果页的索引。 <paramref name="pageIndex" /> 从零开始。</param>
        <param name="pageSize">要返回的结果页的大小。</param>
        <param name="totalRecords">匹配用户的总数。</param>
        <summary>返回成员资格用户集合，这些用户的电子邮件地址字段包含指定的电子邮件地址。</summary>
        <returns>包含一页 <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> 对象的 <see cref="T:System.Web.Security.MembershipUserCollection" />，这些对象从 <paramref name="pageIndex" /> 指定的页开始。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> 返回成员资格用户的电子邮件地址在其中包含与所提供的匹配项的列表`emailToMatch`已配置的<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>。  
  
 <xref:System.Web.Security.SqlMembershipProvider>用户名相匹配的搜索`emailToMatch`使用 LIKE 子句的参数值。 SQL Server 通配符字符可以包含在参数值。 例如，如果`emailToMatch`参数设置为"address@example.com"，然后使用电子邮件地址的用户信息"address@example.com"如果存在，则返回。 如果`emailToMatch`参数设置为"%@example.com"，然后使用电子邮件地址的用户信息"address@example.com"，"address2@example.com"，"admin@example.com"，依次类推返回。  
  
 返回的结果<xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A>受到`pageIndex`和`pageSize`参数。 `pageSize`参数标识的最大数目<xref:System.Web.Security.MembershipUser>对象中返回<xref:System.Web.Security.MembershipUserCollection>。 `pageIndex`参数标识要返回，其中，零标识的第一页的结果页。 `totalRecords`参数是`out`参数设置为已配置的成员资格用户的总数`applicationName`。 例如，如果有已配置的 13 个用户`applicationName`，并`pageIndex`值为 1，`pageSize`为 5，<xref:System.Web.Security.MembershipUserCollection>返回将包含 6 到返回的第十个用户。 `totalRecords`参数将设置为 13。  
  
 删除 `emailToMatch` 参数值的前导和尾随空格。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A>方法来检索成员资格用户信息并显示结果页面中的数据。  
  
> [!NOTE]
>  此示例使用<xref:System.Web.Security.Membership>类来调用<xref:System.Web.Security.SqlMembershipProvider>指定为`defaultProvider`Web.config 文件中。 如果需要访问作为类型的默认提供程序<xref:System.Web.Security.SqlMembershipProvider>，可以强制转换<xref:System.Web.Security.Membership.Provider%2A>属性的<xref:System.Web.Security.Membership>类。 若要访问其他配置提供程序为特定的提供程序类型，你可以通过其配置名称和访问它们<xref:System.Web.Security.Membership.Providers%2A>属性的<xref:System.Web.Security.Membership>类，并应将它们转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByEmailcs.aspx#13)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByEmailvb.aspx#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="emailToMatch" /> 的长度超过 256 个字符。  
  
- 或 - 
 <paramref name="pageIndex" /> 小于零。  
  
- 或 - 
 <paramref name="pageSize" /> 小于一。  
  
- 或 - 
 <paramref name="pageIndex" /> 乘以 <paramref name="pageSize" />，然后加上 <paramref name="pageSize" /> 再减去 1 后得到的值大于 <see cref="F:System.Int32.MaxValue" />。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.FindUsersByName : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="sqlMembershipProvider.FindUsersByName (usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">要搜索的用户名。</param>
        <param name="pageIndex">要返回的结果页的索引。 <paramref name="pageIndex" /> 从零开始。</param>
        <param name="pageSize">要返回的结果页的大小。</param>
        <param name="totalRecords">当此方法返回时，此参数包含匹配用户的总数。</param>
        <summary>获取成员资格用户的集合，其中用户名包含要匹配的指定用户名。</summary>
        <returns>包含一页 <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> 对象的 <see cref="T:System.Web.Security.MembershipUserCollection" />，这些对象从 <paramref name="pageIndex" /> 指定的页开始。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> 返回成员资格用户的用户名为其包含与所提供的匹配项的列表`usernameToMatch`已配置的<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>。  
  
 <xref:System.Web.Security.SqlMembershipProvider>用户名相匹配的搜索`usernameToMatch`使用 LIKE 子句的参数值。 SQL Server 通配符字符可以在包含参数值。 例如，如果`usernameToMatch`参数设置为"user1"，则返回用户信息的用户的用户名为"user1"，如果它存在。 如果`usernameToMatch`参数设置为"user %"，则"user1"、"user2"、"user_admin"的用户的用户名的用户信息并返回等等。  
  
 返回的结果<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>受到`pageIndex`和`pageSize`参数。 `pageSize`参数标识的最大数目<xref:System.Web.Security.MembershipUser>对象中返回<xref:System.Web.Security.MembershipUserCollection>。 `pageIndex`参数标识要返回，其中，零标识的第一页的结果页。 `totalRecords`参数是`out`参数设置为已配置的成员资格用户的总数`applicationName`。 例如，如果有已配置的 13 个用户`applicationName`，并`pageIndex`值为 1，`pageSize`为 5，<xref:System.Web.Security.MembershipUserCollection>返回将包含 6 到返回的第十个用户。 `totalRecords`参数将设置为 13。  
  
 删除 `usernameToMatch` 参数值的前导和尾随空格。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>方法来检索成员资格用户信息并显示结果页面中的数据。  
  
> [!NOTE]
>  此示例使用 System.Web.Security.SqlMembershipProvider 来调用<xref:System.Web.Security.SqlMembershipProvider>指定为`defaultProvider`Web.config 文件中。 如果需要访问作为类型的默认提供程序<xref:System.Web.Security.SqlMembershipProvider>，可以强制转换<xref:System.Web.Security.Membership.Provider%2A>属性的<xref:System.Web.Security.Membership>类。 若要访问其他配置提供程序为特定的提供程序类型，你可以通过其配置名称和访问它们<xref:System.Web.Security.Membership.Providers%2A>属性的<xref:System.Web.Security.Membership>类，并应将它们转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByNamecs.aspx#12)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByNamevb.aspx#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="usernameToMatch" /> 为空字符串 ("")，或者长度超过 256 个字符。  
  
- 或 - 
 <paramref name="pageIndex" /> 小于零。  
  
- 或 - 
 <paramref name="pageSize" /> 小于 1。  
  
- 或 - 
 <paramref name="pageIndex" /> 乘以 <paramref name="pageSize" />，然后加上 <paramref name="pageSize" /> 再减去 1 后得到的值大于 <see cref="F:System.Int32.MaxValue" />。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernameToMatch" /> 为 <see langword="null" />。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="GeneratePassword">
      <MemberSignature Language="C#" Value="public virtual string GeneratePassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GeneratePassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GeneratePassword" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GeneratePassword () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GeneratePassword();" />
      <MemberSignature Language="F#" Value="abstract member GeneratePassword : unit -&gt; string&#xA;override this.GeneratePassword : unit -&gt; string" Usage="sqlMembershipProvider.GeneratePassword " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>生成长度至少为 14 个字符的随机密码。</summary>
        <returns>长度至少为 14 个字符的随机密码。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership>类提供了<xref:System.Web.Security.Membership.GeneratePassword%2A>方法，将生成指定的密码大小与至少指定的数量的非字母字符。 <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A>方法<xref:System.Web.Security.SqlMembershipProvider>调用<xref:System.Web.Security.Membership.GeneratePassword%2A>方法的<xref:System.Web.Security.Membership>类检索至少为 14 个字符的随机密码。 如果<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>属性大于 14，则返回的密码将在指定的长度<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>属性。  
  
 具体而言，可以调用<xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A>方法通过引用<xref:System.Web.Security.SqlMembershipProvider>类直接从<xref:System.Web.Security.Membership.Provider%2A>属性的<xref:System.Web.Security.Membership>类。  
  
 生成的密码仅包含字母数字字符和以下标点符号： `!@#$%^&*()_-+=[{]};:<>|./?`。 没有隐藏的或非可打印的控制字符都包含在生成的密码。  
  
> [!NOTE]
>  通过创建随机密码<xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A>方法不能保证传递中的正则表达式<xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>属性。 但是，随机的密码将符合确立的条件<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>和<xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>属性。  
  
   
  
## Examples  
 下面的代码示例将生成随机 10 个字符的密码。  
  
 [!code-csharp[System.Web.Security.SqlMembershipProvider#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GeneratePasswordcs.aspx#9)]
 [!code-vb[System.Web.Security.SqlMembershipProvider#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GeneratePasswordvb.aspx#9)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.GetAllUsers : int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="sqlMembershipProvider.GetAllUsers (pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">要返回的结果页的索引。 <paramref name="pageIndex" /> 从零开始。</param>
        <param name="pageSize">要返回的结果页的大小。</param>
        <param name="totalRecords">用户的总数。</param>
        <summary>获取 SQL Server 成员资格数据库中所有用户的集合。</summary>
        <returns><see cref="T:System.Web.Security.MembershipUserCollection" /> 对象的 <see cref="T:System.Web.Security.MembershipUser" />，表示数据库中配置的 <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> 的所有用户。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法<xref:System.Web.Security.Membership>类从 ASP.NET 应用程序的配置文件 (Web.config) 中指定的 SQL Server 数据库中检索用户信息。  
  
 返回的结果<xref:System.Web.Security.SqlMembershipProvider.GetAllUsers%2A>受到`pageIndex`和`pageSize`参数。 `pageSize`参数标识的最大数目<xref:System.Web.Security.MembershipUser>对象中返回<xref:System.Web.Security.MembershipUserCollection>。 `pageIndex`参数标识要返回，其中，零标识的第一页的结果页。 `totalRecords`参数是`out`参数设置为已配置的成员资格用户的总数`applicationName`。 例如，如果有已配置的 13 个用户`applicationName`，并`pageIndex`值为 1，`pageSize`为 5，<xref:System.Web.Security.MembershipUserCollection>返回将包含 6 到返回的第十个用户。 `totalRecords`参数将设置为 13。  
  
   
  
## Examples  
 下面的代码示例返回用户的列表中的数据页的用户数的计数与当前已联机。  
  
> [!NOTE]
>  此示例使用<xref:System.Web.Security.Membership>类来调用<xref:System.Web.Security.SqlMembershipProvider>指定为`defaultProvider`Web.config 文件中。 如果需要访问作为类型的默认提供程序<xref:System.Web.Security.SqlMembershipProvider>，可以强制转换<xref:System.Web.Security.Membership.Provider%2A>属性的<xref:System.Web.Security.Membership>类。 若要访问其他配置提供程序为特定的提供程序类型，你可以通过其配置名称和访问它们<xref:System.Web.Security.Membership.Providers%2A>属性的<xref:System.Web.Security.Membership>类，并应将它们转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="pageIndex" /> 小于零。  
  
- 或 - 
 <paramref name="pageSize" /> 小于一。  
  
- 或 - 
 <paramref name="pageIndex" /> 乘以 <paramref name="pageSize" />，然后加上 <paramref name="pageSize" /> 再减去 1 后得到的值大于 <see cref="F:System.Int32.MaxValue" />。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public override int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetNumberOfUsersOnline();" />
      <MemberSignature Language="F#" Value="override this.GetNumberOfUsersOnline : unit -&gt; int" Usage="sqlMembershipProvider.GetNumberOfUsersOnline " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回当前访问该应用程序的用户数。</summary>
        <returns>当前正在访问应用程序的用户数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法<xref:System.Web.Security.Membership>类检索视为联机从 ASP.NET 应用程序的配置文件 (Web.config) 中指定的 SQL Server 数据库的用户数。  
  
 <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> 返回其最后一个活动日期和时间晚于当前日期和时间的值小于当前应用程序的用户数<xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>以分钟为单位的属性。  
  
 仅与已配置相关联的用户<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>包含在计数。  
  
   
  
## Examples  
 下面的代码示例返回一系列具有的用户计数的用户当前已联机。  
  
> [!NOTE]
>  此示例使用<xref:System.Web.Security.Membership>类来调用<xref:System.Web.Security.SqlMembershipProvider>指定为`defaultProvider`Web.config 文件中。 如果需要访问作为类型的默认提供程序<xref:System.Web.Security.SqlMembershipProvider>，可以强制转换<xref:System.Web.Security.Membership.Provider%2A>属性的<xref:System.Web.Security.Membership>类。 若要访问其他配置提供程序为特定的提供程序类型，你可以通过其配置名称和访问它们<xref:System.Web.Security.Membership.Providers%2A>属性的<xref:System.Web.Security.Membership>类，并应将它们转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="GetPassword">
      <MemberSignature Language="C#" Value="public override string GetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberSignature Language="F#" Value="override this.GetPassword : string * string -&gt; string" Usage="sqlMembershipProvider.GetPassword (username, passwordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要为其检索密码的用户。</param>
        <param name="passwordAnswer">用户的密码提示问题答案。</param>
        <summary>从 SQL Server 成员资格数据库返回指定用户名的密码。</summary>
        <returns>指定用户名所对应的密码。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法<xref:System.Web.Security.MembershipUser>类从 ASP.NET 应用程序的配置文件 (Web.config) 中指定的 SQL Server 数据库中检索用户的密码。  
  
 如果不正确的密码答案提供给<xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>方法中，内部计数器跟踪无效密码提示问题答案尝试就会递增 1。 这可能导致用户被锁定而无法登录，直到通过调用清除锁定状态<xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>方法。 如果提供正确的密码答案，并且用户当前未被锁定，则跟踪无效密码提示问题答案尝试的内部计数器重置为零。 有关详细信息，请参阅<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>和<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>属性。  
  
 您可以调用<xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>方法首先获取对引用由直接<xref:System.Web.Security.SqlMembershipProvider>实例通过<xref:System.Web.Security.Membership.Provider%2A>属性的<xref:System.Web.Security.Membership>类。  
  
 如果<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>属性设置为<xref:System.Web.Security.MembershipPasswordFormat.Hashed>，则<xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>方法不能检索密码。 哈希的密码进行单向加密，并且不能解密。 如果<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>属性设置为<xref:System.Web.Security.MembershipPasswordFormat.Hashed>，并<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A>设置为`true`、<xref:System.Configuration.Provider.ProviderException>初始化提供程序时引发。  
  
 删除所有参数值的前导和尾随空格。  
  
   
  
## Examples  
 下面的代码示例检索指定的用户名的密码，并将其发送到电子邮件中的用户。  
  
> [!NOTE]
>  需要高级别的安全性的站点，不建议使用电子邮件以明文返回的密码。 对于高度安全的站点，我们建议返回密码使用加密，例如 SSL。  
  
> [!NOTE]
>  此示例会调用<xref:System.Web.Security.SqlMembershipProvider>指定为`defaultProvider`通过使用 Web.config 文件中<xref:System.Web.Security.Membership>类。 如果需要访问作为类型的默认提供程序<xref:System.Web.Security.SqlMembershipProvider>，可以强制转换<xref:System.Web.Security.Membership.Provider%2A>属性的<xref:System.Web.Security.Membership>类。 若要访问其他配置提供程序为特定的提供程序类型，你可以通过其配置名称和访问它们<xref:System.Web.Security.Membership.Providers%2A>属性的<xref:System.Web.Security.Membership>类，并应将它们转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipPasswordException"><paramref name="passwordAnswer" /> 无效。  
  
- 或 - 
<paramref name="username" /> 标识的成员资格用户已被锁定。</exception>
        <exception cref="T:System.NotSupportedException">将 <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" /> 设置为 <see langword="false" />。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">在成员资格数据库中找不到 <paramref name="username" />。  
  
- 或 - 
从数据库中检索密码时出现错误。</exception>
        <exception cref="T:System.ArgumentException">某个参数值超过最大允许长度。  
  
- 或 - 
 <paramref name="username" /> 为空字符串 ("")、包含一个逗号或长度超过 256 个字符。  
  
- 或 - 
 <paramref name="passwordAnswer" /> 是空字符串且 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> 为 <see langword="true" />。  
  
- 或 - 
 <paramref name="passwordAnswer" /> 的长度超过 128 个字符。  
  
- 或 - 
编码版本的 <paramref name="passwordAnswer" /> 的长度超过 128 个字符。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="passwordAnswer" /> 为 <see langword="null" />，而 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> 为 <see langword="true" />。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>从数据源获取成员资格用户的信息。</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="override this.GetUser : obj * bool -&gt; System.Web.Security.MembershipUser" Usage="sqlMembershipProvider.GetUser (providerUserKey, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">用户的唯一标识符。</param>
        <param name="userIsOnline">如果为 <see langword="true" />，则更新指定用户的上次活动日期/时间戳；否则为 <see langword="false" />。</param>
        <summary>从数据源获得与指定的唯一标识符关联的成员资格用户的信息，并更新该用户的上次活动日期/时间戳（如果指定）。</summary>
        <returns>一个 <see cref="T:System.Web.Security.MembershipUser" /> 对象，它表示与指定的唯一标识符关联的用户。 如果在数据库中没有找到指定的 <paramref name="providerUserKey" /> 值所对应的用户，则返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> 从数据源中检索用户信息并创建<xref:System.Web.Security.MembershipUser>使用返回的数据填充的对象。 使用指定的唯一标识符标识该用户`providerUserKey`参数。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="providerUserKey" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="providerUserKey" /> 的类型不是 <see cref="T:System.Guid" />。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="override this.GetUser : string * bool -&gt; System.Web.Security.MembershipUser" Usage="sqlMembershipProvider.GetUser (username, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">要为其获取信息的用户的名称。</param>
        <param name="userIsOnline">设置为 <see langword="true" /> 则更新用户的上次活动日期/时间戳；设置为 <see langword="false" /> 则返回用户信息而不更新用户的上次活动日期/时间戳。</param>
        <summary>从 SQL Server 成员资格数据库返回用户的信息，并提供更新用户的上次活动日期/时间戳的可选功能。</summary>
        <returns>一个 <see cref="T:System.Web.Security.MembershipUser" /> 对象，它表示指定的用户。 如果在数据库中没有找到指定的 <paramref name="username" /> 值所对应的用户，则返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法<xref:System.Web.Security.Membership>类从 ASP.NET 应用程序的配置文件 (Web.config) 中指定的 SQL Server 数据库中检索用户信息。  
  
 如果`userIsOnline`是`true`，用户的上次活动日期/时间戳更新为当前日期和时间。 这反映在<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>并<xref:System.Web.Security.MembershipUser.IsOnline%2A>属性返回的值在<xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>。  
  
 删除 `username` 参数值的前导和尾随空格。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Web.Security.SqlMembershipProvider.GetUser%2A>方法，以确定用户是否存在，才能检索用户的密码。  
  
> [!NOTE]
>  此示例使用<xref:System.Web.Security.Membership>类来调用<xref:System.Web.Security.SqlMembershipProvider>指定为`defaultProvider`Web.config 文件中。 如果需要访问作为类型的默认提供程序<xref:System.Web.Security.SqlMembershipProvider>，可以强制转换<xref:System.Web.Security.Membership.Provider%2A>属性的<xref:System.Web.Security.Membership>类。 若要访问其他配置提供程序为特定的提供程序类型，你可以通过其配置名称和访问它们<xref:System.Web.Security.Membership.Providers%2A>属性的<xref:System.Web.Security.Membership>类，并应将它们转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> 的长度超过 256 个字符。  
  
- 或 - 
 <paramref name="username" /> 包含一个逗号。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> 为 <see langword="null" />。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public override string GetUserNameByEmail (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetUserNameByEmail(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUserNameByEmail (email As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetUserNameByEmail(System::String ^ email);" />
      <MemberSignature Language="F#" Value="override this.GetUserNameByEmail : string -&gt; string" Usage="sqlMembershipProvider.GetUserNameByEmail email" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">要搜索的电子邮件地址。</param>
        <summary>获取与指定电子邮件地址关联的用户名。</summary>
        <returns>与指定电子邮件地址关联的用户名。 如果未找到匹配项，此方法将返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法<xref:System.Web.Security.Membership>类的电子邮件地址，它使用从 ASP.NET 应用程序的配置文件 (Web.config) 中指定的 SQL Server 数据库中检索相关联的用户名。  
  
 如果成员资格数据库中的多个用户具有相同的电子邮件地址，则返回遇到的第一个用户名。 可以设置`requiresUniqueEmail`属性为`true`在应用程序配置文件，以确保每封电子邮件地址在数据库中的是唯一的。  
  
 删除 `email` 参数值的前导和尾随空格。  
  
   
  
## Examples  
 下面的代码示例检索指定的电子邮件地址的用户名称。  
  
> [!NOTE]
>  此示例使用<xref:System.Web.Security.Membership>类来调用<xref:System.Web.Security.SqlMembershipProvider>指定为`defaultProvider`Web.config 文件中。 如果需要访问作为类型的默认提供程序<xref:System.Web.Security.SqlMembershipProvider>，可以强制转换<xref:System.Web.Security.Membership.Provider%2A>属性的<xref:System.Web.Security.Membership>类。 若要访问其他配置提供程序为特定的提供程序类型，你可以通过其配置名称和访问它们<xref:System.Web.Security.Membership.Providers%2A>属性的<xref:System.Web.Security.Membership>类，并应将它们转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GetUserByEmailcs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GetUserByEmailvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="email" /> 的长度超过 256 个字符。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">数据库中存在多个具有相同电子邮件地址的用户，并且 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> 为 <see langword="true" />。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="sqlMembershipProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">要初始化的 <see cref="T:System.Web.Security.SqlMembershipProvider" /> 实例的名称。</param>
        <param name="config">一个 <see cref="T:System.Collections.Specialized.NameValueCollection" />，其中包含成员资格提供程序配置选项的值和名称。</param>
        <summary>使用 ASP.NET 应用程序配置文件中指定的属性值初始化 SQL Server 成员资格提供程序。 此方法不能直接在代码中使用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法初始化<xref:System.Web.Security.SqlMembershipProvider>与属性值指定 ASP.NET 应用程序配置文件 (Web.config) 中和不应在代码中直接使用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="config" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException"><see langword="enablePasswordRetrieval" />、<see langword="enablePasswordReset" />、<see langword="requiresQuestionAndAnswer" /> 或 <see langword="requiresUniqueEmail" /> 特性设置为一个非 <see langword="Boolean" /> 值。  
  
- 或 - 
<see langword="maxInvalidPasswordAttempts" /> 或 <see langword="passwordAttemptWindow" /> 特性设置为一个非正整数值。  
  
- 或 - 
<see langword="minRequiredPasswordLength" /> 特性设置为一个非正整数值或大于 128 的值。  
  
- 或 - 
<see langword="minRequiredNonalphanumericCharacters" /> 特性设置为一个非正整数或零的值，或者设置为一个大于 128 的值。  
  
- 或 - 
<see langword="passwordStrengthRegularExpression" /> 特性的值不是有效正则表达式。  
  
- 或 - 
<see langword="applicationName" /> 特性设置为一个大于 256 个字符的值。  
  
- 或 - 
应用程序配置文件中指定的 <see langword="passwordFormat" /> 特性是一个无效 <see cref="T:System.Web.Security.MembershipPasswordFormat" /> 枚举。  
  
- 或 - 
在应用程序配置中，<see langword="passwordFormat" /> 特性设置为 <see cref="F:System.Web.Security.MembershipPasswordFormat.Hashed" /> 且 <see langword="enablePasswordRetrieval" /> 特性设置为 <see langword="true" />。  
  
- 或 - 
<see langword="passwordFormat" /> 特性设置为 <see langword="Encrypted" /> 且 <see href="https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/w8h3skw9(v%3dvs.100)">&lt;machineKey&gt;</see> 配置元素为 <see langword="decryptionKey" /> 特性指定了 <see langword="AutoGenerate" />。  
  
- 或 - 
<see langword="connectionStringName" /> 特性为空或应用程序配置中不存在该特性。  
  
- 或 - 
<see langword="connectionStringName" /> 特性值的连接字符串的值为空，或应用程序配置文件中不存在指定的 <see langword="connectionStringName" />。  
  
- 或 - 
<see langword="commandTimeout" /> 特性的值设置为一个非正整数或零的值。  
  
- 或 - 
该 <see cref="T:System.Web.Security.SqlMembershipProvider" /> 实例的应用程序配置文件包含无法识别的特性。</exception>
        <exception cref="T:System.Web.HttpException">当前信任级别低于 <see langword="Low" />。</exception>
        <exception cref="T:System.InvalidOperationException">在当前对 <see cref="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> 方法的调用之前已初始化了提供程序。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public override int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxInvalidPasswordAttempts : int" Usage="System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在锁定成员资格用户之前允许的无效密码或密码答案尝试次数。</summary>
        <value>锁定成员资格用户之前允许的无效密码或密码答案尝试次数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>结合工作<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>来防止不需要猜测密码或通过重复尝试的成员资格用户的密码提示问题答案的源。 如果无效密码或密码提示问题答案的成员资格用户的数目大于或等于的值<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>属性的值指定的分钟数内<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>属性，则成员资格用户通过设置锁定<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>属性设置为`true`直到用户解锁与<xref:System.Web.Security.MembershipUser.UnlockUser%2A>方法。 如果之前提供一个有效的密码<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>达到值时，跟踪无效密码和密码提示问题答案尝试次数的计数器将重置为零。 如果之前提供一个有效的密码答案<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>达到值时，仅跟踪无效密码提示问题答案尝试次数的计数器重置为零。  
  
 <xref:System.Web.Security.SqlMembershipProvider>单独保留无效密码尝试次数和无效密码提示问题答案尝试计数。 无效密码尝试结果中仅密码尝试计数器递增。 无效密码提示问题答案尝试仅密码提示问题答案计数器递增。  
  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>在该应用程序配置中设置属性值`maxInvalidPasswordAttempts`的属性[成员身份](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))配置节。  
  
 如果<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>属性设置为`false`，不跟踪无效密码提示问题答案尝试次数。  
  
   
  
## Examples  
 下面的代码示例演示[成员资格](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))中的元素`system.web`的 ASP.NET 应用程序的 Web.config 文件部分。 它指定应用程序使用的实例<xref:System.Web.Security.SqlMembershipProvider>，并设置`maxInvalidPasswordAttempts`属性为五个的无效尝试和`passwordAttemptWindow`为 30 分钟。  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
    <providers>  
      <add name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        maxInvalidPasswordAttempts="5"  
        passwordAttemptWindow="30"  
        applicationName="MyApplication" />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public override int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredNonAlphanumericCharacters : int" Usage="System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取有效密码中必须包含的最少特殊字符数。</summary>
        <value>有效密码中必须包含的最少特殊字符数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>属性返回的最小特殊的非字母字符，必须输入要创建有效的密码数<xref:System.Web.Security.SqlMembershipProvider>对象。  
  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>在该应用程序配置中设置属性值`minRequiredNonalphanumericCharacters`的属性[元素 （ASP.NET 设置架构） 的成员身份](https://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)配置元素。  
  
 非字母数字字符是为其字符<xref:System.Char.IsLetterOrDigit%2A>方法将返回`false`。  
  
   
  
## Examples  
 下面的示例演示[元素 （ASP.NET 设置架构） 的成员身份](https://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)中的配置元素`system.web`部分中的应用程序的 Web.config 文件。 它指定应用程序使用的实例<xref:System.Web.Security.SqlMembershipProvider>类提供成员资格服务和集`minRequiredNonalphanumericCharacters`属性为一个字符。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredNonalphanumericCharacters="1"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public override int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredPasswordLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredPasswordLength : int" Usage="System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取密码所需的最小长度。</summary>
        <value>密码所需的最小长度。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> 属性获取的最小若要创建有效密码，必须输入的字符数<xref:System.Web.Security.SqlMembershipProvider>对象。  
  
 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>在该应用程序配置中设置属性值`minRequiredPasswordLength`的属性[元素 （ASP.NET 设置架构） 的成员身份](https://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)配置元素。  
  
   
  
## Examples  
 下面的示例演示[元素 （ASP.NET 设置架构） 的成员身份](https://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)中的配置元素`system.web`部分中的应用程序的 Web.config 文件。 它指定应用程序使用的实例<xref:System.Web.Security.SqlMembershipProvider>类提供成员资格服务和集`minRequiredPasswordLength`属性为七个字符。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
    <providers>  
      <add  
        name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        minRequiredPasswordLength="7"  
        />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public override int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PasswordAttemptWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordAttemptWindow : int" Usage="System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取时间长度，在该时间间隔内对提供有效密码或密码答案的连续失败尝试次数进行跟踪。</summary>
        <value>对未能提供有效密码或密码答案的连续尝试次数进行跟踪的时间长度（以分钟为单位）。 默认值为 10 分钟。 如果当前失败尝试和上次失败尝试之间的间隔大于 <see cref="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" /> 属性设置，则每个失败尝试均被视为第一次失败尝试。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>属性的工作原理与结合<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>属性以帮助防止不需要的源猜测密码或密码答案的成员资格用户通过反复尝试。 当用户尝试登录、 更改其密码或重置其密码时，在指定的时间范围内只允许一定数量的连续尝试次数。 通过指定的时间窗口长度<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>属性，用于标识的无效尝试之间所允许的分钟数。 如果向用户发出的连续失败尝试次数重置他或她的密码与存储中的值相等<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>属性，以及时间后经过的最后一次的无效尝试是否为指定的分钟数小于<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>属性，则成员资格用户被锁定通过设置<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>属性设置为`true`。 用户可以通过调用解锁<xref:System.Web.Security.MembershipUser.UnlockUser%2A>方法。 如果当前失败的尝试和上次失败的尝试之间的间隔大于<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>属性设置，则当前的无效尝试计为第一个。 如果达到允许的无效尝试的最大数目之前提供有效密码提示问题答案，则无效密码提示问题答案尝试次数设置为零。 如果允许无效的最大数目之前提供一个有效的密码尝试次数达到，无效密码尝试次数和无效密码提示问题答案尝试次数设置为零。  
  
 <xref:System.Web.Security.SqlMembershipProvider>单独保留的无效密码尝试次数和无效密码提示问题答案尝试计数。 无效密码尝试结果中仅密码尝试计数器递增。 无效密码提示问题答案尝试仅密码提示问题答案计数器递增。  
  
 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>在该应用程序配置中设置属性值`passwordAttemptWindow`的属性[成员身份](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))配置节。  
  
 如果<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>属性设置为`false`，不跟踪无效密码提示问题答案尝试次数。  
  
   
  
## Examples  
 下面的代码示例演示[成员资格](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))中的元素`system.web`的 ASP.NET 应用程序的 Web.config 文件部分。 它指定应用程序使用的实例<xref:System.Web.Security.SqlMembershipProvider>，并设置`maxInvalidPasswordAttempts`属性为五个的无效尝试和`passwordAttemptWindow`为 30 分钟。  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
    <providers>  
      <add name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        maxInvalidPasswordAttempts="5"  
        passwordAttemptWindow="30"  
        applicationName="MyApplication" />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordFormat">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Security.MembershipPasswordFormat PasswordFormat" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordFormat As MembershipPasswordFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Security::MembershipPasswordFormat PasswordFormat { System::Web::Security::MembershipPasswordFormat get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordFormat : System.Web.Security.MembershipPasswordFormat" Usage="System.Web.Security.SqlMembershipProvider.PasswordFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipPasswordFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 SQL Server 成员资格数据库中存储密码的格式。</summary>
        <value>一个 <see cref="T:System.Web.Security.MembershipPasswordFormat" /> 值，它指示 SQL Server 数据库中存储密码的格式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用`Hashed`仅`Clear`和`Encrypted`是不安全的。 `Hashed` 使用单向哈希算法和随机生成的 salt 值存储在数据库中时，将会经过密码哈希。 密码验证时，它是哈希处理用于验证数据库中的 salt 值。 无法检索哈希的密码。 `Encrypted` 密码不被视为安全，受到破坏，可以显示出您的数据库的内容也可以公开加密密钥。 这意味着无法解密已加密的密码，并将其公开。  
  
 <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>中指定值[提供程序](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/6d4936ht(v%3dvs.100))的 ASP.NET 应用程序的 Web.config 文件部分。  
  
 `Encrypted` 并`Hashed`密码加密或哈希处理的基于信息中提供的默认[machineKey](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/w8h3skw9(v%3dvs.100))中你的配置元素。 请注意，如果指定的值`3DES`有关`validation`属性，或如果未不指定任何值，哈希的密码将进行哈希处理使用<xref:System.Security.Cryptography.SHA1>算法。  
  
 可以使用定义的自定义哈希算法`hashAlgorithmType`的属性[元素 （ASP.NET 设置架构） 的成员身份](https://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)配置元素。 如果选择加密，默认密码加密使用 AES。 您可以通过设置更改加密算法`decryption`的属性[machineKey](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/w8h3skw9(v%3dvs.100))配置元素。 如果您正在加密密码，必须提供一个显式值`decryptionKey`中的属性[machineKey](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/w8h3skw9(v%3dvs.100))元素。 默认值`AutoGenerate`为`decryptionKey`使用加密密码与 ASP.NET 成员资格时，不支持属性。  
  
   
  
## Examples  
 下面的代码示例演示[成员资格](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))中的元素`system.web`的 ASP.NET 应用程序的 Web.config 文件部分。 指定应用程序的<xref:System.Web.Security.SqlMembershipProvider>实例，并将其密码的格式设置为`Hashed`。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public override string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordStrengthRegularExpression : string" Usage="System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于计算密码的正则表达式。</summary>
        <value>用于计算密码的正则表达式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>属性获取用于评估密码复杂性的正则表达式<xref:System.Web.Security.SqlMembershipProvider>对象。  
  
 <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>属性设置在应用程序配置中使用`passwordStrengthRegularExpression`的属性[元素 （ASP.NET 设置架构） 的成员身份](https://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)配置元素。  
  
   
  
## Examples  
 下面的示例演示[元素 （ASP.NET 设置架构） 的成员身份](https://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)中的配置元素`system.web`部分中的应用程序的 Web.config 文件。 它指定应用程序使用的实例<xref:System.Web.Security.SqlMembershipProvider>类提供成员资格服务和集`passwordStrengthRegularExpression`属性验证的密码符合以下条件的正则表达式：  
  
-   为至少为 7 个字符。  
  
-   包含至少一个数字。  
  
-   包含至少一个特殊的 （非字母数字） 字符。  
  
 如果密码不满足这些条件，成员资格提供程序不接受此密码。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression="@\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresQuestionAndAnswer : bool" Usage="System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，指示 SQL Server 成员资格提供程序是否配置为要求用户在进行密码重置和检索时回答密码提示问题。</summary>
        <value>如果密码重置和检索需要提供密码提示问题答案，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 要求密码提示问题和答案可提供额外的安全时检索或重置用户的密码。 在创建时的用户名称，用户可以提供的问题和答案，以后可用于检索或重置忘记的密码。 如果<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset%2A>属性和<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A>属性均`false`，值<xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>属性不起作用。  
  
 有关详细信息，请参阅 <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> 和 <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>。  
  
   
  
## Examples  
 下面的代码示例演示[成员资格](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))中的元素`system.web`的 ASP.NET 应用程序的 Web.config 文件部分。 指定应用程序的<xref:System.Web.Security.SqlMembershipProvider>实例，并将其配置为需要进行密码重置或检索的密码提示问题答案。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueEmail">
      <MemberSignature Language="C#" Value="public override bool RequiresUniqueEmail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueEmail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresUniqueEmail As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueEmail { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueEmail : bool" Usage="System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，指示 SQL Server 成员资格提供程序是否配置为要求每个用户名具有唯一的电子邮件地址。</summary>
        <value><see langword="true" /> 如果成员资格提供程序需要一个唯一的电子邮件地址;否则为<see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示[成员资格](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))中的元素`system.web`的 ASP.NET 应用程序的 Web.config 文件部分。 它指定<xref:System.Web.Security.SqlMembershipProvider>实例，并将其配置为每个用户名需要唯一电子邮件地址。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      requiresUniqueEmail="true"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="ResetPassword">
      <MemberSignature Language="C#" Value="public override string ResetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ResetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ResetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberSignature Language="F#" Value="override this.ResetPassword : string * string -&gt; string" Usage="sqlMembershipProvider.ResetPassword (username, passwordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要为其重置密码的用户。</param>
        <param name="passwordAnswer">指定的用户的密码提示问题答案。</param>
        <summary>将用户密码重置为自动生成的新密码。</summary>
        <returns>指定的用户的新密码。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法<xref:System.Web.Security.Membership>类，以重置到一个新的 ASP.NET 应用程序的配置文件 (Web.config) 中指定的 SQL Server 数据库中的用户的密码随机生成的值。 返回新的密码。  
  
> [!NOTE]
>  通过创建随机密码<xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>方法不能保证传递中的正则表达式<xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>属性。 但是，随机的密码将符合确立的条件<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>和<xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>属性。  
  
 <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>方法是最常用的何时<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>属性设置为`Hashed`。 如果用户忘记了密码进行哈希处理，不能检索密码。 但是，该提供程序可以重置密码为新的自动生成密码如果用户提供正确的密码提示问题答案。  
  
 如果不正确的密码答案提供给<xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>方法中，内部计数器跟踪无效密码尝试次数就会递增 1。 这可能导致用户被锁定而无法登录，直到通过调用清除锁定状态<xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>方法。 如果提供正确的密码答案，并且用户当前未被锁定，则跟踪无效密码提示问题答案尝试的内部计数器重置为零。 有关详细信息，请参阅<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>和<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>属性。  
  
 您可以调用<xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>方法首先获取对引用由直接<xref:System.Web.Security.SqlMembershipProvider>实例与<xref:System.Web.Security.Membership.Provider%2A>属性的<xref:System.Web.Security.Membership>类。 生成的密码将会至少为 14 个字符之间，或在指定长度<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>属性，并且将包含在指定的非字母数字字符数<xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>属性。 密码不能保证传递正则表达式中包含<xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>属性，如果已指定。  
  
 删除所有参数值的前导和尾随空格。  
  
   
  
## Examples  
 下面的代码示例重置用户的密码，并返回新的、 自动生成密码。  
  
> [!NOTE]
>  此示例使用<xref:System.Web.Security.Membership>类来调用<xref:System.Web.Security.SqlMembershipProvider>指定为`defaultProvider`Web.config 文件中。 如果需要访问作为类型的默认提供程序<xref:System.Web.Security.SqlMembershipProvider>，可以强制转换<xref:System.Web.Security.Membership.Provider%2A>属性的<xref:System.Web.Security.Membership>类。 若要访问其他配置提供程序为特定的提供程序类型，你可以通过其配置名称和访问它们<xref:System.Web.Security.Membership.Providers%2A>属性的<xref:System.Web.Security.Membership>类，并应将它们转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ResetPasswordcs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ResetPasswordvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipPasswordException"><paramref name="passwordAnswer" /> 无效。  
  
- 或 - 
当前锁定了用户帐户。</exception>
        <exception cref="T:System.NotSupportedException">将 <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset" /> 设置为 <see langword="false" />。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">在成员资格数据库中找不到 <paramref name="username" />。  
  
- 或 - 
<see cref="E:System.Web.Security.Membership.ValidatingPassword" /> 事件的订户取消对更改密码操作，且 <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" /> 属性为 <see langword="null" />。  
  
- 或 - 
从数据库中检索密码时出现错误。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> 为空字符串 ("")、包含一个逗号或长度超过 256 个字符。  
  
- 或 - 
 <paramref name="passwordAnswer" /> 为空字符串，或者其长度超过 128 个字符，且 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> 为 <see langword="true" />。  
  
- 或 - 
 编码后 <paramref name="passwordAnswer" /> 的长度超过 128 个字符。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="passwordAnswer" /> 为 <see langword="null" />，而 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> 为 <see langword="true" />。</exception>
        <exception cref="T:System.Exception">发生了未经处理的异常。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="UnlockUser">
      <MemberSignature Language="C#" Value="public override bool UnlockUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool UnlockUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnlockUser (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool UnlockUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.UnlockUser : string -&gt; bool" Usage="sqlMembershipProvider.UnlockUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要为其清除锁定状态的成员资格用户的用户名。</param>
        <summary>清除用户的锁定状态，以便可以验证该成员资格用户。</summary>
        <returns>如果成功解除成员资格用户的锁定，则为 <see langword="true" />；否则为 <see langword="false" />。 如果数据库中没有此用户，也会返回 <see langword="false" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用户最常被锁定，无法通过验证<xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A>方法时<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>内超出<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>。  
  
 删除 `username` 参数值的前导和尾随空格。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> 为空字符串，长度超过 256 个字符，或包含一个逗号。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> 为 <see langword="null" />。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public override void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberSignature Language="F#" Value="override this.UpdateUser : System.Web.Security.MembershipUser -&gt; unit" Usage="sqlMembershipProvider.UpdateUser user" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">一个 <see cref="T:System.Web.Security.MembershipUser" /> 对象，表示要更新的用户及其更新信息。</param>
        <summary>更新 SQL Server 成员资格数据库中用户的信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法<xref:System.Web.Security.Membership>类更新在 ASP.NET 应用程序的配置文件 (Web.config) 中指定的 SQL Server 数据库中的用户的用户信息。 <xref:System.Web.Security.MembershipUser.Email%2A>， <xref:System.Web.Security.MembershipUser.Comment%2A>， <xref:System.Web.Security.MembershipUser.IsApproved%2A>， <xref:System.Web.Security.MembershipUser.LastLoginDate%2A>，和<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>指定成员资格用户更新属性值。  
  
 最大长度为<xref:System.Web.Security.MembershipUser.UserName%2A>属性为 256 个字符。 最大长度为<xref:System.Web.Security.MembershipUser.Email%2A>属性为 256 个字符。  
  
 不能使用更新成员资格用户的密码<xref:System.Web.Security.SqlMembershipProvider.UpdateUser%2A>方法。 若要更新成员资格用户密码，请使用<xref:System.Web.Security.MembershipUser.ChangePassword%2A>方法的<xref:System.Web.Security.MembershipUser>类。  
  
   
  
## Examples  
 下面的代码示例更新用户的电子邮件地址。  
  
> [!NOTE]
>  此示例使用<xref:System.Web.Security.Membership>类来调用<xref:System.Web.Security.SqlMembershipProvider>指定为`defaultProvider`Web.config 文件中。 如果需要访问作为类型的默认提供程序<xref:System.Web.Security.SqlMembershipProvider>，可以强制转换<xref:System.Web.Security.Membership.Provider%2A>属性的<xref:System.Web.Security.Membership>类。 若要访问其他配置提供程序为特定的提供程序类型，你可以通过其配置名称和访问它们<xref:System.Web.Security.Membership.Providers%2A>属性的<xref:System.Web.Security.Membership>类，并应将它们转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="user" /> 为 <see langword="null" />。  
  
- 或 - 
<paramref name="user" /> 的 <see cref="P:System.Web.Security.MembershipUser.UserName" /> 属性为 <see langword="null" />。  
  
- 或 - 
<paramref name="user" /> 的 <see cref="P:System.Web.Security.MembershipUser.Email" /> 属性为 <see langword="null" /> 且 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> 设置为 <see langword="true" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="user" /> 的 <see cref="P:System.Web.Security.MembershipUser.UserName" /> 属性为空字符串 ("")、包含一个逗号或长度超过 256 个字符。  
  
- 或 - 
<paramref name="user" /> 的 <see cref="P:System.Web.Security.MembershipUser.Email" /> 属性的长度超过 256 个字符。  
  
- 或 - 
<paramref name="user" /> 的 <see cref="P:System.Web.Security.MembershipUser.Email" /> 属性是一个空字符串且 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> 设置为 <see langword="true" />。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">数据库中未找到 <paramref name="user" /> 的 <see cref="P:System.Web.Security.MembershipUser.UserName" /> 属性。  
  
- 或 - 
<paramref name="user" /> 的 <see cref="P:System.Web.Security.MembershipUser.Email" /> 属性等于数据库中的某个现有电子邮件地址且 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> 设置为 true。  
  
- 或 - 
用户更新失败。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public override bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="override this.ValidateUser : string * string -&gt; bool" Usage="sqlMembershipProvider.ValidateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要验证的用户的名称。</param>
        <param name="password">指定的用户的密码。</param>
        <summary>验证 SQL Server 成员资格数据库中是否存在指定的用户名和密码。</summary>
        <returns>如果指定的用户名和密码有效，则为 <see langword="true" />；否则为 <see langword="false" />。 如果数据库中没有此用户，也会返回 <see langword="false" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法<xref:System.Web.Security.Membership>类，以验证在 ASP.NET 应用程序的配置文件 (Web.config) 中指定的 SQL Server 数据库中用户的用户信息。  
  
 当用户成功通过验证时，为当前日期和时间在数据库中的更新的上次活动日期和上次登录日期值。  
  
 如果不正确密码提供给<xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A>方法中，内部计数器跟踪无效密码尝试次数就会递增 1。 这可能导致用户被锁定而无法登录，直到通过调用清除锁定状态<xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>方法。 如果提供正确的密码，用户当前未被锁定，则内部计数器跟踪无效密码和密码提示问题答案尝试将重置为零。 有关详细信息，请参阅<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>和<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>属性。  
  
 删除所有参数值的前导和尾随空格。  
  
   
  
## Examples  
 下面的代码示例显示了 ASP.NET 应用程序配置为使用 forms 身份验证的登录页和<xref:System.Web.Security.SqlMembershipProvider>。 如果提供的用户凭据无效，则是向用户显示一条消息。 否则，将用户定向到最初请求的 URL 使用<xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>方法。  
  
> [!NOTE]
>  此示例使用<xref:System.Web.Security.Membership>类来调用<xref:System.Web.Security.SqlMembershipProvider>指定为`defaultProvider`Web.config 文件中。 如果需要访问作为类型的默认提供程序<xref:System.Web.Security.SqlMembershipProvider>，可以强制转换<xref:System.Web.Security.Membership.Provider%2A>属性的<xref:System.Web.Security.Membership>类。 若要访问其他配置提供程序为特定的提供程序类型，你可以通过其配置名称和访问它们<xref:System.Web.Security.Membership.Providers%2A>属性的<xref:System.Web.Security.Membership>类，并应将它们转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
  </Members>
</Type>
