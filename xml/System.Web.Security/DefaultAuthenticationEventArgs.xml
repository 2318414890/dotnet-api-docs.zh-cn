<Type Name="DefaultAuthenticationEventArgs" FullName="System.Web.Security.DefaultAuthenticationEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="211a56b89a31fd29aae148db3846f2960bca85bb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30544861" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DefaultAuthenticationEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DefaultAuthenticationEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.DefaultAuthenticationEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DefaultAuthenticationEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultAuthenticationEventArgs sealed : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 DefaultAuthentication_OnAuthenticate 事件提供数据。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.DefaultAuthenticationEventArgs>类用于事件为提供的值**DefaultAuthentication_OnAuthenticate**事件并使您能够指定为当前请求的自定义 Windows 标识。  
  
 <xref:System.Web.Security.DefaultAuthenticationModule>构造<xref:System.Web.Security.DefaultAuthenticationEventArgs>对象使用当前<xref:System.Web.HttpContext>和将其传递给**DefaultAuthentication_OnAuthenticate**事件。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultAuthenticationEventArgs (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.DefaultAuthenticationEventArgs.#ctor(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultAuthenticationEventArgs(System::Web::HttpContext ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">事件的上下文。</param>
        <summary>初始化 <see cref="T:System.Web.Security.DefaultAuthenticationEventArgs" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.DefaultAuthenticationModule>对象构造<xref:System.Web.Security.DefaultAuthenticationEventArgs>对象使用当前<xref:System.Web.HttpContext>和将其传递给**DefaultAuthentication_OnAuthenticate**事件。  
  
 你可以使用<xref:System.Web.Security.DefaultAuthenticationEventArgs.Context%2A>属性<xref:System.Web.Security.DefaultAuthenticationEventArgs>对象提供给**DefaultAuthentication_OnAuthenticate**事件设置<xref:System.Web.HttpContext.User%2A>属性的当前<xref:System.Web.HttpContext>向自定义<xref:System.Security.Principal.IPrincipal>对象。 如果未指定的值<xref:System.Web.HttpContext.User%2A>属性<xref:System.Web.HttpContext>所引用的<xref:System.Web.Security.DefaultAuthenticationEventArgs.Context%2A>属性，<xref:System.Web.Security.DefaultAuthenticationModule>设置<xref:System.Web.HttpContext.User%2A>属性<xref:System.Web.HttpContext>到<xref:System.Security.Principal.GenericPrincipal>不包含用户的对象信息。  
  
 **DefaultAuthentication_OnAuthenticate**后引发事件<xref:System.Web.HttpApplication.AuthenticateRequest>事件和之前<xref:System.Web.HttpApplication.AuthorizeRequest>事件。 如果你有一个部分，其中取决于要拒绝或允许访问应用程序的用户名称，修改<xref:System.Web.HttpContext.User%2A>属性的当前<xref:System.Web.HttpContext>可能会影响你的应用程序的行为。 请确保在设置的用户名称**DefaultAuthentication_OnAuthenticate**事件被视为时在你配置中指定部分。  
  
   
  
## Examples  
 下面的代码示例使用**DefaultAuthentication_OnAuthenticate**事件来测试是否<xref:System.Web.HttpContext.User%2A>属性的当前<xref:System.Web.HttpContext>是`null`。 如果属性是`null`，该示例设置<xref:System.Web.HttpContext.User%2A>属性的当前<xref:System.Web.HttpContext>到<xref:System.Security.Principal.GenericPrincipal>对象其中<xref:System.Security.Principal.GenericPrincipal.Identity%2A>属性<xref:System.Security.Principal.GenericPrincipal>对象是<xref:System.Security.Principal.GenericIdentity>对象<xref:System.Security.Principal.GenericIdentity.Name%2A>"default"属性值。  
  
> [!NOTE]
>  **DefaultAuthentication_OnAuthenticate**事件之前，将引发<xref:System.Web.HttpApplication.AuthorizeRequest>事件。 因此，如果你设置<xref:System.Web.HttpContext.User%2A>属性的当前<xref:System.Web.HttpContext>到自定义标识，它可能会影响你的应用程序的行为。 例如，如果你使用<xref:System.Web.Security.FormsAuthentication>类并且你在确保只有经过身份验证的用户才能访问到你的站点，通过使用部分中，并指定`<deny users="?" />`，将在此示例中被忽略，导致该元素，如用户将具有名称、这是"默认设置"。 作为替代，你将指定`<deny users="default" />`以确保只有经过身份验证的用户才能访问你的站点。  
  
 [!code-csharp[System.Web.Security.DefaultAuthenticationModule#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.DefaultAuthenticationModule/CS/global.asax#1)]
 [!code-vb[System.Web.Security.DefaultAuthenticationModule#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.DefaultAuthenticationModule/VB/global.asax#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Web.HttpContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.DefaultAuthenticationEventArgs.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>为当前 HTTP 请求获取 <see cref="T:System.Web.HttpContext" /> 对象。</summary>
        <value>当前 HTTP 请求的 <see cref="T:System.Web.HttpContext" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpContext>提供对访问<xref:System.Web.HttpContext.Request%2A>， <xref:System.Web.HttpContext.Response%2A>，和<xref:System.Web.HttpContext.User%2A>为当前请求的对象。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>