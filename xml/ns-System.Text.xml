<Namespace Name="System.Text">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="34cddae6e8018aa3245a0db0838a6b65070528ea" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="05/10/2018" />
    <Meta Name="ms.locfileid" Value="30736131" />
  </Metadata>
  <Docs>
    <summary>
      <span data-ttu-id="d6adf-101">
        <see cref="N:System.Text" /> 命名空间包含表示 ASCII 和 Unicode 字符编码的类；用于让字符块和字节块相互转换的抽象基类；以及无需创建 <see cref="T:System.String" /> 的中间实例即可操作并格式化 <see cref="T:System.String" /> 对象的帮助器类。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d6adf-101">The <see cref="N:System.Text" /> namespace contains classes that represent ASCII and Unicode character encodings; abstract base classes for converting blocks of characters to and from blocks of bytes; and a helper class that manipulates and formats <see cref="T:System.String" /> objects without creating intermediate instances of <see cref="T:System.String" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6adf-102">编码的类主要用于不同编码或代码页和 Unicode 编码之间进行转换。</span><span class="sxs-lookup"><span data-stu-id="d6adf-102">The encoding classes are primarily intended to convert between different encodings or code pages and a Unicode encoding.</span></span> <span data-ttu-id="d6adf-103"><xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> (Utf-16) 编码由.NET Framework 中，内部使用和<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>编码通常用于存储字符数据以确保在机和区域性之间的可移植性。</span><span class="sxs-lookup"><span data-stu-id="d6adf-103"><xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> (UTF-16) encoding is used internally by the .NET Framework, and <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> encoding is often used for storing character data to ensure portability across machines and cultures.</span></span>  
  
 <span data-ttu-id="d6adf-104">类派生自<xref:System.Text.Encoding>使您能够选择回退策略，用于确定如何处理无法编码为一个字节，序列的字符或为字符，不能进行解码的字节。</span><span class="sxs-lookup"><span data-stu-id="d6adf-104">The classes derived from <xref:System.Text.Encoding> enable you to choose a fallback strategy, which determines how characters that cannot be encoded into a sequence of bytes, or bytes that cannot be decoded into characters, are handled.</span></span> <span data-ttu-id="d6adf-105">你可以选择以下项之一：</span><span class="sxs-lookup"><span data-stu-id="d6adf-105">You can choose one of the following:</span></span>  
  
-   <span data-ttu-id="d6adf-106">异常回退。</span><span class="sxs-lookup"><span data-stu-id="d6adf-106">Exception fallback.</span></span> <span data-ttu-id="d6adf-107">你可以选择通过使用引发异常的数据错误`throwonerror`标志，它可在某些类构造函数中或通过使用<xref:System.Text.EncoderExceptionFallback>和<xref:System.Text.DecoderExceptionFallback>类。</span><span class="sxs-lookup"><span data-stu-id="d6adf-107">You can choose to throw exceptions on data errors either by using a `throwonerror` flag that is available in some class constructors or by using the <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.DecoderExceptionFallback> classes.</span></span> <span data-ttu-id="d6adf-108">如果您担心数据流的完整性，建议在出现异常引发。</span><span class="sxs-lookup"><span data-stu-id="d6adf-108">If you are concerned about the integrity of the data stream, throwing on an exception is recommended.</span></span>  
  
-   <span data-ttu-id="d6adf-109">替换回退。</span><span class="sxs-lookup"><span data-stu-id="d6adf-109">Replacement fallback.</span></span> <span data-ttu-id="d6adf-110">你可以使用<xref:System.Text.EncoderFallback>和<xref:System.Text.DecoderFallback>类以无提示方式更改到字符"？"或 Unicode 替换字符 (U + FFFD)。</span><span class="sxs-lookup"><span data-stu-id="d6adf-110">You can use the <xref:System.Text.EncoderFallback> and <xref:System.Text.DecoderFallback> classes to silently change a character to "?" or to the Unicode replacement character (U+FFFD).</span></span>  
  
-   <span data-ttu-id="d6adf-111">最佳回退。</span><span class="sxs-lookup"><span data-stu-id="d6adf-111">Best-fit fallback.</span></span> <span data-ttu-id="d6adf-112">此选项将映射到另一种编码中的字符的一种编码中的字符。</span><span class="sxs-lookup"><span data-stu-id="d6adf-112">This option maps a character in one encoding to a character in another encoding.</span></span> <span data-ttu-id="d6adf-113">最佳回退因为它可能会导致数据丢失和混淆，通常不建议使用，而且比简单"？"字符替换。</span><span class="sxs-lookup"><span data-stu-id="d6adf-113">Best fit fallback is often not recommended because it can cause data loss and confusion, and is slower than simple "?" character replacements.</span></span> <span data-ttu-id="d6adf-114">但是，对于 ANSI 代码页的最佳的行为是默认值。</span><span class="sxs-lookup"><span data-stu-id="d6adf-114">However, for ANSI code pages the best-fit behavior is the default.</span></span>  
  
 <span data-ttu-id="d6adf-115"><xref:System.Text.StringBuilder>类用于对单个字符串执行大量操作的操作。</span><span class="sxs-lookup"><span data-stu-id="d6adf-115">The <xref:System.Text.StringBuilder> class is designed for operations that perform extensive manipulations on a single string.</span></span> <span data-ttu-id="d6adf-116">与不同<xref:System.String>类，<xref:System.Text.StringBuilder>类是可变的提供更好的性能串联或删除字符串时。</span><span class="sxs-lookup"><span data-stu-id="d6adf-116">Unlike the <xref:System.String> class, the <xref:System.Text.StringBuilder> class is mutable and provides better performance when concatenating or deleting strings.</span></span>  
  
 <span data-ttu-id="d6adf-117">有关详细信息<xref:System.Text?displayProperty=nameWithType>，请参阅[.NET Framework 中的字符编码](~/docs/standard/base-types/character-encoding.md)。</span><span class="sxs-lookup"><span data-stu-id="d6adf-117">For more information about <xref:System.Text?displayProperty=nameWithType>, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) .</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>