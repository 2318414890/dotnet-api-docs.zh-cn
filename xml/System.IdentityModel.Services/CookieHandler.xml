<Type Name="CookieHandler" FullName="System.IdentityModel.Services.CookieHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d23e5774bf0f999d5f53db9d0abae109f03d3d70" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30420051" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CookieHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CookieHandler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.CookieHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CookieHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class CookieHandler abstract" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1c2b2-101">提供用于读取、编写和删除会话 Cookie 的抽象基类在 HTTP 客服端上。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1c2b2-101">Provides an abstract base class for reading, writing, and deleting session cookies on an HTTP client.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c2b2-102"><xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) 使用的是实例<xref:System.IdentityModel.Services.CookieHandler>类来读取、 写入和删除 cookie 的 cookie，或者包含<xref:System.IdentityModel.Tokens.SessionSecurityToken>HTTP 客户端上。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-102">The <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) uses an instance of the <xref:System.IdentityModel.Services.CookieHandler> class to read, write, and delete the cookie or cookies that contain the <xref:System.IdentityModel.Tokens.SessionSecurityToken> on the HTTP client.</span></span> <span data-ttu-id="1c2b2-103">Cookie （或 cookie，在其中的会话令牌已拆分到多个 cookie 的情况下），该字符串包含令牌被称为会话 cookie 的会话。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-103">The cookie (or cookies, in the case where the session token is split across several cookies) that contains the session token is known as the session cookie.</span></span>  
  
 <span data-ttu-id="1c2b2-104">Windows Identity Foundation (WIF) 附带 cookie 处理程序调用的分块的 cookie 处理由实现<xref:System.IdentityModel.Services.ChunkedCookieHandler>类。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-104">Windows Identity Foundation (WIF) ships with a cookie handler called the chunked cookie handler that is implemented by the <xref:System.IdentityModel.Services.ChunkedCookieHandler> class.</span></span> <span data-ttu-id="1c2b2-105">分块的 cookie 处理程序将会话令牌拆分跨根据指定的块区大小的一个或多个 cookie。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-105">The chunked cookie handler splits the session token across one or more cookies according to a specified chunk size.</span></span> <span data-ttu-id="1c2b2-106">这是为了满足上施加的许多浏览器的各个 cookie 的大小限制。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-106">This is to meet size limitations on individual cookies imposed by many browsers.</span></span>  
  
 <span data-ttu-id="1c2b2-107">你可以从派生<xref:System.IdentityModel.Services.CookieHandler>创建你自己的 cookie 处理程序。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-107">You can derive from <xref:System.IdentityModel.Services.CookieHandler> to create your own cookie handler.</span></span> <span data-ttu-id="1c2b2-108">执行此操作时，必须重写<xref:System.IdentityModel.Services.CookieHandler.DeleteCore%2A>， <xref:System.IdentityModel.Services.CookieHandler.ReadCore%2A>，和<xref:System.IdentityModel.Services.CookieHandler.WriteCore%2A>方法来执行实际工作的删除、 读取和编写会话 cookie。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-108">When you do so, you must override the <xref:System.IdentityModel.Services.CookieHandler.DeleteCore%2A>, <xref:System.IdentityModel.Services.CookieHandler.ReadCore%2A>, and <xref:System.IdentityModel.Services.CookieHandler.WriteCore%2A> methods to perform the actual work of deleting, reading, and writing the session cookie.</span></span> <span data-ttu-id="1c2b2-109">这些方法通常读取从 cookie<xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType>通过集合和写入或删除 cookie<xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType>集合。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-109">These methods typically read the cookie from the <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> collection and write or delete cookies through the <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> collection.</span></span> <span data-ttu-id="1c2b2-110"><xref:System.Web.HttpContext>对象通过其可以访问请求和响应提供作为参数传递给上述每种方法。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-110">The <xref:System.Web.HttpContext> object through which you can access the request and response is provided as a parameter to each of these methods.</span></span> <span data-ttu-id="1c2b2-111">除了所需的方法，你可以选择重写通过公开的其他虚拟方法属性<xref:System.IdentityModel.Services.CookieHandler>类自定义您的处理程序的行为。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-111">In addition to the required methods, you can optionally override other virtual methods properties exposed by the <xref:System.IdentityModel.Services.CookieHandler> class to customize the behavior of your handler.</span></span>  
  
 <span data-ttu-id="1c2b2-112">多个属性公开的<xref:System.IdentityModel.Services.CookieHandler>指定默认行为和会话 cookie 的属性的类。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-112">Several properties are exposed by the <xref:System.IdentityModel.Services.CookieHandler> class that specify default behavior and properties for the session cookie.</span></span> <span data-ttu-id="1c2b2-113"><xref:System.IdentityModel.Services.CookieHandler.Name%2A>， <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>，和<xref:System.IdentityModel.Services.CookieHandler.Path%2A>属性提供 cookie，它是有效的域并在其下它的存储客户端的路径的基名称。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-113">The <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, and <xref:System.IdentityModel.Services.CookieHandler.Path%2A> properties supply the base name for the cookie, the domain in which it is valid and the path under which it is stored on the client.</span></span> <span data-ttu-id="1c2b2-114"><xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A>属性指定是否可以访问客户端脚本的 cookie。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-114">The <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> property specifies whether the cookie is accessible to client-side scripts.</span></span> <span data-ttu-id="1c2b2-115"><xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A>属性指定是否应仅通过安全 (HTTPS) 连接传输 cookie。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-115">The <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> property specifies whether the cookie should be transmitted only over secure (HTTPS) connections.</span></span> <span data-ttu-id="1c2b2-116">如果设置，<xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A>属性用于设置持久性会话为浏览器关闭后仍保持有效的会话的到期时间。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-116">If set, the <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> property is used to set the expiration time for persistent sessions, that is for sessions that remain valid even after the browser is closed.</span></span> <span data-ttu-id="1c2b2-117">所有这些属性具有等效属性通常设置的基础<xref:System.Web.HttpCookie>"core"方法的处理程序对象 （或对象）。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-117">All of these properties have equivalent properties that are typically set on the underlying <xref:System.Web.HttpCookie> object (or objects) by the "core" methods of the handler.</span></span> <span data-ttu-id="1c2b2-118">有关详细信息请参阅每个属性的文档。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-118">For more information see the documentation for each property.</span></span>  
  
 <span data-ttu-id="1c2b2-119">可以通过配置中指定的 cookie 处理程序由 SAM [ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)元素。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-119">The cookie handler that is used by the SAM can be specified in configuration through the [&lt;cookieHandler&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element.</span></span> <span data-ttu-id="1c2b2-120">可以在一个事件委托中修改此元素设置的 cookie 处理<xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType>事件，也可以设置或直接通过<xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-120">The cookie handler set by this element can be modified in an event delegate for the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> event or it can be set or accessed directly through the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1c2b2-121">下面的示例将配置 SAM 若要使用的类型的自定义 cookie 处理`MyNamespace.MyCustomCookieHandler`。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-121">The following example configures the SAM to use a custom cookie handler of type `MyNamespace.MyCustomCookieHandler`.</span></span>  
  
```xml  
<cookieHandler mode="Custom">  
    <customCookieHandler type="MyNamespace.MyCustomCookieHandler, MyAssembly" />  
</cookieHandler>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Services.ChunkedCookieHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CookieHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CookieHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1c2b2-122">从派生类中的构造函数中调用，用于初始化 <see cref="T:System.IdentityModel.Services.CookieHandler" /> 类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-122">Called from constructors in derived classes to initialize the <see cref="T:System.IdentityModel.Services.CookieHandler" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1c2b2-123">删除一个cookie。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-123">Deletes a cookie.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1c2b2-124">读取与当前请求相关的 cookie，该请求具有默认名称、域和路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-124">Deletes the cookie associated with the current request that has the default name, domain, and path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c2b2-125">通过指定名称、 域和路径<xref:System.IdentityModel.Services.CookieHandler.Name%2A>， <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>，和<xref:System.IdentityModel.Services.CookieHandler.Path%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-125">The name, domain and path are specified by the <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, and <xref:System.IdentityModel.Services.CookieHandler.Path%2A> properties.</span></span> <span data-ttu-id="1c2b2-126">通过指定请求 <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="1c2b2-126">The request is specified by <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1c2b2-127">Cookie 的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-127">The name of the cookie.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c2b2-128">删除与指定请求相关的 cookie，该请求具有当前名称和默认的域和路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-128">Deletes the cookie associated with the current request that has the specified name and the default domain and path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c2b2-129">通过指定的域和路径<xref:System.IdentityModel.Services.CookieHandler.Domain%2A>和<xref:System.IdentityModel.Services.CookieHandler.Path%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-129">The domain and path are specified by the <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> and <xref:System.IdentityModel.Services.CookieHandler.Path%2A> properties.</span></span> <span data-ttu-id="1c2b2-130">通过指定请求 <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="1c2b2-130">The request is specified by <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType></span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1c2b2-131">
            <paramref name="name" /> 为 <see langword="null" /> 或空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-131">
              <paramref name="name" /> is <see langword="null" /> or empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="1c2b2-132">该请求的 <see cref="T:System.Web.HttpContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-132">The <see cref="T:System.Web.HttpContext" /> for the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c2b2-133">读取与当前请求相关的 cookie，该请求具有默认名称、域和路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-133">Deletes the cookie associated with the current request that has the default name, domain, and path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c2b2-134">通过指定名称、 域和路径<xref:System.IdentityModel.Services.CookieHandler.Name%2A>， <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>，和<xref:System.IdentityModel.Services.CookieHandler.Path%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-134">The name, domain and path are specified by the <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, and <xref:System.IdentityModel.Services.CookieHandler.Path%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (name As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1c2b2-135">Cookie 的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-135">The name of the cookie.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="1c2b2-136">该请求的 <see cref="T:System.Web.HttpContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-136">The <see cref="T:System.Web.HttpContext" /> for the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c2b2-137">删除与指定请求相关的 cookie，该请求具有指定名称和默认的域和路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-137">Deletes the cookie associated with the specified request that has the specified name and the default domain and path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c2b2-138">通过指定的域和路径<xref:System.IdentityModel.Services.CookieHandler.Domain%2A>和<xref:System.IdentityModel.Services.CookieHandler.Path%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-138">The domain and path are specified by the <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> and <xref:System.IdentityModel.Services.CookieHandler.Path%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1c2b2-139">
            <paramref name="name" /> 为 <see langword="null" /> 或空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-139">
              <paramref name="name" /> is <see langword="null" /> or empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name, string path, string domain, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name, string path, string domain, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.String,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (name As String, path As String, domain As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::String ^ name, System::String ^ path, System::String ^ domain, System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1c2b2-140">Cookie 的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-140">The name of the cookie.</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="1c2b2-141">Cookie的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-141">The path for the cookie.</span>
          </span>
        </param>
        <param name="domain">
          <span data-ttu-id="1c2b2-142">Cookie 域</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-142">The domain for the cookie</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="1c2b2-143">该请求的 <see cref="T:System.Web.HttpContext" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-143">The <see cref="T:System.Web.HttpContext" /> for the request</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c2b2-144">删除与指定请求相关的 cookie，该请求具有指定名称、路径和域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-144">Deletes the cookie associated with the specified request that has the specified name, path, and domain.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1c2b2-145">
            <paramref name="name" /> 为 <see langword="null" /> 或空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-145">
              <paramref name="name" /> is <see langword="null" /> or empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteCore">
      <MemberSignature Language="C#" Value="protected abstract void DeleteCore (string name, string path, string domain, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DeleteCore(string name, string path, string domain, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.DeleteCore(System.String,System.String,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub DeleteCore (name As String, path As String, domain As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void DeleteCore(System::String ^ name, System::String ^ path, System::String ^ domain, System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1c2b2-146">Cookie 的名称</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-146">The name of the cookie</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="1c2b2-147">Cookie的路径</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-147">The path for the cookie</span>
          </span>
        </param>
        <param name="domain">
          <span data-ttu-id="1c2b2-148">Cookie 域</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-148">The domain for the cookie</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="1c2b2-149">该请求的 <see cref="T:System.Web.HttpContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-149">The <see cref="T:System.Web.HttpContext" /> for the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c2b2-150">当在派生类中重写时，删除与指定请求（具有指定名称、域和路径）关联的 cookie。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-150">When overridden in a derived class, deletes the cookie associated with the specified request that has the specified name, domain, and path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c2b2-151">从重载调用<xref:System.IdentityModel.Services.CookieHandler.Delete%2A>方法来执行的删除 cookie 的实际工作。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-151">Called from the overloaded <xref:System.IdentityModel.Services.CookieHandler.Delete%2A> methods to do the actual work of deleting the cookie.</span></span> <span data-ttu-id="1c2b2-152"><xref:System.IdentityModel.Services.CookieHandler.Delete%2A>方法将确保名称和路径都是非空字符串。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-152">The <xref:System.IdentityModel.Services.CookieHandler.Delete%2A> methods will ensure that name and path are non-empty strings.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="1c2b2-153">你必须重写此方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1c2b2-153">You must override this method.</span>
            </span>
            <span data-ttu-id="1c2b2-154">实现操作完全取决开发人员。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1c2b2-154">The implementation is entirely up to the developer.</span>
            </span>
            <span data-ttu-id="1c2b2-155">在典型的情况下，实现替换中的指定的 cookie<see cref="P:System.Web.HttpResponse.Cookies" />集合中的，同时具有一个 cookie<see langword="null" />数据和设置早于当前时间; 但是，这不是要求的到期时间。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1c2b2-155">In the typical case, implementations replace the specified cookie in the <see cref="P:System.Web.HttpResponse.Cookies" /> collection, with a cookie that has <see langword="null" /> data and an expiration time that is set earlier than the current time; however, this is not a requirement.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public virtual string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c2b2-156">获取或设置用于 Cookie 的域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-156">Gets or sets the domain used for cookies.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c2b2-157">用于 cookie 的字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-157">The domain used for cookies.</span>
          </span>
          <span data-ttu-id="1c2b2-158">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-158">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c2b2-159">与 <xref:System.Web.HttpCookie.Domain%2A?displayProperty=nameWithType> 属性相对应。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-159">Corresponds to the <xref:System.Web.HttpCookie.Domain%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="1c2b2-160">可以通过指定初始化该属性`domain`属性[ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)配置中的元素。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-160">The property can be initialized by specifying the `domain` attribute on the [&lt;cookieHandler&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element in configuration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HideFromClientScript">
      <MemberSignature Language="C#" Value="public virtual bool HideFromClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideFromClientScript" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.HideFromClientScript" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HideFromClientScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HideFromClientScript { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c2b2-161">获取或设置一个值，该值指示是否应该从客户端脚本隐藏 Cookie。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-161">Gets or sets a value that indicates whether the cookie should be hidden from client script.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c2b2-162">如果应隐藏客户脚本的 cookie，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-162">
              <see langword="true" /> if the cookie should be hidden from client script; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1c2b2-163">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-163">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c2b2-164">控制是否在编写处理程序的 cookie 的集 Cookie 标头中发出"HttpOnly"标志。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-164">Controls whether the "HttpOnly" flag is emitted in the Set-Cookie header for cookies written by the handler.</span></span> <span data-ttu-id="1c2b2-165">某些 web 浏览器通过阻止客户端脚本访问的 cookie 值接受此标志。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-165">Some web browsers honor this flag by keeping client-side script from accessing the cookie value.</span></span>  
  
 <span data-ttu-id="1c2b2-166">此属性对应于<xref:System.Web.HttpCookie.HttpOnly%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-166">This property corresponds to the <xref:System.Web.HttpCookie.HttpOnly%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="1c2b2-167">可以通过指定初始化该属性`hideFromScript`属性[ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)配置中的元素。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-167">The property can be initialized by specifying the `hideFromScript` attribute on the [&lt;cookieHandler&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element in configuration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchCookiePath">
      <MemberSignature Language="C#" Value="public virtual string MatchCookiePath (Uri baseUri, Uri targetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string MatchCookiePath(class System.Uri baseUri, class System.Uri targetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.MatchCookiePath(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchCookiePath (baseUri As Uri, targetUri As Uri) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ MatchCookiePath(Uri ^ baseUri, Uri ^ targetUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="targetUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseUri">
          <span data-ttu-id="1c2b2-168">请求的基 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-168">The base URL of the request.</span>
          </span>
        </param>
        <param name="targetUri">
          <span data-ttu-id="1c2b2-169">要匹配的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-169">The URL to match</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c2b2-170">如果目标域在 Cookie 域中，且目标路径在 Cookie 路径中，则对 Cookie 路径中的大小写进行匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-170">If the target domain is within the cookie domain and the target path is within the cookie path, match the casing of the cookie path portion.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c2b2-171">返回 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-171">Returns <see cref="T:System.String" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c2b2-172">获取或设置处理程序编写的 Cookie 的基名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-172">Gets or sets the base name for cookies written by the handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c2b2-173">使用 Cookie 的基名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-173">The base name to use for cookies.</span>
          </span>
          <span data-ttu-id="1c2b2-174">默认值为"FedAuth"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-174">The default is "FedAuth".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c2b2-175">此属性对应于<xref:System.Web.HttpCookie.Name%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-175">This property corresponds to the <xref:System.Web.HttpCookie.Name%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="1c2b2-176">可以通过指定初始化该属性`name`属性[ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)配置中的元素。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-176">The property can be initialized by specifying the `name` attribute on the [&lt;cookieHandler&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element in configuration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1c2b2-177">发生设置 <see langword="null" /> 或空值的尝试。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-177">An attempt to set a <see langword="null" /> or empty value occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public virtual string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Path" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c2b2-178">获取或设置处理程序编写的 Cookie 的虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-178">Gets or sets the virtual path for cookies written by the handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c2b2-179">虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-179">The virtual path.</span>
          </span>
          <span data-ttu-id="1c2b2-180">默认为 ASP.NET 应用程序的根。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-180">Defaults to the root of the ASP.NET application.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c2b2-181">此属性对应于<xref:System.Web.HttpCookie.Path%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-181">This property corresponds to the <xref:System.Web.HttpCookie.Path%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="1c2b2-182">可以通过指定初始化该属性`path`属性[ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)配置中的元素。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-182">The property can be initialized by specifying the `path` attribute on the [&lt;cookieHandler&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element in configuration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1c2b2-183">发生设置 <see langword="null" /> 或空值的尝试。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-183">An attempt to set a <see langword="null" /> or empty value occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PersistentSessionLifetime">
      <MemberSignature Language="C#" Value="public virtual Nullable&lt;TimeSpan&gt; PersistentSessionLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; PersistentSessionLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PersistentSessionLifetime As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;TimeSpan&gt; PersistentSessionLifetime { Nullable&lt;TimeSpan&gt; get(); void set(Nullable&lt;TimeSpan&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c2b2-184">永久会话的生存期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-184">The lifetime of persistent sessions.</span>
          </span>
          <span data-ttu-id="1c2b2-185">如果为零，将始终使用瞬变会话。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-185">If zero, transient sessions are always used.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c2b2-186">会话生存期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-186">The session lifetime.</span>
          </span>
          <span data-ttu-id="1c2b2-187">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-187">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c2b2-188">票证持久性会话存储在基于文件的 cookie，这意味着后关闭并重新打开 web 浏览器，可以继续在登录会话中。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-188">Tickets for persistent sessions are stored in file-based cookies, meaning that the sign-in session may continue after the web browser is closed and reopened.</span></span>  
  
 <span data-ttu-id="1c2b2-189">此属性用于设置<xref:System.Web.HttpCookie.Expires%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-189">This property is used to set the <xref:System.Web.HttpCookie.Expires%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="1c2b2-190">可以通过指定初始化该属性`persistentSessionLifetime`属性[ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)配置中的元素。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-190">The property can be initialized by specifying the `persistentSessionLifetime` attribute on the [&lt;cookieHandler&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element in configuration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1c2b2-191">指定的值小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-191">A value that is less than zero is specified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1c2b2-192">读取 Cookie。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-192">Reads a cookie.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read" />
      <MemberSignature Language="VB.NET" Value="Public Function Read () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1c2b2-193">读取与当前请求相关的 cookie，该请求具有默认名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-193">Reads the cookie associated with the current request that has the default name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c2b2-194">如果未到为 cookie，则为 cookie 值或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-194">The cookie value or <see langword="null" /> if the cookie was not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c2b2-195">指定的 cookie 名称<xref:System.IdentityModel.Services.CookieHandler.Name%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-195">The name of the cookie is specified by the <xref:System.IdentityModel.Services.CookieHandler.Name%2A> property.</span></span> <span data-ttu-id="1c2b2-196">通过指定请求<xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-196">The request is specified by <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (name As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1c2b2-197">要读取的 Cookie 的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-197">The name of the cookie to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c2b2-198">读取与当前请求相关的 cookie，该请求具有指定名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-198">Reads the cookie associated with the current request that has the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c2b2-199">如果未到为 cookie，则为 cookie 值或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-199">The cookie value or <see langword="null" /> if the cookie was not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c2b2-200">通过指定请求 <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="1c2b2-200">The request is specified by <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType></span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1c2b2-201">
            <paramref name="name" /> 为 <see langword="null" /> 或空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-201">
              <paramref name="name" /> is <see langword="null" /> or empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (context As HttpContext) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read(System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="1c2b2-202">该请求的 <see cref="T:System.Web.HttpContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-202">The <see cref="T:System.Web.HttpContext" /> for the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c2b2-203">读取与当前请求相关的 cookie，该请求具有默认名称、域和路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-203">Reads the cookie associated with the current request that has the default name, domain, and path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c2b2-204">如果未到为 cookie，则为 cookie 值或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-204">The cookie value or <see langword="null" /> if the cookie was not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c2b2-205">指定的 cookie 名称<xref:System.IdentityModel.Services.CookieHandler.Name%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-205">The name of the cookie is specified by the <xref:System.IdentityModel.Services.CookieHandler.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (name As String, context As HttpContext) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read(System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1c2b2-206">要读取的 Cookie 的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-206">The name of the cookie to read.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="1c2b2-207">该请求的 <see cref="T:System.Web.HttpContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-207">The <see cref="T:System.Web.HttpContext" /> for the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c2b2-208">读取与指定请求相关的 cookie，该请求具有指定名称和默认的域和路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-208">Reads the cookie associated with the specified request that has the specified name and the default domain and path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c2b2-209">如果未到为 cookie，则为 cookie 值或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-209">The cookie value or <see langword="null" /> if the cookie was not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1c2b2-210">
            <paramref name="name" /> 为 <see langword="null" /> 或空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-210">
              <paramref name="name" /> is <see langword="null" /> or empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadCore">
      <MemberSignature Language="C#" Value="protected abstract byte[] ReadCore (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] ReadCore(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.ReadCore(System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ReadCore (name As String, context As HttpContext) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract cli::array &lt;System::Byte&gt; ^ ReadCore(System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1c2b2-211">Cookie 的名称</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-211">The name of the cookie</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="1c2b2-212">该请求的 <see cref="T:System.Web.HttpContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-212">The <see cref="T:System.Web.HttpContext" /> for the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c2b2-213">当在派生类中重写时，将读取与具有指定名称和指定请求关联的 cookie。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-213">When overridden in a derived class, reads the cookie that has the specified name and that is associated with the specified request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c2b2-214">如果未到为 cookie，则为 cookie 值或 <see langword="null" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-214">The cookie value or <see langword="null" /> if the cookie was not found</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c2b2-215">从重载调用<xref:System.IdentityModel.Services.CookieHandler.Read%2A>方法来执行的读取 cookie 的实际工作。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-215">Called from the overloaded <xref:System.IdentityModel.Services.CookieHandler.Read%2A> methods to do the actual work of reading the cookie.</span></span> <span data-ttu-id="1c2b2-216"><xref:System.IdentityModel.Services.CookieHandler.Read%2A>方法将确保`name`为非空字符串。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-216">The <xref:System.IdentityModel.Services.CookieHandler.Read%2A> methods will ensure that `name` is a non-empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="1c2b2-217">你必须重写此方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1c2b2-217">You must override this method.</span>
            </span>
            <span data-ttu-id="1c2b2-218">实现操作完全取决开发人员。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1c2b2-218">The implementation is entirely up to the developer.</span>
            </span>
            <span data-ttu-id="1c2b2-219">在典型的情况下，实现 cookie 从中读取数据<see cref="P:System.Web.HttpRequest.Cookies" />集合，但是，这不是一项要求。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1c2b2-219">In the typical case, implementations read the cookie data from the <see cref="P:System.Web.HttpRequest.Cookies" /> collection, however, this is not a requirement.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RequireSsl">
      <MemberSignature Language="C#" Value="public virtual bool RequireSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireSsl" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.RequireSsl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RequireSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequireSsl { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c2b2-220">获取或设置一个值，该值指定是否应只用 SSL 验证 Cookie。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-220">Gets or sets a value that specifies whether the cookie should be used only with SSL.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c2b2-221">如果只应针对 SSL 连接使用 cookie，则为 <see langword="true" /> ；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-221">
              <see langword="true" /> if the cookie should only be used over an SSL connection; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1c2b2-222">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-222">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c2b2-223">控制是否有任何已编写 cookie 发出集 Cookie 标头中的"安全"标志。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-223">Controls whether the "Secure" flag in the Set-Cookie header is emitted for any cookies written.</span></span> <span data-ttu-id="1c2b2-224">如果此值为`true`，cookie 将仅可通过 HTTPS 会话。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-224">If this value is `true`, the session cookies will only be available over HTTPS.</span></span>  
  
 <span data-ttu-id="1c2b2-225">此属性对应于<xref:System.Web.HttpCookie.Secure%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-225">This property corresponds to the <xref:System.Web.HttpCookie.Secure%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="1c2b2-226">可以通过指定初始化该属性`requireSSL`属性[ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)配置中的元素。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-226">The property can be initialized by specifying the `requireSSL` attribute on the [&lt;cookieHandler&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element in configuration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1c2b2-227">写入 cookie。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-227">Writes a cookie.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, bool isPersistent, DateTime tokenExpirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, bool isPersistent, valuetype System.DateTime tokenExpirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.Boolean,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), isPersistent As Boolean, tokenExpirationTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, bool isPersistent, DateTime tokenExpirationTime);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="isPersistent" Type="System.Boolean" />
        <Parameter Name="tokenExpirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1c2b2-228">Cookie 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-228">The cookie value.</span>
          </span>
        </param>
        <param name="isPersistent">
          <span data-ttu-id="1c2b2-229">如果 Cookie 是持久的，则为 <see langword="true" />；如果 Cookie 仅是会话，则为 <see langword="false" />,即，仅在客户端上的浏览器关闭前有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-229">
              <see langword="true" /> if the cookie is persistent; <see langword="false" /> if the cookie is session-only, that is, only valid until the browser on the client is closed.</span>
          </span>
        </param>
        <param name="tokenExpirationTime">
          <span data-ttu-id="1c2b2-230">基础标识的过期时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-230">The expiration time for the underlying token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c2b2-231">写入当前请求（具有指定值、持久性和过期时间）关联的 cookie，。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-231">Writes a cookie associated with the current request that has the specified value, persistence, and expiration time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c2b2-232">如果`isPersistent`参数是`false`，cookie 到期时间设置为<xref:System.DateTime.MinValue?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-232">If the `isPersistent` parameter is `false`, the cookie expiration time is set to <xref:System.DateTime.MinValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1c2b2-233">如果`isPersistent`参数是`true`，cookie 到期时间设置的值为<xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A>属性，如果不是`null`或者，如果<xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A>属性是`null`，过期时间设置为的值`tokenExpirationTime`参数。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-233">If the `isPersistent` parameter is `true`, the cookie expiration time is set to the value of the <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> property if it is not `null` or, if the <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> property is `null`, the expiration time is set to the value of the `tokenExpirationTime` parameter.</span></span>  
  
 <span data-ttu-id="1c2b2-234">通过指定的 cookie 名称、 域和路径<xref:System.IdentityModel.Services.CookieHandler.Name%2A>， <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>，和<xref:System.IdentityModel.Services.CookieHandler.Path%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-234">The cookie name, domain and path are specified by the <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, and <xref:System.IdentityModel.Services.CookieHandler.Path%2A> properties.</span></span> <span data-ttu-id="1c2b2-235">通过指定请求<xref:System.Web.HttpContext.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-235">The request is specified by <xref:System.Web.HttpContext.Current%2A>.</span></span> <span data-ttu-id="1c2b2-236">指定是否应仅通过 SSL 发送 cookie<xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A>属性和应隐藏从客户端脚本的 cookie 的是否由指定<xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-236">Whether the cookie should be sent only over SSL is specified by the <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> property and whether the cookie should be hidden from client-side scripts is specified by the <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1c2b2-237">
            <paramref name="value" /> 为 <see langword="null" /> 或空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-237">
              <paramref name="value" /> is <see langword="null" /> or empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, DateTime expirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, valuetype System.DateTime expirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), name As String, expirationTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, DateTime expirationTime);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1c2b2-238">Cookie 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-238">The cookie value.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="1c2b2-239">Cookie 的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-239">The name of the cookie.</span>
          </span>
        </param>
        <param name="expirationTime">
          <span data-ttu-id="1c2b2-240">Cookie 的过期时段，或会话（仅会话）Cookie 的 <see cref="F:System.DateTime.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-240">The expiration time for the cookie, or <see cref="F:System.DateTime.MinValue" /> for a session (session-only) cookie.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c2b2-241">写入当前请求（具有指定名称、值和过期时间）关联的 cookie，。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-241">Writes a cookie associated with the current request that has the specified name, value, and expiration time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c2b2-242">通过指定的 cookie 域和路径<xref:System.IdentityModel.Services.CookieHandler.Domain%2A>和<xref:System.IdentityModel.Services.CookieHandler.Path%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-242">The cookie domain and path are specified by the <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> and <xref:System.IdentityModel.Services.CookieHandler.Path%2A> properties.</span></span> <span data-ttu-id="1c2b2-243">通过指定请求<xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-243">The request is specified by <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="1c2b2-244">通过指定请求<xref:System.Web.HttpContext.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-244">The request is specified by <xref:System.Web.HttpContext.Current%2A>.</span></span> <span data-ttu-id="1c2b2-245">指定是否应仅通过 SSL 发送 cookie<xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A>属性和应隐藏从客户端脚本的 cookie 的是否由指定<xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-245">Whether the cookie should be sent only over SSL is specified by the <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> property and whether the cookie should be hidden from client-side scripts is specified by the <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1c2b2-246">
            <paramref name="value" /> 为 <see langword="null" /> 或空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-246">
              <paramref name="value" /> is <see langword="null" /> or empty.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1c2b2-247">
            <paramref name="name" /> 为 <see langword="null" /> 或空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-247">
              <paramref name="name" /> is <see langword="null" /> or empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, DateTime expirationTime, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, valuetype System.DateTime expirationTime, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), name As String, expirationTime As DateTime, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, DateTime expirationTime, System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1c2b2-248">Cookie 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-248">The cookie value.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="1c2b2-249">Cookie 的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-249">The name of the cookie.</span>
          </span>
        </param>
        <param name="expirationTime">
          <span data-ttu-id="1c2b2-250">Cookie 的过期时段，或会话（仅会话）Cookie 的 <see cref="F:System.DateTime.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-250">The expiration time for the cookie, or <see cref="F:System.DateTime.MinValue" /> for a session (session-only) cookie.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="1c2b2-251">该请求的 <see cref="T:System.Web.HttpContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-251">The <see cref="T:System.Web.HttpContext" /> for the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c2b2-252">写入指定请求（具有指定名称、值和过期时间）关联的 cookie，。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-252">Writes a cookie associated with the specified request that has the specified name, value, and expiration time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c2b2-253">通过指定的 cookie 域和路径<xref:System.IdentityModel.Services.CookieHandler.Domain%2A>和<xref:System.IdentityModel.Services.CookieHandler.Path%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-253">The cookie domain and path are specified by the <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> and <xref:System.IdentityModel.Services.CookieHandler.Path%2A> properties.</span></span> <span data-ttu-id="1c2b2-254">通过指定请求<xref:System.Web.HttpContext.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-254">The request is specified by <xref:System.Web.HttpContext.Current%2A>.</span></span> <span data-ttu-id="1c2b2-255">指定是否应仅通过 SSL 发送 cookie<xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A>属性和应隐藏从客户端脚本的 cookie 的是否由指定<xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-255">Whether the cookie should be sent only over SSL is specified by the <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> property and whether the cookie should be hidden from client-side scripts is specified by the <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1c2b2-256">
            <paramref name="value" /> 为 <see langword="null" /> 或空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-256">
              <paramref name="value" /> is <see langword="null" /> or empty.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1c2b2-257">
            <paramref name="name" /> 为 <see langword="null" /> 或空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-257">
              <paramref name="name" /> is <see langword="null" /> or empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, string path, string domain, DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, string path, string domain, valuetype System.DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), name As String, path As String, domain As String, expirationTime As DateTime, requiresSsl As Boolean, hideFromClientScript As Boolean, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, System::String ^ path, System::String ^ domain, DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="requiresSsl" Type="System.Boolean" />
        <Parameter Name="hideFromClientScript" Type="System.Boolean" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1c2b2-258">Cookie 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-258">The cookie value.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="1c2b2-259">Cookie 的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-259">The name of the cookie.</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="1c2b2-260">Cookie的路径</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-260">The path for the cookie</span>
          </span>
        </param>
        <param name="domain">
          <span data-ttu-id="1c2b2-261">Cookie 域</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-261">The domain for the cookie</span>
          </span>
        </param>
        <param name="expirationTime">
          <span data-ttu-id="1c2b2-262">Cookie 的过期时段，或会话（仅会话）Cookie 的 <see cref="F:System.DateTime.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-262">The expiration time for the cookie, or <see cref="F:System.DateTime.MinValue" /> for a session (session-only) cookie.</span>
          </span>
        </param>
        <param name="requiresSsl">
          <span data-ttu-id="1c2b2-263">如果只应针对 SSL 连接使用 cookie，则为 <see langword="true" /> ；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-263">
              <see langword="true" /> if the cookie should only be used over an SSL connection; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="hideFromClientScript">
          <span data-ttu-id="1c2b2-264">如果应隐藏客户脚本的 cookie，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-264">
              <see langword="true" /> if the cookie should be hidden from client script; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="1c2b2-265">该请求的 <see cref="T:System.Web.HttpContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-265">The <see cref="T:System.Web.HttpContext" /> for the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c2b2-266">写入指定请求（具有指定名称、值、域、路径、过期时间和可见性）关联的 cookie，。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-266">Writes a cookie associated with the specified request that has the specified name, value, domain, path, expiration time, and visibility.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1c2b2-267">
            <paramref name="value" /> 为 <see langword="null" /> 或空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-267">
              <paramref name="value" /> is <see langword="null" /> or empty.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1c2b2-268">
            <paramref name="name" /> 为 <see langword="null" /> 或空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-268">
              <paramref name="name" /> is <see langword="null" /> or empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCore">
      <MemberSignature Language="C#" Value="protected abstract void WriteCore (byte[] value, string name, string path, string domain, DateTime expirationTime, bool secure, bool httpOnly, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteCore(unsigned int8[] value, string name, string path, string domain, valuetype System.DateTime expirationTime, bool secure, bool httpOnly, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.WriteCore(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub WriteCore (value As Byte(), name As String, path As String, domain As String, expirationTime As DateTime, secure As Boolean, httpOnly As Boolean, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void WriteCore(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, System::String ^ path, System::String ^ domain, DateTime expirationTime, bool secure, bool httpOnly, System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="secure" Type="System.Boolean" />
        <Parameter Name="httpOnly" Type="System.Boolean" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1c2b2-269">Cookie 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-269">The cookie value.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="1c2b2-270">Cookie 的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-270">The name of the cookie.</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="1c2b2-271">Cookie的路径</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-271">The path for the cookie</span>
          </span>
        </param>
        <param name="domain">
          <span data-ttu-id="1c2b2-272">Cookie 域</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-272">The domain for the cookie</span>
          </span>
        </param>
        <param name="expirationTime">
          <span data-ttu-id="1c2b2-273">Cookie 的过期时段，或会话（仅会话）Cookie 的 <see cref="F:System.DateTime.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-273">The expiration time for the cookie, or <see cref="F:System.DateTime.MinValue" /> for a session (session-only) cookie.</span>
          </span>
        </param>
        <param name="secure">
          <span data-ttu-id="1c2b2-274">如果只应针对 SSL 连接使用 cookie，则为 <see langword="true" /> ；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-274">
              <see langword="true" /> if the cookie should only be used over an SSL connection; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="httpOnly">
          <span data-ttu-id="1c2b2-275">如果应隐藏客户脚本的 cookie，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-275">
              <see langword="true" /> if the cookie should be hidden from client script; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="1c2b2-276">该请求的 <see cref="T:System.Web.HttpContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-276">The <see cref="T:System.Web.HttpContext" /> for the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c2b2-277">当在派生类中重写时，写入与指定请求（具有指定名称、值、域、路径、过期时间、持久性和可见性）关联的 cookie。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2b2-277">When overridden in a derived class, writes a cookie associated with the specified request that has the specified name, value, domain, path, expiration time, persistence and visibility.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c2b2-278">从重载调用<xref:System.IdentityModel.Services.CookieHandler.Write%2A>方法来执行与编写 cookie 的实际工作。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-278">Called from the overloaded <xref:System.IdentityModel.Services.CookieHandler.Write%2A> methods to do the actual work of writing the cookie.</span></span> <span data-ttu-id="1c2b2-279"><xref:System.IdentityModel.Services.CookieHandler.Write%2A>方法将确保`value`非空字节数组，而且`name`和`path`是非空字符串。</span><span class="sxs-lookup"><span data-stu-id="1c2b2-279">The <xref:System.IdentityModel.Services.CookieHandler.Write%2A> methods will ensure that `value` is a non-empty byte array and that `name` and `path` are non-empty strings.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="1c2b2-280">你必须重写此方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1c2b2-280">You must override this method.</span>
            </span>
            <span data-ttu-id="1c2b2-281">实现操作完全取决开发人员。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1c2b2-281">The implementation is entirely up to the developer.</span>
            </span>
            <span data-ttu-id="1c2b2-282">在典型的情况下，实现将 cookie 数据写入<see cref="P:System.Web.HttpResponse.Cookies" />集合，但是，这不是一项要求。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1c2b2-282">In the typical case, implementations write the cookie data to the <see cref="P:System.Web.HttpResponse.Cookies" /> collection, however, this is not a requirement.</span>
            </span>
            <span data-ttu-id="1c2b2-283">大多数参数的方法通常用于设置一个或多个等效属性<see cref="T:System.Web.HttpCookie" />对象。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1c2b2-283">Most parameters of the method are typically used to set equivalent properties on one or more <see cref="T:System.Web.HttpCookie" /> objects.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>