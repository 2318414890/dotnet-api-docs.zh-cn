<Type Name="CookieHandlerElement" FullName="System.IdentityModel.Services.CookieHandlerElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="88411aadd444bfacf355c1d8e04bea3bef6e6a34" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36481852" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CookieHandlerElement : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CookieHandlerElement extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.CookieHandlerElement" />
  <TypeSignature Language="VB.NET" Value="Public Class CookieHandlerElement&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class CookieHandlerElement : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type CookieHandlerElement = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示 <see langword="&lt;cookieHandler&gt;" /> 配置元素。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `<cookieHandler>`元素是子元素的`<federatedAuthentication>`元素;<xref:System.IdentityModel.Services.Configuration.FederationConfiguration.CookieHandler%2A?displayProperty=nameWithType>属性设置为实例<xref:System.IdentityModel.Services.CookieHandlerElement>类。 `<cookieHandler>`元素用来配置使用由会话身份验证模块 (SAM)，表示的 cookie 处理程序<xref:System.IdentityModel.Services.SessionAuthenticationModule>类。  
  
 可以通过以下方式之一中配置 cookie 处理程序：  
  
-   若要配置分块的 cookie 处理程序，设置<xref:System.IdentityModel.Services.CookieHandlerElement.Mode%2A>属性为<xref:System.IdentityModel.Services.CookieHandlerMode.Default>或<xref:System.IdentityModel.Services.CookieHandlerMode.Chunked>并设置<xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A>使用分块的 cookie 处理程序的配置元素的属性。 <xref:System.IdentityModel.Services.CookieHandlerElement.CustomCookieHandler%2A>不应设置属性。  
  
-   若要配置与默认块区大小的分块的 cookie 处理程序，可以设置<xref:System.IdentityModel.Services.CookieHandlerElement.Mode%2A>属性，如前面所述，但保留同时<xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A>和<xref:System.IdentityModel.Services.CookieHandlerElement.CustomCookieHandler%2A>取消设置的属性。  
  
-   若要配置自定义 cookie 处理程序，设置<xref:System.IdentityModel.Services.CookieHandlerElement.Mode%2A>属性<xref:System.IdentityModel.Services.CookieHandlerMode.Custom>并设置<xref:System.IdentityModel.Services.CookieHandlerElement.CustomCookieHandler%2A>与标识自定义 cookie 处理程序的类型的配置元素的属性。 此类型必须派生自<xref:System.IdentityModel.Services.CookieHandler>类。 <xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A>不应设置属性。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CookieHandlerElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandlerElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CookieHandlerElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.IdentityModel.Services.CookieHandlerElement" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChunkedCookieHandler">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Services.ChunkedCookieHandlerElement ChunkedCookieHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Services.ChunkedCookieHandlerElement ChunkedCookieHandler" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property ChunkedCookieHandler As ChunkedCookieHandlerElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Services::ChunkedCookieHandlerElement ^ ChunkedCookieHandler { System::IdentityModel::Services::ChunkedCookieHandlerElement ^ get(); void set(System::IdentityModel::Services::ChunkedCookieHandlerElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ChunkedCookieHandler : System.IdentityModel.Services.ChunkedCookieHandlerElement with get, set" Usage="System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("chunkedCookieHandler", IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.ChunkedCookieHandlerElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置分块 Cookie 处理程序。</summary>
        <value>为 chunked cookie 处理程序提供另外配置的 <see cref="T:System.IdentityModel.Services.ChunkedCookieHandlerElement" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性等效于`<chunkedCookieHandler>`的子元素`<cookieHandler>`元素。 它指定一个的分块的 cookie 处理程序的实例<xref:System.IdentityModel.Services.ChunkedCookieHandler>类中，以使用。 如果设置，<xref:System.IdentityModel.Services.CookieHandlerElement.Mode%2A>属性应设置为<xref:System.IdentityModel.Services.CookieHandlerMode.Default>或<xref:System.IdentityModel.Services.CookieHandlerMode.Chunked>。 如果<xref:System.IdentityModel.Services.CookieHandlerElement.Mode%2A>属性设置为上述任一值但<xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A>属性未设置，具有默认块区大小的分块的 cookie 处理程序 (<xref:System.IdentityModel.Services.ChunkedCookieHandler.DefaultChunkSize?displayProperty=nameWithType>) 配置。  
  
 任一<xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A>属性或<xref:System.IdentityModel.Services.CookieHandlerElement.CustomCookieHandler%2A>属性可以是组，但不是两者。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomCookieHandler">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Configuration.CustomTypeElement CustomCookieHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Configuration.CustomTypeElement CustomCookieHandler" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandlerElement.CustomCookieHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomCookieHandler As CustomTypeElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Configuration::CustomTypeElement ^ CustomCookieHandler { System::IdentityModel::Configuration::CustomTypeElement ^ get(); void set(System::IdentityModel::Configuration::CustomTypeElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomCookieHandler : System.IdentityModel.Configuration.CustomTypeElement with get, set" Usage="System.IdentityModel.Services.CookieHandlerElement.CustomCookieHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("customCookieHandler", IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Configuration.CustomTypeElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置自定义 Cookie 处理程序类型。 当配置自定义 cookie 处理程序时必须设置此属性。</summary>
        <value>定义自定义 cookie 处理程序类型的 <see cref="T:System.IdentityModel.Configuration.CustomTypeElement" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性等效于`<customCookieHandler>`的子元素`<cookieHandler>`元素。 它指定要使用的自定义 cookie 处理程序类型。 如果设置此属性，<xref:System.IdentityModel.Services.CookieHandlerElement.Mode%2A>属性必须设置为<xref:System.IdentityModel.Services.CookieHandlerMode.Custom>。 此属性指定的自定义类型必须派生自<xref:System.IdentityModel.Services.CookieHandler>类。  
  
 任一<xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A>属性或<xref:System.IdentityModel.Services.CookieHandlerElement.CustomCookieHandler%2A>属性可以是组，但不是两者。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandlerElement.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string with get, set" Usage="System.IdentityModel.Services.CookieHandlerElement.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("domain", IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置处理程序编写的 Cookie 的域值。</summary>
        <value>域值。 默认值为一个空字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 表示`domain`属性[ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)元素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfiguredCookieHandler">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Services.CookieHandler GetConfiguredCookieHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Services.CookieHandler GetConfiguredCookieHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandlerElement.GetConfiguredCookieHandler" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConfiguredCookieHandler () As CookieHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Services::CookieHandler ^ GetConfiguredCookieHandler();" />
      <MemberSignature Language="F#" Value="member this.GetConfiguredCookieHandler : unit -&gt; System.IdentityModel.Services.CookieHandler" Usage="cookieHandlerElement.GetConfiguredCookieHandler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.CookieHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>基于配置属性获取新的 Cookie 处理程序。</summary>
        <returns>Cookie 处理程序。 这是 <see cref="T:System.IdentityModel.Services.CookieHandler" /> 或 <see cref="T:System.IdentityModel.Services.ChunkedCookieHandler" /> 实例（根据由当前实例的属性配置的处理程序种类）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法返回的 cookie 处理程序的配置一致。 分块的 cookie 处理程序或自定义 cookie 处理程序，具体取决于如何设置配置属性将返回的 cookie 处理程序。 有关详情，请参阅<xref:System.IdentityModel.Services.CookieHandlerElement>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">Cookie 处理程序不能从当前实例的属性中创建。</exception>
      </Docs>
    </Member>
    <Member MemberName="HideFromScript">
      <MemberSignature Language="C#" Value="public bool HideFromScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideFromScript" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandlerElement.HideFromScript" />
      <MemberSignature Language="VB.NET" Value="Public Property HideFromScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HideFromScript { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HideFromScript : bool with get, set" Usage="System.IdentityModel.Services.CookieHandlerElement.HideFromScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("hideFromScript", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置指定是否应设置此处理程序编写的 Cookie 的 <see langword="httpOnly" /> 属性的值。</summary>
        <value>如果应设置 <see langword="true" /> 属性，则为 <see langword="httpOnly" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 控制是否有任何已编写 cookie 发出"HttpOnly"标志。 某些 Web 浏览器通过阻止客户端脚本访问的 cookie 值接受此标志。  
  
 表示`hideFromScript`属性[ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)元素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Services.CookieHandlerMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IdentityModel.Services.CookieHandlerMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandlerElement.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As CookieHandlerMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Services::CookieHandlerMode Mode { System::IdentityModel::Services::CookieHandlerMode get(); void set(System::IdentityModel::Services::CookieHandlerMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.IdentityModel.Services.CookieHandlerMode with get, set" Usage="System.IdentityModel.Services.CookieHandlerElement.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("mode", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.CookieHandlerMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 Cookie 处理程序流模式。</summary>
        <value>有效的 <see cref="T:System.IdentityModel.Services.CookieHandlerMode" /> 值，指示要配置的 cookie 处理程序的种类。 默认值是 <see cref="F:System.IdentityModel.Services.CookieHandlerMode.Default" />，指示一个 chunked cookie 处理程序。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 分块的 cookie 处理程序的 (<xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A>属性设置)，应将模式设置为<xref:System.IdentityModel.Services.CookieHandlerMode.Chunked>或<xref:System.IdentityModel.Services.CookieHandlerMode.Default>。 自定义 cookie 处理程序 (<xref:System.IdentityModel.Services.CookieHandlerElement.CustomCookieHandler%2A>属性设置)，应将模式设置为<xref:System.IdentityModel.Services.CookieHandlerMode.Custom>。  
  
 表示`mode`属性[ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)元素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandlerElement.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.IdentityModel.Services.CookieHandlerElement.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("name", IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置处理程序编写的任何 Cookie 的基名称。</summary>
        <value>Cookie 的基名称。 默认值为"FedAuth"。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 表示`name`属性[ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)元素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandlerElement.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.IdentityModel.Services.CookieHandlerElement.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("path", IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置处理程序编写的 Cookie 的路径值。</summary>
        <value>包含路径的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果定义没有路径，路径由<xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>使用属性。  
  
 表示`path`属性[ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)元素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistentSessionLifetime">
      <MemberSignature Language="C#" Value="public TimeSpan PersistentSessionLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan PersistentSessionLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandlerElement.PersistentSessionLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistentSessionLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan PersistentSessionLifetime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.PersistentSessionLifetime : TimeSpan with get, set" Usage="System.IdentityModel.Services.CookieHandlerElement.PersistentSessionLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("persistentSessionLifetime", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.TimeSpanValidator(MaxValueString="365.0:0:0", MinValueString="0:0:0")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置处理程序颁发的 Cookie 的生命周期。</summary>
        <value>一个表示 cookie 生存期的 <see cref="T:System.TimeSpan" />。 默认值为 0 天 ("0.0:0:0")。 值必须是 0 ("0.0:0:0") 和 ("365.0:0:0") 的 365 天之间的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 表示`persistentSessionLifetime`属性[ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)元素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireSsl">
      <MemberSignature Language="C#" Value="public bool RequireSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireSsl" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandlerElement.RequireSsl" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequireSsl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequireSsl : bool with get, set" Usage="System.IdentityModel.Services.CookieHandlerElement.RequireSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("requireSsl", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定是否应只用 SSL 验证 Cookie。</summary>
        <value>如果只应针对 SSL 连接使用 cookie，则为 <see langword="true" /> ；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 控制是否有任何已编写 cookie 发出"安全"标志。 如果此值为`true`，在登录会话 cookie 将仅可通过 HTTPS。  
  
 表示`requireSSL`属性[ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)元素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>