<Type Name="WSFederationMessage" FullName="System.IdentityModel.Services.WSFederationMessage">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e2603b1c5822891d04eaf8a9515a6bbceb98a2c5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36481876" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WSFederationMessage : System.IdentityModel.Services.FederationMessage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WSFederationMessage extends System.IdentityModel.Services.FederationMessage" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.WSFederationMessage" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WSFederationMessage&#xA;Inherits FederationMessage" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSFederationMessage abstract : System::IdentityModel::Services::FederationMessage" />
  <TypeSignature Language="F#" Value="type WSFederationMessage = class&#xA;    inherit FederationMessage" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Services.FederationMessage</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示 WS-Federation 消息并定义基类，通过其可衍生更具体 WS-Federation 消息。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationMessage>类表示的 WS 联合身份验证请求或 WS 联合身份验证响应。 表示特定的 WS 联合身份验证消息的专用化程度的类派生自<xref:System.IdentityModel.Services.WSFederationMessage>; 例如，<xref:System.IdentityModel.Services.SignInRequestMessage>类，该类表示 WS 联合身份验证登录请求消息。  
  
 <xref:System.IdentityModel.Services.WSFederationMessage>类公开可用于设置或访问单个消息参数的多个属性。 这些参数也可以设置或通过访问<xref:System.IdentityModel.Services.FederationMessage.Parameters%2A>字典。 例如，你可以读取消息中的 wencoding 参数是<xref:System.IdentityModel.Services.WSFederationMessage.Encoding%2A>属性或通过作为键与指定"wencoding"<xref:System.IdentityModel.Services.FederationMessage.Parameters%2A>字典。  
  
 <xref:System.IdentityModel.Services.WSFederationMessage>包含你可以调用创建从适当的 WS 联合身份验证消息的静态方法： 包含查询字符串的 URL; 基 URL 和 WS 联合身份验证参数名称和值; 或窗体的集合将数据发布在 HTTP 请求中。  
  
 [!INCLUDE[wif_wsfed_ref](~/includes/wif-wsfed-ref-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSFederationMessage (Uri baseUrl, string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationMessage.#ctor(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, action As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSFederationMessage(Uri ^ baseUrl, System::String ^ action);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Services.WSFederationMessage : Uri * string -&gt; System.IdentityModel.Services.WSFederationMessage" Usage="new System.IdentityModel.Services.WSFederationMessage (baseUrl, action)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUrl">WS-Federation 消息应用的基 URL。 这是没有任何询问参数的 URL。 设置 <see cref="P:System.IdentityModel.Services.FederationMessage.BaseUri" /> 属性。</param>
        <param name="action">消息的 wa 参数。 指定要执行的操作；例如，WS 联合身份验证登录请求的“wsignin1.0”。 设置 <see cref="P:System.IdentityModel.Services.WSFederationMessage.Action" /> 属性。</param>
        <summary>从该消息应用的基 URL 和要执行的操作（wa 消息参数）来初始化 <see cref="T:System.IdentityModel.Services.WSFederationMessage" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="baseUri" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="action" /> 为 <see langword="null" /> 或空字符串。</exception>
        <exception cref="T:System.IdentityModel.Services.WSFederationMessageException">
          <paramref name="baseUri" /> 不是有效的绝对 URI。</exception>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationMessage.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.IdentityModel.Services.WSFederationMessage.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置消息的 wa 参数。</summary>
        <value>wa 参数的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wa 参数指定要执行的操作。 例如，对于登录方案<xref:System.IdentityModel.Services.WSFederationMessage.Action%2A>属性设置为"wsignin1.0"和注销的方案，该属性设置为"wsignout1.0"。 Wa 参数是必需的因此无法将此属性设置为`null`或空字符串。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">尝试设置一个为 <see langword="null" /> 或空字符串的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public string Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Context" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationMessage.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Context { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Context : string with get, set" Usage="System.IdentityModel.Services.WSFederationMessage.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置消息的 wctx 参数。</summary>
        <value>wctx 参数的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定必须返回与颁发的令牌中，如果在请求中传递的上下文值。 值是不透明的也就是说，其语义已知只能由发起方的消息 （通常信赖方 – RP）;它无法解释消息或任何中介的接收方。 Wctx 参数是可选的。 设置<xref:System.IdentityModel.Services.WSFederationMessage.Context%2A>属性`null`或一个空字符串，以从消息中删除 wctx 参数。  
  
> [!IMPORTANT]
>  如果你的应用程序收到的 wctx 参数集的 WS 联合身份验证消息，它应确保相同的值是在对发送方的任何响应中返回或转发如果消息将传递给另一方。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFormPost">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Services.WSFederationMessage CreateFromFormPost (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IdentityModel.Services.WSFederationMessage CreateFromFormPost(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationMessage.CreateFromFormPost(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFormPost (request As HttpRequestBase) As WSFederationMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IdentityModel::Services::WSFederationMessage ^ CreateFromFormPost(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="static member CreateFromFormPost : System.Web.HttpRequestBase -&gt; System.IdentityModel.Services.WSFederationMessage" Usage="System.IdentityModel.Services.WSFederationMessage.CreateFromFormPost request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.WSFederationMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">包含窗体发布参数请求的请求。</param>
        <summary>从指定请求接收的窗体发送中创建 WS-Federation 消息。</summary>
        <returns>生成的消息或如果消息无法生成则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果可以创建一条消息，该方法返回正确地实现<xref:System.IdentityModel.Services.WSFederationMessage>"wsignout1.0"wa 参数是否基于 post; 例如，在窗体中提交 wa 参数则<xref:System.IdentityModel.Services.SignOutRequestMessage>返回对象。  
  
 获取基 URL 和通过请求的客户端提交的窗体变量集合，并调用<xref:System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromNameValueCollection">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Services.WSFederationMessage CreateFromNameValueCollection (Uri baseUrl, System.Collections.Specialized.NameValueCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IdentityModel.Services.WSFederationMessage CreateFromNameValueCollection(class System.Uri baseUrl, class System.Collections.Specialized.NameValueCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromNameValueCollection (baseUrl As Uri, collection As NameValueCollection) As WSFederationMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IdentityModel::Services::WSFederationMessage ^ CreateFromNameValueCollection(Uri ^ baseUrl, System::Collections::Specialized::NameValueCollection ^ collection);" />
      <MemberSignature Language="F#" Value="static member CreateFromNameValueCollection : Uri * System.Collections.Specialized.NameValueCollection -&gt; System.IdentityModel.Services.WSFederationMessage" Usage="System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection (baseUrl, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.WSFederationMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="collection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="baseUrl">联合消息应用的基 URL。</param>
        <param name="collection">该包含消息的参数的 <see cref="T:System.Collections.Specialized.NameValueCollection" />。</param>
        <summary>从参数的 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 创建 WS-Federation 消息。</summary>
        <returns>生成的消息或如果消息无法生成则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 参数集合必须包含 wa 参数，它指定要执行的操作的条目。 如果 wa 条目不是可识别的操作，将引发异常。 参数集合应包含适当参数的集合中的 wa 参数指定的消息的种类。 该方法将返回正确地实现<xref:System.IdentityModel.Services.WSFederationMessage>基于 wa 参数。 下表列出<xref:System.IdentityModel.Services.WSFederationMessage>实现返回各种参数组合。  
  
|返回类型|指定的 wa 查询参数|注释|  
|-------------------|----------------------------------|--------------|  
|<xref:System.IdentityModel.Services.AttributeRequestMessage>|wattr1.0|--|  
|<xref:System.IdentityModel.Services.PseudonymRequestMessage>|wpseudo1.0|--|  
|<xref:System.IdentityModel.Services.SignInRequestMessage>|wsignin1.0|`collection` 必须包含 wtrealm 或 wreply 参数。 如果`collection`包含 wresult 或 wresultptr 参数，将登录响应消息返回 （请参阅下一步的行）。|  
|<xref:System.IdentityModel.Services.SignInResponseMessage>|wsignin1.0|时返回的`collection`包含 wresult 或 wresultptr 参数。 只有一个可能会出现。 如果两者都存在，则引发异常。|  
|<xref:System.IdentityModel.Services.SignOutRequestMessage>|wsignout1.0|--|  
|<xref:System.IdentityModel.Services.SignOutCleanupRequestMessage>|wsignoutcleanup1.0|--|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="baseUrl" /> 为 <see langword="null" />。  - 或 -  <paramref name="collection" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.IdentityModel.Services.WSFederationMessageException">wa 参数在参数集合中不可被识别。</exception>
        <exception cref="T:System.ArgumentException">登录响应消息在参数集合中同时具有 wresult 和 wresultptr 参数。 （合法的登录答案信息的 wa 参数与“wsignin1.0”等效，wsiesult 与 wresultptr 参数也等效，但这两组等效参数不可同时发生。）</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromUri">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Services.WSFederationMessage CreateFromUri (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IdentityModel.Services.WSFederationMessage CreateFromUri(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationMessage.CreateFromUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromUri (requestUri As Uri) As WSFederationMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IdentityModel::Services::WSFederationMessage ^ CreateFromUri(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="static member CreateFromUri : Uri -&gt; System.IdentityModel.Services.WSFederationMessage" Usage="System.IdentityModel.Services.WSFederationMessage.CreateFromUri requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.WSFederationMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">从其创建消息的 URI。 指定于查询字符串的消息参数。 wa 参数必须存在。</param>
        <summary>从指定的 URI 中创建一条 WS-Federation 消息。 参数假定在查询字符串中指定。</summary>
        <returns>已创建的消息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回正确地实现<xref:System.IdentityModel.Services.WSFederationMessage>根据 wa 参数在查询字符串中; 例如，如果 wa 参数为"wsignout1.0"则<xref:System.IdentityModel.Services.SignOutRequestMessage>返回对象。  
  
 具体取决于参数查询字符串中提供的值和组合可能会引发其他异常。  
  
 调用<xref:System.IdentityModel.Services.WSFederationMessage.TryCreateFromUri%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="requestUri" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.IdentityModel.Services.WSFederationMessageException">不能从指定的 URI 中创建消息。</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationMessage.TryCreateFromUri(System.Uri,System.IdentityModel.Services.WSFederationMessage@)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public string Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Encoding" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationMessage.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Encoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : string with get, set" Usage="System.IdentityModel.Services.WSFederationMessage.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置消息的 wencoding 参数。</summary>
        <value>Wencoding 参数的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定要用于任何 XML 的编码样式嵌入消息中。 Wencoding 参数是可选的。 设置<xref:System.IdentityModel.Services.WSFederationMessage.Encoding%2A>属性`null`或一个空字符串，以从消息中删除 wencoding 参数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateFromUri">
      <MemberSignature Language="C#" Value="public static bool TryCreateFromUri (Uri requestUri, out System.IdentityModel.Services.WSFederationMessage fedMsg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreateFromUri(class System.Uri requestUri, [out] class System.IdentityModel.Services.WSFederationMessage&amp; fedMsg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationMessage.TryCreateFromUri(System.Uri,System.IdentityModel.Services.WSFederationMessage@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreateFromUri (requestUri As Uri, ByRef fedMsg As WSFederationMessage) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreateFromUri(Uri ^ requestUri, [Runtime::InteropServices::Out] System::IdentityModel::Services::WSFederationMessage ^ % fedMsg);" />
      <MemberSignature Language="F#" Value="static member TryCreateFromUri : Uri *  -&gt; bool" Usage="System.IdentityModel.Services.WSFederationMessage.TryCreateFromUri (requestUri, fedMsg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="fedMsg" Type="System.IdentityModel.Services.WSFederationMessage&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="requestUri">从其创建消息的 URI。 指定于查询字符串的消息参数。 wa 参数必须存在。</param>
        <param name="fedMsg">当此方法返回时，如果无法创建消息，则包含创建的消息或 <see langword="null" />。 该参数未经初始化即被处理。</param>
        <summary>尝试从指定的 URI 中创建一个 WS-Federation 消息。 参数被假定为查询字符串。</summary>
        <returns>如果成功创建了消息，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果可以创建一条消息，该方法返回正确地实现<xref:System.IdentityModel.Services.WSFederationMessage>根据 wa 参数在查询字符串中; 例如，如果 wa 参数为"wsignout1.0"则<xref:System.IdentityModel.Services.SignOutRequestMessage>返回对象。  
  
 调用<xref:System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="requestUri" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
  </Members>
</Type>