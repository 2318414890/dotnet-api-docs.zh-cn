<Type Name="MetaColumn" FullName="System.Web.DynamicData.MetaColumn">
  <TypeSignature Language="C#" Value="public class MetaColumn : System.Web.DynamicData.IFieldFormattingOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaColumn extends System.Object implements class System.Web.DynamicData.IFieldFormattingOptions" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaColumn&#xA;Implements IFieldFormattingOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaColumn : System::Web::DynamicData::IFieldFormattingOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFieldFormattingOptions</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="55ee5-101">表示动态数据使用的数据库列。</span><span class="sxs-lookup"><span data-stu-id="55ee5-101">Represents a database column that is used by Dynamic Data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55ee5-102">ASP.NET 动态数据应用程序中<xref:System.Web.DynamicData.MetaColumn>类表示数据库字段。</span><span class="sxs-lookup"><span data-stu-id="55ee5-102">In ASP.NET Dynamic Data applications, the <xref:System.Web.DynamicData.MetaColumn> class represents a database field.</span></span> <span data-ttu-id="55ee5-103"><xref:System.Web.DynamicData.MetaColumn>类，可检索有关如类型和元数据信息的数据字段的信息。</span><span class="sxs-lookup"><span data-stu-id="55ee5-103">The <xref:System.Web.DynamicData.MetaColumn> class lets you retrieve information about the data field such as type and metadata information.</span></span>  
  
 <span data-ttu-id="55ee5-104">你可以检索的表的数据字段属于使用<xref:System.Web.DynamicData.MetaColumn.Table%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="55ee5-104">You can retrieve the table that the data field belongs to by using the <xref:System.Web.DynamicData.MetaColumn.Table%2A> property.</span></span> <span data-ttu-id="55ee5-105">您还可以通过使用来检索数据模型<xref:System.Web.DynamicData.MetaColumn.Model%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="55ee5-105">You can also retrieve the data model by using the <xref:System.Web.DynamicData.MetaColumn.Model%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.MetaChildrenColumn" />
    <altmember cref="T:System.Web.DynamicData.MetaForeignKeyColumn" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaColumn (System.Web.DynamicData.MetaTable table, System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.DynamicData.MetaTable table, class System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaColumn(System::Web::DynamicData::MetaTable ^ table, System::Web::DynamicData::ModelProviders::ColumnProvider ^ columnProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" />
        <Parameter Name="columnProvider" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="55ee5-106">包含列的元表。</span><span class="sxs-lookup"><span data-stu-id="55ee5-106">The meta table that contains the column.</span></span></param>
        <param name="columnProvider"><span data-ttu-id="55ee5-107">列提供程序。</span><span class="sxs-lookup"><span data-stu-id="55ee5-107">The column provider.</span></span></param>
        <summary><span data-ttu-id="55ee5-108">初始化 <see cref="T:System.Web.DynamicData.MetaColumn" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="55ee5-108">Initializes a new instance of the <see cref="T:System.Web.DynamicData.MetaColumn" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowInitialValue">
      <MemberSignature Language="C#" Value="public bool AllowInitialValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowInitialValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.AllowInitialValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowInitialValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowInitialValue { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.AllowInitialValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-109">获取或设置一个值，该值指定某个列是否允许插入值。</span><span class="sxs-lookup"><span data-stu-id="55ee5-109">Gets or sets a value that specifies whether a column enables a value to be inserted.</span></span></summary>
        <value>
          <span data-ttu-id="55ee5-110">如果列允许插入值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="55ee5-110"><see langword="true" /> if the column enables a value to be inserted; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55ee5-111">默认值是`false`列时是只读的和`true`时列不是只读的。</span><span class="sxs-lookup"><span data-stu-id="55ee5-111">The default value is `false` when the column is read-only and `true` when the column is not read-only.</span></span> <span data-ttu-id="55ee5-112">默认值可以通过重写<xref:System.ComponentModel.DataAnnotations.EditableAttribute>属性。</span><span class="sxs-lookup"><span data-stu-id="55ee5-112">The default value can be overridden by using the <xref:System.ComponentModel.DataAnnotations.EditableAttribute> attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public bool ApplyFormatInEditMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyFormatInEditMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.ApplyFormatInEditMode</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.ApplyFormatInEditMode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-113">获取一个值，该值指示当包含 <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> 对象表示的数据字段的数据绑定控件处于编辑模式时，<see cref="T:System.Web.DynamicData.MetaColumn" /> 属性指定的格式设置字符串是否应用于字段值。</span><span class="sxs-lookup"><span data-stu-id="55ee5-113">Gets a value that indicates whether the formatting string specified by the <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> property is applied to field values when the data-bound control that contains the data field that is represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object is in edit mode.</span></span></summary>
        <value>
          <span data-ttu-id="55ee5-114">如果当包含 <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> 对象表示的数据字段的数据绑定控件处于编辑模式时，<see cref="T:System.Web.DynamicData.MetaColumn" /> 属性指定的格式设置字符串应用于字段值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="55ee5-114"><see langword="true" /> if the formatting string specified by the <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> property is applied to field values when the data-bound control that contains the data field that is represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object is in edit mode; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55ee5-115"><xref:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode%2A>属性进行验证，如果<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>特性应用于数据字段，并检索的值<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="55ee5-115">The <xref:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="55ee5-116">如果<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>找不到属性，此属性进行验证，如果<xref:System.ComponentModel.DataAnnotations.DataTypeAttribute>特性应用检索格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="55ee5-116">If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Attributes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-117">获取应用于 <see cref="T:System.Web.DynamicData.MetaColumn" /> 对象表示的数据字段的元数据特性的集合。</span><span class="sxs-lookup"><span data-stu-id="55ee5-117">Gets the collection of metadata attributes that apply to the data field represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span></span></summary>
        <value><span data-ttu-id="55ee5-118">应用于 <see cref="T:System.Web.DynamicData.MetaColumn" /> 对象表示的数据字段的元数据特性的集合。</span><span class="sxs-lookup"><span data-stu-id="55ee5-118">The collection of metadata attributes that apply to the data field represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildAttributeCollection">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.AttributeCollection BuildAttributeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.AttributeCollection BuildAttributeCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.BuildAttributeCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BuildAttributeCollection () As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::AttributeCollection ^ BuildAttributeCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="55ee5-119">获取特性集合。</span><span class="sxs-lookup"><span data-stu-id="55ee5-119">Gets the attribute collection.</span></span></summary>
        <returns><span data-ttu-id="55ee5-120">特性集合。</span><span class="sxs-lookup"><span data-stu-id="55ee5-120">The attribute collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55ee5-121">必须调用<xref:System.Web.DynamicData.MetaColumn.BuildAttributeCollection%2A>方法之前你访问<xref:System.Web.DynamicData.MetaColumn.Attributes%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="55ee5-121">You must call the <xref:System.Web.DynamicData.MetaColumn.BuildAttributeCollection%2A> method before you access the <xref:System.Web.DynamicData.MetaColumn.Attributes%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnType">
      <MemberSignature Language="C#" Value="public Type ColumnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ColumnType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.ColumnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ColumnType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.ColumnType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-122">获取数据字段类型。</span><span class="sxs-lookup"><span data-stu-id="55ee5-122">Gets the data field type.</span></span></summary>
        <value><span data-ttu-id="55ee5-123">数据字段类型。</span><span class="sxs-lookup"><span data-stu-id="55ee5-123">The data field type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55ee5-124"><xref:System.Web.DynamicData.MetaColumn.ColumnType%2A>属性返回的数据字段的公共语言运行时 (CLR) 类型。</span><span class="sxs-lookup"><span data-stu-id="55ee5-124">The <xref:System.Web.DynamicData.MetaColumn.ColumnType%2A> property returns the common language runtime (CLR) type of the data field.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public bool ConvertEmptyStringToNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertEmptyStringToNull { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.ConvertEmptyStringToNull</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.ConvertEmptyStringToNull</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-125">获取一个值，该值指示在数据源中更新数据字段时是否将空字符串值 ("") 自动转换为 <see langword="null" /> 值。</span><span class="sxs-lookup"><span data-stu-id="55ee5-125">Gets a value that indicates whether empty string values ("") are automatically converted to <see langword="null" /> values when the data field is updated in the data source.</span></span></summary>
        <value>
          <span data-ttu-id="55ee5-126">如果在数据源中更新数据字段时，将空字符串值自动转换为 <see langword="true" /> 值，则为 <see langword="null" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="55ee5-126"><see langword="true" /> if empty string values are automatically converted to <see langword="null" /> values when the data field is updated in the data source; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55ee5-127"><xref:System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull%2A>属性进行验证，如果<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>特性应用于数据字段，并检索的值<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="55ee5-127">The <xref:System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="55ee5-128">如果<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>找不到属性，此属性进行验证，如果<xref:System.ComponentModel.DataAnnotations.DataTypeAttribute>特性应用检索格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="55ee5-128">If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public string DataFormatString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataFormatString { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.DataFormatString</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.DataFormatString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-129">获取指定字段值的显示格式的字符串。</span><span class="sxs-lookup"><span data-stu-id="55ee5-129">Gets the string that specifies the display format for the field value.</span></span></summary>
        <value><span data-ttu-id="55ee5-130">指定字段值的显示格式的字符串。</span><span class="sxs-lookup"><span data-stu-id="55ee5-130">The string that specifies the display format for the field value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55ee5-131"><xref:System.Web.DynamicData.MetaColumn.DataFormatString%2A>属性进行验证，如果<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>特性应用于数据字段，并检索的值<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="55ee5-131">The <xref:System.Web.DynamicData.MetaColumn.DataFormatString%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="55ee5-132">如果<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>找不到属性，此属性进行验证，如果<xref:System.ComponentModel.DataAnnotations.DataTypeAttribute>特性应用检索格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="55ee5-132">If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode" />
      </Docs>
    </Member>
    <Member MemberName="DataTypeAttribute">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DataAnnotations.DataTypeAttribute DataTypeAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.DataAnnotations.DataTypeAttribute DataTypeAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.DataTypeAttribute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataTypeAttribute As DataTypeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DataAnnotations::DataTypeAttribute ^ DataTypeAttribute { System::ComponentModel::DataAnnotations::DataTypeAttribute ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.DataTypeAttribute</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DataAnnotations.DataTypeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-133">获取应用于数据字段的 <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> 特性。</span><span class="sxs-lookup"><span data-stu-id="55ee5-133">Gets the <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> attribute that is applied to the data field.</span></span></summary>
        <value><span data-ttu-id="55ee5-134">应用于数据字段的 <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> 特性。</span><span class="sxs-lookup"><span data-stu-id="55ee5-134">The <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> attribute that is applied to the data field.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public object DefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.DefaultValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-135">获取数据字段的默认值。</span><span class="sxs-lookup"><span data-stu-id="55ee5-135">Gets the default value for the data field.</span></span></summary>
        <value><span data-ttu-id="55ee5-136">数据字段的默认值。</span><span class="sxs-lookup"><span data-stu-id="55ee5-136">The default value for the data field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55ee5-137"><xref:System.Web.DynamicData.MetaColumn.DefaultValue%2A>属性通常用于预先填充的字段值时创建新项。</span><span class="sxs-lookup"><span data-stu-id="55ee5-137">The <xref:System.Web.DynamicData.MetaColumn.DefaultValue%2A> property is typically used to pre-populate the field value when a new entry is created.</span></span> <span data-ttu-id="55ee5-138">此属性进行验证，如果<xref:System.ComponentModel.DefaultValueAttribute>特性应用于数据字段，并检索的值<xref:System.ComponentModel.DefaultValueAttribute.Value%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="55ee5-138">This property verifies if a <xref:System.ComponentModel.DefaultValueAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DefaultValueAttribute.Value%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DefaultValueAttribute" />
        <altmember cref="P:System.ComponentModel.DefaultValueAttribute.Value" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Description</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-139">获取数据字段的说明。</span><span class="sxs-lookup"><span data-stu-id="55ee5-139">Gets the description for the data field.</span></span></summary>
        <value><span data-ttu-id="55ee5-140">数据字段的说明。</span><span class="sxs-lookup"><span data-stu-id="55ee5-140">The description for the data field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55ee5-141"><xref:System.Web.DynamicData.MetaColumn.Description%2A>属性进行验证，如果<xref:System.ComponentModel.DescriptionAttribute>特性应用于数据字段，并检索的值<xref:System.ComponentModel.DescriptionAttribute.Description%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="55ee5-141">The <xref:System.Web.DynamicData.MetaColumn.Description%2A> property verifies if a <xref:System.ComponentModel.DescriptionAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DescriptionAttribute.Description%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DescriptionAttribute" />
        <altmember cref="P:System.ComponentModel.DescriptionAttribute.Description" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.DisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-142">获取数据字段的显示名称。</span><span class="sxs-lookup"><span data-stu-id="55ee5-142">Gets the display name for the data field.</span></span></summary>
        <value><span data-ttu-id="55ee5-143">数据字段的显示名称。</span><span class="sxs-lookup"><span data-stu-id="55ee5-143">The display name for the data field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55ee5-144"><xref:System.Web.DynamicData.MetaColumn.DisplayName%2A>属性返回已设置完毕，如果数据字段的友好显示名称或字段名称，如果没有显示名称已指定。</span><span class="sxs-lookup"><span data-stu-id="55ee5-144">The <xref:System.Web.DynamicData.MetaColumn.DisplayName%2A> property returns the friendly display name for the data field if one has been set, or the field name if no display name has been specified.</span></span> <span data-ttu-id="55ee5-145"><xref:System.Web.DynamicData.MetaColumn.DisplayName%2A>属性进行验证，是否已通过检查设置的友好显示名称<xref:System.ComponentModel.DisplayNameAttribute>属性应用于数据字段。</span><span class="sxs-lookup"><span data-stu-id="55ee5-145">The <xref:System.Web.DynamicData.MetaColumn.DisplayName%2A> property verifies if a friendly display name has been set by checking if a <xref:System.ComponentModel.DisplayNameAttribute> attribute is applied to the data field.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DisplayNameAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EntityTypeProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo EntityTypeProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.PropertyInfo EntityTypeProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.EntityTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityTypeProperty As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::PropertyInfo ^ EntityTypeProperty { System::Reflection::PropertyInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.EntityTypeProperty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-146">获取一个对象，该对象包含表示实体类型的数据字段的属性的特性。</span><span class="sxs-lookup"><span data-stu-id="55ee5-146">Gets an object that contains attributes of the property that represents the data field in the entity type.</span></span></summary>
        <value><span data-ttu-id="55ee5-147">一个对象，该对象包含表示实体类型的数据字段的属性的特性。</span><span class="sxs-lookup"><span data-stu-id="55ee5-147">An object that contains attributes of the property that represents the data field in the entity type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterUIHint">
      <MemberSignature Language="C#" Value="public string FilterUIHint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterUIHint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.FilterUIHint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterUIHint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterUIHint { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.FilterUIHint</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-148">获取用于列的 <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> 值。</span><span class="sxs-lookup"><span data-stu-id="55ee5-148">Gets the <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> value that is used for the column.</span></span></summary>
        <value><span data-ttu-id="55ee5-149">用于列的 <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> 值。</span><span class="sxs-lookup"><span data-stu-id="55ee5-149">The <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> value that is used for the column.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public bool HtmlEncode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HtmlEncode { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.HtmlEncode</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.HtmlEncode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-150">获取一个值，该值指示在数据绑定控件中显示字段值之前，这些字段值是否经过 HTML 编码。</span><span class="sxs-lookup"><span data-stu-id="55ee5-150">Gets a value that indicates whether field values are HTML-encoded before they are displayed in a data-bound control.</span></span></summary>
        <value>
          <span data-ttu-id="55ee5-151">在所有情况下均为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="55ee5-151"><see langword="true" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="55ee5-152">初始化调用构造函数后可能不可用的数据。</span><span class="sxs-lookup"><span data-stu-id="55ee5-152">Initializes data that might not be available when the constructor is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55ee5-153">不能直接调用此方法。</span><span class="sxs-lookup"><span data-stu-id="55ee5-153">This method cannot be called directly.</span></span> <span data-ttu-id="55ee5-154">要自定义初始化，你可以从此类派生，并重写`Initialize`方法。</span><span class="sxs-lookup"><span data-stu-id="55ee5-154">To customize initialization, you can derive from this class and override the `Initialize` method.</span></span> <span data-ttu-id="55ee5-155">如果你重写此方法，调用基控件`Initialize`方法。</span><span class="sxs-lookup"><span data-stu-id="55ee5-155">If you override this method, call the base control's `Initialize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBinaryData">
      <MemberSignature Language="C#" Value="public bool IsBinaryData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBinaryData" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsBinaryData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBinaryData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBinaryData { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsBinaryData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-156">获取一个值，该值指示数据字段是否包含二进制数据。</span><span class="sxs-lookup"><span data-stu-id="55ee5-156">Gets a value that indicates whether the data field contains binary data.</span></span></summary>
        <value>
          <span data-ttu-id="55ee5-157">如果数据字段包含二进制数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="55ee5-157"><see langword="true" /> if the data field contains binary data; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsInteger" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsString" />
      </Docs>
    </Member>
    <Member MemberName="IsCustomProperty">
      <MemberSignature Language="C#" Value="public bool IsCustomProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCustomProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsCustomProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCustomProperty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCustomProperty { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsCustomProperty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-158">获取一个值，该值指示数据库中是否存在数据字段。</span><span class="sxs-lookup"><span data-stu-id="55ee5-158">Gets a value that indicates whether the data field exists in the database.</span></span></summary>
        <value>
          <span data-ttu-id="55ee5-159">如果数据库中不存在数据字段，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="55ee5-159"><see langword="true" /> if the data field does not exist in the database; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55ee5-160">使用<xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A>属性来确定数据字段是否在数据库中，或者如果它是额外属性已添加到数据上下文对象。</span><span class="sxs-lookup"><span data-stu-id="55ee5-160">Use the <xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A> property to determine whether a data field is in the database or if it is an extra property that was added to the data context object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFloatingPoint">
      <MemberSignature Language="C#" Value="public bool IsFloatingPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFloatingPoint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFloatingPoint As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFloatingPoint { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsFloatingPoint</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-161">获取一个值，该值指示数据字段是否为浮点型。</span><span class="sxs-lookup"><span data-stu-id="55ee5-161">Gets a value that indicates whether the data field is a floating-point type.</span></span></summary>
        <value>
          <span data-ttu-id="55ee5-162">如果数据字段是浮点型，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="55ee5-162"><see langword="true" /> if the data field is a floating-point type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55ee5-163">类型`float`， `double`，和`decimal`浮点类型。</span><span class="sxs-lookup"><span data-stu-id="55ee5-163">The types `float`, `double`, and `decimal` are floating point types.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsBinaryData" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsInteger" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsString" />
      </Docs>
    </Member>
    <Member MemberName="IsForeignKeyComponent">
      <MemberSignature Language="C#" Value="public bool IsForeignKeyComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsForeignKeyComponent" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsForeignKeyComponent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsForeignKeyComponent { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsForeignKeyComponent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-164">获取一个值，该值指示数据字段是否为外键的一部分。</span><span class="sxs-lookup"><span data-stu-id="55ee5-164">Gets a value that indicates whether the data field is part of a foreign key.</span></span></summary>
        <value>
          <span data-ttu-id="55ee5-165">如果数据字段是外键的一部分，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="55ee5-165"><see langword="true" /> if the data field is part of a foreign key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsPrimaryKey" />
      </Docs>
    </Member>
    <Member MemberName="IsGenerated">
      <MemberSignature Language="C#" Value="public bool IsGenerated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsGenerated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsGenerated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsGenerated { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsGenerated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-166">获取一个值，该值指示是否在数据库中自动生成数据字段值。</span><span class="sxs-lookup"><span data-stu-id="55ee5-166">Gets a value that indicates whether the data field value is automatically generated in the database.</span></span></summary>
        <value>
          <span data-ttu-id="55ee5-167">如果在数据库中自动生成数据字段值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="55ee5-167"><see langword="true" /> if the data field value is automatically generated in the database; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInteger">
      <MemberSignature Language="C#" Value="public bool IsInteger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInteger" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsInteger" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInteger As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInteger { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsInteger</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-168">获取一个值，该值指示数据字段类型是否为 integer 类型。</span><span class="sxs-lookup"><span data-stu-id="55ee5-168">Gets a value that indicates whether the data field type is an integer type.</span></span></summary>
        <value>
          <span data-ttu-id="55ee5-169">如果数据字段类型是 integer 类型，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="55ee5-169"><see langword="true" /> if the data field type is an integer type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55ee5-170">类型`byte`， `short`， `int`，和`long`是整数类型。</span><span class="sxs-lookup"><span data-stu-id="55ee5-170">The types `byte`, `short`, `int`, and `long` are integer types.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsBinaryData" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsString" />
      </Docs>
    </Member>
    <Member MemberName="IsLongString">
      <MemberSignature Language="C#" Value="public bool IsLongString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLongString" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsLongString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLongString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLongString { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsLongString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-171">获取一个值，该值指示数据字段类型是否可包含 long 字符串。</span><span class="sxs-lookup"><span data-stu-id="55ee5-171">Gets a value that indicates whether the data field type can contain long strings.</span></span></summary>
        <value>
          <span data-ttu-id="55ee5-172">如果数据字段类型可包含 long 字符串，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="55ee5-172"><see langword="true" /> if the data field type can contain long strings; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55ee5-173">SQL 类型`text`， `ntext`， `varchar`，和`nvarchar`可以包含长字符串。</span><span class="sxs-lookup"><span data-stu-id="55ee5-173">The SQL types `text`, `ntext`, `varchar`, and `nvarchar` can contain long strings.</span></span> <span data-ttu-id="55ee5-174">值<xref:System.Web.DynamicData.MetaColumn.IsLongString%2A>属性用于确定是否显示文本框中或 TextArea 字段模板以使用户能够修改字段值。</span><span class="sxs-lookup"><span data-stu-id="55ee5-174">The value of the <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> property is used to determine whether the TextBox or TextArea field template is displayed to enable users to modify the field value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsString" />
      </Docs>
    </Member>
    <Member MemberName="IsPrimaryKey">
      <MemberSignature Language="C#" Value="public bool IsPrimaryKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrimaryKey { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsPrimaryKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-175">获取一个值，该值指示数据字段是否为表的主键的一部分。</span><span class="sxs-lookup"><span data-stu-id="55ee5-175">Gets a value that indicates whether the data field is part of the table's primary key.</span></span></summary>
        <value>
          <span data-ttu-id="55ee5-176">如果数据字段是表的主键的一部分，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="55ee5-176"><see langword="true" /> if the data field is part of the table's primary key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-177">获取一个值，该值指示数据字段是否为只读。</span><span class="sxs-lookup"><span data-stu-id="55ee5-177">Gets a value that indicates whether the data field is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="55ee5-178">如果该数据字段为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="55ee5-178"><see langword="true" /> if the data field is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequired">
      <MemberSignature Language="C#" Value="public bool IsRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRequired" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRequired { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsRequired</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-179">获取一个值，该值指示数据字段是否需要值。</span><span class="sxs-lookup"><span data-stu-id="55ee5-179">Gets a value that indicates whether the data field requires a value.</span></span></summary>
        <value>
          <span data-ttu-id="55ee5-180">如果数据字段需要值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="55ee5-180"><see langword="true" /> if the data field requires a value; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55ee5-181"><xref:System.Web.DynamicData.MetaColumn.Description%2A>属性进行验证，如果<xref:System.ComponentModel.DataAnnotations.RequiredAttribute>属性应用于数据字段，或如果数据库架构包含数据有关的信息字段正在数据库中的需要来确定数据字段是否需要一个值。</span><span class="sxs-lookup"><span data-stu-id="55ee5-181">The <xref:System.Web.DynamicData.MetaColumn.Description%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> attribute is applied to the data field or if the database schema contains information about the data field being required in the database to determine whether the data field requires a value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" />
        <altmember cref="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Nullable" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.RequiredErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="IsString">
      <MemberSignature Language="C#" Value="public bool IsString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsString" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsString { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-182">获取一个值，该值指示数据字段类型是否为 string 类型。</span><span class="sxs-lookup"><span data-stu-id="55ee5-182">Gets a value that indicates whether the data field type is a string type.</span></span></summary>
        <value>
          <span data-ttu-id="55ee5-183">如果数据字段类型是 string 类型，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="55ee5-183"><see langword="true" /> if the data field type is a string type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsLongString" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsBinaryData" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsInteger" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.MaxLength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-184">获取一个值，该值指示可在数据字段中存储的数据的最大长度。</span><span class="sxs-lookup"><span data-stu-id="55ee5-184">Gets a value that indicates the maximum length of data that can be stored in the data field.</span></span></summary>
        <value><span data-ttu-id="55ee5-185">可在数据字段中存储的数据的最大长度。</span><span class="sxs-lookup"><span data-stu-id="55ee5-185">The maximum length of data that can be stored in the data field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55ee5-186"><xref:System.Web.DynamicData.MetaColumn.MaxLength%2A>属性进行验证，如果<xref:System.ComponentModel.DataAnnotations.StringLengthAttribute>特性应用于数据字段，并检索的值<xref:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="55ee5-186">The <xref:System.Web.DynamicData.MetaColumn.MaxLength%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength%2A> property.</span></span> <span data-ttu-id="55ee5-187">如果<xref:System.ComponentModel.DataAnnotations.StringLengthAttribute>特性未应用于数据字段中，<xref:System.Web.DynamicData.MetaColumn.MaxLength%2A>属性使用的数据库类型来检索允许的最大长度。</span><span class="sxs-lookup"><span data-stu-id="55ee5-187">If a <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> attribute is not applied to the data field, the <xref:System.Web.DynamicData.MetaColumn.MaxLength%2A> property uses the database type to retrieve the maximum length allowed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.StringLengthAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength" />
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaModel Model" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaModel ^ Model { System::Web::DynamicData::MetaModel ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-188">获取 <see cref="T:System.Web.DynamicData.MetaModel" /> 对象，该对象表示此数据字段所属的数据模型。</span><span class="sxs-lookup"><span data-stu-id="55ee5-188">Gets the <see cref="T:System.Web.DynamicData.MetaModel" /> object that represents the data model that this data field belongs to.</span></span></summary>
        <value><span data-ttu-id="55ee5-189">一个对象，该对象表示此数据字段所属的数据模型。</span><span class="sxs-lookup"><span data-stu-id="55ee5-189">An object that represents the data model that this data field belongs to.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.DynamicData.MetaModel" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.Table" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-190">获取数据字段的名称。</span><span class="sxs-lookup"><span data-stu-id="55ee5-190">Gets the name of the data field.</span></span></summary>
        <value><span data-ttu-id="55ee5-191">数据字段的名称。</span><span class="sxs-lookup"><span data-stu-id="55ee5-191">The name of the data field.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public string NullDisplayText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NullDisplayText { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.NullDisplayText</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.NullDisplayText</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-192">获取当字段值为 <see langword="null" /> 时，该字段显示的标题。</span><span class="sxs-lookup"><span data-stu-id="55ee5-192">Gets the caption that is displayed for a field when the field's value is <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="55ee5-193">当字段值为 <see langword="null" /> 时，该字段显示的标题。</span><span class="sxs-lookup"><span data-stu-id="55ee5-193">The caption that is displayed for a field when the field's value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55ee5-194"><xref:System.Web.DynamicData.MetaColumn.NullDisplayText%2A>属性进行验证，如果<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>特性应用于数据字段，并检索的值<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="55ee5-194">The <xref:System.Web.DynamicData.MetaColumn.NullDisplayText%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="55ee5-195">如果<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>找不到属性，此属性进行验证，如果<xref:System.ComponentModel.DataAnnotations.DataTypeAttribute>特性应用检索格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="55ee5-195">If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Prompt">
      <MemberSignature Language="C#" Value="public virtual string Prompt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prompt" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Prompt" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Prompt As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prompt { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Prompt</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-196">获取可以在绑定到列中数据的 UI 中用作水印的值。</span><span class="sxs-lookup"><span data-stu-id="55ee5-196">Gets a value that can be used as a watermark in the UI that is bound to data in the column.</span></span></summary>
        <value><span data-ttu-id="55ee5-197">可以在绑定到列中数据的 UI 中用作水印的值。</span><span class="sxs-lookup"><span data-stu-id="55ee5-197">A value that can be used as a watermark in the UI that is bound to data in the column.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55ee5-198">A`null`或可以返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="55ee5-198">A `null` or empty string can be returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55ee5-199">设置此属性<xref:System.ComponentModel.DataAnnotations.DisplayAttribute>元数据实体类中的列的定义中的属性。</span><span class="sxs-lookup"><span data-stu-id="55ee5-199">This property is set by the <xref:System.ComponentModel.DataAnnotations.DisplayAttribute> attribute in the column's definition in the meta class for the data entity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.ModelProviders.ColumnProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.ModelProviders.ColumnProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As ColumnProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::ModelProviders::ColumnProvider ^ Provider { System::Web::DynamicData::ModelProviders::ColumnProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.ModelProviders.ColumnProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-200">获取用于生成 <see cref="T:System.Web.DynamicData.MetaColumn" /> 对象的抽象提供程序对象。</span><span class="sxs-lookup"><span data-stu-id="55ee5-200">Gets the abstraction provider object that is used to generate the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span></span></summary>
        <value><span data-ttu-id="55ee5-201">用于生成 <see cref="T:System.Web.DynamicData.MetaColumn" /> 对象的抽象提供程序对象。</span><span class="sxs-lookup"><span data-stu-id="55ee5-201">The abstraction provider object that is used to generate the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Docs>
    </Member>
    <Member MemberName="RequiredErrorMessage">
      <MemberSignature Language="C#" Value="public string RequiredErrorMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.RequiredErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequiredErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequiredErrorMessage { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.RequiredErrorMessage</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-202">获取当数据字段需要值但其值为空时显示的错误消息。</span><span class="sxs-lookup"><span data-stu-id="55ee5-202">Gets the error message that is displayed when the data field requires a value but its value is empty.</span></span></summary>
        <value><span data-ttu-id="55ee5-203">当数据字段需要值但其值为空时显示的错误消息。</span><span class="sxs-lookup"><span data-stu-id="55ee5-203">The error message that is displayed when the data field requires a value but its value is empty.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsRequired" />
      </Docs>
    </Member>
    <Member MemberName="ResetMetadata">
      <MemberSignature Language="C#" Value="public void ResetMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.ResetMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetMetadata ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetMetadata();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaColumn.ResetMetadata</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="55ee5-204">清除缓存的列元数据。</span><span class="sxs-lookup"><span data-stu-id="55ee5-204">Clears cached column metadata.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55ee5-205">列元数据是派生自属性和而缓存的性能的信息。</span><span class="sxs-lookup"><span data-stu-id="55ee5-205">The column metadata is information that is derived from attributes and that is cached for performance.</span></span> <span data-ttu-id="55ee5-206">调用此方法将清除此列的元数据缓存。</span><span class="sxs-lookup"><span data-stu-id="55ee5-206">Calling this method clears the metadata cache for this column.</span></span> <span data-ttu-id="55ee5-207">请求从元数据派生的任何信息的下次重新生成元数据缓存。</span><span class="sxs-lookup"><span data-stu-id="55ee5-207">The metadata cache is rebuilt the next time any information that is derived from metadata is requested.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scaffold">
      <MemberSignature Language="C#" Value="public virtual bool Scaffold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scaffold" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Scaffold" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Scaffold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Scaffold { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Scaffold</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-208">获取一个值，该值指示是否应显示数据字段。</span><span class="sxs-lookup"><span data-stu-id="55ee5-208">Gets a value that indicates whether the data field should be displayed.</span></span></summary>
        <value>
          <span data-ttu-id="55ee5-209">如果应显示数据字段，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="55ee5-209"><see langword="true" /> if the data field should be displayed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55ee5-210"><xref:System.Web.DynamicData.MetaColumn.Scaffold%2A>属性指示由 ASP.NET 动态数据自动生成时是否应显示数据字段。</span><span class="sxs-lookup"><span data-stu-id="55ee5-210">The <xref:System.Web.DynamicData.MetaColumn.Scaffold%2A> property indicates whether a data field should be displayed when it is automatically generated by ASP.NET Dynamic Data.</span></span> <span data-ttu-id="55ee5-211">此属性进行验证，如果<xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute>特性应用于数据字段，并返回的值<xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="55ee5-211">This property verifies if a <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> attribute is applied to the data field and returns the value of the <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="55ee5-212">如果<xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute>特性未应用于数据字段，动态数据使用以下规则来确定是否显示列：</span><span class="sxs-lookup"><span data-stu-id="55ee5-212">If a <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> attribute is not applied to the data field, Dynamic Data uses the following rules to determine whether to display the column:</span></span>  
  
-   <span data-ttu-id="55ee5-213">如果<xref:System.ComponentModel.DataAnnotations.UIHintAttribute>属性应用于数据字段，将显示数据字段。</span><span class="sxs-lookup"><span data-stu-id="55ee5-213">If a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is applied to the data field, the data field is displayed.</span></span> <span data-ttu-id="55ee5-214">此规则将替代所有其他规则。</span><span class="sxs-lookup"><span data-stu-id="55ee5-214">This rule overrides all the other rules.</span></span>  
  
-   <span data-ttu-id="55ee5-215">如果值<xref:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent%2A>属性是`true`，则不显示数据字段。</span><span class="sxs-lookup"><span data-stu-id="55ee5-215">If the value of the <xref:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent%2A> property is `true`, the data field is not displayed.</span></span> <span data-ttu-id="55ee5-216">因为动态数据以不同方式处理外键字段，并且通常不会显示的外键字段值，将发生这种情况。</span><span class="sxs-lookup"><span data-stu-id="55ee5-216">This occurs because Dynamic Data handles foreign-key fields in a different way and will not typically display the foreign-key field value.</span></span>  
  
-   <span data-ttu-id="55ee5-217">如果值<xref:System.Web.DynamicData.MetaColumn.IsGenerated%2A>属性是`true`，则不显示数据字段。</span><span class="sxs-lookup"><span data-stu-id="55ee5-217">If the value of the <xref:System.Web.DynamicData.MetaColumn.IsGenerated%2A> property is `true`, the data field is not displayed.</span></span> <span data-ttu-id="55ee5-218">通常在数据库中自动生成的字段不包含相关信息。</span><span class="sxs-lookup"><span data-stu-id="55ee5-218">Typically fields that are automatically generated in the database do not contain relevant information.</span></span> <span data-ttu-id="55ee5-219">请确保你应用<xref:System.ComponentModel.DataAnnotations.UIHintAttribute>属性的数据字段中，如果必须显示数据字段。</span><span class="sxs-lookup"><span data-stu-id="55ee5-219">Make sure that you apply the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute to the data field, if the data field must be displayed.</span></span>  
  
-   <span data-ttu-id="55ee5-220">如果值<xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A>属性是`true`，则不显示数据字段。</span><span class="sxs-lookup"><span data-stu-id="55ee5-220">If the value of the <xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A> property is `true`, the data field is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsGenerated" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsCustomProperty" />
      </Docs>
    </Member>
    <Member MemberName="ShortDisplayName">
      <MemberSignature Language="C#" Value="public virtual string ShortDisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortDisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.ShortDisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ShortDisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ShortDisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.ShortDisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-221">获取列的短名称。</span><span class="sxs-lookup"><span data-stu-id="55ee5-221">Gets the short name for the column.</span></span></summary>
        <value><span data-ttu-id="55ee5-222">列的短名称。</span><span class="sxs-lookup"><span data-stu-id="55ee5-222">The short name for the column.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55ee5-223">提供此属性是<xref:System.Web.UI.WebControls.GridView>控件和其他控件由于需要短名称的位置列标题空间有限。</span><span class="sxs-lookup"><span data-stu-id="55ee5-223">This property is provided for <xref:System.Web.UI.WebControls.GridView> control and other controls where a short name is needed because of limited column-header space.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortExpression">
      <MemberSignature Language="C#" Value="public string SortExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.SortExpression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortExpression { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.SortExpression</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-224">获取用于确定数据字段的排序顺序的表达式。</span><span class="sxs-lookup"><span data-stu-id="55ee5-224">Gets the expression that is used to determine the sort order for the data field.</span></span></summary>
        <value><span data-ttu-id="55ee5-225">用于确定数据字段的排序顺序的表达式。</span><span class="sxs-lookup"><span data-stu-id="55ee5-225">The expression that is used to determine the sort order for the data field.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaTable ^ Table { System::Web::DynamicData::MetaTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-226">获取 <see cref="T:System.Web.DynamicData.MetaTable" /> 对象，该对象表示数据字段所属的表。</span><span class="sxs-lookup"><span data-stu-id="55ee5-226">Gets the <see cref="T:System.Web.DynamicData.MetaTable" /> object that represents the table that the data field belongs to.</span></span></summary>
        <value><span data-ttu-id="55ee5-227">一个对象，该对象表示数据字段所属的表。</span><span class="sxs-lookup"><span data-stu-id="55ee5-227">An object that represents the table that the data field belongs to.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.Model" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="55ee5-228">获取数据字段名。</span><span class="sxs-lookup"><span data-stu-id="55ee5-228">Gets the data field name.</span></span></summary>
        <returns><span data-ttu-id="55ee5-229">数据字段名，它是列的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="55ee5-229">The data field name, which is the string representation of the column.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeCode">
      <MemberSignature Language="C#" Value="public TypeCode TypeCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TypeCode TypeCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.TypeCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeCode As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TypeCode TypeCode { TypeCode get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.TypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-230">获取数据字段的类型。</span><span class="sxs-lookup"><span data-stu-id="55ee5-230">Gets the type of the data field.</span></span></summary>
        <value><span data-ttu-id="55ee5-231">数据字段的类型。</span><span class="sxs-lookup"><span data-stu-id="55ee5-231">The type of the data field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55ee5-232"><xref:System.Web.DynamicData.MetaColumn.TypeCode%2A>属性值派生自的值<xref:System.Web.DynamicData.MetaColumn.ColumnType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="55ee5-232">The <xref:System.Web.DynamicData.MetaColumn.TypeCode%2A> property value is derived from the value of the <xref:System.Web.DynamicData.MetaColumn.ColumnType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.ColumnType" />
      </Docs>
    </Member>
    <Member MemberName="UIHint">
      <MemberSignature Language="C#" Value="public virtual string UIHint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UIHint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.UIHint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UIHint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UIHint { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.UIHint</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55ee5-233">获取为数据字段指定的字段模板的名称。</span><span class="sxs-lookup"><span data-stu-id="55ee5-233">Gets the name of the field template specified for the data field.</span></span></summary>
        <value><span data-ttu-id="55ee5-234">为数据字段指定的字段模板的名称。</span><span class="sxs-lookup"><span data-stu-id="55ee5-234">The name of the field template specified for the data field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55ee5-235"><xref:System.Web.DynamicData.MetaColumn.UIHint%2A>属性进行验证，如果<xref:System.ComponentModel.DataAnnotations.UIHintAttribute>特性应用于数据字段，并检索的值<xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="55ee5-235">The <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="55ee5-236">如果<xref:System.ComponentModel.DataAnnotations.UIHintAttribute>特性未应用于数据字段中，<xref:System.Web.DynamicData.MetaColumn.UIHint%2A>属性返回一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="55ee5-236">If a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is not applied to the data field, the <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> property returns an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>