<Type Name="MetaTable" FullName="System.Web.DynamicData.MetaTable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b399e4c00d02b856a32921298a4feb2cb0b2203f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MetaTable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaTable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaTable" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaTable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaTable" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b369a-101">表示描述供动态数据页使用的表的元数据。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b369a-101">Represents the metadata that describes a table for use by Dynamic Data pages.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b369a-102">下面的示例摘自 Insert.aspx 页模板的代码隐藏文件。</span><span class="sxs-lookup"><span data-stu-id="b369a-102">The following example is part of the code-behind file for the Insert.aspx page template.</span></span> <span data-ttu-id="b369a-103"><xref:System.Web.DynamicData.MetaTable>中初始化实例`Page_Load`方法。</span><span class="sxs-lookup"><span data-stu-id="b369a-103">The <xref:System.Web.DynamicData.MetaTable> instance is initialized in the `Page_Load` method.</span></span> <span data-ttu-id="b369a-104">页标题设置为表`DisplayName`属性。</span><span class="sxs-lookup"><span data-stu-id="b369a-104">The title for the page is set to the table `DisplayName` property.</span></span>  
  
```csharp  
public partial class Insert : System.Web.UI.Page {  
    protected MetaTable table;     
  
    protected void Page_Load(object sender, EventArgs e) {  
        table = DetailsDataSource.GetTable();  
        Title = table.DisplayName;  
    }  
}  
```  
  
```vb  
Partial Class Insert  
    Inherits System.Web.UI.Page  
  
    Protected table As MetaTable      
  
    Protected Sub Page_Load(ByVal sender As Object, _  
            ByVal e As EventArgs)  
        table = DetailsDataSource.GetTable  
        Title = table.DisplayName  
    End Sub  
End Class  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaTable (System.Web.DynamicData.MetaModel metaModel, System.Web.DynamicData.ModelProviders.TableProvider tableProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.DynamicData.MetaModel metaModel, class System.Web.DynamicData.ModelProviders.TableProvider tableProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaTable(System::Web::DynamicData::MetaModel ^ metaModel, System::Web::DynamicData::ModelProviders::TableProvider ^ tableProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metaModel" Type="System.Web.DynamicData.MetaModel" />
        <Parameter Name="tableProvider" Type="System.Web.DynamicData.ModelProviders.TableProvider" />
      </Parameters>
      <Docs>
        <param name="metaModel">
          <span data-ttu-id="b369a-105">实体元模型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-105">The entity meta model.</span>
          </span>
        </param>
        <param name="tableProvider">
          <span data-ttu-id="b369a-106">实体模型提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-106">The entity model provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-107">初始化 <see cref="T:System.Web.DynamicData.MetaTable" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-107">Initializes a new instance of the <see cref="T:System.Web.DynamicData.MetaTable" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-108">`tableProvider`参数用于初始化<xref:System.Web.DynamicData.MetaTable.DataContextPropertyName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b369a-108">The `tableProvider` parameter is used to initialize the <xref:System.Web.DynamicData.MetaTable.DataContextPropertyName%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.Attributes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b369a-109">获取与表关联的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-109">Gets the attributes that are associated with the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b369a-110">一个包含表特性的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-110">A collection that contains the attributes of the table.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildAttributeCollection">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.AttributeCollection BuildAttributeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.AttributeCollection BuildAttributeCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.BuildAttributeCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BuildAttributeCollection () As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::AttributeCollection ^ BuildAttributeCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b369a-111">创建特性集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-111">Creates the attribute collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-112">特性集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-112">The attribute collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public virtual bool CanDelete (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanDelete(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanDelete(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanDelete (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanDelete(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanDelete(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="b369a-113">用户的安全上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-113">The user's security context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-114">获取一个值，该值指示是否允许指定用户执行删除操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-114">Gets a value that indicates whether the specified user is allowed to perform delete operations.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-115">如果允许用户执行删除操作，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-115">
              <see langword="true" /> if the user is allowed to perform delete operations; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-116">主体对象表示该用户的名义运行代码，它包括该用户的标识和它们属于任何角色的安全上下文。</span><span class="sxs-lookup"><span data-stu-id="b369a-116">A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public virtual bool CanInsert (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanInsert(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanInsert(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanInsert (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanInsert(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanInsert(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="b369a-117">用户的安全上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-117">The user's security context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-118">获取一个值，该值指示是否允许指定用户执行插入操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-118">Gets a value that indicates whether the specified user is allowed to perform insert operations.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-119">如果允许用户执行插入操作，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-119">
              <see langword="true" /> if the user is allowed to perform insert operations; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-120">主体对象表示该用户的名义运行代码，它包括该用户的标识和它们属于任何角色的安全上下文。</span><span class="sxs-lookup"><span data-stu-id="b369a-120">A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public virtual bool CanRead (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanRead(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanRead (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanRead(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="b369a-121">用户的安全上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-121">The user's security context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-122">获取一个值，该值指示是否允许指定用户执行读取操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-122">Gets a value that indicates whether the specified user is allowed to perform read operations.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-123">如果允许用户执行读取操作，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-123">
              <see langword="true" /> if the user is allowed to perform read operations; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-124">主体对象表示该用户的名义运行代码，它包括该用户的标识和它们属于任何角色的安全上下文。</span><span class="sxs-lookup"><span data-stu-id="b369a-124">A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public virtual bool CanUpdate (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanUpdate(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanUpdate(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanUpdate (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanUpdate(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanUpdate(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="b369a-125">用户的安全上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-125">The user's security context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-126">获取一个值，该值指示是否允许指定用户执行更新操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-126">Gets a value that indicates whether the specified user is allowed to perform update operations.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-127">如果允许用户执行更新操作，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-127">
              <see langword="true" /> if the user is allowed to perform update operations; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-128">主体对象表示该用户的名义运行代码，它包括该用户的标识和它们属于任何角色的安全上下文。</span><span class="sxs-lookup"><span data-stu-id="b369a-128">A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt; Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.DynamicData.MetaColumn&gt; Columns" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As ReadOnlyCollection(Of MetaColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ Columns { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b369a-129">获取表的列集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-129">Gets the column collection for the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b369a-130">一个包含表列的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-130">A collection that contains the columns for the table.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b369a-131">下面的示例演示如何使用 <xref:System.Web.DynamicData.MetaTable.Columns%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="b369a-131">The following example shows how to use the <xref:System.Web.DynamicData.MetaTable.Columns%2A> property.</span></span> <span data-ttu-id="b369a-132">在示例中，动态数据页模板已复制到要为 AdventureWorksLT 数据库的 ProductDescription 表中提供自定义显示 \DynamicData\CustomPages\ProductDescriptions 文件夹。</span><span class="sxs-lookup"><span data-stu-id="b369a-132">In the example, the Dynamic Data page templates have been copied to the \DynamicData\CustomPages\ProductDescriptions folder to provide a custom display for the ProductDescription table of the AdventureWorksLT database.</span></span> <span data-ttu-id="b369a-133">Insert.aspx 文件的标记更改为添加`OnDataBound`名为的事件处理程序`DetailsView1_DataBound`。</span><span class="sxs-lookup"><span data-stu-id="b369a-133">The markup of the Insert.aspx file is changed to add an `OnDataBound` event handler named `DetailsView1_DataBound`.</span></span> <span data-ttu-id="b369a-134">事件处理程序中，<xref:System.Web.DynamicData.DynamicDataExtensions.FindMetaTable%2A>方法用于查找元表。</span><span class="sxs-lookup"><span data-stu-id="b369a-134">In the event handler, the <xref:System.Web.DynamicData.DynamicDataExtensions.FindMetaTable%2A> method is used to find the meta table.</span></span> <span data-ttu-id="b369a-135"><xref:System.Web.DynamicData.MetaTable.Columns%2A>属性用于在表中显示的列数。</span><span class="sxs-lookup"><span data-stu-id="b369a-135">The <xref:System.Web.DynamicData.MetaTable.Columns%2A> property is used to display the number of columns in the table.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.DynamicDataExtensions#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicDataExtensions/cs/Insert.aspx.cs#1)]  
[!code-aspx-csharp[System.Web.DynamicData.DynamicDataExtensions#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicDataExtensions/cs/Insert.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildrenColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaChildrenColumn CreateChildrenColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaChildrenColumn CreateChildrenColumn(class System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaChildrenColumn ^ CreateChildrenColumn(System::Web::DynamicData::ModelProviders::ColumnProvider ^ columnProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaChildrenColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnProvider" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Parameters>
      <Docs>
        <param name="columnProvider">
          <span data-ttu-id="b369a-136">列提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-136">The column provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-137">创建一个新的 <see cref="T:System.Web.DynamicData.MetaChildrenColumn" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-137">Creates a new <see cref="T:System.Web.DynamicData.MetaChildrenColumn" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-138">新的子元列对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-138">The new child metacolumn object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-139">可以重写此方法以创建派生的类型。</span><span class="sxs-lookup"><span data-stu-id="b369a-139">This method can be overridden to create a derived type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaColumn CreateColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaColumn CreateColumn(class System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaColumn ^ CreateColumn(System::Web::DynamicData::ModelProviders::ColumnProvider ^ columnProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnProvider" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Parameters>
      <Docs>
        <param name="columnProvider">
          <span data-ttu-id="b369a-140">列提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-140">The column provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-141">创建一个 <see cref="T:System.Web.DynamicData.MetaColumn" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-141">Creates a <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-142">新的元列对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-142">The new metacolumn object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-143">可以重写此方法以创建派生的类型。</span><span class="sxs-lookup"><span data-stu-id="b369a-143">This method can be overridden to create a derived type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="public virtual object CreateContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateContext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateContext () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateContext();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CreateContext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b369a-144">返回表的数据上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-144">Returns the data context for the table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-145">表的数据上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-145">The data context for the table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-146">程序通过调用实例化的新上下文中检索数据上下文<xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="b369a-146">The data context is retrieved from a new context that is instantiated by calling the <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="b369a-147">有关详细信息，请参阅<xref:System.Web.DynamicData.MetaTable?displayProperty=nameWithType>类概述。</span><span class="sxs-lookup"><span data-stu-id="b369a-147">For more information, see the <xref:System.Web.DynamicData.MetaTable?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateForeignKeyColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaForeignKeyColumn CreateForeignKeyColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaForeignKeyColumn CreateForeignKeyColumn(class System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaForeignKeyColumn ^ CreateForeignKeyColumn(System::Web::DynamicData::ModelProviders::ColumnProvider ^ columnProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaForeignKeyColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnProvider" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Parameters>
      <Docs>
        <param name="columnProvider">
          <span data-ttu-id="b369a-148">列提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-148">The column provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-149">创建一个包含外键元数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-149">Creates an object that contains foreign-key metadata.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-150">一个包含外键元数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-150">An object that contains foreign-key metadata.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-151">可以重写此方法以创建派生的类型。</span><span class="sxs-lookup"><span data-stu-id="b369a-151">This method can be overridden to create a derived type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateTable">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b369a-152">创建一个 <see cref="T:System.Web.DynamicData.MetaTable" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-152">Creates a <see cref="T:System.Web.DynamicData.MetaTable" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaTable CreateTable (System.ComponentModel.ICustomTypeDescriptor typeDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaTable CreateTable(class System.ComponentModel.ICustomTypeDescriptor typeDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateTable(System.ComponentModel.ICustomTypeDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTable (typeDescriptor As ICustomTypeDescriptor) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaTable ^ CreateTable(System::ComponentModel::ICustomTypeDescriptor ^ typeDescriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptor" Type="System.ComponentModel.ICustomTypeDescriptor" />
      </Parameters>
      <Docs>
        <param name="typeDescriptor">
          <span data-ttu-id="b369a-153">有关表类型的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-153">Information about the table type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-154">为指定表创建元数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-154">Creates the metadata for the specified table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-155">包含表元数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-155">An object that contains the table metadata.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaTable CreateTable (Type entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaTable CreateTable(class System.Type entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateTable(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTable (entityType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaTable ^ CreateTable(Type ^ entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="entityType">
          <span data-ttu-id="b369a-156">要为其生成元数据的表类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-156">The table type for which to generate metadata.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-157">为指定表创建元数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-157">Creates the metadata for the specified table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-158">包含表元数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-158">An object that contains the table metadata.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContextPropertyName">
      <MemberSignature Language="C#" Value="public string DataContextPropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataContextPropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DataContextPropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataContextPropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataContextPropertyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.DataContextPropertyName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b369a-159">获取表的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-159">Gets the name of the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b369a-160">表的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-160">The name of the table.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-161">名称是通过<xref:System.Web.DynamicData.MetaTable.DataContextType%2A>表所属的对象。</span><span class="sxs-lookup"><span data-stu-id="b369a-161">The name comes from the <xref:System.Web.DynamicData.MetaTable.DataContextType%2A> object that the table belongs to.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContextType">
      <MemberSignature Language="C#" Value="public Type DataContextType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DataContextType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DataContextType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataContextType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DataContextType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.DataContextType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b369a-162">获取与表关联的数据上下文的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-162">Gets the type of the data context that is associated with the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b369a-163">数据上下文的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-163">The type of the data context.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-164">有关详细信息，请参阅<xref:System.Data.Linq.DataContext?displayProperty=nameWithType>类概述。</span><span class="sxs-lookup"><span data-stu-id="b369a-164">For more information, see the <xref:System.Data.Linq.DataContext?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayColumn">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.MetaColumn DisplayColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn DisplayColumn" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DisplayColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayColumn As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::DynamicData::MetaColumn ^ DisplayColumn { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b369a-165">当此表中的项用作外键关系中的父级时，获取用于显示值的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-165">Gets the column that is used to display values when entries in this table are used as parents in foreign-key relationships.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b369a-166">当此表中的项用作外键关系中的父级时，用于显示值的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-166">The column that is used to display values when entries in this table are used as parents in foreign-key relationships.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-167">返回列中处于选定状态，按以下顺序：</span><span class="sxs-lookup"><span data-stu-id="b369a-167">The column that is returned is selected in this order:</span></span>  
  
1.  <span data-ttu-id="b369a-168">使用指定的列<xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute>属性。</span><span class="sxs-lookup"><span data-stu-id="b369a-168">The column that is specified by using the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> attribute.</span></span>  
  
2.  <span data-ttu-id="b369a-169">第一个字符串不是主键中的列。</span><span class="sxs-lookup"><span data-stu-id="b369a-169">The first string column that is not in the primary key.</span></span>  
  
3.  <span data-ttu-id="b369a-170">第一个字符串中的主键的列。</span><span class="sxs-lookup"><span data-stu-id="b369a-170">The first string column that is in the primary key.</span></span>  
  
4.  <span data-ttu-id="b369a-171">在主键的第一个非字符串列。</span><span class="sxs-lookup"><span data-stu-id="b369a-171">The first non-string column that is in the primary key.</span></span>  
  
5.  <span data-ttu-id="b369a-172">第一列。</span><span class="sxs-lookup"><span data-stu-id="b369a-172">The first column.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.DisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b369a-173">获取用户友好格式的表的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-173">Gets the name of the table in a user-friendly format.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b369a-174">表示表的用户友好名称的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-174">The string that represents the user-friendly name of the table.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-175">此属性的值默认为的值<xref:System.Web.DynamicData.MetaTable.Name%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b369a-175">The value of this property defaults to the value of the <xref:System.Web.DynamicData.MetaTable.Name%2A> property.</span></span> <span data-ttu-id="b369a-176">你可以使用自定义此属性的值<xref:System.ComponentModel.DisplayNameAttribute?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="b369a-176">You can customize the value of this property by using the <xref:System.ComponentModel.DisplayNameAttribute?displayProperty=nameWithType> attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityType">
      <MemberSignature Language="C#" Value="public Type EntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EntityType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.EntityType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ EntityType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.EntityType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b369a-177">获取表示表的实体类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-177">Gets the entity type that represents the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b369a-178">表示实体的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-178">The type that represents the entity.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyColumnsNames">
      <MemberSignature Language="C#" Value="public string ForeignKeyColumnsNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ForeignKeyColumnsNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForeignKeyColumnsNames As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ForeignKeyColumnsNames { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.ForeignKeyColumnsNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b369a-179">获取一个以逗号分隔的外键名称列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-179">Gets a comma-separated list of foreign-key names.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b369a-180">一个以逗号分隔的外键名称列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-180">A comma-separated list of foreign-key names.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetActionPath">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b369a-181">获取指定行的操作路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-181">Gets the action path for the specified row.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-182">操作路径是特定实体的一项操作的 URL。</span><span class="sxs-lookup"><span data-stu-id="b369a-182">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="b369a-183">有关详细信息，请参阅<xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType>类概述。</span><span class="sxs-lookup"><span data-stu-id="b369a-183">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="b369a-184">操作的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-184">The name of the action.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-185">返回当前表和指定操作的操作路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-185">Returns the action path for the current table and the specified action.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-186">指定操作的操作路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-186">The action path for the specified action.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b369a-187">操作路径是特定实体的一项操作的 URL。</span><span class="sxs-lookup"><span data-stu-id="b369a-187">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="b369a-188">有关详细信息，请参阅<xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType>类概述。</span><span class="sxs-lookup"><span data-stu-id="b369a-188">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, System.Collections.Generic.IList&lt;object&gt; primaryKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, class System.Collections.Generic.IList`1&lt;object&gt; primaryKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, primaryKeyValues As IList(Of Object)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Collections::Generic::IList&lt;System::Object ^&gt; ^ primaryKeyValues);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="primaryKeyValues" Type="System.Collections.Generic.IList&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="b369a-189">操作的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-189">The name of the action.</span>
          </span>
        </param>
        <param name="primaryKeyValues">
          <span data-ttu-id="b369a-190">组成主键的列值的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-190">The list of column values that make up the primary key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-191">返回当前表、指定的操作和指定的主键的操作路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-191">Returns the action path for the current table, specified action, and specified primary key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-192">指定的操作和主键的操作路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-192">The action path for the specified action and primary key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-193">操作路径是特定实体的一项操作的 URL。</span><span class="sxs-lookup"><span data-stu-id="b369a-193">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="b369a-194">有关详细信息，请参阅<xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType>类概述。</span><span class="sxs-lookup"><span data-stu-id="b369a-194">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Object ^ row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="b369a-195">操作的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-195">The name of the action.</span>
          </span>
        </param>
        <param name="row">
          <span data-ttu-id="b369a-196">要获取其操作路径的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-196">The row to get the action path for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-197">使用操作名称返回指定行的操作路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-197">Returns the action path for the specified row by using the name of the action.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-198">指定行的操作路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-198">The action path for the specified row.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-199">操作路径是特定实体的一项操作的 URL。</span><span class="sxs-lookup"><span data-stu-id="b369a-199">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="b369a-200">操作路径包含主键的列名称，可以用于查询字符串筛选器。</span><span class="sxs-lookup"><span data-stu-id="b369a-200">The action path contains the primary-key column names, which can be used for query-string filters.</span></span>  
  
 <span data-ttu-id="b369a-201">有关详细信息，请参阅<xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType>类概述。</span><span class="sxs-lookup"><span data-stu-id="b369a-201">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, routeValues As RouteValueDictionary) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Web::Routing::RouteValueDictionary ^ routeValues);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="b369a-202">操作的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-202">The name of the action.</span>
          </span>
        </param>
        <param name="routeValues">
          <span data-ttu-id="b369a-203">操作的路由列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-203">The list of routes for the action.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-204">返回当前表及指定的操作和路由的操作路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-204">Returns the action path for the current table and for the specified action and routes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-205">指定的操作和路由的操作路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-205">The action path for the specified action and routes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-206">操作路径是特定实体的一项操作的 URL。</span><span class="sxs-lookup"><span data-stu-id="b369a-206">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="b369a-207">有关详细信息，请参阅<xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType>类概述。</span><span class="sxs-lookup"><span data-stu-id="b369a-207">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, System.Collections.Generic.IList&lt;object&gt; primaryKeyValues, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, class System.Collections.Generic.IList`1&lt;object&gt; primaryKeyValues, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, primaryKeyValues As IList(Of Object), path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Collections::Generic::IList&lt;System::Object ^&gt; ^ primaryKeyValues, System::String ^ path);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="primaryKeyValues" Type="System.Collections.Generic.IList&lt;System.Object&gt;" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="b369a-208">操作的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-208">The name of the action.</span>
          </span>
        </param>
        <param name="primaryKeyValues">
          <span data-ttu-id="b369a-209">组成主键的列值的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-209">The list of column values that make up the primary key.</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="b369a-210">操作的虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-210">The virtual path of the action.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-211">基于指定的主键和虚拟路径，向操作路径追加查询字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-211">Appends query strings to the action path, based on the specified primary key and virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-212">指定的主键和虚拟路径的、追加了查询字符串值的操作路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-212">The action path for the specified primary key and virtual path, with query-string values appended to it.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-213">操作路径是特定实体的一项操作的 URL。</span><span class="sxs-lookup"><span data-stu-id="b369a-213">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="b369a-214">有关详细信息，请参阅<xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType>类概述。</span><span class="sxs-lookup"><span data-stu-id="b369a-214">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, object row, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, object row, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, row As Object, path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Object ^ row, System::String ^ path);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="b369a-215">操作的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-215">The name of the action.</span>
          </span>
        </param>
        <param name="row">
          <span data-ttu-id="b369a-216">一个包含操作路径的行的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-216">An object that contains the row for the action path.</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="b369a-217">操作的虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-217">The virtual path of the action.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-218">使用操作名称和操作的虚拟路径返回指定行的操作路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-218">Returns the action path for the specified row by using the name of the action and the virtual path of the action.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-219">指定行的操作路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-219">The action path for the specified row.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-220">操作路径是特定实体的一项操作的 URL。</span><span class="sxs-lookup"><span data-stu-id="b369a-220">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="b369a-221">有关详细信息，请参阅<xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType>类概述。</span><span class="sxs-lookup"><span data-stu-id="b369a-221">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumn">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaColumn GetColumn (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaColumn GetColumn(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetColumn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumn (columnName As String) As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaColumn ^ GetColumn(System::String ^ columnName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="b369a-222">要获取其元数据的列的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-222">The name of the column to get metadata for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-223">返回指定列的元数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-223">Returns the metadata for the specified column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-224">列元数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-224">The column metadata.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnValuesFromRoute">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; GetColumnValuesFromRoute (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetColumnValuesFromRoute(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnValuesFromRoute (context As HttpContext) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ GetColumnValuesFromRoute(System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b369a-225">指定 Web 请求的上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-225">The context for the specified Web request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-226">获取列值的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-226">Gets the collection of column values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-227">列值的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-227">The collection of column values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataKeyFromRoute">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DataKey GetDataKeyFromRoute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.DataKey GetDataKeyFromRoute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetDataKeyFromRoute" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataKeyFromRoute () As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::DataKey ^ GetDataKeyFromRoute();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetDataKeyFromRoute</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b369a-228">从路由值中检索实体的主键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-228">Retrieves the primary key of the entity from the route values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-229">如果可找到，则为实体的主键值；否则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-229">The primary-key values of the entities, if they are found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-230">路由值通常来自请求 URL 查询字符串。</span><span class="sxs-lookup"><span data-stu-id="b369a-230">The route values typically come from the request URL query string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayString">
      <MemberSignature Language="C#" Value="public virtual string GetDisplayString (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDisplayString(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetDisplayString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDisplayString (row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetDisplayString(System::Object ^ row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetDisplayString(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row">
          <span data-ttu-id="b369a-231">要获取其显示字符串的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-231">The row to get the display string for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-232">当在外键关系中使用行时，返回用作该行的实例的显示字符串的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-232">Returns the value to use as the display string for an instance of a row when the row is used in foreign-key relationships.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-233">行的实例的显示名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-233">The display name for an instance of a row.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-234">如果该行被`null`，则返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="b369a-234">If the row is `null`, an empty string is returned.</span></span> <span data-ttu-id="b369a-235">如果该实体类包括的重写<xref:System.Web.DynamicData.MetaTable.ToString%2A>方法，重写<xref:System.Web.DynamicData.MetaTable.ToString%2A>返回值。</span><span class="sxs-lookup"><span data-stu-id="b369a-235">If the entity class includes an override of the <xref:System.Web.DynamicData.MetaTable.ToString%2A> method, the overridden <xref:System.Web.DynamicData.MetaTable.ToString%2A> value is returned.</span></span> <span data-ttu-id="b369a-236">否则，该方法返回`ToString`值的表示形式<xref:System.Web.DynamicData.MetaTable.DisplayColumn%2A>指定行的属性。</span><span class="sxs-lookup"><span data-stu-id="b369a-236">Otherwise, the method returns the `ToString` representation of the value of the <xref:System.Web.DynamicData.MetaTable.DisplayColumn%2A> property for the specified row.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilteredColumns">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt; GetFilteredColumns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.DynamicData.MetaColumn&gt; GetFilteredColumns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetFilteredColumns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFilteredColumns () As IEnumerable(Of MetaColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ GetFilteredColumns();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b369a-237">检索可筛选的列的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-237">Retrieves a list of columns that are filterable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-238">可筛选的列的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-238">A list of columns that are filterable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-239">某列是否已使用批注过的情况下可筛选<xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute>属性和`Enabled`属性<xref:System.Web.Mvc.FilterAttribute>列的属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="b369a-239">A column is filterable if it is annotated with the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> attribute and the `Enabled` property of the <xref:System.Web.Mvc.FilterAttribute> attribute of the column is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryKeyDictionary">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; GetPrimaryKeyDictionary (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetPrimaryKeyDictionary(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyDictionary (row As Object) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ GetPrimaryKeyDictionary(System::Object ^ row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyDictionary(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row">
          <span data-ttu-id="b369a-240">一个行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-240">A row.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-241">为指定行检索主键名称和值的字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-241">Retrieves a dictionary of primary-key names and values for the specified row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-242">主键名称和值的字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-242">A dictionary of primary-key names and values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b369a-243">下面的示例演示如何创建主键字典。</span><span class="sxs-lookup"><span data-stu-id="b369a-243">The following example shows how to create a primary-key dictionary.</span></span>  
  
```csharp  
private RouteValueDictionary GetRouteValues(MetaTable table, object row) {  
    RouteValueDictionary routeValues = GetRouteValues();  
    foreach (var pk in table.GetPrimaryKeyDictionary(row)) {  
        routeValues[pk.Key] = pk.Value;  
    }  
    return routeValues;  
}   
```  
  
```vb  
Private Function GetRouteValues(ByVal table As MetaTable, _  
        ByVal row As Object) As RouteValueDictionary   
    Dim routeValues As RouteValueDictionary = GetRouteValues()   
    For Each pk In table.GetPrimaryKeyDictionary(row)   
        routeValues(pk.Key) = pk.Value   
    Next   
    Return routeValues   
End Function   
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPrimaryKeyString">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b369a-244">获取表示指定行的主键的值列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-244">Gets a list of values that represent the primary key for the specified row.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPrimaryKeyString">
      <MemberSignature Language="C#" Value="public string GetPrimaryKeyString (System.Collections.Generic.IList&lt;object&gt; primaryKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPrimaryKeyString(class System.Collections.Generic.IList`1&lt;object&gt; primaryKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyString (primaryKeyValues As IList(Of Object)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPrimaryKeyString(System::Collections::Generic::IList&lt;System::Object ^&gt; ^ primaryKeyValues);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primaryKeyValues" Type="System.Collections.Generic.IList&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="primaryKeyValues">
          <span data-ttu-id="b369a-245">组成主键的列值的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-245">The list of column values that make up the primary key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-246">返回一个以逗号分隔的列值列表，这些列值表示指定行的主键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-246">Returns a comma-separated list of column values that represent the primary key for the specified row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-247">一个以逗号分隔的列值的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-247">A comma-separated list of column values.</span>
          </span>
          <span data-ttu-id="b369a-248">如果列表为空，则返回空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-248">If the list is empty, an empty string is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryKeyString">
      <MemberSignature Language="C#" Value="public string GetPrimaryKeyString (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPrimaryKeyString(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyString (row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPrimaryKeyString(System::Object ^ row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyString(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row">
          <span data-ttu-id="b369a-249">要获取其主键的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-249">The row to get the primary key for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-250">返回一个以逗号分隔的列值列表，这些列值表示指定行的主键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-250">Returns a comma-separated list of column values that represent the primary key for the specified row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-251">一个以逗号分隔的列值列表，这些列值表示行的主键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-251">A comma-separated list of column values that represent the primary key for the row.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryKeyValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;object&gt; GetPrimaryKeyValues (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;object&gt; GetPrimaryKeyValues(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyValues (row As Object) As IList(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::Object ^&gt; ^ GetPrimaryKeyValues(System::Object ^ row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyValues(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row">
          <span data-ttu-id="b369a-252">要获取其主键的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-252">The row to get the primary key for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-253">返回一个列值集合，这些列值表示指定行的主键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-253">Returns a collection of column values that represent the primary key for the specified row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-254">一个列值集合，这些列值表示行的主键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-254">A collection of column values that represent the primary key for the row.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetQuery">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b369a-255">获取表示表的实体类型的 <see cref="T:System.Linq.IQueryable" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-255">Gets the <see cref="T:System.Linq.IQueryable" /> instance for the entity type that represents the table.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable GetQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable GetQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function GetQuery () As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Linq::IQueryable ^ GetQuery();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetQuery</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b369a-256">返回表示表的实体类型的 <see cref="T:System.Linq.IQueryable" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-256">Returns the <see cref="T:System.Linq.IQueryable" /> instance for the entity type that represents the table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-257">实体类型的 <see cref="T:System.Linq.IQueryable" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-257">The <see cref="T:System.Linq.IQueryable" /> instance for the entity type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQuery">
      <MemberSignature Language="C#" Value="public virtual System.Linq.IQueryable GetQuery (object context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable GetQuery(object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetQuery(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQuery (context As Object) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Linq::IQueryable ^ GetQuery(System::Object ^ context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetQuery(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b369a-258">
            <see cref="T:System.Web.DynamicData.MetaTable" /> 对象的上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-258">The context of the <see cref="T:System.Web.DynamicData.MetaTable" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-259">返回使用数据上下文表示表的实体类型的 <see cref="T:System.Linq.IQueryable" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-259">Returns the <see cref="T:System.Linq.IQueryable" /> instance for the entity type that represents the table by using the data context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-260">使用数据上下文表示表的实体类型的 <see cref="T:System.Linq.IQueryable" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-260">The <see cref="T:System.Linq.IQueryable" /> instance for the entity type that represents the table in the data context.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-261">如果`context`参数是`null`，此方法通过调用来创建新的上下文<xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="b369a-261">If the `context` parameter is `null`, this method creates a new context by calling the <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScaffoldColumns">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt; GetScaffoldColumns (System.Web.UI.WebControls.DataBoundControlMode mode, System.Web.DynamicData.ContainerType containerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.DynamicData.MetaColumn&gt; GetScaffoldColumns(valuetype System.Web.UI.WebControls.DataBoundControlMode mode, valuetype System.Web.DynamicData.ContainerType containerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ GetScaffoldColumns(System::Web::UI::WebControls::DataBoundControlMode mode, System::Web::DynamicData::ContainerType containerType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
        <Parameter Name="containerType" Type="System.Web.DynamicData.ContainerType" />
      </Parameters>
      <Docs>
        <param name="mode">
          <span data-ttu-id="b369a-262">数据绑定控件模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-262">The data-bound control mode.</span>
          </span>
        </param>
        <param name="containerType">
          <span data-ttu-id="b369a-263">一个值，该值指示是将表显示为单独的实体，还是显示为实体列表的一部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-263">A value that indicates whether the table is displayed as an individual entity or as part of a list of entities.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-264">返回要通过使用基架显示的列的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-264">Returns a list of columns to display by using scaffolding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-265">要通过使用基架显示的列的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-265">A list of columns to display by using scaffolding.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-266">此方法返回的所有列其<xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute>属性设置为`true`以下应用程序除外：</span><span class="sxs-lookup"><span data-stu-id="b369a-266">This method returns all columns whose <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> property is set to `true` except the following:</span></span>  
  
-   <span data-ttu-id="b369a-267">长型字符串列，列其<xref:System.Web.DynamicData.MetaColumn.IsLongString%2A>属性设置为`true`并且其`containerType`参数是`true`。</span><span class="sxs-lookup"><span data-stu-id="b369a-267">Long string columns, which are columns whose <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> property is set to `true` and whose `containerType` parameter is `true`.</span></span>  
  
-   <span data-ttu-id="b369a-268">子列其<xref:System.Web.UI.WebControls.DataBoundControlMode>值设置为<xref:System.Web.UI.WebControls.DataBoundControlMode.Insert>。</span><span class="sxs-lookup"><span data-stu-id="b369a-268">Child columns whose <xref:System.Web.UI.WebControls.DataBoundControlMode> value is set to <xref:System.Web.UI.WebControls.DataBoundControlMode.Insert>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaTable GetTable (Type entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaTable GetTable(class System.Type entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetTable(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTable (entityType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaTable ^ GetTable(Type ^ entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="entityType">
          <span data-ttu-id="b369a-269">实体的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-269">The type of the entity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-270">检索与指定类型关联的元表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-270">Retrieves the metatable that is associated with the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-271">与指定类型关联的元表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-271">The metatable that is associated with the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-272">此方法调用 <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>。</span><span class="sxs-lookup"><span data-stu-id="b369a-272">This method calls <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>.</span></span> <span data-ttu-id="b369a-273">如果<xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>返回`false`、<xref:System.InvalidOperationException>引发异常。</span><span class="sxs-lookup"><span data-stu-id="b369a-273">If <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29> returns `false`, an <xref:System.InvalidOperationException> exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b369a-274">被此方法调用的 <see cref="M:System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" /> 方法返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-274">The <see cref="M:System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" /> method that was called by this method returned <see langword="false" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HasPrimaryKey">
      <MemberSignature Language="C#" Value="public bool HasPrimaryKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.HasPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPrimaryKey { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.HasPrimaryKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b369a-275">获取一个指示表是否有主键的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-275">Gets a value that indicates whether the table has a primary key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b369a-276">如果表有主键，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-276">
              <see langword="true" /> if the table has a primary key; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b369a-277">初始化调用构造函数后可能不可用的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-277">Initializes data that may not be available when the constructor is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-278">此方法调用<xref:System.Web.DynamicData.MetaColumn.Initialize%2A>方法中的每列<xref:System.Web.DynamicData.MetaTable>实例。</span><span class="sxs-lookup"><span data-stu-id="b369a-278">This method calls the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method for each column in the <xref:System.Web.DynamicData.MetaTable> instance.</span></span> <span data-ttu-id="b369a-279">不能直接调用此方法。</span><span class="sxs-lookup"><span data-stu-id="b369a-279">This method cannot be called directly.</span></span> <span data-ttu-id="b369a-280">要自定义初始化，你可以从此类派生，并重写<xref:System.Web.DynamicData.MetaColumn.Initialize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b369a-280">To customize initialization, you can derive from this class and override the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method.</span></span> <span data-ttu-id="b369a-281">如果你重写此方法，调用基控件`Initialize`方法。</span><span class="sxs-lookup"><span data-stu-id="b369a-281">If you override this method, call the base control's `Initialize` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b369a-282">下面的示例演示如何重写<xref:System.Web.DynamicData.MetaColumn.Initialize%2A>方法，以自定义初始化过程。</span><span class="sxs-lookup"><span data-stu-id="b369a-282">The following example shows how to override the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method in order to customize the initialization process.</span></span>  
  
```csharp  
protected  override void Initialize() {  
    base.Initialize();  
    MyOverridenInit();  
}  
```  
  
```vb  
Protected Overloads Overrides Sub Initialize()   
    MyBase.Initialize()   
    MyOverridenInit()   
End Sub  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b369a-283">获取一个指示表是否为只读的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-283">Gets a value that indicates whether the table is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b369a-284">如果表为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-284">
              <see langword="true" /> if the table is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListActionPath">
      <MemberSignature Language="C#" Value="public string ListActionPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ListActionPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.ListActionPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListActionPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ListActionPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b369a-285">获取表的列表操作的操作路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-285">Gets the action path of the list action for the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b369a-286">表的列表操作的操作路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-286">The action path of the list action for the table.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-287">操作路径是特定实体的一项操作的 URL。</span><span class="sxs-lookup"><span data-stu-id="b369a-287">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="b369a-288">有关详细信息，请参阅<xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType>类概述。</span><span class="sxs-lookup"><span data-stu-id="b369a-288">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaModel Model" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaModel ^ Model { System::Web::DynamicData::MetaModel ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b369a-289">获取表所属的元模型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-289">Gets the meta model that the table belongs to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b369a-290">表所属的元模型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-290">The meta model that the table belongs to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-291">有关详细信息，请参阅<xref:System.Data.Linq.Mapping.MetaModel?displayProperty=nameWithType>类概述。</span><span class="sxs-lookup"><span data-stu-id="b369a-291">For more information, see the <xref:System.Data.Linq.Mapping.MetaModel?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b369a-292">获取表的唯一名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-292">Gets the unique name of the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b369a-293">表的唯一名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-293">The unique name of the table.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryKeyColumns">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt; PrimaryKeyColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.DynamicData.MetaColumn&gt; PrimaryKeyColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.PrimaryKeyColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrimaryKeyColumns As ReadOnlyCollection(Of MetaColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ PrimaryKeyColumns { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b369a-294">获取定义主键的列的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-294">Gets the collection of columns that define the primary key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b369a-295">一个包含主键列的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-295">A collection that contains the primary-key columns.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.ModelProviders.TableProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.ModelProviders.TableProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As TableProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::ModelProviders::TableProvider ^ Provider { System::Web::DynamicData::ModelProviders::TableProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.Provider</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.ModelProviders.TableProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b369a-296">获取表的提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-296">Gets the provider for the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b369a-297">表的提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-297">The provider for the table.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetMetadata">
      <MemberSignature Language="C#" Value="public void ResetMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.ResetMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetMetadata ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetMetadata();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b369a-298">重置表的缓存元数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-298">Resets the cached metadata for the table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-299">缓存的表元数据包括从数据模型属性和有关内部函数的列的元数据获取的信息。</span><span class="sxs-lookup"><span data-stu-id="b369a-299">The cached table metadata consists of the information that is obtained from data-model attributes and from metadata about intrinsic columns.</span></span> <span data-ttu-id="b369a-300">元数据缓存会重新生成任何元数据请求的下一步时间。</span><span class="sxs-lookup"><span data-stu-id="b369a-300">The metadata cache is rebuilt the next time any metadata is requested.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootEntityType">
      <MemberSignature Language="C#" Value="public Type RootEntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type RootEntityType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.RootEntityType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootEntityType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ RootEntityType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.RootEntityType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b369a-301">获取实体的继承层次结构的根类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-301">Gets the root type of the entity's inheritance hierarchy.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b369a-302">实体的继承层次结构的根类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-302">The root type of the entity's inheritance hierarchy.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-303">如果类型在继承层次结构的顶部或没有父类型，则返回的实体类型。</span><span class="sxs-lookup"><span data-stu-id="b369a-303">If the type is at the top of the inheritance hierarchy or does not have a parent type, the entity type is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scaffold">
      <MemberSignature Language="C#" Value="public virtual bool Scaffold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scaffold" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Scaffold" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Scaffold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Scaffold { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.Scaffold</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b369a-304">获取或设置一个值，该值指示是否应显示表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-304">Gets or sets a value that indicates whether the table should be displayed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b369a-305">如果应显示表，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-305">
              <see langword="true" /> if the table should be displayed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortColumn">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.MetaColumn SortColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn SortColumn" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.SortColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortColumn As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::DynamicData::MetaColumn ^ SortColumn { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b369a-306">获取排序表所依据的 <see cref="T:System.Web.DynamicData.MetaColumn" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-306">Gets the <see cref="T:System.Web.DynamicData.MetaColumn" /> value that the table is sorted by.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b369a-307">排序表所依据的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-307">The column that the table is sorted by.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortDescending">
      <MemberSignature Language="C#" Value="public virtual bool SortDescending { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SortDescending" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.SortDescending" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortDescending As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SortDescending { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.SortDescending</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b369a-308">当项用作外键关系中的父级时，获取一个指示是否按降序排序项的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-308">Gets a value that indicates whether entries are sorted in descending order when they are used as parents in a foreign-key relationship.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b369a-309">如果按降序排序项，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-309">
              <see langword="true" /> if entries are sorted in descending order; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-310">你可以通过使用指定排序顺序<xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="b369a-310">You can specify sort order by using the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute?displayProperty=nameWithType> attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b369a-311">返回表的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-311">Returns the name of the table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-312">表的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-312">The name of the table.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetColumn">
      <MemberSignature Language="C#" Value="public bool TryGetColumn (string columnName, out System.Web.DynamicData.MetaColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetColumn(string columnName, [out] class System.Web.DynamicData.MetaColumn&amp; column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetColumn (columnName As String, ByRef column As MetaColumn) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetColumn(System::String ^ columnName, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaColumn ^ % column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="b369a-313">要查找的列的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-313">The name of the column to find.</span>
          </span>
        </param>
        <param name="column">
          <span data-ttu-id="b369a-314">此方法返回时将包含 <c>columnName</c> 的 <see langword="MetaColumn" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-314">When this method returns, contains the <see langword="MetaColumn" /> object for <c>columnName</c>.</span>
          </span>
          <span data-ttu-id="b369a-315">此参数未经初始化即被传递。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-315">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-316">返回一个值，该值指示能否找到指定列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-316">Returns a value that indicates whether a specified column can be found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-317">如果可以找到指定列，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-317">
              <see langword="true" /> if the specified column can be found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b369a-318">如果`columnName`参数为 null，<xref:System.InvalidOperationException>引发异常。</span><span class="sxs-lookup"><span data-stu-id="b369a-318">If the `columnName` parameter is null, an <xref:System.InvalidOperationException> exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetTable">
      <MemberSignature Language="C#" Value="public static bool TryGetTable (Type entityType, out System.Web.DynamicData.MetaTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetTable(class System.Type entityType, [out] class System.Web.DynamicData.MetaTable&amp; table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetTable (entityType As Type, ByRef table As MetaTable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetTable(Type ^ entityType, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaTable ^ % table);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entityType">
          <span data-ttu-id="b369a-319">实体的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-319">The type of the entity.</span>
          </span>
        </param>
        <param name="table">
          <span data-ttu-id="b369a-320">当此方法返回时，包含与指定类型关联的元表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-320">When this method returns, contains the metatable that is associated with the specified type.</span>
          </span>
          <span data-ttu-id="b369a-321">此参数未经初始化即被传递。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-321">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b369a-322">检索与指定类型和表关联的元表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-322">Retrieves the metatable that is associated with the specified type and table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b369a-323">与给定的指定类型和表关联的元表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-323">The metatable that is associated with the given specified and table.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b369a-324">
            <paramref name="entityType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b369a-324">
              <paramref name="entityType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>