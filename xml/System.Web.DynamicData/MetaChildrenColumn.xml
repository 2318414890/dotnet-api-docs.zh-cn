<Type Name="MetaChildrenColumn" FullName="System.Web.DynamicData.MetaChildrenColumn">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b4a42bf8fb8060914302a9107bdae3ea0f4374ae" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37546256" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MetaChildrenColumn : System.Web.DynamicData.MetaColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaChildrenColumn extends System.Web.DynamicData.MetaColumn" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaChildrenColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaChildrenColumn&#xA;Inherits MetaColumn" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaChildrenColumn : System::Web::DynamicData::MetaColumn" />
  <TypeSignature Language="F#" Value="type MetaChildrenColumn = class&#xA;    inherit MetaColumn" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.DynamicData.MetaColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1eb7e-101">表示一个指示一对多关系的数据库字段。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1eb7e-101">Represents a database field that indicates a one-to-many relationship.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eb7e-102">在 ASP.NET 动态数据应用程序中<xref:System.Web.DynamicData.MetaChildrenColumn>类表示一个指示一个对多关系或父-子关系的数据库字段。</span><span class="sxs-lookup"><span data-stu-id="1eb7e-102">In ASP.NET Dynamic Data applications, the <xref:System.Web.DynamicData.MetaChildrenColumn> class represents a database field that indicates a one-to-many relationship or a parent-child relationship.</span></span>  
  
 <span data-ttu-id="1eb7e-103"><xref:System.Web.DynamicData.MetaChildrenColumn>类表示一个对多关系的父表中的字段。</span><span class="sxs-lookup"><span data-stu-id="1eb7e-103">The <xref:System.Web.DynamicData.MetaChildrenColumn> class represents the field in the parent table of the one-to-many relationship.</span></span> <span data-ttu-id="1eb7e-104">但是，可以通过访问子表对象<xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1eb7e-104">However, you can access the child table object by using the <xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A> property.</span></span> <span data-ttu-id="1eb7e-105">此外可以通过检索子表中的外键字段<xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1eb7e-105">You can also retrieve the foreign-key field in the child table by using the <xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.MetaColumn" />
    <altmember cref="T:System.Web.DynamicData.MetaForeignKeyColumn" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaChildrenColumn (System.Web.DynamicData.MetaTable table, System.Web.DynamicData.ModelProviders.ColumnProvider entityMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.DynamicData.MetaTable table, class System.Web.DynamicData.ModelProviders.ColumnProvider entityMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (table As MetaTable, entityMember As ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaChildrenColumn(System::Web::DynamicData::MetaTable ^ table, System::Web::DynamicData::ModelProviders::ColumnProvider ^ entityMember);" />
      <MemberSignature Language="F#" Value="new System.Web.DynamicData.MetaChildrenColumn : System.Web.DynamicData.MetaTable * System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaChildrenColumn" Usage="new System.Web.DynamicData.MetaChildrenColumn (table, entityMember)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" />
        <Parameter Name="entityMember" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="1eb7e-106">元表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1eb7e-106">The meta table.</span>
          </span>
        </param>
        <param name="entityMember">
          <span data-ttu-id="1eb7e-107">列提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1eb7e-107">The column provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1eb7e-108">初始化 <see cref="T:System.Web.DynamicData.MetaChildrenColumn" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1eb7e-108">Initializes a new instance of the <see cref="T:System.Web.DynamicData.MetaChildrenColumn" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable ChildTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaTable ChildTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaChildrenColumn.ChildTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildTable As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaTable ^ ChildTable { System::Web::DynamicData::MetaTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildTable : System.Web.DynamicData.MetaTable" Usage="System.Web.DynamicData.MetaChildrenColumn.ChildTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1eb7e-109">获取一个表示一对多关系中的子表的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1eb7e-109">Gets an object that represents the child table of the one-to-many relationship.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1eb7e-110">一个表示一对多关系中的子表的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1eb7e-110">An object that represents the child table of the one-to-many relationship.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eb7e-111">使用<xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A>属性来获取表示一个对多关系的子表的对象。</span><span class="sxs-lookup"><span data-stu-id="1eb7e-111">Use the <xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A> property to get an object that represents the child table of the one-to-many relationship.</span></span> <span data-ttu-id="1eb7e-112">可以使用访问父表<xref:System.Web.DynamicData.MetaColumn.Table%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1eb7e-112">You can access the parent table by using the <xref:System.Web.DynamicData.MetaColumn.Table%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.Table" />
      </Docs>
    </Member>
    <Member MemberName="ColumnInOtherTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaColumn ColumnInOtherTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn ColumnInOtherTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnInOtherTable As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaColumn ^ ColumnInOtherTable { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnInOtherTable : System.Web.DynamicData.MetaColumn" Usage="System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1eb7e-113">获取一个表示子表中的外键字段的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1eb7e-113">Gets an object that represents the foreign-key field in the child table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1eb7e-114">一个表示子表中的外键字段的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1eb7e-114">An object that represents the foreign-key field in the child table.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eb7e-115"><xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A>属性使您能够获取对子表中的字段的引用。</span><span class="sxs-lookup"><span data-stu-id="1eb7e-115">The <xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A> property enables you to get a reference to the field in the child table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildrenListPath">
      <MemberSignature Language="C#" Value="public string GetChildrenListPath (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetChildrenListPath(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildrenListPath (row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetChildrenListPath(System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetChildrenListPath : obj -&gt; string&#xA;override this.GetChildrenListPath : obj -&gt; string" Usage="metaChildrenColumn.GetChildrenListPath row" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaChildrenColumn.GetChildrenListPath(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row">
          <span data-ttu-id="1eb7e-116">包含外键字段的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1eb7e-116">The row that contains the foreign-key field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1eb7e-117">获取子表的列表操作页的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1eb7e-117">Gets the path of the list-action page for the child table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1eb7e-118">子表的列表操作页的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1eb7e-118">The path of the list-action page for the child table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eb7e-119">使用<xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A>时您想要检索使用指定的行作为父级的子表的列表操作页的方法。</span><span class="sxs-lookup"><span data-stu-id="1eb7e-119">Use the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A> method when you want to retrieve the list-action page for the child table using the specified row as a parent.</span></span> <span data-ttu-id="1eb7e-120">路径通过将查询字符串值追加到包含外键字段值中指定的 URL 获取`row`参数。</span><span class="sxs-lookup"><span data-stu-id="1eb7e-120">The path is obtained by appending a query-string value to the URL that contains the foreign-key field value specified in the `row` parameter.</span></span>  
  
 <span data-ttu-id="1eb7e-121">使用<xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A>方法是调用相同<xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29>方法并传入<xref:System.Web.DynamicData.PageAction.List%2A>作为第一个参数的操作。</span><span class="sxs-lookup"><span data-stu-id="1eb7e-121">Using the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A> method is the same as invoking the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29> method and passing the <xref:System.Web.DynamicData.PageAction.List%2A> action as the first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.PageAction.List" />
        <altmember cref="Overload:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildrenPath">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1eb7e-122">获取子表的指定操作页的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1eb7e-122">Gets the path for the specified action page of the child table.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildrenPath">
      <MemberSignature Language="C#" Value="public string GetChildrenPath (string action, object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetChildrenPath(string action, object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildrenPath (action As String, row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetChildrenPath(System::String ^ action, System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetChildrenPath : string * obj -&gt; string&#xA;override this.GetChildrenPath : string * obj -&gt; string" Usage="metaChildrenColumn.GetChildrenPath (action, row)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaChildrenColumn.GetChildrenPath(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="1eb7e-123">目标操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1eb7e-123">The target action.</span>
          </span>
        </param>
        <param name="row">
          <span data-ttu-id="1eb7e-124">包含外键字段的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1eb7e-124">The row that contains the foreign-key field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1eb7e-125">获取子表的指定操作页的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1eb7e-125">Gets the path of the specified action page of the child table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1eb7e-126">子表的指定操作页的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1eb7e-126">The path of the specified action page of the child table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eb7e-127"><xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29>方法返回的子表的指定的操作页路径。</span><span class="sxs-lookup"><span data-stu-id="1eb7e-127">The <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29> method returns the path of the specified action page for the child table.</span></span> <span data-ttu-id="1eb7e-128">返回的路径取决于为 ASP.NET 动态数据应用程序定义的路由，并具有指定的行作为父级。</span><span class="sxs-lookup"><span data-stu-id="1eb7e-128">The path returned is based on the routes that are defined for the ASP.NET Dynamic Data application and has the specified row as a parent.</span></span> <span data-ttu-id="1eb7e-129">路径通过将查询字符串值追加到包含外键字段值中指定的 URL 获取`row`参数。</span><span class="sxs-lookup"><span data-stu-id="1eb7e-129">The path is obtained by appending a query-string value to the URL that contains the foreign-key field value specified in the `row` parameter.</span></span>  
  
 <span data-ttu-id="1eb7e-130">如果`row`是`null`，此方法返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="1eb7e-130">If `row` is `null`, his method returns an empty string.</span></span>  
  
 <span data-ttu-id="1eb7e-131">可以使用中定义的值<xref:System.Web.DynamicData.PageAction>类的`action`参数。</span><span class="sxs-lookup"><span data-stu-id="1eb7e-131">You can use the values defined in the <xref:System.Web.DynamicData.PageAction> class for the `action` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.PageAction" />
      </Docs>
    </Member>
    <Member MemberName="GetChildrenPath">
      <MemberSignature Language="C#" Value="public string GetChildrenPath (string action, object row, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetChildrenPath(string action, object row, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildrenPath (action As String, row As Object, path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetChildrenPath(System::String ^ action, System::Object ^ row, System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member GetChildrenPath : string * obj * string -&gt; string&#xA;override this.GetChildrenPath : string * obj * string -&gt; string" Usage="metaChildrenColumn.GetChildrenPath (action, row, path)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaChildrenColumn.GetChildrenPath(System.String,System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="1eb7e-132">目标操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1eb7e-132">The target action.</span>
          </span>
        </param>
        <param name="row">
          <span data-ttu-id="1eb7e-133">包含外键字段的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1eb7e-133">The row that contains the foreign-key field.</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="1eb7e-134">目标页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1eb7e-134">The target page.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1eb7e-135">获取子表的指定操作页的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1eb7e-135">Gets the path for the specified action page of the child table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1eb7e-136">子表的指定操作页的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1eb7e-136">The path of the specified action page of the child table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eb7e-137"><xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29>方法返回的子表的指定的操作页路径。</span><span class="sxs-lookup"><span data-stu-id="1eb7e-137">The <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29> method returns the path of the specified action page for the child table.</span></span> <span data-ttu-id="1eb7e-138">该路径基于指定行的指定路径作为父级。</span><span class="sxs-lookup"><span data-stu-id="1eb7e-138">The path is based on the specified path with the specified row as a parent.</span></span> <span data-ttu-id="1eb7e-139">路径通过将查询字符串值追加到包含外键字段值中指定的 URL 获取`row`参数。</span><span class="sxs-lookup"><span data-stu-id="1eb7e-139">The path is obtained by appending a query-string value to the URL that contains the foreign-key field value specified in the `row` parameter.</span></span>  
  
 <span data-ttu-id="1eb7e-140">如果`row`是`null`，此方法返回一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="1eb7e-140">If `row` is `null`, this method returns an empty string.</span></span> <span data-ttu-id="1eb7e-141">如果`path`是`null`，则<xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29>方法返回基于为 ASP.NET 动态数据应用程序定义的路由的路径。</span><span class="sxs-lookup"><span data-stu-id="1eb7e-141">If `path` is `null`, the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29> method returns the path based on the routes defined for the ASP.NET Dynamic Data application.</span></span>  
  
 <span data-ttu-id="1eb7e-142">可以使用中定义的值<xref:System.Web.DynamicData.PageAction>类的`action`参数。</span><span class="sxs-lookup"><span data-stu-id="1eb7e-142">You can use the values defined in the <xref:System.Web.DynamicData.PageAction> class for the `action` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.PageAction" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="metaChildrenColumn.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1eb7e-143">初始化调用构造函数后可能不可用的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1eb7e-143">Initializes data that might not be available when the constructor is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eb7e-144">不能直接调用此方法。</span><span class="sxs-lookup"><span data-stu-id="1eb7e-144">This method cannot be called directly.</span></span> <span data-ttu-id="1eb7e-145">若要自定义初始化，可以从此类派生并重写`Initialize`方法。</span><span class="sxs-lookup"><span data-stu-id="1eb7e-145">To customize initialization, you can derive from this class and override the `Initialize` method.</span></span> <span data-ttu-id="1eb7e-146">如果重写此方法，调用基控件的`Initialize`方法。</span><span class="sxs-lookup"><span data-stu-id="1eb7e-146">If you override this method, call the base control's `Initialize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManyToMany">
      <MemberSignature Language="C#" Value="public bool IsManyToMany { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsManyToMany" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaChildrenColumn.IsManyToMany" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsManyToMany As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsManyToMany { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsManyToMany : bool" Usage="System.Web.DynamicData.MetaChildrenColumn.IsManyToMany" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaChildrenColumn.IsManyToMany</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1eb7e-147">获取一个值，该值指示列的多对多关系状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1eb7e-147">Gets a value that indicates the many-to-many relationship status of the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1eb7e-148">如果列关系是多对多，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1eb7e-148">
              <see langword="true" /> if the column relationship is many-to-many; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>