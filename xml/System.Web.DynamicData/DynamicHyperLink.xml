<Type Name="DynamicHyperLink" FullName="System.Web.DynamicData.DynamicHyperLink">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9d64fefd202ace4b48faab40ac01492da78cbd54" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36601809" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DynamicHyperLink : System.Web.UI.WebControls.HyperLink, System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicHyperLink extends System.Web.UI.WebControls.HyperLink implements class System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicHyperLink" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicHyperLink&#xA;Inherits HyperLink&#xA;Implements IAttributeAccessor" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicHyperLink : System::Web::UI::WebControls::HyperLink, System::Web::UI::IAttributeAccessor" />
  <TypeSignature Language="F#" Value="type DynamicHyperLink = class&#xA;    inherit HyperLink&#xA;    interface IAttributeAccessor" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HyperLink</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Action")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.DynamicData.DynamicHyperLink), "DynamicHyperLink.bmp")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>显示指向表操作（如编辑、删除和插入）的链接。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 本主题内容：  
  
-   [介绍](#introduction)  
  
-   [声明性语法](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>介绍  
 <xref:System.Web.DynamicData.DynamicHyperLink>控件创建基于启用的动态数据的表操作的链接。 在 Global.asax 文件中，这些操作被定义为默认路由规则。 规则是与 Edit.aspx、 List.aspx，等的默认页模板相关联。 当用户单击链接时，会显示页面，使用户能够执行指定的链接的操作。  
  
 <xref:System.Web.DynamicData.DynamicHyperLink>控制，你可以创建以下链接：  
  
-   表行数据绑定链接，适用于数据项特定的操作链接，例如"编辑"和"详细信息"。 动态数据推断表和当前行的主键。 这些链接的一个示例是一个动态数据网站的 Edit.aspx 页中。  
  
-   链接到<xref:System.Web.DynamicData.MetaTable>对象，后者是特定的操作链接，例如"List"和"插入"反过来指向如表的对象。 这些链接的一个示例是一个动态数据网站的 Default.aspx 页中。  
  
-   未绑定的链接，用于创建外部的数据绑定控件的表操作链接。 这些链接的一个示例是中的动态数据网站 List.aspx 页面模板中的插入链接。 由于这些链接不是具有定义的数据上下文的数据绑定控件的一部分，你必须指定的表访问和要执行的操作。 如果为操作指定"的编辑"或"详细信息"，你还必须提供为主键。  
  
 <xref:System.Web.DynamicData.DynamicHyperLink>控制支持附加标记特性，则可以将其转发到路由引擎时链接被激活。 当你想要从非数据绑定上下文的特定项的链接时，这很有用。  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>声明性语法  
  
```  
<asp:DynamicHyperlink  
    ID="string"  
    Action="Details|Edit|Insert|List"  
    ContextTypeName="string"  
    DataField="string"  
    TableName="string"  
    OnDataBinding="DataBinding event handler"  
    OnPreRender="PreRender event handler"/>  
```  
  
   
  
## Examples  
 具有源代码的 Visual Studio 项目是用本主题可以附带：[基架动态数据](http://go.microsoft.com/fwlink/?LinkId=168914)。  
  
 下面的示例演示如何创建<xref:System.Web.DynamicData.DynamicHyperLink>数据行，为一个集合，并执行指定的操作的控件。  
  
 [!code-aspx-csharp[DynamicData.DynamicHyperlinks#1](~/samples/snippets/csharp/VS_Snippets_WebNet/dynamicdata.dynamichyperlinks/cs/dynamicdatadynamichyperlink.aspx#1)]
 [!code-aspx-vb[DynamicData.DynamicHyperlinks#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/dynamicdata.dynamichyperlinks/vb/dynamicdatadynamichyperlink.aspx#1)]  
  
 [!code-csharp[DynamicData.DynamicHyperlinks#2](~/samples/snippets/csharp/VS_Snippets_WebNet/dynamicdata.dynamichyperlinks/cs/dynamicdatadynamichyperlink.aspx.cs#2)]
 [!code-vb[DynamicData.DynamicHyperlinks#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/dynamicdata.dynamichyperlinks/vb/dynamicdatadynamichyperlink.aspx.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicHyperLink ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicHyperLink.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicHyperLink();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.DynamicData.DynamicHyperLink" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicHyperLink.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.Web.DynamicData.DynamicHyperLink.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Navigation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.DynamicData.ActionConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与链接关联的操作。</summary>
        <value>与链接关联的操作。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以将其分配给此属性的预定义的值有"编辑"、"插入"、"列表"和"详细信息"。 其中每个值都与一个网页模板相关联。 你还可以分配自定义值。 必须由自定义页模板支持自定义值。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicHyperLink.TableName" />
      </Docs>
    </Member>
    <Member MemberName="ContextTypeName">
      <MemberSignature Language="C#" Value="public string ContextTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContextTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicHyperLink.ContextTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContextTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextTypeName : string with get, set" Usage="System.Web.DynamicData.DynamicHyperLink.ContextTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Navigation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置链接所适用的数据模型的数据上下文。</summary>
        <value>适用于链接的数据上下文。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.DynamicData.DynamicHyperLink>控件使用数据绑定控件中，默认值为一个数据绑定控件使用相同。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicHyperLink.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.DynamicData.DynamicHyperLink.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Navigation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置链接显示文本。</summary>
        <value>链接显示文本。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果链接显示文本为空，默认显示`string`使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected override void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicHyperLink.OnDataBinding(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataBinding (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataBinding(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataBinding : EventArgs -&gt; unit&#xA;override this.OnDataBinding : EventArgs -&gt; unit" Usage="dynamicHyperLink.OnDataBinding e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.DataBinding" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法通知<xref:System.Web.DynamicData.DynamicHyperLink>控制，它应执行的任何逻辑，用于将数据绑定。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">已尝试在数据绑定过程中设置表和数据上下文。  - 或 -  已尝试绑定到 <see langword="null" /> 数据字段。</exception>
        <altmember cref="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicHyperLink.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreRender : EventArgs -&gt; unit&#xA;override this.OnPreRender : EventArgs -&gt; unit" Usage="dynamicHyperLink.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.PreRender" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法通知<xref:System.Web.DynamicData.DynamicHyperLink>它应执行任何必要的预呈现的控件步骤之前控件保存视图状态和呈现内容。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.DynamicData.DynamicHyperLink" /> 对象不能确定要链接的数据表格。</exception>
        <altmember cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.GetAttribute">
      <MemberSignature Language="C#" Value="string IAttributeAccessor.GetAttribute (string key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IAttributeAccessor.GetAttribute(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicHyperLink.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAttribute (key As String) As String Implements IAttributeAccessor.GetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.IAttributeAccessor.GetAttribute(System::String ^ key) = System::Web::UI::IAttributeAccessor::GetAttribute;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要检索的属性的名称。</param>
        <summary>检索应用于 <see cref="T:System.Web.DynamicData.DynamicHyperLink" /> 控件的指定特性的值。</summary>
        <returns>应用于链接的指定特性。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.IAttributeAccessor" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.SetAttribute">
      <MemberSignature Language="C#" Value="void IAttributeAccessor.SetAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IAttributeAccessor.SetAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicHyperLink.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetAttribute (key As String, value As String) Implements IAttributeAccessor.SetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IAttributeAccessor.SetAttribute(System::String ^ key, System::String ^ value) = System::Web::UI::IAttributeAccessor::SetAttribute;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">属性名。</param>
        <param name="value">赋给特性的值。</param>
        <summary>定义要应用于 <see cref="T:System.Web.DynamicData.DynamicHyperLink" /> 控件的特性及其值。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.IAttributeAccessor" />
      </Docs>
    </Member>
    <Member MemberName="TableName">
      <MemberSignature Language="C#" Value="public string TableName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TableName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicHyperLink.TableName" />
      <MemberSignature Language="VB.NET" Value="Public Property TableName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TableName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TableName : string with get, set" Usage="System.Web.DynamicData.DynamicHyperLink.TableName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Navigation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置链接操作的表。</summary>
        <value>链接操作的表的名称。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicHyperLink.Action" />
      </Docs>
    </Member>
  </Members>
</Type>