<Type Name="MetaModel" FullName="System.Web.DynamicData.MetaModel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d208e401ffafc1443a203b876ba6a0408c46a1f0" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39989516" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MetaModel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaModel extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaModel" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaModel" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaModel" />
  <TypeSignature Language="F#" Value="type MetaModel = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="220ea-101">表示 ASP.NET 动态数据使用的一个或多个数据库。</span>
      <span class="sxs-lookup">
        <span data-stu-id="220ea-101">Represents one or multiple databases that are used by ASP.NET Dynamic Data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="220ea-102"><xref:System.Web.DynamicData.MetaModel>类型可让你注册的动态数据 Web 应用程序的一个或多个数据上下文。</span><span class="sxs-lookup"><span data-stu-id="220ea-102">The <xref:System.Web.DynamicData.MetaModel> type lets you register one or multiple data contexts for a Dynamic Data Web application.</span></span>  
  
 <span data-ttu-id="220ea-103">数据上下文是一个对象，表示数据库连接。</span><span class="sxs-lookup"><span data-stu-id="220ea-103">A data context is an object that represents a database connection.</span></span> <span data-ttu-id="220ea-104">数据上下文具有访问权限表示的数据库，可通过该连接一个数据模型。</span><span class="sxs-lookup"><span data-stu-id="220ea-104">A data context has access to one data model which represents a database that is available through that connection.</span></span> <span data-ttu-id="220ea-105">数据模型是一个对象，表示作为 CLR 类型的数据库的数据实体。</span><span class="sxs-lookup"><span data-stu-id="220ea-105">A data model is an object that represents a database's data entities as CLR types.</span></span> <span data-ttu-id="220ea-106">动态数据支持基于 LINQ to SQL 和 ADO.NET 实体框架数据模型。</span><span class="sxs-lookup"><span data-stu-id="220ea-106">Dynamic Data supports data models based on LINQ to SQL and on the ADO.NET Entity Framework.</span></span>  
  
 <span data-ttu-id="220ea-107">在 Visual Studio 中，可以生成数据模型类型使用**LINQ to SQL 类**模板或**ADO.NET 实体数据模型**模板。</span><span class="sxs-lookup"><span data-stu-id="220ea-107">In Visual Studio, you can generate data-model types by using the **LINQ to SQL Classes** template or the **ADO.NET Entity Data Model** template.</span></span> <span data-ttu-id="220ea-108">这些模板用于 LINQ to SQL 模型或 ADO.NET 实体数据模型设计器 （实体设计器） 的实体框架模型对象关系设计器 （O/R 设计器）。</span><span class="sxs-lookup"><span data-stu-id="220ea-108">These templates use the Object Relational Designer (O/R Designer) for the LINQ to SQL model, or the ADO.NET Entity Data Model Designer (Entity Designer) for the Entity Framework model.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="220ea-109">下面的示例演示如何使用<xref:System.Web.DynamicData.MetaModel>类型，执行以下任务来在 ASP.NET 网站中使用自动基架：</span><span class="sxs-lookup"><span data-stu-id="220ea-109">The following example shows how to use <xref:System.Web.DynamicData.MetaModel> type to perform the following tasks in order to use automatic scaffolding in an ASP.NET Web site:</span></span>  
  
-   <span data-ttu-id="220ea-110">获取默认数据上下文的数据模型。</span><span class="sxs-lookup"><span data-stu-id="220ea-110">Get the data model for the default data context.</span></span>  
  
-   <span data-ttu-id="220ea-111">获取指定的数据上下文的数据模型。</span><span class="sxs-lookup"><span data-stu-id="220ea-111">Get the data model for a specified data context.</span></span>  
  
-   <span data-ttu-id="220ea-112">计算路由路径 （确定的 URL） 指定的表。</span><span class="sxs-lookup"><span data-stu-id="220ea-112">Evaluate the routing path (determine the URL) for a specified table.</span></span>  
  
 <span data-ttu-id="220ea-113">该示例包含一个页面及其代码隐藏文件。</span><span class="sxs-lookup"><span data-stu-id="220ea-113">The example consists of a page and its code-behind file.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PlaceHolder.cs#1)]
 [!code-aspx-csharp[System.Web.DynamicData.MetaModel#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.MetaModel#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx#1)]
 [!code-vb[System.Web.DynamicData.MetaModel#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PlaceHolder.vb#1)]  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#2)]
 [!code-vb[System.Web.DynamicData.MetaModel#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#2)]  
  
 <span data-ttu-id="220ea-114">要编译该示例，您需要以下各项：</span><span class="sxs-lookup"><span data-stu-id="220ea-114">To compile the example, you need the following:</span></span>  
  
-   [!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)]<span data-ttu-id="220ea-115"> 或 [!INCLUDE[vwd_exp_dev10_long](~/includes/vwd-exp-dev10-long-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="220ea-115"> or [!INCLUDE[vwd_exp_dev10_long](~/includes/vwd-exp-dev10-long-md.md)].</span></span>  
  
-   <span data-ttu-id="220ea-116">动态数据网站。</span><span class="sxs-lookup"><span data-stu-id="220ea-116">A Dynamic Data Web site.</span></span> <span data-ttu-id="220ea-117">有关详细信息，请参阅[演练： 创建一个新动态数据网站使用基架](http://msdn.microsoft.com/library/1564aef2-9103-436a-9806-c8ad7abd616a)。</span><span class="sxs-lookup"><span data-stu-id="220ea-117">For more information, see [Walkthrough: Creating a New Dynamic Data Web Site Using Scaffolding](http://msdn.microsoft.com/library/1564aef2-9103-436a-9806-c8ad7abd616a).</span></span>  
  
 <span data-ttu-id="220ea-118">此功能的运行时代码示例，请参阅：[运行](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel)。</span><span class="sxs-lookup"><span data-stu-id="220ea-118">See a run-time code example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel).</span></span>  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException">
      <span data-ttu-id="220ea-119">如果存在数据上下文注册错误，则可由任何方法引发。</span>
      <span class="sxs-lookup">
        <span data-stu-id="220ea-119">Can be thrown by any method if there has been a data context registration error.</span>
      </span>
    </exception>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="220ea-120">实例化 <see cref="T:System.Web.DynamicData.MetaModel" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-120">Instantiates a new instance of the <see cref="T:System.Web.DynamicData.MetaModel" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaModel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaModel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="220ea-121">实例化 <see cref="T:System.Web.DynamicData.MetaModel" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-121">Instantiates a new instance of the <see cref="T:System.Web.DynamicData.MetaModel" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="220ea-122">通常情况下调用<xref:System.Web.DynamicData.MetaModel.%23ctor%2A>构造函数中的`Application_Start`Global.asax 文件的方法。</span><span class="sxs-lookup"><span data-stu-id="220ea-122">You typically call the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor in the `Application_Start` method of the Global.asax file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="220ea-123">下面的示例演示如何使用<xref:System.Web.DynamicData.MetaModel.%23ctor%2A>构造函数来执行以下任务：</span><span class="sxs-lookup"><span data-stu-id="220ea-123">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="220ea-124">实例化<xref:System.Web.DynamicData.MetaModel>类。</span><span class="sxs-lookup"><span data-stu-id="220ea-124">Instantiate the <xref:System.Web.DynamicData.MetaModel> class.</span></span>  
  
-   <span data-ttu-id="220ea-125">初始化和注册<xref:System.Web.DynamicData.MetaModel>实例。</span><span class="sxs-lookup"><span data-stu-id="220ea-125">Initialize and register the <xref:System.Web.DynamicData.MetaModel> instance.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#99](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/global.asax.cs#99)]
 [!code-vb[System.Web.DynamicData.MetaModel#99](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/global.asax.vb#99)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaModel (bool registerGlobally);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool registerGlobally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (registerGlobally As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaModel(bool registerGlobally);" />
      <MemberSignature Language="F#" Value="new System.Web.DynamicData.MetaModel : bool -&gt; System.Web.DynamicData.MetaModel" Usage="new System.Web.DynamicData.MetaModel registerGlobally" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="registerGlobally" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="registerGlobally">
          <span data-ttu-id="220ea-126">
            <see langword="true" /> 指示模型是全局注册的，否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-126">
              <see langword="true" /> to indicate that the model is registered globally; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="220ea-127">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-127">The default is <see langword="true" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="220ea-128">实例化 <see cref="T:System.Web.DynamicData.MetaModel" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-128">Instantiates a new instance of the <see cref="T:System.Web.DynamicData.MetaModel" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="220ea-129">此构造函数确定，以便可以检索使用是否全局注册的数据模型<xref:System.Web.DynamicData.MetaModel.GetModel%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="220ea-129">This constructor determines whether the data model is registered globally so that it can be retrieved using the <xref:System.Web.DynamicData.MetaModel.GetModel%2A> method.</span></span> <span data-ttu-id="220ea-130">它可以用来创建多个模型，避免类型冲突时使用相同的实体类型。</span><span class="sxs-lookup"><span data-stu-id="220ea-130">It enables you to create multiple models and use the same entity types while avoiding type conflicts.</span></span>  
  
 <span data-ttu-id="220ea-131">通常情况下调用<xref:System.Web.DynamicData.MetaModel.%23ctor%2A>构造函数中的`Application_Start`Global.asax 文件的方法。</span><span class="sxs-lookup"><span data-stu-id="220ea-131">You typically call the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor in the `Application_Start` method of the Global.asax file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaTable CreateTable (System.Web.DynamicData.ModelProviders.TableProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaTable CreateTable(class System.Web.DynamicData.ModelProviders.TableProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateTable (provider As TableProvider) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaTable ^ CreateTable(System::Web::DynamicData::ModelProviders::TableProvider ^ provider);" />
      <MemberSignature Language="F#" Value="abstract member CreateTable : System.Web.DynamicData.ModelProviders.TableProvider -&gt; System.Web.DynamicData.MetaTable&#xA;override this.CreateTable : System.Web.DynamicData.ModelProviders.TableProvider -&gt; System.Web.DynamicData.MetaTable" Usage="metaModel.CreateTable provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.DynamicData.ModelProviders.TableProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="220ea-132">表的提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-132">The provider for the table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="220ea-133">实例化一个 <see cref="T:System.Web.DynamicData.MetaTable" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-133">Instantiates a <see cref="T:System.Web.DynamicData.MetaTable" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="220ea-134">表的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-134">A new instance of the table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="220ea-135"><xref:System.Web.DynamicData.MetaModel.CreateTable%2A>可以重写方法，以实例化派生的类型。</span><span class="sxs-lookup"><span data-stu-id="220ea-135">The <xref:System.Web.DynamicData.MetaModel.CreateTable%2A> method can be overridden to instantiate a derived type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
        <altmember cref="T:System.Web.DynamicData.ModelProviders.TableProvider" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaModel Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.DynamicData.MetaModel Default" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::DynamicData::MetaModel ^ Default { System::Web::DynamicData::MetaModel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Web.DynamicData.MetaModel" Usage="System.Web.DynamicData.MetaModel.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="220ea-136">获取应用程序创建的数据模型的第一个实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-136">Gets the first instance of a data model that is created by the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="220ea-137">数据模型实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-137">The data-model instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="220ea-138">此属性提供了简单的方法来引用默认数据模型实例。</span><span class="sxs-lookup"><span data-stu-id="220ea-138">This property provides a simple way to reference the default data-model instance.</span></span> <span data-ttu-id="220ea-139">如果应用程序使用多个模型，则必须提供您自己的方式来存储对其他数据模型的引用。</span><span class="sxs-lookup"><span data-stu-id="220ea-139">If the application uses multiple models, you must provide your own way to store references to the additional data models.</span></span> <span data-ttu-id="220ea-140">若要查找特定的数据模型，请调用<xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="220ea-140">To find a specific data model, call the <xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="220ea-141">下面的示例演示如何使用<xref:System.Web.DynamicData.MetaModel.Default%2A>中的属性<xref:System.Web.DynamicData.MetaModel.GetModel%2A>方法以获取默认数据模型。</span><span class="sxs-lookup"><span data-stu-id="220ea-141">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.Default%2A> property in the <xref:System.Web.DynamicData.MetaModel.GetModel%2A> method to get the default data model.</span></span>  
  
 <span data-ttu-id="220ea-142">有关完整示例，请参阅<xref:System.Web.DynamicData.MetaModel>类概述。</span><span class="sxs-lookup"><span data-stu-id="220ea-142">For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#22)]
 [!code-vb[System.Web.DynamicData.MetaModel#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DynamicDataFolderVirtualPath">
      <MemberSignature Language="C#" Value="public string DynamicDataFolderVirtualPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicDataFolderVirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicDataFolderVirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicDataFolderVirtualPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicDataFolderVirtualPath : string with get, set" Usage="System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaModel.DynamicDataFolderVirtualPath</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="220ea-143">获取或设置 DynamicData 文件夹在网站中的虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-143">Gets or sets the virtual path of the DynamicData folder in the Web site.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="220ea-144">DynamicData 文件夹的虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-144">The virtual path of the DynamicData folder.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="220ea-145">此属性可以更改 DynamicData 文件夹的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="220ea-145">This property enables you to change the virtual path of the DynamicData folder.</span></span> <span data-ttu-id="220ea-146">默认值为"~/DynamicData"。</span><span class="sxs-lookup"><span data-stu-id="220ea-146">The default value is "~/DynamicData".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTemplateFactory">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.EntityTemplateFactory EntityTemplateFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.EntityTemplateFactory EntityTemplateFactory" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.EntityTemplateFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityTemplateFactory As EntityTemplateFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::EntityTemplateFactory ^ EntityTemplateFactory { System::Web::DynamicData::EntityTemplateFactory ^ get(); void set(System::Web::DynamicData::EntityTemplateFactory ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EntityTemplateFactory : System.Web.DynamicData.EntityTemplateFactory with get, set" Usage="System.Web.DynamicData.MetaModel.EntityTemplateFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.EntityTemplateFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="220ea-147">获取或设置与模型关联的 <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-147">Gets or sets the <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> object that is associated with the model.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="220ea-148">与模型关联的 <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> 对象的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-148">An instance of the <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> object that is associated with the model.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldTemplateFactory">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.IFieldTemplateFactory FieldTemplateFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.IFieldTemplateFactory FieldTemplateFactory" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.FieldTemplateFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property FieldTemplateFactory As IFieldTemplateFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::IFieldTemplateFactory ^ FieldTemplateFactory { System::Web::DynamicData::IFieldTemplateFactory ^ get(); void set(System::Web::DynamicData::IFieldTemplateFactory ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FieldTemplateFactory : System.Web.DynamicData.IFieldTemplateFactory with get, set" Usage="System.Web.DynamicData.MetaModel.FieldTemplateFactory" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaModel.FieldTemplateFactory</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.IFieldTemplateFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="220ea-149">获取或设置自定义 <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> 接口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-149">Gets or sets a custom <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="220ea-150">
            <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> 接口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-150">The <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> interface.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="220ea-151"><xref:System.Web.DynamicData.IFieldTemplateFactory>接口允许您指定为表中的列创建的字段模板。</span><span class="sxs-lookup"><span data-stu-id="220ea-151">The <xref:System.Web.DynamicData.IFieldTemplateFactory> interface lets you specify which field templates are created for the table columns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterFactory">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.FilterFactory FilterFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.FilterFactory FilterFactory" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.FilterFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterFactory As FilterFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::FilterFactory ^ FilterFactory { System::Web::DynamicData::FilterFactory ^ get(); void set(System::Web::DynamicData::FilterFactory ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterFactory : System.Web.DynamicData.FilterFactory with get, set" Usage="System.Web.DynamicData.MetaModel.FilterFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.FilterFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="220ea-152">获取或设置与模型关联的 <see cref="T:System.Web.DynamicData.FilterFactory" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-152">Gets or sets the <see cref="T:System.Web.DynamicData.FilterFactory" /> object that is associated with the model.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="220ea-153">与模型关联的 <see cref="T:System.Web.DynamicData.FilterFactory" /> 对象的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-153">An instance of the <see cref="T:System.Web.DynamicData.FilterFactory" /> object that is associated with the model.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string tableName, string action, object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string tableName, string action, object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (tableName As String, action As String, row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ tableName, System::String ^ action, System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string * string * obj -&gt; string&#xA;override this.GetActionPath : string * string * obj -&gt; string" Usage="metaModel.GetActionPath (tableName, action, row)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.GetActionPath(System.String,System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="tableName">
          <span data-ttu-id="220ea-154">对其应用操作的表的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-154">The name of the table that the action applies to.</span>
          </span>
        </param>
        <param name="action">
          <span data-ttu-id="220ea-155">要应用于表的操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-155">The action to apply to the table.</span>
          </span>
        </param>
        <param name="row">
          <span data-ttu-id="220ea-156">一个对象，表示表中的一行数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-156">An object that represents a single row of data in a table.</span>
          </span>
          <span data-ttu-id="220ea-157">
            <c>row</c> 用于提供查询字符串参数的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-157">
              <c>row</c> is used to provide values for query-string parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="220ea-158">返回与特定表关联的操作路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-158">Returns the action path that is associated with a specific table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="220ea-159">与路由关联的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-159">The URL that is associated with the route.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="220ea-160">路由取决于表名称和操作的组合。</span><span class="sxs-lookup"><span data-stu-id="220ea-160">The route is determined by the combination of the table name and action.</span></span>  
  
 <span data-ttu-id="220ea-161">[运行](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=PathModel.aspx)联机示例的此功能。</span><span class="sxs-lookup"><span data-stu-id="220ea-161">[Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=PathModel.aspx) an online example of this feature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="220ea-162">下面的示例演示如何使用<xref:System.Web.DynamicData.MetaModel.GetActionPath%28System.String%2CSystem.String%2CSystem.Object%29>方法计算路由路径 （确定的 URL） 指定的表。</span><span class="sxs-lookup"><span data-stu-id="220ea-162">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetActionPath%28System.String%2CSystem.String%2CSystem.Object%29> method to evaluate the routing path (determine the URL) for a specified table.</span></span> <span data-ttu-id="220ea-163">有关完整示例，请参见<xref:System.Web.DynamicData.MetaModel>。</span><span class="sxs-lookup"><span data-stu-id="220ea-163">For a complete example, see <xref:System.Web.DynamicData.MetaModel>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#23](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#23)]
 [!code-vb[System.Web.DynamicData.MetaModel#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModel">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaModel GetModel (Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaModel GetModel(class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetModel(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetModel (contextType As Type) As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaModel ^ GetModel(Type ^ contextType);" />
      <MemberSignature Language="F#" Value="static member GetModel : Type -&gt; System.Web.DynamicData.MetaModel" Usage="System.Web.DynamicData.MetaModel.GetModel contextType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contextType">
          <span data-ttu-id="220ea-164">数据模型中定义的数据上下文的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-164">The type of the data context as defined in the data model.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="220ea-165">返回指定上下文的数据模型实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-165">Returns the data-model instance for the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="220ea-166">与指定上下文类型关联的数据模型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-166">The data model that is associated with the specified context type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="220ea-167">下面的示例演示如何使用<xref:System.Web.DynamicData.MetaModel.GetModel%28System.Type%29>方法来执行以下任务：</span><span class="sxs-lookup"><span data-stu-id="220ea-167">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetModel%28System.Type%29> method to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="220ea-168">获取默认数据模型。</span><span class="sxs-lookup"><span data-stu-id="220ea-168">Getting the default data model.</span></span>  
  
-   <span data-ttu-id="220ea-169">获取指定传入的上下文类型的数据模型。</span><span class="sxs-lookup"><span data-stu-id="220ea-169">Getting the data model specified by the passed context type.</span></span>  
  
 <span data-ttu-id="220ea-170">有关完整示例，请参阅<xref:System.Web.DynamicData.MetaModel>类概述。</span><span class="sxs-lookup"><span data-stu-id="220ea-170">For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#22)]
 [!code-vb[System.Web.DynamicData.MetaModel#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTable">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="220ea-171">找不到表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-171">The table was not found.</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="220ea-172">返回描述数据模型表的元数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-172">Returns the metadata that describes a data model table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="220ea-173"><xref:System.Web.DynamicData.MetaTable>重载方法返回的对象包含与指定的表相关联的元数据信息。</span><span class="sxs-lookup"><span data-stu-id="220ea-173">The <xref:System.Web.DynamicData.MetaTable> object that is returned by the overloaded methods contains the metadata information that is associated with the specified table.</span></span>  
  
 <span data-ttu-id="220ea-174">[运行](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=GetTable.aspx)联机示例的此功能。</span><span class="sxs-lookup"><span data-stu-id="220ea-174">[Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=GetTable.aspx) an online example of this feature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="220ea-175">下面的示例演示如何使用<xref:System.Web.DynamicData.MetaModel.GetTable%2A>重载的方法来执行以下任务：</span><span class="sxs-lookup"><span data-stu-id="220ea-175">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> overloaded methods to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="220ea-176">获取<xref:System.Web.DynamicData.MetaTable>指定表的对象。</span><span class="sxs-lookup"><span data-stu-id="220ea-176">Get the <xref:System.Web.DynamicData.MetaTable> object for the specified table.</span></span>  
  
-   <span data-ttu-id="220ea-177">访问所包含的元数据信息<xref:System.Web.DynamicData.MetaTable>对象。</span><span class="sxs-lookup"><span data-stu-id="220ea-177">Access the metadata information that is contained by the <xref:System.Web.DynamicData.MetaTable> object.</span></span>  
  
 <span data-ttu-id="220ea-178">该示例包含一个页面及其代码隐藏文件。</span><span class="sxs-lookup"><span data-stu-id="220ea-178">The example consists of a page and its code-behind file.</span></span>  
  
 [!code-aspx-csharp[System.Web.DynamicData.MetaModel#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx#3)] -->
 [!code-aspx-vb[System.Web.DynamicData.MetaModel#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/GetTable.aspx#3)] --> 
  
 [!code-csharp[System.Web.DynamicData.MetaModel#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#4)]
 [!code-vb[System.Web.DynamicData.MetaModel#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTable (string uniqueTableName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTable(string uniqueTableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetTable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable (uniqueTableName As String) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTable(System::String ^ uniqueTableName);" />
      <MemberSignature Language="F#" Value="member this.GetTable : string -&gt; System.Web.DynamicData.MetaTable" Usage="metaModel.GetTable uniqueTableName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueTableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueTableName">
          <span data-ttu-id="220ea-179">标识数据模型中表的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-179">The name that identifies the table in the data model.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="220ea-180">返回与指定表关联的元数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-180">Returns the metadata that is associated with the specified table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="220ea-181">描述指定表的元数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-181">The metadata that describes the specified table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="220ea-182">该名称唯一标识数据模型中的表，并用于生成相关的路由 URL。</span><span class="sxs-lookup"><span data-stu-id="220ea-182">The name uniquely identifies a table in the data model and is used to generate the related URL for routing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="220ea-183">下面的示例演示如何使用<xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%29>方法来获取指定的表的元数据。</span><span class="sxs-lookup"><span data-stu-id="220ea-183">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%29> method to obtain the metadata for the specified table.</span></span> <span data-ttu-id="220ea-184">有关完整示例，请参见<xref:System.Web.DynamicData.MetaModel.GetTable%2A>。</span><span class="sxs-lookup"><span data-stu-id="220ea-184">For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#42](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#42)]
 [!code-vb[System.Web.DynamicData.MetaModel#42](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="220ea-185">在数据模型中找不到名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-185">The name was not found in the data model.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTable (Type entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTable(class System.Type entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetTable(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable (entityType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTable(Type ^ entityType);" />
      <MemberSignature Language="F#" Value="member this.GetTable : Type -&gt; System.Web.DynamicData.MetaTable" Usage="metaModel.GetTable entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="entityType">
          <span data-ttu-id="220ea-186">标识数据模型中表的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-186">The type that identifies the table in the data model.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="220ea-187">返回描述指定表的元数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-187">Returns the metadata that describes the specified table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="220ea-188">描述指定表的元数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-188">The metadata that describes the specified table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="220ea-189">下面的示例演示如何使用<xref:System.Web.DynamicData.MetaModel.GetTable%28System.Type%29>方法来获取指定的表的元数据。</span><span class="sxs-lookup"><span data-stu-id="220ea-189">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%28System.Type%29> method to obtain the metadata for the specified table.</span></span> <span data-ttu-id="220ea-190">有关完整示例，请参见<xref:System.Web.DynamicData.MetaModel.GetTable%2A>。</span><span class="sxs-lookup"><span data-stu-id="220ea-190">For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#41](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#41)]
 [!code-vb[System.Web.DynamicData.MetaModel#41](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="220ea-191">在数据模型中找不到类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-191">The type was not found in the data model.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTable (string tableName, Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTable(string tableName, class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable (tableName As String, contextType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTable(System::String ^ tableName, Type ^ contextType);" />
      <MemberSignature Language="F#" Value="member this.GetTable : string * Type -&gt; System.Web.DynamicData.MetaTable" Usage="metaModel.GetTable (tableName, contextType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="tableName">
          <span data-ttu-id="220ea-192">表的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-192">The name of the table.</span>
          </span>
        </param>
        <param name="contextType">
          <span data-ttu-id="220ea-193">要搜索表的数据上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-193">The data context to search for the table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="220ea-194">返回描述指定表的元数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-194">Returns the metadata that describes the specified table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="220ea-195">描述指定表的元数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-195">The metadata that describes the specified table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="220ea-196">下面的示例演示如何使用<xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%2CSystem.Type%29>方法来获取指定的表的元数据。</span><span class="sxs-lookup"><span data-stu-id="220ea-196">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%2CSystem.Type%29> method to obtain the metadata for the specified table.</span></span> <span data-ttu-id="220ea-197">有关完整示例，请参见<xref:System.Web.DynamicData.MetaModel.GetTable%2A>。</span><span class="sxs-lookup"><span data-stu-id="220ea-197">For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#43](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#43)]
 [!code-vb[System.Web.DynamicData.MetaModel#43](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#43)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="220ea-198">
            <paramref name="tablename" /> 或 <paramref name="contextType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-198">
              <paramref name="tablename" /> or <paramref name="contextType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="220ea-199">未注册上下文或数据上下文中不存在表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-199">The context is not registered or the table does not exist in the data context.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterContext">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="220ea-200">注册数据上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-200">Registers the data context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="220ea-201">可以使用的属性来定义数据上下文初始化信息<xref:System.Web.DynamicData.ContextConfiguration>类。</span><span class="sxs-lookup"><span data-stu-id="220ea-201">You can define data-context initialization information by using the properties of the <xref:System.Web.DynamicData.ContextConfiguration> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Func&lt;object&gt; contextFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Func`1&lt;object&gt; contextFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextFactory As Func(Of Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Func&lt;System::Object ^&gt; ^ contextFactory);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : Func&lt;obj&gt; -&gt; unit&#xA;override this.RegisterContext : Func&lt;obj&gt; -&gt; unit" Usage="metaModel.RegisterContext contextFactory" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Func{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextFactory" Type="System.Func&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="contextFactory">
          <span data-ttu-id="220ea-202">实例化数据上下文的工厂。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-202">The factory for instantiating the data context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="220ea-203">注册上下文工厂指定的数据上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-203">Registers the data context that is specified by a context factory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="220ea-204">此方法使用由定义的默认上下文信息<xref:System.Web.DynamicData.ContextConfiguration>类。</span><span class="sxs-lookup"><span data-stu-id="220ea-204">This method uses the default context information that is defined by the <xref:System.Web.DynamicData.ContextConfiguration> class.</span></span> <span data-ttu-id="220ea-205">它可以用来使用自己的构造函数实例化的数据上下文。</span><span class="sxs-lookup"><span data-stu-id="220ea-205">It enables you to instantiate the data context by using your own constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Type ^ contextType);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : Type -&gt; unit&#xA;override this.RegisterContext : Type -&gt; unit" Usage="metaModel.RegisterContext contextType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contextType">
          <span data-ttu-id="220ea-206">数据模型中定义的数据上下文的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-206">The type of the data context as defined in the data model.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="220ea-207">注册数据上下文实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-207">Registers a data-context instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="220ea-208">此方法使用的默认上下文信息由定义<xref:System.Web.DynamicData.ContextConfiguration>类。</span><span class="sxs-lookup"><span data-stu-id="220ea-208">This method uses the default context information as defined by the <xref:System.Web.DynamicData.ContextConfiguration> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(System::Web::DynamicData::ModelProviders::DataModelProvider ^ dataModelProvider);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : System.Web.DynamicData.ModelProviders.DataModelProvider -&gt; unit&#xA;override this.RegisterContext : System.Web.DynamicData.ModelProviders.DataModelProvider -&gt; unit" Usage="metaModel.RegisterContext dataModelProvider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataModelProvider" Type="System.Web.DynamicData.ModelProviders.DataModelProvider" />
      </Parameters>
      <Docs>
        <param name="dataModelProvider">
          <span data-ttu-id="220ea-209">数据模型的提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-209">A provider for the data model.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="220ea-210">通过使用数据模型提供程序来注册数据上下文实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-210">Registers a data context instance by using a data-model provider</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Func&lt;object&gt; contextFactory, System.Web.DynamicData.ContextConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Func`1&lt;object&gt; contextFactory, class System.Web.DynamicData.ContextConfiguration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextFactory As Func(Of Object), configuration As ContextConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Func&lt;System::Object ^&gt; ^ contextFactory, System::Web::DynamicData::ContextConfiguration ^ configuration);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : Func&lt;obj&gt; * System.Web.DynamicData.ContextConfiguration -&gt; unit&#xA;override this.RegisterContext : Func&lt;obj&gt; * System.Web.DynamicData.ContextConfiguration -&gt; unit" Usage="metaModel.RegisterContext (contextFactory, configuration)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextFactory" Type="System.Func&lt;System.Object&gt;" />
        <Parameter Name="configuration" Type="System.Web.DynamicData.ContextConfiguration" />
      </Parameters>
      <Docs>
        <param name="contextFactory">
          <span data-ttu-id="220ea-211">用于实例化数据模型上下文的委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-211">A delegate that is used to instantiate the data model context.</span>
          </span>
        </param>
        <param name="configuration">
          <span data-ttu-id="220ea-212">
            <see cref="T:System.Web.DynamicData.ContextConfiguration" /> 类定义的上下文信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-212">The context information as defined by the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="220ea-213">通过使用指定的上下文配置并启用自定义构造函数，注册数据上下文实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-213">Registers a data-context instance by using the specified context configuration and by enabling a custom constructor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="220ea-214">在这种方法的上下文工厂，可通过使用自定义构造函数实例化数据模型上下文。</span><span class="sxs-lookup"><span data-stu-id="220ea-214">The context factory in this method enables you to instantiate a data model context by using a custom constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="220ea-215">
            <paramref name="contextFactory" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-215">
              <paramref name="contextFactory" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="220ea-216">
            <paramref name="contextType" /> 实例化的 <paramref name="contextFactory" /> 无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-216">The <paramref name="contextType" /> that is instantiated by <paramref name="contextFactory" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Type contextType, System.Web.DynamicData.ContextConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Type contextType, class System.Web.DynamicData.ContextConfiguration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextType As Type, configuration As ContextConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Type ^ contextType, System::Web::DynamicData::ContextConfiguration ^ configuration);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : Type * System.Web.DynamicData.ContextConfiguration -&gt; unit&#xA;override this.RegisterContext : Type * System.Web.DynamicData.ContextConfiguration -&gt; unit" Usage="metaModel.RegisterContext (contextType, configuration)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
        <Parameter Name="configuration" Type="System.Web.DynamicData.ContextConfiguration" />
      </Parameters>
      <Docs>
        <param name="contextType">
          <span data-ttu-id="220ea-217">数据模型中定义的数据上下文的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-217">The type of the data context as defined in the data model.</span>
          </span>
        </param>
        <param name="configuration">
          <span data-ttu-id="220ea-218">
            <see cref="T:System.Web.DynamicData.ContextConfiguration" /> 类定义的上下文的配置信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-218">The configuration information for the context, as defined by the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="220ea-219">使用指定的上下文配置注册数据上下文实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-219">Registers a data-context instance by using the specified context configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="220ea-220">下面的示例演示如何使用<xref:System.Web.DynamicData.MetaModel.RegisterContext%28System.Type%2CSystem.Web.DynamicData.ContextConfiguration%29>方法以向基架已启用，注册数据上下文所指定的`configuration`参数。</span><span class="sxs-lookup"><span data-stu-id="220ea-220">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.RegisterContext%28System.Type%2CSystem.Web.DynamicData.ContextConfiguration%29> method to register a data context with scaffolding enabled, as specified by the `configuration` parameter.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#99](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/global.asax.cs#99)]
 [!code-vb[System.Web.DynamicData.MetaModel#99](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/global.asax.vb#99)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="220ea-221">
            <paramref name="contextType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-221">
              <paramref name="contextType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public virtual void RegisterContext (System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider, System.Web.DynamicData.ContextConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider, class System.Web.DynamicData.ContextConfiguration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(System::Web::DynamicData::ModelProviders::DataModelProvider ^ dataModelProvider, System::Web::DynamicData::ContextConfiguration ^ configuration);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : System.Web.DynamicData.ModelProviders.DataModelProvider * System.Web.DynamicData.ContextConfiguration -&gt; unit&#xA;override this.RegisterContext : System.Web.DynamicData.ModelProviders.DataModelProvider * System.Web.DynamicData.ContextConfiguration -&gt; unit" Usage="metaModel.RegisterContext (dataModelProvider, configuration)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataModelProvider" Type="System.Web.DynamicData.ModelProviders.DataModelProvider" />
        <Parameter Name="configuration" Type="System.Web.DynamicData.ContextConfiguration" />
      </Parameters>
      <Docs>
        <param name="dataModelProvider">
          <span data-ttu-id="220ea-222">数据模型的提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-222">A provider for the data model.</span>
          </span>
        </param>
        <param name="configuration">
          <span data-ttu-id="220ea-223">
            <see cref="T:System.Web.DynamicData.ContextConfiguration" /> 类定义的上下文信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-223">The context information as defined by the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="220ea-224">通过使用指定的上下文配置并启用数据模型提供程序，注册数据上下文实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-224">Registers a data-context instance by using the specified context configuration and by enabling a data-model provider.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="220ea-225">
            <paramref name="dataModelProvider" /> 或 <paramref name="configuration" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-225">
              <paramref name="dataModelProvider" /> or <paramref name="configuration" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="220ea-226">已注册 <paramref name="contextType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-226">
              <paramref name="contextType" /> is already registered.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResetRegistrationException">
      <MemberSignature Language="C#" Value="public static void ResetRegistrationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetRegistrationException() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.ResetRegistrationException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ResetRegistrationException ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ResetRegistrationException();" />
      <MemberSignature Language="F#" Value="static member ResetRegistrationException : unit -&gt; unit" Usage="System.Web.DynamicData.MetaModel.ResetRegistrationException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="220ea-227">重置可能发生的任何前一个上下文注册错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-227">Resets any previous context registration error that might have occurred.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="220ea-228">时数据上下文注册过程中发生错误，异常缓存，并引发对所有后续操作。</span><span class="sxs-lookup"><span data-stu-id="220ea-228">When an error occurs during data-context registration, the exception is cached and thrown on all subsequent operations.</span></span> <span data-ttu-id="220ea-229">例如，如果应用程序启动时出现错误，它将引发对每个请求。</span><span class="sxs-lookup"><span data-stu-id="220ea-229">For example, if an error occurs at application start, it is thrown on every request.</span></span> <span data-ttu-id="220ea-230">调用以清除该错误并启用一个新的上下文注册要执行此方法。</span><span class="sxs-lookup"><span data-stu-id="220ea-230">Call this method to clear the error and to enable a new context registration to be performed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tables">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaTable&gt; Tables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.DynamicData.MetaTable&gt; Tables" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.Tables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tables As ReadOnlyCollection(Of MetaTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaTable ^&gt; ^ Tables { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaTable ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Tables : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaTable&gt;" Usage="System.Web.DynamicData.MetaModel.Tables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaTable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="220ea-231">获取属于数据模型一部分的所有表的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-231">Gets a collection of all the tables that are part of the data model.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="220ea-232">一个包含属于数据模型的表的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-232">A collection that contains the tables that belong to the data model.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="220ea-233">集合中包含数据模型，其中包括不可见的表中的所有表 （不是动态数据基架的一部分）。</span><span class="sxs-lookup"><span data-stu-id="220ea-233">The collection contains all the tables in the data model, which includes the tables that are not visible (are not part of Dynamic Data scaffolding).</span></span>  
  
 <span data-ttu-id="220ea-234">[运行](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=TablesMenu.aspx)联机示例的此功能。</span><span class="sxs-lookup"><span data-stu-id="220ea-234">[Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=TablesMenu.aspx) an online example of this feature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="220ea-235">下面的示例演示如何使用<xref:System.Web.DynamicData.MetaModel.Tables%2A>和<xref:System.Web.DynamicData.MetaModel.VisibleTables%2A>属性执行以下任务：</span><span class="sxs-lookup"><span data-stu-id="220ea-235">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.Tables%2A> and <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> properties to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="220ea-236">数据模型中获取所有表的集合并显示在`GridView`控件。</span><span class="sxs-lookup"><span data-stu-id="220ea-236">Get a collection of all the tables in a data model and show them in a `GridView` control.</span></span>  
  
-   <span data-ttu-id="220ea-237">获取可见表的集合中的数据模型和其显示在`GridView`控件。</span><span class="sxs-lookup"><span data-stu-id="220ea-237">Get a collection of the visible tables in a data model and show them in a `GridView` control.</span></span>  
  
 <span data-ttu-id="220ea-238">该示例包含一个页面及其代码隐藏文件。</span><span class="sxs-lookup"><span data-stu-id="220ea-238">The example consists of a page and its code-behind file.</span></span>  
  
 [!code-aspx-csharp[System.Web.DynamicData.MetaModel#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/TablesMenu.aspx#5)]
 [!code-aspx-vb[System.Web.DynamicData.MetaModel#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/TablesMenu.aspx#5)]  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/TablesMenu.aspx.cs#6)]
 [!code-vb[System.Web.DynamicData.MetaModel#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/TablesMenu.aspx.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetTable">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="220ea-239">尝试获取与指定表关联的元数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-239">Attempts to get the metadata that is associated with the specified table.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetTable">
      <MemberSignature Language="C#" Value="public bool TryGetTable (string uniqueTableName, out System.Web.DynamicData.MetaTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetTable(string uniqueTableName, [out] class System.Web.DynamicData.MetaTable&amp; table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetTable (uniqueTableName As String, ByRef table As MetaTable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetTable(System::String ^ uniqueTableName, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaTable ^ % table);" />
      <MemberSignature Language="F#" Value="member this.TryGetTable : string *  -&gt; bool" Usage="metaModel.TryGetTable (uniqueTableName, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueTableName" Type="System.String" />
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" RefType="out" />
      </Parameters>
      <Docs>
        <param name="uniqueTableName">
          <span data-ttu-id="220ea-240">唯一标识表的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-240">The name that uniquely identifies the table.</span>
          </span>
        </param>
        <param name="table">
          <span data-ttu-id="220ea-241">当此方法返回时，如果它找到了请求的表，则包含该表的元数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-241">When this method returns, and if it has found the requested table, contains the metadata for that table.</span>
          </span>
          <span data-ttu-id="220ea-242">此参数未经初始化即被传递。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-242">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="220ea-243">尝试获取与指定表关联的元数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-243">Attempts to get the metadata that is associated with the specified table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="220ea-244">如果找到了表元数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-244">
              <see langword="true" /> if the table metadata is found; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="220ea-245">此方法获取与指定的表相关联的元数据。</span><span class="sxs-lookup"><span data-stu-id="220ea-245">This method gets the metadata that is associated with the specified table.</span></span> <span data-ttu-id="220ea-246">如果找不到表，此方法返回`false`。</span><span class="sxs-lookup"><span data-stu-id="220ea-246">If the table is not found, this method returns `false`.</span></span> <span data-ttu-id="220ea-247">这不同于<xref:System.Web.DynamicData.MetaModel.GetTable%2A>方法，将引发异常，如果找不到表。</span><span class="sxs-lookup"><span data-stu-id="220ea-247">This differs from the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> method, which throws an exception if the table is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="220ea-248">
            <paramref name="uniqueTableName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-248">
              <paramref name="uniqueTableName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetTable">
      <MemberSignature Language="C#" Value="public bool TryGetTable (Type entityType, out System.Web.DynamicData.MetaTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetTable(class System.Type entityType, [out] class System.Web.DynamicData.MetaTable&amp; table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetTable (entityType As Type, ByRef table As MetaTable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetTable(Type ^ entityType, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaTable ^ % table);" />
      <MemberSignature Language="F#" Value="member this.TryGetTable : Type *  -&gt; bool" Usage="metaModel.TryGetTable (entityType, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entityType">
          <span data-ttu-id="220ea-249">表类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-249">The table type.</span>
          </span>
        </param>
        <param name="table">
          <span data-ttu-id="220ea-250">当此方法返回时，并且如果找到了请求的表，则包含指定表的元数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-250">When this method returns, and if the requested table has been found, contains the metadata for the specified table.</span>
          </span>
          <span data-ttu-id="220ea-251">此参数未经初始化即被传递。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-251">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="220ea-252">尝试获取与指定表关联的元数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-252">Attempts to get the metadata that is associated with the specified table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="220ea-253">如果找到了表元数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-253">
              <see langword="true" /> if the table metadata is found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="220ea-254">此方法获取与指定的表相关联的元数据。</span><span class="sxs-lookup"><span data-stu-id="220ea-254">This method gets the metadata that is associated with the specified table.</span></span> <span data-ttu-id="220ea-255">如果找不到表，此方法返回`false`。</span><span class="sxs-lookup"><span data-stu-id="220ea-255">If the table is not found, this method returns `false`.</span></span> <span data-ttu-id="220ea-256">这不同于<xref:System.Web.DynamicData.MetaModel.GetTable%2A>方法，将引发异常，如果找不到表。</span><span class="sxs-lookup"><span data-stu-id="220ea-256">This differs from the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> method, which throws an exception if the table is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="220ea-257">
            <paramref name="entityType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-257">
              <paramref name="entityType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VisibleTables">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Web.DynamicData.MetaTable&gt; VisibleTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class System.Web.DynamicData.MetaTable&gt; VisibleTables" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.VisibleTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisibleTables As List(Of MetaTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::Web::DynamicData::MetaTable ^&gt; ^ VisibleTables { System::Collections::Generic::List&lt;System::Web::DynamicData::MetaTable ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VisibleTables : System.Collections.Generic.List&lt;System.Web.DynamicData.MetaTable&gt;" Usage="System.Web.DynamicData.MetaModel.VisibleTables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Web.DynamicData.MetaTable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="220ea-258">获取数据模型中可见表的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-258">Gets a collection of the visible tables in the data model.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="220ea-259">可见表是指启用了基架的表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-259">A visible table refers to a table that has scaffolding enabled.</span>
          </span>
          <span data-ttu-id="220ea-260">这意味着它是具有 List.aspx 页的表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="220ea-260">This means that it is a table for which a List.aspx page exists.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="220ea-261">下面的示例演示如何使用<xref:System.Web.DynamicData.MetaModel.VisibleTables%2A>属性来获取数据模型中可见表的集合。</span><span class="sxs-lookup"><span data-stu-id="220ea-261">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> property to get a collection of the visible tables in the data model.</span></span> <span data-ttu-id="220ea-262">有关完整示例，请参阅<xref:System.Web.DynamicData.MetaModel>类概述。</span><span class="sxs-lookup"><span data-stu-id="220ea-262">For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#62](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/TablesMenu.aspx.cs#62)]
 [!code-vb[System.Web.DynamicData.MetaModel#62](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/TablesMenu.aspx.vb#62)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>