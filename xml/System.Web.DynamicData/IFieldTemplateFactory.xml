<Type Name="IFieldTemplateFactory" FullName="System.Web.DynamicData.IFieldTemplateFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6629feb94827f83ee1ad8afcadbb5136d479cf9e" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59744638" /></Metadata><TypeSignature Language="C#" Value="public interface IFieldTemplateFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFieldTemplateFactory" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.IFieldTemplateFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFieldTemplateFactory" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFieldTemplateFactory" />
  <TypeSignature Language="F#" Value="type IFieldTemplateFactory = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>定义由创建字段模板的对象实现的接口。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 必须由实现此类<xref:System.Web.DynamicData.FieldTemplateFactory>为了创建字段模板的类。 此接口提供了初始化的方法<xref:System.Web.DynamicData.FieldTemplateFactory>并创建字段模板。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateFieldTemplate">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.IFieldTemplate CreateFieldTemplate (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.DynamicData.IFieldTemplate CreateFieldTemplate(class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFieldTemplate (column As MetaColumn, mode As DataBoundControlMode, uiHint As String) As IFieldTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::IFieldTemplate ^ CreateFieldTemplate(System::Web::DynamicData::MetaColumn ^ column, System::Web::UI::WebControls::DataBoundControlMode mode, System::String ^ uiHint);" />
      <MemberSignature Language="F#" Value="abstract member CreateFieldTemplate : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode * string -&gt; System.Web.DynamicData.IFieldTemplate" Usage="iFieldTemplateFactory.CreateFieldTemplate (column, mode, uiHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.IFieldTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
        <Parameter Name="uiHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">指定要用于显示字段模板的数据列。</param>
        <param name="mode">指定字段模板的显示模式。</param>
        <param name="uiHint">指定要使用的字段模板。</param>
        <summary>使用 <see cref="T:System.Web.DynamicData.MetaColumn" /> 类、<see cref="T:System.Web.UI.WebControls.DataBoundControlMode" /> 类和 <see cref="P:System.Web.DynamicData.MetaColumn.UIHint" /> 属性创建字段模板的实例。</summary>
        <returns>在类中实现时的 <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> 对象的实例。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 动态数据字段模板是映射到数据模型中的数据类型的数据控件的 ASP.NET 用户控件。 字段模板通常派生自<xref:System.Web.DynamicData.FieldTemplateUserControl>，可以访问数据字段、 数据列和数据模型中的元数据的类。 动态数据项目提供默认字段模板，但您可以对其进行修改或创建自定义字段模板。 实现时，此方法创建字段模板基于数据列的数据列中，模式和<xref:System.Web.DynamicData.MetaColumn.UIHint%2A>属性。 您指定`uiHint`参数，如果你想要使用自定义字段模板呈现数据。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (System.Web.DynamicData.MetaModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.Web.DynamicData.MetaModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (model As MetaModel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::Web::DynamicData::MetaModel ^ model);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : System.Web.DynamicData.MetaModel -&gt; unit" Usage="iFieldTemplateFactory.Initialize model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="System.Web.DynamicData.MetaModel" />
      </Parameters>
      <Docs>
        <param name="model">指定字段模板使用的数据模型。</param>
        <summary>使用指定数据模型初始化 <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 动态数据使用的字段模板来显示各个数据字段。 字段模板通常是作为数据模型中的数据类型映射到数据控件中的各个字段的用户控件实现的。 此方法初始化<xref:System.Web.DynamicData.FieldTemplateFactory>类，该类用于创建字段模板的字段模板使用的数据模型将使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>