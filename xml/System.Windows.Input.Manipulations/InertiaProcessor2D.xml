<Type Name="InertiaProcessor2D" FullName="System.Windows.Input.Manipulations.InertiaProcessor2D">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0aac7e76de264cb3639927518029ab1596308b18" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39892103" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InertiaProcessor2D" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InertiaProcessor2D extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Manipulations.InertiaProcessor2D" />
  <TypeSignature Language="VB.NET" Value="Public Class InertiaProcessor2D" />
  <TypeSignature Language="C++ CLI" Value="public ref class InertiaProcessor2D" />
  <TypeSignature Language="F#" Value="type InertiaProcessor2D = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="5c37f-101">实现操作的位置、方向和平均半径的推断。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5c37f-101">Implements the extrapolation of a manipulation's position, orientation, and average radius.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c37f-102"><xref:System.Windows.Input.Manipulations.InertiaProcessor2D>对象使你的应用程序以通过模拟真实世界行为扩展元素的位置、 方向和其他属性。</span><span class="sxs-lookup"><span data-stu-id="5c37f-102">An <xref:System.Windows.Input.Manipulations.InertiaProcessor2D> object enables your application to extrapolate an element's location, orientation, and other properties by simulating real-world behavior.</span></span>  
  
 <span data-ttu-id="5c37f-103">例如，当用户移动某个元素，然后将其释放，元素可以继续移动、 减速，然后慢慢停止。</span><span class="sxs-lookup"><span data-stu-id="5c37f-103">For instance, when a user moves an element and then releases it, the element can continue moving, decelerate, and then slowly stop.</span></span> <span data-ttu-id="5c37f-104">惯性处理器实现通过使仿射二维值 （原点、 缩放、 平移和旋转） 在指定时间段指定的减速速率在更改此行为。</span><span class="sxs-lookup"><span data-stu-id="5c37f-104">An inertia processor implements this behavior by causing the affine 2-D values (origin, scale, translation, and rotation) to change over a specified time at a specified deceleration rate.</span></span>  
  
 <span data-ttu-id="5c37f-105">惯性处理器本身不会导致移动和减速的元素。</span><span class="sxs-lookup"><span data-stu-id="5c37f-105">An inertia processor by itself does not cause an element to move and decelerate.</span></span> <span data-ttu-id="5c37f-106">应用程序接收来自惯性处理器的信息，并根据需要向应用程序特定的元素应用的值。</span><span class="sxs-lookup"><span data-stu-id="5c37f-106">Your application receives information from an inertia processor and applies the values as needed to an application-specific element.</span></span> <span data-ttu-id="5c37f-107">通常情况下，应用程序使用从惯性处理器接收到的信息来更改位置、 大小或方向的元素。</span><span class="sxs-lookup"><span data-stu-id="5c37f-107">Typically, an application uses the information received from an inertia processor to change the location, size or orientation of an element.</span></span>  
  
 <span data-ttu-id="5c37f-108">惯性处理通常与操作处理结合使用。</span><span class="sxs-lookup"><span data-stu-id="5c37f-108">Inertia processing is typically used in conjunction with manipulation processing.</span></span> <span data-ttu-id="5c37f-109">有关更多信息，请参见 <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D> 类。</span><span class="sxs-lookup"><span data-stu-id="5c37f-109">For more information, see the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InertiaProcessor2D ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.InertiaProcessor2D.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InertiaProcessor2D();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c37f-110">初始化 <see cref="T:System.Windows.Input.Manipulations.InertiaProcessor2D" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c37f-110">Initializes a new instance of the <see cref="T:System.Windows.Input.Manipulations.InertiaProcessor2D" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete (long timestamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complete(int64 timestamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete (timestamp As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete(long timestamp);" />
      <MemberSignature Language="F#" Value="member this.Complete : int64 -&gt; unit" Usage="inertiaProcessor2D.Complete timestamp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="timestamp">
          <span data-ttu-id="5c37f-111">用于完成外推的时间戳（以 100 纳秒为单位的时钟周期）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c37f-111">The timestamp to complete extrapolation, in 100-nanosecond ticks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c37f-112">通过使用指定时间戳完成最终外推并引发 <see cref="E:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c37f-112">Completes final extrapolation by using the specified timestamp and raises the <see cref="E:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c37f-113">时间戳是以 100 毫微秒为单位。</span><span class="sxs-lookup"><span data-stu-id="5c37f-113">Timestamps are in 100-nanosecond units.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c37f-114">在下面的示例中，事件处理程序<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started?displayProperty=nameWithType>事件检查，以查看是否运行惯性处理，如果是这样，阻止其通过调用<xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Complete%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5c37f-114">In the following example, an event handler for the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started?displayProperty=nameWithType> event checks to see if inertia processing is running and if so, stops it by calling the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Complete%2A> method.</span></span>  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_OnManipulationStarted](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onmanipulationstarted)]  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_Timestamp](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_timestamp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5c37f-115">时间戳参数小于初始或上一个时间戳。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c37f-115">The timestamp parameter is less than the initial or previous timestamp.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; Completed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Event Completed As EventHandler(Of Manipulation2DCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::Manipulations::Manipulation2DCompletedEventArgs ^&gt; ^ Completed;" />
      <MemberSignature Language="F#" Value="member this.Completed : EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; " Usage="member this.Completed : System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c37f-116">在推断完成后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c37f-116">Occurs when extrapolation has completed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; Delta;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; Delta" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta" />
      <MemberSignature Language="VB.NET" Value="Public Event Delta As EventHandler(Of Manipulation2DDeltaEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::Manipulations::Manipulation2DDeltaEventArgs ^&gt; ^ Delta;" />
      <MemberSignature Language="F#" Value="member this.Delta : EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; " Usage="member this.Delta : System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c37f-117">在推断原点发生了更改后或者在发生了转换、缩放或旋转后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c37f-117">Occurs when the extrapolation origin has changed or when translation, scaling, or rotation have occurred.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c37f-118"><xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=nameWithType>事件和<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta?displayProperty=nameWithType>事件具有相同的类型。</span><span class="sxs-lookup"><span data-stu-id="5c37f-118">The <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=nameWithType> event and the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta?displayProperty=nameWithType> event are the same type.</span></span> <span data-ttu-id="5c37f-119">通常情况下，您可以使用相同的事件处理程序的这两个事件。</span><span class="sxs-lookup"><span data-stu-id="5c37f-119">Typically, you can use the same event handler for both events.</span></span>  
  
   
  
## Examples  
 [!code-csharp[ManipulationAPI#_ManipulationItem_OnManipulationOrInertiaDelta](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onmanipulationorinertiadelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpansionBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Manipulations.InertiaExpansionBehavior2D ExpansionBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.Manipulations.InertiaExpansionBehavior2D ExpansionBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpansionBehavior As InertiaExpansionBehavior2D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Manipulations::InertiaExpansionBehavior2D ^ ExpansionBehavior { System::Windows::Input::Manipulations::InertiaExpansionBehavior2D ^ get(); void set(System::Windows::Input::Manipulations::InertiaExpansionBehavior2D ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExpansionBehavior : System.Windows.Input.Manipulations.InertiaExpansionBehavior2D with get, set" Usage="System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Manipulations.InertiaExpansionBehavior2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c37f-120">获取或设置惯性处理器的延伸行为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c37f-120">Gets or sets the expansion behavior of the inertia processor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c37f-121">惯性处理器的延伸行为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c37f-121">The expansion behavior of the inertia processor.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialOriginX">
      <MemberSignature Language="C#" Value="public float InitialOriginX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 InitialOriginX" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX" />
      <MemberSignature Language="VB.NET" Value="Public Property InitialOriginX As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float InitialOriginX { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.InitialOriginX : single with get, set" Usage="System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c37f-122">获取或设置以坐标单位表示的初始原点的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c37f-122">Gets or sets the x-coordinate for the initial origin, in coordinate units.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c37f-123">以坐标单位表示的初始原点的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c37f-123">The x-coordinate for the initial origin, in coordinate units.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c37f-124">通过所表示的原点<xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A>和<xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A>属性是与元素关联的所有操控器的平均位置。</span><span class="sxs-lookup"><span data-stu-id="5c37f-124">The origin point represented by the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A> and <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A> properties is the average position of all manipulators associated with an element.</span></span>  
  
 <span data-ttu-id="5c37f-125">有效值<xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A>是有限的任意数字。</span><span class="sxs-lookup"><span data-stu-id="5c37f-125">A valid value for <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A> is any finite number.</span></span> <span data-ttu-id="5c37f-126">默认值为 0.0。</span><span class="sxs-lookup"><span data-stu-id="5c37f-126">The default value is 0.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialOriginY">
      <MemberSignature Language="C#" Value="public float InitialOriginY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 InitialOriginY" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY" />
      <MemberSignature Language="VB.NET" Value="Public Property InitialOriginY As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float InitialOriginY { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.InitialOriginY : single with get, set" Usage="System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c37f-127">获取或设置以坐标单位表示的初始原点的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c37f-127">Gets or sets the y-coordinate for the initial origin, in coordinate units.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c37f-128">以坐标单位表示的初始原点的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c37f-128">The y-coordinate for the initial origin, in coordinate units.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c37f-129">通过所表示的原点<xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A>和<xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A>属性是与元素关联的所有操控器的平均位置。</span><span class="sxs-lookup"><span data-stu-id="5c37f-129">The origin point represented by the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A> and <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A> properties is the average position of all manipulators associated with an element.</span></span>  
  
 <span data-ttu-id="5c37f-130">有效值<xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A>是有限的任意数字。</span><span class="sxs-lookup"><span data-stu-id="5c37f-130">A valid value for <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A> is any finite number.</span></span> <span data-ttu-id="5c37f-131">默认值为 0.0。</span><span class="sxs-lookup"><span data-stu-id="5c37f-131">The default value is 0.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public bool IsRunning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunning" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRunning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRunning { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRunning : bool" Usage="System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c37f-132">获取当前是否在发生惯性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c37f-132">Gets whether inertia is currently in progress.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c37f-133">一个布尔值，该值指示当前是否在发生惯性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c37f-133">A Boolean value indicating whether inertia is currently in progress.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5c37f-134">在下面的示例中，事件处理程序<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started?displayProperty=nameWithType>事件进行检查以查看惯性处理是否正在运行，如果是这样，停止调用<xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed>方法。</span><span class="sxs-lookup"><span data-stu-id="5c37f-134">In the following example, an event handler for the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started?displayProperty=nameWithType> event checks to see if inertia processing is running and, if so, stops it by calling the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed> method.</span></span>  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_OnManipulationStarted](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onmanipulationstarted)]  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_Timestamp](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_timestamp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="public bool Process (long timestamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Process(int64 timestamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.InertiaProcessor2D.Process(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Process (timestamp As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Process(long timestamp);" />
      <MemberSignature Language="F#" Value="member this.Process : int64 -&gt; bool" Usage="inertiaProcessor2D.Process timestamp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="timestamp">
          <span data-ttu-id="5c37f-135">用于执行外推的时间戳（以 100 纳秒刻度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c37f-135">The timestamp to perform extrapolation, in 100-nanosecond ticks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c37f-136">推断操作的位置、方向和指定时间的平均半径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c37f-136">Extrapolates the manipulation's position, orientation, and average radius at the specified time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c37f-137">操作的位置、方向和指定时间的平均半径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c37f-137">The manipulation's position, orientation, and average radius at the specified time.</span>
          </span>
          <span data-ttu-id="5c37f-138">如果外推正在进行，则为 <see langword="true" />；如果外推已完成，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c37f-138">
              <see langword="true" /> if extrapolation is in progress; otherwise, <see langword="false" /> if extrapolation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c37f-139">时间戳是以 100 毫微秒为单位。</span><span class="sxs-lookup"><span data-stu-id="5c37f-139">Timestamps are in 100-nanosecond units.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5c37f-140">时间戳参数小于初始或上一个时间戳。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c37f-140">The timestamp parameter is less than the initial or previous timestamp.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RotationBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Manipulations.InertiaRotationBehavior2D RotationBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.Manipulations.InertiaRotationBehavior2D RotationBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property RotationBehavior As InertiaRotationBehavior2D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Manipulations::InertiaRotationBehavior2D ^ RotationBehavior { System::Windows::Input::Manipulations::InertiaRotationBehavior2D ^ get(); void set(System::Windows::Input::Manipulations::InertiaRotationBehavior2D ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RotationBehavior : System.Windows.Input.Manipulations.InertiaRotationBehavior2D with get, set" Usage="System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Manipulations.InertiaRotationBehavior2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c37f-141">获取或设置惯性处理器的旋转行为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c37f-141">Gets or sets the rotation behavior of the inertia processor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c37f-142">惯性处理器的旋转行为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c37f-142">The rotation behavior of the inertia processor.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5c37f-143">在以下示例中，<xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A>属性被设置为启用惯性处理来旋转对象三个和一半时间从其起始方向。</span><span class="sxs-lookup"><span data-stu-id="5c37f-143">In the following example, the <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> property is set to enable inertia processing to rotate an object three-and-one-half times from its starting orientation.</span></span>  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_SetDesiredRotation](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_setdesiredrotation)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParameters">
      <MemberSignature Language="C#" Value="public void SetParameters (System.Windows.Input.Manipulations.InertiaParameters2D parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParameters(class System.Windows.Input.Manipulations.InertiaParameters2D parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters(System.Windows.Input.Manipulations.InertiaParameters2D)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParameters (parameters As InertiaParameters2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParameters(System::Windows::Input::Manipulations::InertiaParameters2D ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.SetParameters : System.Windows.Input.Manipulations.InertiaParameters2D -&gt; unit" Usage="inertiaProcessor2D.SetParameters parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Windows.Input.Manipulations.InertiaParameters2D" />
      </Parameters>
      <Docs>
        <param name="parameters">
          <span data-ttu-id="5c37f-144">要设置的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c37f-144">Parameters to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c37f-145">在延时处理器上设置参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c37f-145">Sets parameters on the inertia processor.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslationBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Manipulations.InertiaTranslationBehavior2D TranslationBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.Manipulations.InertiaTranslationBehavior2D TranslationBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property TranslationBehavior As InertiaTranslationBehavior2D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Manipulations::InertiaTranslationBehavior2D ^ TranslationBehavior { System::Windows::Input::Manipulations::InertiaTranslationBehavior2D ^ get(); void set(System::Windows::Input::Manipulations::InertiaTranslationBehavior2D ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TranslationBehavior : System.Windows.Input.Manipulations.InertiaTranslationBehavior2D with get, set" Usage="System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Manipulations.InertiaTranslationBehavior2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c37f-146">获取或设置惯性处理器的转换行为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c37f-146">Gets or sets the translation behavior of the inertia processor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c37f-147">惯性处理器的转换行为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c37f-147">The translation behavior of the inertia processor.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>