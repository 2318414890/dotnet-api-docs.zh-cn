<Type Name="ManipulationProcessor2D" FullName="System.Windows.Input.Manipulations.ManipulationProcessor2D">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2adc38e07f5600178d0c6cf7b93352b84e256f64" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36508729" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ManipulationProcessor2D" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManipulationProcessor2D extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" />
  <TypeSignature Language="VB.NET" Value="Public Class ManipulationProcessor2D" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManipulationProcessor2D" />
  <TypeSignature Language="F#" Value="type ManipulationProcessor2D = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e101b-101">Implements a multiple-input, single-output compositor for two-dimensional (2-D) transformations in a shared coordinate space.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e101b-101">Implements a multiple-input, single-output compositor for two-dimensional (2-D) transformations in a shared coordinate space.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e101b-102">A<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D>对象将操控器的集合视为复合对象。</span><span class="sxs-lookup"><span data-stu-id="e101b-102">A <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D> object treats a collection of manipulators as a composite object.</span></span> <span data-ttu-id="e101b-103">然后，你的应用程序将释放的跟踪和管理单个操控器。</span><span class="sxs-lookup"><span data-stu-id="e101b-103">Your application is then freed from the necessity of tracking and managing individual manipulators.</span></span>  
  
 <span data-ttu-id="e101b-104">操作处理器本身不会导致要移动的元素。</span><span class="sxs-lookup"><span data-stu-id="e101b-104">A manipulation processor by itself does not cause an element to move.</span></span> <span data-ttu-id="e101b-105">你的应用程序开始根据需要执行的操作，然后从操作处理器接收信息，侦听<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started>，<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta>和<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed>事件。</span><span class="sxs-lookup"><span data-stu-id="e101b-105">Your application begins a manipulation as necessary, and then receives information from a manipulation processor by listening to the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started>, <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta> and <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed> events.</span></span> <span data-ttu-id="e101b-106">通过这些事件接收的值，可以更改位置、 大小或根据需要的元素的方向。</span><span class="sxs-lookup"><span data-stu-id="e101b-106">The values received via these events enable you to change the location, size or orientation of an element as needed.</span></span>  
  
 <span data-ttu-id="e101b-107">通知操作处理器允许哪些类型的操作 （翻译、 缩放、 旋转） 通过设置<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="e101b-107">You inform a manipulation processor which types of manipulations are allowed (translate, scale, rotate) by setting the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations%2A> property.</span></span> <span data-ttu-id="e101b-108">然后，你可以提供进行操作的元素转换到非条件逻辑。</span><span class="sxs-lookup"><span data-stu-id="e101b-108">You can then provide non-conditional logic to the transformation of the element that is being manipulated.</span></span> <span data-ttu-id="e101b-109">例如，而不是检查是否在更改方向的元素之前启用旋转，你可以无条件地将应用从操作处理器; 接收的旋转系数如果未启用旋转，操作处理器将报告已进行无旋转的更改。</span><span class="sxs-lookup"><span data-stu-id="e101b-109">For instance, instead of checking if rotation is enabled before changing the orientation of an element, you can unconditionally apply the rotation factor received from the manipulation processor; if rotation is not enabled, the manipulation processor will report that no rotational change has occurred.</span></span>  
  
 <span data-ttu-id="e101b-110">当发布正在操作的元素 （删除所有操控器），惯性处理可用于模拟摩擦力并使元素逐渐放慢速度速度其动作数为 stop。</span><span class="sxs-lookup"><span data-stu-id="e101b-110">When an element that is being manipulated is released (all manipulators are removed), you can use inertia processing to simulate friction and cause the element to gradually slow its movements before coming to a stop.</span></span> <span data-ttu-id="e101b-111">有关更多信息，请参见 <xref:System.Windows.Input.Manipulations.InertiaProcessor2D> 类。</span><span class="sxs-lookup"><span data-stu-id="e101b-111">For more information see the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e101b-112">Creates a new <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e101b-112">Creates a new <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManipulationProcessor2D (System.Windows.Input.Manipulations.Manipulations2D supportedManipulations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Manipulations.Manipulations2D supportedManipulations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (supportedManipulations As Manipulations2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManipulationProcessor2D(System::Windows::Input::Manipulations::Manipulations2D supportedManipulations);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.Manipulations.ManipulationProcessor2D : System.Windows.Input.Manipulations.Manipulations2D -&gt; System.Windows.Input.Manipulations.ManipulationProcessor2D" Usage="new System.Windows.Input.Manipulations.ManipulationProcessor2D supportedManipulations" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="supportedManipulations" Type="System.Windows.Input.Manipulations.Manipulations2D" />
      </Parameters>
      <Docs>
        <param name="supportedManipulations">
          <span data-ttu-id="e101b-113">The initial set of supported manipulations.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e101b-113">The initial set of supported manipulations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e101b-114">Creates a new <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e101b-114">Creates a new <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e101b-115">The <paramref name="supportedManipulations" /> parameter is not a valid combination of the <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" /> enumeration values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e101b-115">The <paramref name="supportedManipulations" /> parameter is not a valid combination of the <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" /> enumeration values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManipulationProcessor2D (System.Windows.Input.Manipulations.Manipulations2D supportedManipulations, System.Windows.Input.Manipulations.ManipulationPivot2D pivot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Manipulations.Manipulations2D supportedManipulations, class System.Windows.Input.Manipulations.ManipulationPivot2D pivot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (supportedManipulations As Manipulations2D, pivot As ManipulationPivot2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManipulationProcessor2D(System::Windows::Input::Manipulations::Manipulations2D supportedManipulations, System::Windows::Input::Manipulations::ManipulationPivot2D ^ pivot);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.Manipulations.ManipulationProcessor2D : System.Windows.Input.Manipulations.Manipulations2D * System.Windows.Input.Manipulations.ManipulationPivot2D -&gt; System.Windows.Input.Manipulations.ManipulationProcessor2D" Usage="new System.Windows.Input.Manipulations.ManipulationProcessor2D (supportedManipulations, pivot)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="supportedManipulations" Type="System.Windows.Input.Manipulations.Manipulations2D" />
        <Parameter Name="pivot" Type="System.Windows.Input.Manipulations.ManipulationPivot2D" />
      </Parameters>
      <Docs>
        <param name="supportedManipulations">
          <span data-ttu-id="e101b-116">The initial set of supported manipulations.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e101b-116">The initial set of supported manipulations.</span>
          </span>
        </param>
        <param name="pivot">
          <span data-ttu-id="e101b-117">Pivot information for single-manipulator rotations.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e101b-117">Pivot information for single-manipulator rotations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e101b-118">Creates a new <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e101b-118">Creates a new <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e101b-119">The <paramref name="supportedManipulations" /> parameter is not a valid combination of the <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" /> enumeration values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e101b-119">The <paramref name="supportedManipulations" /> parameter is not a valid combination of the <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" /> enumeration values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; Completed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Event Completed As EventHandler(Of Manipulation2DCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::Manipulations::Manipulation2DCompletedEventArgs ^&gt; ^ Completed;" />
      <MemberSignature Language="F#" Value="member this.Completed : EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; " Usage="member this.Completed : System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e101b-120">Occurs when a manipulation has competed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e101b-120">Occurs when a manipulation has competed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteManipulation">
      <MemberSignature Language="C#" Value="public void CompleteManipulation (long timestamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompleteManipulation(int64 timestamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompleteManipulation (timestamp As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompleteManipulation(long timestamp);" />
      <MemberSignature Language="F#" Value="member this.CompleteManipulation : int64 -&gt; unit" Usage="manipulationProcessor2D.CompleteManipulation timestamp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="timestamp">
          <span data-ttu-id="e101b-121">The timestamp to complete the manipulation, in 100-nanosecond ticks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e101b-121">The timestamp to complete the manipulation, in 100-nanosecond ticks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e101b-122">Forces the current manipulation to complete and raises the <see cref="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e101b-122">Forces the current manipulation to complete and raises the <see cref="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e101b-123">The timestamp is less than the previous timestamp for the current manipulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e101b-123">The timestamp is less than the previous timestamp for the current manipulation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; Delta;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; Delta" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta" />
      <MemberSignature Language="VB.NET" Value="Public Event Delta As EventHandler(Of Manipulation2DDeltaEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::Manipulations::Manipulation2DDeltaEventArgs ^&gt; ^ Delta;" />
      <MemberSignature Language="F#" Value="member this.Delta : EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; " Usage="member this.Delta : System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e101b-124">Occurs when the manipulation origin has changed or when translation, scaling, or rotation have occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e101b-124">Occurs when the manipulation origin has changed or when translation, scaling, or rotation have occurred.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e101b-125"><xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta?displayProperty=nameWithType>事件和<xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=nameWithType>事件具有相同的类型。</span><span class="sxs-lookup"><span data-stu-id="e101b-125">The <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta?displayProperty=nameWithType> event and the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=nameWithType> event are the same type.</span></span> <span data-ttu-id="e101b-126">通常情况下，你可以使用相同的事件处理程序两个事件。</span><span class="sxs-lookup"><span data-stu-id="e101b-126">Typically, you can use the same event handler for both events.</span></span>  
  
   
  
## Examples  
 [!code-csharp[ManipulationAPI#_ManipulationItem_OnManipulationOrInertiaDelta](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onmanipulationorinertiadelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumScaleRotateRadius">
      <MemberSignature Language="C#" Value="public float MinimumScaleRotateRadius { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MinimumScaleRotateRadius" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumScaleRotateRadius As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float MinimumScaleRotateRadius { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumScaleRotateRadius : single with get, set" Usage="System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e101b-127">Gets or sets the minimum radius, in coordinate units, necessary for a manipulator to participate in scaling and rotation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e101b-127">Gets or sets the minimum radius, in coordinate units, necessary for a manipulator to participate in scaling and rotation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e101b-128">最小的半径，以参与缩放和旋转的操控器所需的坐标单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e101b-128">The minimum radius, in coordinate units, necessary for a manipulator to participate in scaling and rotation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e101b-129">如果操控器非常接近当前正在处理的操控器质心的中，很小的操控器移动可能会变得非常大的旋转或缩放更改。</span><span class="sxs-lookup"><span data-stu-id="e101b-129">If a manipulator is extremely close to the center of mass of the manipulators currently being processed, a very small manipulator motion can become a very large change to rotation or scaling.</span></span> <span data-ttu-id="e101b-130">若要避免此问题，将设置<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius%2A>为大于零的内容。</span><span class="sxs-lookup"><span data-stu-id="e101b-130">To avoid this problem, set <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius%2A> to something greater than zero.</span></span> <span data-ttu-id="e101b-131">为更接近于旋转和缩放操作中将不包括到质心的距离任何操控器。</span><span class="sxs-lookup"><span data-stu-id="e101b-131">Any manipulator that is closer than that distance to the center of mass will not be included in rotation and scaling operations.</span></span>  
  
 <span data-ttu-id="e101b-132">若要使用的一个典型值应基于的操控器的"意外"运动的可能程度。</span><span class="sxs-lookup"><span data-stu-id="e101b-132">A typical value to use should be based on the likely magnitude of "accidental" motions of the manipulators.</span></span> <span data-ttu-id="e101b-133">例如，如果操控器是手指触摸屏幕，对应于一厘米左右 radius 可能合适。</span><span class="sxs-lookup"><span data-stu-id="e101b-133">For example, if the manipulator is a human finger touching a screen, a radius corresponding to a centimeter or so might be appropriate.</span></span>  
  
 <span data-ttu-id="e101b-134">值<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius%2A>必须是有限的非负的数字。</span><span class="sxs-lookup"><span data-stu-id="e101b-134">The value for <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius%2A> must be a finite, non-negative number.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pivot">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Manipulations.ManipulationPivot2D Pivot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.Manipulations.ManipulationPivot2D Pivot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot" />
      <MemberSignature Language="VB.NET" Value="Public Property Pivot As ManipulationPivot2D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Manipulations::ManipulationPivot2D ^ Pivot { System::Windows::Input::Manipulations::ManipulationPivot2D ^ get(); void set(System::Windows::Input::Manipulations::ManipulationPivot2D ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Pivot : System.Windows.Input.Manipulations.ManipulationPivot2D with get, set" Usage="System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Manipulations.ManipulationPivot2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e101b-135">Gets or sets the pivot information for the manipulation processor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e101b-135">Gets or sets the pivot information for the manipulation processor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e101b-136">操作处理器 pivot 信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e101b-136">The pivot information for the manipulation processor.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e101b-137"><xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot%2A>使用属性来提供单操控器旋转的轴信息。</span><span class="sxs-lookup"><span data-stu-id="e101b-137">The <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot%2A> property is used to provide pivot information for single-manipulator rotations.</span></span> <span data-ttu-id="e101b-138">将此属性设置为 null 禁用单操控器旋转。</span><span class="sxs-lookup"><span data-stu-id="e101b-138">Setting this property to null disables single-manipulator rotations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessManipulators">
      <MemberSignature Language="C#" Value="public void ProcessManipulators (long timestamp, System.Collections.Generic.IEnumerable&lt;System.Windows.Input.Manipulations.Manipulator2D&gt; manipulators);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ProcessManipulators(int64 timestamp, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Input.Manipulations.Manipulator2D&gt; manipulators) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessManipulators (timestamp As Long, manipulators As IEnumerable(Of Manipulator2D))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessManipulators(long timestamp, System::Collections::Generic::IEnumerable&lt;System::Windows::Input::Manipulations::Manipulator2D&gt; ^ manipulators);" />
      <MemberSignature Language="F#" Value="member this.ProcessManipulators : int64 * seq&lt;System.Windows.Input.Manipulations.Manipulator2D&gt; -&gt; unit" Usage="manipulationProcessor2D.ProcessManipulators (timestamp, manipulators)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="System.Int64" />
        <Parameter Name="manipulators" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Input.Manipulations.Manipulator2D&gt;" />
      </Parameters>
      <Docs>
        <param name="timestamp">
          <span data-ttu-id="e101b-139">The timestamp for the batch, in 100-nanosecond ticks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e101b-139">The timestamp for the batch, in 100-nanosecond ticks.</span>
          </span>
        </param>
        <param name="manipulators">
          <span data-ttu-id="e101b-140">The set of manipulators that are currently in scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e101b-140">The set of manipulators that are currently in scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e101b-141">Processes the specified manipulators as a single batch action.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e101b-141">Processes the specified manipulators as a single batch action.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e101b-142">参数`manipulators`可能为空列表或 null。</span><span class="sxs-lookup"><span data-stu-id="e101b-142">The parameter `manipulators` may be an empty list or null.</span></span> <span data-ttu-id="e101b-143">如果这导致操控程序数达到零，<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed>引发事件。</span><span class="sxs-lookup"><span data-stu-id="e101b-143">If this results in the number of manipulators reaching zero, the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed> event is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e101b-144">在下面的示例中，<xref:System.Windows.UIElement.OnLostMouseCapture%2A>方法<xref:System.Windows.UIElement>对象被重写，以调用<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators%2A>方法，其中的列表<xref:System.Windows.Input.Manipulations.Manipulator2D>对象设置为 null。</span><span class="sxs-lookup"><span data-stu-id="e101b-144">In the following example, the <xref:System.Windows.UIElement.OnLostMouseCapture%2A> method of a <xref:System.Windows.UIElement> object is overridden to call the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators%2A> method with the list of <xref:System.Windows.Input.Manipulations.Manipulator2D> objects set to null.</span></span>  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_OnLostMouseCapture](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onlostmousecapture)]  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_Timestamp](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_timestamp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e101b-145">The timestamp is less than the previous timestamp for the current manipulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e101b-145">The timestamp is less than the previous timestamp for the current manipulation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetParameters">
      <MemberSignature Language="C#" Value="public void SetParameters (System.Windows.Input.Manipulations.ManipulationParameters2D parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParameters(class System.Windows.Input.Manipulations.ManipulationParameters2D parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParameters (parameters As ManipulationParameters2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParameters(System::Windows::Input::Manipulations::ManipulationParameters2D ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.SetParameters : System.Windows.Input.Manipulations.ManipulationParameters2D -&gt; unit" Usage="manipulationProcessor2D.SetParameters parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Windows.Input.Manipulations.ManipulationParameters2D" />
      </Parameters>
      <Docs>
        <param name="parameters">
          <span data-ttu-id="e101b-146">Parameters to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e101b-146">Parameters to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e101b-147">Sets parameters on the manipulation processor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e101b-147">Sets parameters on the manipulation processor.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Started">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs&gt; Started;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs&gt; Started" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started" />
      <MemberSignature Language="VB.NET" Value="Public Event Started As EventHandler(Of Manipulation2DStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::Manipulations::Manipulation2DStartedEventArgs ^&gt; ^ Started;" />
      <MemberSignature Language="F#" Value="member this.Started : EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs&gt; " Usage="member this.Started : System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e101b-148">Occurs when a new manipulation has started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e101b-148">Occurs when a new manipulation has started.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e101b-149">在下面的示例中，事件处理程序<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started>事件检查以确定如果惯性处理正在运行，并且如果是这样，将停止它。</span><span class="sxs-lookup"><span data-stu-id="e101b-149">In the following example, an event handler for the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started> event checks to see if inertia processing is running and if so, stops it.</span></span>  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_OnManipulationStarted](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onmanipulationstarted)]  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_Timestamp](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_timestamp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportedManipulations">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Manipulations.Manipulations2D SupportedManipulations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Manipulations.Manipulations2D SupportedManipulations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportedManipulations As Manipulations2D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Manipulations::Manipulations2D SupportedManipulations { System::Windows::Input::Manipulations::Manipulations2D get(); void set(System::Windows::Input::Manipulations::Manipulations2D value); };" />
      <MemberSignature Language="F#" Value="member this.SupportedManipulations : System.Windows.Input.Manipulations.Manipulations2D with get, set" Usage="System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Manipulations.Manipulations2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e101b-150">Gets or sets the current set of supported manipulations.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e101b-150">Gets or sets the current set of supported manipulations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e101b-151">当前设置的受支持的操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e101b-151">The current set of supported manipulations.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e101b-152">The property tries to set a value that is not a valid combination of the <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" />  enumeration values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e101b-152">The property tries to set a value that is not a valid combination of the <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" />  enumeration values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>