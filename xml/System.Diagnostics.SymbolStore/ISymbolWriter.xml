<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ISymbolWriter.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56e350929abc36f84a74566e71622bef50159cab1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6e350929abc36f84a74566e71622bef50159cab1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.SymbolStore.ISymbolWriter">
          <source>Represents a symbol writer for managed code.</source>
          <target state="translated">表示托管代码的符号编写器。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.SymbolStore.ISymbolWriter">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter&gt;</ph> interface provides methods that define documents, sequence points, lexical scopes, and variables.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter&gt;</ph>接口提供了定义文档、 序列点、 词法作用域和变量的方法。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.SymbolStore.ISymbolWriter">
          <source>This interface is the managed counterpart of the <ph id="ph1">`ISymUnmanagedWriter`</ph> interface, which is one of the unmanaged symbol store interfaces that provides an alternative way to read and write debug symbol information.</source>
          <target state="translated">此接口是托管的副本的<ph id="ph1">`ISymUnmanagedWriter`</ph>接口，这是提供一种替代方式读取和写入调试符号信息的非托管的符号存储区接口之一。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Close">
          <source>Closes <ph id="ph1">&lt;see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /&gt;</ph> and commits the symbols to the symbol store.</source>
          <target state="translated">关闭 <ph id="ph1">&lt;see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /&gt;</ph>，并将符号提交到符号存储区。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Close">
          <source>After this call, <ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter&gt;</ph> becomes invalid for further updates.</source>
          <target state="translated">此调用后<ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter&gt;</ph>将变为无效进一步更新。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod">
          <source>Closes the current method.</source>
          <target state="translated">关闭当前方法。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod">
          <source>After a method is closed, you cannot define a symbol from within it.</source>
          <target state="translated">一种方法关闭后，不能定义从中它的符号。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseNamespace">
          <source>Closes the most recent namespace.</source>
          <target state="translated">关闭最近的命名空间。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)">
          <source>The points past the last instruction in the scope.</source>
          <target state="translated">越过范围中最后一个指令的点。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)">
          <source>Closes the current lexical scope.</source>
          <target state="translated">关闭当前词法范围。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)">
          <source>After a scope is closed, you cannot define a variable from within it.</source>
          <target state="translated">关闭作用域后，不能定义从在其中的变量。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
          <source>The URL that identifies the document.</source>
          <target state="translated">标识文档的 URL。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
          <source>The document language.</source>
          <target state="translated">文档语言。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
          <source>This parameter can be <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph>.</source>
          <target state="translated">此参数可以为 <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
          <source>The identity of the vendor for the document language.</source>
          <target state="translated">文档语言的供应商标识。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
          <source>This parameter can be <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph>.</source>
          <target state="translated">此参数可以为 <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
          <source>The type of the document.</source>
          <target state="translated">文档的类型。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
          <source>This parameter can be <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph>.</source>
          <target state="translated">此参数可以为 <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
          <source>Defines a source document.</source>
          <target state="translated">定义源文档。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
          <source>The object that represents the document.</source>
          <target state="translated">表示文档的对象。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The metadata type or method token.</source>
          <target state="translated">元数据类型或方法标记。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The field name.</source>
          <target state="translated">字段名。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>A bitwise combination of the field attributes.</source>
          <target state="translated">字段特性的按位组合。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The field signature.</source>
          <target state="translated">字段签名。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The address types for <bpt id="p1">&lt;c&gt;</bpt>addr1<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>addr2<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>addr1<ept id="p1">&lt;/c&gt;</ept> 和 <bpt id="p2">&lt;c&gt;</bpt>addr2<ept id="p2">&lt;/c&gt;</ept> 的地址类型。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The first address for the field specification.</source>
          <target state="translated">字段规格的第一个地址。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The second address for the field specification.</source>
          <target state="translated">字段规格的第二个地址。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The third address for the field specification.</source>
          <target state="translated">字段规格的第三个地址。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>Defines a field in a type or a global field.</source>
          <target state="translated">在类型或全局字段中定义字段。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField%2A&gt;</ph> method defines a single variable that is not within a method by using specified fields in classes, bit fields, and so on.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField%2A&gt;</ph>方法定义一个方法中不是通过使用类和位域等中的指定的字段的变量。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The global variable name.</source>
          <target state="translated">全局变量名称。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>A bitwise combination of the global variable attributes.</source>
          <target state="translated">全局变量特性的按位组合。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The global variable signature.</source>
          <target state="translated">全局变量签名。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The address types for <bpt id="p1">&lt;c&gt;</bpt>addr1<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>addr2<ept id="p2">&lt;/c&gt;</ept>, and <bpt id="p3">&lt;c&gt;</bpt>addr3<ept id="p3">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>addr1<ept id="p1">&lt;/c&gt;</ept>、<bpt id="p2">&lt;c&gt;</bpt>addr2<ept id="p2">&lt;/c&gt;</ept> 和 <bpt id="p3">&lt;c&gt;</bpt>addr3<ept id="p3">&lt;/c&gt;</ept> 的地址类型。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The first address for the global variable specification.</source>
          <target state="translated">全局变量规格的第一个地址。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The second address for the global variable specification.</source>
          <target state="translated">全局变量规格的第二个地址。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The third address for the global variable specification.</source>
          <target state="translated">全局变量规格的第三个地址。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>Defines a single global variable.</source>
          <target state="translated">定义单个全局变量。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The local variable name.</source>
          <target state="translated">局部变量名称。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>A bitwise combination of the local variable attributes.</source>
          <target state="translated">局部变量特性的按位组合。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The local variable signature.</source>
          <target state="translated">局部变量签名。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The address types for <bpt id="p1">&lt;c&gt;</bpt>addr1<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>addr2<ept id="p2">&lt;/c&gt;</ept>, and <bpt id="p3">&lt;c&gt;</bpt>addr3<ept id="p3">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>addr1<ept id="p1">&lt;/c&gt;</ept>、<bpt id="p2">&lt;c&gt;</bpt>addr2<ept id="p2">&lt;/c&gt;</ept> 和 <bpt id="p3">&lt;c&gt;</bpt>addr3<ept id="p3">&lt;/c&gt;</ept> 的地址类型。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The first address for the local variable specification.</source>
          <target state="translated">局部变量规格的第一个地址。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The second address for the local variable specification.</source>
          <target state="translated">局部变量规格的第二个地址。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The third address for the local variable specification.</source>
          <target state="translated">局部变量规格的第三个地址。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The start offset for the variable.</source>
          <target state="translated">变量的起始偏移量。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If this parameter is zero, it is ignored and the variable is defined throughout the entire scope.</source>
          <target state="translated">如果此参数为零，则忽略此参数，并在整个范围内定义该变量。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If the parameter is nonzero, the variable falls within the offsets of the current scope.</source>
          <target state="translated">如果此参数为非 0，则该变量将位于当前范围的偏移量之内。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The end offset for the variable.</source>
          <target state="translated">变量的结束偏移量。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If this parameter is zero, it is ignored and the variable is defined throughout the entire scope.</source>
          <target state="translated">如果此参数为零，则忽略此参数，并在整个范围内定义该变量。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If the parameter is nonzero, the variable falls within the offsets of the current scope.</source>
          <target state="translated">如果此参数为非 0，则该变量将位于当前范围的偏移量之内。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Defines a single variable in the current lexical scope.</source>
          <target state="translated">在当前词法范围内定义单个变量。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">`startOffset`</ph> and <ph id="ph2">`endOffset`</ph> parameters are optional.</source>
          <target state="translated"><ph id="ph1">`startOffset`</ph>和<ph id="ph2">`endOffset`</ph>参数是可选的。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If their value is zero, they are ignored and the variable is defined throughout the entire scope.</source>
          <target state="translated">如果其值为零，则它们将被忽略，并在整个范围内定义变量。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If their value is nonzero, the variable falls within the offsets of the current scope.</source>
          <target state="translated">如果其值不为零，该变量将位于偏移量的当前作用域内。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>You can call <ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable%2A&gt;</ph> multiple times for a variable of the same name that occurs multiple times in different offset ranges throughout a scope.</source>
          <target state="translated">你可以调用<ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable%2A&gt;</ph>多次对于在不同的偏移量范围，在整个范围中出现多次的相同名称的变量。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>(In this case, start and end offsets must not overlap.)</source>
          <target state="translated">（在这种情况下，开始和结束偏移量不得重叠。）</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The parameter name.</source>
          <target state="translated">参数名称。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>A bitwise combination of the parameter attributes.</source>
          <target state="translated">参数特性的按位组合。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The parameter signature.</source>
          <target state="translated">参数签名。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The address types for <bpt id="p1">&lt;c&gt;</bpt>addr1<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>addr2<ept id="p2">&lt;/c&gt;</ept>, and <bpt id="p3">&lt;c&gt;</bpt>addr3<ept id="p3">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>addr1<ept id="p1">&lt;/c&gt;</ept>、<bpt id="p2">&lt;c&gt;</bpt>addr2<ept id="p2">&lt;/c&gt;</ept> 和 <bpt id="p3">&lt;c&gt;</bpt>addr3<ept id="p3">&lt;/c&gt;</ept> 的地址类型。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The first address for the parameter specification.</source>
          <target state="translated">参数规格的第一个地址。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The second address for the parameter specification.</source>
          <target state="translated">参数规格的第二个地址。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The third address for the parameter specification.</source>
          <target state="translated">参数规格的第三个地址。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>Defines a single parameter in the current method.</source>
          <target state="translated">在当前方法中定义单个参数。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The type of each parameter is taken from its position within the signature of the method.</source>
          <target state="translated">每个参数的类型从它在方法的签名内的位置获取。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>If parameters are defined in the metadata for a given method, you do not have to define them again with calls to this method.</source>
          <target state="translated">如果参数在给定方法的元数据中定义的你不需要通过调用此方法重新定义它们。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>Symbol readers need to check for these in the normal metadata first, and then use the symbol store.</source>
          <target state="translated">符号读取器需要首先，检查这些正常的元数据中，然后使用符号存储区。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>The document object for which the sequence points are being defined.</source>
          <target state="translated">正在为其定义序列点的文档对象。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>The sequence point offsets measured from the beginning of methods.</source>
          <target state="translated">从方法开始测量的序列点偏移量。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>The document lines for the sequence points.</source>
          <target state="translated">序列点的文档行。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>The document positions for the sequence points.</source>
          <target state="translated">序列点的文档位置。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>The document end lines for the sequence points.</source>
          <target state="translated">序列点的文档结束行。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>The document end positions for the sequence points.</source>
          <target state="translated">序列点的文档结束位置。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>Defines a group of sequence points within the current method.</source>
          <target state="translated">在当前方法内定义一组序列点。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>Each line and each column defines the start of a statement within a method.</source>
          <target state="translated">每个行和每个列定义的方法中的语句的开始。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>The arrays should be sorted in increasing order of offsets.</source>
          <target state="translated">数组应按偏移量的升序排序。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>The offset is always the offset from the start of the method, in bytes.</source>
          <target state="translated">偏移量始终是从方法，以字节为单位的开头的偏移量。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
          <source>The metadata emitter interface.</source>
          <target state="translated">元数据发射器接口。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
          <source>The file name for which the debugging symbols are written.</source>
          <target state="translated">向其中写入调试符号的文件名。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
          <source>Some writers require a file name, and others do not.</source>
          <target state="translated">某些编写器要求文件名，而其他编写器却不要求。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
          <source>If a file name is specified for a writer that does not use file names, this parameter is ignored.</source>
          <target state="translated">如果为不使用文件名的编写器指定文件名，则忽略此参数。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> indicates that this is a full rebuild; <ph id="ph2">&lt;see langword="false" /&gt;</ph> indicates that this is an incremental compilation.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 指示这是完全重新生成的；<ph id="ph2">&lt;see langword="false" /&gt;</ph> 指示这是增量编译。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
          <source>Sets the metadata emitter interface to associate with a writer.</source>
          <target state="translated">设置元数据发射器接口以便与编写器关联。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize%2A&gt;</ph> also sets the output file name where the debugging symbols are written.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize%2A&gt;</ph> 此外设置输出文件的名称，其中写入调试符号。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
          <source>This method can be called only once and must be called before any other writer methods.</source>
          <target state="translated">此方法只能调用一次，并且必须编写器的任何其他方法之前调用。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)">
          <source>The metadata token for the method to be opened.</source>
          <target state="translated">要打开的方法的元数据标记。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)">
          <source>Opens a method to place symbol information into.</source>
          <target state="translated">打开要向其中放入符号信息的方法。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)">
          <source>The specified method becomes the current method for calls to define sequence points, parameters, and lexical scopes.</source>
          <target state="translated">指定的方法将成为当前方法的调用定义序列点、 参数和词法范围。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)">
          <source>There is an implicit lexical scope around the entire method.</source>
          <target state="translated">没有整个方法隐式词法范围。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)">
          <source>Reopening a method that has been previously closed erases any previously defined symbols for the method.</source>
          <target state="translated">重新打开之前被关闭的方法清除任何以前定义的符号的方法。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(System.String)">
          <source>The name of the new namespace.</source>
          <target state="translated">新命名空间的名称。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(System.String)">
          <source>Opens a new namespace.</source>
          <target state="translated">打开一个新的命名空间。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(System.String)">
          <source>Call this method before defining methods or variables that exist within a namespace.</source>
          <target state="translated">定义方法或存在命名空间内的变量之前调用此方法。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(System.String)">
          <source>Namespaces can be nested.</source>
          <target state="translated">可以嵌套命名空间。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
          <source>The offset, in bytes, from the beginning of the method to the first instruction in the lexical scope.</source>
          <target state="translated">从方法的开始处到词法范围内第一条指令的偏移量，以字节数表示。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
          <source>Opens a new lexical scope in the current method.</source>
          <target state="translated">在当前方法中打开新的词法范围。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
          <source>An opaque scope identifier that can be used with <ph id="ph1">&lt;see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" /&gt;</ph> to define the start and end offsets of a scope at a later time.</source>
          <target state="translated">一个不透明的范围标识符，它以后可以与 <ph id="ph1">&lt;see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" /&gt;</ph> 一起使用，以定义范围的起始和结束偏移量。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
          <source>In this case, the offsets passed to <ph id="ph1">&lt;see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)" /&gt;</ph> are ignored.</source>
          <target state="translated">在这种情况下，忽略传递到 <ph id="ph1">&lt;see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)" /&gt;</ph> 的偏移量。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
          <source>A scope identifier is valid only in the current method.</source>
          <target state="translated">范围标识符只在当前方法中有效。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
          <source>This scope becomes the new current scope and is pushed onto a stack of scopes.</source>
          <target state="translated">此作用域成为新的当前范围和推送到堆栈的作用域。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
          <source>Scopes must form a hierarchy.</source>
          <target state="translated">作用域必须形成一个层次结构。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
          <source>Siblings are not allowed to overlap.</source>
          <target state="translated">同级不允许重叠。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
          <source>Scope identifiers are valid only in the current method.</source>
          <target state="translated">范围标识符是仅在当前方法中有效。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
          <source>The document that contains the starting position.</source>
          <target state="translated">包含起始位置的文档。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
          <source>The starting line number.</source>
          <target state="translated">起始行号。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
          <source>The starting column.</source>
          <target state="translated">起始列。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
          <source>The document that contains the ending position.</source>
          <target state="translated">包含结束位置的文档。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
          <source>The ending line number.</source>
          <target state="translated">结束行号。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
          <source>The ending column number.</source>
          <target state="translated">结束列号。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
          <source>Specifies the true start and end of a method within a source file.</source>
          <target state="translated">指定源文件内方法的真正开始和结尾。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
          <source>Use <ph id="ph1">&lt;see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)" /&gt;</ph> to specify the extent of a method, independent of the sequence points that exist within the method.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)" /&gt;</ph> 指定方法的作用域，独立于方法内存在的序列点。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)">
          <source>The identifier of the lexical scope.</source>
          <target state="translated">词法范围的标识符。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)">
          <source>The byte offset of the beginning of the lexical scope.</source>
          <target state="translated">词法范围的开始的字节偏移量。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)">
          <source>The byte offset of the end of the lexical scope.</source>
          <target state="translated">词法范围的结尾的字节偏移量。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)">
          <source>Defines the offset range for the specified lexical scope.</source>
          <target state="translated">定义指定词法范围的偏移量范围。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])">
          <source>The metadata token for which the attribute is being defined.</source>
          <target state="translated">正在为其定义特性的元数据标记。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])">
          <source>The attribute name.</source>
          <target state="translated">特性名称。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])">
          <source>The attribute value.</source>
          <target state="translated">特性值。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])">
          <source>Defines an attribute when given the attribute name and the attribute value.</source>
          <target state="translated">在给定特性名称和特性值的情况下，定义特性。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute%2A&gt;</ph> method is only associated with symbolic information and is not a metadata custom attribute.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute%2A&gt;</ph>方法仅与符号信息关联，不是元数据自定义属性。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(System.IntPtr)">
          <source>A pointer to code that represents the underlying writer.</source>
          <target state="translated">指向表示此基础编写器的代码的指针。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(System.IntPtr)">
          <source>Sets the underlying <ph id="ph1">&lt;see langword="ISymUnmanagedWriter" /&gt;</ph> (the corresponding unmanaged interface) that a managed <ph id="ph2">&lt;see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /&gt;</ph> uses to emit symbols.</source>
          <target state="translated">设置基础 <ph id="ph1">&lt;see langword="ISymUnmanagedWriter" /&gt;</ph>（对应的非托管接口），托管 <ph id="ph2">&lt;see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /&gt;</ph> 使用它来发出符号。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(System.IntPtr)">
          <source>The underlying <ph id="ph1">`ISymUnmanagedWriter`</ph> (the corresponding unmanaged interface) represents a symbol writer for managed code.</source>
          <target state="translated">基础<ph id="ph1">`ISymUnmanagedWriter`</ph>（相应的非托管的接口） 表示托管代码的符号编写器。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(System.IntPtr)">
          <source>The interface provides methods for defining documents, sequence points, lexical scopes, and variables.</source>
          <target state="translated">该接口提供用于定义文档、 序列点、 词法作用域和变量的方法。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)">
          <source>The metadata token for the method that is the user entry point.</source>
          <target state="translated">方法的元数据标记，它是用户入口点。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)">
          <source>Identifies the user-defined method as the entry point for the current module.</source>
          <target state="translated">将用户定义的方法标识为当前模块的入口点。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)">
          <source>This is normally your main method, rather than compiler-generated stubs before the main method.</source>
          <target state="translated">这通常是你的主要方法，而不是编译器生成的主要方法之前的存根。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(System.String)">
          <source>The fully qualified name of the namespace.</source>
          <target state="translated">命名空间的完全限定名称。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(System.String)">
          <source>Specifies that the given, fully qualified namespace name is used within the open lexical scope.</source>
          <target state="translated">指定在打开的词法范围内使用给定的、完全限定的命名空间名称。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(System.String)">
          <source>Closing the current scope prevents this scope from using the namespace.</source>
          <target state="translated">关闭当前作用域可防止此作用域使用命名空间。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(System.String)">
          <source>The namespace remains in use in all scopes that inherit from the current open scope.</source>
          <target state="translated">命名空间保留在当前打开的范围从继承的所有作用域中的使用。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>