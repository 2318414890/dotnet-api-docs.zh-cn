<Type Name="CodeMemberField" FullName="System.CodeDom.CodeMemberField">
  <TypeSignature Language="C#" Value="public class CodeMemberField : System.CodeDom.CodeTypeMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeMemberField extends System.CodeDom.CodeTypeMember" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeMemberField" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeMemberField&#xA;Inherits CodeTypeMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeMemberField : System::CodeDom::CodeTypeMember" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeTypeMember</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c21be-101">表示某种类型的字段的声明。</span><span class="sxs-lookup"><span data-stu-id="c21be-101">Represents a declaration for a field of a type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c21be-102"><xref:System.CodeDom.CodeMemberField> 可以用于表示类型的字段的声明。</span><span class="sxs-lookup"><span data-stu-id="c21be-102"><xref:System.CodeDom.CodeMemberField> can be used to represent the declaration for a field of a type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c21be-103">下面的示例演示使用<xref:System.CodeDom.CodeMemberField>声明类型的字段`string`名为`testStringField`。</span><span class="sxs-lookup"><span data-stu-id="c21be-103">The following example demonstrates use of a <xref:System.CodeDom.CodeMemberField> to declare a field of type `string` named `testStringField`.</span></span>  
  
 [!code-cpp[CodeMemberFieldExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CodeMemberFieldExample/CPP/codememberfieldexample.cpp#2)]
 [!code-csharp[CodeMemberFieldExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeMemberFieldExample/CS/codememberfieldexample.cs#2)]
 [!code-vb[CodeMemberFieldExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeMemberFieldExample/VB/codememberfieldexample.vb#2)]  
  
 [!code-cpp[CodeMemberFieldPublicConstExample#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeMemberFieldPublicConstExample/CPP/class1.cpp#1)]
 [!code-csharp[CodeMemberFieldPublicConstExample#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeMemberFieldPublicConstExample/CS/class1.cs#1)]
 [!code-vb[CodeMemberFieldPublicConstExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeMemberFieldPublicConstExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c21be-104">初始化 <see cref="T:System.CodeDom.CodeMemberField" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c21be-104">Initializes a new instance of the <see cref="T:System.CodeDom.CodeMemberField" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeMemberField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeMemberField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeMemberField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c21be-105">初始化 <see cref="T:System.CodeDom.CodeMemberField" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c21be-105">Initializes a new instance of the <see cref="T:System.CodeDom.CodeMemberField" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeMemberField (System.CodeDom.CodeTypeReference type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeTypeReference type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeMemberField.#ctor(System.CodeDom.CodeTypeReference,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As CodeTypeReference, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeMemberField(System::CodeDom::CodeTypeReference ^ type, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.CodeDom.CodeTypeReference" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="c21be-106">指示字段类型的对象。</span><span class="sxs-lookup"><span data-stu-id="c21be-106">An object that indicates the type of the field.</span></span></param>
        <param name="name"><span data-ttu-id="c21be-107">字段的名称。</span><span class="sxs-lookup"><span data-stu-id="c21be-107">The name of the field.</span></span></param>
        <summary><span data-ttu-id="c21be-108">使用指定的字段类型和字段名初始化 <see cref="T:System.CodeDom.CodeMemberField" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c21be-108">Initializes a new instance of the <see cref="T:System.CodeDom.CodeMemberField" /> class using the specified field type and field name.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeMemberField (string type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeMemberField.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeMemberField(System::String ^ type, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="c21be-109">字段的类型。</span><span class="sxs-lookup"><span data-stu-id="c21be-109">The type of the field.</span></span></param>
        <param name="name"><span data-ttu-id="c21be-110">字段的名称。</span><span class="sxs-lookup"><span data-stu-id="c21be-110">The name of the field.</span></span></param>
        <summary><span data-ttu-id="c21be-111">使用指定的字段类型和字段名初始化 <see cref="T:System.CodeDom.CodeMemberField" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c21be-111">Initializes a new instance of the <see cref="T:System.CodeDom.CodeMemberField" /> class using the specified field type and field name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c21be-112">如果`type`参数引用泛型类型，它必须遵循的泛型类型的语法约定。</span><span class="sxs-lookup"><span data-stu-id="c21be-112">If the `type` parameter references a generic type, it must follow the syntax conventions for generic types.</span></span> <span data-ttu-id="c21be-113">泛型类型的格式，如下所示： 类型，其后抑音符的名称 ("") 后, 接一个计数的泛型类型参数后, 跟用括号分隔的参数。</span><span class="sxs-lookup"><span data-stu-id="c21be-113">Generic types are formatted as follows: the name of the type, followed by a grave accent ("\`"), followed by a count of the generic type arguments, followed by the parameters delimited with brackets.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c21be-114">你必须使用方括号 ([]) 和不 C# 命令的尖括号 （<>） 来分隔泛型参数。</span><span class="sxs-lookup"><span data-stu-id="c21be-114">You must use square brackets ([]) and not the C# angle brackets (<>) to delimit generic parameters.</span></span>  
  
 <span data-ttu-id="c21be-115">若要避免犯语法错误的可能性，请考虑使用<xref:System.CodeDom.CodeMemberField.%23ctor%28System.Type%2CSystem.String%29>采用而不是字符串用作参数类型的构造函数。</span><span class="sxs-lookup"><span data-stu-id="c21be-115">To avoid the possibility of making a syntactic mistake, consider using the <xref:System.CodeDom.CodeMemberField.%23ctor%28System.Type%2CSystem.String%29> constructor that takes a type instead of a string as a parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeMemberField (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeMemberField.#ctor(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeMemberField(Type ^ type, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="c21be-116">字段的类型。</span><span class="sxs-lookup"><span data-stu-id="c21be-116">The type of the field.</span></span></param>
        <param name="name"><span data-ttu-id="c21be-117">字段的名称。</span><span class="sxs-lookup"><span data-stu-id="c21be-117">The name of the field.</span></span></param>
        <summary><span data-ttu-id="c21be-118">使用指定的字段类型和字段名初始化 <see cref="T:System.CodeDom.CodeMemberField" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c21be-118">Initializes a new instance of the <see cref="T:System.CodeDom.CodeMemberField" /> class using the specified field type and field name.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitExpression">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeExpression InitExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeExpression InitExpression" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberField.InitExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property InitExpression As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeExpression ^ InitExpression { System::CodeDom::CodeExpression ^ get(); void set(System::CodeDom::CodeExpression ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c21be-119">获取或设置字段的初始化表达式。</span><span class="sxs-lookup"><span data-stu-id="c21be-119">Gets or sets the initialization expression for the field.</span></span></summary>
        <value><span data-ttu-id="c21be-120">字段的初始化表达式。</span><span class="sxs-lookup"><span data-stu-id="c21be-120">The initialization expression for the field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c21be-121">下面的示例演示了利用<xref:System.CodeDom.CodeMemberField.InitExpression%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="c21be-121">The following example demonstrates the use of the <xref:System.CodeDom.CodeMemberField.InitExpression%2A> property.</span></span>  
  
 [!code-csharp[CodeMemberFieldInit#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeMemberFieldInit/CS/program.cs#1)]
 [!code-vb[CodeMemberFieldInit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeMemberFieldInit/VB/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReference Type" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberField.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReference ^ Type { System::CodeDom::CodeTypeReference ^ get(); void set(System::CodeDom::CodeTypeReference ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c21be-122">获取或设置字段的类型。</span><span class="sxs-lookup"><span data-stu-id="c21be-122">Gets or sets the type of the field.</span></span></summary>
        <value><span data-ttu-id="c21be-123">字段的类型。</span><span class="sxs-lookup"><span data-stu-id="c21be-123">The type of the field.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>