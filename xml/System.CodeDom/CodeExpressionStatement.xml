<Type Name="CodeExpressionStatement" FullName="System.CodeDom.CodeExpressionStatement">
  <TypeSignature Language="C#" Value="public class CodeExpressionStatement : System.CodeDom.CodeStatement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeExpressionStatement extends System.CodeDom.CodeStatement" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeExpressionStatement" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeExpressionStatement&#xA;Inherits CodeStatement" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeExpressionStatement : System::CodeDom::CodeStatement" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeStatement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="35949-101">表示由单个表达式组成的语句。</span><span class="sxs-lookup"><span data-stu-id="35949-101">Represents a statement that consists of a single expression.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35949-102">A<xref:System.CodeDom.CodeExpressionStatement>包含<xref:System.CodeDom.CodeExpression>对象，以及可以添加到<xref:System.CodeDom.CodeStatementCollection>允许某些表达式未必是孤立的对象。</span><span class="sxs-lookup"><span data-stu-id="35949-102">A <xref:System.CodeDom.CodeExpressionStatement> contains a <xref:System.CodeDom.CodeExpression> object, and it can be added to a <xref:System.CodeDom.CodeStatementCollection> object, allowing some expressions to stand alone.</span></span> <span data-ttu-id="35949-103">例如，<xref:System.CodeDom.CodeMethodInvokeExpression>包含<xref:System.CodeDom.CodeExpressionStatement>可以表示不返回值的方法调用。</span><span class="sxs-lookup"><span data-stu-id="35949-103">For example, a <xref:System.CodeDom.CodeMethodInvokeExpression> contained by a <xref:System.CodeDom.CodeExpressionStatement> can represent a method call without a return value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35949-104">下面的示例演示如何创建的实例<xref:System.CodeDom.CodeExpressionStatement>类通过<xref:System.CodeDom.CodeExpression>对象。</span><span class="sxs-lookup"><span data-stu-id="35949-104">The following example demonstrates how to create an instance of the <xref:System.CodeDom.CodeExpressionStatement> class by using a <xref:System.CodeDom.CodeExpression> object.</span></span>  
  
 [!code-cpp[CodeDomSampleBatch#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomSampleBatch/CPP/class1.cpp#1)]
 [!code-csharp[CodeDomSampleBatch#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomSampleBatch/CS/class1.cs#1)]
 [!code-vb[CodeDomSampleBatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomSampleBatch/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="35949-105">初始化 <see cref="T:System.CodeDom.CodeExpressionStatement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="35949-105">Initializes a new instance of the <see cref="T:System.CodeDom.CodeExpressionStatement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeExpressionStatement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeExpressionStatement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeExpressionStatement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="35949-106">初始化 <see cref="T:System.CodeDom.CodeExpressionStatement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="35949-106">Initializes a new instance of the <see cref="T:System.CodeDom.CodeExpressionStatement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeExpressionStatement (System.CodeDom.CodeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeExpressionStatement.#ctor(System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As CodeExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeExpressionStatement(System::CodeDom::CodeExpression ^ expression);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="35949-107">语句的 <see cref="T:System.CodeDom.CodeExpression" />。</span><span class="sxs-lookup"><span data-stu-id="35949-107">A <see cref="T:System.CodeDom.CodeExpression" /> for the statement.</span></span></param>
        <summary><span data-ttu-id="35949-108">使用指定的表达式初始化 <see cref="T:System.CodeDom.CodeExpressionStatement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="35949-108">Initializes a new instance of the <see cref="T:System.CodeDom.CodeExpressionStatement" /> class by using the specified expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="35949-109">下面的示例创建<xref:System.CodeDom.CodeExpression>对象并使用它作为参数进行初始化的实例<xref:System.CodeDom.CodeExpressionStatement>类。</span><span class="sxs-lookup"><span data-stu-id="35949-109">The following example creates a <xref:System.CodeDom.CodeExpression> object and uses it as a parameter to initialize an instance of the <xref:System.CodeDom.CodeExpressionStatement> class.</span></span>  
  
 [!code-cpp[CodeDomSampleBatch#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomSampleBatch/CPP/class1.cpp#1)]
 [!code-csharp[CodeDomSampleBatch#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomSampleBatch/CS/class1.cs#1)]
 [!code-vb[CodeDomSampleBatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomSampleBatch/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeExpression Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeExpression Expression" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeExpressionStatement.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeExpression ^ Expression { System::CodeDom::CodeExpression ^ get(); void set(System::CodeDom::CodeExpression ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="35949-110">获取或设置语句的表达式。</span><span class="sxs-lookup"><span data-stu-id="35949-110">Gets or sets the expression for the statement.</span></span></summary>
        <value><span data-ttu-id="35949-111"><see cref="T:System.CodeDom.CodeExpression" />，指示语句的表达式。</span><span class="sxs-lookup"><span data-stu-id="35949-111">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the expression for the statement.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>