<Type Name="CodeRegionDirective" FullName="System.CodeDom.CodeRegionDirective">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c9464d8492c4b67e0020cb9ddb40ec83d2e55f3d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30359301" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeRegionDirective : System.CodeDom.CodeDirective" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeRegionDirective extends System.CodeDom.CodeDirective" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeRegionDirective" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeRegionDirective&#xA;Inherits CodeDirective" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeRegionDirective : System::CodeDom::CodeDirective" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeDirective</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定代码区域的名称和模式。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.CodeDom.CodeRegionDirective.RegionMode%2A>属性指定的实例表示的开始或结束的区域。  
  
> [!NOTE]
>  并非所有的编译器支持代码区域指令。 为避免编译器错误，代码提供程序通常不包括代码区域指令不支持这些选项的编译器的提供程序输出中。  
  
   
  
## Examples  
 下面的代码示例演示了利用<xref:System.CodeDom.CodeRegionDirective>用于生成也会被编译的代码图的创建。  
  
 [!code-csharp[System.CodeDom.CodeDirectives#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDom.CodeDirectives/CS/codedirective.cs#1)]
 [!code-vb[System.CodeDom.CodeDirectives#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDom.CodeDirectives/VB/codedirective.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.CodeDom.CodeRegionDirective" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeRegionDirective ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeRegionDirective.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeRegionDirective();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>使用默认值初始化 <see cref="T:System.CodeDom.CodeRegionDirective" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果你使用此构造函数，还应设置<xref:System.CodeDom.CodeRegionDirective.RegionMode%2A>和<xref:System.CodeDom.CodeRegionDirective.RegionText%2A>属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeRegionDirective (System.CodeDom.CodeRegionMode regionMode, string regionText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.CodeDom.CodeRegionMode regionMode, string regionText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeRegionDirective.#ctor(System.CodeDom.CodeRegionMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (regionMode As CodeRegionMode, regionText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeRegionDirective(System::CodeDom::CodeRegionMode regionMode, System::String ^ regionText);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="regionMode" Type="System.CodeDom.CodeRegionMode" />
        <Parameter Name="regionText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="regionMode">
          <see cref="T:System.CodeDom.CodeRegionMode" /> 值之一。</param>
        <param name="regionText">区域的名称。</param>
        <summary>初始化 <see cref="T:System.CodeDom.CodeRegionDirective" /> 类的新实例，指定它的模式和名称。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示了利用<xref:System.CodeDom.CodeRegionDirective.%23ctor%28System.CodeDom.CodeRegionMode%2CSystem.String%29>构造函数。 此代码示例摘自更大的示例为提供<xref:System.CodeDom.CodeRegionDirective>类。  
  
 [!code-csharp[System.CodeDom.CodeDirectives#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDom.CodeDirectives/CS/codedirective.cs#9)]
 [!code-vb[System.CodeDom.CodeDirectives#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDom.CodeDirectives/VB/codedirective.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegionMode">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeRegionMode RegionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.CodeDom.CodeRegionMode RegionMode" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeRegionDirective.RegionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RegionMode As CodeRegionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeRegionMode RegionMode { System::CodeDom::CodeRegionMode get(); void set(System::CodeDom::CodeRegionMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeRegionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置区域指令的模式。</summary>
        <value>
          <see cref="T:System.CodeDom.CodeRegionMode" /> 值之一。 默认值为 <see cref="F:System.CodeDom.CodeRegionMode.None" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示了利用<xref:System.CodeDom.CodeRegionDirective.RegionMode%2A>属性。 此示例摘自更大的示例为提供<xref:System.CodeDom.CodeRegionDirective>类。  
  
 [!code-csharp[System.CodeDom.CodeDirectives#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDom.CodeDirectives/CS/codedirective.cs#11)]
 [!code-vb[System.CodeDom.CodeDirectives#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDom.CodeDirectives/VB/codedirective.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegionText">
      <MemberSignature Language="C#" Value="public string RegionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RegionText" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeRegionDirective.RegionText" />
      <MemberSignature Language="VB.NET" Value="Public Property RegionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RegionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置区域的名称。</summary>
        <value>区域的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示了利用<xref:System.CodeDom.CodeRegionDirective.RegionText%2A>属性。 此示例摘自更大的示例为提供<xref:System.CodeDom.CodeRegionDirective>类。  
  
 [!code-csharp[System.CodeDom.CodeDirectives#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDom.CodeDirectives/CS/codedirective.cs#12)]
 [!code-vb[System.CodeDom.CodeDirectives#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDom.CodeDirectives/VB/codedirective.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>