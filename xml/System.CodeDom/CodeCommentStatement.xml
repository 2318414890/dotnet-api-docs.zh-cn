<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodeCommentStatement.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5466537bbab088adb6c5a3d053844e25837f44537.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">466537bbab088adb6c5a3d053844e25837f44537</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeCommentStatement">
          <source>Represents a statement consisting of a single comment.</source>
          <target state="translated">表示由单个注释构成的语句。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeCommentStatement">
          <source><ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> can be used to represent a single-line comment statement.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> 可以用于表示的单行注释语句。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeCommentStatement">
          <source><ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> is a statement, so it can be inserted into a statements collection and will appear on its own line.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> 是一条语句，因此它可以插入语句集合，将出现在各占一行。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeCommentStatement">
          <source><ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> can also be added to the comments collection of <ph id="ph2">&lt;xref:System.CodeDom.CodeNamespace&gt;</ph> or any object that derives from <ph id="ph3">&lt;xref:System.CodeDom.CodeTypeMember&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> 此外可以添加到的注释集合<ph id="ph2">&lt;xref:System.CodeDom.CodeNamespace&gt;</ph>或派生自的任何对象<ph id="ph3">&lt;xref:System.CodeDom.CodeTypeMember&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeCommentStatement">
          <source>This example demonstrates using a <ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> to represent a comment in source code.</source>
          <target state="translated">此示例演示如何使用<ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph>来表示源代码中的注释。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeCommentStatement">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeCommentStatement.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.CodeDom.CodeComment)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeComment" /&gt;</ph> that indicates the comment.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeComment" /&gt;</ph>，指示注释。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.CodeDom.CodeComment)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> class using the specified comment.</source>
          <target state="translated">使用指定的注释初始化 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String)">
          <source>The contents of the comment.</source>
          <target state="translated">注释的内容。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> class using the specified text as contents.</source>
          <target state="translated">使用指定文本作为内容来初始化 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
          <source>The contents of the comment.</source>
          <target state="translated">注释的内容。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the comment is a documentation comment; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">当该注释是文档注释时为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> class using the specified text and documentation comment flag.</source>
          <target state="translated">使用指定的文本和文档注释标志初始化 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
          <source>If the <ph id="ph1">`docComment`</ph> parameter is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> is a documentation comment and the comment is structured using triple delimiter characters.</source>
          <target state="translated">如果<ph id="ph1">`docComment`</ph>参数是<ph id="ph2">`true`</ph>、<ph id="ph3">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph>是一个文档注释，注释在结构上使用三个分隔符字符。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
          <source>For example, in C# the comment is "<ph id="ph1">`///`</ph>", in Visual Basic "<ph id="ph2">`'''`</ph>".</source>
          <target state="translated">例如，在 C# 注释是"<ph id="ph1">`///`</ph>"，在 Visual Basic 中"<ph id="ph2">`'''`</ph>"。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
          <source>Documentation comments are used to identify an XML comment field, such as a type or member summary identified by the <ph id="ph1">`&lt;summary&gt;`</ph> element.</source>
          <target state="translated">文档注释用于标识 XML 注释字段，如类型或成员摘要由标识<ph id="ph1">`&lt;summary&gt;`</ph>元素。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement.%23ctor%28System.String%2CSystem.Boolean%29&gt;</ph> constructor to create a comment statement to be used as an XML comment field.</source>
          <target state="translated">下面的代码示例演示如何将<ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement.%23ctor%28System.String%2CSystem.Boolean%29&gt;</ph>构造函数来创建注释语句，用于为一个 XML 注释字段。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
          <source>This example is part of a larger example that follows.</source>
          <target state="translated">此示例摘自遵循一个更大示例。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
          <source>The following code example demonstrates the creation of a simple "Hello World" console application and the generation of an XML documentation file for the compiled application.</source>
          <target state="translated">下面的代码示例演示一个简单的"Hello World"控制台应用程序的创建和编译的应用程序生成的 XML 文档文件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeCommentStatement.Comment">
          <source>Gets or sets the contents of the comment.</source>
          <target state="translated">获取或设置注释的内容。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeCommentStatement.Comment">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeComment" /&gt;</ph> that indicates the comment.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeComment" /&gt;</ph>，指示注释。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>