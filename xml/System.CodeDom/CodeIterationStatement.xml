<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodeIterationStatement.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a602afb36a6ac9c38da796d2c7aecfe2e5f27528.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a602afb36a6ac9c38da796d2c7aecfe2e5f27528</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeIterationStatement">
          <source>Represents a <ph id="ph1">&lt;see langword="for" /&gt;</ph> statement, or a loop through a block of statements, using a test expression as a condition for continuing to loop.</source>
          <target state="translated">表示 <ph id="ph1">&lt;see langword="for" /&gt;</ph> 语句或语句块内的循环（使用测试表达式作为继续循环的条件）。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeIterationStatement">
          <source>A <ph id="ph1">&lt;xref:System.CodeDom.CodeIterationStatement&gt;</ph> can represent a <ph id="ph2">`for`</ph> loop or <ph id="ph3">`while`</ph> loop.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.CodeDom.CodeIterationStatement&gt;</ph>可以表示<ph id="ph2">`for`</ph>循环或<ph id="ph3">`while`</ph>循环。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeIterationStatement">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeIterationStatement.InitStatement%2A&gt;</ph> property specifies the statement to execute before the first loop iteration.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeIterationStatement.InitStatement%2A&gt;</ph>属性指定要在第一次循环迭代之前执行的语句。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeIterationStatement">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeIterationStatement.TestExpression%2A&gt;</ph> property specifies the loop continuation expression, which must evaluate to <ph id="ph2">`true`</ph> at the end of each loop iteration for another iteration to begin.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeIterationStatement.TestExpression%2A&gt;</ph>属性指定循环延续表达式计算结果必须为<ph id="ph2">`true`</ph>末尾的另一个迭代开始每个循环迭代。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeIterationStatement">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeIterationStatement.IncrementStatement%2A&gt;</ph> property specifies the statement to execute at the end of each loop iteration.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeIterationStatement.IncrementStatement%2A&gt;</ph>属性指定要执行的每个循环迭代末尾的语句。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeIterationStatement">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeIterationStatement.Statements%2A&gt;</ph> property specifies the collection of statements to execute within the loop.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeIterationStatement.Statements%2A&gt;</ph>属性指定要在循环内执行的语句的集合。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeIterationStatement">
          <source>This example demonstrates using a <ph id="ph1">&lt;xref:System.CodeDom.CodeIterationStatement&gt;</ph> to represent a <ph id="ph2">`for`</ph> loop.</source>
          <target state="translated">此示例演示如何使用<ph id="ph1">&lt;xref:System.CodeDom.CodeIterationStatement&gt;</ph>来表示<ph id="ph2">`for`</ph>循环。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeIterationStatement">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeIterationStatement" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeIterationStatement" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeIterationStatement.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeIterationStatement" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeIterationStatement" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeIterationStatement.#ctor(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.CodeDom.CodeStatement,System.CodeDom.CodeStatement[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> containing the loop initialization statement.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph>，包含循环初始化语句。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeIterationStatement.#ctor(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.CodeDom.CodeStatement,System.CodeDom.CodeStatement[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> containing the expression to test for exit condition.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph>，包含用于测试退出条件的表达式。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeIterationStatement.#ctor(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.CodeDom.CodeStatement,System.CodeDom.CodeStatement[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> containing the per-cycle increment statement.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph>，包含随循环递增的语句。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeIterationStatement.#ctor(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.CodeDom.CodeStatement,System.CodeDom.CodeStatement[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> containing the statements within the loop.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> 类型的数组，包含循环范围内的语句。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeIterationStatement.#ctor(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.CodeDom.CodeStatement,System.CodeDom.CodeStatement[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeIterationStatement" /&gt;</ph> class using the specified parameters.</source>
          <target state="translated">使用指定参数初始化 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeIterationStatement" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeIterationStatement.IncrementStatement">
          <source>Gets or sets the statement that is called after each loop cycle.</source>
          <target state="translated">获取或设置在每个循环周期后调用的语句。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeIterationStatement.IncrementStatement">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> that indicates the per cycle increment statement.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph>，指示随循环递增的语句。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeIterationStatement.IncrementStatement">
          <source>This statement is called after each iteration.</source>
          <target state="translated">此语句在每次迭代之后调用。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeIterationStatement.InitStatement">
          <source>Gets or sets the loop initialization statement.</source>
          <target state="translated">获取或设置循环初始化语句。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeIterationStatement.InitStatement">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> that indicates the loop initialization statement.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph>，指示循环初始化语句。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeIterationStatement.InitStatement">
          <source>You can specify an empty initialization statement by setting this property to a <ph id="ph1">&lt;xref:System.CodeDom.CodeExpressionStatement&gt;</ph> that contains a <ph id="ph2">&lt;xref:System.CodeDom.CodeSnippetExpression&gt;</ph> that contains an empty string.</source>
          <target state="translated">你可以通过将此属性设置为指定空的初始化语句<ph id="ph1">&lt;xref:System.CodeDom.CodeExpressionStatement&gt;</ph>包含<ph id="ph2">&lt;xref:System.CodeDom.CodeSnippetExpression&gt;</ph>包含一个空字符串。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeIterationStatement.Statements">
          <source>Gets the collection of statements to be executed within the loop.</source>
          <target state="translated">获取要在循环内执行的语句的集合。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeIterationStatement.Statements">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> that indicates the statements within the loop.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> 类型的数组，指示循环范围内的语句。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeIterationStatement.TestExpression">
          <source>Gets or sets the expression to test as the condition that continues the loop.</source>
          <target state="translated">获取或设置作为循环继续的条件进行测试的表达式。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeIterationStatement.TestExpression">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> that indicates the expression to test.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph>，指示要测试的表达式。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeIterationStatement.TestExpression">
          <source>If this expression resolves to <ph id="ph1">`true`</ph>, the loop will continue.</source>
          <target state="translated">如果此表达式解析为<ph id="ph1">`true`</ph>，则循环将继续。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>