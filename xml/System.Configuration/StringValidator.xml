<Type Name="StringValidator" FullName="System.Configuration.StringValidator">
  <TypeSignature Language="C#" Value="public class StringValidator : System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StringValidator extends System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.StringValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class StringValidator&#xA;Inherits ConfigurationValidatorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringValidator : System::Configuration::ConfigurationValidatorBase" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="70033-101">对字符串进行验证。</span><span class="sxs-lookup"><span data-stu-id="70033-101">Provides validation of a string.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70033-102"><xref:System.Configuration.StringValidator>类用于确保字符串满足特定条件。</span><span class="sxs-lookup"><span data-stu-id="70033-102">The <xref:System.Configuration.StringValidator> class is used to ensure that a string meets specific criteria.</span></span> <span data-ttu-id="70033-103">实例时，验证条件建立<xref:System.Configuration.StringValidator>创建类。</span><span class="sxs-lookup"><span data-stu-id="70033-103">The criteria for validation is established when an instance of the <xref:System.Configuration.StringValidator> class is created.</span></span> <span data-ttu-id="70033-104">有三个构造函数重载<xref:System.Configuration.StringValidator>类。</span><span class="sxs-lookup"><span data-stu-id="70033-104">There are three constructor overloads for the <xref:System.Configuration.StringValidator> class.</span></span> <span data-ttu-id="70033-105"><xref:System.Configuration.StringValidator.%23ctor%28System.Int32%29?displayProperty=nameWithType>带有一个参数的构造函数可以验证在正被验证的字符串可接受的最小长度。</span><span class="sxs-lookup"><span data-stu-id="70033-105">The <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%29?displayProperty=nameWithType> constructor with one parameter verifies the minimum acceptable length of the string being validated.</span></span> <span data-ttu-id="70033-106"><xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType>包含两个参数的构造函数可确保正在验证的字符串符合最小值和最大长度。</span><span class="sxs-lookup"><span data-stu-id="70033-106">The <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> constructor with two parameters ensures that the string being verified adheres to both a minimum and a maximum length.</span></span> <span data-ttu-id="70033-107"><xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%29?displayProperty=nameWithType>带有三个参数的构造函数检查所需的最低和进行验证，以及特定字符是否存在于正在验证的字符串的字符串的最大长度值。</span><span class="sxs-lookup"><span data-stu-id="70033-107">The <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%29?displayProperty=nameWithType> constructor with three parameters checks both the minimum and the maximum length values of the string being verified, as well as whether specific characters are present in the string being validated.</span></span>  
  
 <span data-ttu-id="70033-108"><xref:System.Configuration.StringValidator.CanValidate%2A>方法确定正在验证的对象类型是否与预期的类型匹配。</span><span class="sxs-lookup"><span data-stu-id="70033-108">The <xref:System.Configuration.StringValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type.</span></span> <span data-ttu-id="70033-109">正在验证该对象被传递的参数<xref:System.Configuration.StringValidator.Validate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="70033-109">The object being validated is passed as a parameter of the <xref:System.Configuration.StringValidator.Validate%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70033-110">下面的示例演示如何使用<xref:System.Configuration.StringValidator>类型。</span><span class="sxs-lookup"><span data-stu-id="70033-110">The following example demonstrates how to use the <xref:System.Configuration.StringValidator> type.</span></span>  
  
 [!code-csharp[System.Configuration.StringValidator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.StringValidator/CS/StringValidator.cs#1)]
 [!code-vb[System.Configuration.StringValidator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.StringValidator/VB/StringValidator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.StringValidatorAttribute" />
    <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="70033-111">初始化 <see cref="T:System.Configuration.StringValidator" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="70033-111">Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringValidator (int minLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minLength As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringValidator(int minLength);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minLength"><span data-ttu-id="70033-112">一个整数，指定字符串值的最小长度。</span><span class="sxs-lookup"><span data-stu-id="70033-112">An integer that specifies the minimum length of the string value.</span></span></param>
        <summary><span data-ttu-id="70033-113">使用所提供的参数初始化 <see cref="T:System.Configuration.StringValidator" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="70033-113">Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class, based on a supplied parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70033-114"><xref:System.Configuration.StringValidator.%23ctor%2A>构造函数可以验证在正被验证的字符串可接受的最小长度。</span><span class="sxs-lookup"><span data-stu-id="70033-114">The <xref:System.Configuration.StringValidator.%23ctor%2A> constructor verifies the minimum acceptable length of the string being validated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringValidator (int minLength, int maxLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minLength, int32 maxLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minLength As Integer, maxLength As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringValidator(int minLength, int maxLength);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minLength" Type="System.Int32" />
        <Parameter Name="maxLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minLength"><span data-ttu-id="70033-115">一个整数，指定字符串值的最小长度。</span><span class="sxs-lookup"><span data-stu-id="70033-115">An integer that specifies the minimum length of the string value.</span></span></param>
        <param name="maxLength"><span data-ttu-id="70033-116">一个整数，指定字符串值的最大长度。</span><span class="sxs-lookup"><span data-stu-id="70033-116">An integer that specifies the maximum length of the string value.</span></span></param>
        <summary><span data-ttu-id="70033-117">基于所提供的参数初始化 <see cref="T:System.Configuration.StringValidator" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="70033-117">Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class, based on supplied parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70033-118">这<xref:System.Configuration.StringValidator.%23ctor%2A>构造函数可确保正在验证的字符串符合最小值和最大长度。</span><span class="sxs-lookup"><span data-stu-id="70033-118">This <xref:System.Configuration.StringValidator.%23ctor%2A> constructor ensures that the string being verified adheres to both a minimum and a maximum length.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringValidator (int minLength, int maxLength, string invalidCharacters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minLength, int32 maxLength, string invalidCharacters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minLength As Integer, maxLength As Integer, invalidCharacters As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringValidator(int minLength, int maxLength, System::String ^ invalidCharacters);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minLength" Type="System.Int32" />
        <Parameter Name="maxLength" Type="System.Int32" />
        <Parameter Name="invalidCharacters" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="minLength"><span data-ttu-id="70033-119">一个整数，指定字符串值的最小长度。</span><span class="sxs-lookup"><span data-stu-id="70033-119">An integer that specifies the minimum length of the string value.</span></span></param>
        <param name="maxLength"><span data-ttu-id="70033-120">一个整数，指定字符串值的最大长度。</span><span class="sxs-lookup"><span data-stu-id="70033-120">An integer that specifies the maximum length of the string value.</span></span></param>
        <param name="invalidCharacters"><span data-ttu-id="70033-121">一个表示无效字符的字符串。</span><span class="sxs-lookup"><span data-stu-id="70033-121">A string that represents invalid characters.</span></span></param>
        <summary><span data-ttu-id="70033-122">基于所提供的参数初始化 <see cref="T:System.Configuration.StringValidator" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="70033-122">Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class, based on supplied parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70033-123">这<xref:System.Configuration.StringValidator.%23ctor%2A>构造函数可确保，在正被验证的字符串符合最小值和最大长度，而且还可确保特定字符被排除在字符串中。</span><span class="sxs-lookup"><span data-stu-id="70033-123">This <xref:System.Configuration.StringValidator.%23ctor%2A> constructor ensures that the string being validated adheres to both a minimum and a maximum length, and also ensures that specific characters are excluded in the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70033-124">下面的示例演示如何使用此<xref:System.Configuration.StringValidator.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="70033-124">The following example demonstrates how to use this <xref:System.Configuration.StringValidator.%23ctor%2A> constructor.</span></span> <span data-ttu-id="70033-125">此代码示例摘自更大的示例为提供<xref:System.Configuration.StringValidator>类。</span><span class="sxs-lookup"><span data-stu-id="70033-125">This code example is part of a larger example provided for the <xref:System.Configuration.StringValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.StringValidator#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.StringValidator/CS/StringValidator.cs#2)]
 [!code-vb[System.Configuration.StringValidator#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.StringValidator/VB/StringValidator.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidate">
      <MemberSignature Language="C#" Value="public override bool CanValidate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanValidate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.CanValidate(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanValidate(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="70033-126">对象类型。</span><span class="sxs-lookup"><span data-stu-id="70033-126">The object type.</span></span></param>
        <summary><span data-ttu-id="70033-127">根据类型确定对象是否可验证。</span><span class="sxs-lookup"><span data-stu-id="70033-127">Determines whether an object can be validated based on type.</span></span></summary>
        <returns>
          <span data-ttu-id="70033-128">如果 <paramref name="type" /> 参数与字符串匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="70033-128"><see langword="true" /> if the <paramref name="type" /> parameter matches a string; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="70033-129">下面的示例演示如何使用 <xref:System.Configuration.StringValidator.CanValidate%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="70033-129">The following example demonstrates how to use the <xref:System.Configuration.StringValidator.CanValidate%2A> method.</span></span> <span data-ttu-id="70033-130">此代码示例摘自更大的示例为提供<xref:System.Configuration.StringValidator>类。</span><span class="sxs-lookup"><span data-stu-id="70033-130">This code example is part of a larger example provided for the <xref:System.Configuration.StringValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.StringValidator#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.StringValidator/CS/StringValidator.cs#3)]
 [!code-vb[System.Configuration.StringValidator#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.StringValidator/VB/StringValidator.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.Validate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="70033-131">对象值。</span><span class="sxs-lookup"><span data-stu-id="70033-131">The object value.</span></span></param>
        <summary><span data-ttu-id="70033-132">确定对象的值是否有效。</span><span class="sxs-lookup"><span data-stu-id="70033-132">Determines whether the value of an object is valid.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70033-133"><xref:System.Configuration.StringValidator>类包含验证一个字符串对象所需的条件。</span><span class="sxs-lookup"><span data-stu-id="70033-133">The <xref:System.Configuration.StringValidator> class contains the criteria necessary to validate a string object.</span></span> <span data-ttu-id="70033-134">实例时，条件建立<xref:System.Configuration.StringValidator>创建类。</span><span class="sxs-lookup"><span data-stu-id="70033-134">The criteria are established when an instance of the <xref:System.Configuration.StringValidator> class is created.</span></span> <span data-ttu-id="70033-135">要验证的对象作为参数传递<xref:System.Configuration.StringValidator.Validate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="70033-135">The object to validate is passed as a parameter of the <xref:System.Configuration.StringValidator.Validate%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70033-136">下面的示例演示如何使用 <xref:System.Configuration.StringValidator.Validate%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="70033-136">The following example demonstrates how to use the <xref:System.Configuration.StringValidator.Validate%2A> method.</span></span> <span data-ttu-id="70033-137">此代码示例摘自更大的示例为提供<xref:System.Configuration.StringValidator>类。</span><span class="sxs-lookup"><span data-stu-id="70033-137">This code example is part of a larger example provided for the <xref:System.Configuration.StringValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.StringValidator#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.StringValidator/CS/StringValidator.cs#4)]
 [!code-vb[System.Configuration.StringValidator#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.StringValidator/VB/StringValidator.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="70033-138"><paramref name="value" /> 小于构造函数中定义的 <paramref name="minValue" /> 或大于构造函数中定义的 <paramref name="maxValue" />。</span><span class="sxs-lookup"><span data-stu-id="70033-138"><paramref name="value" /> is less than <paramref name="minValue" /> or greater than <paramref name="maxValue" /> as defined in the constructor.</span></span>  
  
 <span data-ttu-id="70033-139">\- 或 -</span><span class="sxs-lookup"><span data-stu-id="70033-139">\- or -</span></span>  
  
 <span data-ttu-id="70033-140"><paramref name="value" /> 包含无效字符。</span><span class="sxs-lookup"><span data-stu-id="70033-140"><paramref name="value" /> contains invalid characters.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>