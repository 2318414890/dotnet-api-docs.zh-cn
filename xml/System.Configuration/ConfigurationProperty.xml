<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ConfigurationProperty.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d3169b3b05595f9463dea745593214b3151a366b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d3169b3b05595f9463dea745593214b3151a366b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Configuration.ConfigurationProperty">
          <source>Represents an attribute or a child of a configuration element.</source>
          <target state="translated">表示配置元素的一个特性或子级。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Configuration.ConfigurationProperty">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>In the case of a simple <ph id="ph1">&lt;xref:System.Configuration.ConfigurationElement&gt;</ph>, such as the <ph id="ph2">`CustomSection`</ph> shown in the next example, the <ph id="ph3">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> objects represent attributes such as <ph id="ph4">`fileName`</ph>.</source>
          <target state="translated">在一个简单的情况下<ph id="ph1">&lt;xref:System.Configuration.ConfigurationElement&gt;</ph>，如<ph id="ph2">`CustomSection`</ph>下一步的示例所示<ph id="ph3">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph>对象表示属性如<ph id="ph4">`fileName`</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>In the case of more complex configuration elements such as a section containing subsections, for instance <ph id="ph1">`authentication`</ph>, the <ph id="ph2">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> objects can represent <ph id="ph3">&lt;xref:System.Configuration.ConfigurationElement&gt;</ph> objects as well as attributes.</source>
          <target state="translated">对于更复杂的配置元素，如实例包含小节中，部分<ph id="ph1">`authentication`</ph>、<ph id="ph2">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph>对象可以表示<ph id="ph3">&lt;xref:System.Configuration.ConfigurationElement&gt;</ph>对象及其属性。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ConfigurationPropertyCollection&gt;</ph> class represents the collection of the <ph id="ph2">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> objects that can be either attributes or <ph id="ph3">&lt;xref:System.Configuration.ConfigurationElement&gt;</ph> objects of a configuration element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ConfigurationPropertyCollection&gt;</ph>类表示的集合<ph id="ph2">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph>可以是任一属性的对象或<ph id="ph3">&lt;xref:System.Configuration.ConfigurationElement&gt;</ph>配置元素的对象。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> class represents an individual configuration setting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph>类表示单独的配置设置。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>This class allows you to get or set the name, type, and default value for a particular configuration entity (attribute or element) and specify whether the attribute is required, is an element key, or represents a default element collection.</source>
          <target state="translated">此类，可获取或设置名称、 类型和特定配置实体 （属性或元素） 的默认值，并指定该属性是必需的、 是否为元素键，或表示默认的元素集合。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> when you create a custom section.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph>当创建自定义的部分。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>The following is an excerpt of the configuration file used by the code in the previous example.</source>
          <target state="translated">下面是在前面的示例代码所使用的配置文件的摘录。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>The following example shows how to create the previous section in code.</source>
          <target state="translated">下面的示例演示如何在代码中创建上一节。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>Every <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph> object creates an internal <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationPropertyCollection" /&gt;</ph> collection of <ph id="ph3">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> objects that represents either the element attributes or a collection of child elements.</source>
          <target state="translated">每个<ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph>对象创建内部<ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationPropertyCollection" /&gt;</ph>集合<ph id="ph3">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph>表示将元素属性或子元素的集合的对象。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>Non-customizable information and functionality is contained by an <ph id="ph1">&lt;see cref="T:System.Configuration.ElementInformation" /&gt;</ph> object provided by the <ph id="ph2">&lt;see cref="P:System.Configuration.ConfigurationElement.ElementInformation" /&gt;</ph> property.</source>
          <target state="translated">非自定义的信息和功能所包含<ph id="ph1">&lt;see cref="T:System.Configuration.ElementInformation" /&gt;</ph>提供对象<ph id="ph2">&lt;see cref="P:System.Configuration.ConfigurationElement.ElementInformation" /&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>You can use a programmatic or a declarative (attributed) coding model to create a custom configuration element.</source>
          <target state="translated">可用于以编程方式或声明性 （特性化） 编码模型创建自定义配置元素。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>Programmatic Model.</source>
          <target state="translated">编程模型。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>This model requires that you create a property for each element attribute to get and/or set its value and add it to the internal property bag of the underlying <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph> base class.</source>
          <target state="translated">此模型要求创建一个用于获取和/或将其值设置并将其添加到基础的内部属性包每个元素属性的属性<ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph>基类。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>Declarative Model.</source>
          <target state="translated">声明性模型。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>This simpler model, also called attributed model, allows you to define an element attribute by using a property and decorate it with attributes.</source>
          <target state="translated">此种比较简单的模型，也称为特性化的模型中，允许您通过使用的属性定义元素属性并与特性来修饰它。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>These attributes instruct the ASP.NET configuration system about the property types and their default values.</source>
          <target state="translated">这些属性指示 ASP.NET 配置系统有关属性类型和其默认值。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>With this information, obtained through reflection, the ASP.NET configuration system creates the element property objects for you and performs the required initialization.</source>
          <target state="translated">使用此信息，通过反射，获取 ASP.NET 配置系统为你创建元素属性对象，并执行所需的初始化。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="T:System.Configuration.ConfigurationProperty">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)">
          <source>The name of the configuration entity.</source>
          <target state="translated">配置实体的名称。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)">
          <source>The type of the configuration entity.</source>
          <target state="translated">配置实体的类型。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)">
          <source>The name of the configuration entity.</source>
          <target state="translated">配置实体的名称。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)">
          <source>The type of the configuration entity.</source>
          <target state="translated">配置实体的类型。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)">
          <source>When you instantiate a <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> object using this constructor, the <ph id="ph2">&lt;xref:System.Configuration.ConfigurationProperty.IsRequired%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Configuration.ConfigurationProperty.IsKey%2A&gt;</ph> properties are set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">当实例化<ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph>对象使用此构造函数，<ph id="ph2">&lt;xref:System.Configuration.ConfigurationProperty.IsRequired%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Configuration.ConfigurationProperty.IsKey%2A&gt;</ph>属性设置为<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)">
          <source>Additionally, an instance made with this constructor will not function as a default collection-key property.</source>
          <target state="translated">此外，使用此构造函数进行的实例将不作为默认集合键属性。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.%23ctor%28System.String%2CSystem.Type%2CSystem.Object%29?displayProperty=nameWithType&gt;</ph> constructor to instantiate a configuration-property object.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.%23ctor%28System.String%2CSystem.Type%2CSystem.Object%29?displayProperty=nameWithType&gt;</ph>构造函数实例化一个配置属性对象。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)">
          <source>The name of the configuration entity.</source>
          <target state="translated">配置实体的名称。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)">
          <source>The type of the configuration entity.</source>
          <target state="translated">配置实体的类型。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)">
          <source>The following code example shows how to use <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.%23ctor%28System.String%2CSystem.Type%2CSystem.Object%2CSystem.Configuration.ConfigurationPropertyOptions%29?displayProperty=nameWithType&gt;</ph> constructor to instantiate a configuration-property object.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.%23ctor%28System.String%2CSystem.Type%2CSystem.Object%2CSystem.Configuration.ConfigurationPropertyOptions%29?displayProperty=nameWithType&gt;</ph>构造函数实例化一个配置属性对象。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)">
          <source>The name of the configuration entity.</source>
          <target state="translated">配置实体的名称。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)">
          <source>The type of the configuration entity.</source>
          <target state="translated">配置实体的类型。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)">
          <source>The following code example shows the kind of parameters to use when calling the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.%23ctor%28System.String%2CSystem.Type%2CSystem.Object%2CSystem.ComponentModel.TypeConverter%2CSystem.Configuration.ConfigurationValidatorBase%2CSystem.Configuration.ConfigurationPropertyOptions%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">下面的代码示例演示要在调用时使用的参数类型<ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.%23ctor%28System.String%2CSystem.Type%2CSystem.Object%2CSystem.ComponentModel.TypeConverter%2CSystem.Configuration.ConfigurationValidatorBase%2CSystem.Configuration.ConfigurationPropertyOptions%29?displayProperty=nameWithType&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)">
          <source>The name of the configuration entity.</source>
          <target state="translated">配置实体的名称。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)">
          <source>The type of the configuration entity.</source>
          <target state="translated">配置实体的类型。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)">
          <source>The description of the configuration entity.</source>
          <target state="translated">配置实体的说明。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.%23ctor%28System.String%2CSystem.Type%2CSystem.Object%2CSystem.ComponentModel.TypeConverter%2CSystem.Configuration.ConfigurationValidatorBase%2CSystem.Configuration.ConfigurationPropertyOptions%2CSystem.String%29?displayProperty=nameWithType&gt;</ph> constructor to instantiate a configuration-property object.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.%23ctor%28System.String%2CSystem.Type%2CSystem.Object%2CSystem.ComponentModel.TypeConverter%2CSystem.Configuration.ConfigurationValidatorBase%2CSystem.Configuration.ConfigurationPropertyOptions%2CSystem.String%29?displayProperty=nameWithType&gt;</ph>构造函数实例化一个配置属性对象。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationProperty.Converter">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> used to convert this <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> into an XML representation for writing to the configuration file.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph>，该转换器用于将此 <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 转换为便于写入配置文件的 XML 表示形式。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.Converter">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> used to convert this <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> into an XML representation for writing to the configuration file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> 用于将此 <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 转换为便于写入配置文件的 XML 表示形式。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.Converter">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.Converter%2A&gt;</ph> property to get the <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> for a specified configuration-property object.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.Converter%2A&gt;</ph>属性来获取<ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>指定的配置属性对象。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationProperty.Converter">
          <source>This <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> cannot be converted.</source>
          <target state="translated">此 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 无法转换。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationProperty.DefaultValue">
          <source>Gets the default value for this <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> property.</source>
          <target state="translated">获取此 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 属性的默认值。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.DefaultValue">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that can be cast to the type specified by the <ph id="ph2">&lt;see cref="P:System.Configuration.ConfigurationProperty.Type" /&gt;</ph> property.</source>
          <target state="translated">可被强制转换为 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 属性所指定类型的 <ph id="ph2">&lt;see cref="P:System.Configuration.ConfigurationProperty.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.DefaultValue">
          <source>The default value of a new <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> object is passed into its constructor.</source>
          <target state="translated">一个新的默认值<ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph>对象传递到其构造函数。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.DefaultValue">
          <source>That same object will be returned by the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.DefaultValue%2A&gt;</ph> property.</source>
          <target state="translated">将返回该同一对象<ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.DefaultValue%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.DefaultValue">
          <source>The following code example shows how to get the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.DefaultValue%2A&gt;</ph> for a specified property.</source>
          <target state="translated">下面的代码示例演示如何获取<ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.DefaultValue%2A&gt;</ph>针对指定属性。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationProperty.Description">
          <source>Gets the description associated with the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph>.</source>
          <target state="translated">获取与 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 关联的说明。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.Description">
          <source>A <ph id="ph1">&lt;see langword="string" /&gt;</ph> value that describes the property.</source>
          <target state="translated">描述属性的 <ph id="ph1">&lt;see langword="string" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.Description">
          <source>The following code example shows how to get the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.Description%2A&gt;</ph> for a specified property.</source>
          <target state="translated">下面的代码示例演示如何获取<ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.Description%2A&gt;</ph>针对指定属性。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired">
          <source>Indicates whether the assembly name for the configuration property requires transformation when it is serialized for an earlier version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">指示在针对早期版本的 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 序列化配置属性时，是否需要转换该属性的程序集名称。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property requires assembly name transformation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果该属性需要转换程序集名称，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired">
          <source>You use <ph id="ph1">&lt;xref:System.Configuration.ConfigurationPropertyOptions&gt;</ph> to set this property when you call a constructor that includes a <ph id="ph2">&lt;xref:System.Configuration.ConfigurationPropertyOptions&gt;</ph> parameter.</source>
          <target state="translated">你使用<ph id="ph1">&lt;xref:System.Configuration.ConfigurationPropertyOptions&gt;</ph>要设置此属性时调用的构造函数，包括<ph id="ph2">&lt;xref:System.Configuration.ConfigurationPropertyOptions&gt;</ph>参数。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired">
          <source>This value is ignored if the property does not contain an assembly name string.</source>
          <target state="translated">如果属性不包含程序集名称字符串，则忽略此值。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationProperty.IsDefaultCollection">
          <source>Gets a value that indicates whether the property is the default collection of an element.</source>
          <target state="translated">获取一个值，该值指示属性是否为默认的元素集合。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsDefaultCollection">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property is the default collection of an element; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果属性是元素的默认集合，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsDefaultCollection">
          <source>This value is ignored if the property is not a collection.</source>
          <target state="translated">如果属性不是一个集合，则忽略此值。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationProperty.IsKey">
          <source>Gets a value indicating whether this <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> is the key for the containing <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph> object.</source>
          <target state="translated">获取一个值，该值指示此 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 是否为 <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph> 包含对象的键。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsKey">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> object is the key for the containing element; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果此 <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 对象是包含元素的键，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsKey">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsKey">
          <source>You can define a new <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> object to be the key for the containing element when implementing the <ph id="ph2">&lt;xref:System.Configuration.ConfigurationElement&gt;</ph> element.</source>
          <target state="translated">你可以定义一个新<ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph>实现时要包含的元素的键对象<ph id="ph2">&lt;xref:System.Configuration.ConfigurationElement&gt;</ph>元素。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsKey">
          <source>If this flag is not used, the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.IsKey%2A&gt;</ph> property will return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">如果未使用此标志，<ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.IsKey%2A&gt;</ph>属性将返回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsKey">
          <source>The following code example shows how to get the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.IsKey%2A&gt;</ph> property for a specified property.</source>
          <target state="translated">下面的代码示例演示如何获取<ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.IsKey%2A&gt;</ph>针对指定属性的属性。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationProperty.IsRequired">
          <source>Gets a value indicating whether this <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> is required.</source>
          <target state="translated">获取一个值，该值指示此 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 是否为必需的。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsRequired">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> is required; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 是必需的，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsRequired">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsRequired">
          <source>The following code example shows how to get the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.IsRequired%2A&gt;</ph> property value for a specified configuration-property object.</source>
          <target state="translated">下面的代码示例演示如何获取<ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.IsRequired%2A&gt;</ph>指定的配置属性对象的属性值。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired">
          <source>Indicates whether the type name for the configuration property requires transformation when it is serialized for an earlier version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">指示在针对早期版本的 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 序列化配置属性时，是否需要转换该属性的类型名称。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property requires type-name transformation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果该属性需要转换类型名称，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired">
          <source>You use <ph id="ph1">&lt;xref:System.Configuration.ConfigurationPropertyOptions&gt;</ph> to set this property when you call a constructor that includes a <ph id="ph2">&lt;xref:System.Configuration.ConfigurationPropertyOptions&gt;</ph> parameter.</source>
          <target state="translated">你使用<ph id="ph1">&lt;xref:System.Configuration.ConfigurationPropertyOptions&gt;</ph>要设置此属性时调用的构造函数，包括<ph id="ph2">&lt;xref:System.Configuration.ConfigurationPropertyOptions&gt;</ph>参数。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired">
          <source>This value is ignored if the property does not contain a type-name string.</source>
          <target state="translated">如果属性不包含类型名称字符串，则忽略此值。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationProperty.IsVersionCheckRequired">
          <source>Indicates whether the configuration property's parent configuration section is queried at serialization time to determine whether the configuration property should be serialized into XML.</source>
          <target state="translated">指示进行序列化时是否应查询配置属性的父配置节，以确定是否应将配置属性序列化到 XML 中。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsVersionCheckRequired">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the parent configuration section should be queried; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果应查询父配置节，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsVersionCheckRequired">
          <source>If you are creating a configuration property for the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> or later versions, and if the property value should not be serialized to XML when an earlier version of the framework is targeted, set this property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">如果要创建的配置属性<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>或更高版本，如果属性值应无法序列化为 XML，在面向早期版本的 framework 时，将此属性设置为<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsVersionCheckRequired">
          <source>You use <ph id="ph1">&lt;xref:System.Configuration.ConfigurationPropertyOptions&gt;</ph> to set this property when you call a constructor that includes a <ph id="ph2">&lt;xref:System.Configuration.ConfigurationPropertyOptions&gt;</ph> parameter.</source>
          <target state="translated">你使用<ph id="ph1">&lt;xref:System.Configuration.ConfigurationPropertyOptions&gt;</ph>要设置此属性时调用的构造函数，包括<ph id="ph2">&lt;xref:System.Configuration.ConfigurationPropertyOptions&gt;</ph>参数。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationProperty.Name">
          <source>Gets the name of this <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph>.</source>
          <target state="translated">获取此 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 的名称。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.Name">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 的名称。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.Name">
          <source>If an instance of a <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> is a default collection, its name will be automatically defined to be an empty string.</source>
          <target state="translated">实例时，如果<ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph>是默认集合，其名称将自动定义为一个空字符串。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.Name">
          <source>The following code example shows how to get the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.Name%2A&gt;</ph> for a specified property.</source>
          <target state="translated">下面的代码示例演示如何获取<ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.Name%2A&gt;</ph>针对指定属性。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationProperty.Type">
          <source>Gets the type of this <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> object.</source>
          <target state="translated">获取此 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 对象的类型。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.Type">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> representing the type of this <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> object.</source>
          <target state="translated">一个表示此 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 对象的类型的 <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.Type">
          <source>Use <ph id="ph1">`Type`</ph> to determine the fully qualified namespace and class name for this derived instance of <ph id="ph2">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph>.</source>
          <target state="translated">使用<ph id="ph1">`Type`</ph>若要确定此派生实例的完全限定的命名空间和类名称<ph id="ph2">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.Type">
          <source>The following example shows how to get the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.Type%2A&gt;</ph> property value for a specified configuration-property object.</source>
          <target state="translated">下面的示例演示如何获取<ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.Type%2A&gt;</ph>指定的配置属性对象的属性值。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationProperty.Validator">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationValidatorAttribute" /&gt;</ph>, which is used to validate this <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> object.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationValidatorAttribute" /&gt;</ph>，它用于验证此 <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.Validator">
          <source>The <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationValidatorBase" /&gt;</ph> validator, which is used to validate this <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph>.</source>
          <target state="translated">用于验证此 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationValidatorBase" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 验证程序。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.Validator">
          <source>The following code example shows how to get the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.Validator%2A&gt;</ph> for a specified property.</source>
          <target state="translated">下面的代码示例演示如何获取<ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.Validator%2A&gt;</ph>针对指定属性。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>