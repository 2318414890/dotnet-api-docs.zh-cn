<Type Name="ConfigurationElementCollection" FullName="System.Configuration.ConfigurationElementCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1d9a5a8b07f87e1df7c3b5b01f6c174f601db87d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39909094" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ConfigurationElementCollection : System.Configuration.ConfigurationElement, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConfigurationElementCollection extends System.Configuration.ConfigurationElement implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationElementCollection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConfigurationElementCollection&#xA;Inherits ConfigurationElement&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationElementCollection abstract : System::Configuration::ConfigurationElement, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type ConfigurationElementCollection = class&#xA;    inherit ConfigurationElement&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="74b36-101">表示包含一个子元素集合的配置元素。</span>
      <span class="sxs-lookup">
        <span data-stu-id="74b36-101">Represents a configuration element containing a collection of child elements.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-102"><xref:System.Configuration.ConfigurationElementCollection>表示配置文件中的元素的集合。</span><span class="sxs-lookup"><span data-stu-id="74b36-102">The <xref:System.Configuration.ConfigurationElementCollection> represents a collection of elements within a configuration file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="74b36-103">配置文件中的某个元素引用一个基本的 XML 元素或部分。</span><span class="sxs-lookup"><span data-stu-id="74b36-103">An element within a configuration file refers to a basic XML element or a section.</span></span> <span data-ttu-id="74b36-104">如果有，一个简单的元素是具有相关属性的 XML 标记。</span><span class="sxs-lookup"><span data-stu-id="74b36-104">A simple element is an XML tag with related attributes, if any.</span></span> <span data-ttu-id="74b36-105">简单元素构成了一个部分。</span><span class="sxs-lookup"><span data-stu-id="74b36-105">A simple element constitutes a section.</span></span> <span data-ttu-id="74b36-106">复杂的部分可以包含一个或多个简单的元素、 一系列元素，以及其他部分。</span><span class="sxs-lookup"><span data-stu-id="74b36-106">Complex sections can contain one or more simple elements, a collection of elements, and other sections.</span></span>  
  
 <span data-ttu-id="74b36-107">您使用<xref:System.Configuration.ConfigurationElementCollection>若要运行了一系列<xref:System.Configuration.ConfigurationElement>对象。</span><span class="sxs-lookup"><span data-stu-id="74b36-107">You use the <xref:System.Configuration.ConfigurationElementCollection> to work with a collection of <xref:System.Configuration.ConfigurationElement> objects.</span></span> <span data-ttu-id="74b36-108">实现此类来添加自定义集合<xref:System.Configuration.ConfigurationElement>元素与<xref:System.Configuration.ConfigurationSection>。</span><span class="sxs-lookup"><span data-stu-id="74b36-108">Implement this class to add collections of custom <xref:System.Configuration.ConfigurationElement> elements to a <xref:System.Configuration.ConfigurationSection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74b36-109">下面的示例演示如何使用<xref:System.Configuration.ConfigurationElementCollection>。</span><span class="sxs-lookup"><span data-stu-id="74b36-109">The following example shows how to use the <xref:System.Configuration.ConfigurationElementCollection>.</span></span>  
  
 <span data-ttu-id="74b36-110">第一个示例由三个类组成： `UrlsSection`，`UrlsCollection`和`UrlConfigElement`。`UrlsSection`类使用<xref:System.Configuration.ConfigurationCollectionAttribute>来定义自定义配置节。</span><span class="sxs-lookup"><span data-stu-id="74b36-110">The first example consists of three classes: `UrlsSection`, `UrlsCollection` and `UrlConfigElement`.The `UrlsSection` class uses the <xref:System.Configuration.ConfigurationCollectionAttribute> to define a custom configuration section.</span></span> <span data-ttu-id="74b36-111">本部分包含 URL 集合 (由定义`UrlsCollection`类) 的 URL 元素 (由定义`UrlConfigElement`类)。</span><span class="sxs-lookup"><span data-stu-id="74b36-111">This section contains a URL collection (defined by the `UrlsCollection` class) of URL elements (defined by the `UrlConfigElement` class).</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#1)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#1)]  
  
 <span data-ttu-id="74b36-112">此第二个代码示例使用前面指定的类。</span><span class="sxs-lookup"><span data-stu-id="74b36-112">This second code example uses the classes specified before.</span></span> <span data-ttu-id="74b36-113">您将合并这两个示例控制台应用程序项目中。</span><span class="sxs-lookup"><span data-stu-id="74b36-113">You combine these two examples in a console application project.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#31](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/usingconfigurationcollectionelement.cs#31)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#31](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/usingconfigurationcollectionelement.vb#31)]  
  
 <span data-ttu-id="74b36-114">运行控制台应用程序的实例时`UrlsSection`创建类并在应用程序配置文件中生成以下配置元素：</span><span class="sxs-lookup"><span data-stu-id="74b36-114">When you run the console application, an instance of the `UrlsSection` class is created and the following configuration elements are generated in the application configuration file:</span></span>  
  
```xml  
<configuration>  
    <configSections>  
        <section name="MyUrls" type="UrlsSection,   
          ConfigurationElementCollection, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />  
    </configSections>  
    <MyUrls>  
        <urls>  
           <add name="Contoso" url="http://www.contoso.com" port="4040 />  
        </urls>  
    </MyUrls>  
</configuration  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="74b36-115">
        <para>可以使用编程方式或声明性的 （特性化） 编码模型来创建自定义配置元素。编程模型要求为每个元素的属性创建属性来获取和设置其值，并添加到的基础的内部属性包<see cref="T:System.Configuration.ConfigurationElement" />基类。声明性模型，也称为特性化模型，可以通过使用属性并将其配置与属性定义元素属性。这些属性指示 ASP.NET 配置系统有关的属性类型及其默认值。ASP.NET 可以使用反射来获取此信息创建的元素属性的对象并执行所需的初始化。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="74b36-115">
          <para>You can use a programmatic or a declarative (attributed) coding model to create a custom configuration element.  The programmatic model requires that for each element attribute you create a property to get and set its value, and that you add it to the internal property bag of the underlying <see cref="T:System.Configuration.ConfigurationElement" /> base class.  The declarative model, also referred to as the attributed model, allows you to define an element attribute by using a property and configuring it with attributes. These attributes instruct the ASP.NET configuration system about the property types and their default values. ASP.NET can use reflection to obtain this information and then create the element property objects and perform the required initialization.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Configuration.ElementInformation" />
    <altmember cref="T:System.Configuration.ConfigurationElement" />
    <altmember cref="T:System.Configuration.ConfigurationElementCollectionType" />
    <altmember cref="T:System.Configuration.ConfigurationProperty" />
    <altmember cref="T:System.Configuration.ConfigurationPropertyCollection" />
    <altmember cref="T:System.Configuration.ConfigurationSection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="74b36-116">初始化 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-116">Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationElementCollection" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConfigurationElementCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ConfigurationElementCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="74b36-117">初始化 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-117">Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationElementCollection" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-118">创建的新实例<xref:System.Configuration.ConfigurationElementCollection>应用程序需要创建自定义<xref:System.Configuration.ConfigurationElementCollection>。</span><span class="sxs-lookup"><span data-stu-id="74b36-118">You create a new instance of the <xref:System.Configuration.ConfigurationElementCollection> when your application needs to create a custom <xref:System.Configuration.ConfigurationElementCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConfigurationElementCollection (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ConfigurationElementCollection(System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ConfigurationElementCollection : System.Collections.IComparer -&gt; System.Configuration.ConfigurationElementCollection" Usage="new System.Configuration.ConfigurationElementCollection comparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="74b36-119">要使用的 <see cref="T:System.Collections.IComparer" /> 比较器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-119">The <see cref="T:System.Collections.IComparer" /> comparer to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74b36-120">创建 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-120">Creates a new instance of the <see cref="T:System.Configuration.ConfigurationElementCollection" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-121"><xref:System.Collections.IComparer>用于设置要使用的比较器。</span><span class="sxs-lookup"><span data-stu-id="74b36-121">The <xref:System.Collections.IComparer> is used to set a comparer to use.</span></span> <span data-ttu-id="74b36-122">例如，不区分大小写的比较器可用于使密钥不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="74b36-122">For example, you can use a case-insensitive comparer to make the key case insensitive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="74b36-123">
            <paramref name="comparer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-123">
              <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddElementName">
      <MemberSignature Language="C#" Value="protected internal string AddElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AddElementName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property AddElementName As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ AddElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AddElementName : string with get, set" Usage="System.Configuration.ConfigurationElementCollection.AddElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74b36-124">在派生的类中重写时，获取或设置 <see cref="T:System.Configuration.ConfigurationElement" /> 的名称，以便在 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 中与添加操作关联。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-124">Gets or sets the name of the <see cref="T:System.Configuration.ConfigurationElement" /> to associate with the add operation in the <see cref="T:System.Configuration.ConfigurationElementCollection" /> when overridden in a derived class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="74b36-125">元素的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-125">The name of the element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="74b36-126">选定值以保留前缀“config”或“lock”开头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-126">The selected value starts with the reserved prefix "config" or "lock".</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BaseAdd">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="74b36-127">在派生的类中重写时，向 <see cref="T:System.Configuration.ConfigurationElement" /> 实例添加 <see cref="T:System.Configuration.ConfigurationElementCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-127">Adds a <see cref="T:System.Configuration.ConfigurationElement" /> to an <see cref="T:System.Configuration.ConfigurationElementCollection" /> instance when overridden in a derived class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-128">使用<xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A>方法将添加一个新<xref:System.Configuration.ConfigurationElement>到集合。</span><span class="sxs-lookup"><span data-stu-id="74b36-128">Use the <xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A> method to add a new <xref:System.Configuration.ConfigurationElement> to the collection.</span></span> <span data-ttu-id="74b36-129">在派生类中重写，如果添加元素时，所需自定义行为。</span><span class="sxs-lookup"><span data-stu-id="74b36-129">Override in a derived class if custom behavior is required when the element is added.</span></span>  
  
 <span data-ttu-id="74b36-130">添加元素时，只有键相同而值不同的元素才被视为重复元素。</span><span class="sxs-lookup"><span data-stu-id="74b36-130">When adding, an element is considered a duplicate only if the keys are identical but the values are different.</span></span> <span data-ttu-id="74b36-131">键和值都相同的元素将被接受并且不给出提示，原因是这些元素不会相互竞争。</span><span class="sxs-lookup"><span data-stu-id="74b36-131">Elements with identical keys and values are accepted silently because the elements do not compete.</span></span> <span data-ttu-id="74b36-132">但是，无法添加键相同而值不同的元素，因为无法从逻辑上确定哪个竞争值有效。</span><span class="sxs-lookup"><span data-stu-id="74b36-132">However, an element with an identical key but a different value cannot be added because there is no logic to determine which of the competing values should be honored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BaseAdd">
      <MemberSignature Language="C#" Value="protected virtual void BaseAdd (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void BaseAdd(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub BaseAdd (element As ConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void BaseAdd(System::Configuration::ConfigurationElement ^ element);" />
      <MemberSignature Language="F#" Value="abstract member BaseAdd : System.Configuration.ConfigurationElement -&gt; unit&#xA;override this.BaseAdd : System.Configuration.ConfigurationElement -&gt; unit" Usage="configurationElementCollection.BaseAdd element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="74b36-133">要相加的 <see cref="T:System.Configuration.ConfigurationElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-133">The <see cref="T:System.Configuration.ConfigurationElement" /> to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74b36-134">向 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 添加配置元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-134">Adds a configuration element to the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-135">使用<xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A>方法将添加一个新<xref:System.Configuration.ConfigurationElement>到集合。</span><span class="sxs-lookup"><span data-stu-id="74b36-135">Use the <xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A> method to add a new <xref:System.Configuration.ConfigurationElement> to the collection.</span></span> <span data-ttu-id="74b36-136">如果重写其派生类中的元素添加时，所需自定义行为。</span><span class="sxs-lookup"><span data-stu-id="74b36-136">Override it in a derived class if custom behavior is required when the element is added.</span></span>  
  
 <span data-ttu-id="74b36-137">添加元素时，只有键相同而值不同的元素才被视为重复元素。</span><span class="sxs-lookup"><span data-stu-id="74b36-137">When adding, an element is considered a duplicate only if the keys are identical but the values are different.</span></span> <span data-ttu-id="74b36-138">键和值都相同的元素将被接受并且不给出提示，原因是这些元素不会相互竞争。</span><span class="sxs-lookup"><span data-stu-id="74b36-138">Elements with identical keys and values are accepted silently because the elements do not compete.</span></span> <span data-ttu-id="74b36-139">但是，无法添加键相同而值不同的元素，因为无法从逻辑上确定哪个竞争值有效。</span><span class="sxs-lookup"><span data-stu-id="74b36-139">However, an element with an identical key but a different value cannot be added because there is no logic to determine which of the competing values should be honored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74b36-140">下面的代码示例演示如何重写<xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A>方法以及如何调用从`Add`方法。</span><span class="sxs-lookup"><span data-stu-id="74b36-140">The following code example shows how to override the <xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A> method and how to call it from an `Add` method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#2)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseAdd">
      <MemberSignature Language="C#" Value="protected void BaseAdd (System.Configuration.ConfigurationElement element, bool throwIfExists);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BaseAdd(class System.Configuration.ConfigurationElement element, bool throwIfExists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseAdd (element As ConfigurationElement, throwIfExists As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseAdd(System::Configuration::ConfigurationElement ^ element, bool throwIfExists);" />
      <MemberSignature Language="F#" Value="member this.BaseAdd : System.Configuration.ConfigurationElement * bool -&gt; unit" Usage="configurationElementCollection.BaseAdd (element, throwIfExists)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
        <Parameter Name="throwIfExists" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="74b36-141">要相加的 <see cref="T:System.Configuration.ConfigurationElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-141">The <see cref="T:System.Configuration.ConfigurationElement" /> to add.</span>
          </span>
        </param>
        <param name="throwIfExists">
          <span data-ttu-id="74b36-142">
            <see langword="true" /> 表示如果指定的 <see cref="T:System.Configuration.ConfigurationElement" /> 已包含在 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 中则引发异常；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-142">
              <see langword="true" /> to throw an exception if the <see cref="T:System.Configuration.ConfigurationElement" /> specified is already contained in the <see cref="T:System.Configuration.ConfigurationElementCollection" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74b36-143">向配置元素集合添加配置元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-143">Adds a configuration element to the configuration element collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-144">使用可选参数`throwIfExists`引发<xref:System.Exception>异常如果指定<xref:System.Configuration.ConfigurationElement>中已存在对象<xref:System.Configuration.ConfigurationElementCollection>集合。</span><span class="sxs-lookup"><span data-stu-id="74b36-144">Use the optional parameter `throwIfExists` to throw an <xref:System.Exception> exception if the specified <xref:System.Configuration.ConfigurationElement> object already exists in the <xref:System.Configuration.ConfigurationElementCollection> collection.</span></span>  
  
 <span data-ttu-id="74b36-145">只有键相同而值会不同，元素才被视为重复。</span><span class="sxs-lookup"><span data-stu-id="74b36-145">An element is considered a duplicate only if the keys are identical but the values are different.</span></span> <span data-ttu-id="74b36-146">键和值都相同的元素将被接受并且不给出提示，原因是这些元素不会相互竞争。</span><span class="sxs-lookup"><span data-stu-id="74b36-146">Elements with identical keys and values are accepted silently because the elements do not compete.</span></span> <span data-ttu-id="74b36-147">但是，无法添加键相同而值不同的元素，因为无法从逻辑上确定哪个竞争值有效。</span><span class="sxs-lookup"><span data-stu-id="74b36-147">However, an element with an identical key but a different value cannot be added because there is no logic to determine which of the competing values should be honored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="74b36-148">要添加的 <see cref="T:System.Configuration.ConfigurationElement" /> 已存在于 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 中，并且 <paramref name="throwIfExists" /> 参数为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-148">The <see cref="T:System.Configuration.ConfigurationElement" /> to add already exists in the <see cref="T:System.Configuration.ConfigurationElementCollection" /> and the <paramref name="throwIfExists" /> parameter is <see langword="true" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseAdd">
      <MemberSignature Language="C#" Value="protected virtual void BaseAdd (int index, System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void BaseAdd(int32 index, class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub BaseAdd (index As Integer, element As ConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void BaseAdd(int index, System::Configuration::ConfigurationElement ^ element);" />
      <MemberSignature Language="F#" Value="abstract member BaseAdd : int * System.Configuration.ConfigurationElement -&gt; unit&#xA;override this.BaseAdd : int * System.Configuration.ConfigurationElement -&gt; unit" Usage="configurationElementCollection.BaseAdd (index, element)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="74b36-149">要添加指定 <see cref="T:System.Configuration.ConfigurationElement" /> 的索引位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-149">The index location at which to add the specified <see cref="T:System.Configuration.ConfigurationElement" />.</span>
          </span>
        </param>
        <param name="element">
          <span data-ttu-id="74b36-150">要相加的 <see cref="T:System.Configuration.ConfigurationElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-150">The <see cref="T:System.Configuration.ConfigurationElement" /> to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74b36-151">向配置元素集合添加配置元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-151">Adds a configuration element to the configuration element collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-152">使用`index`参数，将添加<xref:System.Configuration.ConfigurationElement>对象传递给<xref:System.Configuration.ConfigurationElementCollection>中特定索引位置。</span><span class="sxs-lookup"><span data-stu-id="74b36-152">Use the `index` parameter to add the <xref:System.Configuration.ConfigurationElement> object to the <xref:System.Configuration.ConfigurationElementCollection> at a specific index location.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseClear">
      <MemberSignature Language="C#" Value="protected internal void BaseClear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void BaseClear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub BaseClear ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void BaseClear();" />
      <MemberSignature Language="F#" Value="member this.BaseClear : unit -&gt; unit" Usage="configurationElementCollection.BaseClear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="74b36-153">从集合中移除所有配置元素对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-153">Removes all configuration element objects from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-154">当<xref:System.Configuration.ConfigurationElementCollection.BaseClear%2A>方法调用时，会删除所有<xref:System.Configuration.ConfigurationElement>集合中的对象。</span><span class="sxs-lookup"><span data-stu-id="74b36-154">When the <xref:System.Configuration.ConfigurationElementCollection.BaseClear%2A> method is called, it removes all <xref:System.Configuration.ConfigurationElement> objects from the collection.</span></span> <span data-ttu-id="74b36-155">它还将插入`clear`指令插入配置文件。</span><span class="sxs-lookup"><span data-stu-id="74b36-155">It also inserts a `clear` directive into the configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74b36-156">下面的代码示例演示如何调用<xref:System.Configuration.ConfigurationElementCollection.BaseClear%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="74b36-156">The following code example shows how to call the <xref:System.Configuration.ConfigurationElementCollection.BaseClear%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#3)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="74b36-157">配置是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-157">The configuration is read-only.</span>
          </span>
          <span data-ttu-id="74b36-158">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-158">\- or -</span>
          </span>
          <span data-ttu-id="74b36-159">集合项已在更高级别的配置中锁定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-159">A collection item has been locked in a higher-level configuration.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BaseGet">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="74b36-160">获取指定索引位置的 <see cref="T:System.Configuration.ConfigurationElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-160">Gets the <see cref="T:System.Configuration.ConfigurationElement" /> at the specified index location.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BaseGet">
      <MemberSignature Language="C#" Value="protected internal System.Configuration.ConfigurationElement BaseGet (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Configuration.ConfigurationElement BaseGet(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function BaseGet (index As Integer) As ConfigurationElement" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Configuration::ConfigurationElement ^ BaseGet(int index);" />
      <MemberSignature Language="F#" Value="member this.BaseGet : int -&gt; System.Configuration.ConfigurationElement" Usage="configurationElementCollection.BaseGet index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="74b36-161">要返回的 <see cref="T:System.Configuration.ConfigurationElement" /> 的索引位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-161">The index location of the <see cref="T:System.Configuration.ConfigurationElement" /> to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74b36-162">获取位于指定索引位置的配置元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-162">Gets the configuration element at the specified index location.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74b36-163">位于指定索引处的 <see cref="T:System.Configuration.ConfigurationElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-163">The <see cref="T:System.Configuration.ConfigurationElement" /> at the specified index.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="74b36-164">下面的代码示例演示如何调用<xref:System.Configuration.ConfigurationElementCollection.BaseGet%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="74b36-164">The following code example shows how to call the <xref:System.Configuration.ConfigurationElementCollection.BaseGet%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#8)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="74b36-165">
            <paramref name="index" /> 小于 <see langword="0" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-165">
              <paramref name="index" /> is less than <see langword="0" />.</span>
          </span>
          <span data-ttu-id="74b36-166">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-166">\- or -</span>
          </span>
          <span data-ttu-id="74b36-167">指定的 <paramref name="index" /> 处没有 <see cref="T:System.Configuration.ConfigurationElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-167">There is no <see cref="T:System.Configuration.ConfigurationElement" /> at the specified <paramref name="index" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseGet">
      <MemberSignature Language="C#" Value="protected internal System.Configuration.ConfigurationElement BaseGet (object key);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Configuration.ConfigurationElement BaseGet(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function BaseGet (key As Object) As ConfigurationElement" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Configuration::ConfigurationElement ^ BaseGet(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="member this.BaseGet : obj -&gt; System.Configuration.ConfigurationElement" Usage="configurationElementCollection.BaseGet key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="74b36-168">要返回的元素的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-168">The key of the element to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74b36-169">返回具有指定键的配置元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-169">Returns the configuration element with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74b36-170">具有指定键的 <see cref="T:System.Configuration.ConfigurationElement" />；否则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-170">The <see cref="T:System.Configuration.ConfigurationElement" /> with the specified key; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-171"><xref:System.Configuration.ConfigurationElementCollection.BaseGet%2A>方法将返回`null`是否存在任何<xref:System.Configuration.ConfigurationElement>与集合中指定的键的对象。</span><span class="sxs-lookup"><span data-stu-id="74b36-171">The <xref:System.Configuration.ConfigurationElementCollection.BaseGet%2A> method returns `null` if there is no <xref:System.Configuration.ConfigurationElement> object with the specified key in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74b36-172">下面的代码示例演示如何调用<xref:System.Configuration.ConfigurationElementCollection.BaseGet%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="74b36-172">The following code example shows how to call the <xref:System.Configuration.ConfigurationElementCollection.BaseGet%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#9](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#9)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseGetAllKeys">
      <MemberSignature Language="C#" Value="protected internal object[] BaseGetAllKeys ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance object[] BaseGetAllKeys() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function BaseGetAllKeys () As Object()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; cli::array &lt;System::Object ^&gt; ^ BaseGetAllKeys();" />
      <MemberSignature Language="F#" Value="member this.BaseGetAllKeys : unit -&gt; obj[]" Usage="configurationElementCollection.BaseGetAllKeys " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="74b36-173">返回 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 中包含的所有配置元素的键数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-173">Returns an array of the keys for all of the configuration elements contained in the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74b36-174">一个数组，包含 <see cref="T:System.Configuration.ConfigurationElement" /> 中包含的所有 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 对象的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-174">An array that contains the keys for all of the <see cref="T:System.Configuration.ConfigurationElement" /> objects contained in the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseGetKey">
      <MemberSignature Language="C#" Value="protected internal object BaseGetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance object BaseGetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function BaseGetKey (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Object ^ BaseGetKey(int index);" />
      <MemberSignature Language="F#" Value="member this.BaseGetKey : int -&gt; obj" Usage="configurationElementCollection.BaseGetKey index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="74b36-175">
            <see cref="T:System.Configuration.ConfigurationElement" /> 的索引位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-175">The index location for the <see cref="T:System.Configuration.ConfigurationElement" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74b36-176">获取位于指定索引位置的 <see cref="T:System.Configuration.ConfigurationElement" /> 的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-176">Gets the key for the <see cref="T:System.Configuration.ConfigurationElement" /> at the specified index location.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74b36-177">指定 <see cref="T:System.Configuration.ConfigurationElement" /> 的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-177">The key for the specified <see cref="T:System.Configuration.ConfigurationElement" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="74b36-178">
            <paramref name="index" /> 小于 <see langword="0" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-178">
              <paramref name="index" /> is less than <see langword="0" />.</span>
          </span>
          <span data-ttu-id="74b36-179">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-179">\- or -</span>
          </span>
          <span data-ttu-id="74b36-180">指定的 <paramref name="index" /> 处没有 <see cref="T:System.Configuration.ConfigurationElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-180">There is no <see cref="T:System.Configuration.ConfigurationElement" /> at the specified <paramref name="index" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseIndexOf">
      <MemberSignature Language="C#" Value="protected int BaseIndexOf (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance int32 BaseIndexOf(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseIndexOf (element As ConfigurationElement) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; int BaseIndexOf(System::Configuration::ConfigurationElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.BaseIndexOf : System.Configuration.ConfigurationElement -&gt; int" Usage="configurationElementCollection.BaseIndexOf element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="74b36-181">指定索引位置的 <see cref="T:System.Configuration.ConfigurationElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-181">The <see cref="T:System.Configuration.ConfigurationElement" /> for the specified index location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74b36-182">获取指定的 <see cref="T:System.Configuration.ConfigurationElement" /> 的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-182">Indicates the index of the specified <see cref="T:System.Configuration.ConfigurationElement" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74b36-183">指定 <see cref="T:System.Configuration.ConfigurationElement" /> 的索引；否则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-183">The index of the specified <see cref="T:System.Configuration.ConfigurationElement" />; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="74b36-184">下面的代码示例演示如何调用<xref:System.Configuration.ConfigurationElementCollection.BaseIndexOf%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="74b36-184">The following code example shows how to call the <xref:System.Configuration.ConfigurationElementCollection.BaseIndexOf%2A> method.</span></span>  
  
 [!code-vb[System.Configuration.ConfigurationElementCollection#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseIsRemoved">
      <MemberSignature Language="C#" Value="protected internal bool BaseIsRemoved (object key);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance bool BaseIsRemoved(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function BaseIsRemoved (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; bool BaseIsRemoved(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="member this.BaseIsRemoved : obj -&gt; bool" Usage="configurationElementCollection.BaseIsRemoved key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="74b36-185">要检查的元素的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-185">The key of the element to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74b36-186">指示是否已从 <see cref="T:System.Configuration.ConfigurationElement" /> 中移除具有指定键的 <see cref="T:System.Configuration.ConfigurationElementCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-186">Indicates whether the <see cref="T:System.Configuration.ConfigurationElement" /> with the specified key has been removed from the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74b36-187">如果已移除具有指定键的 <see cref="T:System.Configuration.ConfigurationElement" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-187">
              <see langword="true" /> if the <see cref="T:System.Configuration.ConfigurationElement" /> with the specified key has been removed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="74b36-188">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-188">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseRemove">
      <MemberSignature Language="C#" Value="protected internal void BaseRemove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void BaseRemove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub BaseRemove (key As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void BaseRemove(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="member this.BaseRemove : obj -&gt; unit" Usage="configurationElementCollection.BaseRemove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="74b36-189">要移除的 <see cref="T:System.Configuration.ConfigurationElement" /> 的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-189">The key of the <see cref="T:System.Configuration.ConfigurationElement" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74b36-190">从集合中移除 <see cref="T:System.Configuration.ConfigurationElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-190">Removes a <see cref="T:System.Configuration.ConfigurationElement" /> from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-191"><xref:System.Configuration.ConfigurationElementCollection.BaseRemove%2A>方法插入`<remove>`指令的配置文件插入<xref:System.Configuration.ConfigurationElement>与指定的键。</span><span class="sxs-lookup"><span data-stu-id="74b36-191">The <xref:System.Configuration.ConfigurationElementCollection.BaseRemove%2A> method inserts a `<remove>` directive into the configuration file for the <xref:System.Configuration.ConfigurationElement> with the specified key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74b36-192">下面的代码示例演示如何调用<xref:System.Configuration.ConfigurationElementCollection.BaseRemove%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="74b36-192">The following code example shows how to call the <xref:System.Configuration.ConfigurationElementCollection.BaseRemove%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#3)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="74b36-193">集合中不存在具有指定键的 <see cref="T:System.Configuration.ConfigurationElement" />，该元素已被移除，或者由于该元素的 <see cref="P:System.Configuration.ConfigurationProperty.Type" /> 值不是 <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" />，因此无法移除该元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-193">No <see cref="T:System.Configuration.ConfigurationElement" /> with the specified key exists in the collection, the element has already been removed, or the element cannot be removed because the value of its <see cref="P:System.Configuration.ConfigurationProperty.Type" /> is not <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseRemoveAt">
      <MemberSignature Language="C#" Value="protected internal void BaseRemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void BaseRemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub BaseRemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void BaseRemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.BaseRemoveAt : int -&gt; unit" Usage="configurationElementCollection.BaseRemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="74b36-194">要移除的 <see cref="T:System.Configuration.ConfigurationElement" /> 的索引位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-194">The index location of the <see cref="T:System.Configuration.ConfigurationElement" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74b36-195">移除位于指定索引位置的 <see cref="T:System.Configuration.ConfigurationElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-195">Removes the <see cref="T:System.Configuration.ConfigurationElement" /> at the specified index location.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-196"><xref:System.Configuration.ConfigurationElementCollection.BaseRemoveAt%2A>方法插入`<remove>`指令插入指定的索引位置处的元素的配置文件。</span><span class="sxs-lookup"><span data-stu-id="74b36-196">The <xref:System.Configuration.ConfigurationElementCollection.BaseRemoveAt%2A> method inserts a `<remove>` directive into the configuration file for the element at the specified index location.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="74b36-197">配置是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-197">The configuration is read-only.</span>
          </span>
          <span data-ttu-id="74b36-198">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-198">\- or -</span>
          </span>
          <span data-ttu-id="74b36-199">
            <paramref name="index" /> 小于 <see langword="0" /> 或大于集合中的 <see cref="T:System.Configuration.ConfigurationElement" /> 对象数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-199">
              <paramref name="index" /> is less than <see langword="0" /> or greater than the number of <see cref="T:System.Configuration.ConfigurationElement" /> objects in the collection.</span>
          </span>
          <span data-ttu-id="74b36-200">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-200">\- or -</span>
          </span>
          <span data-ttu-id="74b36-201">
            <see cref="T:System.Configuration.ConfigurationElement" /> 对象已移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-201">The <see cref="T:System.Configuration.ConfigurationElement" /> object has already been removed.</span>
          </span>
          <span data-ttu-id="74b36-202">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-202">\- or -</span>
          </span>
          <span data-ttu-id="74b36-203">
            <see cref="T:System.Configuration.ConfigurationElement" /> 对象的值已在更高级别锁定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-203">The value of the <see cref="T:System.Configuration.ConfigurationElement" /> object has been locked at a higher level.</span>
          </span>
          <span data-ttu-id="74b36-204">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-204">\- or -</span>
          </span>
          <span data-ttu-id="74b36-205">
            <see cref="T:System.Configuration.ConfigurationElement" /> 对象被继承。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-205">The <see cref="T:System.Configuration.ConfigurationElement" /> object was inherited.</span>
          </span>
          <span data-ttu-id="74b36-206">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-206">\- or -</span>
          </span>
          <span data-ttu-id="74b36-207">
            <see cref="T:System.Configuration.ConfigurationElement" /> 对象的 <see cref="P:System.Configuration.ConfigurationProperty.Type" /> 的值不是 <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" /> 或 <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-207">The value of the <see cref="T:System.Configuration.ConfigurationElement" /> object's <see cref="P:System.Configuration.ConfigurationProperty.Type" /> is not <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" /> or <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ClearElementName">
      <MemberSignature Language="C#" Value="protected internal string ClearElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClearElementName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property ClearElementName As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ ClearElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClearElementName : string with get, set" Usage="System.Configuration.ConfigurationElementCollection.ClearElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74b36-208">在派生的类中重写时，获取或设置 <see cref="T:System.Configuration.ConfigurationElement" /> 的名称，以便在 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 中与清除操作关联。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-208">Gets or sets the name for the <see cref="T:System.Configuration.ConfigurationElement" /> to associate with the clear operation in the <see cref="T:System.Configuration.ConfigurationElementCollection" /> when overridden in a derived class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="74b36-209">元素的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-209">The name of the element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="74b36-210">选定值以保留前缀“config”或“lock”开头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-210">The selected value starts with the reserved prefix "config" or "lock".</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CollectionType">
      <MemberSignature Language="C#" Value="public virtual System.Configuration.ConfigurationElementCollectionType CollectionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.ConfigurationElementCollectionType CollectionType" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CollectionType As ConfigurationElementCollectionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::ConfigurationElementCollectionType CollectionType { System::Configuration::ConfigurationElementCollectionType get(); };" />
      <MemberSignature Language="F#" Value="member this.CollectionType : System.Configuration.ConfigurationElementCollectionType" Usage="System.Configuration.ConfigurationElementCollection.CollectionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElementCollectionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74b36-211">获取 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-211">Gets the type of the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="74b36-212">此集合的 <see cref="T:System.Configuration.ConfigurationElementCollectionType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-212">The <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> of this collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-213">类型为<xref:System.Configuration.ConfigurationElementCollectionType.BasicMap>或<xref:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap>字段。</span><span class="sxs-lookup"><span data-stu-id="74b36-213">The type will be either a <xref:System.Configuration.ConfigurationElementCollectionType.BasicMap> or an <xref:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap> field.</span></span> <span data-ttu-id="74b36-214">有关详情，请参阅<xref:System.Configuration.ConfigurationElementCollectionType>。</span><span class="sxs-lookup"><span data-stu-id="74b36-214">For more information, see <xref:System.Configuration.ConfigurationElementCollectionType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74b36-215">下面的代码示例演示如何获取<xref:System.Configuration.ConfigurationElementCollection.CollectionType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="74b36-215">The following code example shows how to get the <xref:System.Configuration.ConfigurationElementCollection.CollectionType%2A> property.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#5)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Configuration.ConfigurationElement[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Configuration.ConfigurationElement[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As ConfigurationElement(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Configuration::ConfigurationElement ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Configuration.ConfigurationElement[] * int -&gt; unit" Usage="configurationElementCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Configuration.ConfigurationElement[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="74b36-216">
            <see cref="T:System.Configuration.ConfigurationElementCollection" /> 的内容要复制到的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-216">Array to which to copy the contents of the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="74b36-217">开始复制的索引位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-217">Index location at which to begin copying.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74b36-218">将 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 的内容复制到数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-218">Copies the contents of the <see cref="T:System.Configuration.ConfigurationElementCollection" /> to an array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Configuration.ConfigurationElementCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74b36-219">获取集合中的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-219">Gets the number of elements in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="74b36-220">集合中的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-220">The number of elements in the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNewElement">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="74b36-221">当在派生的类中重写时，创建一个新的 <see cref="T:System.Configuration.ConfigurationElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-221">When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-222">重写<xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A>方法来创建自定义<xref:System.Configuration.ConfigurationElement>特定类型的对象。</span><span class="sxs-lookup"><span data-stu-id="74b36-222">Override the <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> method to create custom <xref:System.Configuration.ConfigurationElement> objects of a specific type.</span></span> <span data-ttu-id="74b36-223">从配置文件中，加载集合时<xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A>调用来创建各个元素。</span><span class="sxs-lookup"><span data-stu-id="74b36-223">When a collection is loaded from the configuration file, <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> is called to create individual elements.</span></span> <span data-ttu-id="74b36-224"><xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> 必须在派生类中重写<xref:System.Configuration.ConfigurationElementCollection>类。</span><span class="sxs-lookup"><span data-stu-id="74b36-224"><xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> must be overridden in classes that derive from the <xref:System.Configuration.ConfigurationElementCollection> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNewElement">
      <MemberSignature Language="C#" Value="protected abstract System.Configuration.ConfigurationElement CreateNewElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Configuration.ConfigurationElement CreateNewElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.CreateNewElement" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateNewElement () As ConfigurationElement" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Configuration::ConfigurationElement ^ CreateNewElement();" />
      <MemberSignature Language="F#" Value="abstract member CreateNewElement : unit -&gt; System.Configuration.ConfigurationElement" Usage="configurationElementCollection.CreateNewElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="74b36-225">当在派生的类中重写时，创建一个新的 <see cref="T:System.Configuration.ConfigurationElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-225">When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74b36-226">新创建的 <see cref="T:System.Configuration.ConfigurationElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-226">A newly created <see cref="T:System.Configuration.ConfigurationElement" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-227">重写<xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A>方法来创建自定义<xref:System.Configuration.ConfigurationElement>特定类型的对象。</span><span class="sxs-lookup"><span data-stu-id="74b36-227">Override the <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> method to create custom <xref:System.Configuration.ConfigurationElement> objects of a specific type.</span></span> <span data-ttu-id="74b36-228">从配置文件中，加载集合时<xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A>调用来创建各个元素。</span><span class="sxs-lookup"><span data-stu-id="74b36-228">When a collection is loaded from the configuration file, <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> is called to create individual elements.</span></span> <span data-ttu-id="74b36-229"><xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> 必须在派生类中重写<xref:System.Configuration.ConfigurationElementCollection>类。</span><span class="sxs-lookup"><span data-stu-id="74b36-229"><xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> must be overridden in classes that derive from the <xref:System.Configuration.ConfigurationElementCollection> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74b36-230">下面的代码示例演示如何重写<xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="74b36-230">The following code example shows how to override the <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#6)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNewElement">
      <MemberSignature Language="C#" Value="protected virtual System.Configuration.ConfigurationElement CreateNewElement (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Configuration.ConfigurationElement CreateNewElement(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateNewElement (elementName As String) As ConfigurationElement" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Configuration::ConfigurationElement ^ CreateNewElement(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="abstract member CreateNewElement : string -&gt; System.Configuration.ConfigurationElement&#xA;override this.CreateNewElement : string -&gt; System.Configuration.ConfigurationElement" Usage="configurationElementCollection.CreateNewElement elementName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="74b36-231">要创建的 <see cref="T:System.Configuration.ConfigurationElement" /> 的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-231">The name of the <see cref="T:System.Configuration.ConfigurationElement" /> to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74b36-232">在派生的类中重写时，创建新的 <see cref="T:System.Configuration.ConfigurationElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-232">Creates a new <see cref="T:System.Configuration.ConfigurationElement" /> when overridden in a derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74b36-233">一个新的具有指定名称的 <see cref="T:System.Configuration.ConfigurationElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-233">A new <see cref="T:System.Configuration.ConfigurationElement" /> with a specified name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-234">重写<xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A>方法来创建自定义<xref:System.Configuration.ConfigurationElement>特定类型的对象。</span><span class="sxs-lookup"><span data-stu-id="74b36-234">Override the <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> method to create custom <xref:System.Configuration.ConfigurationElement> objects of a specific type.</span></span> <span data-ttu-id="74b36-235">从配置文件中，加载集合时<xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A>调用来创建各个元素。</span><span class="sxs-lookup"><span data-stu-id="74b36-235">When a collection is loaded from the configuration file, <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> is called to create individual elements.</span></span> <span data-ttu-id="74b36-236"><xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> 必须在派生类中重写<xref:System.Configuration.ConfigurationElementCollection>类。</span><span class="sxs-lookup"><span data-stu-id="74b36-236"><xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> must be overridden in classes that derive from the <xref:System.Configuration.ConfigurationElementCollection> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="74b36-237">
            <para>如果创建自定义<see cref="T:System.Configuration.ConfigurationElementCollection" />集合，其中包含异类<see cref="T:System.Configuration.ConfigurationElement" />类型，必须执行以下步骤:-重写<see cref="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" />方法。 -确保该<see cref="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" />方法返回一个字符串，标识通过调用创建的元素类型<see cref="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-237">
              <para>If you create a custom <see cref="T:System.Configuration.ConfigurationElementCollection" /> collection that contains heterogeneous <see cref="T:System.Configuration.ConfigurationElement" /> types, you must perform these steps:  -   Override the <see cref="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" /> method.  -   Make sure that the <see cref="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" /> method returns a string that identifies the type of the element you created by calling the <see cref="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="protected virtual string ElementName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.ElementName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ ElementName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string" Usage="System.Configuration.ConfigurationElementCollection.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74b36-238">获取在派生的类中重写时用于标识配置文件中此元素集合的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-238">Gets the name used to identify this collection of elements in the configuration file when overridden in a derived class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="74b36-239">集合的名称；否则为空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-239">The name of the collection; otherwise, an empty string.</span>
          </span>
          <span data-ttu-id="74b36-240">默认值为空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-240">The default is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-241">重写<xref:System.Configuration.ConfigurationElementCollection.ElementName%2A>属性来命名自定义<xref:System.Configuration.ConfigurationElementCollection>。</span><span class="sxs-lookup"><span data-stu-id="74b36-241">Override the <xref:System.Configuration.ConfigurationElementCollection.ElementName%2A> property to name a custom <xref:System.Configuration.ConfigurationElementCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitClear">
      <MemberSignature Language="C#" Value="public bool EmitClear { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EmitClear" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
      <MemberSignature Language="VB.NET" Value="Public Property EmitClear As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EmitClear { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EmitClear : bool with get, set" Usage="System.Configuration.ConfigurationElementCollection.EmitClear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74b36-242">获取或设置一个值，该值指定是否已清除集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-242">Gets or sets a value that specifies whether the collection has been cleared.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="74b36-243">如果已清除集合，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-243">
              <see langword="true" /> if the collection has been cleared; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="74b36-244">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-244">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-245">设置<xref:System.Configuration.ConfigurationElementCollection.EmitClear%2A>属性设置为`true`导致`<clear>`指令集合进行序列化时要写入到配置文件。</span><span class="sxs-lookup"><span data-stu-id="74b36-245">Setting the <xref:System.Configuration.ConfigurationElementCollection.EmitClear%2A> property to `true` causes a `<clear>` directive to be written to the configuration file when the collection is serialized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="74b36-246">配置是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-246">The configuration is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object compareTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object compareTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (compareTo As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ compareTo);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="configurationElementCollection.Equals compareTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="compareTo">
          <span data-ttu-id="74b36-247">要比较的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-247">The object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74b36-248">将 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 与指定的对象进行比较。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-248">Compares the <see cref="T:System.Configuration.ConfigurationElementCollection" /> to the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74b36-249">如果要比较的对象等于当前的 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 实例，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-249">
              <see langword="true" /> if the object to compare with is equal to the current <see cref="T:System.Configuration.ConfigurationElementCollection" /> instance; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="74b36-250">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-250">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElementKey">
      <MemberSignature Language="C#" Value="protected abstract object GetElementKey (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetElementKey(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetElementKey (element As ConfigurationElement) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Object ^ GetElementKey(System::Configuration::ConfigurationElement ^ element);" />
      <MemberSignature Language="F#" Value="abstract member GetElementKey : System.Configuration.ConfigurationElement -&gt; obj" Usage="configurationElementCollection.GetElementKey element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="74b36-251">要为其返回键的 <see cref="T:System.Configuration.ConfigurationElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-251">The <see cref="T:System.Configuration.ConfigurationElement" /> to return the key for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74b36-252">在派生类中重写时获取指定配置元素的元素键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-252">Gets the element key for a specified configuration element when overridden in a derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74b36-253">一个 <see cref="T:System.Object" />，用作指定 <see cref="T:System.Configuration.ConfigurationElement" /> 的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-253">An <see cref="T:System.Object" /> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="74b36-254">下面的代码示例演示如何重写<xref:System.Configuration.ConfigurationElementCollection.GetElementKey%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="74b36-254">The following code example shows how to override <xref:System.Configuration.ConfigurationElementCollection.GetElementKey%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#7](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#7)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="configurationElementCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="74b36-255">获取用于循环访问 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Configuration.ConfigurationElementCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-255">Gets an <see cref="T:System.Collections.IEnumerator" /> which is used to iterate through the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74b36-256">用于循环访问 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Configuration.ConfigurationElementCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-256">An <see cref="T:System.Collections.IEnumerator" /> which is used to iterate through the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="configurationElementCollection.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="74b36-257">获取表示 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 实例的唯一值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-257">Gets a unique value representing the <see cref="T:System.Configuration.ConfigurationElementCollection" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74b36-258">表示 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 当前实例的唯一值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-258">A unique value representing the <see cref="T:System.Configuration.ConfigurationElementCollection" /> current instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsElementName">
      <MemberSignature Language="C#" Value="protected virtual bool IsElementName (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsElementName(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsElementName (elementName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsElementName(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="abstract member IsElementName : string -&gt; bool&#xA;override this.IsElementName : string -&gt; bool" Usage="configurationElementCollection.IsElementName elementName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="74b36-259">要验证的元素的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-259">The name of the element to verify.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74b36-260">指示指定的 <see cref="T:System.Configuration.ConfigurationElement" /> 是否存在于 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-260">Indicates whether the specified <see cref="T:System.Configuration.ConfigurationElement" /> exists in the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74b36-261">如果集合中存在该元素，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-261">
              <see langword="true" /> if the element exists in the collection; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="74b36-262">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-262">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-263">重写<xref:System.Configuration.ConfigurationElementCollection.IsElementName%2A>方法以提供自定义行为。</span><span class="sxs-lookup"><span data-stu-id="74b36-263">Override the <xref:System.Configuration.ConfigurationElementCollection.IsElementName%2A> method to provide custom behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsElementRemovable">
      <MemberSignature Language="C#" Value="protected virtual bool IsElementRemovable (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsElementRemovable(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsElementRemovable (element As ConfigurationElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsElementRemovable(System::Configuration::ConfigurationElement ^ element);" />
      <MemberSignature Language="F#" Value="abstract member IsElementRemovable : System.Configuration.ConfigurationElement -&gt; bool&#xA;override this.IsElementRemovable : System.Configuration.ConfigurationElement -&gt; bool" Usage="configurationElementCollection.IsElementRemovable element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="74b36-264">要检查的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-264">The element to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74b36-265">指示是否可从 <see cref="T:System.Configuration.ConfigurationElement" /> 中移除指定 <see cref="T:System.Configuration.ConfigurationElementCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-265">Indicates whether the specified <see cref="T:System.Configuration.ConfigurationElement" /> can be removed from the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74b36-266">如果可从此 <see cref="T:System.Configuration.ConfigurationElement" /> 中移除指定的 <see cref="T:System.Configuration.ConfigurationElementCollection" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-266">
              <see langword="true" /> if the specified <see cref="T:System.Configuration.ConfigurationElement" /> can be removed from this <see cref="T:System.Configuration.ConfigurationElementCollection" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="74b36-267">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-267">The default is <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-268">查询<xref:System.Configuration.ConfigurationElementCollection.IsElementRemovable%2A>之前删除集合的元素。</span><span class="sxs-lookup"><span data-stu-id="74b36-268">Query <xref:System.Configuration.ConfigurationElementCollection.IsElementRemovable%2A> before removing a collection element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsModified">
      <MemberSignature Language="C#" Value="protected internal override bool IsModified ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.IsModified" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function IsModified () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsModified();" />
      <MemberSignature Language="F#" Value="override this.IsModified : unit -&gt; bool" Usage="configurationElementCollection.IsModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="74b36-269">在派生的类中重写时，指示从最后一次保存或加载此 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 后是否对其进行了修改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-269">Indicates whether this <see cref="T:System.Configuration.ConfigurationElementCollection" /> has been modified since it was last saved or loaded when overridden in a derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74b36-270">如果已修改任何包含的项，则为 <see langword="true" />；否则为 <see langword="false" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-270">
              <see langword="true" /> if any contained element has been modified; otherwise, <see langword="false" /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-271">如果<xref:System.Configuration.ConfigurationElement.IsModified%2A>方法的任何<xref:System.Configuration.ConfigurationElement>中包含<xref:System.Configuration.ConfigurationElementCollection>返回`true`，则<xref:System.Configuration.ConfigurationElementCollection.IsModified%2A>整个集合的方法将返回`true`也。</span><span class="sxs-lookup"><span data-stu-id="74b36-271">If the <xref:System.Configuration.ConfigurationElement.IsModified%2A> method of any <xref:System.Configuration.ConfigurationElement> contained within a <xref:System.Configuration.ConfigurationElementCollection> returns `true`, the <xref:System.Configuration.ConfigurationElementCollection.IsModified%2A> method of the entire collection returns `true` as well.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public override bool IsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsReadOnly();" />
      <MemberSignature Language="F#" Value="override this.IsReadOnly : unit -&gt; bool" Usage="configurationElementCollection.IsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="74b36-272">指示 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 对象是否为只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-272">Indicates whether the <see cref="T:System.Configuration.ConfigurationElementCollection" /> object is read only.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74b36-273">如果 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 对象为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-273">
              <see langword="true" /> if the <see cref="T:System.Configuration.ConfigurationElementCollection" /> object is read only; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-274">系统定义不能修改的配置元素。</span><span class="sxs-lookup"><span data-stu-id="74b36-274">The system defines configuration elements that cannot be modified.</span></span> <span data-ttu-id="74b36-275">调用此方法以确定是否可以修改元素。</span><span class="sxs-lookup"><span data-stu-id="74b36-275">Call this method to determine whether elements can be modified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Configuration.ConfigurationElementCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74b36-276">获取一个值，该值指示对集合的访问是否同步。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-276">Gets a value indicating whether access to the collection is synchronized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="74b36-277">如果同步对 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 的访问，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-277">
              <see langword="true" /> if access to the <see cref="T:System.Configuration.ConfigurationElementCollection" /> is synchronized; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserializeUnrecognizedElement">
      <MemberSignature Language="C#" Value="protected override bool OnDeserializeUnrecognizedElement (string elementName, System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnDeserializeUnrecognizedElement(string elementName, class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnDeserializeUnrecognizedElement (elementName As String, reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnDeserializeUnrecognizedElement(System::String ^ elementName, System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.OnDeserializeUnrecognizedElement : string * System.Xml.XmlReader -&gt; bool" Usage="configurationElementCollection.OnDeserializeUnrecognizedElement (elementName, reader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="74b36-278">无法识别的元素的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-278">The name of the unrecognized element.</span>
          </span>
        </param>
        <param name="reader">
          <span data-ttu-id="74b36-279">从配置文件中读取 XML 的输入流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-279">An input stream that reads XML from the configuration file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74b36-280">导致配置系统引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-280">Causes the configuration system to throw an exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74b36-281">如果成功完成对无法识别的元素的反序列化，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-281">
              <see langword="true" /> if the unrecognized element was deserialized successfully; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="74b36-282">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-282">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-283"><xref:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement%2A>从配置文件中读取一个无法识别的配置元素时调用。</span><span class="sxs-lookup"><span data-stu-id="74b36-283">The <xref:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement%2A> is called when an unrecognized configuration element is read from a configuration file.</span></span>  
  
 <span data-ttu-id="74b36-284">重写此方法以提供对配置文件中无法识别的配置元素的自定义处理。</span><span class="sxs-lookup"><span data-stu-id="74b36-284">Override this method to provide custom handling of unrecognized configuration elements from a configuration file.</span></span> <span data-ttu-id="74b36-285">默认返回值， `false`，导致配置系统引发异常。</span><span class="sxs-lookup"><span data-stu-id="74b36-285">The default return value, `false`, causes the configuration system to throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="74b36-286">
            <paramref name="elementName" /> 中指定的元素为 <see langword="&lt;clear&gt;" /> 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-286">The element specified in <paramref name="elementName" /> is the <see langword="&lt;clear&gt;" /> element.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="74b36-287">
            <paramref name="elementName" /> 以保留前缀“config”或“lock”开头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-287">
              <paramref name="elementName" /> starts with the reserved prefix "config" or "lock".</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveElementName">
      <MemberSignature Language="C#" Value="protected internal string RemoveElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RemoveElementName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property RemoveElementName As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ RemoveElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RemoveElementName : string with get, set" Usage="System.Configuration.ConfigurationElementCollection.RemoveElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74b36-288">在派生的类中重写时，获取或设置 <see cref="T:System.Configuration.ConfigurationElement" /> 的名称，以便在 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 中与移除操作关联。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-288">Gets or sets the name of the <see cref="T:System.Configuration.ConfigurationElement" /> to associate with the remove operation in the <see cref="T:System.Configuration.ConfigurationElementCollection" /> when overridden in a derived class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="74b36-289">元素的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-289">The name of the element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="74b36-290">选定值以保留前缀“config”或“lock”开头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-290">The selected value starts with the reserved prefix "config" or "lock".</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="protected internal override void Reset (System.Configuration.ConfigurationElement parentElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Reset(class System.Configuration.ConfigurationElement parentElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Reset (parentElement As ConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Reset(System::Configuration::ConfigurationElement ^ parentElement);" />
      <MemberSignature Language="F#" Value="override this.Reset : System.Configuration.ConfigurationElement -&gt; unit" Usage="configurationElementCollection.Reset parentElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentElement" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="parentElement">
          <span data-ttu-id="74b36-291">表示集合父元素（如果有）的 <see cref="T:System.Configuration.ConfigurationElement" />；否则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-291">The <see cref="T:System.Configuration.ConfigurationElement" /> representing the collection parent element, if any; otherwise, <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74b36-292">在派生的类中重写时，将 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 重置为其未被修改时的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-292">Resets the <see cref="T:System.Configuration.ConfigurationElementCollection" /> to its unmodified state when overridden in a derived class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-293">默认行为<xref:System.Configuration.ConfigurationElementCollection.Reset%2A>方法是清除修改后的任何元素<xref:System.Configuration.ConfigurationElementCollection>对象包含并且将值设置为已修改的元素指定由其父配置文件。</span><span class="sxs-lookup"><span data-stu-id="74b36-293">The default behavior for the <xref:System.Configuration.ConfigurationElementCollection.Reset%2A> method is to clear any modified elements a <xref:System.Configuration.ConfigurationElementCollection> object contains and to set the modified elements to the values specified by their parent configuration file.</span></span> <span data-ttu-id="74b36-294">如果中的任何元素<xref:System.Configuration.ConfigurationElementCollection>子元素，<xref:System.Configuration.ConfigurationElementCollection.Reset%2A>也被称为对这些子元素。</span><span class="sxs-lookup"><span data-stu-id="74b36-294">If any element in the <xref:System.Configuration.ConfigurationElementCollection> has child elements, <xref:System.Configuration.ConfigurationElementCollection.Reset%2A> is also called on those child elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetModified">
      <MemberSignature Language="C#" Value="protected internal override void ResetModified ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void ResetModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub ResetModified ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void ResetModified();" />
      <MemberSignature Language="F#" Value="override this.ResetModified : unit -&gt; unit" Usage="configurationElementCollection.ResetModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="74b36-295">在派生的类中重写时，将 <see cref="M:System.Configuration.ConfigurationElementCollection.IsModified" /> 属性的值重置为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-295">Resets the value of the <see cref="M:System.Configuration.ConfigurationElementCollection.IsModified" /> property to <see langword="false" /> when overridden in a derived class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-296"><xref:System.Configuration.ConfigurationElementCollection.ResetModified%2A>方法确定更新的配置时，此集合中的元素是否写入到配置文件。</span><span class="sxs-lookup"><span data-stu-id="74b36-296">The <xref:System.Configuration.ConfigurationElementCollection.ResetModified%2A> method determines whether the elements of this collection will be written to the configuration file when the configuration is updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeElement">
      <MemberSignature Language="C#" Value="protected internal override bool SerializeElement (System.Xml.XmlWriter writer, bool serializeCollectionKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool SerializeElement(class System.Xml.XmlWriter writer, bool serializeCollectionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SerializeElement (writer As XmlWriter, serializeCollectionKey As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool SerializeElement(System::Xml::XmlWriter ^ writer, bool serializeCollectionKey);" />
      <MemberSignature Language="F#" Value="override this.SerializeElement : System.Xml.XmlWriter * bool -&gt; bool" Usage="configurationElementCollection.SerializeElement (writer, serializeCollectionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="serializeCollectionKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="74b36-297">将 XML 写入配置文件的输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-297">Output stream that writes XML to the configuration file.</span>
          </span>
        </param>
        <param name="serializeCollectionKey">
          <span data-ttu-id="74b36-298">若序列化集合键，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-298">
              <see langword="true" /> to serialize the collection key; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74b36-299">在派生的类中重写时，将配置数据写入配置文件中的 XML 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-299">Writes the configuration data to an XML element in the configuration file when overridden in a derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74b36-300">如果已将 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 成功写入配置文件，则为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-300">
              <see langword="true" /> if the <see cref="T:System.Configuration.ConfigurationElementCollection" /> was written to the configuration file successfully.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-301"><xref:System.Configuration.ConfigurationElementCollection.SerializeElement%2A>方法将集合中包含的配置元素和其所包含任何嵌套的元素的内容写入到配置文件。</span><span class="sxs-lookup"><span data-stu-id="74b36-301">The <xref:System.Configuration.ConfigurationElementCollection.SerializeElement%2A> method writes the contents of the configuration elements contained in the collection and any nested elements they contain to the configuration file.</span></span> <span data-ttu-id="74b36-302">重写<xref:System.Configuration.ConfigurationElementCollection.SerializeElement%2A>若要提供自定义编写出的集合内容和嵌套的元素的过程。</span><span class="sxs-lookup"><span data-stu-id="74b36-302">Override <xref:System.Configuration.ConfigurationElementCollection.SerializeElement%2A> to provide a custom write procedure out of the collection contents and nested elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="74b36-303">集合中的某个元素被添加或替换，并以保留前缀“config”或“lock”开头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-303">One of the elements in the collection was added or replaced and starts with the reserved prefix "config" or "lock".</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetReadOnly">
      <MemberSignature Language="C#" Value="protected internal override void SetReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void SetReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub SetReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void SetReadOnly();" />
      <MemberSignature Language="F#" Value="override this.SetReadOnly : unit -&gt; unit" Usage="configurationElementCollection.SetReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="74b36-304">为 <see cref="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" /> 对象和所有子元素设置 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-304">Sets the <see cref="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" /> property for the <see cref="T:System.Configuration.ConfigurationElementCollection" /> object and for all sub-elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-305">此方法在内部用于设置保留不能修改这些系统的配置元素。</span><span class="sxs-lookup"><span data-stu-id="74b36-305">This method is used internally to set aside those system configuration elements that cannot be modified.</span></span> <span data-ttu-id="74b36-306">若要确定哪些元素是可修改，请调用<xref:System.Configuration.ConfigurationElementCollection.IsReadOnly%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="74b36-306">To determine which elements are modifiable, call the <xref:System.Configuration.ConfigurationElementCollection.IsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Configuration.ConfigurationElementCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74b36-307">获取用于同步对 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 的访问的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-307">Gets an object used to synchronize access to the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="74b36-308">用于同步对 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 的访问的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-308">An object used to synchronize access to the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array arr, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array arr, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (arr As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ arr, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arr" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="arr">
          <span data-ttu-id="74b36-309">此 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 要复制到的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-309">Array to which to copy this <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="74b36-310">开始复制的索引位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-310">Index location at which to begin copying.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74b36-311">将 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 复制到数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-311">Copies the <see cref="T:System.Configuration.ConfigurationElementCollection" /> to an array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowOnDuplicate">
      <MemberSignature Language="C#" Value="protected virtual bool ThrowOnDuplicate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThrowOnDuplicate" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ThrowOnDuplicate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ThrowOnDuplicate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ThrowOnDuplicate : bool" Usage="System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74b36-312">获取一个值，该值指示尝试向 <see cref="T:System.Configuration.ConfigurationElement" /> 添加重复的 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 是否会导致引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-312">Gets a value indicating whether an attempt to add a duplicate <see cref="T:System.Configuration.ConfigurationElement" /> to the <see cref="T:System.Configuration.ConfigurationElementCollection" /> will cause an exception to be thrown.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="74b36-313">如果尝试向此 <see cref="T:System.Configuration.ConfigurationElement" /> 添加重复的 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 会导致引发异常，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-313">
              <see langword="true" /> if an attempt to add a duplicate <see cref="T:System.Configuration.ConfigurationElement" /> to this <see cref="T:System.Configuration.ConfigurationElementCollection" /> will cause an exception to be thrown; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-314">如果当添加重复的元素时，引发异常<xref:System.Configuration.ConfigurationElementCollection.CollectionType%2A>元素的值是<xref:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap>或<xref:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate>。</span><span class="sxs-lookup"><span data-stu-id="74b36-314">When you add a duplicate element, an exception is thrown if the <xref:System.Configuration.ConfigurationElementCollection.CollectionType%2A> value of the element is either <xref:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap> or <xref:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate>.</span></span>  
  
 <span data-ttu-id="74b36-315">请注意，使用相同的密钥和值的元素不被视为重复项，以静默方式接受。</span><span class="sxs-lookup"><span data-stu-id="74b36-315">Note that elements with identical keys and values are not considered duplicates, and are accepted silently.</span></span> <span data-ttu-id="74b36-316">使用相同的密钥，但不同的值的唯一元素将被视为重复项。</span><span class="sxs-lookup"><span data-stu-id="74b36-316">Only elements with identical keys but different values are considered duplicates.</span></span> <span data-ttu-id="74b36-317">有关详细信息，请参阅备注部分<xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="74b36-317">For more information, see the Remarks section for the <xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unmerge">
      <MemberSignature Language="C#" Value="protected internal override void Unmerge (System.Configuration.ConfigurationElement sourceElement, System.Configuration.ConfigurationElement parentElement, System.Configuration.ConfigurationSaveMode saveMode);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Unmerge(class System.Configuration.ConfigurationElement sourceElement, class System.Configuration.ConfigurationElement parentElement, valuetype System.Configuration.ConfigurationSaveMode saveMode) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" FrameworkAlternate="netcore-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.7.2;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Unmerge (sourceElement As ConfigurationElement, parentElement As ConfigurationElement, saveMode As ConfigurationSaveMode)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Unmerge(System::Configuration::ConfigurationElement ^ sourceElement, System::Configuration::ConfigurationElement ^ parentElement, System::Configuration::ConfigurationSaveMode saveMode);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="protected internal override void Unmerge (System.Configuration.ConfigurationElement sourceElement, System.Configuration.ConfigurationElement parentElement, System.Configuration.ConfigurationSaveMode updateMode);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Unmerge(class System.Configuration.ConfigurationElement sourceElement, class System.Configuration.ConfigurationElement parentElement, valuetype System.Configuration.ConfigurationSaveMode updateMode) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Unmerge (sourceElement As ConfigurationElement, parentElement As ConfigurationElement, updateMode As ConfigurationSaveMode)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Unmerge(System::Configuration::ConfigurationElement ^ sourceElement, System::Configuration::ConfigurationElement ^ parentElement, System::Configuration::ConfigurationSaveMode updateMode);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Unmerge : System.Configuration.ConfigurationElement * System.Configuration.ConfigurationElement * System.Configuration.ConfigurationSaveMode -&gt; unit" Usage="configurationElementCollection.Unmerge (sourceElement, parentElement, updateMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceElement" Type="System.Configuration.ConfigurationElement" Index="0" />
        <Parameter Name="parentElement" Type="System.Configuration.ConfigurationElement" Index="1" />
        <Parameter Name="saveMode" Type="System.Configuration.ConfigurationSaveMode" Index="2" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.7.2" />
        <Parameter Name="updateMode" Type="System.Configuration.ConfigurationSaveMode" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sourceElement">
          <span data-ttu-id="74b36-318">当前级别上包含属性的合并视图的 <see cref="T:System.Configuration.ConfigurationElement" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-318">A <see cref="T:System.Configuration.ConfigurationElement" /> object at the current level containing a merged view of the properties.</span>
          </span>
        </param>
        <param name="parentElement">
          <span data-ttu-id="74b36-319">当前元素的父 <see cref="T:System.Configuration.ConfigurationElement" /> 对象；如果当前元素为顶层，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-319">The parent <see cref="T:System.Configuration.ConfigurationElement" /> object of the current element, or <see langword="null" /> if this is the top level.</span>
          </span>
        </param>
        <param name="saveMode">
          <span data-ttu-id="74b36-320">一个 <see cref="T:System.Configuration.ConfigurationSaveMode" /> 枚举值，该值可确定要包含哪些属性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-320">A <see cref="T:System.Configuration.ConfigurationSaveMode" /> enumerated value that determines which property values to include.</span>
          </span>
        </param>
        <param name="updateMode">
          <span data-ttu-id="74b36-321">一个 <see cref="T:System.Configuration.ConfigurationSaveMode" /> 枚举值，该值可确定要包含哪些属性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-321">A <see cref="T:System.Configuration.ConfigurationSaveMode" /> enumerated value that determines which property values to include.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74b36-322">反转将配置层次结构的不同级别配置的信息合并在一起的效果</span>
          <span class="sxs-lookup">
            <span data-stu-id="74b36-322">Reverses the effect of merging configuration information from different levels of the configuration hierarchy</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74b36-323"><xref:System.Configuration.ConfigurationElementCollection.Unmerge%2A>方法可反转从配置层次结构的不同级别合并配置信息的效果。</span><span class="sxs-lookup"><span data-stu-id="74b36-323">The <xref:System.Configuration.ConfigurationElementCollection.Unmerge%2A> method reverses the effect of merging configuration information from different levels of the configuration hierarchy.</span></span> <span data-ttu-id="74b36-324">这将允许在序列化之前，当前层次结构级别上的配置设置与父级别上的配置设置有所不同。</span><span class="sxs-lookup"><span data-stu-id="74b36-324">This allows configuration set at the current hierarchy level to be differentiated from that set at parent levels, before serialization.</span></span>  
  
 <span data-ttu-id="74b36-325"><xref:System.Configuration.ConfigurationElementCollection.Unmerge%2A> 由新的临时元素进行比较的父对象和源对象上的系统调用。</span><span class="sxs-lookup"><span data-stu-id="74b36-325"><xref:System.Configuration.ConfigurationElementCollection.Unmerge%2A> is called by the system on a new temporary element to compare the parent object and the source object.</span></span> <span data-ttu-id="74b36-326">基于<xref:System.Configuration.ConfigurationSaveMode>值，然后设置其要包含的数据以进行序列化所需的临时对象。</span><span class="sxs-lookup"><span data-stu-id="74b36-326">Based on the <xref:System.Configuration.ConfigurationSaveMode> value, it then sets the temporary object to contain the data that needs to be serialized.</span></span> <span data-ttu-id="74b36-327">有关保存模式的详细信息，请参阅<xref:System.Configuration.ConfigurationSaveMode.Minimal>。</span><span class="sxs-lookup"><span data-stu-id="74b36-327">For details about save modes, see <xref:System.Configuration.ConfigurationSaveMode.Minimal>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>