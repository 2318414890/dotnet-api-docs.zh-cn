<Type Name="ApplicationSettingsBase" FullName="System.Configuration.ApplicationSettingsBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe24ac65166fc03dc1527e9f59941c74903af097" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39824153" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ApplicationSettingsBase : System.Configuration.SettingsBase, System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ApplicationSettingsBase extends System.Configuration.SettingsBase implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ApplicationSettingsBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ApplicationSettingsBase&#xA;Inherits SettingsBase&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationSettingsBase abstract : System::Configuration::SettingsBase, System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type ApplicationSettingsBase = class&#xA;    inherit SettingsBase&#xA;    interface INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="90b9d-101">作为派生具体包装类以实现 Window 窗体应用程序中的应用程序设置功能的基类。</span>
      <span class="sxs-lookup">
        <span data-stu-id="90b9d-101">Acts as a base class for deriving concrete wrapper classes to implement the application settings feature in Window Forms applications.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b9d-102"><xref:System.Configuration.ApplicationSettingsBase> 添加了以下功能<xref:System.Configuration.SettingsBase>类，该类用于通过基于 Web 的应用程序：</span><span class="sxs-lookup"><span data-stu-id="90b9d-102"><xref:System.Configuration.ApplicationSettingsBase> adds the following functionality to the <xref:System.Configuration.SettingsBase> class, which is used by Web-based applications:</span></span>  
  
-   <span data-ttu-id="90b9d-103">能够检测到的派生，设置包装类的属性。</span><span class="sxs-lookup"><span data-stu-id="90b9d-103">The ability to detect attributes on a derived, settings wrapper class.</span></span> <span data-ttu-id="90b9d-104"><xref:System.Configuration.ApplicationSettingsBase> 支持用于包装器类属性的声明性模型，如下文所述。</span><span class="sxs-lookup"><span data-stu-id="90b9d-104"><xref:System.Configuration.ApplicationSettingsBase> supports the declarative model used for wrapper class properties, as described later.</span></span>  
  
-   <span data-ttu-id="90b9d-105">更高级别的<xref:System.Configuration.ApplicationSettingsBase.Save%2A>和<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="90b9d-105">Higher-level <xref:System.Configuration.ApplicationSettingsBase.Save%2A> and <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> methods.</span></span>  
  
-   <span data-ttu-id="90b9d-106">可处理以确保正确性的各项设置的其他验证事件。</span><span class="sxs-lookup"><span data-stu-id="90b9d-106">Additional validation events that you can handle to ensure the correctness of individual settings.</span></span>  
  
 <span data-ttu-id="90b9d-107">在应用程序设置体系结构中，若要访问的设置属性组需要派生具体包装类从<xref:System.Configuration.ApplicationSettingsBase>。</span><span class="sxs-lookup"><span data-stu-id="90b9d-107">In the application settings architecture, to access a group of settings properties you need to derive a concrete wrapper class from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="90b9d-108">自定义包装器类<xref:System.Configuration.ApplicationSettingsBase>以下方面：</span><span class="sxs-lookup"><span data-stu-id="90b9d-108">The wrapper class customizes <xref:System.Configuration.ApplicationSettingsBase> in the following ways:</span></span>  
  
-   <span data-ttu-id="90b9d-109">若要访问每个设置属性，相应的强类型化公共属性添加到包装类。</span><span class="sxs-lookup"><span data-stu-id="90b9d-109">For every settings property to be accessed, a corresponding strongly typed public property is added to the wrapper class.</span></span> <span data-ttu-id="90b9d-110">此属性具有`get`并`set`访问器为读/写应用程序设置，但仅`get`访问器的只读设置。</span><span class="sxs-lookup"><span data-stu-id="90b9d-110">This property has `get` and `set` accessors for read/write application settings, but only a `get` accessor for read-only settings.</span></span>  
  
-   <span data-ttu-id="90b9d-111">相应的特性必须应用于包装器类的公共属性，以指示是否设置应支持漫游的默认值为设置属性，如设置的作用域 （应用程序或用户） 的特征设置，设置提供程序使用，等等。</span><span class="sxs-lookup"><span data-stu-id="90b9d-111">Appropriated attributes must be applied to the wrapper class's public properties to indicate characteristics of the settings property, such as the setting's scope (application or user), whether the setting should support roaming, the default value for the setting, the settings provider to be used, and so on.</span></span> <span data-ttu-id="90b9d-112">每个属性必须以指定使用其作用域<xref:System.Configuration.ApplicationScopedSettingAttribute>或<xref:System.Configuration.UserScopedSettingAttribute>。</span><span class="sxs-lookup"><span data-stu-id="90b9d-112">Each property is required to specify its scope, using either <xref:System.Configuration.ApplicationScopedSettingAttribute> or <xref:System.Configuration.UserScopedSettingAttribute>.</span></span> <span data-ttu-id="90b9d-113">应用程序范围的设置是只读的如果默认<xref:System.Configuration.LocalFileSettingsProvider>使用。</span><span class="sxs-lookup"><span data-stu-id="90b9d-113">Application-scoped settings are read-only if the default <xref:System.Configuration.LocalFileSettingsProvider> is used.</span></span>  
  
 <span data-ttu-id="90b9d-114"><xref:System.Configuration.ApplicationSettingsBase>类使用反射来在运行时检测这些属性。</span><span class="sxs-lookup"><span data-stu-id="90b9d-114">The <xref:System.Configuration.ApplicationSettingsBase> class uses reflection to detect these attributes at run time.</span></span> <span data-ttu-id="90b9d-115">大多数此类信息被传递到的设置提供程序层，负责存储、 持久性格式等。</span><span class="sxs-lookup"><span data-stu-id="90b9d-115">Most of this information gets passed to the settings provider layer, which is responsible for storage, persistence format, and so on.</span></span>  
  
 <span data-ttu-id="90b9d-116">当应用程序有多个设置的包装类时，每个类定义*设置组*。</span><span class="sxs-lookup"><span data-stu-id="90b9d-116">When an application has multiple settings wrapper classes, each class defines a *settings group*.</span></span> <span data-ttu-id="90b9d-117">每个组具有以下特征：</span><span class="sxs-lookup"><span data-stu-id="90b9d-117">Each group has the following characteristics:</span></span>  
  
-   <span data-ttu-id="90b9d-118">一个组可以包含任意数量或类型的属性设置。</span><span class="sxs-lookup"><span data-stu-id="90b9d-118">A group can contain any number or type of property settings.</span></span>  
  
-   <span data-ttu-id="90b9d-119">如果通过修饰的包装器类未显式设置组名称<xref:System.Configuration.SettingsGroupNameAttribute>，则会自动生成一个名称。</span><span class="sxs-lookup"><span data-stu-id="90b9d-119">If the group name is not explicitly set by the decorating the wrapper class with a <xref:System.Configuration.SettingsGroupNameAttribute>, then a name is automatically generated.</span></span>  
  
 <span data-ttu-id="90b9d-120">默认情况下，所有基于客户端的应用程序使用<xref:System.Configuration.LocalFileSettingsProvider>来提供存储。</span><span class="sxs-lookup"><span data-stu-id="90b9d-120">By default, all client-based applications use the <xref:System.Configuration.LocalFileSettingsProvider> to provide storage.</span></span> <span data-ttu-id="90b9d-121">如果需要替代设置提供程序，则必须使用相应修饰的包装类或属性<xref:System.Configuration.SettingsProviderAttribute>。</span><span class="sxs-lookup"><span data-stu-id="90b9d-121">If an alternate settings provider is desired, then the wrapper class or property must be decorated with a corresponding <xref:System.Configuration.SettingsProviderAttribute>.</span></span>  
  
 <span data-ttu-id="90b9d-122">有关使用应用程序设置的详细信息，请参阅[应用程序设置为 Windows 窗体](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md)。</span><span class="sxs-lookup"><span data-stu-id="90b9d-122">For more information about using application settings, see [Application Settings for Windows Forms](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b9d-123">下面的代码示例演示如何将应用程序设置保持主窗体的以下属性： 位置、 大小、 背景色和标题栏文本。</span><span class="sxs-lookup"><span data-stu-id="90b9d-123">The following code example demonstrates the use of application settings to persist the following attributes of the main form: location, size, background color, and title bar text.</span></span> <span data-ttu-id="90b9d-124">所有这些属性将保留为在单个应用程序设置属性`FormSettings`类，名为`FormLocation`， `FormSize`，`FormBackColor`和`FormText`分别。</span><span class="sxs-lookup"><span data-stu-id="90b9d-124">All of these attributes are persisted as single application settings properties in the `FormSettings` class, named `FormLocation`, `FormSize`, `FormBackColor` and `FormText`, respectively.</span></span> <span data-ttu-id="90b9d-125">除之外的所有`FormText`并`Size`是数据绑定到其关联的窗体属性和具有默认设置的值应用使用<xref:System.Configuration.DefaultSettingValueAttribute>。</span><span class="sxs-lookup"><span data-stu-id="90b9d-125">All except for `FormText` and `Size` are data bound to their associated form properties and have a default setting value applied using <xref:System.Configuration.DefaultSettingValueAttribute>.</span></span>  
  
 <span data-ttu-id="90b9d-126">在窗体包含四个具有以下名称和函数的子控件：</span><span class="sxs-lookup"><span data-stu-id="90b9d-126">The form contains four child controls that have the following names and functions:</span></span>  
  
-   <span data-ttu-id="90b9d-127">名为的按钮`btnBackColor`用来显示**颜色**公共对话框。</span><span class="sxs-lookup"><span data-stu-id="90b9d-127">A button named `btnBackColor` used to display the **Color** common dialog box.</span></span>  
  
-   <span data-ttu-id="90b9d-128">名为的按钮`btnReload`习惯<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>应用程序设置。</span><span class="sxs-lookup"><span data-stu-id="90b9d-128">A button named `btnReload` used to <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> the application settings.</span></span>  
  
-   <span data-ttu-id="90b9d-129">名为的按钮`btnReset`习惯<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>应用程序设置。</span><span class="sxs-lookup"><span data-stu-id="90b9d-129">A button named `btnReset` used to <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> the application settings.</span></span>  
  
-   <span data-ttu-id="90b9d-130">名为文本框`tbStatus`用于显示有关计划的状态信息。</span><span class="sxs-lookup"><span data-stu-id="90b9d-130">A textbox named `tbStatus` used to display status information about the program.</span></span>  
  
 <span data-ttu-id="90b9d-131">请注意，在应用程序每次执行后，其他的句点字符追加到窗体的标题文本。</span><span class="sxs-lookup"><span data-stu-id="90b9d-131">Notice that after every execution of the application, an additional period character is appended to the title text of the form.</span></span>  
  
 <span data-ttu-id="90b9d-132">此代码示例需要一个具有窗体<xref:System.Windows.Forms.ColorDialog>名为类`colorDialog1`，和一个<xref:System.Windows.Forms.StatusStrip>控件，其<xref:System.Windows.Forms.ToolStripStatusLabel>名为`tbStatus`。</span><span class="sxs-lookup"><span data-stu-id="90b9d-132">This code example requires a Form with a <xref:System.Windows.Forms.ColorDialog> class named `colorDialog1`, and a <xref:System.Windows.Forms.StatusStrip> control with a <xref:System.Windows.Forms.ToolStripStatusLabel> named `tbStatus`.</span></span> <span data-ttu-id="90b9d-133">此外，还需要三个<xref:System.Windows.Forms.Button>名为的对象`btnReload`， `btnReset`，和`btnBackColor`。</span><span class="sxs-lookup"><span data-stu-id="90b9d-133">Additionally, it requires three <xref:System.Windows.Forms.Button> objects named `btnReload`, `btnReset`, and `btnBackColor`.</span></span>  
  
 [!code-cpp[AppSettingsSample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#1)]
 [!code-csharp[AppSettingsSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#1)]
 [!code-vb[AppSettingsSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
    <altmember cref="T:System.Configuration.ApplicationScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.UserScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.SettingsGroupNameAttribute" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90b9d-134">初始化 <see cref="T:System.Configuration.ApplicationSettingsBase" /> 类的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-134">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="90b9d-135">将 <see cref="T:System.Configuration.ApplicationSettingsBase" /> 类的实例初始化为其默认状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-135">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class to its default state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b9d-136">默认构造函数设计为依据： 假定没有与派生的当前设置包装类相关联的组件配合<xref:System.Configuration.ApplicationSettingsBase>。</span><span class="sxs-lookup"><span data-stu-id="90b9d-136">The default constructor was designed to work under the assumption that there is no component associated with the current settings wrapper class, which derives from <xref:System.Configuration.ApplicationSettingsBase>.</span></span>  
  
 <span data-ttu-id="90b9d-137">创建包装器类的实例后，继承的代码将自动执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="90b9d-137">When an instance of a wrapper class is created, inherited code will automatically perform the following actions:</span></span>  
  
1.  <span data-ttu-id="90b9d-138">通过类进行反射。</span><span class="sxs-lookup"><span data-stu-id="90b9d-138">Reflect over the class.</span></span>  
  
2.  <span data-ttu-id="90b9d-139">在包装器上的每个属性标记为与`[UserScopedSettingAttribute]`或`[ApplicationScopedSettingAttribute]`，相应<xref:System.Configuration.SettingsProperty>创建。</span><span class="sxs-lookup"><span data-stu-id="90b9d-139">For each property on the wrapper marked with either `[UserScopedSettingAttribute]` or `[ApplicationScopedSettingAttribute]`, a corresponding <xref:System.Configuration.SettingsProperty> is created.</span></span>  
  
3.  <span data-ttu-id="90b9d-140">每个<xref:System.Configuration.SettingsProperty>有一些基于可存在于包装器的属性，如默认值或设置提供程序的其他属性其属性集。</span><span class="sxs-lookup"><span data-stu-id="90b9d-140">Each <xref:System.Configuration.SettingsProperty> has some of its properties set based on other attributes that are optionally present on the wrapper's properties, such as the default value or the settings provider.</span></span>  
  
4.  <span data-ttu-id="90b9d-141">所有其他属性只需将放入属性包<xref:System.Configuration.SettingsProperty.Attributes%2A>属性的<xref:System.Configuration.SettingsProperty>类。</span><span class="sxs-lookup"><span data-stu-id="90b9d-141">All other attributes are simply put into an attribute bag, the <xref:System.Configuration.SettingsProperty.Attributes%2A> property of the <xref:System.Configuration.SettingsProperty> class.</span></span>  
  
5.  <span data-ttu-id="90b9d-142">所有<xref:System.Configuration.SettingsProperty>对象添加到<xref:System.Configuration.SettingsPropertyCollection>由此<xref:System.Configuration.ApplicationSettingsBase.Properties%2A>属性的<xref:System.Configuration.ApplicationSettingsBase>类。</span><span class="sxs-lookup"><span data-stu-id="90b9d-142">All <xref:System.Configuration.SettingsProperty> objects are added to a <xref:System.Configuration.SettingsPropertyCollection> represented by the <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> property of the <xref:System.Configuration.ApplicationSettingsBase> class.</span></span> <span data-ttu-id="90b9d-143">然后，此集合传递给<xref:System.Configuration.SettingsBase.Initialize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="90b9d-143">This collection is then passed to the <xref:System.Configuration.SettingsBase.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="90b9d-144">步骤 3 前文所述，通过为隐含<xref:System.Configuration.ApplicationSettingsBase>本机适用于多个属性的特性，尤其是以下： <xref:System.Configuration.SettingsProviderAttribute>， <xref:System.Configuration.DefaultSettingValueAttribute>，和<xref:System.Configuration.SettingsSerializeAsAttribute>。</span><span class="sxs-lookup"><span data-stu-id="90b9d-144">As implied by step 3 mentioned previously, <xref:System.Configuration.ApplicationSettingsBase> natively works with several property attributes, specifically the following: <xref:System.Configuration.SettingsProviderAttribute>, <xref:System.Configuration.DefaultSettingValueAttribute>, and <xref:System.Configuration.SettingsSerializeAsAttribute>.</span></span> <span data-ttu-id="90b9d-145">所有其他设置属性只被传递到相应的基础提供程序。</span><span class="sxs-lookup"><span data-stu-id="90b9d-145">All other settings attributes are simply passed through to the appropriate underlying provider.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.SettingsProperty" />
        <altmember cref="T:System.Configuration.SettingsPropertyCollection" />
        <altmember cref="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (System.ComponentModel.IComponent owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::ComponentModel::IComponent ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ApplicationSettingsBase : System.ComponentModel.IComponent -&gt; System.Configuration.ApplicationSettingsBase" Usage="new System.Configuration.ApplicationSettingsBase owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="90b9d-146">将作为应用程序设置对象的所有者的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-146">The component that will act as the owner of the application settings object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90b9d-147">使用提供的所有者组件初始化 <see cref="T:System.Configuration.ApplicationSettingsBase" /> 类的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-147">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class using the supplied owner component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b9d-148">此构造函数是完全相当于<xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29>构造函数使用调用：</span><span class="sxs-lookup"><span data-stu-id="90b9d-148">This constructor is exactly equivalent to the <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29> constructor using the invocation:</span></span>  
  
 `ApplicationSettingsBase(owner, String.Empty)`  
  
 <span data-ttu-id="90b9d-149">有关如何在包装器类的实例化期间使用反射的信息，请参阅默认<xref:System.Configuration.ApplicationSettingsBase.%23ctor>构造函数。</span><span class="sxs-lookup"><span data-stu-id="90b9d-149">For information about how reflection is used during the instantiation of a wrapper class, see the default <xref:System.Configuration.ApplicationSettingsBase.%23ctor> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="90b9d-150">
            <paramref name="owner" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-150">
              <paramref name="owner" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="P:System.ComponentModel.Component.Site" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (string settingsKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string settingsKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (settingsKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::String ^ settingsKey);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ApplicationSettingsBase : string -&gt; System.Configuration.ApplicationSettingsBase" Usage="new System.Configuration.ApplicationSettingsBase settingsKey" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settingsKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="settingsKey">
          <span data-ttu-id="90b9d-151">唯一标识包装类的单独实例的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-151">A <see cref="T:System.String" /> that uniquely identifies separate instances of the wrapper class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90b9d-152">使用提供的设置键初始化 <see cref="T:System.Configuration.ApplicationSettingsBase" /> 类的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-152">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class using the supplied settings key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b9d-153">此构造函数初始化<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>属性的值`settingsKey`参数。</span><span class="sxs-lookup"><span data-stu-id="90b9d-153">This constructor initializes the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property to the value of the `settingsKey` parameter.</span></span> <span data-ttu-id="90b9d-154">此属性可消除歧义设置包装类相同的应用程序域中的不同实例中。</span><span class="sxs-lookup"><span data-stu-id="90b9d-154">This property is useful in disambiguating different instances of the settings wrapper class in the same application domain.</span></span>  
  
 <span data-ttu-id="90b9d-155">有关如何在包装器类的实例化期间使用反射的信息，请参阅默认<xref:System.Configuration.ApplicationSettingsBase.%23ctor>构造函数。</span><span class="sxs-lookup"><span data-stu-id="90b9d-155">For information about how reflection is used during the instantiation of a wrapper class, see the default <xref:System.Configuration.ApplicationSettingsBase.%23ctor> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (System.ComponentModel.IComponent owner, string settingsKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent owner, string settingsKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IComponent, settingsKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::ComponentModel::IComponent ^ owner, System::String ^ settingsKey);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ApplicationSettingsBase : System.ComponentModel.IComponent * string -&gt; System.Configuration.ApplicationSettingsBase" Usage="new System.Configuration.ApplicationSettingsBase (owner, settingsKey)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.ComponentModel.IComponent" />
        <Parameter Name="settingsKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="90b9d-156">将作为应用程序设置对象的所有者的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-156">The component that will act as the owner of the application settings object.</span>
          </span>
        </param>
        <param name="settingsKey">
          <span data-ttu-id="90b9d-157">唯一标识包装类的单独实例的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-157">A <see cref="T:System.String" /> that uniquely identifies separate instances of the wrapper class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90b9d-158">使用提供的所有者组件和设置键初始化 <see cref="T:System.Configuration.ApplicationSettingsBase" /> 类的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-158">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class using the supplied owner component and settings key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b9d-159"><xref:System.ComponentModel.IComponent>由指定的对象`owner`参数充当此应用程序设置类的当前实例的所有者。</span><span class="sxs-lookup"><span data-stu-id="90b9d-159">The <xref:System.ComponentModel.IComponent> object specified by the `owner` parameter acts as the owner of the current instance of this applications settings class.</span></span> <span data-ttu-id="90b9d-160">在包装器类派生的设置初始化期间<xref:System.Configuration.ApplicationSettingsBase>，该所有者的站点中查询<xref:System.Configuration.ISettingsProviderService>。</span><span class="sxs-lookup"><span data-stu-id="90b9d-160">During the initialization of the settings wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>, the owner's site is queried for a <xref:System.Configuration.ISettingsProviderService>.</span></span> <span data-ttu-id="90b9d-161">如果存在，它优先使用本机设置提供程序的所有属性的包装器类，由指定<xref:System.Configuration.SettingsProviderAttribute>。</span><span class="sxs-lookup"><span data-stu-id="90b9d-161">If one exists, it is used in preference to native settings provider for all the properties of the wrapper class, as specified by the <xref:System.Configuration.SettingsProviderAttribute>.</span></span>  
  
 <span data-ttu-id="90b9d-162">此构造函数初始化<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>属性的值`settingsKey`参数。</span><span class="sxs-lookup"><span data-stu-id="90b9d-162">This constructor initializes the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property to the value of the `settingsKey` parameter.</span></span> <span data-ttu-id="90b9d-163">此属性可消除歧义的同一应用程序域中的包装器类的不同实例中。</span><span class="sxs-lookup"><span data-stu-id="90b9d-163">This property is useful in disambiguating different instances of the wrapper class in the same application domain.</span></span>  
  
 <span data-ttu-id="90b9d-164">有关如何在包装器类的实例化期间使用反射的信息，请参阅默认<xref:System.Configuration.ApplicationSettingsBase.%23ctor>构造函数。</span><span class="sxs-lookup"><span data-stu-id="90b9d-164">For information about how reflection is used during the instantiation of a wrapper class, see the default <xref:System.Configuration.ApplicationSettingsBase.%23ctor> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="90b9d-165">
            <paramref name="owner" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-165">
              <paramref name="owner" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Context" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Context As SettingsContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsContext ^ Context { System::Configuration::SettingsContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Configuration.SettingsContext" Usage="System.Configuration.ApplicationSettingsBase.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90b9d-166">获取与设置组关联的应用程序设置上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-166">Gets the application settings context associated with the settings group.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90b9d-167">与设置组关联的 <see cref="T:System.Configuration.SettingsContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-167">A <see cref="T:System.Configuration.SettingsContext" /> associated with the settings group.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b9d-168">每个设置包装类派生自<xref:System.Configuration.ApplicationSettingsBase>具有与之关联的上下文。</span><span class="sxs-lookup"><span data-stu-id="90b9d-168">Each settings wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase> has a context associated with it.</span></span> <span data-ttu-id="90b9d-169">该上下文传递到每个属性的设置提供程序来确定如何使用该属性。</span><span class="sxs-lookup"><span data-stu-id="90b9d-169">The context is passed to the settings provider for each property to identify how the property is used.</span></span> <span data-ttu-id="90b9d-170">因此，上下文就作为提示来帮助确定如何最好地保留关联的应用程序的设置值的设置提供程序。</span><span class="sxs-lookup"><span data-stu-id="90b9d-170">Context therefore acts as a hint to help the settings provider determine how best to persist the associated application settings values.</span></span>  
  
 <span data-ttu-id="90b9d-171">与此相反，<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>属性，来消除歧义的同一个包装类的多个实例的设置提供程序。</span><span class="sxs-lookup"><span data-stu-id="90b9d-171">In contrast, the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property enables the settings provider to disambiguate multiple instances of the same wrapper class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="T:System.Configuration.SettingsContext" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.ApplicationSettingsGroup" />
      </Docs>
    </Member>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public object GetPreviousVersion (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPreviousVersion(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPreviousVersion(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetPreviousVersion : string -&gt; obj" Usage="applicationSettingsBase.GetPreviousVersion propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="90b9d-172">一个 <see cref="T:System.String" />，包含要返回其值的设置属性的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-172">A <see cref="T:System.String" /> containing the name of the settings property whose value is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90b9d-173">返回同一应用程序的早期版本的命名设置属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-173">Returns the value of the named settings property for the previous version of the same application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90b9d-174">一个 <see cref="T:System.Object" />，如果找到指定的 <see cref="T:System.Configuration.SettingsProperty" />，则为其值；否则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-174">An <see cref="T:System.Object" /> containing the value of the specified <see cref="T:System.Configuration.SettingsProperty" /> if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b9d-175"><xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A>方法通常与结合使用<xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A>方法时在应用程序的新版本的安装过程中迁移应用程序设置。</span><span class="sxs-lookup"><span data-stu-id="90b9d-175">The <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> method is often used in conjunction with the <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> method when migrating application settings during the installation of a new version of an application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">
          <span data-ttu-id="90b9d-176">该属性不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-176">The property does not exist.</span>
          </span>
          <span data-ttu-id="90b9d-177">属性计数为零，或在数据存储区中找不到该属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-177">The property count is zero or the property cannot be found in the data store.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.SettingsProperty" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string propertyName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ propertyName); void set(System::String ^ propertyName, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Configuration.ApplicationSettingsBase.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="90b9d-178">包含要访问属性的名称的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-178">A <see cref="T:System.String" /> containing the name of the property to access.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90b9d-179">获取或设置指定的应用程序设置属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-179">Gets or sets the value of the specified application settings property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90b9d-180">如果找到的话，则为命名的设置属性的值；否则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-180">If found, the value of the named settings property; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b9d-181"><xref:System.Configuration.ApplicationSettingsBase.Item%2A>属性，也称为索引器，常常用在设置包装器类派生自<xref:System.Configuration.ApplicationSettingsBase>。</span><span class="sxs-lookup"><span data-stu-id="90b9d-181">The <xref:System.Configuration.ApplicationSettingsBase.Item%2A> property, also known as the indexer, is routinely used in the settings wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="90b9d-182"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> 将包装类的公共属性绑定到相应的设置属性。</span><span class="sxs-lookup"><span data-stu-id="90b9d-182"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> binds the public property of the wrapper class to the corresponding settings property.</span></span>  
  
 <span data-ttu-id="90b9d-183"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> 引发多个事件，具体取决于所执行的操作：</span><span class="sxs-lookup"><span data-stu-id="90b9d-183"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> raises several events depending on the operation being performed:</span></span>  
  
-   <span data-ttu-id="90b9d-184">第一次检索属性，<xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded>引发事件。</span><span class="sxs-lookup"><span data-stu-id="90b9d-184">The first time a property is retrieved, the <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> event is raised.</span></span>  
  
-   <span data-ttu-id="90b9d-185">当设置属性时，<xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A>引发事件。</span><span class="sxs-lookup"><span data-stu-id="90b9d-185">When a property is set, the <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> event is raised.</span></span> <span data-ttu-id="90b9d-186">如果处理程序不会取消事件，则设置的属性值和<xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>引发事件。</span><span class="sxs-lookup"><span data-stu-id="90b9d-186">If the handler does not cancel the event, then the property value is set and the <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">
          <span data-ttu-id="90b9d-187">没有与当前包装关联的属性，或者未能找到指定的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-187">There are no properties associated with the current wrapper or the specified property could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">
          <span data-ttu-id="90b9d-188">已尝试设置只读属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-188">An attempt was made to set a read-only property.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">
          <span data-ttu-id="90b9d-189">在设置操作期间，所提供值的类型与设置属性不兼容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-189">The value supplied is of a type incompatible with the settings property, during a set operation.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="90b9d-190">未能分析配置文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-190">The configuration file could not be parsed.</span>
          </span>
        </exception>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="P:System.Configuration.SettingsProperty.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (object sender, System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(object sender, class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (sender As Object, e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::Object ^ sender, System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanged : obj * System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanged : obj * System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="applicationSettingsBase.OnPropertyChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="90b9d-191">事件源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-191">The source of the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="90b9d-192">包含事件数据的 <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-192">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90b9d-193">引发 <see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-193">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b9d-194">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="90b9d-194">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="90b9d-195">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="90b9d-195">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="90b9d-196"><xref:System.Configuration.ApplicationSettingsBase.OnPropertyChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="90b9d-196">The <xref:System.Configuration.ApplicationSettingsBase.OnPropertyChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="90b9d-197">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="90b9d-197">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="90b9d-198">
            <para>重写时<see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />在派生类中，请务必调用基类的<see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />方法，以便已注册的委托接收事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-198">
              <para>When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingChanging (object sender, System.Configuration.SettingChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingChanging(object sender, class System.Configuration.SettingChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingChanging (sender As Object, e As SettingChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingChanging(System::Object ^ sender, System::Configuration::SettingChangingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSettingChanging : obj * System.Configuration.SettingChangingEventArgs -&gt; unit&#xA;override this.OnSettingChanging : obj * System.Configuration.SettingChangingEventArgs -&gt; unit" Usage="applicationSettingsBase.OnSettingChanging (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="90b9d-199">事件源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-199">The source of the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="90b9d-200">包含事件数据的 <see cref="T:System.Configuration.SettingChangingEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-200">A <see cref="T:System.Configuration.SettingChangingEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90b9d-201">引发 <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-201">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b9d-202">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="90b9d-202">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="90b9d-203">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="90b9d-203">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="90b9d-204"><xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="90b9d-204">The <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="90b9d-205">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="90b9d-205">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="90b9d-206">
            <para>重写时<see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />在派生类中，请务必调用基类的<see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />方法，以便已注册的委托接收事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-206">
              <para>When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingsLoaded">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingsLoaded (object sender, System.Configuration.SettingsLoadedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingsLoaded(object sender, class System.Configuration.SettingsLoadedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingsLoaded (sender As Object, e As SettingsLoadedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingsLoaded(System::Object ^ sender, System::Configuration::SettingsLoadedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSettingsLoaded : obj * System.Configuration.SettingsLoadedEventArgs -&gt; unit&#xA;override this.OnSettingsLoaded : obj * System.Configuration.SettingsLoadedEventArgs -&gt; unit" Usage="applicationSettingsBase.OnSettingsLoaded (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingsLoadedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="90b9d-207">事件源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-207">The source of the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="90b9d-208">包含事件数据的 <see cref="T:System.Configuration.SettingsLoadedEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-208">A <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90b9d-209">引发 <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-209">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b9d-210">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="90b9d-210">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="90b9d-211">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="90b9d-211">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="90b9d-212"><xref:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="90b9d-212">The <xref:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="90b9d-213">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="90b9d-213">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="90b9d-214">
            <para>重写时<see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />在派生类中，请务必调用基类的<see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />方法，以便已注册的委托接收事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-214">
              <para>When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingsSaving">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingsSaving (object sender, System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingsSaving(object sender, class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingsSaving (sender As Object, e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingsSaving(System::Object ^ sender, System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSettingsSaving : obj * System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnSettingsSaving : obj * System.ComponentModel.CancelEventArgs -&gt; unit" Usage="applicationSettingsBase.OnSettingsSaving (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="90b9d-215">事件源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-215">The source of the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="90b9d-216">包含事件数据的 <see cref="T:System.ComponentModel.CancelEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-216">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90b9d-217">引发 <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-217">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b9d-218">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="90b9d-218">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="90b9d-219">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="90b9d-219">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="90b9d-220"><xref:System.Configuration.ApplicationSettingsBase.OnSettingsSaving%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="90b9d-220">The <xref:System.Configuration.ApplicationSettingsBase.OnSettingsSaving%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="90b9d-221">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="90b9d-221">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="90b9d-222">
            <para>重写时<see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />在派生类中，请务必调用基类的<see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />方法，以便已注册的委托接收事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-222">
              <para>When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Properties As SettingsPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsPropertyCollection ^ Properties { System::Configuration::SettingsPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.SettingsPropertyCollection" Usage="System.Configuration.ApplicationSettingsBase.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90b9d-223">获取包装中的设置属性的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-223">Gets the collection of settings properties in the wrapper.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90b9d-224">一个 <see cref="T:System.Configuration.SettingsPropertyCollection" />，包含当前包装中使用的所有 <see cref="T:System.Configuration.SettingsProperty" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-224">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing all the <see cref="T:System.Configuration.SettingsProperty" /> objects used in the current wrapper.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b9d-225">`get`访问器的<xref:System.Configuration.ApplicationSettingsBase.Properties%2A>属性设置包装类，该类派生自的元数据反映<xref:System.Configuration.ApplicationSettingsBase>，可以动态确定的一组可用的应用程序设置属性。</span><span class="sxs-lookup"><span data-stu-id="90b9d-225">The `get` accessor of the <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> property reflects over the metadata of the settings wrapper class, which is derived from <xref:System.Configuration.ApplicationSettingsBase>, to dynamically determine the set of available application settings properties.</span></span>  
  
 <span data-ttu-id="90b9d-226"><xref:System.Configuration.ApplicationSettingsBase>类本身就可以识别的应用程序设置，例如其名称、 属性类型、 设置提供程序、 默认值的某些特征读取仅有状态和序列化首选项。</span><span class="sxs-lookup"><span data-stu-id="90b9d-226">The <xref:System.Configuration.ApplicationSettingsBase> class natively recognizes certain characteristics of an application setting, such as its name, property type, settings provider, default value, read only status, and a serialization preference.</span></span> <span data-ttu-id="90b9d-227">这些特征镜像中的属性作为<xref:System.Configuration.SettingsProperty>类。</span><span class="sxs-lookup"><span data-stu-id="90b9d-227">These characteristics are mirrored as properties in the <xref:System.Configuration.SettingsProperty> class.</span></span> <span data-ttu-id="90b9d-228">设置属性的所有其他属性只被传递到其关联的设置提供程序。</span><span class="sxs-lookup"><span data-stu-id="90b9d-228">All other attributes of the settings property are just passed through to its associated settings provider.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="90b9d-229">未能找到关联的设置提供程序，或者其实例化失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-229">The associated settings provider could not be found or its instantiation failed.</span>
          </span>
        </exception>
        <altmember cref="P:System.Configuration.SettingsBase.PropertyValues" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="T:System.Configuration.SettingsProperty" />
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PropertyChanged As PropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " Usage="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90b9d-230">发生在更改应用程序设置属性的值之后。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-230">Occurs after the value of an application settings property is changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b9d-231"><xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>更改运行设置属性时引发事件`set`访问器<xref:System.Configuration.ApplicationSettingsBase.Item%2A>方法，或调用时，会恢复每个属性<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>或<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="90b9d-231">The <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event is raised when a settings property is changed through the `set` accessor of the <xref:System.Configuration.ApplicationSettingsBase.Item%2A> method, or for every property that is restored when a call is made to the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> or <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> methods.</span></span>  
  
 <span data-ttu-id="90b9d-232">没有对应的`PropertyChanging`事件，此类; 相反，请参阅<xref:System.Configuration.ApplicationSettingsBase.SettingChanging>事件。</span><span class="sxs-lookup"><span data-stu-id="90b9d-232">There is no corresponding `PropertyChanging` event for this class; instead, see the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />
        <altmember cref="T:System.ComponentModel.PropertyChangedEventArgs" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="PropertyValues">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyValueCollection PropertyValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsPropertyValueCollection PropertyValues" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.PropertyValues" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PropertyValues As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsPropertyValueCollection ^ PropertyValues { System::Configuration::SettingsPropertyValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyValues : System.Configuration.SettingsPropertyValueCollection" Usage="System.Configuration.ApplicationSettingsBase.PropertyValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90b9d-233">获取属性值的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-233">Gets a collection of property values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90b9d-234">一个由属性值构成的 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-234">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> of property values.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Providers As SettingsProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsProviderCollection ^ Providers { System::Configuration::SettingsProviderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Configuration.SettingsProviderCollection" Usage="System.Configuration.ApplicationSettingsBase.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90b9d-235">获取包装所使用的应用程序设置提供程序的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-235">Gets the collection of application settings providers used by the wrapper.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90b9d-236">一个 <see cref="T:System.Configuration.SettingsProviderCollection" />，包含当前设置包装的设置属性使用的所有 <see cref="T:System.Configuration.SettingsProvider" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-236">A <see cref="T:System.Configuration.SettingsProviderCollection" /> containing all the <see cref="T:System.Configuration.SettingsProvider" /> objects used by the settings properties of the current settings wrapper.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b9d-237"><xref:System.Configuration.SettingsProviderAttribute>确定使用何种设置提供程序设置包装类或单个设置属性。</span><span class="sxs-lookup"><span data-stu-id="90b9d-237">The <xref:System.Configuration.SettingsProviderAttribute> determines what setting provider is used by a settings wrapper class or an individual setting property.</span></span> <span data-ttu-id="90b9d-238">如果未指定此属性，客户端应用程序将使用<xref:System.Configuration.LocalFileSettingsProvider>。</span><span class="sxs-lookup"><span data-stu-id="90b9d-238">If this attribute is not specified, a client application will use the <xref:System.Configuration.LocalFileSettingsProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public void Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reload();" />
      <MemberSignature Language="F#" Value="member this.Reload : unit -&gt; unit" Usage="applicationSettingsBase.Reload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="90b9d-239">从永久存储刷新应用程序设置属性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-239">Refreshes the application settings property values from persistent storage.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b9d-240"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A>方法将清除当前缓存的属性值，随后进行访问时从持久性存储区中导致重新加载这些值。</span><span class="sxs-lookup"><span data-stu-id="90b9d-240">The <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> method clears the currently cached property values, causing a reload of these values from persistent storage when they are subsequently accessed.</span></span> <span data-ttu-id="90b9d-241">此方法执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="90b9d-241">This method performs the following actions:</span></span>  
  
-   <span data-ttu-id="90b9d-242">它通过清除由表示该集合会清除当前已缓存的属性<xref:System.Configuration.SettingsBase.PropertyValues%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="90b9d-242">It clears the currently cached properties by clearing the collection represented by the <xref:System.Configuration.SettingsBase.PropertyValues%2A> property.</span></span>  
  
-   <span data-ttu-id="90b9d-243">它会发出<xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>事件的每个成员<xref:System.Configuration.ApplicationSettingsBase.Properties%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="90b9d-243">It raises the <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event for every member of the <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> collection.</span></span>  
  
 <span data-ttu-id="90b9d-244"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> 与形成对比<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>在于，前者将加载最后一组已保存应用程序设置值，而后者将加载保存的默认值。</span><span class="sxs-lookup"><span data-stu-id="90b9d-244"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> contrasts with <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> in that the former will load the last set of saved application settings values, whereas the latter will load the saved default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b9d-245">下面的代码示例演示<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>方法的正文中调用<xref:System.Windows.Forms.Control.Click>名为的按钮的事件处理程序`btnReload`。</span><span class="sxs-lookup"><span data-stu-id="90b9d-245">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReload`.</span></span> <span data-ttu-id="90b9d-246">此调用后，应用程序设置的当前存储的值被重新加载到其对应的属性。</span><span class="sxs-lookup"><span data-stu-id="90b9d-246">As a result of this call, the currently stored values for the application settings are reloaded into their corresponding properties.</span></span> <span data-ttu-id="90b9d-247">完整的代码示例所示<xref:System.Configuration.ApplicationSettingsBase>类概述。</span><span class="sxs-lookup"><span data-stu-id="90b9d-247">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#6](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#6)]
 [!code-csharp[AppSettingsSample#6](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#6)]
 [!code-vb[AppSettingsSample#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="P:System.Configuration.SettingsBase.PropertyValues" />
        <altmember cref="M:System.Configuration.SettingsPropertyValueCollection.Clear" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="applicationSettingsBase.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="90b9d-248">将保持的应用程序设置值还原为其对应的默认属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-248">Restores the persisted application settings values to their corresponding default properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b9d-249"><xref:System.Configuration.ApplicationSettingsBase.Reset%2A>方法将通过还原每个应用程序设置的当前保留的值将覆盖用户范围的设置属性。</span><span class="sxs-lookup"><span data-stu-id="90b9d-249">The <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> method overwrites the user-scoped settings properties by restoring the currently persisted value of each application settings.</span></span> <span data-ttu-id="90b9d-250">此方法执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="90b9d-250">This method performs the following actions:</span></span>  
  
-   <span data-ttu-id="90b9d-251">它将调用<xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=nameWithType>上支持此可选方法每个设置提供程序的方法。</span><span class="sxs-lookup"><span data-stu-id="90b9d-251">It calls the <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=nameWithType> method on every settings provider that supports this optional method.</span></span>  
  
-   <span data-ttu-id="90b9d-252">它将调用<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>方法来强制刷新设置属性值。</span><span class="sxs-lookup"><span data-stu-id="90b9d-252">It calls the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> method to force a refresh of the settings property values.</span></span>  
  
 <span data-ttu-id="90b9d-253"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> 与形成对比<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>在于，前者将加载最后一组已保存应用程序设置值，而后者将加载保存的默认值。</span><span class="sxs-lookup"><span data-stu-id="90b9d-253"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> contrasts with <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> in that the former will load the last set of saved application settings values, whereas the latter will load the saved default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b9d-254">下面的代码示例演示<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>方法的正文中调用<xref:System.Windows.Forms.Control.Click>名为的按钮的事件处理程序`btnReset`。</span><span class="sxs-lookup"><span data-stu-id="90b9d-254">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReset`.</span></span> <span data-ttu-id="90b9d-255">此调用后，应用程序设置的存储的默认值被重新加载到其对应的属性。</span><span class="sxs-lookup"><span data-stu-id="90b9d-255">As a result of this call, the stored default values for the application settings are reloaded into their corresponding properties.</span></span> <span data-ttu-id="90b9d-256">完整的代码示例所示<xref:System.Configuration.ApplicationSettingsBase>类概述。</span><span class="sxs-lookup"><span data-stu-id="90b9d-256">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#5](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#5)]
 [!code-csharp[AppSettingsSample#5](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#5)]
 [!code-vb[AppSettingsSample#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="90b9d-257">未能分析配置文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-257">The configuration file could not be parsed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Save" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Save();" />
      <MemberSignature Language="F#" Value="override this.Save : unit -&gt; unit" Usage="applicationSettingsBase.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="90b9d-258">存储应用程序设置属性的当前值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-258">Stores the current values of the application settings properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b9d-259"><xref:System.Configuration.ApplicationSettingsBase.Save%2A>方法将每个设置属性的当前值写入到其关联的数据存储区。</span><span class="sxs-lookup"><span data-stu-id="90b9d-259">The <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method writes the current value of each settings property to its associated data store.</span></span> <span data-ttu-id="90b9d-260">对于每个属性，此方法的调用<xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>上关联的设置提供程序的方法。</span><span class="sxs-lookup"><span data-stu-id="90b9d-260">For each property, this method calls the <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method on the associated settings provider.</span></span>  
  
 <span data-ttu-id="90b9d-261">此方法从基类实现不同之处在于，它会发出<xref:System.Configuration.ApplicationSettingsBase.SettingsSaving>事件之前写入值。</span><span class="sxs-lookup"><span data-stu-id="90b9d-261">This method differs from the base class implementation in that it raises the <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> event before the values are written.</span></span>  
  
 <span data-ttu-id="90b9d-262">如果定义的唯一设置是应用程序范围设置，<xref:System.Configuration.ApplicationSettingsBase.Save%2A>将没有任何影响，并不返回任何错误，如果使用默认值调用<xref:System.Configuration.LocalFileSettingsProvider>。</span><span class="sxs-lookup"><span data-stu-id="90b9d-262">If the only settings defined are application-scoped settings, <xref:System.Configuration.ApplicationSettingsBase.Save%2A> will have no effect and return no error if called with the default <xref:System.Configuration.LocalFileSettingsProvider>.</span></span> <span data-ttu-id="90b9d-263"><xref:System.Configuration.LocalFileSettingsProvider> 仅将保存用户范围的设置。</span><span class="sxs-lookup"><span data-stu-id="90b9d-263"><xref:System.Configuration.LocalFileSettingsProvider> only saves user-scoped settings.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="90b9d-264">由于在包装器类初始化期间自动加载应用程序设置的值没有相应负载方法。</span><span class="sxs-lookup"><span data-stu-id="90b9d-264">There is no corresponding Load method because the values of application settings are automatically loaded during wrapper class initialization.</span></span> <span data-ttu-id="90b9d-265">与此相反，这些值将不会自动保存应用程序结束时。</span><span class="sxs-lookup"><span data-stu-id="90b9d-265">In contrast, these values are not automatically saved when an application ends.</span></span> <span data-ttu-id="90b9d-266">因此，必须显式调用<xref:System.Configuration.ApplicationSettingsBase.Save%2A>方法来保持应用程序设置的当前值。</span><span class="sxs-lookup"><span data-stu-id="90b9d-266">Therefore, you must explicitly call the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method to persist the current values of the application settings.</span></span> <span data-ttu-id="90b9d-267">通常在执行此操作<xref:System.Windows.Forms.Form.Closing>事件处理程序的主或包含<xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="90b9d-267">This is typically performed in the <xref:System.Windows.Forms.Form.Closing> event handler of the primary or containing <xref:System.Windows.Forms.Form>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b9d-268">下面的代码示例演示<xref:System.Configuration.ApplicationSettingsBase.Save%2A>方法从调用<xref:System.Windows.Forms.Form.Closing>主窗体的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="90b9d-268">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method being called from the <xref:System.Windows.Forms.Form.Closing> event handler for the primary form.</span></span> <span data-ttu-id="90b9d-269">此方法还追加到与窗体的相关联的设置属性的一个额外的句点<xref:System.Windows.Forms.Control.Text%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="90b9d-269">This method also appends an extra period to the settings property that is associated with the form's <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
 <span data-ttu-id="90b9d-270">完整的代码示例所示<xref:System.Configuration.ApplicationSettingsBase>类概述。</span><span class="sxs-lookup"><span data-stu-id="90b9d-270">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#3)]
 [!code-csharp[AppSettingsSample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#3)]
 [!code-vb[AppSettingsSample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
        <altmember cref="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SettingChanging">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingChangingEventHandler SettingChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingChangingEventHandler SettingChanging" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingChanging As SettingChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingChangingEventHandler ^ SettingChanging;" />
      <MemberSignature Language="F#" Value="member this.SettingChanging : System.Configuration.SettingChangingEventHandler " Usage="member this.SettingChanging : System.Configuration.SettingChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90b9d-271">发生在更改应用程序设置属性的值之前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-271">Occurs before the value of an application settings property is changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b9d-272"><xref:System.Configuration.ApplicationSettingsBase.SettingChanging>事件发生之前通过更改应用程序设置值属性<xref:System.Configuration.ApplicationSettingsBase.Item%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="90b9d-272">The <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event occurs before an application setting value property is changed through the <xref:System.Configuration.ApplicationSettingsBase.Item%2A> method.</span></span> <span data-ttu-id="90b9d-273">不是此事件时引发<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>或<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="90b9d-273">This event is not raised when the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> or <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> methods are called.</span></span> <span data-ttu-id="90b9d-274"><xref:System.Configuration.ApplicationSettingsBase.SettingChanging> 可以通过取消<xref:System.Configuration.SettingChangingEventArgs>事件数据类。</span><span class="sxs-lookup"><span data-stu-id="90b9d-274"><xref:System.Configuration.ApplicationSettingsBase.SettingChanging> can be canceled through the <xref:System.Configuration.SettingChangingEventArgs> event data class.</span></span>  
  
 <span data-ttu-id="90b9d-275">通常使用<xref:System.Configuration.ApplicationSettingsBase.SettingChanging>要处理的各项设置属性的即时验证事件。</span><span class="sxs-lookup"><span data-stu-id="90b9d-275">You typically use the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event to handle immediate validation of an individual settings property.</span></span> <span data-ttu-id="90b9d-276">有关验证的详细信息，请参阅[如何： 验证应用程序设置](~/docs/framework/winforms/advanced/how-to-validate-application-settings.md)。</span><span class="sxs-lookup"><span data-stu-id="90b9d-276">For more information about validation, see [How to: Validate Application Settings](~/docs/framework/winforms/advanced/how-to-validate-application-settings.md).</span></span>  
  
 <span data-ttu-id="90b9d-277">没有对应的`SettingChanged`事件，此类; 相反，请参阅<xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="90b9d-277">There is no corresponding `SettingChanged` event for this class; instead, see the <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b9d-278">下面的代码示例演示<xref:System.Configuration.ApplicationSettingsBase.SettingChanging>类型的对象的事件处理程序`FormSettings`，它一个包装类派生自<xref:System.Configuration.ApplicationSettingsBase>。</span><span class="sxs-lookup"><span data-stu-id="90b9d-278">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="90b9d-279">该处理程序将事件信息显示在文本框中名为`tbStatus`。</span><span class="sxs-lookup"><span data-stu-id="90b9d-279">The handler displays the event information in a textbox named `tbStatus`.</span></span> <span data-ttu-id="90b9d-280">完整的代码示例所示<xref:System.Configuration.ApplicationSettingsBase>类概述。</span><span class="sxs-lookup"><span data-stu-id="90b9d-280">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#7](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#7)]
 [!code-csharp[AppSettingsSample#7](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#7)]
 [!code-vb[AppSettingsSample#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="T:System.Configuration.SettingChangingEventArgs" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SettingsKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingsKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SettingsKey : string with get, set" Usage="System.Configuration.ApplicationSettingsBase.SettingsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90b9d-281">获取或设置应用程序设置组的设置键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-281">Gets or sets the settings key for the application settings group.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90b9d-282">一个 <see cref="T:System.String" />，包含当前设置组的设置键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-282">A <see cref="T:System.String" /> containing the settings key for the current settings group.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b9d-283"><xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>提供属性以启用客户端代码特别设置提供程序，以区分同一应用程序设置类的多个实例。</span><span class="sxs-lookup"><span data-stu-id="90b9d-283">The <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property is provided to enable client code, and in particular the settings provider, to disambiguate between multiple instances of the same application settings class.</span></span>  
  
 <span data-ttu-id="90b9d-284">除非设置包装类旨在使用单一实例模式，可以有多个实例的单个应用程序中的相同应用程序设置类。</span><span class="sxs-lookup"><span data-stu-id="90b9d-284">Unless the settings wrapper class is designed using the singleton pattern, there can be multiple instances of the same application settings class in a single application.</span></span> <span data-ttu-id="90b9d-285">值<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>应根据属性值如何用于共享设置。</span><span class="sxs-lookup"><span data-stu-id="90b9d-285">The value of <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> should be set according to how the property values are intended to be shared.</span></span>  
  
-   <span data-ttu-id="90b9d-286">如果包装器的设置属性用于在同一应用程序，然后在包装器的所有实例之间共享<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>应具有相同的值中的所有实例。</span><span class="sxs-lookup"><span data-stu-id="90b9d-286">If the settings properties of the wrapper are intended to be shared across all instances of the wrapper in the same application, then <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> should have the same value in all of the instances.</span></span> <span data-ttu-id="90b9d-287">这是默认行为的<xref:System.Configuration.ApplicationSettingsBase>类。</span><span class="sxs-lookup"><span data-stu-id="90b9d-287">This is the default behavior of the <xref:System.Configuration.ApplicationSettingsBase> class.</span></span>  
  
-   <span data-ttu-id="90b9d-288">如果包装器的设置属性是要将每个实例，然后<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>应具有唯一的值对于每个实例。</span><span class="sxs-lookup"><span data-stu-id="90b9d-288">If the settings properties of the wrapper are intended to be per instance, then <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> should have a unique value for every instance.</span></span> <span data-ttu-id="90b9d-289"><xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29>版本的构造函数可以初始化<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>到唯一的字符串。</span><span class="sxs-lookup"><span data-stu-id="90b9d-289">The <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29> version of the constructor enables you to initialize <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> to a unique string.</span></span>  
  
 <span data-ttu-id="90b9d-290">与此相反，<xref:System.Configuration.ApplicationSettingsBase.Context%2A>属性提供对设置提供程序，以使其能够以高效和有序的方式保存值的提示。</span><span class="sxs-lookup"><span data-stu-id="90b9d-290">In contrast, the <xref:System.Configuration.ApplicationSettingsBase.Context%2A> property provides hints to the settings provider to enable it to persist values in an efficient and orderly manner.</span></span>  
  
 <span data-ttu-id="90b9d-291"><xref:System.Configuration.SettingChangingEventArgs>类包含一个类似<xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A>属性，可帮助标识的源<xref:System.Configuration.ApplicationSettingsBase.SettingChanging>事件。</span><span class="sxs-lookup"><span data-stu-id="90b9d-291">The <xref:System.Configuration.SettingChangingEventArgs> class contains a similar <xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A> property that helps identify the source of the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Context" />
        <altmember cref="T:System.Configuration.SettingChangingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SettingsLoaded">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingsLoadedEventHandler SettingsLoaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingsLoadedEventHandler SettingsLoaded" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingsLoaded As SettingsLoadedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingsLoadedEventHandler ^ SettingsLoaded;" />
      <MemberSignature Language="F#" Value="member this.SettingsLoaded : System.Configuration.SettingsLoadedEventHandler " Usage="member this.SettingsLoaded : System.Configuration.SettingsLoadedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsLoadedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90b9d-292">在从存储区中检索应用程序设置之后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-292">Occurs after the application settings are retrieved from storage.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b9d-293"><xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded>事件发生在初始后才`get`访问第一个配置属性使用，通常通过<xref:System.Configuration.ApplicationSettingsBase.Item%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="90b9d-293">The <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> event occurs only after the initial `get` access of the first configuration property used, typically through the <xref:System.Configuration.ApplicationSettingsBase.Item%2A> method.</span></span> <span data-ttu-id="90b9d-294">后续访问使用本地缓存的设置属性的值。</span><span class="sxs-lookup"><span data-stu-id="90b9d-294">Subsequent accesses use values for the settings property that are cached locally.</span></span> <span data-ttu-id="90b9d-295"><xref:System.Configuration.ApplicationSettingsBase.Reset%2A>和<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>方法将清除所有缓存的值，因此将在后续访问属性时再次引发此事件。</span><span class="sxs-lookup"><span data-stu-id="90b9d-295">The <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> and <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> methods will clear all cached values so this event will be raised again upon subsequent property access.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
        <altmember cref="T:System.Configuration.SettingsLoadedEventArgs" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="SettingsSaving">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingsSavingEventHandler SettingsSaving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingsSavingEventHandler SettingsSaving" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingsSaving As SettingsSavingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingsSavingEventHandler ^ SettingsSaving;" />
      <MemberSignature Language="F#" Value="member this.SettingsSaving : System.Configuration.SettingsSavingEventHandler " Usage="member this.SettingsSaving : System.Configuration.SettingsSavingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsSavingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90b9d-296">发生在将值保存到数据存储区中之前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-296">Occurs before values are saved to the data store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b9d-297"><xref:System.Configuration.ApplicationSettingsBase.SettingsSaving>引发事件<xref:System.Configuration.ApplicationSettingsBase.Save%2A>方法之前将存储到其关联的数据存储区的应用程序设置属性。</span><span class="sxs-lookup"><span data-stu-id="90b9d-297">The <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> event is raised by the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method before it stores the application settings properties to their associated data store.</span></span> <span data-ttu-id="90b9d-298">关联的事件处理程序可以取消此事件。</span><span class="sxs-lookup"><span data-stu-id="90b9d-298">The associated event handler can cancel this event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b9d-299">下面的代码示例演示<xref:System.Configuration.ApplicationSettingsBase.SettingsSaving>类型的对象的事件处理程序`FormSettings`，它一个包装类派生自<xref:System.Configuration.ApplicationSettingsBase>。</span><span class="sxs-lookup"><span data-stu-id="90b9d-299">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="90b9d-300">该处理程序会询问用户保存当前的应用程序设置属性值。</span><span class="sxs-lookup"><span data-stu-id="90b9d-300">The handler queries the user to save the current application settings property values.</span></span> <span data-ttu-id="90b9d-301">完整的代码示例所示<xref:System.Configuration.ApplicationSettingsBase>类概述。</span><span class="sxs-lookup"><span data-stu-id="90b9d-301">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#8](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#8)]
 [!code-csharp[AppSettingsSample#8](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#8)]
 [!code-vb[AppSettingsSample#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public virtual void Upgrade ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Upgrade ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Upgrade();" />
      <MemberSignature Language="F#" Value="abstract member Upgrade : unit -&gt; unit&#xA;override this.Upgrade : unit -&gt; unit" Usage="applicationSettingsBase.Upgrade " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="90b9d-302">更新应用程序设置，以反映最近安装的应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-302">Updates application settings to reflect a more recent installation of the application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b9d-303"><xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A>方法将执行两个操作以确保平稳过渡到新版本的应用程序：</span><span class="sxs-lookup"><span data-stu-id="90b9d-303">The <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> method performs two actions to assure smooth transition to a new version of an application:</span></span>  
  
-   <span data-ttu-id="90b9d-304">它将通知所有通过调用升级的应用程序是否存在相应的设置提供程序及其<xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=nameWithType>方法，假定它们实现<xref:System.Configuration.IApplicationSettingsProvider>接口。</span><span class="sxs-lookup"><span data-stu-id="90b9d-304">It notifies all of the corresponding settings providers of the existence of the upgraded application through a call to their <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=nameWithType> method, assuming they have implemented the <xref:System.Configuration.IApplicationSettingsProvider> interface.</span></span> <span data-ttu-id="90b9d-305">如果设置包装类用来标记，则不执行此操作<xref:System.Configuration.NoSettingsVersionUpgradeAttribute>。</span><span class="sxs-lookup"><span data-stu-id="90b9d-305">This action is not performed if the settings wrapper class is marked with <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>.</span></span>  
  
-   <span data-ttu-id="90b9d-306">它将重新加载所有应用程序设置的值。</span><span class="sxs-lookup"><span data-stu-id="90b9d-306">It reloads the values for all of the application settings.</span></span>  
  
 <span data-ttu-id="90b9d-307">可以重写的默认行为<xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A>来实现自定义升级或合并行为。</span><span class="sxs-lookup"><span data-stu-id="90b9d-307">You can override the default behavior of <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> to implement custom upgrading or merging behavior.</span></span> <span data-ttu-id="90b9d-308">使用<xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A>方法来检索单个值的上一版本的应用程序的设置。</span><span class="sxs-lookup"><span data-stu-id="90b9d-308">Use the <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> method to retrieve individual values for a setting for the previous version of the application.</span></span> <span data-ttu-id="90b9d-309">自定义升级行为的示例包括：</span><span class="sxs-lookup"><span data-stu-id="90b9d-309">Examples of custom upgrade behavior include:</span></span>  
  
-   <span data-ttu-id="90b9d-310">使用重写一个或多个以前的用户指定值的新策略默认设置或以前的默认值。</span><span class="sxs-lookup"><span data-stu-id="90b9d-310">Using new policy defaults that override one or more of the previous user-specified values or previous defaults.</span></span>  
  
-   <span data-ttu-id="90b9d-311">旧值，使其与较新范围、 不同的设置属性组中，等兼容的特殊转换。</span><span class="sxs-lookup"><span data-stu-id="90b9d-311">Special translation of old values to be compatible with newer ranges, a different settings property group, and so on.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="90b9d-312">未能分析配置文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90b9d-312">The configuration file could not be parsed.</span>
          </span>
        </exception>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      </Docs>
    </Member>
  </Members>
</Type>