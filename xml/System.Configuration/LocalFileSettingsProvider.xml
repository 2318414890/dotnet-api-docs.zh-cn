<Type Name="LocalFileSettingsProvider" FullName="System.Configuration.LocalFileSettingsProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="00b14d65fd8d3912b84629b5c369a2933a0eb961" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30380051" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LocalFileSettingsProvider : System.Configuration.SettingsProvider, System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LocalFileSettingsProvider extends System.Configuration.SettingsProvider implements class System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.LocalFileSettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class LocalFileSettingsProvider&#xA;Inherits SettingsProvider&#xA;Implements IApplicationSettingsProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class LocalFileSettingsProvider : System::Configuration::SettingsProvider, System::Configuration::IApplicationSettingsProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsProvider</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Configuration.IApplicationSettingsProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="95de5-101">为应用程序设置类提供持久性存储。</span>
      <span class="sxs-lookup">
        <span data-stu-id="95de5-101">Provides persistence for application settings classes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95de5-102">设置提供程序定义用于存储在应用程序设置体系结构中使用的配置数据的机制。</span><span class="sxs-lookup"><span data-stu-id="95de5-102">Setting providers define a mechanism for storing configuration data used in the application settings architecture.</span></span> <span data-ttu-id="95de5-103">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]包含一个默认设置提供程序， <xref:System.Configuration.LocalFileSettingsProvider>，它存储到本地文件系统的配置数据。</span><span class="sxs-lookup"><span data-stu-id="95de5-103">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] contains a single default settings provider, <xref:System.Configuration.LocalFileSettingsProvider>, which stores configuration data to the local file system.</span></span> <span data-ttu-id="95de5-104">应用程序设置属性组是否关联到特定的设置提供程序使用<xref:System.Configuration.SettingsProviderAttribute>。</span><span class="sxs-lookup"><span data-stu-id="95de5-104">An application settings property or group of properties are associated to a specific settings provider through the use of the <xref:System.Configuration.SettingsProviderAttribute>.</span></span>  
  
 <span data-ttu-id="95de5-105">通常情况下，客户端程序不会显式访问此类;相反，应用程序设置体系结构会自动调用适当的设置提供程序需要其服务时。</span><span class="sxs-lookup"><span data-stu-id="95de5-105">Typically, the client program does not explicitly access this class; rather, the application settings architecture automatically invokes the appropriate settings provider when its services are required.</span></span> <span data-ttu-id="95de5-106">例如，有许多的成员<xref:System.Configuration.ApplicationSettingsBase>将其工作委托给关联的设置提供程序。</span><span class="sxs-lookup"><span data-stu-id="95de5-106">For example, many of the members of <xref:System.Configuration.ApplicationSettingsBase> delegate their work to the associated settings provider.</span></span>  
  
 <span data-ttu-id="95de5-107"><xref:System.Configuration.LocalFileSettingsProvider> 将设置保存到配置文件具有扩展名`.config`。</span><span class="sxs-lookup"><span data-stu-id="95de5-107"><xref:System.Configuration.LocalFileSettingsProvider> persists settings to configuration files that have the extension `.config`.</span></span> <span data-ttu-id="95de5-108">配置文件的内容组织为 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="95de5-108">The contents of configuration files are structured as XML documents.</span></span> <span data-ttu-id="95de5-109">具体取决于是否设置在应用程序级别或用户级别设置了范围，配置数据存储中的元素作为`<applicationSettings>`或`<userSettings>`节组，分别。</span><span class="sxs-lookup"><span data-stu-id="95de5-109">Depending on whether the setting is scoped at either the application-level or user-level, the configuration data is stored as elements within an `<applicationSettings>` or a `<userSettings>` section group, respectively.</span></span> <span data-ttu-id="95de5-110">每个部分组都由相应<xref:System.Configuration.AppSettingsSection>或<xref:System.Configuration.ClientSettingsSection>分别。</span><span class="sxs-lookup"><span data-stu-id="95de5-110">Each of these section groups is represented by a corresponding <xref:System.Configuration.AppSettingsSection> or <xref:System.Configuration.ClientSettingsSection>, respectively.</span></span> <span data-ttu-id="95de5-111">拥有和管理一个配置节处理程序，它是一个对象类型的每个部分对象<xref:System.Configuration.IConfigurationSectionHandler>。</span><span class="sxs-lookup"><span data-stu-id="95de5-111">Each section object is owned and administered by a configuration section handler, which is an object of type <xref:System.Configuration.IConfigurationSectionHandler>.</span></span>  
  
 <span data-ttu-id="95de5-112">应用程序范围的设置和默认用户范围设置存储在名为的文件`application.exe.config`，这在可执行文件所在的同一目录中创建。</span><span class="sxs-lookup"><span data-stu-id="95de5-112">Application-scoped settings and the default user-scoped settings are stored in a file named `application.exe.config`, which is created in the same directory as the executable file.</span></span> <span data-ttu-id="95de5-113">应用程序配置设置是只读的。</span><span class="sxs-lookup"><span data-stu-id="95de5-113">Application configuration settings are read-only.</span></span> <span data-ttu-id="95de5-114">特定用户数据存储在名为的文件`user.config`、 存储在用户的主目录下。</span><span class="sxs-lookup"><span data-stu-id="95de5-114">Specific user data is stored in a file named `user.config`, stored under the user's home directory.</span></span> <span data-ttu-id="95de5-115">如果启用漫游配置文件，则可能存在的用户配置文件的两个版本。</span><span class="sxs-lookup"><span data-stu-id="95de5-115">If roaming profiles are enabled, two versions of the user configuration file could exist.</span></span> <span data-ttu-id="95de5-116">在这种情况下，漫游的版本中的条目优先于本地用户配置文件中的重复项。</span><span class="sxs-lookup"><span data-stu-id="95de5-116">In such a case, the entries in the roaming version take precedence over duplicated entries in the local user configuration file.</span></span>  
  
 <span data-ttu-id="95de5-117">有关应用程序设置的详细信息，请参阅[应用程序设置 Windows 窗体](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md)。</span><span class="sxs-lookup"><span data-stu-id="95de5-117">For more information about application settings, see [Application Settings for Windows Forms](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <altmember cref="T:System.Configuration.ApplicationScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.UserScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <altmember cref="T:System.Configuration.ClientSettingsSection" />
    <altmember cref="T:System.Configuration.IConfigurationSectionHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LocalFileSettingsProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LocalFileSettingsProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="95de5-118">初始化 <see cref="T:System.Configuration.LocalFileSettingsProvider" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-118">Initializes a new instance of the <see cref="T:System.Configuration.LocalFileSettingsProvider" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95de5-119">默认构造函数集<xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A>属性<xref:System.String.Empty>。</span><span class="sxs-lookup"><span data-stu-id="95de5-119">The default constructor sets the <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> property to <xref:System.String.Empty>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.LocalFileSettingsProvider.ApplicationName" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.LocalFileSettingsProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95de5-120">获取或设置当前运行的应用程序的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-120">Gets or sets the name of the currently running application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95de5-121">一个字符串，包含应用程序的显示名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-121">A string that contains the application's display name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95de5-122"><xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A>和<xref:System.Configuration.Provider.ProviderBase.Name%2A>属性帮助消除在不同的应用程序中命名的设置属性同样的歧义。</span><span class="sxs-lookup"><span data-stu-id="95de5-122">The <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> and <xref:System.Configuration.Provider.ProviderBase.Name%2A> properties help to disambiguate similarly named setting properties in different applications.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Provider.ProviderBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValue GetPreviousVersion(class System.Configuration.SettingsContext context, class System.Configuration.SettingsProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (context As SettingsContext, property As SettingsProperty) As SettingsPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Configuration::SettingsPropertyValue ^ GetPreviousVersion(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsProperty ^ property);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="95de5-123">一个 <see cref="T:System.Configuration.SettingsContext" />，描述使用应用程序设置属性的上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-123">A <see cref="T:System.Configuration.SettingsContext" /> that describes where the application settings property is used.</span>
          </span>
        </param>
        <param name="property">
          <span data-ttu-id="95de5-124">要返回其值的 <see cref="T:System.Configuration.SettingsProperty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-124">The <see cref="T:System.Configuration.SettingsProperty" /> whose value is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95de5-125">返回同一应用程序的早期版本的命名设置属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-125">Returns the value of the named settings property for the previous version of the same application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95de5-126">如果找到，则为表示应用程序设置的 <see cref="T:System.Configuration.SettingsPropertyValue" />；否则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-126">A <see cref="T:System.Configuration.SettingsPropertyValue" /> representing the application setting if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95de5-127"><xref:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion%2A>方法通常与结合使用<xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>方法在应用程序的新版本的安装过程中迁移应用程序设置时。</span><span class="sxs-lookup"><span data-stu-id="95de5-127">The <xref:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion%2A> method is often used in conjunction with the <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> method when migrating application settings during the installation of a new version of an application.</span></span> <span data-ttu-id="95de5-128">有关更多信息，请参见 <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="95de5-128">For more information, see the <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
        <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertyValues (context As SettingsContext, properties As SettingsPropertyCollection) As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Configuration::SettingsPropertyValueCollection ^ GetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="95de5-129">描述当前应用程序用法的 <see cref="T:System.Configuration.SettingsContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-129">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span>
          </span>
        </param>
        <param name="properties">
          <span data-ttu-id="95de5-130">一个包含设置属性组（将要检索该组中的值）的 <see cref="T:System.Configuration.SettingsPropertyCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-130">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing the settings property group whose values are to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95de5-131">为指定的应用程序实例和设置属性组返回设置属性值的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-131">Returns the collection of setting property values for the specified application instance and settings property group.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95de5-132">一个包含指定设置属性组的值的 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-132">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> containing the values for the specified settings property group.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95de5-133"><xref:System.Configuration.LocalFileSettingsProvider.GetPropertyValues%2A>方法还管理特殊应用程序设置类型<xref:System.Configuration.SpecialSetting.ConnectionString>。</span><span class="sxs-lookup"><span data-stu-id="95de5-133">The <xref:System.Configuration.LocalFileSettingsProvider.GetPropertyValues%2A> method also manages the special application settings type <xref:System.Configuration.SpecialSetting.ConnectionString>.</span></span> <span data-ttu-id="95de5-134">连接字符串存储在配置文件元素分隔的一个特殊的段`<connectionstrings>`。</span><span class="sxs-lookup"><span data-stu-id="95de5-134">Connection strings are stored in a special section of the configuration file delimited by the element `<connectionstrings>`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="95de5-135"><xref:System.Configuration.LocalFileSettingsProvider> 不使用加密来保存任何设置。</span><span class="sxs-lookup"><span data-stu-id="95de5-135"><xref:System.Configuration.LocalFileSettingsProvider> does not use encryption to persist any settings.</span></span> <span data-ttu-id="95de5-136">因此，不要存储纯文本密码或其他不采取其他预防措施，例如单独加密配置文件中的信息的情况下使用此提供程序的敏感信息。</span><span class="sxs-lookup"><span data-stu-id="95de5-136">Therefore, do not store plain text passwords or other sensitive information using this provider without taking additional precautions, such as separately encrypting the information within the configuration file.</span></span> <span data-ttu-id="95de5-137">有关详细信息，请参阅[加密配置信息使用受保护的配置](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1)。</span><span class="sxs-lookup"><span data-stu-id="95de5-137">For more information, see [Encrypting Configuration Information Using Protected Configuration](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="95de5-138">遇到了用户范围的设置，但是当前的配置仅支持应用程序范围的设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-138">A user-scoped setting was encountered but the current configuration only supports application-scoped settings.</span>
          </span>
        </exception>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SpecialSettingAttribute" />
        <altmember cref="P:System.Configuration.SettingsPropertyValue.IsDirty" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, values As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="values" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="95de5-139">提供程序的友好名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-139">The friendly name of the provider.</span>
          </span>
        </param>
        <param name="values">
          <span data-ttu-id="95de5-140">名称/值对的集合，表示在配置中为该提供程序指定的提供程序特定的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-140">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95de5-141">初始化提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-141">Initializes the provider.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Configuration.SettingsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(class System.Configuration.SettingsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (context As SettingsContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset(System::Configuration::SettingsContext ^ context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="95de5-142">描述当前应用程序用法的 <see cref="T:System.Configuration.SettingsContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-142">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95de5-143">将与指定的应用程序关联的所有应用程序设置属性重置为其默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-143">Resets all application settings properties associated with the specified application to their default values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95de5-144"><xref:System.Configuration.LocalFileSettingsProvider.Reset%2A>方法还原指定的应用程序设置组的存储的值。</span><span class="sxs-lookup"><span data-stu-id="95de5-144">The <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> method restores the stored values of the specified application settings group.</span></span> <span data-ttu-id="95de5-145">操作<xref:System.Configuration.LocalFileSettingsProvider.Reset%2A>取决于应用程序设置属性的作用域：</span><span class="sxs-lookup"><span data-stu-id="95de5-145">The action of <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> depends on the scope of the application settings property:</span></span>  
  
-   <span data-ttu-id="95de5-146">不会影响应用程序范围的设置。</span><span class="sxs-lookup"><span data-stu-id="95de5-146">Application-scoped settings are not affected.</span></span>  
  
-   <span data-ttu-id="95de5-147">用户范围的设置将重置为默认值为只读的条目，在应用程序配置文件中，存储`application.exe.config`。</span><span class="sxs-lookup"><span data-stu-id="95de5-147">User-scoped settings are reset to the default values that are stored as read-only entries in the application configuration file, `application.exe.config`.</span></span> <span data-ttu-id="95de5-148">如果正在使用漫游配置文件，漫游配置文件中的任何应用程序设置值优先于在本地配置文件中找到重复项。</span><span class="sxs-lookup"><span data-stu-id="95de5-148">If roaming profiles are being used, any application settings values in the roaming profile take precedence over duplicates found in the local profile.</span></span>  
  
 <span data-ttu-id="95de5-149">请注意，是否使用漫游配置文件，可以有两个`user.config`文件，一个用于本地设置，一个漫游配置文件。</span><span class="sxs-lookup"><span data-stu-id="95de5-149">Notice that if roaming profiles are used, there can be two `user.config` files, one for the local settings and one for the roaming profile.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="95de5-150">遇到了用户范围的设置，但是当前的配置仅支持应用程序范围的设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-150">A user-scoped setting was encountered but the current configuration only supports application-scoped settings.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
        <altmember cref="T:System.Configuration.DefaultSettingValueAttribute" />
        <altmember cref="T:System.Configuration.SettingsManageability" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public override void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyValueCollection values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetPropertyValues (context As SettingsContext, values As SettingsPropertyValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyValueCollection ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="values" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="95de5-151">描述当前应用程序用法的 <see cref="T:System.Configuration.SettingsContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-151">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span>
          </span>
        </param>
        <param name="values">
          <span data-ttu-id="95de5-152">表示要设置的属性设置组的 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-152">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> representing the group of property settings to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95de5-153">设置指定的属性设置组的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-153">Sets the values of the specified group of property settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95de5-154">设置包装类，派生自<xref:System.Configuration.ApplicationSettingsBase>，包含<xref:System.Configuration.ApplicationSettingsBase.Save%2A>方法，调用以保留所有其设置属性的值。</span><span class="sxs-lookup"><span data-stu-id="95de5-154">A settings wrapper class, derived from <xref:System.Configuration.ApplicationSettingsBase>, contains the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method, which is called to persist the values of all of its settings properties.</span></span> <span data-ttu-id="95de5-155">此方法枚举通过所有设置提供程序调用其设置属性，与关联<xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>方法为每个<xref:System.Configuration.SettingsProvider>执行实际的序列化操作。</span><span class="sxs-lookup"><span data-stu-id="95de5-155">This method enumerates through all the settings providers associated with its settings properties, and calls the <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method for each <xref:System.Configuration.SettingsProvider> to perform the actual serialization operation.</span></span>  
  
 <span data-ttu-id="95de5-156"><xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> 单独序列化到其相应的应用程序，在相应设置每个用户范围的应用程序设置属性`user.config`配置文件。</span><span class="sxs-lookup"><span data-stu-id="95de5-156"><xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> individually serializes each user-scoped application settings property to its corresponding application setting in the appropriate `user.config` configuration file.</span></span>  
  
 <span data-ttu-id="95de5-157">默认情况下，<xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A>方法应使用以下逻辑顺序以确定序列化方案，具体取决于设置属性类型：</span><span class="sxs-lookup"><span data-stu-id="95de5-157">By default, the <xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> method uses the following logical sequence to determine the serialization scheme, depending on type of the settings property:</span></span>  
  
1.  <span data-ttu-id="95de5-158">如果该类型具有一个关联<xref:System.ComponentModel.TypeConverter>与<xref:System.ComponentModel.TypeConverter.ConvertToString%2A>使用方法实现，此转换。</span><span class="sxs-lookup"><span data-stu-id="95de5-158">If the type has an associated <xref:System.ComponentModel.TypeConverter> with a <xref:System.ComponentModel.TypeConverter.ConvertToString%2A> method implementation, this conversion is used.</span></span>  
  
2.  <span data-ttu-id="95de5-159">使用 XML 序列化。</span><span class="sxs-lookup"><span data-stu-id="95de5-159">XML serialization is used.</span></span>  
  
 <span data-ttu-id="95de5-160">但是，可以通过使用指定的首选序列化机制<xref:System.Configuration.SettingsSerializeAsAttribute>。</span><span class="sxs-lookup"><span data-stu-id="95de5-160">However, you can specify a preferred serialization mechanism by using the <xref:System.Configuration.SettingsSerializeAsAttribute>.</span></span> <span data-ttu-id="95de5-161"><xref:System.Configuration.LocalFileSettingsProvider> 不支持中的二进制序列化[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="95de5-161"><xref:System.Configuration.LocalFileSettingsProvider> does not support binary serialization in [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)].</span></span>  
  
 <span data-ttu-id="95de5-162">如果用户范围的设置属性重新设置为其默认值显式，则本地文件设置提供程序将从用户配置文件中删除关联的设置的项。</span><span class="sxs-lookup"><span data-stu-id="95de5-162">If a user-scoped settings property is set back to its default value explicitly, then the local file settings provider will remove the entry for the associated setting from the user configuration file.</span></span> <span data-ttu-id="95de5-163">对此属性的下一步读取访问权限只需将使用默认值。</span><span class="sxs-lookup"><span data-stu-id="95de5-163">The next read access for this property will simply use the default value.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="95de5-164"><xref:System.Configuration.LocalFileSettingsProvider> 不使用加密来保存任何设置。</span><span class="sxs-lookup"><span data-stu-id="95de5-164"><xref:System.Configuration.LocalFileSettingsProvider> does not use encryption to persist any settings.</span></span> <span data-ttu-id="95de5-165">因此，不要存储纯文本密码或其他不采取其他预防措施，例如单独加密配置文件中的信息的情况下使用此提供程序的敏感信息。</span><span class="sxs-lookup"><span data-stu-id="95de5-165">Therefore, do not store plain text passwords or other sensitive information using this provider without taking additional precautions, such as separately encrypting the information within the configuration file.</span></span> <span data-ttu-id="95de5-166">有关详细信息，请参阅[加密配置信息使用受保护的配置](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1)。</span><span class="sxs-lookup"><span data-stu-id="95de5-166">For more information, see [Encrypting Configuration Information Using Protected Configuration](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="95de5-167">遇到了用户范围的设置，但是当前的配置仅支持应用程序范围的设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-167">A user-scoped setting was encountered but the current configuration only supports application-scoped settings.</span>
          </span>
          <span data-ttu-id="95de5-168">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-168">-or-</span>
          </span>
          <span data-ttu-id="95de5-169">将设置保存到配置文件时发生一般性失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-169">There was a general failure saving the settings to the configuration file.</span>
          </span>
        </exception>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.Configuration.SettingsSerializeAsAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Upgrade (context As SettingsContext, properties As SettingsPropertyCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Upgrade(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="95de5-170">描述当前应用程序用法的 <see cref="T:System.Configuration.SettingsContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-170">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span>
          </span>
        </param>
        <param name="properties">
          <span data-ttu-id="95de5-171">一个包含设置属性组（将要检索该组中的值）的 <see cref="T:System.Configuration.SettingsPropertyCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-171">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing the settings property group whose values are to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95de5-172">尝试从相同应用程序的早期版本迁移以前的用户范围设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-172">Attempts to migrate previous user-scoped settings from a previous version of the same application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95de5-173"><xref:System.Configuration.LocalFileSettingsProvider> 迁移中单独的操作的本地和漫游设置。</span><span class="sxs-lookup"><span data-stu-id="95de5-173"><xref:System.Configuration.LocalFileSettingsProvider> migrates the local and roaming settings in separate operations.</span></span>  
  
 <span data-ttu-id="95de5-174"><xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>方法取消设置的每个应用程序具有<xref:System.Configuration.NoSettingsVersionUpgradeAttribute>应用于它，或整个设置包装类，派生自<xref:System.Configuration.ApplicationSettingsBase>。</span><span class="sxs-lookup"><span data-stu-id="95de5-174">The <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> method is suppressed for every application setting that has the <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> applied to it, or to the entire settings wrapper class, derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span>  
  
 <span data-ttu-id="95de5-175">调用此方法通过这种方式取决于正在升级的应用程序的类型：</span><span class="sxs-lookup"><span data-stu-id="95de5-175">This way this method is called depends on the type of application that is being upgraded:</span></span>  
  
-   <span data-ttu-id="95de5-176">每个版本的[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]应用程序存储在其自己的独立的安装目录。</span><span class="sxs-lookup"><span data-stu-id="95de5-176">Each version of a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application is stored in its own isolated installation directory.</span></span> <span data-ttu-id="95de5-177">新版本后[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]已安装应用程序，并且当首次运行新版本，将自动调用内部逻辑<xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>迁移到新的版本的所有常见的应用程序设置。</span><span class="sxs-lookup"><span data-stu-id="95de5-177">After a new version of a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application is installed, and when the new version is first run, internal logic will automatically call <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> to migrate all common application settings to the new version.</span></span> <span data-ttu-id="95de5-178">有关详细信息，请参阅 [ClickOnce 和应用程序设置](http://msdn.microsoft.com/library/891caba6-faef-4a3c-8f71-60e6fadb60eb)。</span><span class="sxs-lookup"><span data-stu-id="95de5-178">For more information, see [ClickOnce and Application Settings](http://msdn.microsoft.com/library/891caba6-faef-4a3c-8f71-60e6fadb60eb).</span></span>  
  
-   <span data-ttu-id="95de5-179">标准 Windows 窗体和控制台应用程序必须手动调用<xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>，因为没有任何常规的自动化的方法来确定此类应用程序首次运行时。</span><span class="sxs-lookup"><span data-stu-id="95de5-179">Standard Windows Forms and console applications must manually call <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>, because there is not a general, automatic way to determine when such an application is first run.</span></span> <span data-ttu-id="95de5-180">执行此操作通过安装程序或从应用程序本身，并使用保存的属性，使用两种常见方式通常命名为类似`IsFirstRun`。</span><span class="sxs-lookup"><span data-stu-id="95de5-180">The two common ways to do this are either from the installation program or using from the application itself, using a persisted property, often named something like `IsFirstRun`.</span></span>  
  
 <span data-ttu-id="95de5-181">请注意，若要迁移应用程序设置的较新版本，它必须能也加载和读取应用程序设置的较旧版本。</span><span class="sxs-lookup"><span data-stu-id="95de5-181">Note that for the newer version to migrate application settings, it must be able to also load and read the older version of the application settings.</span></span> <span data-ttu-id="95de5-182">因此，它必须包含与应用程序的新的和以前版本兼容的包装类。</span><span class="sxs-lookup"><span data-stu-id="95de5-182">Therefore, it must contain wrapper classes compatible with both the new and previous versions of the application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="95de5-183">遇到了用户范围的设置，但是当前的配置仅支持应用程序范围的设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-183">A user-scoped setting was encountered but the current configuration only supports application-scoped settings.</span>
          </span>
          <span data-ttu-id="95de5-184">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-184">-or-</span>
          </span>
          <span data-ttu-id="95de5-185">未能访问早期版本的配置文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95de5-185">The previous version of the configuration file could not be accessed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
        <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>