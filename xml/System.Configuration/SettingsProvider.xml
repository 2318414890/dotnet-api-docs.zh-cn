<Type Name="SettingsProvider" FullName="System.Configuration.SettingsProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e7f52b620dcf453e22ecba312320a96021be7efa" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56773293" /></Metadata><TypeSignature Language="C#" Value="public abstract class SettingsProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SettingsProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.SettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SettingsProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SettingsProvider abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type SettingsProvider = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="444ad-101">在应用程序设置结构中作为派生自定义设置提供程序的基类。</span><span class="sxs-lookup"><span data-stu-id="444ad-101">Acts as a base class for deriving custom settings providers in the application settings architecture.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="444ad-102">设置提供程序定义用于存储应用程序设置体系结构中使用的配置数据的机制。</span><span class="sxs-lookup"><span data-stu-id="444ad-102">A settings provider defines the mechanism for storing configuration data used in the application settings architecture.</span></span> <span data-ttu-id="444ad-103">.NET Framework 包含一个默认设置提供程序， <xref:System.Configuration.LocalFileSettingsProvider>，它存储到本地文件系统的配置数据。</span><span class="sxs-lookup"><span data-stu-id="444ad-103">The .NET Framework contains a single default settings provider, <xref:System.Configuration.LocalFileSettingsProvider>, which stores configuration data to the local file system.</span></span> <span data-ttu-id="444ad-104">但是，可以通过从抽象派生来创建备用存储机制<xref:System.Configuration.SettingsProvider>类。</span><span class="sxs-lookup"><span data-stu-id="444ad-104">However, you can create alternate storage mechanisms by deriving from the abstract <xref:System.Configuration.SettingsProvider> class.</span></span> <span data-ttu-id="444ad-105">包装器类使用的提供程序由修饰的包装器类<xref:System.Configuration.SettingsProviderAttribute>。</span><span class="sxs-lookup"><span data-stu-id="444ad-105">The provider that a wrapper class uses is determined by decorating the wrapper class with the <xref:System.Configuration.SettingsProviderAttribute>.</span></span> <span data-ttu-id="444ad-106">如果此特性未提供，默认情况下， <xref:System.Configuration.LocalFileSettingsProvider>，使用。</span><span class="sxs-lookup"><span data-stu-id="444ad-106">If this attribute is not provided, the default, <xref:System.Configuration.LocalFileSettingsProvider>, is used.</span></span>  
  
 <span data-ttu-id="444ad-107">在创建自定义设置提供程序，最小值时，必须提供此类的实现为三个方法： <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>，<xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>和<xref:System.Configuration.SettingsProvider.ApplicationName%2A>。</span><span class="sxs-lookup"><span data-stu-id="444ad-107">When you create a custom settings provider, at minimum, you must provide implementations for the three methods of this class: <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>, <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> and <xref:System.Configuration.SettingsProvider.ApplicationName%2A>.</span></span>  
  
 <span data-ttu-id="444ad-108">对于客户端应用程序，您可以添加更多标准化的功能自定义提供程序通过还实现<xref:System.Configuration.IApplicationSettingsProvider>接口。</span><span class="sxs-lookup"><span data-stu-id="444ad-108">For client applications, you can add more standardized functionality to a custom provider by also implementing the <xref:System.Configuration.IApplicationSettingsProvider> interface.</span></span> <span data-ttu-id="444ad-109">此接口镜像方法中找到<xref:System.Configuration.ApplicationSettingsBase>类，这主要是使版本控制支持。</span><span class="sxs-lookup"><span data-stu-id="444ad-109">This interface mirrors methods found in the <xref:System.Configuration.ApplicationSettingsBase> class, which mainly enables versioning support.</span></span>  
  
 <span data-ttu-id="444ad-110">通常情况下，应设计为单一实例，以避免存储资源争用的设置提供程序。</span><span class="sxs-lookup"><span data-stu-id="444ad-110">Typically, you should design settings providers to be single-instanced to avoid storage resource contention.</span></span> <span data-ttu-id="444ad-111">提供程序还应是线程安全，因为它们可在从单个应用程序域中的多个包装实例或不同域中的多个应用程序同时调用。</span><span class="sxs-lookup"><span data-stu-id="444ad-111">Providers should also be thread-safe because they can be called simultaneously from multiple wrapper instances in a single application domain or from multiple applications in different domains.</span></span>  
  
 <span data-ttu-id="444ad-112">最小值，设置提供程序必须能够识别三个属性： <xref:System.Configuration.ApplicationScopedSettingAttribute>， <xref:System.Configuration.UserScopedSettingAttribute>，和<xref:System.Configuration.DefaultSettingValueAttribute>。</span><span class="sxs-lookup"><span data-stu-id="444ad-112">At minimum, a settings provider must recognize three attributes - <xref:System.Configuration.ApplicationScopedSettingAttribute>, <xref:System.Configuration.UserScopedSettingAttribute>, and <xref:System.Configuration.DefaultSettingValueAttribute>.</span></span> <span data-ttu-id="444ad-113">有关可以应用于应用程序设置的属性的完整列表，请参阅[应用程序设置特性](~/docs/framework/winforms/advanced/application-settings-attributes.md)。</span><span class="sxs-lookup"><span data-stu-id="444ad-113">For a full listing of attributes that can be applied to application settings, see [Application Settings Attributes](~/docs/framework/winforms/advanced/application-settings-attributes.md).</span></span> <span data-ttu-id="444ad-114">自定义设置提供程序应解决按以下方式应用于设置属性的特性：</span><span class="sxs-lookup"><span data-stu-id="444ad-114">A custom setting provider should resolve attributes applied to settings properties in the following manner:</span></span>  
  
1.  <span data-ttu-id="444ad-115">如果提供程序可以满足权限隐含的该属性的请求，显然应该这样做。</span><span class="sxs-lookup"><span data-stu-id="444ad-115">If the provider can fulfill the request implied by the attribute, obviously it should do so.</span></span>  
  
2.  <span data-ttu-id="444ad-116">如果提供程序无法完成请求，它应以无提示方式忽略它。</span><span class="sxs-lookup"><span data-stu-id="444ad-116">If the provider cannot fulfill the request, it should ignore it silently.</span></span>  
  
3.  <span data-ttu-id="444ad-117">如果两个或多个属性发生冲突;例如，属性修饰的同时<xref:System.Configuration.ApplicationScopedSettingAttribute>并<xref:System.Configuration.UserScopedSettingAttribute>; 提供程序应引发<xref:System.Configuration.ConfigurationException>。</span><span class="sxs-lookup"><span data-stu-id="444ad-117">If two or more properties conflict; for example, a property being decorated with both <xref:System.Configuration.ApplicationScopedSettingAttribute> and <xref:System.Configuration.UserScopedSettingAttribute>; the provider should throw a <xref:System.Configuration.ConfigurationException>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
    <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <altmember cref="T:System.Configuration.ConfigurationException" />
    <related type="Article" href="https://msdn.microsoft.com/library/c8eb2ad0-fac6-4ea2-9140-675a4a44d562"><span data-ttu-id="444ad-118">应用程序设置体系结构</span><span class="sxs-lookup"><span data-stu-id="444ad-118">Application Settings Architecture</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/53caa66c-a9fb-43a5-953c-ad092590098d"><span data-ttu-id="444ad-119">应用程序设置特性</span><span class="sxs-lookup"><span data-stu-id="444ad-119">Application Settings Attributes</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SettingsProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SettingsProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="444ad-120">初始化 <see cref="T:System.Configuration.SettingsProvider" /> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="444ad-120">Initializes an instance of the <see cref="T:System.Configuration.SettingsProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="444ad-121">这是此抽象类的此默认受保护构造函数。</span><span class="sxs-lookup"><span data-stu-id="444ad-121">This is this default protected constructor for this abstract class.</span></span> <span data-ttu-id="444ad-122">派生的自定义设置提供程序不需要提供的显式构造函数，因为<xref:System.Configuration.Provider.ProviderBase.Initialize%2A>方法通常执行所有的初始化。</span><span class="sxs-lookup"><span data-stu-id="444ad-122">Derived custom settings providers are not required to provide an explicit constructor because the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method typically performs all initialization.</span></span>  
  
 <span data-ttu-id="444ad-123">客户端代码通常不会不直接实例化设置提供程序;相反，使用以下过程来查找特定的设置属性的设置提供程序：</span><span class="sxs-lookup"><span data-stu-id="444ad-123">Client code typically does not directly instantiate a settings provider; instead, you use the following procedure to find a settings provider for a particular settings property:</span></span>  
  
1.  <span data-ttu-id="444ad-124">调用<xref:System.ComponentModel.Component.GetService%2A>方法在当前<xref:System.ComponentModel.Component>或<xref:System.ComponentModel.ISite>返回到当前的引用<xref:System.Configuration.ISettingsProviderService>。</span><span class="sxs-lookup"><span data-stu-id="444ad-124">Call the <xref:System.ComponentModel.Component.GetService%2A> method on the current <xref:System.ComponentModel.Component> or <xref:System.ComponentModel.ISite> to return a reference to the current <xref:System.Configuration.ISettingsProviderService>.</span></span>  
  
2.  <span data-ttu-id="444ad-125">调用<xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A>方法的<xref:System.Configuration.ISettingsProviderService>在返回的设置提供程序的第一步中检索到。</span><span class="sxs-lookup"><span data-stu-id="444ad-125">Call the <xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A> method of the <xref:System.Configuration.ISettingsProviderService> retrieved in the first step to return the settings provider.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
        <altmember cref="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SettingsProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Configuration.SettingsProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="444ad-126">获取或设置当前运行的应用程序的名称。</span><span class="sxs-lookup"><span data-stu-id="444ad-126">Gets or sets the name of the currently running application.</span></span></summary>
        <value><span data-ttu-id="444ad-127">一个<see cref="T:System.String" />，其中包含应用程序的短的名称，不包含完整路径或扩展名，例如， <c>SimpleAppSettings</c>。</span><span class="sxs-lookup"><span data-stu-id="444ad-127">A <see cref="T:System.String" /> that contains the application's shortened name, which does not contain a full path or extension, for example, <c>SimpleAppSettings</c>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="444ad-128"><xref:System.Configuration.SettingsProvider.ApplicationName%2A>和<xref:System.Configuration.Provider.ProviderBase.Name%2A>属性帮助消除歧义同样在不同的应用程序中命名的设置属性。</span><span class="sxs-lookup"><span data-stu-id="444ad-128">The <xref:System.Configuration.SettingsProvider.ApplicationName%2A> and <xref:System.Configuration.Provider.ProviderBase.Name%2A> properties help to disambiguate similarly named setting properties in different applications.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Provider.ProviderBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPropertyValues (context As SettingsContext, collection As SettingsPropertyCollection) As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Configuration::SettingsPropertyValueCollection ^ GetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ collection);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; System.Configuration.SettingsPropertyValueCollection" Usage="settingsProvider.GetPropertyValues (context, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="444ad-129"><see cref="T:System.Configuration.SettingsContext" />，描述当前应用程序的用法。</span><span class="sxs-lookup"><span data-stu-id="444ad-129">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application use.</span></span></param>
        <param name="collection"><span data-ttu-id="444ad-130">一个包含设置属性组（将要检索该组中的值）的 <see cref="T:System.Configuration.SettingsPropertyCollection" />。</span><span class="sxs-lookup"><span data-stu-id="444ad-130">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing the settings property group whose values are to be retrieved.</span></span></param>
        <summary><span data-ttu-id="444ad-131">返回指定应用程序实例的设置属性值集合和设置属性组。</span><span class="sxs-lookup"><span data-stu-id="444ad-131">Returns the collection of settings property values for the specified application instance and settings property group.</span></span></summary>
        <returns><span data-ttu-id="444ad-132">一个包含指定设置属性组的值的 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />。</span><span class="sxs-lookup"><span data-stu-id="444ad-132">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> containing the values for the specified settings property group.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="444ad-133"><xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>必须实现方法以处理特殊设置，这些标记与<xref:System.Configuration.SpecialSettingAttribute>，以及协调应用程序和用户设置。</span><span class="sxs-lookup"><span data-stu-id="444ad-133">The <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A> method must be implemented to handle special settings, those marked with <xref:System.Configuration.SpecialSettingAttribute>, as well as reconcile application and user settings.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SpecialSettingAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyValueCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetPropertyValues (context As SettingsContext, collection As SettingsPropertyValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyValueCollection ^ collection);" />
      <MemberSignature Language="F#" Value="abstract member SetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyValueCollection -&gt; unit" Usage="settingsProvider.SetPropertyValues (context, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="444ad-134">描述当前应用程序用法的 <see cref="T:System.Configuration.SettingsContext" />。</span><span class="sxs-lookup"><span data-stu-id="444ad-134">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span></span></param>
        <param name="collection"><span data-ttu-id="444ad-135">表示要设置的属性设置组的 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />。</span><span class="sxs-lookup"><span data-stu-id="444ad-135">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> representing the group of property settings to set.</span></span></param>
        <summary><span data-ttu-id="444ad-136">设置指定的属性设置组的值。</span><span class="sxs-lookup"><span data-stu-id="444ad-136">Sets the values of the specified group of property settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="444ad-137"><xref:System.Configuration.ApplicationSettingsBase> 包含<xref:System.Configuration.ApplicationSettingsBase.Save%2A>方法，调用以保留所有其设置属性的值。</span><span class="sxs-lookup"><span data-stu-id="444ad-137"><xref:System.Configuration.ApplicationSettingsBase> contains the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method, which is called to persist the values of all of its settings properties.</span></span> <span data-ttu-id="444ad-138">此方法枚举了所有的设置通过使用其设置属性和调用关联的提供程序<xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>方法为每个<xref:System.Configuration.SettingsProvider>执行实际的序列化操作。</span><span class="sxs-lookup"><span data-stu-id="444ad-138">This method enumerates through all the settings providers associated with its settings properties, and calls the <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method for each <xref:System.Configuration.SettingsProvider> to perform the actual serialization operation.</span></span>  
  
 <span data-ttu-id="444ad-139"><xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>应融入了安全性的实现方法：</span><span class="sxs-lookup"><span data-stu-id="444ad-139">The <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method should be implemented with security in mind:</span></span>  
  
-   <span data-ttu-id="444ad-140">只有完全受信任的代码应该有权更新应用程序设置。</span><span class="sxs-lookup"><span data-stu-id="444ad-140">Only fully trusted code should be allowed to update application settings.</span></span> <span data-ttu-id="444ad-141">应允许部分受信任的代码来更新仅用户应用程序设置。</span><span class="sxs-lookup"><span data-stu-id="444ad-141">Partially trusted code should be allowed to update only user application settings.</span></span> <span data-ttu-id="444ad-142">不受信任的代码通常不能更新应用程序设置。</span><span class="sxs-lookup"><span data-stu-id="444ad-142">Untrusted code is not typically allowed to update application settings.</span></span>  
  
-   <span data-ttu-id="444ad-143">使用配额应考虑为了防止资源攻击由部分受信任的应用程序。</span><span class="sxs-lookup"><span data-stu-id="444ad-143">Usage quotas should be considered to guard against resource attacks by partially trusted applications.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
  </Members>
</Type>