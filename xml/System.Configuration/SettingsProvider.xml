<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SettingsProvider.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e349899c9a9eaa082e51bfa42237de5a3090e2dc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e349899c9a9eaa082e51bfa42237de5a3090e2dc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Configuration.SettingsProvider">
          <source>Acts as a base class for deriving custom settings providers in the application settings architecture.</source>
          <target state="translated">在应用程序设置结构中作为派生自定义设置提供程序的基类。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.SettingsProvider">
          <source>A settings provider defines the mechanism for storing configuration data used in the application settings architecture.</source>
          <target state="translated">设置提供程序定义用于存储在应用程序设置体系结构中使用的配置数据的机制。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.SettingsProvider">
          <source>The .NET Framework contains a single default settings provider, <ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph>, which stores configuration data to the local file system.</source>
          <target state="translated">.NET Framework 包含一个默认设置提供程序， <ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph>，它存储到本地文件系统的配置数据。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.SettingsProvider">
          <source>However, you can create alternate storage mechanisms by deriving from the abstract <ph id="ph1">&lt;xref:System.Configuration.SettingsProvider&gt;</ph> class.</source>
          <target state="translated">但是，可以通过从抽象派生创建备用存储机制<ph id="ph1">&lt;xref:System.Configuration.SettingsProvider&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.SettingsProvider">
          <source>The provider that a wrapper class uses is determined by decorating the wrapper class with the <ph id="ph1">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph>.</source>
          <target state="translated">包装类使用的访问接口确定的修饰具有的包装类<ph id="ph1">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.SettingsProvider">
          <source>If this attribute is not provided, the default, <ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph>, is used.</source>
          <target state="translated">如果此属性未提供，默认情况下， <ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph>，使用。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.SettingsProvider">
          <source>When you create a custom settings provider, at minimum, you must provide implementations for the three methods of this class: <ph id="ph1">&lt;xref:System.Configuration.SettingsProvider.GetPropertyValues%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Configuration.SettingsProvider.SetPropertyValues%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Configuration.SettingsProvider.ApplicationName%2A&gt;</ph>.</source>
          <target state="translated">当你创建自定义设置提供程序，最小时，必须提供用于三个方法的此类的实现： <ph id="ph1">&lt;xref:System.Configuration.SettingsProvider.GetPropertyValues%2A&gt;</ph>，<ph id="ph2">&lt;xref:System.Configuration.SettingsProvider.SetPropertyValues%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Configuration.SettingsProvider.ApplicationName%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.SettingsProvider">
          <source>For client applications, you can add more standardized functionality to a custom provider by also implementing the <ph id="ph1">&lt;xref:System.Configuration.IApplicationSettingsProvider&gt;</ph> interface.</source>
          <target state="translated">对于客户端应用程序，你可以添加多标准化的功能自定义提供程序通过还实现<ph id="ph1">&lt;xref:System.Configuration.IApplicationSettingsProvider&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.SettingsProvider">
          <source>This interface mirrors methods found in the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> class, which mainly enables versioning support.</source>
          <target state="translated">此接口镜像方法中找到<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>类，该类主要版本控制支持。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.SettingsProvider">
          <source>Typically, you should design settings providers to be single-instanced to avoid storage resource contention.</source>
          <target state="translated">通常情况下，你应设计设置提供程序单一实例，以避免存储资源争用。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.SettingsProvider">
          <source>Providers should also be thread-safe because they can be called simultaneously from multiple wrapper instances in a single application domain or from multiple applications in different domains.</source>
          <target state="translated">提供程序也应该是线程安全，因为它们可以通过从单个应用程序域中的多个包装实例或不同域中的多个应用程序同时调用。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.SettingsProvider">
          <source>At minimum, a settings provider must recognize three attributes—<ph id="ph1">&lt;xref:System.Configuration.ApplicationScopedSettingAttribute&gt;</ph>, <ph id="ph2">&lt;xref:System.Configuration.UserScopedSettingAttribute&gt;</ph>, and <ph id="ph3">&lt;xref:System.Configuration.DefaultSettingValueAttribute&gt;</ph>.</source>
          <target state="translated">在最小值、 设置提供程序必须识别三个特性-<ph id="ph1">&lt;xref:System.Configuration.ApplicationScopedSettingAttribute&gt;</ph>， <ph id="ph2">&lt;xref:System.Configuration.UserScopedSettingAttribute&gt;</ph>，和<ph id="ph3">&lt;xref:System.Configuration.DefaultSettingValueAttribute&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.SettingsProvider">
          <source>For a full listing of attributes that can be applied to application settings, see <bpt id="p1">[</bpt>Application Settings Attributes<ept id="p1">](~/docs/framework/winforms/advanced/application-settings-attributes.md)</ept>.</source>
          <target state="translated">可以应用于应用程序设置的属性的完整列表，请参阅<bpt id="p1">[</bpt>的应用程序设置属性<ept id="p1">](~/docs/framework/winforms/advanced/application-settings-attributes.md)</ept>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.SettingsProvider">
          <source>A custom setting provider should resolve attributes applied to settings properties in the following manner:</source>
          <target state="translated">自定义设置提供程序应解决按以下方式应用于设置属性的属性：</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.SettingsProvider">
          <source>If the provider can fulfill the request implied by the attribute, obviously it should do so.</source>
          <target state="translated">如果提供程序可以满足所暗示属性的请求，显然应该这样做。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.SettingsProvider">
          <source>If the provider cannot fulfill the request, it should ignore it silently.</source>
          <target state="translated">如果提供程序无法完成请求，它应以无提示方式忽略它。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.SettingsProvider">
          <source>If two or more properties conflict; for example, a property being decorated with both <ph id="ph1">&lt;xref:System.Configuration.ApplicationScopedSettingAttribute&gt;</ph> and <ph id="ph2">&lt;xref:System.Configuration.UserScopedSettingAttribute&gt;</ph>; the provider should throw a <ph id="ph3">&lt;xref:System.Configuration.ConfigurationException&gt;</ph>.</source>
          <target state="translated">如果两个或多个属性发生冲突;例如，两个正在修饰的属性<ph id="ph1">&lt;xref:System.Configuration.ApplicationScopedSettingAttribute&gt;</ph>和<ph id="ph2">&lt;xref:System.Configuration.UserScopedSettingAttribute&gt;</ph>; 提供程序应引发<ph id="ph3">&lt;xref:System.Configuration.ConfigurationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Configuration.SettingsProvider.#ctor">
          <source>Initializes an instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsProvider" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsProvider" /&gt;</ph> 类的实例。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.SettingsProvider.#ctor">
          <source>This is this default protected constructor for this abstract class.</source>
          <target state="translated">这是此抽象类此默认受保护构造函数。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.SettingsProvider.#ctor">
          <source>Derived custom settings providers are not required to provide an explicit constructor because the <ph id="ph1">&lt;xref:System.Configuration.Provider.ProviderBase.Initialize%2A&gt;</ph> method typically performs all initialization.</source>
          <target state="translated">派生自定义设置提供程序不需要提供的显式构造函数，因为<ph id="ph1">&lt;xref:System.Configuration.Provider.ProviderBase.Initialize%2A&gt;</ph>方法通常会执行所有的初始化。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.SettingsProvider.#ctor">
          <source>Client code typically does not directly instantiate a settings provider; instead, you use the following procedure to find a settings provider for a particular settings property:</source>
          <target state="translated">客户端代码通常不会不直接实例化设置提供程序;相反，你可以使用以下过程设置提供程序查找特定的设置属性：</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.SettingsProvider.#ctor">
          <source>Call the <ph id="ph1">&lt;xref:System.ComponentModel.Component.GetService%2A&gt;</ph> method on the current <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> or <ph id="ph3">&lt;xref:System.ComponentModel.ISite&gt;</ph> to return a reference to the current <ph id="ph4">&lt;xref:System.Configuration.ISettingsProviderService&gt;</ph>.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.ComponentModel.Component.GetService%2A&gt;</ph>方法对当前<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>或<ph id="ph3">&lt;xref:System.ComponentModel.ISite&gt;</ph>返回到当前的引用<ph id="ph4">&lt;xref:System.Configuration.ISettingsProviderService&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.SettingsProvider.#ctor">
          <source>Call the <ph id="ph1">&lt;xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Configuration.ISettingsProviderService&gt;</ph> retrieved in the first step to return the settings provider.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Configuration.ISettingsProviderService&gt;</ph>在返回设置提供程序的第一步中检索。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Configuration.SettingsProvider.ApplicationName">
          <source>Gets or sets the name of the currently running application.</source>
          <target state="translated">获取或设置当前运行的应用程序的名称。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.SettingsProvider.ApplicationName">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the application's shortened name, which does not contain a full path or extension, for example, <bpt id="p1">&lt;c&gt;</bpt>SimpleAppSettings<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> ，其中包含应用程序的短的名称，不包含的完整路径或扩展，例如， <bpt id="p1">&lt;c&gt;</bpt>SimpleAppSettings<ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.SettingsProvider.ApplicationName">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.SettingsProvider.ApplicationName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Configuration.Provider.ProviderBase.Name%2A&gt;</ph> properties help to disambiguate similarly named setting properties in different applications.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.SettingsProvider.ApplicationName%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Configuration.Provider.ProviderBase.Name%2A&gt;</ph>属性帮助消除在不同的应用程序中命名的设置属性同样的歧义。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsContext" /&gt;</ph> describing the current application use.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Configuration.SettingsContext" /&gt;</ph>，描述当前应用程序的用法。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsPropertyCollection" /&gt;</ph> containing the settings property group whose values are to be retrieved.</source>
          <target state="translated">一个包含设置属性组（将要检索该组中的值）的 <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsPropertyCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
          <source>Returns the collection of settings property values for the specified application instance and settings property group.</source>
          <target state="translated">返回指定应用程序实例的设置属性值集合和设置属性组。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsPropertyValueCollection" /&gt;</ph> containing the values for the specified settings property group.</source>
          <target state="translated">一个包含指定设置属性组的值的 <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsPropertyValueCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.SettingsProvider.GetPropertyValues%2A&gt;</ph> method must be implemented to handle special settings, those marked with <ph id="ph2">&lt;xref:System.Configuration.SpecialSettingAttribute&gt;</ph>, as well as reconcile application and user settings.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.SettingsProvider.GetPropertyValues%2A&gt;</ph>必须实现方法以处理特殊设置，这些标记与<ph id="ph2">&lt;xref:System.Configuration.SpecialSettingAttribute&gt;</ph>，以及协调应用程序和用户设置。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsContext" /&gt;</ph> describing the current application usage.</source>
          <target state="translated">描述当前应用程序用法的 <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsPropertyValueCollection" /&gt;</ph> representing the group of property settings to set.</source>
          <target state="translated">表示要设置的属性设置组的 <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsPropertyValueCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
          <source>Sets the values of the specified group of property settings.</source>
          <target state="translated">设置指定的属性设置组的值。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
          <source><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> contains the <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph> method, which is called to persist the values of all of its settings properties.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> 包含<ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph>方法，调用以保留所有其设置属性的值。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
          <source>This method enumerates through all the settings providers associated with its settings properties, and calls the <ph id="ph1">&lt;xref:System.Configuration.SettingsProvider.SetPropertyValues%2A&gt;</ph> method for each <ph id="ph2">&lt;xref:System.Configuration.SettingsProvider&gt;</ph> to perform the actual serialization operation.</source>
          <target state="translated">此方法枚举通过所有设置提供程序调用其设置属性，与关联<ph id="ph1">&lt;xref:System.Configuration.SettingsProvider.SetPropertyValues%2A&gt;</ph>方法为每个<ph id="ph2">&lt;xref:System.Configuration.SettingsProvider&gt;</ph>执行实际的序列化操作。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.SettingsProvider.SetPropertyValues%2A&gt;</ph> method should be implemented with security in mind:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.SettingsProvider.SetPropertyValues%2A&gt;</ph>应考虑到了安全性实现方法：</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
          <source>Only fully trusted code should be allowed to update application settings.</source>
          <target state="translated">只有完全受信任的代码可以更新应用程序设置。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
          <source>Partially trusted code should be allowed to update only user application settings.</source>
          <target state="translated">应允许部分受信任的代码更新仅用户应用程序设置。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
          <source>Untrusted code is not typically allowed to update application settings.</source>
          <target state="translated">不受信任的代码通常不允许更新应用程序设置。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
          <source>Usage quotas should be considered to guard against resource attacks by partially trusted applications.</source>
          <target state="translated">使用配额应被视为抵御资源攻击由部分受信任的应用程序。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>