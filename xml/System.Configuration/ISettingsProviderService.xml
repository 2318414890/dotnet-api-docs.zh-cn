<Type Name="ISettingsProviderService" FullName="System.Configuration.ISettingsProviderService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="93d2229023484bedf1ffd3774b75b5f19ea36101" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30376501" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISettingsProviderService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISettingsProviderService" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ISettingsProviderService" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISettingsProviderService" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISettingsProviderService" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d1562-101">提供用于定义备用应用程序设置提供程序的接口。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d1562-101">Provides an interface for defining an alternate application settings provider.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1562-102"><xref:System.Configuration.IPersistComponentSettings>接口允许控件和在应用程序以保留其应用程序设置中的方式很大程度上是透明的应用程序中托管的组件。</span><span class="sxs-lookup"><span data-stu-id="d1562-102">The <xref:System.Configuration.IPersistComponentSettings> interface enables controls and components hosted in an application to persist their application settings in a manner largely transparent to the application.</span></span> <span data-ttu-id="d1562-103">但是，在某些情况下，应用程序或环境可能需要重写本机使用由具有其自己选择的一个组件的设置提供程序。</span><span class="sxs-lookup"><span data-stu-id="d1562-103">However, in some cases, the application or environment may need to override the settings provider natively used by a component with one of its own choosing.</span></span> <span data-ttu-id="d1562-104"><xref:System.Configuration.ISettingsProviderService>接口允许创建轻量通信的服务的此类的替代设置提供程序，通常通过拥有提供<xref:System.ComponentModel.Container>。</span><span class="sxs-lookup"><span data-stu-id="d1562-104">The <xref:System.Configuration.ISettingsProviderService> interface enables the creation of a lightweight service that communicates such an alternate settings provider, typically offered through the owning <xref:System.ComponentModel.Container>.</span></span>  
  
 <span data-ttu-id="d1562-105"><xref:System.Configuration.ISettingsProviderService> 通常使用设计时工具和调试器的应用程序设置提供特殊支持。</span><span class="sxs-lookup"><span data-stu-id="d1562-105"><xref:System.Configuration.ISettingsProviderService> is commonly used by design-time tools and debuggers that provide special support for application settings.</span></span> <span data-ttu-id="d1562-106">若要无缝，使这种排列函数<xref:System.Configuration.ApplicationSettingsBase>类包含采用对所属的组件的引用构造函数。</span><span class="sxs-lookup"><span data-stu-id="d1562-106">To make such an arrangement function seamlessly, the <xref:System.Configuration.ApplicationSettingsBase> class contains constructors that take a reference to the owning component.</span></span> <span data-ttu-id="d1562-107">兼容的设置提供程序中自动查询这些构造函数。</span><span class="sxs-lookup"><span data-stu-id="d1562-107">These constructors automatically query for compatible settings providers.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.SettingsProvider" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <altmember cref="T:System.Configuration.IPersistComponentSettings" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <altmember cref="M:System.IServiceProvider.GetService(System.Type)" />
  </Docs>
  <Members>
    <Member MemberName="GetSettingsProvider">
      <MemberSignature Language="C#" Value="public System.Configuration.SettingsProvider GetSettingsProvider (System.Configuration.SettingsProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsProvider GetSettingsProvider(class System.Configuration.SettingsProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSettingsProvider (property As SettingsProperty) As SettingsProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Configuration::SettingsProvider ^ GetSettingsProvider(System::Configuration::SettingsProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="d1562-108">需要序列化的 <see cref="T:System.Configuration.SettingsProperty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1562-108">The <see cref="T:System.Configuration.SettingsProperty" /> that requires serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d1562-109">返回与指定设置属性兼容的设置提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1562-109">Returns the settings provider compatible with the specified settings property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d1562-110">如果找到，则为能保存指定设置属性的 <see cref="T:System.Configuration.SettingsProvider" />；否则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1562-110">If found, the <see cref="T:System.Configuration.SettingsProvider" /> that can persist the specified settings property; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1562-111"><xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A>方法可以使<xref:System.Configuration.ISettingsProviderService>提供其序列化服务添加到任何已就位的组件。</span><span class="sxs-lookup"><span data-stu-id="d1562-111">The <xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A> method enables an <xref:System.Configuration.ISettingsProviderService> to offer its serialization services to any sited component.</span></span> <span data-ttu-id="d1562-112">此方法可确定关联的设置提供程序可以保留指定的应用程序设置属性类型。</span><span class="sxs-lookup"><span data-stu-id="d1562-112">This method determines if the associated settings provider can persist the specified application settings property type.</span></span> <span data-ttu-id="d1562-113">如果可以此方法将返回与该设置提供程序; 的引用否则它将返回`null`。</span><span class="sxs-lookup"><span data-stu-id="d1562-113">If it can, this method returns a reference to that settings provider; otherwise it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.SettingsProvider" />
      </Docs>
    </Member>
  </Members>
</Type>