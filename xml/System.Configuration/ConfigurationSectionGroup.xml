<Type Name="ConfigurationSectionGroup" FullName="System.Configuration.ConfigurationSectionGroup">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2385eea9e33058d598086ca21f70fbc71150697e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36697254" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ConfigurationSectionGroup" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConfigurationSectionGroup extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationSectionGroup" />
  <TypeSignature Language="VB.NET" Value="Public Class ConfigurationSectionGroup" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationSectionGroup" />
  <TypeSignature Language="F#" Value="type ConfigurationSectionGroup = class" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a group of related sections within a configuration file.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 （如 Web.config 文件中） 的配置文件中设置组织成部分。 由于相关的某些部分，它通常是很方便的做法它们节组中。 <xref:System.Configuration.ConfigurationSectionGroup>类表示`sectionGroup`时，将使用组的各个部分中定义的 XML 元素`configSections`配置文件元素。 部分组可以嵌套 （节组可以包含其他节组以及部分）。 下面的示例演示`configSections`定义三个嵌套的节组元素：  
  
```  
<configSections>  
  <sectionGroup name="system.web.extensions"...>  
    <sectionGroup name="scripting" ...>  
      <section name="scriptResourceHandler".../>  
      <sectionGroup name="webServices"...>  
        <section name="jsonSerialization" .../>  
        <section name="profileService" ... />        <section name="authenticationService" .../>  
        <section name="roleService" .../>  
      </sectionGroup>  
    </sectionGroup>  
  </sectionGroup>  
</configSections>  
```  
  
 配置系统加载到的配置文件中的设置<xref:System.Configuration.ConfigurationSectionGroup>对象。 你可以使用<xref:System.Configuration.ConfigurationSectionGroup.Sections%2A>和<xref:System.Configuration.ConfigurationSectionGroup.SectionGroups%2A>属性来访问的部分和节组中包含<xref:System.Configuration.ConfigurationSectionGroup>对象。  
  
 有关如何从配置文件访问信息的详细信息，请参阅<xref:System.Configuration.ConfigurationManager>类。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Configuration.ConfigurationSectionGroup>类检索配置设置。 该示例是一个控制台应用程序读取配置设置和有关每个配置节组和中它的部分向控制台写入信息。  
  
 `Main`方法将加载到的配置设置<xref:System.Configuration.Configuration>对象，检索<xref:System.Configuration.Configuration.SectionGroups%2A>集合从<xref:System.Configuration.Configuration>对象，然后调用`ShowSectionGroupCollectionInfo`方法以显示的部分属性值。  
  
 `ShowSectionGroupCollectionInfo`方法循环访问的节组和调用`ShowSectionGroupInfo`为每个方法。  
  
 `ShowSectionGroupInfo`方法显示的名称的节组、 某些属性值和它所包含的部分的名称。 如果该部分组包含节组，此方法调用`ShowSectionGroupCollectionInfo`以递归方式来显示这些节组。  
  
 `indentLevel`字段用于将空间添加到左侧显示要显示的行的逻辑分组。 所有行都仅限于 79 个字符的文本，以避免换行，这将导致更难以区分的逻辑分组。  
  
 [!code-csharp[System.Configuration.ConfigurationSectionGroup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup/CS/ConfigurationSectionGroup.cs#1)]
 [!code-vb[System.Configuration.ConfigurationSectionGroup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup/VB/ConfigurationSectionGroup.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationSectionGroup" />
    <altmember cref="T:System.Configuration.ConfigurationSectionCollection" />
    <altmember cref="T:System.Configuration.ConfigurationSection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfigurationSectionGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSectionGroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConfigurationSectionGroup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ForceDeclaration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Forces the declaration for this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ForceDeclaration">
      <MemberSignature Language="C#" Value="public void ForceDeclaration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForceDeclaration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForceDeclaration ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForceDeclaration();" />
      <MemberSignature Language="F#" Value="member this.ForceDeclaration : unit -&gt; unit" Usage="configurationSectionGroup.ForceDeclaration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Forces the declaration for this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ConfigurationSectionGroup.ForceDeclaration%2A>方法可以强制<xref:System.Configuration.ConfigurationSectionGroup>写入配置文件，即使它它们并不需要，因为它已在父文件中声明的对象。  
  
   
  
## Examples  
 下面的代码示例说明如何使用 <xref:System.Configuration.ConfigurationSectionGroup.ForceDeclaration%2A> 方法。  
  
 [!code-csharp[System.Configuration.ConfigurationSectionGroup#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup/CS/ConfigurationSectionGroup.cs#12)]
 [!code-vb[System.Configuration.ConfigurationSectionGroup#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup/VB/ConfigurationSectionGroup.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationSectionGroup" />
        <altmember cref="T:System.Configuration.ConfigurationSectionCollection" />
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <Member MemberName="ForceDeclaration">
      <MemberSignature Language="C#" Value="public void ForceDeclaration (bool force);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForceDeclaration(bool force) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForceDeclaration (force As Boolean)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForceDeclaration(bool force);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void ForceDeclaration (bool require);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForceDeclaration(bool require) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration(System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForceDeclaration (require As Boolean)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForceDeclaration(bool require);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.ForceDeclaration : bool -&gt; unit" Usage="configurationSectionGroup.ForceDeclaration require" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="force" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="require" Type="System.Boolean" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="force">To be added.</param>
        <param name="require">To be added.</param>
        <summary>Forces the declaration for this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ConfigurationSectionGroup.ForceDeclaration%2A>方法强制将此<xref:System.Configuration.ConfigurationSectionGroup>声明，以写入到文件中，如果`force`是`true`。 如果`force`是`false`，可能会忽略此操作，如果<xref:System.Configuration.ConfigurationSectionGroup>对象必须由系统。  
  
 <xref:System.Configuration.ConfigurationSectionGroup.ForceDeclaration%2A>方法可以强制<xref:System.Configuration.ConfigurationSectionGroup>写入配置文件，即使它它们并不需要，因为它已在父文件中声明的对象。 此外，它可以删除组从配置文件如果不需要组。  
  
 你可能想要使用<xref:System.Configuration.ConfigurationSectionGroup.ForceDeclaration%2A>方法，以使配置文件从一台计算机更移植到另一个字符串，而无需担心是否组声明已存在。  
  
   
  
## Examples  
 下面的代码示例说明如何使用 <xref:System.Configuration.ConfigurationSectionGroup.ForceDeclaration%2A> 方法。  
  
 [!code-csharp[System.Configuration.ConfigurationSectionGroup#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup/CS/ConfigurationSectionGroup.cs#13)]
 [!code-vb[System.Configuration.ConfigurationSectionGroup#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup/VB/ConfigurationSectionGroup.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object is the root section group.  \- or -  The <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object has a location.</exception>
        <altmember cref="T:System.Configuration.ConfigurationSectionGroup" />
        <altmember cref="T:System.Configuration.ConfigurationSectionCollection" />
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <Member MemberName="IsDeclarationRequired">
      <MemberSignature Language="C#" Value="public bool IsDeclarationRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeclarationRequired" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDeclarationRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDeclarationRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDeclarationRequired : bool" Usage="System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object declaration is required.</summary>
        <value>
          <see langword="true" /> 如果此<see cref="T:System.Configuration.ConfigurationSectionGroup" />声明是必选的; 否则为<see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例确定是否的此实例<xref:System.Configuration.ConfigurationSectionGroup>声明是必需的。  
  
 [!code-csharp[System.Configuration.ConfigurationSectionGroup#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup/CS/ConfigurationSectionGroup.cs#5)]
 [!code-vb[System.Configuration.ConfigurationSectionGroup#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup/VB/ConfigurationSectionGroup.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationSectionGroup" />
        <altmember cref="T:System.Configuration.ConfigurationSectionCollection" />
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <Member MemberName="IsDeclared">
      <MemberSignature Language="C#" Value="public bool IsDeclared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeclared" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationSectionGroup.IsDeclared" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDeclared As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDeclared { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDeclared : bool" Usage="System.Configuration.ConfigurationSectionGroup.IsDeclared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object is declared.</summary>
        <value>
          <see langword="true" /> 如果此<see cref="T:System.Configuration.ConfigurationSectionGroup" />声明; 否则为<see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果在配置文件中，声明节组<xref:System.Configuration.ConfigurationSectionGroup.IsDeclared%2A>属性返回`true`。  
  
 <xref:System.Configuration.ConfigurationSectionGroup.IsDeclared%2A>属性返回`false`如果本节继承自 Machine.config 或父配置文件。  
  
   
  
## Examples  
 下面的代码示例确定是否的此实例<xref:System.Configuration.ConfigurationSectionGroup>声明。 这是更大的示例的概览中提供的一部分<xref:System.Configuration.ConfigurationSectionGroup>类。  
  
 [!code-csharp[System.Configuration.ConfigurationSectionGroup#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup/CS/ConfigurationSectionGroup.cs#6)]
 [!code-vb[System.Configuration.ConfigurationSectionGroup#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup/VB/ConfigurationSectionGroup.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationSectionGroup" />
        <altmember cref="T:System.Configuration.ConfigurationSectionCollection" />
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationSectionGroup.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Configuration.ConfigurationSectionGroup.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name property of this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</summary>
        <value>此名称属性<see cref="T:System.Configuration.ConfigurationSectionGroup" />对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ConfigurationSectionGroup.Name%2A>属性值是不包含父组一节的节组的名称。  
  
   
  
## Examples  
 下面的代码示例演示如何显示的此实例的名称<xref:System.Configuration.ConfigurationSectionGroup>类。 这是更大的示例的概览中提供的一部分<xref:System.Configuration.ConfigurationSectionGroup>类。  
  
 [!code-csharp[System.Configuration.ConfigurationSectionGroup#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup/CS/ConfigurationSectionGroup.cs#3)]
 [!code-vb[System.Configuration.ConfigurationSectionGroup#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup/VB/ConfigurationSectionGroup.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationSectionGroup" />
        <altmember cref="T:System.Configuration.ConfigurationSectionCollection" />
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <Member MemberName="SectionGroupName">
      <MemberSignature Language="C#" Value="public string SectionGroupName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationSectionGroup.SectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SectionGroupName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SectionGroupName : string" Usage="System.Configuration.ConfigurationSectionGroup.SectionGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the section group name associated with this <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
        <value>此节组名称<see cref="T:System.Configuration.ConfigurationSectionGroup" />对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ConfigurationSectionGroup.SectionGroupName%2A>属性值是包括父组一节的节组的完整路径名称...  
  
   
  
## Examples  
 下面的代码示例演示如何显示的此实例的名称<xref:System.Configuration.ConfigurationSectionGroup>类。 这是更大的示例的概览中提供的一部分<xref:System.Configuration.ConfigurationSectionGroup>类。  
  
 [!code-csharp[System.Configuration.ConfigurationSectionGroup#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup/CS/ConfigurationSectionGroup.cs#11)]
 [!code-vb[System.Configuration.ConfigurationSectionGroup#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup/VB/ConfigurationSectionGroup.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationSectionGroup" />
        <altmember cref="T:System.Configuration.ConfigurationSectionCollection" />
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <Member MemberName="SectionGroups">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationSectionGroupCollection SectionGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationSectionGroupCollection SectionGroups" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationSectionGroup.SectionGroups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SectionGroups As ConfigurationSectionGroupCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ConfigurationSectionGroupCollection ^ SectionGroups { System::Configuration::ConfigurationSectionGroupCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SectionGroups : System.Configuration.ConfigurationSectionGroupCollection" Usage="System.Configuration.ConfigurationSectionGroup.SectionGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationSectionGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> object that contains all the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> objects that are children of this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</summary>
        <value>A<see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />对象，其中包含所有<see cref="T:System.Configuration.ConfigurationSectionGroup" />对象的子级的这<see cref="T:System.Configuration.ConfigurationSectionGroup" />对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何访问 <xref:System.Configuration.ConfigurationSectionGroup.SectionGroups%2A> 属性。 这是更大的示例的概览中提供的一部分<xref:System.Configuration.ConfigurationSectionGroup>类。  
  
 [!code-csharp[System.Configuration.ConfigurationSectionGroup#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup/CS/ConfigurationSectionGroup.cs#8)]
 [!code-vb[System.Configuration.ConfigurationSectionGroup#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup/VB/ConfigurationSectionGroup.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationSectionGroup" />
        <altmember cref="T:System.Configuration.ConfigurationSectionCollection" />
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <Member MemberName="Sections">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationSectionCollection Sections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationSectionCollection Sections" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationSectionGroup.Sections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sections As ConfigurationSectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ConfigurationSectionCollection ^ Sections { System::Configuration::ConfigurationSectionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Sections : System.Configuration.ConfigurationSectionCollection" Usage="System.Configuration.ConfigurationSectionGroup.Sections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationSectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object that contains all of <see cref="T:System.Configuration.ConfigurationSection" /> objects within this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</summary>
        <value>A<see cref="T:System.Configuration.ConfigurationSectionCollection" />对象，其中包含所有<see cref="T:System.Configuration.ConfigurationSection" />对象在此<see cref="T:System.Configuration.ConfigurationSectionGroup" />对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何访问 <xref:System.Configuration.ConfigurationSectionGroup.Sections%2A> 属性。 这是更大的示例的概览中提供的一部分<xref:System.Configuration.ConfigurationSectionGroup>类。  
  
 [!code-csharp[System.Configuration.ConfigurationSectionGroup#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup/CS/ConfigurationSectionGroup.cs#7)]
 [!code-vb[System.Configuration.ConfigurationSectionGroup#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup/VB/ConfigurationSectionGroup.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationSectionGroup" />
        <altmember cref="T:System.Configuration.ConfigurationSectionCollection" />
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSectionGroupInTargetVersion">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShouldSerializeSectionGroupInTargetVersion (System.Runtime.Versioning.FrameworkName targetFramework);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ShouldSerializeSectionGroupInTargetVersion(class System.Runtime.Versioning.FrameworkName targetFramework) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(System.Runtime.Versioning.FrameworkName)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ShouldSerializeSectionGroupInTargetVersion (targetFramework As FrameworkName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ShouldSerializeSectionGroupInTargetVersion(System::Runtime::Versioning::FrameworkName ^ targetFramework);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeSectionGroupInTargetVersion : System.Runtime.Versioning.FrameworkName -&gt; bool&#xA;override this.ShouldSerializeSectionGroupInTargetVersion : System.Runtime.Versioning.FrameworkName -&gt; bool" Usage="configurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion targetFramework" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetFramework" Type="System.Runtime.Versioning.FrameworkName" />
      </Parameters>
      <Docs>
        <param name="targetFramework">The target version of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</param>
        <summary>Indicates whether the current <see cref="T:System.Configuration.ConfigurationSectionGroup" /> instance should be serialized when the configuration object hierarchy is serialized for the specified target version of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</summary>
        <returns>
          <see langword="true" /> if the current section group should be serialized; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 为 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 及更高版本创建的每个配置节组必须显式重写此方法并返回 `true`，但仅在此节组对于 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 的指定版本有效时如此。 不必更改已为 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 的早期版本创建的现有配置节组。  
  
 基类型包含始终返回此方法的默认实现`true`。 换而言之，如果配置节组实施者不重写此方法，默认情况下配置节组将为进行序列化所有 framework 版本。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationSectionGroup.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : string with get, set" Usage="System.Configuration.ConfigurationSectionGroup.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the type for this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</summary>
        <value>此 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象的类型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果此实例的<xref:System.Configuration.ConfigurationSectionGroup>类是一个派生的类型，<xref:System.Configuration.ConfigurationSectionGroup.Type%2A>属性将返回扩展的派生类型的名称<xref:System.Configuration.ConfigurationSectionGroup>类。  
  
   
  
## Examples  
 下面的代码示例说明如何使用 <xref:System.Configuration.ConfigurationSectionGroup.Type%2A> 属性。 这是更大的示例的概览中提供的一部分<xref:System.Configuration.ConfigurationSectionGroup>类。  
  
 [!code-csharp[System.Configuration.ConfigurationSectionGroup#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup/CS/ConfigurationSectionGroup.cs#4)]
 [!code-vb[System.Configuration.ConfigurationSectionGroup#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup/VB/ConfigurationSectionGroup.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object is the root section group.  \- or -  The <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object has a location.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">The section or group is already defined at another level.</exception>
        <altmember cref="T:System.Configuration.ConfigurationSectionGroup" />
        <altmember cref="T:System.Configuration.ConfigurationSectionCollection" />
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
  </Members>
</Type>