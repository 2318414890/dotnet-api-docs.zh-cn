<Type Name="IChannelInfo" FullName="System.Runtime.Remoting.IChannelInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="008dcafa6a01e8f98a737c8a3f2e8db4c8c516e7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30485741" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IChannelInfo" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannelInfo" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.IChannelInfo" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChannelInfo" />
  <TypeSignature Language="C++ CLI" Value="public interface class IChannelInfo" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供与 <see cref="T:System.Runtime.Remoting.ObjRef" /> 一起传送的自定义信道信息。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此接口由实现<xref:System.Runtime.Remoting.ObjRef.ChannelInfo%2A?displayProperty=nameWithType>属性。 它提供了传输由能够接收调用过程中的通道或该对象所在的应用程序域提供的特定信息的访问权限。 生成自定义时，可能还会使用此接口<xref:System.Runtime.Remoting.ObjRef>类。  
  
 当封送现有对象实例来生成<xref:System.Runtime.Remoting.ObjRef>、<xref:System.Runtime.Remoting.IChannelInfo.ChannelData%2A>复制从通道 (请参阅<xref:System.Runtime.Remoting.Channels.IChannelReceiver>) 为每个注册通道并存储在<xref:System.Runtime.Remoting.ObjRef>。 当<xref:System.Runtime.Remoting.ObjRef>在其目标是取消封送<xref:System.Runtime.Remoting.IChannelInfo.ChannelData%2A>通过提供<xref:System.Runtime.Remoting.IChannelInfo>可以检查并在该进程或应用程序域中的相应通道用来创建管理的传输消息接收器接口代理和服务器对象之间的通信。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Remoting.ObjRef" />
    <altmember cref="T:System.AppDomain" />
  </Docs>
  <Members>
    <Member MemberName="ChannelData">
      <MemberSignature Language="C#" Value="public object[] ChannelData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] ChannelData" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.IChannelInfo.ChannelData" />
      <MemberSignature Language="VB.NET" Value="Public Property ChannelData As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Object ^&gt; ^ ChannelData { cli::array &lt;System::Object ^&gt; ^ get(); void set(cli::array &lt;System::Object ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取和设置每个信道的信道数据。</summary>
        <value>每个信道的信道数据。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">直接调用方通过引用接口进行调用，且没有基础结构权限。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">用于操作基础结构代码。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>