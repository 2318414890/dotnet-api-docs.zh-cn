<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WorkflowServiceHostFactory.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b4cd85ec17e400d6a52c67d79ab9a3ebb6227eb3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b4cd85ec17e400d6a52c67d79ab9a3ebb6227eb3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Activation.WorkflowServiceHostFactory">
          <source>Factory that provides instances of <ph id="ph1">&lt;see cref="T:System.ServiceModel.WorkflowServiceHost" /&gt;</ph> in managed hosting environments where the host instance is created dynamically in response to incoming messages.</source>
          <target state="translated">在托管宿主环境中提供 <ph id="ph1">&lt;see cref="T:System.ServiceModel.WorkflowServiceHost" /&gt;</ph> 的实例的工厂，在此环境中为响应传入消息而动态创建宿主实例。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Activation.WorkflowServiceHostFactory">
          <source>The managed hosting environments that support dynamic activation are Internet Information Services (IIS) and Windows Process Activation Service (WAS).</source>
          <target state="translated">支持动态激活的托管宿主环境包括 Internet 信息服务 (IIS) 和 Windows 进程激活服务 (WAS)。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Activation.WorkflowServiceHostFactory">
          <source>If you have implemented a custom derivative of <ph id="ph1">&lt;xref:System.ServiceModel.WorkflowServiceHost&gt;</ph>, consider also implementing a factory that derives from the <ph id="ph2">&lt;xref:System.ServiceModel.Activation.WorkflowServiceHostFactory&gt;</ph> class.</source>
          <target state="translated">如果已实现 <ph id="ph1">&lt;xref:System.ServiceModel.WorkflowServiceHost&gt;</ph> 的自定义派生，还应考虑实现派生自 <ph id="ph2">&lt;xref:System.ServiceModel.Activation.WorkflowServiceHostFactory&gt;</ph> 类的工厂。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Activation.WorkflowServiceHostFactory">
          <source>If you have implemented a custom derivative of <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> instead, then consider also implementing a factory that derives your factory from <ph id="ph2">&lt;xref:System.ServiceModel.Activation.ServiceHostFactoryBase&gt;</ph> directly.</source>
          <target state="translated">如果已实现 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> 的自定义派生，还应考虑实现可直接从 <ph id="ph2">&lt;xref:System.ServiceModel.Activation.ServiceHostFactoryBase&gt;</ph> 派生工厂的工厂。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Activation.WorkflowServiceHostFactory" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Activation.WorkflowServiceHostFactory" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])">
          <source>The file name of the workflow markup file that defines the workflow service or the type name of the workflow service type.</source>
          <target state="translated">定义工作流服务的工作流标记文件的文件名或工作流服务类型的类型名。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the base addresses for the hosted service.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 类型的数组，包含承载服务的基址。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.ServiceModel.WorkflowServiceHost" /&gt;</ph> from a string that contains either the file name of the workflow markup file or the type name of the workflow service type and the base address of the service specified.</source>
          <target state="translated">从字符串创建 <ph id="ph1">&lt;see cref="T:System.ServiceModel.WorkflowServiceHost" /&gt;</ph>，该字符串包含工作流标记文件的文件名或工作流服务类型的类型名和指定的服务基址。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph> object associated with the workflow service.</source>
          <target state="translated">与工作流服务关联的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])">
          <source>The default implementation returns a <ph id="ph1">&lt;see cref="T:System.ServiceModel.WorkflowServiceHost" /&gt;</ph> object with the specified base addresses.</source>
          <target state="translated">默认实现返回一个具有指定基址的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.WorkflowServiceHost" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])">
          <source>The <ph id="ph1">`constructorString`</ph> argument could be either a fully qualified workflow type name or it could be the relative file path of the workflow definition file declared in the .svc file in which <ph id="ph2">&lt;xref:System.ServiceModel.Activation.ServiceHostFactory&gt;</ph> directives are placed.</source>
          <target state="translated"><ph id="ph1">`constructorString`</ph> 参数可以是一个完全限定的工作流类型名，也可以是在 <ph id="ph2">&lt;xref:System.ServiceModel.Activation.ServiceHostFactory&gt;</ph> 指令所在的 .svc 文件中声明的工作流定义文件的相对文件路径。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])">
          <source>To associate a rule definition with a workflow definition, name the rule definition file the same name as the workflow definition file with a .rules extension and place it in same directory as the workflow definition file.</source>
          <target state="translated">若要将规则定义与工作流定义关联，请将规则定义文件命名为与工作流定义文件相同的名称并且扩展名为 .rules，然后将其放在与工作流定义文件相同的目录中。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])">
          <source>For example, the rules definition file CalculatorServiceWorkflow.rules must be in the same directory as CalculatorServiceWorkflow.xoml.</source>
          <target state="translated">例如，规则定义文件 CalculatorServiceWorkflow.rules 必须与 CalculatorServiceWorkflow.xoml 位于同一目录中。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])">
          <source>The following is an example of a type-based reference to the workflow service CalculatorServiceWorkflow.</source>
          <target state="translated">下面的示例为对工作流服务 CalculatorServiceWorkflow 的基于类型的引用。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])">
          <source>The following is an example of a workflow definition file reference to the workflow service CalculatorServiceWorkflow.</source>
          <target state="translated">下面的示例为引用工作流服务 CalculatorServiceWorkflow 的工作流定义文件。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>