<Type Name="SoapDocumentMethodAttribute" FullName="System.Web.Services.Protocols.SoapDocumentMethodAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fcb6179a87a003b0a48626a364158913b7d46715" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39969438" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SoapDocumentMethodAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SoapDocumentMethodAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SoapDocumentMethodAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapDocumentMethodAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type SoapDocumentMethodAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>对方法应用 <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> 将指定发往该方法以及来自该方法的 SOAP 消息使用 <see langword="Document" /> 格式设置。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 服务描述语言 (WSDL) 定义了可以如何在 SOAP 消息中设置格式的 XML Web 服务方法，它将调用一个操作，两种风格：`RPC`和`Document`。 `Document` 是指根据 XSD 架构的 XML Web 服务方法格式设置。 `Document`样式格式设置是指`Body`元素，作为一系列的一个或多个消息部分遵循`Body`元素。 各个消息部分的由精确<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use%2A>和<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle%2A>属性。 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use%2A>属性确定是否设置参数格式`Encoded`或`Literal`。 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle%2A>确定参数是否封装在单个消息部分以下`Body`元素或每个参数是否是一个单独的消息部分。  
  
 有关更多详细信息，请参阅[ &#91; \<topic://cpconCustomizingSOAPInASPNETWebServicesWebServiceClients >&#93;](http://msdn.microsoft.com/library/1d777288-c0d9-4e6a-b638-f010da031952)  
  
 此特性可以应用于 XML Web 服务方法在服务器上的和在客户端上的代理类的方法。  
  
   
  
## Examples  
 下面的代码示例将消息样式设置为`Document`为`GetUserName`XML Web 服务方法。 此外，具有的 XML 元素`Body`元素的 SOAP 请求和 SOAP 响应设置为`GetUserNameRequest`和`GetUserNameResponse`分别。  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapDocumentServiceAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.SoapRpcServiceAttribute" />
    <altmember cref="T:System.Web.Services.Description.SoapBindingUse" />
    <altmember cref="T:System.Web.Services.Protocols.SoapParameterStyle" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapDocumentMethodAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapDocumentMethodAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapDocumentMethodAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapDocumentMethodAttribute (string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapDocumentMethodAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapDocumentMethodAttribute(System::String ^ action);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.Protocols.SoapDocumentMethodAttribute : string -&gt; System.Web.Services.Protocols.SoapDocumentMethodAttribute" Usage="new System.Web.Services.Protocols.SoapDocumentMethodAttribute action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action">SOAP 请求的 <see langword="SOAPAction" />HTTP 标头字段。 设置 <see cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action" /> 属性。</param>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> 类的新实例，并将 <see cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action" /> 属性设置为 <paramref name="action" /> 参数的值。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 SOAP 请求的 <see langword="SOAPAction" />HTTP 标头字段。</summary>
        <value>SOAP 请求的 <see langword="SOAPAction" />HTTP 标头字段。 默认值是http://tempuri.org/MethodName，其中 MethodName 是 XML Web 服务方法的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常情况下，<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action%2A>属性是一个 URI，该值指示请求的意图。 但是，SOAP 规范的 uri 格式提出任何限制或所有规则的 URI 都是可解析。 存在性和内容<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action%2A>属性可以由 Web 服务器，例如防火墙，以相应地筛选在 HTTP SOAP 请求消息。  
  
 默认情况下，.NET Framework 1.1 版发布<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action%2A>中的属性`soapAction`属性的`soap:operation`为每个元素在 XML Web 服务生成的 WSDL 文档中支持 SOAP 绑定。 有关 SOAP 规范的详细信息，请参阅 W3C 网站 (http://www.w3.org/TR/SOAP)。  
  
   
  
## Examples  
 下面的代码示例设置<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action%2A>属性设置为`http://www.contoso.com/GetUserName`。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Binding">
      <MemberSignature Language="C#" Value="public string Binding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Binding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding" />
      <MemberSignature Language="VB.NET" Value="Public Property Binding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Binding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Binding : string with get, set" Usage="System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 XML Web services 方法正在为其实现操作的绑定。</summary>
        <value>XML Web services 方法正在为其实现操作的绑定。 默认为追加了“Soap”的 XML Web services 名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一个绑定，定义的 Web 服务描述语言 (WSDL)，是类似于一个接口，它定义一组具体的操作。 对于使用 ASP.NET 创建的 XML Web services，每个 XML Web 服务方法是在绑定内的操作。 XML Web 服务方法是 XML Web 服务的默认绑定或绑定中指定的成员<xref:System.Web.Services.WebServiceBindingAttribute>应用于 XML Web 服务。 XML Web 服务可以实现多个绑定时多个<xref:System.Web.Services.WebServiceBindingAttribute>特性应用于 XML Web 服务。  
  
 一次一个或多个<xref:System.Web.Services.WebServiceBindingAttribute>特性应用于 XML Web 服务<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>或<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>可应用于单个 XML Web 服务方法，以指示由特定的 XML Web 服务方法实现的绑定操作。 设置<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding%2A>的属性<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>或<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>以指定的绑定 XML Web 服务方法实现操作。 只有一个<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>或<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>可以应用于 XML Web 服务方法。 因此，XML Web 服务方法只能实现一个绑定的操作。  
  
 有关 WSDL 规范的详细信息，请参阅 W3C 网站 (http://www.w3.org/TR/wsdl)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.WebServiceBindingAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OneWay">
      <MemberSignature Language="C#" Value="public bool OneWay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OneWay" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" />
      <MemberSignature Language="VB.NET" Value="Public Property OneWay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OneWay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OneWay : bool with get, set" Usage="System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 XML Web services 客户端是否等待 Web 服务器完成对 XML Web services 方法的处理。</summary>
        <value>如果 XML Web services 客户端不等待 Web 服务器完全处理 XML Web services 方法，则为 <see langword="true" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当 XML Web 服务方法具有<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A>属性设置为`true`，XML Web 服务客户端不需要等待 Web 服务器完成处理 XML Web 服务方法。 Web 服务器已反序列化时，就立即<xref:System.Web.Services.Protocols.SoapServerMessage>，但在调用之前的 XML Web 服务方法，服务器返回 HTTP 202 状态代码。 HTTP 202 状态代码指示客户端 Web 服务器已开始处理消息。 因此，XML Web 服务客户端接收的 Web 服务器已成功处理该消息不发送任何确认。  
  
 单向方法不能有返回值或任何输出参数。  
  
 如果您使用的具有的.NET Framework 1.0 版 XML Web 服务方法<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>或<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>特性应用于它们与<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A>属性设置为`true`，却可以访问其<xref:System.Web.HttpContext>使用静态<xref:System.Web.HttpContext.Current%2A>属性。 访问<xref:System.Web.HttpContext>，派生类实现中的 XML Web 服务方法<xref:System.Web.Services.WebService>并访问<xref:System.Web.Services.WebService.Context%2A>属性。  
  
   
  
## Examples  
 下面的代码示例是 XML Web 服务方法不需要客户端要等待的时间才能完成的 XML Web 服务方法。 因此，此示例设置了<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A>属性设置为`true`。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapServerMessage" />
      </Docs>
    </Member>
    <Member MemberName="ParameterStyle">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapParameterStyle ParameterStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapParameterStyle ParameterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterStyle As SoapParameterStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapParameterStyle ParameterStyle { System::Web::Services::Protocols::SoapParameterStyle get(); void set(System::Web::Services::Protocols::SoapParameterStyle value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterStyle : System.Web.Services.Protocols.SoapParameterStyle with get, set" Usage="System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapParameterStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置参数是否封装在 SOAP 消息的 XML 部分中 <see langword="Body" /> 元素下的单个 XML 元素中。</summary>
        <value>发往和来自 XML Web services 方法的 SOAP 消息的 <see cref="T:System.Web.Services.Protocols.SoapParameterStyle" />。 默认值为 <see cref="F:System.Web.Services.Protocols.SoapParameterStyle.Wrapped" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例指定发送 SOAP 消息中的参数发往和来自`PlaceOrder`XML Web 服务方法未封装在一个 XML 元素。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapParameterStyle" />
      </Docs>
    </Member>
    <Member MemberName="RequestElementName">
      <MemberSignature Language="C#" Value="public string RequestElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestElementName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestElementName : string with get, set" Usage="System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与 XML Web services 方法的 SOAP 请求相关联的 XML 元素，该元素在服务说明中定义为了一个操作。</summary>
        <value>与 XML Web services 方法的 SOAP 请求相关联的 XML 元素，该元素在服务说明中定义为了一个操作。 默认值是 XML Web services 方法的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestElementName%2A>定义用于包装下的参数的 XML 元素`Body`元素的 soap 请求时<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle%2A>是<xref:System.Web.Services.Protocols.SoapParameterStyle.Wrapped>。 这反映在表示 XML Web 服务的服务说明中方法的 XML Web 服务的 SOAP 请求的 XSD 架构中。  
  
   
  
## Examples  
 下面的代码示例设置与 XML Web 服务方法的 SOAP 请求中相关联的 XML 元素名称`MyCustomElement`。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestNamespace">
      <MemberSignature Language="C#" Value="public string RequestNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestNamespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestNamespace : string with get, set" Usage="System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与 XML Web services 方法的 SOAP 请求关联的命名空间。</summary>
        <value>与 XML Web services 方法的 SOAP 请求关联的 XML 命名空间。 默认值为 http://tempuri.org/。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace%2A> 用于 XSD 架构中其服务说明中的 XML Web 服务方法。  
  
   
  
## Examples  
 下面的代码示例设置<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace%2A>属性设置为`http://www.contoso.com`。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseElementName">
      <MemberSignature Language="C#" Value="public string ResponseElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResponseElementName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResponseElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseElementName : string with get, set" Usage="System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与 XML Web services 方法的 SOAP 响应关联的 XML 元素。</summary>
        <value>与 XML Web services 方法的 SOAP 请求关联的 XML 元素。 默认值为 WebServiceNameResult，其中 WebServiceName 是 XML Web services 方法的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseElementName%2A>定义用于包装下的参数的 XML 元素`Body`元素的 SOAP 响应时<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle%2A>是<xref:System.Web.Services.Protocols.SoapParameterStyle.Wrapped>。 这是表示对 XML Web 服务的服务说明中的 XML Web 服务方法的 SOAP 响应的 XSD 架构中反映出来。  
  
   
  
## Examples  
 下面的代码示例设置与 XML Web 服务方法的 SOAP 响应中相关联的 XML 元素名称`MyCustomResponseElement`。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseNamespace">
      <MemberSignature Language="C#" Value="public string ResponseNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResponseNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResponseNamespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseNamespace : string with get, set" Usage="System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与 XML Web services 方法的 SOAP 响应关联的 XML 命名空间。</summary>
        <value>与 XML Web services 方法的 SOAP 响应关联的 XML 命名空间。 默认值为 http://tempuri.org/。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace%2A>属性用于在 XSD 架构中其服务说明中的 XML Web 服务方法。  
  
   
  
## Examples  
 下面的代码示例设置<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace%2A>属性设置为`http://www.contoso.com`。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Use">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.SoapBindingUse Use { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Description.SoapBindingUse Use" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use" />
      <MemberSignature Language="VB.NET" Value="Public Property Use As SoapBindingUse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::SoapBindingUse Use { System::Web::Services::Description::SoapBindingUse get(); void set(System::Web::Services::Description::SoapBindingUse value); };" />
      <MemberSignature Language="F#" Value="member this.Use : System.Web.Services.Description.SoapBindingUse with get, set" Usage="System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.SoapBindingUse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 SOAP 消息的 XML 部分中的 XML Web services 方法的参数格式设置。</summary>
        <value>XML Web services 方法的 <see cref="T:System.Web.Services.Description.SoapBindingUse" />。 默认值为 <see cref="F:System.Web.Services.Description.SoapBindingUse.Literal" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 服务描述语言 (WSDL) 定义的格式设置参数的两个方法：<xref:System.Web.Services.Description.SoapBindingUse.Encoded>和<xref:System.Web.Services.Description.SoapBindingUse.Literal>。 <xref:System.Web.Services.Description.SoapBindingUse.Encoded> SOAP 规范第 5 节中所述格式设置参数使用 SOAP 编码，是指。 <xref:System.Web.Services.Description.SoapBindingUse.Literal> 是指设置预定义的 XSD 架构使用每个参数的参数的格式。  
  
 有关更多详细信息，请参阅[ &#91; \<topic://cpconCustomizingSOAPInASPNETWebServicesWebServiceClients >&#93;](http://msdn.microsoft.com/library/1d777288-c0d9-4e6a-b638-f010da031952)。  
  
   
  
## Examples  
 下面的代码示例指定`Document`  /  `Encoded` SOAP 消息必须发送到`PlaceOrder`XML Web 服务方法。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Description.SoapBindingUse" />
      </Docs>
    </Member>
  </Members>
</Type>