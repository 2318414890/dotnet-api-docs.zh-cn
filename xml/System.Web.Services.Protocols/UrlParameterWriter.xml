<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UrlParameterWriter.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fe8597e0ce7601a05314db3b4795b0f096cd0c7b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fe8597e0ce7601a05314db3b4795b0f096cd0c7b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Services.Protocols.UrlParameterWriter">
          <source>Writes out-going request parameters for Web services implemented using HTTP with name-value pairs encoded in the URL's query string rather than as a SOAP message.</source>
          <target state="translated">编写使用 HTTP 实现的 Web 服务的传出请求参数，参数的名称/值对编码到 URL 请求字符串中，而不是编码为 SOAP 消息。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.UrlParameterWriter">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.UrlParameterWriter&gt;</ph> and other classes in the <ph id="ph2">&lt;xref:System.Web.Services.Protocols&gt;</ph> namespace support the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.UrlParameterWriter&gt;</ph> 和中的其他类<ph id="ph2">&lt;xref:System.Web.Services.Protocols&gt;</ph>命名空间支持通过 HTTP GET 和 HTTP POST 操作的 Web 服务的.NET Framework 的实现。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.UrlParameterWriter">
          <source>Web service writers and readers serialize and deserialize, respectively, between the parameters or return objects of Web methods and the HTTP request or response streams.</source>
          <target state="translated">Web 服务编写器和读卡器序列化和反序列化，分别的参数或返回对象的 Web 方法的 HTTP 请求或响应流之间。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.UrlParameterWriter">
          <source>Web service writers and readers use HTTP for transport but don't exchange messages using the SOAP standard.</source>
          <target state="translated">Web 服务编写器和读卡器使用 HTTP 传输，但不交换使用 SOAP 标准的消息。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.UrlParameterWriter">
          <source>The <ph id="ph1">&lt;xref:System.Web.Services.Protocols.UrlParameterWriter&gt;</ph> class provides a client-side method, <ph id="ph2">&lt;xref:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl%2A&gt;</ph>, to encode parameters name/value pairs into an HTTP request URL's query string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.UrlParameterWriter&gt;</ph>类提供一个客户端方法， <ph id="ph2">&lt;xref:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl%2A&gt;</ph>，若要编码为 HTTP 请求 URL 查询字符串参数名称/值对。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.UrlParameterWriter">
          <source>For example, in the URL <ph id="ph1">`http://contoso.com?a=1&amp;b=2`</ph>, <ph id="ph2">`a`</ph> and <ph id="ph3">`b`</ph> are parameter names, and <ph id="ph4">`1`</ph> and <ph id="ph5">`2`</ph> are their values.</source>
          <target state="translated">例如，在 URL 中<ph id="ph1">`http://contoso.com?a=1&amp;b=2`</ph>，<ph id="ph2">`a`</ph>和<ph id="ph3">`b`</ph>是参数名称和<ph id="ph4">`1`</ph>和<ph id="ph5">`2`</ph>是它们的值。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.UrlParameterWriter">
          <source>You typically will not need to use <ph id="ph1">&lt;xref:System.Web.Services.Protocols.UrlParameterWriter&gt;</ph> directly.</source>
          <target state="translated">你通常不需要使用<ph id="ph1">&lt;xref:System.Web.Services.Protocols.UrlParameterWriter&gt;</ph>直接。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.UrlParameterWriter">
          <source>Instead, when the Wsdl.exe tool generates client proxy code according to the HTTP-GET implementation, it applies the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute&gt;</ph> to each Web method and sets the attribute's <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A&gt;</ph> property to <ph id="ph3">&lt;xref:System.Web.Services.Protocols.UrlParameterWriter&gt;</ph>.</source>
          <target state="translated">相反，当 Wsdl.exe 工具生成的 HTTP GET 实现根据客户端代理代码，它适用<ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute&gt;</ph>指向每个 Web 方法和设置特性的<ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Web.Services.Protocols.UrlParameterWriter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.UrlParameterWriter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.UrlParameterWriter" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.UrlParameterWriter" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl(System.String,System.Object[])">
          <source>The HTTP request's original URL.</source>
          <target state="translated">HTTP 请求的原始 URL。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl(System.String,System.Object[])">
          <source>The Web method parameter values to be added to the URL, if necessary.</source>
          <target state="translated">要添加到 URL 中的 Web 方法参数值（如果需要）。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl(System.String,System.Object[])">
          <source>Writes Web method parameter values to the query string of an HTTP request.</source>
          <target state="translated">将 Web 方法的参数值写入 HTTP 请求的查询字符串。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl(System.String,System.Object[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object that contains the query string and the parameter values.</source>
          <target state="translated">包含查询字符串和参数值的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl(System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl%2A&gt;</ph> method encodes parameters name/value pairs into an HTTP request URL's query string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl%2A&gt;</ph>方法将参数名称/值对编码为 HTTP 请求 URL 查询字符串。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl(System.String,System.Object[])">
          <source>For example, in the URL <ph id="ph1">`http://contoso.com?a=1&amp;b=2`</ph>, <ph id="ph2">`a`</ph> and <ph id="ph3">`b`</ph> are parameter names, and <ph id="ph4">`1`</ph> and <ph id="ph5">`2`</ph> are their values.</source>
          <target state="translated">例如，在 URL 中<ph id="ph1">`http://contoso.com?a=1&amp;b=2`</ph>，<ph id="ph2">`a`</ph>和<ph id="ph3">`b`</ph>是参数名称和<ph id="ph4">`1`</ph>和<ph id="ph5">`2`</ph>是它们的值。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl(System.String,System.Object[])">
          <source>A new URL string, with any encoded parameters, is returned.</source>
          <target state="translated">返回一个新的 URL 字符串，包含任何编码参数。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>