<Type Name="SoapExtensionAttribute" FullName="System.Web.Services.Protocols.SoapExtensionAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ef1e719399b061cd63feccf229a8e26c44cb3910" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36395337" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SoapExtensionAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapExtensionAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapExtensionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapExtensionAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapExtensionAttribute abstract : Attribute" />
  <TypeSignature Language="F#" Value="type SoapExtensionAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>当在派生类中重写时，指定 SOAP 扩展应该与 XML Web services 方法一起运行。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 ASP.NET 创建的 XML Web 服务方法可以配置为通过将属性应用到 XML Web 服务方法使用 SOAP 扩展运行。 在自定义扩展属性添加到 XML Web 服务方法或客户端代理类的方法，ASP.NET 将在适当时间调用关联的扩展。 扩展特性是派生自的自定义特性类<xref:System.Web.Services.Protocols.SoapExtensionAttribute>。 派生的属性必须重写<xref:System.Web.Services.Protocols.SoapExtensionAttribute.ExtensionType%2A>属性以返回与属性关联的扩展的类型。  
  
   
  
## Examples  
 以下`TraceExtensionAttribute`类派生自<xref:System.Web.Services.Protocols.SoapExtensionAttribute>以支持将特性应用于 XML Web 服务方法或 XML Web 服务客户端代理类中的方法。 当应用于，`TraceExtension`方法使用的 SOAP 扩展运行。  
  
 [!code-cpp[Classic SoapExtensionAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtensionAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtensionAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtensionAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtensionAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtensionAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapExtension" />
    <altmember cref="T:System.Web.Services.Protocols.SoapMessage" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoapExtensionAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtensionAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoapExtensionAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtensionType">
      <MemberSignature Language="C#" Value="public abstract Type ExtensionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ExtensionType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapExtensionAttribute.ExtensionType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ExtensionType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ExtensionType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExtensionType : Type" Usage="System.Web.Services.Protocols.SoapExtensionAttribute.ExtensionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当在派生类中被重写时，获取 SOAP 扩展的 <see cref="T:System.Type" />。</summary>
        <value>SOAP 扩展的 <see cref="T:System.Type" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 派生的类必须重写<xref:System.Web.Services.Protocols.SoapExtensionAttribute.ExtensionType%2A>属性返回的 SOAP 扩展的类型。  
  
   
  
## Examples  
 下面的代码示例是典型实现<xref:System.Web.Services.Protocols.SoapExtensionAttribute.ExtensionType%2A>属性。  
  
 [!code-cpp[SoapExtensionAttribute#2](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapExtensionAttribute/CPP/SoapExtensionAttribute.cpp#2)]
 [!code-csharp[SoapExtensionAttribute#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapExtensionAttribute/CS/soapextensionattribute.cs#2)]
 [!code-vb[SoapExtensionAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapExtensionAttribute/VB/soapextensionattribute.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public abstract int Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapExtensionAttribute.Priority" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Priority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Priority { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : int with get, set" Usage="System.Web.Services.Protocols.SoapExtensionAttribute.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当在派生类中被重写时，获取或设置 SOAP 扩展的优先级。</summary>
        <value>SOAP 扩展的优先级。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例是典型实现<xref:System.Web.Services.Protocols.SoapExtensionAttribute.Priority%2A>属性。  
  
 SoapExtensionAttribute#3  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>