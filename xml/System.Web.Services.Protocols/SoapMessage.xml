<Type Name="SoapMessage" FullName="System.Web.Services.Protocols.SoapMessage">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2cc4afe7a4e8a0a96f6d8e8e0def604b33093901" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30549901" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SoapMessage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapMessage extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapMessage" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapMessage" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapMessage abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示特定 <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> 的 SOAP 请求或 SOAP 响应中的数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 主要用途<xref:System.Web.Services.Protocols.SoapMessage>类适用于的 SOAP 扩展，表示 SOAP 请求或 SOAP 响应中的数据。 当<xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>调用方法时，<xref:System.Web.Services.Protocols.SoapExtension>接收<xref:System.Web.Services.Protocols.SoapMessage>在每个<xref:System.Web.Services.Protocols.SoapMessageStage>。 由特定的 SOAP 扩展，选择如何处理<xref:System.Web.Services.Protocols.SoapMessage>。 常用的 SOAP 扩展包括加密和压缩。  
  
 可以为应用 SOAP 扩展，或这两个 XML Web 服务方法创建使用 ASP.NET 或 XML Web 服务客户端。 指向 XML Web service 方法，应用的 SOAP 扩展时<xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>方法接收实例<xref:System.Web.Services.Protocols.SoapServerMessage>，它派生自<xref:System.Web.Services.Protocols.SoapMessage>。 同样，SOAP 扩展应用于 XML Web 服务客户端，当<xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>接收实例<xref:System.Web.Services.Protocols.SoapClientMessage>。  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#1)]
 [!code-csharp[SoapMessage#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#1)]
 [!code-vb[SoapMessage#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public abstract string Action { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Action" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Action { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当在派生类中被重写时，获取用于 SOAP 请求或 SOAP 响应的 SOAPAction HTTP 请求标头字段。</summary>
        <value>用于 SOAP 请求或 SOAP 响应的 SOAPAction HTTP 请求标头字段。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapMessage.Action%2A>属性可以访问任何<xref:System.Web.Services.Protocols.SoapMessageStage>。  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#2](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#2)]
 [!code-csharp[SoapMessage#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#2)]
 [!code-vb[SoapMessage#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public string ContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentEncoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see langword="Content-Encoding" /> HTTP 标头的内容。</summary>
        <value>
          <see langword="Content-Encoding" />HTTP 标头的内容。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以设置的 SOAP 扩展<xref:System.Web.Services.Protocols.SoapMessage.ContentEncoding%2A>属性，以提供有关 SOAP 消息的编码，而无需更改的媒体类型，如中所表示的补充信息`Content-Type`HTTP 标头。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">当前 <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> 为 <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize" /> 或 <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize" /> 阶段。</exception>
        <altmember cref="T:System.Web.Services.Protocols.SoapExtension" />
        <altmember cref="P:System.Web.Services.Protocols.SoapMessage.ContentType" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 SOAP 请求或 SOAP 响应的 HTTP <see langword="Content-Type" />。</summary>
        <value>SOAP 请求或 SOAP 响应的 HTTP <see langword="Content-Type" />。 默认为“text/xml”。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapMessage.ContentType%2A>属性仅可在访问<xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize>和<xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize>暂存; 否则为<xref:System.InvalidOperationException>引发。  
  
 使用<xref:System.Web.Services.Protocols.SoapMessage.ContentEncoding%2A>属性，而不是<xref:System.Web.Services.Protocols.SoapMessage.ContentType%2A>属性，以提供有关 SOAP 消息的编码的补充信息。  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#3](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#3)]
 [!code-csharp[SoapMessage#3](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#3)]
 [!code-vb[SoapMessage#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          在 <see cref="P:System.Web.Services.Protocols.SoapMessage.ContentType" /> 或 <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize" /> 阶段可访问 <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize" />。</exception>
        <altmember cref="T:System.Web.Services.Protocols.SoapMessageStage" />
        <altmember cref="P:System.Web.Services.Protocols.SoapMessage.ContentEncoding" />
      </Docs>
    </Member>
    <Member MemberName="EnsureInStage">
      <MemberSignature Language="C#" Value="protected abstract void EnsureInStage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureInStage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.EnsureInStage" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub EnsureInStage ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void EnsureInStage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>当在派生类中被重写时，断言当前 <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> 为可以使用 in 参数的阶段。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 断言的阶段是不同的 XML Web 服务客户端和 XML Web 服务方法。 SOAP 请求进行反序列化后，XML Web 服务中的方法的参数有<xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize>阶段。 XML Web 服务客户端在参数均可用在 SOAP 请求序列化过程中之前<xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize>阶段。  
  
 <xref:System.Web.Services.Protocols.SoapMessage.EnsureInStage%2A> 可以在任何期间调用<xref:System.Web.Services.Protocols.SoapMessageStage>，但是<xref:System.InvalidOperationException>时，将引发参数将不可用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">In 参数不可用。</exception>
      </Docs>
    </Member>
    <Member MemberName="EnsureOutStage">
      <MemberSignature Language="C#" Value="protected abstract void EnsureOutStage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureOutStage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.EnsureOutStage" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub EnsureOutStage ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void EnsureOutStage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>当在派生类中被重写时，断言当前 <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> 阶段是不可以使用 out 参数的阶段。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 断言的阶段是不同的 XML Web 服务客户端和 XML Web 服务方法。 XML Web 服务方法的 out 参数有 SOAP 响应序列化过程中之前<xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize>阶段。 XML Web 服务客户端中的输出参数后提供在 SOAP 响应反序列化过程<xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize>阶段。  
  
 <xref:System.Web.Services.Protocols.SoapMessage.EnsureOutStage%2A> 可以在任何期间调用<xref:System.Web.Services.Protocols.SoapMessageStage>，但是<xref:System.InvalidOperationException>时，将引发参数将不可用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Out 参数不可用。</exception>
      </Docs>
    </Member>
    <Member MemberName="EnsureStage">
      <MemberSignature Language="C#" Value="protected void EnsureStage (System.Web.Services.Protocols.SoapMessageStage stage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureStage(valuetype System.Web.Services.Protocols.SoapMessageStage stage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.EnsureStage(System.Web.Services.Protocols.SoapMessageStage)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnsureStage (stage As SoapMessageStage)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnsureStage(System::Web::Services::Protocols::SoapMessageStage stage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stage" Type="System.Web.Services.Protocols.SoapMessageStage" />
      </Parameters>
      <Docs>
        <param name="stage">断言的 <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />。</param>
        <summary>确保对 XML Web services 方法的调用的 <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> 是传入的阶段。 如果当前处理阶段不是传入的阶段之一，则引发异常。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以通过执行多个实例的按位或运算声明多个阶段<xref:System.Web.Services.Protocols.SoapMessageStage>类。  
  
 <xref:System.Web.Services.Protocols.SoapMessage.EnsureStage%2A> 可以在任何期间调用<xref:System.Web.Services.Protocols.SoapMessageStage>。  
  
   
  
## Examples  
 下面的示例断言当前<xref:System.Web.Services.Protocols.SoapMessageStage>是<xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize>或<xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize>; 如果不是，将引发异常。  
  
 [!code-cpp[Classic SoapMessage.EnsureStage Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapMessage.EnsureStage Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapMessage.EnsureStage Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapMessage.EnsureStage Example/CS/source.cs#1)]
 [!code-vb[Classic SoapMessage.EnsureStage Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapMessage.EnsureStage Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">当前 <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> 不是断言的阶段。</exception>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapException Exception { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Protocols.SoapException Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Exception" />
      <MemberSignature Language="VB.NET" Value="Public Property Exception As SoapException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapException ^ Exception { System::Web::Services::Protocols::SoapException ^ get(); void set(System::Web::Services::Protocols::SoapException ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>从对 XML Web services 方法的调用中获取 <see cref="T:System.Web.Services.Protocols.SoapException" />。</summary>
        <value>在对 XML Web services 方法的调用中发生的 <see cref="T:System.Web.Services.Protocols.SoapException" />。 如果在对 Web 服务方法的调用过程中未发生任何 <see cref="T:System.Web.Services.Protocols.SoapException" />，则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapMessage.Exception%2A>属性可以访问任何<xref:System.Web.Services.Protocols.SoapMessageStage>。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapException" />
        <altmember cref="T:System.Web.Services.Protocols.SoapHeaderException" />
      </Docs>
    </Member>
    <Member MemberName="GetInParameterValue">
      <MemberSignature Language="C#" Value="public object GetInParameterValue (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetInParameterValue(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.GetInParameterValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInParameterValue (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetInParameterValue(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">参数在参数数组中的从零开始的索引。</param>
        <summary>在指定索引处获取传递到 XML Web services 方法中的参数。</summary>
        <returns>一个 <see cref="T:System.Object" />，它表示指定索引处的参数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapMessage.GetInParameterValue%2A>属性是仅在参数中的可访问时才可用。 ASP.NET 将引发<xref:System.InvalidOperationException>访问时<xref:System.Web.Services.Protocols.SoapMessage.GetInParameterValue%2A>如果参数中的属性不可用。  
  
 在<xref:System.Web.Services.Protocols.SoapClientMessage>输入参数位于<xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> <xref:System.Web.Services.Protocols.SoapMessageStage>。 在<xref:System.Web.Services.Protocols.SoapServerMessage>输入参数位于<xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> <xref:System.Web.Services.Protocols.SoapMessageStage>。  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#6](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#6)]
 [!code-csharp[SoapMessage#6](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#6)]
 [!code-vb[SoapMessage#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="index" /> 参数小于 0 或大于参数数组的长度。</exception>
        <exception cref="T:System.InvalidOperationException">当 in 参数不可用时访问此属性。</exception>
        <altmember cref="M:System.Web.Services.Protocols.SoapMessage.GetOutParameterValue(System.Int32)" />
        <altmember cref="M:System.Web.Services.Protocols.SoapMessage.GetReturnValue" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="GetOutParameterValue">
      <MemberSignature Language="C#" Value="public object GetOutParameterValue (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetOutParameterValue(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.GetOutParameterValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutParameterValue (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetOutParameterValue(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">参数在参数数组中的从零开始的索引。</param>
        <summary>在指定索引处获取传递到 XML Web services 方法中的输出参数。</summary>
        <returns>一个 <see cref="T:System.Object" />，它表示指定索引处的参数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果输出参数将不可用，ASP.NET 将引发<xref:System.InvalidOperationException>访问时<xref:System.Web.Services.Protocols.SoapMessage.GetOutParameterValue%2A>属性。  
  
 在<xref:System.Web.Services.Protocols.SoapClientMessage>out 参数位于<xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> <xref:System.Web.Services.Protocols.SoapMessageStage>。 在<xref:System.Web.Services.Protocols.SoapServerMessage>out 参数位于<xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize>的<xref:System.Web.Services.Protocols.SoapMessageStage>。  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#8](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#8)]
 [!code-csharp[SoapMessage#8](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#8)]
 [!code-vb[SoapMessage#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="index" /> 参数大于参数数组的长度。</exception>
        <exception cref="T:System.InvalidOperationException">当 out 参数不可用时访问此属性。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReturnValue">
      <MemberSignature Language="C#" Value="public object GetReturnValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetReturnValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.GetReturnValue" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReturnValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetReturnValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取 XML Web services 方法的返回值。</summary>
        <returns>一个 <see cref="T:System.Object" />，它表示 XML Web services 方法的返回值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果返回值不可用，ASP.NET 将引发<xref:System.InvalidOperationException>访问时<xref:System.Web.Services.Protocols.SoapMessage.GetReturnValue%2A>属性。  
  
 在<xref:System.Web.Services.Protocols.SoapClientMessage>时，返回值为可用<xref:System.Web.Services.Protocols.SoapMessageStage>值是<xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize>。 在<xref:System.Web.Services.Protocols.SoapServerMessage>时，返回值为可用<xref:System.Web.Services.Protocols.SoapMessageStage>值是<xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize>。  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#9](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#9)]
 [!code-csharp[SoapMessage#9](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#9)]
 [!code-vb[SoapMessage#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">XML Web services 方法没有返回值。  
  
 或  
  
 返回值不可用。</exception>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapHeaderCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Protocols.SoapHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As SoapHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapHeaderCollection ^ Headers { System::Web::Services::Protocols::SoapHeaderCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>应用于当前 SOAP 请求或 SOAP 响应的 SOAP 标头的集合。</summary>
        <value>应用于当前 SOAP 请求或 SOAP 响应的 <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" />。 如果不存在 SOAP 标头，则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SOAP 标头是的 SOAP 请求或 SOAP 响应的一个可选部分。 有关如何使用 ASP.NET 和它们的客户端创建的 XML Web 服务中使用 SOAP 标头的详细信息，请参阅<xref:System.Web.Services.Protocols.SoapHeader>类。  
  
 尽管<xref:System.Web.Services.Protocols.SoapMessage.Headers%2A>属性可以访问在任何阶段，则仅使用中的 SOAP 标头信息进行填充<xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize>和<xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize>阶段。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodInfo">
      <MemberSignature Language="C#" Value="public abstract System.Web.Services.Protocols.LogicalMethodInfo MethodInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Protocols.LogicalMethodInfo MethodInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.MethodInfo" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MethodInfo As LogicalMethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Web::Services::Protocols::LogicalMethodInfo ^ MethodInfo { System::Web::Services::Protocols::LogicalMethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.LogicalMethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当在派生类中重写时，获取为要其发出 SOAP 请求的 XML Web services 方法的方法原型的表示形式。</summary>
        <value>一个 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />，它表示使用 SOAP 请求的 XML Web services 方法。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 尽管<xref:System.Web.Services.Protocols.SoapMessage.MethodInfo%2A>可以在任何期间访问<xref:System.Web.Services.Protocols.SoapMessageStage>，它仅有数据期间<xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize>和<xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize>。  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#7](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#7)]
 [!code-csharp[SoapMessage#7](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#7)]
 [!code-vb[SoapMessage#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="OneWay">
      <MemberSignature Language="C#" Value="public abstract bool OneWay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OneWay" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.OneWay" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property OneWay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool OneWay { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示应用于 XML Web services 方法的 <see cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" /> 或 <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> 特性的 <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> 属性。</summary>
        <value>
          如果应用于 XML Web services 方法的 <see cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" /> 或 <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> 的 <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> 属性为 <see langword="true" />，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请参阅<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A?displayProperty=nameWithType>属性<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>或<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>有关单向 XML Web 服务方法的详细信息。  
  
 <xref:System.Web.Services.Protocols.SoapMessage.OneWay%2A>属性是可访问的所有阶段中<xref:System.Web.Services.Protocols.SoapMessageStage>。  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#4](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#4)]
 [!code-csharp[SoapMessage#4](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#4)]
 [!code-vb[SoapMessage#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" />
        <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
        <altmember cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SoapVersion">
      <MemberSignature Language="C#" Value="public virtual System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapProtocolVersion SoapVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.SoapVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SoapVersion As SoapProtocolVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Services::Protocols::SoapProtocolVersion SoapVersion { System::Web::Services::Protocols::SoapProtocolVersion get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapProtocolVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于与 XML Web services 进行通信的 SOAP 协议的版本。</summary>
        <value>
          <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /> 值之一。 默认值为 <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Default" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关<xref:System.Web.Services.Protocols.SoapServerMessage>、<xref:System.Web.Services.Protocols.SoapServerMessage.SoapVersion%2A>属性可以保证有效之后<xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize>阶段。 在<xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize>阶段属性不可用，但不完全处理的 SOAP 消息，并且尚未运行可能会更改 SOAP 消息的内容的 SOAP 扩展。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stage">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapMessageStage Stage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapMessageStage Stage" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Stage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Stage As SoapMessageStage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapMessageStage Stage { System::Web::Services::Protocols::SoapMessageStage get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapMessageStage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> 的 <see cref="T:System.Web.Services.Protocols.SoapMessage" />。</summary>
        <value>
          <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> 的 <see cref="T:System.Web.Services.Protocols.SoapMessage" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapMessage.Stage%2A>属性可以访问在任何<xref:System.Web.Services.Protocols.SoapMessageStage>。  
  
   
  
## Examples  
 下面的代码示例演示如何确定<xref:System.Web.Services.Protocols.SoapMessageStage>内<xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A?displayProperty=nameWithType>方法。  
  
 [!code-cpp[Classic SoapExtension.ProcessMessage Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.ProcessMessage Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.ProcessMessage Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.ProcessMessage Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.ProcessMessage Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.ProcessMessage Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stream">
      <MemberSignature Language="C#" Value="public System.IO.Stream Stream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Stream" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Stream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Stream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Stream { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取以 <see cref="T:System.IO.Stream" /> 形式表示 SOAP 请求或 SOAP 响应的数据。</summary>
        <value>
          <see cref="T:System.IO.Stream" /> 类的只读实例。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 检查表示 SOAP 请求或 SOAP 响应，例如日志记录 SOAP 扩展的数据的 SOAP 扩展可以使用`Stream`属性来查看数据在每个<xref:System.Web.Services.Protocols.SoapMessageStage>。  
  
 修改表示 SOAP 请求或 SOAP 响应，例如加密或压缩 SOAP 扩展的数据的 SOAP 扩展应执行此操作与<xref:System.IO.Stream>传入<xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>方法<xref:System.Web.Services.Protocols.SoapExtension>。 <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A>属性<xref:System.Web.Services.Protocols.SoapMessage>传入<xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>是只读的。  
  
 有关修改表示 SOAP 请求或 SOAP 响应的数据的详细信息，请参阅<xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>。  
  
   
  
## Examples  
 [!code-cpp[SoapMessage_Headers#2](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage_Headers/CPP/SoapMessage_Headers.cpp#2)]
 [!code-csharp[SoapMessage_Headers#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage_Headers/CS/soapmessage_headers.cs#2)]
 [!code-vb[SoapMessage_Headers#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage_Headers/VB/soapmessage_headers.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public abstract string Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Url" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Url As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Url { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当在派生类中重写时，获取 XML Web services 的基 URL。</summary>
        <value>XML Web services 的基 URL。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapMessage.Url%2A>属性可以访问任何<xref:System.Web.Services.Protocols.SoapMessageStage>。  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#5](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#5)]
 [!code-csharp[SoapMessage#5](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#5)]
 [!code-vb[SoapMessage#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>