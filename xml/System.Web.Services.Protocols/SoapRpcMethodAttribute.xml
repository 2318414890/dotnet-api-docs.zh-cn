<Type Name="SoapRpcMethodAttribute" FullName="System.Web.Services.Protocols.SoapRpcMethodAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe1beaf6ae6bd2d0567c79b149d2e73235e61bbe" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36395094" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SoapRpcMethodAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SoapRpcMethodAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SoapRpcMethodAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapRpcMethodAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type SoapRpcMethodAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定发送至和源自该方法的 SOAP 消息使用 <see langword="RPC" /> 格式设置。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 服务描述语言 (WSDL) 定义如何在 SOAP 消息中格式化的 XML Web 服务方法中或运算，两种风格：`RPC`和`Document`。 `RPC` 格式设置是指格式根据 SOAP 规范 RPC; 而使用 SOAP 操作也称为 SOAP 规范的第 7 节。 `RPC` 格式设置的状态的所有参数都封装在单个 XML 元素名为 XML Web 服务方法后，该 XML 元素中的每个 XML 元素表示它所表示的参数命名的参数。  
  
 SOAP 消息进行格式化的同时`RPC`和`Document`样式可以用于通信与 XML Web 服务以远程过程调用 (RPC) 方式运行; 但是`Document`样式也很容易可用来进行松散耦合通信方式。 因此，`Document`建议样式 XML Web 服务。 有关更多详细信息，请参阅`Customizing SOAP Messages`主题。  
  
 有关更多详细信息，请参阅[ &#91; \<topic://cpconCustomizingSOAPInASPNETWebServicesWebServiceClients >&#93;](http://msdn.microsoft.com/library/1d777288-c0d9-4e6a-b638-f010da031952)。  
  
 此特性可以应用于服务器上的 XML Web 服务方法和客户端上的代理类。 XML Web 服务方法具有<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A>属性设置为`true`的确可以访问其<xref:System.Web.HttpContext>。 在这种情况下，访问的属性的任何<xref:System.Web.Services.WebService>类返回`null`。  
  
   
  
## Examples  
 下面的代码示例将消息样式设置为`Rpc`为`GetUserName`XML Web service 方法。  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.SoapRpcServiceAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.SoapDocumentServiceAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapRpcMethodAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapRpcMethodAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> 类的新实例，将所有属性都设置为其默认值。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapRpcMethodAttribute (string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapRpcMethodAttribute(System::String ^ action);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.Protocols.SoapRpcMethodAttribute : string -&gt; System.Web.Services.Protocols.SoapRpcMethodAttribute" Usage="new System.Web.Services.Protocols.SoapRpcMethodAttribute action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action">SOAP 请求的目标。 设置 <see cref="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action" /> 属性。</param>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> 类的新实例，并将 <see cref="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action" /> 属性设置为 <paramref name="action" /> 参数的值。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 SOAP 请求的 <see langword="SOAPAction" />HTTP 标头字段。</summary>
        <value>SOAP 请求的 <see langword="SOAPAction" />HTTP 标头字段。 默认值是http://tempuri.org/MethodName其中 MethodName 是 XML Web service 方法的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常情况下，<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action%2A>属性是，该值指示 SOAP 请求的意图的 URI。 但是，SOAP 规范格式和 URI 是否引用现有文档上放置不受限制。 状态和内容<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action%2A>Web 服务器可以使用属性，如防火墙以适当地筛选 SOAP 请求中 HTTP 消息。  
  
 默认情况下，.NET Framework 1.1 版发布<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action%2A>中的属性`soapAction`属性`soap:operation`每个元素支持为 XML Web 服务生成的 WSDL 文档中 SOAP 绑定。 支持的 SOAP 绑定是 SOAP 1.1。  
  
 有关 SOAP 规范的详细信息，请参阅 W3C 网站 (http://www.w3.org/TR/SOAP)。  
  
   
  
## Examples  
 下面的代码示例设置<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action%2A>属性`http://www.contoso.com/Sample`。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Binding">
      <MemberSignature Language="C#" Value="public string Binding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Binding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Binding" />
      <MemberSignature Language="VB.NET" Value="Public Property Binding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Binding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Binding : string with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.Binding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 XML Web services 方法为其实现操作的绑定。</summary>
        <value>XML Web services 方法为其实现操作的绑定。 默认为追加了“Soap”的 XML Web services 名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一个绑定，如所定义的 Web 服务描述语言 (WSDL)，是类似于一个接口，因为它定义一组具体的操作。 对于 ASP.NET，每个 XML Web service 方法的绑定内的运算。 XML Web 服务方法是 XML Web 服务的默认绑定或绑定中指定的成员<xref:System.Web.Services.WebServiceBindingAttribute>应用于 XML Web 服务。 XML Web 服务可以实现多个绑定，如果选择多个<xref:System.Web.Services.WebServiceBindingAttribute>特性应用到 XML Web 服务。  
  
 一次一个或多个<xref:System.Web.Services.WebServiceBindingAttribute>特性应用到 XML Web 服务，<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>或<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>可应用于单个 XML Web 服务方法，以便指示由特定的 XML Web 服务方法实现的绑定操作。 设置<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding%2A>属性<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>或<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>指定的绑定 XML Web 服务方法实现了一项操作。 只有一个<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>或<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>可应用于 XML Web 服务方法。 因此，XML Web 服务方法只能实现一个绑定的操作。  
  
   
  
## Examples  
 下面的代码示例演示如何实现 XML Web 服务中的多个绑定。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.WebServiceBindingAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OneWay">
      <MemberSignature Language="C#" Value="public bool OneWay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OneWay" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay" />
      <MemberSignature Language="VB.NET" Value="Public Property OneWay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OneWay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OneWay : bool with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 XML Web services 客户端是否等待 Web 服务器完成对 XML Web services 方法的处理。</summary>
        <value>如果 XML Web services 客户端不等待 Web 服务器完成对 XML Web services 方法的处理，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当 XML Web 服务方法具有<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A>属性设置为`true`，XML Web 服务客户端没有等待要完成处理 XML Web service 方法的 Web 服务器。 Web 服务器消息反序列化时，就会立即<xref:System.Web.Services.Protocols.SoapServerMessage>，但调用 XML Web 服务方法之前，服务器将返回 HTTP 202 状态代码。 HTTP 202 状态代码指示客户端到 Web 服务器已开始处理消息。 因此，XML Web 服务客户端接收任何 Web 服务器已成功处理了消息的确认。  
  
 单向方法不能具有返回值或任何`out`参数。  
  
 如果你使用具有.NET Framework 1.0 版 XML Web 服务方法<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>或<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>属性应用于它们与<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A>属性设置为`true`，不允许访问其<xref:System.Web.HttpContext>使用静态<xref:System.Web.HttpContext.Current%2A>属性。 访问<xref:System.Web.HttpContext>，派生类实现中的 XML Web 服务方法<xref:System.Web.Services.WebService>和访问<xref:System.Web.Services.WebService.Context%2A>属性。  
  
   
  
## Examples  
 下面的代码示例设置<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A>属性`true`。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestElementName">
      <MemberSignature Language="C#" Value="public string RequestElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestElementName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestElementName : string with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与 XML Web services 方法的 SOAP 请求关联的 XML 元素。</summary>
        <value>与 XML Web services 方法的 SOAP 请求关联的 XML 元素。 默认值是 XML Web services 方法的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性已过时。 它不会影响任何行为。  
  
   
  
## Examples  
 下面的代码示例设置<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName%2A>属性`MyCustomRequestElement`。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestNamespace">
      <MemberSignature Language="C#" Value="public string RequestNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestNamespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestNamespace : string with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与 XML Web services 方法的 SOAP 请求关联的 XML 命名空间。</summary>
        <value>与 XML Web services 方法的 SOAP 请求关联的 XML 命名空间。 默认值为 http://tempuri.org/。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例设置<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace%2A>属性`http://www.contoso.com`。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseElementName">
      <MemberSignature Language="C#" Value="public string ResponseElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResponseElementName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResponseElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseElementName : string with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与 XML Web services 方法的 SOAP 响应关联的 XML 元素。</summary>
        <value>与 XML Web services 方法的 SOAP 请求关联的 XML 元素。 默认值是<c>WebServiceNameResult</c>，其中<c>WebServiceName</c>是 XML Web service 方法的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName%2A>属性定义用于封装内的参数的 XML 元素`Body`的 SOAP 响应的元素。  
  
   
  
## Examples  
 下面的代码示例设置<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName%2A>属性`MyCustomResponseElement`。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseNamespace">
      <MemberSignature Language="C#" Value="public string ResponseNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResponseNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResponseNamespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseNamespace : string with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与 XML Web services 方法的 SOAP 响应关联的 XML 命名空间。</summary>
        <value>与 XML Web services 方法的 SOAP 响应关联的 XML 命名空间。 默认值为 http://tempuri.org/。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace%2A>属性用于在 XSD 架构中其服务说明中的 XML Web 服务方法。  
  
   
  
## Examples  
 下面的代码示例设置<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace%2A>属性`http://www.contoso.com`。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Use">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.SoapBindingUse Use { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Description.SoapBindingUse Use" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Use" />
      <MemberSignature Language="VB.NET" Value="Public Property Use As SoapBindingUse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::SoapBindingUse Use { System::Web::Services::Description::SoapBindingUse get(); void set(System::Web::Services::Description::SoapBindingUse value); };" />
      <MemberSignature Language="F#" Value="member this.Use : System.Web.Services.Description.SoapBindingUse with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.Use" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.SoapBindingUse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在调用该方法时所使用的绑定。</summary>
        <value>
          <see cref="T:System.Web.Services.Description.SoapBindingUse" /> 枚举的成员，指定在调用该方法时所使用的绑定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性的默认值为 <xref:System.Web.Services.Description.SoapBindingUse.Default>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>