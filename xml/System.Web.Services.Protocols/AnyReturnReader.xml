<Type Name="AnyReturnReader" FullName="System.Web.Services.Protocols.AnyReturnReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4407655a3f9dec2d6a70c48837c725b7330b1512" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52199995" /></Metadata><TypeSignature Language="C#" Value="public class AnyReturnReader : System.Web.Services.Protocols.MimeReturnReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AnyReturnReader extends System.Web.Services.Protocols.MimeReturnReader" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.AnyReturnReader" />
  <TypeSignature Language="VB.NET" Value="Public Class AnyReturnReader&#xA;Inherits MimeReturnReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class AnyReturnReader : System::Web::Services::Protocols::MimeReturnReader" />
  <TypeSignature Language="F#" Value="type AnyReturnReader = class&#xA;    inherit MimeReturnReader" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.MimeReturnReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为使用 HTTP 实现但不支持 SOAP 的 Web 服务客户端提供传入响应返回值的最小读取器。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.AnyReturnReader> 和中的其他类<xref:System.Web.Services.Protocols>命名空间支持通过 HTTP GET 和 HTTP POST 操作的 Web 服务的.NET Framework 的实现。 Web 服务作者和读者序列化和反序列化，分别之间的参数或返回对象的 Web 方法和 HTTP 请求或响应流。 Web 服务作者和读者使用 HTTP 传输，但不交换使用 SOAP 标准的消息。  
  
 <xref:System.Web.Services.Protocols.AnyReturnReader>类提供的接口的抽象父类的最小实现<xref:System.Web.Services.Protocols.MimeReturnReader>。您通常不需要使用<xref:System.Web.Services.Protocols.AnyReturnReader>直接。 当 Wsdl.exe 工具生成的 HTTP GET 或 HTTP POST 实现根据客户端代理代码时，它将应用<xref:System.Web.Services.Protocols.HttpMethodAttribute>每个 Web 方法和默认情况下设置的属性<xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>属性设置为<xref:System.Web.Services.Protocols.XmlReturnReader>，另一个类派生自<xref:System.Web.Services.Protocols.MimeReturnReader>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.MimeFormatter" />
    <altmember cref="T:System.Web.Services.Protocols.MimeReturnReader" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnyReturnReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.AnyReturnReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnyReturnReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.AnyReturnReader" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public override object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.AnyReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInitializer (methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="override this.GetInitializer : System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="anyReturnReader.GetInitializer methodInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo"><see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />，指示为之获取初始值设定项的 Web 方法。</param>
        <summary>返回传递给 <see cref="M:System.Web.Services.Protocols.AnyReturnReader.Initialize(System.Object)" /> 方法的参数。</summary>
        <returns>传递给 <see cref="M:System.Web.Services.Protocols.AnyReturnReader.Initialize(System.Object)" /> 方法的参数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 初始值设定项是一个对象作为参数传递给<xref:System.Web.Services.Protocols.AnyReturnReader.Initialize%2A>方法。 有关<xref:System.Web.Services.Protocols.AnyReturnReader>类，初始值设定项是由关键字引用的实例`this`，除非<xref:System.Web.Services.Protocols.LogicalMethodInfo>参数值具有 void 返回类型，在其中用例初始值设定项设置为`null`。  
  
 <xref:System.Web.Services.Protocols.AnyReturnReader.GetInitializer%2A>在服务初始化过程中调用方法。 更高版本，在处理响应时的时间初始值设定项<xref:System.Web.Services.Protocols.AnyReturnReader>对象传递给<xref:System.Web.Services.Protocols.AnyReturnReader.Initialize%2A>方法的另一个<xref:System.Web.Services.Protocols.AnyReturnReader>实例。 另一个实例将调用<xref:System.Web.Services.Protocols.AnyReturnReader.Read%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.AnyReturnReader.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Initialize : obj -&gt; unit" Usage="anyReturnReader.Initialize o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><see cref="T:System.Web.Services.Protocols.AnyReturnReader" /> 类的另一个实例，以前对其调用了 <see cref="M:System.Web.Services.Protocols.AnyReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /> 方法。</param>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.AnyReturnReader" /> 类的实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.AnyReturnReader.Initialize%2A>方法不执行任何操作。  
  
 在处理响应时调用此方法。 输入的参数， `initializer`，是的另一个实例<xref:System.Web.Services.Protocols.AnyReturnReader>，在客户端初始化过程中获得。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override object Read (System.Net.WebResponse response, System.IO.Stream responseStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Read(class System.Net.WebResponse response, class System.IO.Stream responseStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.AnyReturnReader.Read(System.Net.WebResponse,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (response As WebResponse, responseStream As Stream) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Read(System::Net::WebResponse ^ response, System::IO::Stream ^ responseStream);" />
      <MemberSignature Language="F#" Value="override this.Read : System.Net.WebResponse * System.IO.Stream -&gt; obj" Usage="anyReturnReader.Read (response, responseStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="System.Net.WebResponse" />
        <Parameter Name="responseStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="response">Web 服务所发送的 HTTP 响应的表示形式，包含操作的输出消息。</param>
        <param name="responseStream">一个输出流，其内容为由 <paramref name="response" /> 参数表示的 HTTP 响应的正文。</param>
        <summary>返回输入 HTTP 响应流。</summary>
        <returns>输入 HTTP 响应流。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.AnyReturnReader>类的实现<xref:System.Web.Services.Protocols.AnyReturnReader.Read%2A>方法不执行读取。 而是只需返回<xref:System.IO.Stream>对象作为参数传递。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>