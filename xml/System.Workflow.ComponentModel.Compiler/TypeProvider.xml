<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeProvider.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae25fbb5-14a8-44f2-90c2-3c6d6fcaae7fce627dbbe940058bb73111787d3e9fe3fa799b8a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ce627dbbe940058bb73111787d3e9fe3fa799b8a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b899505ed6d42225f2b3c9150bfdc080d0d1f9b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/28/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Workflow.ComponentModel.Compiler.TypeProvider">
          <source>An implementation of <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" /&gt;</ph> that acts as a container of types within the indicated assemblies and code compile units.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" /&gt;</ph> 的实现，充当指示的程序集和代码编译单元内类型的容器。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.ComponentModel.Compiler.TypeProvider">
          <source>This <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.ITypeProvider&gt;</ph> implementation, in addition to handling compiled assemblies (<ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference%2A&gt;</ph> methods), can handle types that have not been compiled yet (<ph id="ph4">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit%2A&gt;</ph>).</source>
          <target state="translated">除了处理已编译的程序集（<ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.ITypeProvider&gt;</ph> 和 <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%2A&gt;</ph> 方法）外，此 <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference%2A&gt;</ph> 实现还可以处理尚未编译的类型 (<ph id="ph4">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit%2A&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.ComponentModel.Compiler.TypeProvider">
          <source>The limited implementation of <ph id="ph1">&lt;xref:System.Type?displayProperty=nameWithType&gt;</ph> is returned for types referenced using <ph id="ph2">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph>.</source>
          <target state="translated">将为使用 <ph id="ph1">&lt;xref:System.Type?displayProperty=nameWithType&gt;</ph> 引用的类型返回 <ph id="ph2">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> 的受限实现。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.ComponentModel.Compiler.TypeProvider">
          <source><ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider&gt;</ph> only returns public types from referenced assemblies, and both public and non-public types from local assemblies.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider&gt;</ph> 从引用程序集中仅返回公共类型，而从本地程序集中同时返回公共类型和非公共类型。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.#ctor(System.IServiceProvider)">
          <source>The encapsulated <ph id="ph1">&lt;see cref="T:System.IServiceProvider" /&gt;</ph> for this instance.</source>
          <target state="translated">此实例的包装的 <ph id="ph1">&lt;see cref="T:System.IServiceProvider" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.#ctor(System.IServiceProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.#ctor(System.IServiceProvider)">
          <source>The following code example shows how to create a new instance of the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider&gt;</ph> class.</source>
          <target state="translated">下面的代码示例演示如何创建 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.#ctor(System.IServiceProvider)">
          <source>This code example is part of the BasicDesignerHosting SDK Sample from the WorkflowLoader.cs file.</source>
          <target state="translated">此代码示例摘自 WorkflowLoader.cs 文件中的 BasicDesignerHosting SDK 示例。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.#ctor(System.IServiceProvider)">
          <source>For more information, see <bpt id="p1">[</bpt>Basic Designer Hosting<ept id="p1">](http://msdn.microsoft.com/library/55925adf-2daa-4dc2-b1bf-61aa0190d734)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>基本设计器托管<ept id="p1">](http://msdn.microsoft.com/library/55925adf-2daa-4dc2-b1bf-61aa0190d734)</ept>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Type.Assembly" /&gt;</ph> to add a reference for.</source>
          <target state="translated">要为其添加引用的 <ph id="ph1">&lt;see cref="P:System.Type.Assembly" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)">
          <source>Adds an already-loaded assembly.</source>
          <target state="translated">添加已经加载的程序集。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)">
          <source>It is the caller's responsibility to load the assembly, and <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" /&gt;</ph> includes the types from this assembly for dispensing when <ph id="ph2">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType" /&gt;</ph> is called.</source>
          <target state="translated">调用方负责加载程序集，而且 <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" /&gt;</ph> 包括此程序集中的类型以便在调用 <ph id="ph2">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType" /&gt;</ph> 时进行分配。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)">
          <source><ph id="ph1">&lt;paramref name="assembly" /&gt;</ph> is a null reference (Visual Basic <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assembly" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)">
          <source>The path of the <ph id="ph1">&lt;see cref="P:System.Type.Assembly" /&gt;</ph> to add.</source>
          <target state="translated">要添加的 <ph id="ph1">&lt;see cref="P:System.Type.Assembly" /&gt;</ph> 的路径。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)">
          <source>Adds a reference to the <ph id="ph1">&lt;see cref="P:System.Type.Assembly" /&gt;</ph> to the internal list.</source>
          <target state="translated">将对 <ph id="ph1">&lt;see cref="P:System.Type.Assembly" /&gt;</ph> 的引用添加到内部列表。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)">
          <source>This assembly is used for the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> lookup in the <ph id="ph2">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)" /&gt;</ph> method.</source>
          <target state="translated">此程序集用于在 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 方法中查找 <ph id="ph2">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)">
          <source>The following code example shows how to create a new instance of the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider&gt;</ph> class and run the <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference%2A&gt;</ph> method.</source>
          <target state="translated">下面的代码示例演示如何创建 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider&gt;</ph> 类的新实例并运行 <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)">
          <source>This code example is part of the BasicDesignerHosting SDK Sample from the WorkflowLoader.cs file.</source>
          <target state="translated">此代码示例摘自 WorkflowLoader.cs 文件中的 BasicDesignerHosting SDK 示例。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Basic Designer Hosting<ept id="p1">](http://msdn.microsoft.com/library/55925adf-2daa-4dc2-b1bf-61aa0190d734)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>基本设计器托管<ept id="p1">](http://msdn.microsoft.com/library/55925adf-2daa-4dc2-b1bf-61aa0190d734)</ept>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a null reference (Visual Basic <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> to add.</source>
          <target state="translated">要添加的 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)">
          <source>Adds a reference to the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> to the internal list.</source>
          <target state="translated">将对 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> 的引用添加到内部列表。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)">
          <source>This <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> is used for the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> lookup in the <ph id="ph3">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)" /&gt;</ph> method.</source>
          <target state="translated">此 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> 用于在 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> 方法中查找 <ph id="ph3">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)">
          <source><ph id="ph1">&lt;paramref name="codeCompileUnit" /&gt;</ph> is a null reference (Visual Basic <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="codeCompileUnit" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)">
          <source><ph id="ph1">&lt;paramref name="codeCompileUnit" /&gt;</ph> is already referenced in this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="codeCompileUnit" /&gt;</ph> 已在此实例中引用。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Workflow.ComponentModel.Compiler.TypeProvider.AssemblyNameResolver">
          <source>Gets or sets the delegate that references a method with one parameter and one return value that returns the assembly display name in which a specified type belongs to.</source>
          <target state="translated">获取或设置引用包含一个参数和一个返回值的方法的委托，该方法返回指定类型所属的程序集显示名称。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.Compiler.TypeProvider.AssemblyNameResolver">
          <source>The delegate that references a method with one parameter and one return value that returns the assembly display name that a specified type belongs to.</source>
          <target state="translated">引用包含一个参数和一个返回值的方法的委托，该方法返回指定类型所属的程序集显示名称。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" /&gt;</ph>.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" /&gt;</ph> 使用的所有资源。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetAssemblyName(System.Type)">
          <source>The type whose assembly name to get.</source>
          <target state="translated">要获取其程序集名称的类型。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetAssemblyName(System.Type)">
          <source>Returns the assembly display name of the assembly in which the specified type is declared.</source>
          <target state="translated">返回在其中声明指定类型的程序集的程序集显示名称。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetAssemblyName(System.Type)">
          <source>The assembly display name of the assembly in which the specified type is declared.</source>
          <target state="translated">在其中声明指定类型的程序集的程序集显示名称。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetEnumNames(System.Type)">
          <source>The type to obtain the names from.</source>
          <target state="translated">要从中获取名称的类型。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetEnumNames(System.Type)">
          <source>Provides a string array that contains the names for the specified <ph id="ph1">&lt;see cref="T:System.Enum" /&gt;</ph> in indexed order.</source>
          <target state="translated">提供一个字符串数组，其中包含指定的 <ph id="ph1">&lt;see cref="T:System.Enum" /&gt;</ph> 的名称并按索引顺序排列。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetEnumNames(System.Type)">
          <source>The names for the specified <ph id="ph1">&lt;see cref="T:System.Enum" /&gt;</ph> in indexed order.</source>
          <target state="translated">按索引顺序排列的指定的 <ph id="ph1">&lt;see cref="T:System.Enum" /&gt;</ph> 名称。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetEnumNames(System.Type)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is a null reference (Visual Basic <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetEnumNames(System.Type)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> Is not an <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetEventHandlerType(System.Reflection.EventInfo)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> to obtain the <ph id="ph2">&lt;see cref="T:System.EventHandler" /&gt;</ph> type of.</source>
          <target state="translated">要获取其 <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> 类型的 <ph id="ph2">&lt;see cref="T:System.EventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetEventHandlerType(System.Reflection.EventInfo)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of an <ph id="ph2">&lt;see cref="T:System.EventHandler" /&gt;</ph>, given a reference to an <ph id="ph3">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph>.</source>
          <target state="translated">如果提供对 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 的引用，则获取 <ph id="ph2">&lt;see cref="T:System.EventHandler" /&gt;</ph> 的 <ph id="ph3">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetEventHandlerType(System.Reflection.EventInfo)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of an <ph id="ph2">&lt;see cref="T:System.EventHandler" /&gt;</ph>, given a reference to an <ph id="ph3">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph>.</source>
          <target state="translated">提供对 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 的引用的情况下 <ph id="ph2">&lt;see cref="T:System.EventHandler" /&gt;</ph> 的 <ph id="ph3">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetEventHandlerType(System.Reflection.EventInfo)">
          <source><ph id="ph1">&lt;paramref name="eventInfo" /&gt;</ph> is a null reference (Visual Basic <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventInfo" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetService(System.Type)">
          <source>The service <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> is to provide.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 要提供的服务 <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetService(System.Type)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that provides the designated service <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">获取提供指定服务 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetService(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that provides the designated service <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">提供指定服务 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetService(System.Type)">
          <source>If the encapsulated <ph id="ph1">&lt;xref:System.IServiceProvider&gt;</ph> associated with this instance is a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic) then a null reference (<ph id="ph3">`Nothing`</ph>) is returned.</source>
          <target state="translated">如果与此实例关联的包装 <ph id="ph1">&lt;xref:System.IServiceProvider&gt;</ph> 是一个空引用（在 Visual Basic 中为 <ph id="ph2">`Nothing`</ph>），则返回一个空引用 (<ph id="ph3">`Nothing`</ph>)。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="T:System.Workflow.ComponentModel.Compiler.TypeProvider">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> from the qualified type name passed by searching through the assembly references and code compile units that are added.</source>
          <target state="translated">获取通过搜索添加的程序集引用和代码编译单元而传递的限定类型名中的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)">
          <source>The type name.</source>
          <target state="translated">类型名称。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)">
          <source>Gets the type from the set of assemblies added to the <ph id="ph1">&lt;see langword="TypeProvider" /&gt;</ph> using <ph id="ph2">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)" /&gt;</ph>, or <ph id="ph4">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)" /&gt;</ph>.</source>
          <target state="translated">从使用 <ph id="ph1">&lt;see langword="TypeProvider" /&gt;</ph>、<ph id="ph2">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)" /&gt;</ph> 添加到 <ph id="ph4">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)" /&gt;</ph> 的一组程序集中获取类型。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)">
          <source>The requested <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">请求的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)">
          <source>If the name is not resolvable within the cache of assemblies and compiled units of this instance, a null reference (Visual Basic <ph id="ph1">`Nothing`</ph>) is returned.</source>
          <target state="translated">如果名称在程序集的缓存和此实例的编译单元中不能解析，将返回一个空引用（在 Visual Basic 中为 <ph id="ph1">`Nothing`</ph>）。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)">
          <source>Invoking this overload is the same as invoking the two parameter overloads with the value of the parameter <ph id="ph1">`throwOnError`</ph> set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">调用此重载与调用参数 <ph id="ph1">`throwOnError`</ph> 的值设置为 <ph id="ph2">`true`</ph> 的两参数重载相同。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String,System.Boolean)">
          <source>The type name.</source>
          <target state="translated">类型名称。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String,System.Boolean)">
          <source>A value that indicates whether to throw an exception if <bpt id="p1">&lt;c&gt;</bpt>name<ept id="p1">&lt;/c&gt;</ept> is not resolvable.</source>
          <target state="translated">一个指示 <bpt id="p1">&lt;c&gt;</bpt>name<ept id="p1">&lt;/c&gt;</ept> 不可解析时是否引发异常的值。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String,System.Boolean)">
          <source>Gets the type from the set of assemblies added to the <ph id="ph1">&lt;see langword="TypeProvider" /&gt;</ph> using <ph id="ph2">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)" /&gt;</ph>, or <ph id="ph4">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)" /&gt;</ph>.</source>
          <target state="translated">从使用 <ph id="ph1">&lt;see langword="TypeProvider" /&gt;</ph>、<ph id="ph2">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)" /&gt;</ph> 添加到 <ph id="ph4">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)" /&gt;</ph> 的一组程序集中获取类型。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String,System.Boolean)">
          <source>The requested <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">请求的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String,System.Boolean)">
          <source>If the name is not resolvable within the cache of assemblies and compiled units of this instance, a null reference (<ph id="ph1">`Nothing`</ph>) is returned; in the case that <ph id="ph2">`throwOnError`</ph> is <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果名称在程序集的缓存和此实例的编译单元中不可解析，则返回一个空引用 (<ph id="ph1">`Nothing`</ph>)，前提是 <ph id="ph2">`throwOnError`</ph> 为 <ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is not resolvable and <ph id="ph2">&lt;paramref name="throwOnError" /&gt;</ph> is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 不可解析，因此 <ph id="ph2">&lt;paramref name="throwOnError" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetTypes">
          <source>Creates an array that contains each <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> known to this instance.</source>
          <target state="translated">创建一个包含此实例已知的每个 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 的数组。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetTypes">
          <source>An array that contains each <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> known to this instance.</source>
          <target state="translated">包含此实例已知的每个 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 的数组。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetTypes">
          <source>Any <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> fails to load.</source>
          <target state="translated">未能加载的任何 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsAssignable(System.Type,System.Type)">
          <source>The target <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the assignment.</source>
          <target state="translated">赋值的目标 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsAssignable(System.Type,System.Type)">
          <source>The source <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the assignment.</source>
          <target state="translated">赋值的源 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsAssignable(System.Type,System.Type)">
          <source>Indicates whether one type can be safely assigned to another type.</source>
          <target state="translated">指示是否可以安全地将一个类型分配给另一个类型。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsAssignable(System.Type,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the assignment can be safely made; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果可以安全执行赋值，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsEnum(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to be tested.</source>
          <target state="translated">要测试的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsEnum(System.Type)">
          <source>Indicates whether a <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> is of type <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph> .</source>
          <target state="translated">指示 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 的类型是否为 <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsEnum(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is an <ph id="ph3">&lt;see cref="T:System.Enum" /&gt;</ph> ; otherwise <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 为 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>，则为 <ph id="ph3">&lt;see cref="T:System.Enum" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsEnum(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSubclassOf(System.Type,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> being tested as a derived class.</source>
          <target state="translated">将作为派生类进行测试的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSubclassOf(System.Type,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> being tested as the class.</source>
          <target state="translated">将作为类进行测试的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSubclassOf(System.Type,System.Type)">
          <source>Indicates whether a <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> is a derived class of another <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> .</source>
          <target state="translated">指示一个 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 是否为另一个 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> 的派生类。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSubclassOf(System.Type,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the tested relationship is true; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果所测试的关系为 true，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedProperty(System.Reflection.PropertyInfo,System.Object)">
          <source>The property to resolve.</source>
          <target state="translated">要解析的属性。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedProperty(System.Reflection.PropertyInfo,System.Object)">
          <source>The instance in which the specified property is declared.</source>
          <target state="translated">在其中声明指定属性的实例。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedProperty(System.Reflection.PropertyInfo,System.Object)">
          <source>Returns a value that determines whether the specified property is supported in the target <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">返回一个值，该值确定是否在目标 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 中支持指定的属性。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedProperty(System.Reflection.PropertyInfo,System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified property is supported in the target <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果在目标 <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 中支持指定的属性，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedPropertyResolver">
          <source>Gets or sets the delegate that references a method with two parameters and one return value that determines whether a specified property is supported in the target <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">获取或设置引用包含两个参数和一个返回值的方法的委托，该方法确定是否在目标 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 中支持指定的属性。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedPropertyResolver">
          <source>The delegate that references a method with two parameters and one return value that determines whether a specified property is supported in the target <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">引用包含两个参数和一个返回值的方法的委托，该方法确定是否在目标 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 中支持指定的属性。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Workflow.ComponentModel.Compiler.TypeProvider.LocalAssembly">
          <source>Gets a value that represents the locally defined <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> for this instance.</source>
          <target state="translated">获取一个值，该值表示在本地为此实例定义的 <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.Compiler.TypeProvider.LocalAssembly">
          <source>The locally defined <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> for this instance.</source>
          <target state="translated">在本地为此实例定义的 <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Workflow.ComponentModel.Compiler.TypeProvider.ReferencedAssemblies">
          <source>Gets a collection of all assemblies referenced by the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">获取由 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 引用的所有程序集的集合。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.Compiler.TypeProvider.ReferencedAssemblies">
          <source>A collection of all assemblies referenced by the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">由 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 引用的所有程序集的集合。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit(System.CodeDom.CodeCompileUnit,System.EventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> to refresh with.</source>
          <target state="translated">用来刷新的 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit(System.CodeDom.CodeCompileUnit,System.EventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventHandler" /&gt;</ph> to delegate this event to.</source>
          <target state="translated">要向其委托此事件的 <ph id="ph1">&lt;see cref="T:System.EventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit(System.CodeDom.CodeCompileUnit,System.EventHandler)">
          <source>Updates the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> reference associated with this instance.</source>
          <target state="translated">更新与此实例关联的 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> 引用。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit(System.CodeDom.CodeCompileUnit,System.EventHandler)">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</ph> is raised when this method is invoked.</source>
          <target state="translated">调用此方法时引发 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit(System.CodeDom.CodeCompileUnit,System.EventHandler)">
          <source><ph id="ph1">&lt;paramref name="codeCompileUnit" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="codeCompileUnit" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit(System.CodeDom.CodeCompileUnit,System.EventHandler)">
          <source>This instance already references the subject <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>.</source>
          <target state="translated">此实例已经引用了主题 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssembly(System.Reflection.Assembly)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> to remove from this instance.</source>
          <target state="translated">要从此实例中移除的 <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssembly(System.Reflection.Assembly)">
          <source>Removes all references to the subject <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> from this instance.</source>
          <target state="translated">从此实例中移除所有对主题 <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> 的引用。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssembly(System.Reflection.Assembly)">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</ph> is raised when this method is invoked.</source>
          <target state="translated">调用此方法时引发 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssembly(System.Reflection.Assembly)">
          <source><ph id="ph1">&lt;paramref name="assembly" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assembly" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssemblyReference(System.String)">
          <source>The path of the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> to be removed.</source>
          <target state="translated">要移除的 <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> 的路径。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssemblyReference(System.String)">
          <source>Removes a path-based <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> reference from this instance.</source>
          <target state="translated">从此实例中移除基于路径的 <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> 引用。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssemblyReference(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</ph> is raised when this method is invoked.</source>
          <target state="translated">调用此方法时引发 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssemblyReference(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveCodeCompileUnit(System.CodeDom.CodeCompileUnit)">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> to be removed.</source>
          <target state="translated">要移除的 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveCodeCompileUnit(System.CodeDom.CodeCompileUnit)">
          <source>Removes all references to the subject <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> from this instance.</source>
          <target state="translated">从此实例中移除所有对主题 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> 的引用。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveCodeCompileUnit(System.CodeDom.CodeCompileUnit)">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</ph> is raised when this method is invoked.</source>
          <target state="translated">调用此方法时引发 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveCodeCompileUnit(System.CodeDom.CodeCompileUnit)">
          <source><ph id="ph1">&lt;paramref name="codeCompileUnit" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="codeCompileUnit" /&gt;</ph> 为空引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly(System.Reflection.Assembly)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> used to set this value</source>
          <target state="translated">用于设置此值的 <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly(System.Reflection.Assembly)">
          <source>Sets the value of the local <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> to the referenced <ph id="ph2">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> .</source>
          <target state="translated">将本地 <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> 的值设置为引用的 <ph id="ph2">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly(System.Reflection.Assembly)">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</ph> is raised when this method is invoked.</source>
          <target state="translated">调用此方法时引发 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly(System.Reflection.Assembly)">
          <source>Call <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly%28System.Reflection.Assembly%29&gt;</ph> before you call <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%28System.Reflection.Assembly%29&gt;</ph> otherwise it has no affect on the <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider&gt;</ph>.</source>
          <target state="translated">应在调用 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly%28System.Reflection.Assembly%29&gt;</ph> 之前调用 <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%28System.Reflection.Assembly%29&gt;</ph>，否则，它对 <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider&gt;</ph> 没有任何影响。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> of load error exceptions keyed by the <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> that causes the <ph id="ph3">&lt;see cref="T:System.Exception" /&gt;</ph>.</source>
          <target state="translated">获取由导致 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> 键控的加载错误异常的 <ph id="ph3">&lt;see cref="T:System.Exception" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> of load error exceptions keyed by the <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> that causes the <ph id="ph3">&lt;see cref="T:System.Exception" /&gt;</ph>.</source>
          <target state="translated">由导致 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> 键控的加载错误异常的 <ph id="ph3">&lt;see cref="T:System.Exception" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors">
          <source>An updated, detached <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> is created at each reference to this property.</source>
          <target state="translated">每次引用此属性时均会创建一个更新并分离的 <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="E:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrorsChanged">
          <source>Occurs when the collection <ph id="ph1">&lt;see cref="P:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors" /&gt;</ph> is modified.</source>
          <target state="translated">当修改集合 <ph id="ph1">&lt;see cref="P:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors" /&gt;</ph> 时发生。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="E:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged">
          <source>Occurs when the collection of defined types is modified.</source>
          <target state="translated">在修改已定义类型的集合时发生。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>