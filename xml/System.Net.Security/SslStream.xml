<Type Name="SslStream" FullName="System.Net.Security.SslStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bada0e51ffc8032cc2a85028ad35057a90420171" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
    <Meta Name="ms.locfileid" Value="31911390" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SslStream : System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SslStream extends System.Net.Security.AuthenticatedStream implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.SslStream" />
  <TypeSignature Language="VB.NET" Value="Public Class SslStream&#xA;Inherits AuthenticatedStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class SslStream : System::Net::Security::AuthenticatedStream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Security.AuthenticatedStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c4145-101">提供一个用于客户端-服务器通信的流，该流使用安全套接字层 (SSL) 安全协议对服务器和（可选）客户端进行身份验证。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c4145-101">Provides a stream used for client-server communication that uses the Secure Socket Layer (SSL) security protocol to authenticate the server and optionally the client.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-102">SSL 协议帮助提供机密性和完整性检查传输使用的消息<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="c4145-102">SSL protocols help to provide confidentiality and integrity checking for messages transmitted using an <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="c4145-103">SSL 连接，如提供的<xref:System.Net.Security.SslStream>、 应时使用通信客户端和服务器之间的敏感信息。</span><span class="sxs-lookup"><span data-stu-id="c4145-103">An SSL connection, such as that provided by <xref:System.Net.Security.SslStream>, should be used when communicating sensitive information between a client and a server.</span></span> <span data-ttu-id="c4145-104">使用<xref:System.Net.Security.SslStream>有助于防止任何人读取和在网络上传输时被篡改的信息。</span><span class="sxs-lookup"><span data-stu-id="c4145-104">Using an <xref:System.Net.Security.SslStream> helps to prevent anyone from reading and tampering with information while it is in transit on the network.</span></span>  
  
 <span data-ttu-id="c4145-105"><xref:System.Net.Security.SslStream>实例将使用在创建时提供的流的数据传输<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="c4145-105">An <xref:System.Net.Security.SslStream> instance transmits data using a stream that you supply when creating the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="c4145-106">当提供此基础流时，你可以选择以指定是否关闭<xref:System.Net.Security.SslStream>也会关闭基础流。</span><span class="sxs-lookup"><span data-stu-id="c4145-106">When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.SslStream> also closes the underlying stream.</span></span> <span data-ttu-id="c4145-107">通常情况下，<xref:System.Net.Security.SslStream>类用于<xref:System.Net.Sockets.TcpClient>和<xref:System.Net.Sockets.TcpListener>类。</span><span class="sxs-lookup"><span data-stu-id="c4145-107">Typically, the <xref:System.Net.Security.SslStream> class is used with the <xref:System.Net.Sockets.TcpClient> and <xref:System.Net.Sockets.TcpListener> classes.</span></span> <span data-ttu-id="c4145-108"><xref:System.Net.Sockets.TcpClient.GetStream%2A>方法提供<xref:System.Net.Sockets.NetworkStream>适用于<xref:System.Net.Security.SslStream>类。</span><span class="sxs-lookup"><span data-stu-id="c4145-108">The <xref:System.Net.Sockets.TcpClient.GetStream%2A> method provides a <xref:System.Net.Sockets.NetworkStream> suitable for use with the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 <span data-ttu-id="c4145-109">在创建后<xref:System.Net.Security.SslStream>，服务器和 （可选） 客户端必须进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="c4145-109">After creating an <xref:System.Net.Security.SslStream>, the server and optionally, the client must be authenticated.</span></span> <span data-ttu-id="c4145-110">服务器必须提供一个 X509 证书建立的标识的概念，并可以请求，客户端也会这样。</span><span class="sxs-lookup"><span data-stu-id="c4145-110">The server must provide an X509 certificate that establishes proof of its identity and can request that the client also do so.</span></span> <span data-ttu-id="c4145-111">必须使用信息在传输之前执行身份验证<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="c4145-111">Authentication must be performed before transmitting information using an <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="c4145-112">客户端启动身份验证使用同步<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>方法，身份验证完成之前阻止，或异步<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>方法，不会阻止等待完成的身份验证。</span><span class="sxs-lookup"><span data-stu-id="c4145-112">Clients initiate authentication using the synchronous <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> methods, which do not block waiting for the authentication to complete.</span></span> <span data-ttu-id="c4145-113">服务器启动身份验证使用同步<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>或异步<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-113">Servers initiate authentication using the synchronous <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span> <span data-ttu-id="c4145-114">客户端和服务器必须启动身份验证。</span><span class="sxs-lookup"><span data-stu-id="c4145-114">Both client and server must initiate the authentication.</span></span>  
  
 <span data-ttu-id="c4145-115">安全支持提供程序 (SSPI) 通道提供程序由处理身份验证。</span><span class="sxs-lookup"><span data-stu-id="c4145-115">The authentication is handled by the Security Support Provider (SSPI) channel provider.</span></span> <span data-ttu-id="c4145-116">客户端有机会通过指定控制的服务器的证书验证<xref:System.Net.Security.RemoteCertificateValidationCallback>时创建的委托<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="c4145-116">The client is given an opportunity to control validation of the server's certificate by specifying a <xref:System.Net.Security.RemoteCertificateValidationCallback> delegate when creating an <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="c4145-117">服务器还可以通过提供控制验证<xref:System.Net.Security.RemoteCertificateValidationCallback>委托。</span><span class="sxs-lookup"><span data-stu-id="c4145-117">The server can also control validation by supplying a <xref:System.Net.Security.RemoteCertificateValidationCallback> delegate.</span></span> <span data-ttu-id="c4145-118">由委托引用的方法包括远程方的证书和 SSPI 验证证书时遇到任何错误。</span><span class="sxs-lookup"><span data-stu-id="c4145-118">The method referenced by the delegate includes the remote party's certificate and any errors SSPI encountered while validating the certificate.</span></span> <span data-ttu-id="c4145-119">请注意，是否服务器指定一个委托，该委托的方法都会调用无论是否在服务器请求客户端身份验证。</span><span class="sxs-lookup"><span data-stu-id="c4145-119">Note that if the server specifies a delegate, the delegate's method is invoked regardless of whether the server requested client authentication.</span></span> <span data-ttu-id="c4145-120">如果服务器没有请求客户端身份验证，服务器的委托方法接收 null 证书和证书错误的空数组。</span><span class="sxs-lookup"><span data-stu-id="c4145-120">If the server did not request client authentication, the server's delegate method receives a null certificate and an empty array of certificate errors.</span></span>  
  
 <span data-ttu-id="c4145-121">如果服务器需要客户端身份验证，客户端必须指定一个或多个证书进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="c4145-121">If the server requires client authentication, the client must specify one or more certificates for authentication.</span></span> <span data-ttu-id="c4145-122">在客户端有多个证书，客户端可以提供<xref:System.Net.Security.LocalCertificateSelectionCallback>委托来选择正确的证书进行服务器。</span><span class="sxs-lookup"><span data-stu-id="c4145-122">If the client has more than one certificate, the client can provide a <xref:System.Net.Security.LocalCertificateSelectionCallback> delegate to select the correct certificate for the server.</span></span> <span data-ttu-id="c4145-123">客户端的证书必须位于当前用户的"My"证书存储区。</span><span class="sxs-lookup"><span data-stu-id="c4145-123">The client's certificates must be located in the current user's "My" certificate store.</span></span> <span data-ttu-id="c4145-124">不支持通过证书的客户端身份验证<xref:System.Security.Authentication.SslProtocols.Ssl2>(SSL 版本 2) 协议。</span><span class="sxs-lookup"><span data-stu-id="c4145-124">Client authentication via certificates is not supported for the <xref:System.Security.Authentication.SslProtocols.Ssl2> (SSL version 2) protocol.</span></span>  
  
 <span data-ttu-id="c4145-125">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>，和<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="c4145-125">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and the <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="c4145-126">您应关闭此对象，并删除对它的所有引用，以便它可以通过垃圾回收器收集。</span><span class="sxs-lookup"><span data-stu-id="c4145-126">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 <span data-ttu-id="c4145-127">如果身份验证过程，也称为 SSL 握手，成功，建立服务器 （和 （可选） 客户端） 的标识和<xref:System.Net.Security.SslStream>可以由客户端和服务器使用的消息交换。</span><span class="sxs-lookup"><span data-stu-id="c4145-127">When the authentication process, also known as the SSL handshake, succeeds, the identity of the server (and optionally, the client) is established and the <xref:System.Net.Security.SslStream> can be used by the client and server to exchange messages.</span></span> <span data-ttu-id="c4145-128">前发送或接收信息，客户端和服务器应检查的安全服务和提供的级别<xref:System.Net.Security.SslStream>以确定是否协议、 算法和优势选择满足他们的完整性和保密性要求。</span><span class="sxs-lookup"><span data-stu-id="c4145-128">Before sending or receiving information, the client and server should check the security services and levels provided by the <xref:System.Net.Security.SslStream> to determine whether the protocol, algorithms, and strengths selected meet their requirements for integrity and confidentiality.</span></span> <span data-ttu-id="c4145-129">如果当前设置不能满足需求，应关闭流。</span><span class="sxs-lookup"><span data-stu-id="c4145-129">If the current settings are not sufficient, the stream should be closed.</span></span> <span data-ttu-id="c4145-130">你可以检查提供的安全服务<xref:System.Net.Security.SslStream>使用<xref:System.Net.Security.SslStream.IsEncrypted%2A>和<xref:System.Net.Security.SslStream.IsSigned%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="c4145-130">You can check the security services provided by the <xref:System.Net.Security.SslStream> using the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties.</span></span> <span data-ttu-id="c4145-131">下表显示报告用于身份验证、 加密和签名数据的加密设置的元素。</span><span class="sxs-lookup"><span data-stu-id="c4145-131">The following table shows the elements that report the cryptographic settings used for authentication, encryption and data signing.</span></span>  
  
|<span data-ttu-id="c4145-132">元素</span><span class="sxs-lookup"><span data-stu-id="c4145-132">Element</span></span>|<span data-ttu-id="c4145-133">成员</span><span class="sxs-lookup"><span data-stu-id="c4145-133">Members</span></span>|  
|-------------|-------------|  
|<span data-ttu-id="c4145-134">使用服务器和客户端，（可选） 进行身份验证的安全协议。</span><span class="sxs-lookup"><span data-stu-id="c4145-134">The security protocol used to authenticate the server and, optionally, the client.</span></span>|<span data-ttu-id="c4145-135"><xref:System.Net.Security.SslStream.SslProtocol%2A>属性和关联<xref:System.Security.Authentication.SslProtocols>枚举。</span><span class="sxs-lookup"><span data-stu-id="c4145-135">The <xref:System.Net.Security.SslStream.SslProtocol%2A> property and the associated <xref:System.Security.Authentication.SslProtocols> enumeration.</span></span>|  
|<span data-ttu-id="c4145-136">密钥交换算法。</span><span class="sxs-lookup"><span data-stu-id="c4145-136">The key exchange algorithm.</span></span>|<span data-ttu-id="c4145-137"><xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A>属性和关联<xref:System.Security.Authentication.ExchangeAlgorithmType>枚举。</span><span class="sxs-lookup"><span data-stu-id="c4145-137">The <xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A> property and the associated <xref:System.Security.Authentication.ExchangeAlgorithmType> enumeration.</span></span>|  
|<span data-ttu-id="c4145-138">消息完整性算法。</span><span class="sxs-lookup"><span data-stu-id="c4145-138">The message integrity algorithm.</span></span>|<span data-ttu-id="c4145-139"><xref:System.Net.Security.SslStream.HashAlgorithm%2A>属性和关联<xref:System.Security.Authentication.HashAlgorithmType>枚举。</span><span class="sxs-lookup"><span data-stu-id="c4145-139">The <xref:System.Net.Security.SslStream.HashAlgorithm%2A> property and the associated <xref:System.Security.Authentication.HashAlgorithmType> enumeration.</span></span>|  
|<span data-ttu-id="c4145-140">消息保密性算法。</span><span class="sxs-lookup"><span data-stu-id="c4145-140">The message confidentiality algorithm.</span></span>|<span data-ttu-id="c4145-141"><xref:System.Net.Security.SslStream.CipherAlgorithm%2A>属性和关联<xref:System.Security.Authentication.CipherAlgorithmType>枚举。</span><span class="sxs-lookup"><span data-stu-id="c4145-141">The <xref:System.Net.Security.SslStream.CipherAlgorithm%2A> property and the associated <xref:System.Security.Authentication.CipherAlgorithmType> enumeration.</span></span>|  
|<span data-ttu-id="c4145-142">所选算法的优势。</span><span class="sxs-lookup"><span data-stu-id="c4145-142">The strengths of the selected algorithms.</span></span>|<span data-ttu-id="c4145-143"><xref:System.Net.Security.SslStream.KeyExchangeStrength%2A>， <xref:System.Net.Security.SslStream.HashStrength%2A>，和<xref:System.Net.Security.SslStream.CipherStrength%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="c4145-143">The <xref:System.Net.Security.SslStream.KeyExchangeStrength%2A>, <xref:System.Net.Security.SslStream.HashStrength%2A>, and <xref:System.Net.Security.SslStream.CipherStrength%2A> properties.</span></span>|  
  
 <span data-ttu-id="c4145-144">身份验证成功后，你可以将数据发送使用同步<xref:System.Net.Security.SslStream.Write%2A>或异步<xref:System.Net.Security.SslStream.BeginWrite%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-144">After a successful authentication, you can send data using the synchronous <xref:System.Net.Security.SslStream.Write%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginWrite%2A> methods.</span></span> <span data-ttu-id="c4145-145">你可以接收的数据使用同步<xref:System.Net.Security.SslStream.Read%2A>或异步<xref:System.Net.Security.SslStream.BeginRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-145">You can receive data using the synchronous <xref:System.Net.Security.SslStream.Read%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginRead%2A> methods.</span></span>  
  
 <span data-ttu-id="c4145-146">如果指定给<xref:System.Net.Security.SslStream.%23ctor%2A>基础流应保持打开状态，你将负责完成后关闭该流使用它。</span><span class="sxs-lookup"><span data-stu-id="c4145-146">If you specified to the <xref:System.Net.Security.SslStream.%23ctor%2A> that the underlying stream should be left open, you are responsible for closing that stream when you are done using it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4145-147">如果应用程序，创建<xref:System.Net.Security.SslStream>对象使用的普通用户凭据运行，应用程序将无法访问证书安装在本地计算机存储区中，除非权限已显式提供给用户若要这样做。</span><span class="sxs-lookup"><span data-stu-id="c4145-147">If the application that creates the <xref:System.Net.Security.SslStream> object runs with the credentials of a Normal user, the application will not be able to access certificates installed in the local machine store unless permission has been explicitly given to the user to do so.</span></span>  
  
 <span data-ttu-id="c4145-148"><xref:System.Net.Security.SslStream> 假定以及任何其他超时<xref:System.IO.IOException>一个从内部流的引发时将被视为致命由其调用方。</span><span class="sxs-lookup"><span data-stu-id="c4145-148"><xref:System.Net.Security.SslStream> assumes that a timeout along with any other <xref:System.IO.IOException> when one is thrown from the inner stream will be treated as fatal by its caller.</span></span> <span data-ttu-id="c4145-149">重用<xref:System.Net.Security.SslStream>实例后超时将返回垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="c4145-149">Reusing a <xref:System.Net.Security.SslStream> instance after a timeout will return garbage.</span></span> <span data-ttu-id="c4145-150">应用程序应<xref:System.IO.Stream.Close%2A><xref:System.Net.Security.SslStream>和在这些情况下引发的异常。</span><span class="sxs-lookup"><span data-stu-id="c4145-150">An application should <xref:System.IO.Stream.Close%2A> the <xref:System.Net.Security.SslStream> and throw an exception in these cases.</span></span>  
  
 <span data-ttu-id="c4145-151">.NET Framework 4.6 包括一个新的安全功能，将阻止不安全的密码和哈希算法的连接。</span><span class="sxs-lookup"><span data-stu-id="c4145-151">The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections.</span></span> <span data-ttu-id="c4145-152">默认情况下，使用 TLS/SSL 通过例如 HttpClient、 HttpWebRequest、 FTPClient、 SmtpClient、 SslStream 等的 Api 和面向.NET Framework 4.6 的应用程序获得更安全行为。</span><span class="sxs-lookup"><span data-stu-id="c4145-152">Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.</span></span>  
  
 <span data-ttu-id="c4145-153">开发人员可能想要选择退出此行为以便保持其现有 SSL3 服务或 TLS 带 RC4 服务与互操作性。</span><span class="sxs-lookup"><span data-stu-id="c4145-153">Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services.</span></span> <span data-ttu-id="c4145-154">[这篇文章](https://support.microsoft.com/kb/3069494)说明如何修改你的代码，以便禁用新的行为。</span><span class="sxs-lookup"><span data-stu-id="c4145-154">[This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled.</span></span>  
  
 <span data-ttu-id="c4145-155">.NET Framework 4.7 将添加新的重载的方法的身份验证不指定 TLS 版本，但改为使用 TLS 版本定义中的系统默认值为 SslStreams [SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx)。</span><span class="sxs-lookup"><span data-stu-id="c4145-155">The .NET Framework 4.7 adds new overloads for the methods that authenticate SslStreams that do not specify a TLS version, but instead use the TLS version defined as the system default in [SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx).</span></span> <span data-ttu-id="c4145-156">作为一种方法能够随着时间推移，TLS 版本最佳做法更改为更高版本修改的默认值在应用中使用这些方法而无需重新生成并重新部署你的应用程序。</span><span class="sxs-lookup"><span data-stu-id="c4145-156">Use these methods in your app as a way to be able to later modify the defaults as TLS version best practice changes over time, without the need to rebuild and redeploy your app.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-157">下面的代码示例演示如何创建<xref:System.Net.Sockets.TcpListener>使用<xref:System.Net.Security.SslStream>类与客户端通信。</span><span class="sxs-lookup"><span data-stu-id="c4145-157">The following code example demonstrates creating an <xref:System.Net.Sockets.TcpListener> that uses the <xref:System.Net.Security.SslStream> class to communicate with clients.</span></span>  
  
 [!code-cpp[NclSslServerSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#0)]
 [!code-csharp[NclSslServerSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#0)]  
  
 <span data-ttu-id="c4145-158">下面的代码示例演示如何创建<xref:System.Net.Sockets.TcpClient>使用<xref:System.Net.Security.SslStream>类与服务器进行通信。</span><span class="sxs-lookup"><span data-stu-id="c4145-158">The following code example demonstrates creating a <xref:System.Net.Sockets.TcpClient> that uses the <xref:System.Net.Security.SslStream> class to communicate with a server.</span></span>  
  
 [!code-cpp[NclSslClientSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#0)]
 [!code-csharp[NclSslClientSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Security.NegotiateStream" />
    <altmember cref="T:System.Net.Security.AuthenticatedStream" />
    <altmember cref="T:System.IO.IOException" />
    <altmember cref="T:System.IO.Stream" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-159">初始化 <see cref="T:System.Net.Security.SslStream" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-159">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-160">若要防止<xref:System.Net.Security.SslStream>关闭你提供的流，使用<xref:System.Net.Security.SslStream.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="c4145-160">To prevent the <xref:System.Net.Security.SslStream> from closing the stream that you supply, use the <xref:System.Net.Security.SslStream.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="c4145-161">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.SslStream" /> 使用此对象发送和接收数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-161">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-162">使用指定的 <see cref="T:System.Net.Security.SslStream" /> 初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-162">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-163">如果在配置文件中为 encryptionpolicy，未指定值<xref:System.Net.Security.EncryptionPolicy>默认为<xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>为<xref:System.Net.Security.SslStream>构造的实例。</span><span class="sxs-lookup"><span data-stu-id="c4145-163">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="c4145-164">Null 加密的使用时是必需的加密策略设置为<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c4145-164">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4145-165">
            <paramref name="innerStream" /> 不可读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-165">
              <paramref name="innerStream" /> is not readable.</span>
          </span>
          <span data-ttu-id="c4145-166">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-166">-or-</span>
          </span>
          <span data-ttu-id="c4145-167">
            <paramref name="innerStream" /> 不可写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-167">
              <paramref name="innerStream" /> is not writable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4145-168">
            <paramref name="innerStream" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-168">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c4145-169">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-169">-or-</span>
          </span>
          <span data-ttu-id="c4145-170">
            <paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-170">
              <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="c4145-171">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.SslStream" /> 使用此对象发送和接收数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-171">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <param name="leaveInnerStreamOpen">
          <span data-ttu-id="c4145-172">一个布尔值，它指示 <see cref="T:System.IO.Stream" /> 用来发送和接收数据的 <see cref="T:System.Net.Security.SslStream" /> 对象的封闭行为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-172">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
          <span data-ttu-id="c4145-173">此参数指示内部流是否保持打开状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-173">This parameter indicates if the inner stream is left open.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-174">使用指定的 <see cref="T:System.Net.Security.SslStream" /> 和流封闭行为初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-174">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-175">当指定`true`为`leaveStreamOpen`参数，关闭<xref:System.Net.Security.SslStream>不起任何作用`innerStream`流式传输; 您必须显式关闭`innerStream`当不再需要它。</span><span class="sxs-lookup"><span data-stu-id="c4145-175">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
 <span data-ttu-id="c4145-176">如果在配置文件中为 encryptionpolicy，未指定值<xref:System.Net.Security.EncryptionPolicy>默认为<xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>为<xref:System.Net.Security.SslStream>构造的实例。</span><span class="sxs-lookup"><span data-stu-id="c4145-176">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="c4145-177">Null 加密的使用时是必需的加密策略设置为<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c4145-177">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-178">下面的代码示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="c4145-178">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
 [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4145-179">
            <paramref name="innerStream" /> 不可读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-179">
              <paramref name="innerStream" /> is not readable.</span>
          </span>
          <span data-ttu-id="c4145-180">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-180">-or-</span>
          </span>
          <span data-ttu-id="c4145-181">
            <paramref name="innerStream" /> 不可写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-181">
              <paramref name="innerStream" /> is not writable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4145-182">
            <paramref name="innerStream" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-182">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c4145-183">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-183">-or-</span>
          </span>
          <span data-ttu-id="c4145-184">
            <paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-184">
              <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen, class System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean, userCertificateValidationCallback As RemoteCertificateValidationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen, System::Net::Security::RemoteCertificateValidationCallback ^ userCertificateValidationCallback);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
        <Parameter Name="userCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="c4145-185">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.SslStream" /> 使用此对象发送和接收数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-185">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <param name="leaveInnerStreamOpen">
          <span data-ttu-id="c4145-186">一个布尔值，它指示 <see cref="T:System.IO.Stream" /> 用来发送和接收数据的 <see cref="T:System.Net.Security.SslStream" /> 对象的封闭行为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-186">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
          <span data-ttu-id="c4145-187">此参数指示内部流是否保持打开状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-187">This parameter indicates if the inner stream is left open.</span>
          </span>
        </param>
        <param name="userCertificateValidationCallback">
          <span data-ttu-id="c4145-188">
            <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> 委托，负责验证远程方提供的证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-188">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-189">使用指定的 <see cref="T:System.Net.Security.SslStream" />、流关闭行为和证书验证委托初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-189">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />, stream closure behavior and certificate validation delegate.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-190">当指定`true`为`leaveStreamOpen`参数，关闭<xref:System.Net.Security.SslStream>不起任何作用`innerStream`流式传输; 您必须显式关闭`innerStream`当不再需要它。</span><span class="sxs-lookup"><span data-stu-id="c4145-190">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
 <span data-ttu-id="c4145-191">`userCertificateValidationCallback`委托的`certificateErrors`参数中包含的任何返回的通道安全支持提供程序接口 (SSPI) 的 Windows 错误代码。</span><span class="sxs-lookup"><span data-stu-id="c4145-191">The `userCertificateValidationCallback` delegate's `certificateErrors` argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI).</span></span> <span data-ttu-id="c4145-192">由调用的方法的返回值`userCertificateValidationCallback`委托确定身份验证是否成功。</span><span class="sxs-lookup"><span data-stu-id="c4145-192">The return value of the method invoked by the `userCertificateValidationCallback` delegate determines whether authentication succeeds.</span></span>  
  
 <span data-ttu-id="c4145-193">安全协议和加密算法包已选择时`userCertificateValidationCallback`调用委托的方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-193">The security protocol and cryptographic algorithms are already selected when the `userCertificateValidationCallback` delegate's method is invoked.</span></span> <span data-ttu-id="c4145-194">该方法可用于确定所选的加密算法和优势是否能够满足你的应用程序。</span><span class="sxs-lookup"><span data-stu-id="c4145-194">You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application.</span></span> <span data-ttu-id="c4145-195">如果不是，该方法应返回`false`以防止<xref:System.Net.Security.SslStream>从正在创建。</span><span class="sxs-lookup"><span data-stu-id="c4145-195">If not, the method should return `false` to prevent the <xref:System.Net.Security.SslStream> from being created.</span></span>  
  
 <span data-ttu-id="c4145-196">如果在配置文件中为 encryptionpolicy，未指定值<xref:System.Net.Security.EncryptionPolicy>默认为<xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>为<xref:System.Net.Security.SslStream>构造的实例。</span><span class="sxs-lookup"><span data-stu-id="c4145-196">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="c4145-197">Null 加密的使用时是必需的加密策略设置为<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c4145-197">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4145-198">框架缓存 SSL 会话，因为它们创建，并尝试尽可能重用为新请求，缓存的会话。</span><span class="sxs-lookup"><span data-stu-id="c4145-198">The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</span></span> <span data-ttu-id="c4145-199">当尝试重复使用的 SSL 会话，框架将使用的第一个元素<xref:System.Net.HttpWebRequest.ClientCertificates%2A>（如果没有一个），或尝试重用匿名会话，如果<xref:System.Net.HttpWebRequest.ClientCertificates%2A>为空。</span><span class="sxs-lookup"><span data-stu-id="c4145-199">When attempting to reuse an SSL session, the Framework uses the first element of <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (if there is one), or tries to reuse an anonymous sessions if <xref:System.Net.HttpWebRequest.ClientCertificates%2A> is empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4145-200">客户端证书不支持 SSL 版本 2 协议中。</span><span class="sxs-lookup"><span data-stu-id="c4145-200">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-201">下面的代码示例创建<xref:System.Net.Security.SslStream>并启动身份验证的客户端部分。</span><span class="sxs-lookup"><span data-stu-id="c4145-201">The following code example creates an <xref:System.Net.Security.SslStream> and initiates the client portion of the authentication.</span></span>  
  
 [!code-cpp[NclSslClientSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#4)]
 [!code-csharp[NclSslClientSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4145-202">
            <paramref name="innerStream" /> 不可读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-202">
              <paramref name="innerStream" /> is not readable.</span>
          </span>
          <span data-ttu-id="c4145-203">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-203">-or-</span>
          </span>
          <span data-ttu-id="c4145-204">
            <paramref name="innerStream" /> 不可写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-204">
              <paramref name="innerStream" /> is not writable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4145-205">
            <paramref name="innerStream" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-205">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c4145-206">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-206">-or-</span>
          </span>
          <span data-ttu-id="c4145-207">
            <paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-207">
              <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen, class System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, class System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean, userCertificateValidationCallback As RemoteCertificateValidationCallback, userCertificateSelectionCallback As LocalCertificateSelectionCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen, System::Net::Security::RemoteCertificateValidationCallback ^ userCertificateValidationCallback, System::Net::Security::LocalCertificateSelectionCallback ^ userCertificateSelectionCallback);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
        <Parameter Name="userCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" />
        <Parameter Name="userCertificateSelectionCallback" Type="System.Net.Security.LocalCertificateSelectionCallback" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="c4145-208">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.SslStream" /> 使用此对象发送和接收数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-208">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <param name="leaveInnerStreamOpen">
          <span data-ttu-id="c4145-209">一个布尔值，它指示 <see cref="T:System.IO.Stream" /> 用来发送和接收数据的 <see cref="T:System.Net.Security.SslStream" /> 对象的封闭行为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-209">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
          <span data-ttu-id="c4145-210">此参数指示内部流是否保持打开状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-210">This parameter indicates if the inner stream is left open.</span>
          </span>
        </param>
        <param name="userCertificateValidationCallback">
          <span data-ttu-id="c4145-211">
            <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> 委托，负责验证远程方提供的证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-211">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</span>
          </span>
        </param>
        <param name="userCertificateSelectionCallback">
          <span data-ttu-id="c4145-212">
            <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> 委托，负责选择用于身份验证的证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-212">A <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> delegate responsible for selecting the certificate used for authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-213">使用指定的 <see cref="T:System.Net.Security.SslStream" />、流关闭行为、证书验证委托和证书选择委托初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-213">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />, stream closure behavior, certificate validation delegate and certificate selection delegate.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-214">当指定`true`为`leaveStreamOpen`参数，关闭<xref:System.Net.Security.SslStream>不起任何作用`innerStream`流式传输; 您必须显式关闭`innerStream`当不再需要它。</span><span class="sxs-lookup"><span data-stu-id="c4145-214">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
 <span data-ttu-id="c4145-215">`userCertificateValidationCallback`委托的`certificateErrors`参数中包含的任何返回的通道安全支持提供程序接口 (SSPI) 的 Windows 错误代码。</span><span class="sxs-lookup"><span data-stu-id="c4145-215">The `userCertificateValidationCallback` delegate's `certificateErrors` argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI).</span></span> <span data-ttu-id="c4145-216">由调用的方法的返回值`userCertificateValidationCallback`委托确定身份验证是否成功。</span><span class="sxs-lookup"><span data-stu-id="c4145-216">The return value of the method invoked by the `userCertificateValidationCallback` delegate determines whether authentication succeeds.</span></span>  
  
 <span data-ttu-id="c4145-217">安全协议和加密算法包已选择时`userCertificateValidationCallback`调用委托的方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-217">The security protocol and cryptographic algorithms are already selected when the `userCertificateValidationCallback` delegate's method is invoked.</span></span> <span data-ttu-id="c4145-218">该方法可用于确定所选的加密算法和优势是否能够满足你的应用程序。</span><span class="sxs-lookup"><span data-stu-id="c4145-218">You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application.</span></span> <span data-ttu-id="c4145-219">如果不是，该方法应返回`false`以防止<xref:System.Net.Security.SslStream>从正在创建。</span><span class="sxs-lookup"><span data-stu-id="c4145-219">If not, the method should return `false` to prevent the <xref:System.Net.Security.SslStream> from being created.</span></span>  
  
 <span data-ttu-id="c4145-220">`userCertificateSelectionCallback`你的应用程序具有多个证书，并动态必须选择一个证书时，委托很有用。</span><span class="sxs-lookup"><span data-stu-id="c4145-220">The `userCertificateSelectionCallback` delegate is useful when your application has multiple certificates and must dynamically choose a certificate.</span></span> <span data-ttu-id="c4145-221">"MY"存储中的证书将传递到由委托调用的方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-221">Certificates in the "MY" store are passed to the method invoked by the delegate.</span></span>  
  
 <span data-ttu-id="c4145-222">如果在配置文件中为 encryptionpolicy，未指定值<xref:System.Net.Security.EncryptionPolicy>默认为<xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>为<xref:System.Net.Security.SslStream>构造的实例。</span><span class="sxs-lookup"><span data-stu-id="c4145-222">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="c4145-223">Null 加密的使用时是必需的加密策略设置为<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c4145-223">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4145-224">框架缓存 SSL 会话，因为它们创建，并尝试尽可能重用为新请求，缓存的会话。</span><span class="sxs-lookup"><span data-stu-id="c4145-224">The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</span></span> <span data-ttu-id="c4145-225">当尝试重复使用的 SSL 会话，框架将使用 P:System.Net.HttpWebRequest.ClientCertificates （如果存在），第一个元素或尝试重用匿名会话时为空。</span><span class="sxs-lookup"><span data-stu-id="c4145-225">When attempting to reuse an SSL session, the Framework uses the first element of P:System.Net.HttpWebRequest.ClientCertificates (if there is one), or tries to reuse an anonymous sessions if P:System.Net.HttpWebRequest.ClientCertificates is empty.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-226">下面的代码示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="c4145-226">The following code example demonstrates calling this constructor.</span></span> <span data-ttu-id="c4145-227">此示例摘自更大的示例为提供<xref:System.Net.Security.SslStream>类。</span><span class="sxs-lookup"><span data-stu-id="c4145-227">This example is part of a larger example provided for the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 [!code-cpp[NclSslClientAsync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#6)]
 [!code-csharp[NclSslClientAsync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4145-228">
            <paramref name="innerStream" /> 不可读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-228">
              <paramref name="innerStream" /> is not readable.</span>
          </span>
          <span data-ttu-id="c4145-229">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-229">-or-</span>
          </span>
          <span data-ttu-id="c4145-230">
            <paramref name="innerStream" /> 不可写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-230">
              <paramref name="innerStream" /> is not writable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4145-231">
            <paramref name="innerStream" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-231">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c4145-232">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-232">-or-</span>
          </span>
          <span data-ttu-id="c4145-233">
            <paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-233">
              <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, System.Net.Security.EncryptionPolicy encryptionPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen, class System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, class System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, valuetype System.Net.Security.EncryptionPolicy encryptionPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen, System::Net::Security::RemoteCertificateValidationCallback ^ userCertificateValidationCallback, System::Net::Security::LocalCertificateSelectionCallback ^ userCertificateSelectionCallback, System::Net::Security::EncryptionPolicy encryptionPolicy);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoLimitation("encryptionPolicy is ignored")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
        <Parameter Name="userCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" />
        <Parameter Name="userCertificateSelectionCallback" Type="System.Net.Security.LocalCertificateSelectionCallback" />
        <Parameter Name="encryptionPolicy" Type="System.Net.Security.EncryptionPolicy" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="c4145-234">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.SslStream" /> 使用此对象发送和接收数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-234">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <param name="leaveInnerStreamOpen">
          <span data-ttu-id="c4145-235">一个布尔值，它指示 <see cref="T:System.IO.Stream" /> 用来发送和接收数据的 <see cref="T:System.Net.Security.SslStream" /> 对象的封闭行为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-235">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
          <span data-ttu-id="c4145-236">此参数指示内部流是否保持打开状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-236">This parameter indicates if the inner stream is left open.</span>
          </span>
        </param>
        <param name="userCertificateValidationCallback">
          <span data-ttu-id="c4145-237">
            <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> 委托，负责验证远程方提供的证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-237">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</span>
          </span>
        </param>
        <param name="userCertificateSelectionCallback">
          <span data-ttu-id="c4145-238">
            <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> 委托，负责选择用于身份验证的证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-238">A <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> delegate responsible for selecting the certificate used for authentication.</span>
          </span>
        </param>
        <param name="encryptionPolicy">
          <span data-ttu-id="c4145-239">要使用的 <see cref="T:System.Net.Security.EncryptionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-239">The <see cref="T:System.Net.Security.EncryptionPolicy" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-240">使用指定的 <see cref="T:System.Net.Security.SslStream" /> 初始化 <see cref="T:System.IO.Stream" /> 类的新实例</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-240">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" /></span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-241">时，Null 加密的使用是必需`encryptionPolicy`参数设置为<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c4145-241">The use of the Null cipher is required when the `encryptionPolicy` parameter is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4145-242">
            <paramref name="innerStream" /> 不可读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-242">
              <paramref name="innerStream" /> is not readable.</span>
          </span>
          <span data-ttu-id="c4145-243">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-243">-or-</span>
          </span>
          <span data-ttu-id="c4145-244">
            <paramref name="innerStream" /> 不可写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-244">
              <paramref name="innerStream" /> is not writable.</span>
          </span>
          <span data-ttu-id="c4145-245">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-245">-or-</span>
          </span>
          <span data-ttu-id="c4145-246">
            <paramref name="encryptionPolicy" /> 无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-246">
              <paramref name="encryptionPolicy" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4145-247">
            <paramref name="innerStream" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-247">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c4145-248">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-248">-or-</span>
          </span>
          <span data-ttu-id="c4145-249">
            <paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-249">
              <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-250">对客户端-服务器连接的客户端进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-250">Authenticate the client side of a client-server connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (string targetHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(string targetHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (targetHost As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::String ^ targetHost);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClient(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="c4145-251">共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-251">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-252">由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-252">Called by clients to authenticate the server and optionally the client in a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]<span data-ttu-id="c4145-253"> 任何客户端证书身份验证中不使用。</span><span class="sxs-lookup"><span data-stu-id="c4145-253"> No client certificates are used in the authentication.</span></span> <span data-ttu-id="c4145-254">不会在身份验证过程检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="c4145-254">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="c4145-255">为指定的值`targetHost`上服务器的证书的名称必须匹配。</span><span class="sxs-lookup"><span data-stu-id="c4145-255">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="c4145-256">当身份验证成功时，必须检查<xref:System.Net.Security.SslStream.IsEncrypted%2A>和<xref:System.Net.Security.SslStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="c4145-256">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="c4145-257">检查<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="c4145-257">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="c4145-258">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="c4145-258">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="c4145-259">您应关闭此对象，并删除对它的所有引用，以便它可以通过垃圾回收器收集。</span><span class="sxs-lookup"><span data-stu-id="c4145-259">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4145-260">
            <paramref name="targetHost" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-260">
              <paramref name="targetHost" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="c4145-261">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-261">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c4145-262">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-262">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="c4145-263">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-263">-or-</span>
          </span>
          <span data-ttu-id="c4145-264">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-264">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="c4145-265">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-265">-or-</span>
          </span>
          <span data-ttu-id="c4145-266">身份验证已在进行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-266">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c4145-267">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-267">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (targetHost As String, clientCertificates As X509CertificateCollection, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, bool checkCertificateRevocation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="c4145-268">将共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-268">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="clientCertificates">
          <span data-ttu-id="c4145-269">包含客户端证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-269">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="c4145-270">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-270">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-271">由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-271">Called by clients to authenticate the server and optionally the client in a client-server connection.</span>
          </span>
          <span data-ttu-id="c4145-272">身份验证过程使用指定的证书集合和系统默认的 SSL 协议。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-272">The authentication process uses the specified certificate collection, and the system default SSL protocol.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="c4145-273">当身份验证成功时，必须检查<xref:System.Net.Security.SslStream.IsEncrypted%2A>和<xref:System.Net.Security.SslStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="c4145-273">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="c4145-274">检查<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="c4145-274">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="c4145-275">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="c4145-275">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="c4145-276">您应关闭此对象，并删除对它的所有引用，以便它可以通过垃圾回收器收集。</span><span class="sxs-lookup"><span data-stu-id="c4145-276">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4145-277">客户端证书不支持 SSL 版本 2 协议中。</span><span class="sxs-lookup"><span data-stu-id="c4145-277">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (targetHost As String, clientCertificates As X509CertificateCollection, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="c4145-278">将共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-278">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="clientCertificates">
          <span data-ttu-id="c4145-279">包含客户端证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-279">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span>
          </span>
        </param>
        <param name="enabledSslProtocols">
          <span data-ttu-id="c4145-280">代表用于身份验证的协议的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-280">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="c4145-281">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-281">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-282">由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-282">Called by clients to authenticate the server and optionally the client in a client-server connection.</span>
          </span>
          <span data-ttu-id="c4145-283">身份验证过程使用指定的证书集合和 SSL 协议。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-283">The authentication process uses the specified certificate collection and SSL protocol.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="c4145-284">当身份验证成功时，必须检查<xref:System.Net.Security.SslStream.IsEncrypted%2A>和<xref:System.Net.Security.SslStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="c4145-284">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="c4145-285">检查<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="c4145-285">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="c4145-286">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="c4145-286">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="c4145-287">您应关闭此对象，并删除对它的所有引用，以便它可以通过垃圾回收器收集。</span><span class="sxs-lookup"><span data-stu-id="c4145-287">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4145-288">客户端证书不支持 SSL 版本 2 协议中。</span><span class="sxs-lookup"><span data-stu-id="c4145-288">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClientAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-289">对客户端-服务器连接中的客户端进行身份验证以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-289">Authenticate the client side of a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(string targetHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (targetHost As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::String ^ targetHost);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClientAsync(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="c4145-290">共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-290">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-291">由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证，此为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-291">Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4145-292">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-292">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="c4145-293">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-293">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]<span data-ttu-id="c4145-294"> 任何客户端证书身份验证中不使用。</span><span class="sxs-lookup"><span data-stu-id="c4145-294"> No client certificates are used in the authentication.</span></span> <span data-ttu-id="c4145-295">不会在身份验证过程检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="c4145-295">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="c4145-296">为指定的值`targetHost`上服务器的证书的名称必须匹配。</span><span class="sxs-lookup"><span data-stu-id="c4145-296">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="c4145-297">当身份验证成功时，必须检查<xref:System.Net.Security.SslStream.IsEncrypted%2A>和<xref:System.Net.Security.SslStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="c4145-297">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="c4145-298">检查<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="c4145-298">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="c4145-299">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="c4145-299">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="c4145-300">您应关闭此对象，并删除对它的所有引用，以便它可以通过垃圾回收器收集。</span><span class="sxs-lookup"><span data-stu-id="c4145-300">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4145-301">
            <paramref name="targetHost" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-301">
              <paramref name="targetHost" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="c4145-302">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-302">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c4145-303">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-303">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="c4145-304">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-304">-or-</span>
          </span>
          <span data-ttu-id="c4145-305">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-305">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="c4145-306">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-306">-or-</span>
          </span>
          <span data-ttu-id="c4145-307">身份验证已在进行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-307">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c4145-308">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-308">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.Security.SslClientAuthenticationOptions sslClientAuthenticationOptions, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.Security.SslClientAuthenticationOptions sslClientAuthenticationOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.Net.Security.SslClientAuthenticationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::Security::SslClientAuthenticationOptions ^ sslClientAuthenticationOptions, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sslClientAuthenticationOptions" Type="System.Net.Security.SslClientAuthenticationOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sslClientAuthenticationOptions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (targetHost As String, clientCertificates As X509CertificateCollection, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, bool checkCertificateRevocation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="c4145-309">将共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-309">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="clientCertificates">
          <span data-ttu-id="c4145-310">包含客户端证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-310">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="c4145-311">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-311">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-312">由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证，此为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-312">Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="c4145-313">身份验证过程使用指定的证书集合和系统默认的 SSL 协议。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-313">The authentication process uses the specified certificate collection and the system default SSL protocol.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4145-314">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-314">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="c4145-315">当身份验证成功时，必须检查<xref:System.Net.Security.SslStream.IsEncrypted%2A>和<xref:System.Net.Security.SslStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="c4145-315">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="c4145-316">检查<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="c4145-316">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="c4145-317">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="c4145-317">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="c4145-318">您应关闭此对象，并删除对它的所有引用，以便它可以通过垃圾回收器收集。</span><span class="sxs-lookup"><span data-stu-id="c4145-318">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4145-319">客户端证书不支持 SSL 版本 2 协议中。</span><span class="sxs-lookup"><span data-stu-id="c4145-319">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (targetHost As String, clientCertificates As X509CertificateCollection, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="c4145-320">将共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-320">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="clientCertificates">
          <span data-ttu-id="c4145-321">包含客户端证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-321">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span>
          </span>
        </param>
        <param name="enabledSslProtocols">
          <span data-ttu-id="c4145-322">代表用于身份验证的协议的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-322">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="c4145-323">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-323">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-324">由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证，此为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-324">Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="c4145-325">身份验证过程使用指定的证书集合和 SSL 协议。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-325">The authentication process uses the specified certificate collection and SSL protocol.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4145-326">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-326">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="c4145-327">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-327">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="c4145-328">当身份验证成功时，必须检查<xref:System.Net.Security.SslStream.IsEncrypted%2A>和<xref:System.Net.Security.SslStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="c4145-328">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="c4145-329">检查<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="c4145-329">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="c4145-330">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="c4145-330">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="c4145-331">您应关闭此对象，并删除对它的所有引用，以便它可以通过垃圾回收器收集。</span><span class="sxs-lookup"><span data-stu-id="c4145-331">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4145-332">客户端证书不支持 SSL 版本 2 协议中。</span><span class="sxs-lookup"><span data-stu-id="c4145-332">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-333">服务器调用此方法，以便对客户端-服务器连接中的服务器及客户端（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-333">Called by servers to authenticate the server and optionally the client in a client-server connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (serverCertificate As X509Certificate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="c4145-334">用于对服务器进行身份验证的证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-334">The certificate used to authenticate the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-335">服务器调用此方法，以便使用指定的证书对客户端-服务器连接中的服务器及客户端（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-335">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]<span data-ttu-id="c4145-336"> 不会在身份验证过程检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="c4145-336"> The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="c4145-337">客户端不需要提供身份验证证书。</span><span class="sxs-lookup"><span data-stu-id="c4145-337">The client is not required to provide a certificate for authentication.</span></span>  
  
 <span data-ttu-id="c4145-338">此方法阻止，直至该操作完成。</span><span class="sxs-lookup"><span data-stu-id="c4145-338">This method blocks until the operation completes.</span></span> <span data-ttu-id="c4145-339">若要防止在操作完成之前一直阻止，使用之一<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="c4145-339">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="c4145-340">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="c4145-340">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="c4145-341">您应关闭此对象，并删除对它的所有引用，以便它可以通过垃圾回收器收集。</span><span class="sxs-lookup"><span data-stu-id="c4145-341">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4145-342">
            <paramref name="serverCertificate" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-342">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="c4145-343">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-343">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c4145-344">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-344">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="c4145-345">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-345">-or-</span>
          </span>
          <span data-ttu-id="c4145-346">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了客户端身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-346">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="c4145-347">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-347">-or-</span>
          </span>
          <span data-ttu-id="c4145-348">身份验证已在进行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-348">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c4145-349">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-349">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="c4145-350">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-350">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="c4145-351">用于对服务器进行身份验证的 X509Certificate 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-351">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="clientCertificateRequired">
          <span data-ttu-id="c4145-352">一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-352">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span>
          </span>
          <span data-ttu-id="c4145-353">请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-353">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="c4145-354">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-354">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-355">由服务器调用，以使用指定的证书、要求和系统默认安全协议在客户端 - 服务器连接中对服务器和客户端（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-355">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates and requirements, and using the sytem default security protocol.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="c4145-356">此方法阻止，直至该操作完成。</span><span class="sxs-lookup"><span data-stu-id="c4145-356">This method blocks until the operation completes.</span></span> <span data-ttu-id="c4145-357">若要防止在操作完成之前一直阻止，使用之一<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="c4145-357">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="c4145-358">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="c4145-358">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="c4145-359">您应关闭此对象，并删除对它的所有引用，以便它可以通过垃圾回收器收集。</span><span class="sxs-lookup"><span data-stu-id="c4145-359">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4145-360">
            <paramref name="serverCertificate" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-360">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="c4145-361">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-361">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c4145-362">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-362">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="c4145-363">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-363">-or-</span>
          </span>
          <span data-ttu-id="c4145-364">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了客户端身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-364">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="c4145-365">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-365">-or-</span>
          </span>
          <span data-ttu-id="c4145-366">身份验证已在进行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-366">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c4145-367">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-367">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="c4145-368">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-368">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="c4145-369">用于对服务器进行身份验证的 X509Certificate 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-369">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="clientCertificateRequired">
          <span data-ttu-id="c4145-370">一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-370">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span>
          </span>
          <span data-ttu-id="c4145-371">请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-371">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span>
          </span>
        </param>
        <param name="enabledSslProtocols">
          <span data-ttu-id="c4145-372">代表用于身份验证的协议的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-372">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="c4145-373">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-373">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-374">由服务器调用，以使用指定的证书、要求和安全协议在客户端 - 服务器连接中对服务器和客户端（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-374">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="c4145-375">此方法阻止，直至该操作完成。</span><span class="sxs-lookup"><span data-stu-id="c4145-375">This method blocks until the operation completes.</span></span> <span data-ttu-id="c4145-376">若要防止在操作完成之前一直阻止，使用之一<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="c4145-376">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="c4145-377">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="c4145-377">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="c4145-378">您应关闭此对象，并删除对它的所有引用，以便它可以通过垃圾回收器收集。</span><span class="sxs-lookup"><span data-stu-id="c4145-378">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4145-379">
            <paramref name="serverCertificate" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-379">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4145-380">
            <paramref name="enabledSslProtocols" /> 不是有效的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-380">
              <paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="c4145-381">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-381">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c4145-382">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-382">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="c4145-383">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-383">-or-</span>
          </span>
          <span data-ttu-id="c4145-384">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了客户端身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-384">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="c4145-385">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-385">-or-</span>
          </span>
          <span data-ttu-id="c4145-386">身份验证已在进行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-386">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c4145-387">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-387">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="c4145-388">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-388">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-389">服务器调用此方法，对客户端-服务器连接中的服务器及客户端（可选）进行身份验证以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-389">Called by servers to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (serverCertificate As X509Certificate) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="c4145-390">用于对服务器进行身份验证的证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-390">The certificate used to authenticate the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-391">服务器调用此方法，使用指定的证书对客户端-服务器连接中的服务器及客户端（可选）进行身份验证以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-391">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4145-392">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-392">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="c4145-393">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-393">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="c4145-394">此方法进行身份验证使用<xref:System.Security.Authentication.SslProtocols.Default>。</span><span class="sxs-lookup"><span data-stu-id="c4145-394">This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>.</span></span> <span data-ttu-id="c4145-395">不会在身份验证过程检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="c4145-395">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="c4145-396">客户端不需要提供身份验证证书。</span><span class="sxs-lookup"><span data-stu-id="c4145-396">The client is not required to provide a certificate for authentication.</span></span>  
  
 <span data-ttu-id="c4145-397">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="c4145-397">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="c4145-398">您应关闭此对象，并删除对它的所有引用，以便它可以通过垃圾回收器收集。</span><span class="sxs-lookup"><span data-stu-id="c4145-398">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4145-399">
            <paramref name="serverCertificate" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-399">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="c4145-400">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-400">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c4145-401">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-401">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="c4145-402">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-402">-or-</span>
          </span>
          <span data-ttu-id="c4145-403">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了客户端身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-403">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="c4145-404">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-404">-or-</span>
          </span>
          <span data-ttu-id="c4145-405">身份验证已在进行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-405">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c4145-406">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-406">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="c4145-407">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-407">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.Security.SslServerAuthenticationOptions sslServerAuthenticationOptions, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.Security.SslServerAuthenticationOptions sslServerAuthenticationOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Net.Security.SslServerAuthenticationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::Security::SslServerAuthenticationOptions ^ sslServerAuthenticationOptions, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sslServerAuthenticationOptions" Type="System.Net.Security.SslServerAuthenticationOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sslServerAuthenticationOptions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="c4145-408">用于对服务器进行身份验证的 X509Certificate 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-408">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="clientCertificateRequired">
          <span data-ttu-id="c4145-409">一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-409">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span>
          </span>
          <span data-ttu-id="c4145-410">请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-410">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="c4145-411">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-411">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-412">由服务器调用，以通过异步操作的形式使用指定的证书、要求和安全协议对客户端 - 服务器连接中的服务器和客户端（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-412">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4145-413">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-413">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="c4145-414">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="c4145-414">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="c4145-415">您应关闭此对象，并删除对它的所有引用，以便它可以通过垃圾回收器收集。</span><span class="sxs-lookup"><span data-stu-id="c4145-415">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="c4145-416">用于对服务器进行身份验证的 X509Certificate 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-416">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="clientCertificateRequired">
          <span data-ttu-id="c4145-417">一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-417">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span>
          </span>
          <span data-ttu-id="c4145-418">请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-418">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span>
          </span>
        </param>
        <param name="enabledSslProtocols">
          <span data-ttu-id="c4145-419">代表用于身份验证的协议的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-419">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="c4145-420">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-420">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-421">由服务器调用，以通过异步操作的形式使用指定的证书、要求和安全协议对客户端 - 服务器连接中的服务器和客户端（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-421">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4145-422">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-422">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="c4145-423">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-423">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="c4145-424">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="c4145-424">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="c4145-425">您应关闭此对象，并删除对它的所有引用，以便它可以通过垃圾回收器收集。</span><span class="sxs-lookup"><span data-stu-id="c4145-425">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-426">开始一个操作，以对客户端-服务器连接中的客户端进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-426">Begins an operation to authenticate the client side of a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-427">正在进行身份验证时，此方法的重载不会阻止。</span><span class="sxs-lookup"><span data-stu-id="c4145-427">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="c4145-428">若要阻止等待身份验证完成时，请使用之一<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-428">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(string targetHost, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::String ^ targetHost, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="c4145-429">共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-429">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="c4145-430">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-430">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="c4145-431">一个用户定义对象，其中包含操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-431">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="c4145-432">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-432">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-433">客户端调用此方法，以便开始一个异步操作，对服务器及客户端（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-433">Called by clients to begin an asynchronous operation to authenticate the server and optionally the client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4145-434">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-434">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]<span data-ttu-id="c4145-435"> 任何客户端证书身份验证中不使用。</span><span class="sxs-lookup"><span data-stu-id="c4145-435"> No client certificates are used in the authentication.</span></span> <span data-ttu-id="c4145-436">不会在身份验证过程检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="c4145-436">The certificate revocation list is not checked during authentication.</span></span>  
  
 <span data-ttu-id="c4145-437">为指定的值`targetHost`上服务器的证书的名称必须匹配。</span><span class="sxs-lookup"><span data-stu-id="c4145-437">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="c4145-438">必须通过调用完成异步身份验证操作<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-438">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="c4145-439">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="c4145-439">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="c4145-440">在操作完成时，此方法不会阻止。</span><span class="sxs-lookup"><span data-stu-id="c4145-440">This method does not block while the operation completes.</span></span> <span data-ttu-id="c4145-441">若要阻止该操作完成之前，请使用之一<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="c4145-441">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="c4145-442">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="c4145-442">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="c4145-443">如果你收到<xref:System.Security.Authentication.AuthenticationException>，则此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="c4145-443">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="c4145-444">您应关闭此对象，并删除对它的所有引用，以便它可以通过垃圾回收器收集。</span><span class="sxs-lookup"><span data-stu-id="c4145-444">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4145-445">
            <paramref name="targetHost" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-445">
              <paramref name="targetHost" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="c4145-446">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-446">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c4145-447">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-447">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="c4145-448">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-448">-or-</span>
          </span>
          <span data-ttu-id="c4145-449">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-449">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="c4145-450">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-450">-or-</span>
          </span>
          <span data-ttu-id="c4145-451">身份验证已在进行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-451">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c4145-452">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-452">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="c4145-453">共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-453">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="clientCertificates">
          <span data-ttu-id="c4145-454">
            <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> 包含客户端证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-454">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> containing client certificates.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="c4145-455">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-455">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="c4145-456">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-456">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="c4145-457">一个用户定义对象，其中包含操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-457">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="c4145-458">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-458">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-459">由客户端调用，以使用指定的证书和系统默认安全协议开始对服务器和客户端（可选）异步进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-459">Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and the system default security protocol.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4145-460">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-460">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="c4145-461">为指定的值`targetHost`上服务器的证书的名称必须匹配。</span><span class="sxs-lookup"><span data-stu-id="c4145-461">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="c4145-462">必须通过调用完成异步身份验证操作<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-462">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="c4145-463">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="c4145-463">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="c4145-464">在操作完成时，此方法不会阻止。</span><span class="sxs-lookup"><span data-stu-id="c4145-464">This method does not block while the operation completes.</span></span> <span data-ttu-id="c4145-465">若要阻止该操作完成之前，请使用之一<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="c4145-465">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="c4145-466">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="c4145-466">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="c4145-467">如果你收到<xref:System.Security.Authentication.AuthenticationException>，则此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="c4145-467">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="c4145-468">您应关闭此对象，并删除对它的所有引用，以便它可以通过垃圾回收器收集。</span><span class="sxs-lookup"><span data-stu-id="c4145-468">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4145-469">客户端证书不支持 SSL 版本 2 协议中。</span><span class="sxs-lookup"><span data-stu-id="c4145-469">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4145-470">
            <paramref name="targetHost" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-470">
              <paramref name="targetHost" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="c4145-471">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-471">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c4145-472">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-472">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="c4145-473">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-473">-or-</span>
          </span>
          <span data-ttu-id="c4145-474">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-474">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="c4145-475">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-475">-or-</span>
          </span>
          <span data-ttu-id="c4145-476">身份验证已在进行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-476">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c4145-477">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-477">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="c4145-478">共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-478">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="clientCertificates">
          <span data-ttu-id="c4145-479">
            <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> 包含客户端证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-479">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> containing client certificates.</span>
          </span>
        </param>
        <param name="enabledSslProtocols">
          <span data-ttu-id="c4145-480">代表用于身份验证的协议的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-480">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="c4145-481">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-481">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="c4145-482">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-482">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="c4145-483">一个用户定义对象，其中包含操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-483">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="c4145-484">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-484">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-485">客户端调用此方法，以便开始一个异步操作，使用指定的证书和安全协议对服务器及客户端（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-485">Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and security protocol.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4145-486">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-486">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="c4145-487">为指定的值`targetHost`上服务器的证书的名称必须匹配。</span><span class="sxs-lookup"><span data-stu-id="c4145-487">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="c4145-488">必须通过调用完成异步身份验证操作<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-488">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="c4145-489">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="c4145-489">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="c4145-490">在操作完成时，此方法不会阻止。</span><span class="sxs-lookup"><span data-stu-id="c4145-490">This method does not block while the operation completes.</span></span> <span data-ttu-id="c4145-491">若要阻止该操作完成之前，请使用之一<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="c4145-491">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="c4145-492">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="c4145-492">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="c4145-493">如果你收到<xref:System.Security.Authentication.AuthenticationException>，则此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="c4145-493">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="c4145-494">您应关闭此对象，并删除对它的所有引用，以便它可以通过垃圾回收器收集。</span><span class="sxs-lookup"><span data-stu-id="c4145-494">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4145-495">客户端证书不支持 SSL 版本 2 协议中。</span><span class="sxs-lookup"><span data-stu-id="c4145-495">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4145-496">
            <paramref name="targetHost" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-496">
              <paramref name="targetHost" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4145-497">
            <paramref name="enabledSslProtocols" /> 不是有效的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-497">
              <paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="c4145-498">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-498">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c4145-499">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-499">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="c4145-500">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-500">-or-</span>
          </span>
          <span data-ttu-id="c4145-501">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-501">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="c4145-502">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-502">-or-</span>
          </span>
          <span data-ttu-id="c4145-503">身份验证已在进行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-503">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c4145-504">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-504">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-505">开始一个异步操作，以处理进行身份验证的客户端-服务器连接中的服务器端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-505">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-506">正在进行身份验证时，此方法的重载不会阻止。</span><span class="sxs-lookup"><span data-stu-id="c4145-506">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="c4145-507">若要阻止等待身份验证完成时，请使用之一<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-507">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="c4145-508">用于对服务器进行身份验证的 X509Certificate 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-508">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="c4145-509">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-509">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="c4145-510">一个用户定义对象，其中包含操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-510">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="c4145-511">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-511">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-512">服务器调用此方法，以便开始一个异步操作，对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-512">Called by servers to begin an asynchronous operation to authenticate the client and optionally the server in a client-server connection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4145-513">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-513">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]<span data-ttu-id="c4145-514"> 不会在身份验证过程检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="c4145-514"> The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="c4145-515">客户端不需要提供身份验证证书。</span><span class="sxs-lookup"><span data-stu-id="c4145-515">The client is not required to provide a certificate for authentication.</span></span>  
  
 <span data-ttu-id="c4145-516">必须通过调用完成异步身份验证操作<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-516">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="c4145-517">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="c4145-517">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="c4145-518">在操作完成时，此方法不会阻止。</span><span class="sxs-lookup"><span data-stu-id="c4145-518">This method does not block while the operation completes.</span></span> <span data-ttu-id="c4145-519">若要阻止该操作完成之前，请使用之一<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="c4145-519">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="c4145-520">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="c4145-520">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="c4145-521">如果你收到<xref:System.Security.Authentication.AuthenticationException>，则此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="c4145-521">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="c4145-522">您应关闭此对象，并删除对它的所有引用，以便它可以通过垃圾回收器收集。</span><span class="sxs-lookup"><span data-stu-id="c4145-522">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4145-523">
            <paramref name="serverCertificate" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-523">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="c4145-524">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-524">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c4145-525">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-525">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="c4145-526">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-526">-or-</span>
          </span>
          <span data-ttu-id="c4145-527">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了客户端身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-527">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="c4145-528">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-528">-or-</span>
          </span>
          <span data-ttu-id="c4145-529">身份验证已在进行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-529">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c4145-530">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-530">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="c4145-531">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-531">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="c4145-532">用于对服务器进行身份验证的 X509Certificate 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-532">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="clientCertificateRequired">
          <span data-ttu-id="c4145-533">一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-533">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span>
          </span>
          <span data-ttu-id="c4145-534">请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-534">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="c4145-535">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-535">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="c4145-536">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-536">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="c4145-537">一个用户定义对象，其中包含操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-537">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="c4145-538">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-538">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-539">由服务器调用，以使用指定的证书、要求和系统默认安全协议开始对服务器和客户端（可选）异步进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-539">Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and requirements, and the system default security protocol.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4145-540">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-540">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="c4145-541">必须通过调用完成异步身份验证操作<xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-541">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="c4145-542">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="c4145-542">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="c4145-543">在操作完成时，此方法不会阻止。</span><span class="sxs-lookup"><span data-stu-id="c4145-543">This method does not block while the operation completes.</span></span> <span data-ttu-id="c4145-544">若要阻止该操作完成之前，请使用之一<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="c4145-544">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="c4145-545">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="c4145-545">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="c4145-546">如果你收到<xref:System.Security.Authentication.AuthenticationException>，则此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="c4145-546">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="c4145-547">您应关闭此对象，并删除对它的所有引用，以便它可以通过垃圾回收器收集。</span><span class="sxs-lookup"><span data-stu-id="c4145-547">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4145-548">
            <paramref name="serverCertificate" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-548">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="c4145-549">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-549">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c4145-550">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-550">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="c4145-551">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-551">-or-</span>
          </span>
          <span data-ttu-id="c4145-552">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-552">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="c4145-553">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-553">-or-</span>
          </span>
          <span data-ttu-id="c4145-554">身份验证已在进行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-554">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c4145-555">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-555">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="c4145-556">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-556">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="c4145-557">用于对服务器进行身份验证的 X509Certificate 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-557">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="clientCertificateRequired">
          <span data-ttu-id="c4145-558">一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-558">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span>
          </span>
          <span data-ttu-id="c4145-559">请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-559">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span>
          </span>
        </param>
        <param name="enabledSslProtocols">
          <span data-ttu-id="c4145-560">代表用于身份验证的协议的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-560">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="c4145-561">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-561">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="c4145-562">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-562">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="c4145-563">一个用户定义对象，其中包含操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-563">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="c4145-564">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-564">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-565">由服务器调用，以使用指定的证书、要求和安全协议开始对服务器和客户端（可选）异步进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-565">Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates, requirements and security protocol.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4145-566">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-566">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="c4145-567">必须通过调用完成异步身份验证操作<xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-567">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="c4145-568">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="c4145-568">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="c4145-569">在操作完成时，此方法不会阻止。</span><span class="sxs-lookup"><span data-stu-id="c4145-569">This method does not block while the operation completes.</span></span> <span data-ttu-id="c4145-570">若要阻止该操作完成之前，请使用之一<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="c4145-570">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="c4145-571">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="c4145-571">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="c4145-572">如果你收到<xref:System.Security.Authentication.AuthenticationException>，则此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="c4145-572">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="c4145-573">您应关闭此对象，并删除对它的所有引用，以便它可以通过垃圾回收器收集。</span><span class="sxs-lookup"><span data-stu-id="c4145-573">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4145-574">
            <paramref name="serverCertificate" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-574">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4145-575">
            <paramref name="enabledSslProtocols" /> 不是有效的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-575">
              <paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="c4145-576">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-576">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c4145-577">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-577">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="c4145-578">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-578">-or-</span>
          </span>
          <span data-ttu-id="c4145-579">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-579">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="c4145-580">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-580">-or-</span>
          </span>
          <span data-ttu-id="c4145-581">身份验证已在进行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-581">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c4145-582">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-582">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="c4145-583">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-583">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c4145-584">一个 <see cref="T:System.Byte" /> 数组，该数组接收从流中读取的字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-584">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="c4145-585">
            <c>缓冲区</c>中从零开始的位置，从此处开始存储从此流中读取的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-585">The zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c4145-586">要从流中读取的最大字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-586">The maximum number of bytes to read from the stream.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="c4145-587">
            <see cref="T:System.AsyncCallback" /> 委托，该委托引用读操作完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-587">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="c4145-588">一个用户定义的对象，其中包含读操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-588">A user-defined object that contains information about the read operation.</span>
          </span>
          <span data-ttu-id="c4145-589">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-589">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-590">开始一个异步读操作，此操作读取流中的数据并将其存储在指定的数组中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-590">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4145-591">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-591">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-592">如果启用了加密和签名，读取的操作从基础流中读取数据、 检查的数据的完整性和/或对其进行解密。</span><span class="sxs-lookup"><span data-stu-id="c4145-592">If encryption and or signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and/or decrypts it.</span></span> <span data-ttu-id="c4145-593">异步读的操作必须由调用完成<xref:System.Net.Security.SslStream.EndRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-593">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.SslStream.EndRead%2A> method.</span></span> <span data-ttu-id="c4145-594">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="c4145-594">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="c4145-595">在操作完成时，此方法不会阻止。</span><span class="sxs-lookup"><span data-stu-id="c4145-595">This method does not block while the operation completes.</span></span> <span data-ttu-id="c4145-596">若要阻止该操作完成之前，请使用<xref:System.Net.Security.SslStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-596">To block until the operation completes, use the <xref:System.Net.Security.SslStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="c4145-597">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="c4145-597">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="c4145-598"><xref:System.Net.Security.SslStream>类不支持多个同时进行的读取操作。</span><span class="sxs-lookup"><span data-stu-id="c4145-598">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous read operations.</span></span>  
  
 <span data-ttu-id="c4145-599">你已成功通过身份验证之前，不能调用此方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-599">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="c4145-600">进行身份验证的调用一个<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>，或<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>，<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-600">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-601">下面的代码示例演示如何启动异步读的操作。</span><span class="sxs-lookup"><span data-stu-id="c4145-601">The following code example demonstrates starting an asynchronous read operation.</span></span>  
  
 [!code-cpp[NclSslClientAsync#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#8)]
 [!code-csharp[NclSslClientAsync#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#8)]  
  
 [!code-cpp[NclSslClientAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#4)]
 [!code-csharp[NclSslClientAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#4)]  
  
 <span data-ttu-id="c4145-602">以下方法在读取完成时调用。</span><span class="sxs-lookup"><span data-stu-id="c4145-602">The following method is called when the read completes.</span></span>  
  
 [!code-cpp[NclSslClientAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#5)]
 [!code-csharp[NclSslClientAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4145-603">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-603">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4145-604">
            <paramref name="offset" />
            <paramref name="&lt;" />
            <paramref name="0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-604">
              <paramref name="offset" />
              <paramref name="&lt;" />
              <paramref name="0" />.</span>
          </span>
          <span data-ttu-id="c4145-605">
            <paramref name="-or-" />
            <paramref name="offset" /> &gt; <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-605">
              <paramref name="-or-" />
              <paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="c4145-606">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-606">-or-</span>
          </span>
          <span data-ttu-id="c4145-607">
            <paramref name="offset" /> + count &gt; <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-607">
              <paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c4145-608">读操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-608">The read operation failed.</span>
          </span>
          <span data-ttu-id="c4145-609">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-609">-or-</span>
          </span>
          <span data-ttu-id="c4145-610">使用了加密服务，但未能解密该数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-610">Encryption is in use, but the data could not be decrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c4145-611">已存在一个正在执行的读取操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-611">There is already a read operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c4145-612">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-612">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c4145-613">未进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-613">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c4145-614">一个 <see cref="T:System.Byte" /> 数组，该数组提供要写入流中的字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-614">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="c4145-615">
            <c>缓冲区</c>中从零开始的位置，从此处开始读取要写入流中的字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-615">The zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c4145-616">
            <see cref="T:System.Int32" /> 值，该值指定要从<c>缓冲区</c>中读取的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-616">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="c4145-617">
            <see cref="T:System.AsyncCallback" /> 委托，它引用写操作完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-617">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="c4145-618">一个用户定义的对象，其中包含写操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-618">A user-defined object that contains information about the write operation.</span>
          </span>
          <span data-ttu-id="c4145-619">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-619">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-620">开始一个异步写操作，此操作将指定缓冲区中的 <see cref="T:System.Byte" /> 写入到流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-620">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4145-621">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-621">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4145-622">下面的代码示例演示如何调用此方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-622">The following code example demonstrates calling this method.</span></span>  
  
 [!code-cpp[NclSslServerAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerAsync/CPP/NclSslServerAsync.cpp#5)]
 [!code-csharp[NclSslServerAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerAsync/CS/serverasync.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4145-623">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-623">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4145-624">
            <paramref name="offset" />
            <paramref name="&lt;" />
            <paramref name="0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-624">
              <paramref name="offset" />
              <paramref name="&lt;" />
              <paramref name="0" />.</span>
          </span>
          <span data-ttu-id="c4145-625">
            <paramref name="-or-" />
            <paramref name="offset" /> &gt; <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-625">
              <paramref name="-or-" />
              <paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="c4145-626">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-626">-or-</span>
          </span>
          <span data-ttu-id="c4145-627">
            <paramref name="offset" /> + count &gt; <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-627">
              <paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c4145-628">写操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-628">The write operation failed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c4145-629">已存在一个正在执行的写操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-629">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c4145-630">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-630">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c4145-631">未进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-631">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CanRead</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-632">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否可读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-632">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4145-633">如果已进行身份验证且基础流可读，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-633">
              <see langword="true" /> if authentication has occurred and the underlying stream is readable; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-634">如果发生了成功的身份验证，此属性返回通过调用返回的值<xref:System.IO.Stream.CanRead%2A>对基础流。</span><span class="sxs-lookup"><span data-stu-id="c4145-634">If successful authentication has occurred, this property returns the value returned by invoking <xref:System.IO.Stream.CanRead%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="c4145-635">基础流时创建的实例指定<xref:System.Net.Security.SslStream>类。</span><span class="sxs-lookup"><span data-stu-id="c4145-635">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-636">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="c4145-636">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
 [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-637">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否可查找。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-637">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4145-638">此属性始终返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-638">This property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-639">请不要尝试设置的位置<xref:System.Net.Security.SslStream>对象或其基础流。</span><span class="sxs-lookup"><span data-stu-id="c4145-639">Do not attempt to set the position of the <xref:System.Net.Security.SslStream> object or its underlying stream.</span></span>  
  
 <span data-ttu-id="c4145-640">基础流时创建的实例指定<xref:System.Net.Security.SslStream>类。</span><span class="sxs-lookup"><span data-stu-id="c4145-640">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Stream.CanSeek" />
        <altmember cref="P:System.Net.Security.SslStream.Position" />
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CanTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-641">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否支持超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-641">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4145-642">如果基础流支持超时，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-642">
              <see langword="true" /> if the underlying stream supports time-outs; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-643">此属性返回通过调用返回的值<xref:System.IO.Stream.CanTimeout%2A>对基础流。</span><span class="sxs-lookup"><span data-stu-id="c4145-643">This property returns the value returned by invoking <xref:System.IO.Stream.CanTimeout%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="c4145-644">基础流时创建的实例指定<xref:System.Net.Security.SslStream>类。</span><span class="sxs-lookup"><span data-stu-id="c4145-644">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-645">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="c4145-645">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
 [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CanWrite</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-646">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否可写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-646">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4145-647">如果已进行身份验证且基础流可写，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-647">
              <see langword="true" /> if authentication has occurred and the underlying stream is writable; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-648">如果发生了成功的身份验证，此属性返回通过调用返回的值<xref:System.IO.Stream.CanWrite%2A>对基础流。</span><span class="sxs-lookup"><span data-stu-id="c4145-648">If successful authentication has occurred, this property returns the value returned by invoking <xref:System.IO.Stream.CanWrite%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="c4145-649">基础流时创建的实例指定<xref:System.Net.Security.SslStream>类。</span><span class="sxs-lookup"><span data-stu-id="c4145-649">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-650">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="c4145-650">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
 [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCertRevocationStatus">
      <MemberSignature Language="C#" Value="public virtual bool CheckCertRevocationStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCertRevocationStatus" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CheckCertRevocationStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CheckCertRevocationStatus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CheckCertRevocationStatus { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CheckCertRevocationStatus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-651">获取一个 <see cref="T:System.Boolean" /> 值，该值指示在证书验证过程中是否检查证书吊销列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-651">Gets a <see cref="T:System.Boolean" /> value that indicates whether the certificate revocation list is checked during the certificate validation process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4145-652">如果检查证书吊销列表，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-652">
              <see langword="true" /> if the certificate revocation list is checked; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-653">证书吊销列表包含已吊销由颁发者颁发的证书。</span><span class="sxs-lookup"><span data-stu-id="c4145-653">The certificate revocation list contains certificates that have been revoked by the issuer.</span></span> <span data-ttu-id="c4145-654">在列表中检查产生负面影响性能，但可以提高应用程序安全性。</span><span class="sxs-lookup"><span data-stu-id="c4145-654">Checking the list negatively impacts performance but improves application security.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-655">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="c4145-655">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
 [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CipherAlgorithm">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.CipherAlgorithmType CipherAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.CipherAlgorithmType CipherAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CipherAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CipherAlgorithm As CipherAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::CipherAlgorithmType CipherAlgorithm { System::Security::Authentication::CipherAlgorithmType get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CipherAlgorithm</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.CipherAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-656">获取一个值，该值确定此 <see cref="T:System.Net.Security.SslStream" /> 使用的批量加密算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-656">Gets a value that identifies the bulk encryption algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4145-657">一个 <see cref="T:System.Security.Authentication.CipherAlgorithmType" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-657">A <see cref="T:System.Security.Authentication.CipherAlgorithmType" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-658">值为<xref:System.Security.Authentication.CipherAlgorithmType.Null>需要<xref:System.Net.Security.SslStream.CipherAlgorithm%2A>属性时<xref:System.Net.Security.EncryptionPolicy.NoEncryption>枚举值用于构造<xref:System.Net.Security.SslStream>实例。</span><span class="sxs-lookup"><span data-stu-id="c4145-658">A value of <xref:System.Security.Authentication.CipherAlgorithmType.Null> is required for the <xref:System.Net.Security.SslStream.CipherAlgorithm%2A> property when the <xref:System.Net.Security.EncryptionPolicy.NoEncryption> enumeration value is used to construct a <xref:System.Net.Security.SslStream> instance.</span></span>  
  
 [!INCLUDE[winxpsvr](~/includes/winxpsvr-md.md)]<span data-ttu-id="c4145-659"> 和[!INCLUDE[winxp](~/includes/winxp-md.md)]不支持<xref:System.Security.Authentication.CipherAlgorithmType.Null>值。</span><span class="sxs-lookup"><span data-stu-id="c4145-659"> and [!INCLUDE[winxp](~/includes/winxp-md.md)] do not support the <xref:System.Security.Authentication.CipherAlgorithmType.Null> value.</span></span> <span data-ttu-id="c4145-660">因此，即使<xref:System.Security.Authentication.CipherAlgorithmType.Null>值用于构造<xref:System.Net.Security.SslStream>实例，<xref:System.Net.Security.EncryptionPolicy>属性将为<xref:System.Security.Authentication.CipherAlgorithmType.None>。</span><span class="sxs-lookup"><span data-stu-id="c4145-660">So even if the <xref:System.Security.Authentication.CipherAlgorithmType.Null> value is used to construct the <xref:System.Net.Security.SslStream> instance, the <xref:System.Net.Security.EncryptionPolicy> property will be <xref:System.Security.Authentication.CipherAlgorithmType.None>.</span></span> <span data-ttu-id="c4145-661"><xref:System.Security.Authentication.CipherAlgorithmType.Null> Windows Vista 及更高版本，才返回值。</span><span class="sxs-lookup"><span data-stu-id="c4145-661">The <xref:System.Security.Authentication.CipherAlgorithmType.Null> value is only returned on Windows Vista and later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-662">下面的代码示例显示为指定的流的加密设置。</span><span class="sxs-lookup"><span data-stu-id="c4145-662">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c4145-663">
            <see cref="P:System.Net.Security.SslStream.CipherAlgorithm" /> 属性是在身份验证过程未完成时访问的或者身份验证过程失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-663">The <see cref="P:System.Net.Security.SslStream.CipherAlgorithm" /> property was accessed before the completion of the authentication process or the authentication process failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CipherStrength">
      <MemberSignature Language="C#" Value="public virtual int CipherStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CipherStrength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CipherStrength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CipherStrength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CipherStrength { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CipherStrength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-664">获取一个值，该值确定此 <see cref="T:System.Net.Security.SslStream" /> 使用的密码算法的强度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-664">Gets a value that identifies the strength of the cipher algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4145-665">
            <see cref="T:System.Int32" /> 值，该值指定算法的强度（以位为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-665">An <see cref="T:System.Int32" /> value that specifies the strength of the algorithm, in bits.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-666">身份验证之前，此属性的值为零。</span><span class="sxs-lookup"><span data-stu-id="c4145-666">The value of this property is zero until the authentication occurs.</span></span>  
  
 <span data-ttu-id="c4145-667">此属性将返回下列值之一：</span><span class="sxs-lookup"><span data-stu-id="c4145-667">This property returns one of the following values:</span></span>  
  
-   <span data-ttu-id="c4145-668">0</span><span class="sxs-lookup"><span data-stu-id="c4145-668">0</span></span>  
  
-   <span data-ttu-id="c4145-669">40</span><span class="sxs-lookup"><span data-stu-id="c4145-669">40</span></span>  
  
-   <span data-ttu-id="c4145-670">56</span><span class="sxs-lookup"><span data-stu-id="c4145-670">56</span></span>  
  
-   <span data-ttu-id="c4145-671">80</span><span class="sxs-lookup"><span data-stu-id="c4145-671">80</span></span>  
  
-   <span data-ttu-id="c4145-672">128</span><span class="sxs-lookup"><span data-stu-id="c4145-672">128</span></span>  
  
-   <span data-ttu-id="c4145-673">168</span><span class="sxs-lookup"><span data-stu-id="c4145-673">168</span></span>  
  
-   <span data-ttu-id="c4145-674">192</span><span class="sxs-lookup"><span data-stu-id="c4145-674">192</span></span>  
  
-   <span data-ttu-id="c4145-675">256</span><span class="sxs-lookup"><span data-stu-id="c4145-675">256</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-676">下面的代码示例显示为指定的流的加密设置。</span><span class="sxs-lookup"><span data-stu-id="c4145-676">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="c4145-677">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-677">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-678">释放由 <see cref="T:System.Net.Security.SslStream" /> 占用的非托管资源，还可以另外再释放托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-678">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.SslStream" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-679">此方法称为由公共`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-679">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="c4145-680">`Dispose()` 调用受保护`Dispose(Boolean)`方法替换`disposing`参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="c4145-680">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="c4145-681"><xref:System.Object.Finalize%2A> 调用`Dispose`与`disposing`设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="c4145-681"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="c4145-682">当`disposing`参数为 true 时，此方法释放由任何托管对象持有的全部资源此<xref:System.Net.Security.SslStream>引用。</span><span class="sxs-lookup"><span data-stu-id="c4145-682">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.SslStream> references.</span></span> <span data-ttu-id="c4145-683">此方法调用每个引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-683">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c4145-684">
              <see langword="Dispose" /> 可以由其他对象多次调用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c4145-684">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="c4145-685">在重写<see langword="Dispose(Boolean)" />请注意不要引用已释放的以前调用中的对象<see langword="Dispose" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c4145-685">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="c4145-686">有关如何实现详细信息<see langword="Dispose(Boolean)" />，请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c4145-686">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="c4145-687">有关详细信息<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，请参阅[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[重写 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c4145-687">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsClient (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsClient(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndAuthenticateAsClient(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="c4145-688">调用 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-688">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-689">结束通过以前调用 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> 而启动的、处于挂起状态的异步服务器身份验证操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-689">Ends a pending asynchronous server authentication operation started with a previous call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-690">如果该操作未完成，此方法阻止，直至它执行。</span><span class="sxs-lookup"><span data-stu-id="c4145-690">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="c4145-691">当身份验证成功时，必须检查<xref:System.Net.Security.SslStream.IsEncrypted%2A>和<xref:System.Net.Security.SslStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="c4145-691">When the authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="c4145-692">检查<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="c4145-692">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="c4145-693">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="c4145-693">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="c4145-694">您应关闭此对象，并删除对它的所有引用，以便它可以通过垃圾回收器收集。</span><span class="sxs-lookup"><span data-stu-id="c4145-694">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 <span data-ttu-id="c4145-695">若要以同步方式执行此操作，请使用之一<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-695">To perform this operation synchronously, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4145-696">
            <paramref name="asyncResult" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-696">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4145-697">
            <paramref name="asyncResult" /> 并不是通过对 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> 的调用创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-697">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="c4145-698">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-698">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c4145-699">没有处于挂起状态的服务器身份验证要完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-699">There is no pending server authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsServer(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsServer (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsServer(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndAuthenticateAsServer(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="c4145-700">调用 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-700">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-701">结束通过以前调用 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> 而启动的、处于挂起状态的异步客户端身份验证操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-701">Ends a pending asynchronous client authentication operation started with a previous call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-702">如果该操作未完成，此方法阻止，直至它执行。</span><span class="sxs-lookup"><span data-stu-id="c4145-702">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="c4145-703">当身份验证成功时，必须检查<xref:System.Net.Security.SslStream.IsEncrypted%2A>和<xref:System.Net.Security.SslStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="c4145-703">When the authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="c4145-704">检查<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="c4145-704">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="c4145-705">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="c4145-705">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="c4145-706">您应关闭此对象，并删除对它的所有引用，以便它可以通过垃圾回收器收集。</span><span class="sxs-lookup"><span data-stu-id="c4145-706">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 <span data-ttu-id="c4145-707">若要以同步方式执行此操作，请使用之一<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-707">To perform this operation synchronously, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4145-708">
            <paramref name="asyncResult" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-708">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4145-709">
            <paramref name="asyncResult" /> 并不是通过对 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> 的调用创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-709">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="c4145-710">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-710">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c4145-711">没有需要完成的处于挂起状态的客户端身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-711">There is no pending client authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndRead(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="c4145-712">调用 <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-712">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-713">结束通过以前调用 <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而启动的异步读操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-713">Ends an asynchronous read operation started with a previous call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4145-714">
            <see cref="T:System.Int32" /> 值，该值指定从基础流中读取的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-714">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-715">如果该操作未完成，此方法阻止，直至它执行。</span><span class="sxs-lookup"><span data-stu-id="c4145-715">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="c4145-716">若要以同步方式执行此操作，使用<xref:System.Net.Security.SslStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-716">To perform this operation synchronously, use the <xref:System.Net.Security.SslStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="c4145-717">你已成功通过身份验证之前，不能调用此方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-717">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="c4145-718">进行身份验证的调用一个<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>，或<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>，<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-718">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-719">下面的代码示例演示结束异步读取操作。</span><span class="sxs-lookup"><span data-stu-id="c4145-719">The following code example demonstrates ending an asynchronous read operation.</span></span>  
  
 [!code-cpp[NclSslClientAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#5)]
 [!code-csharp[NclSslClientAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4145-720">
            <paramref name="asyncResult" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-720">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4145-721">
            <paramref name="asyncResult" /> 并不是通过对 <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 的调用创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-721">
              <paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c4145-722">未进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-722">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c4145-723">读操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-723">The read operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndWrite(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="c4145-724">调用 <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-724">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-725">结束通过以前调用 <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而启动的异步写操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-725">Ends an asynchronous write operation started with a previous call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-726">如果该操作未完成，此方法阻止，直至它执行。</span><span class="sxs-lookup"><span data-stu-id="c4145-726">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="c4145-727">应用程序不能调用此方法，直到你已成功通过身份验证。</span><span class="sxs-lookup"><span data-stu-id="c4145-727">An application cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="c4145-728">若要进行身份验证，调用之一<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>，或<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>，<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-728">To authenticate, call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="c4145-729">若要以同步方式执行此操作，使用<xref:System.Net.Security.SslStream.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-729">To perform this operation synchronously, use the <xref:System.Net.Security.SslStream.Write%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-730">下面的代码示例演示如何结束异步写操作。</span><span class="sxs-lookup"><span data-stu-id="c4145-730">The following code example demonstrates ending an asynchronous write operation.</span></span>  
  
 [!code-cpp[NclSslServerAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerAsync/CPP/NclSslServerAsync.cpp#4)]
 [!code-csharp[NclSslServerAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerAsync/CS/serverasync.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4145-731">
            <paramref name="asyncResult" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-731">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4145-732">
            <paramref name="asyncResult" /> 并不是通过对 <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 的调用创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-732">
              <paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c4145-733">未进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-733">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c4145-734">写操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-734">The write operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Flush</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4145-735">导致所有缓冲数据都要写入基础设备。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-735">Causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-736">此方法调用<xref:System.IO.Stream.Flush%2A>对基础流。</span><span class="sxs-lookup"><span data-stu-id="c4145-736">This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-737">下面的代码示例演示如何调用此方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-737">The following code example demonstrates calling this method.</span></span>  
  
 [!code-cpp[NclSslClientSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#5)]
 [!code-csharp[NclSslClientSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.HashAlgorithmType HashAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.HashAlgorithmType HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HashAlgorithm As HashAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::HashAlgorithmType HashAlgorithm { System::Security::Authentication::HashAlgorithmType get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.HashAlgorithm</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.HashAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-738">获取用于生成消息身份验证代码 (MAC) 的算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-738">Gets the algorithm used for generating message authentication codes (MACs).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4145-739">一个 <see cref="T:System.Security.Authentication.HashAlgorithmType" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-739">A <see cref="T:System.Security.Authentication.HashAlgorithmType" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-740">消息验证算法可生成消息哈希和签名用于检测篡改或伪造。</span><span class="sxs-lookup"><span data-stu-id="c4145-740">Message authentication algorithms generate message hashes and signatures used to detect tampering and forgery.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-741">下面的代码示例显示为指定的流的加密设置。</span><span class="sxs-lookup"><span data-stu-id="c4145-741">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c4145-742">
            <see cref="P:System.Net.Security.SslStream.HashAlgorithm" /> 属性是在身份验证过程未完成时访问的或者身份验证过程失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-742">The <see cref="P:System.Net.Security.SslStream.HashAlgorithm" /> property was accessed before the completion of the authentication process or the authentication process failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HashStrength">
      <MemberSignature Language="C#" Value="public virtual int HashStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HashStrength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.HashStrength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HashStrength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int HashStrength { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.HashStrength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-743">获取一个值，该值标识此实例使用的哈希算法的强度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-743">Gets a value that identifies the strength of the hash algorithm used by this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4145-744">一个 <see cref="T:System.Int32" /> 值，指定 <see cref="T:System.Security.Authentication.HashAlgorithmType" /> 算法的强度（以位为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-744">An <see cref="T:System.Int32" /> value that specifies the strength of the <see cref="T:System.Security.Authentication.HashAlgorithmType" /> algorithm, in bits.</span>
          </span>
          <span data-ttu-id="c4145-745">有效值为 128 或 160。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-745">Valid values are 128 or 160.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-746">身份验证之前，此属性的值为零。</span><span class="sxs-lookup"><span data-stu-id="c4145-746">The value of this property is zero until the authentication occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-747">下面的代码示例显示为指定的流的加密设置。</span><span class="sxs-lookup"><span data-stu-id="c4145-747">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-748">获取一个 <see cref="T:System.Boolean" /> 值，该值指示身份验证是否成功。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-748">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4145-749">如果身份验证成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-749">
              <see langword="true" /> if successful authentication occurred; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-750">客户端进行身份验证通过调用<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>或<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-750">Clients authenticate by calling the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="c4145-751">服务器进行身份验证通过调用<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>或<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-751">Servers authenticate by calling the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-752">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="c4145-752">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="C#" Value="public override bool IsEncrypted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncrypted" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsEncrypted" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEncrypted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEncrypted { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsEncrypted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-753">获取一个 <see cref="T:System.Boolean" /> 值，该值指示此 <see cref="T:System.Net.Security.SslStream" /> 是否使用数据加密。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-753">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.SslStream" /> uses data encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4145-754">如果在通过网络传输数据前将其加密，并在数据到达远程终结点后将其解密，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-754">
              <see langword="true" /> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-755">加密有助于保护的数据的隐私，即它可帮助确保，在传输过程中的数据时，它不能破译由第三方。</span><span class="sxs-lookup"><span data-stu-id="c4145-755">Encryption helps to protect the privacy of the data, namely it helps to ensure that while data is in transit, it cannot be deciphered by third parties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-756">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="c4145-756">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsMutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsMutuallyAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMutuallyAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsMutuallyAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-757">获取一个 <see cref="T:System.Boolean" /> 值，该值指示服务器和客户端是否均已进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-757">Gets a <see cref="T:System.Boolean" /> value that indicates whether both server and client have been authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4145-758">如果服务器已经过身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-758">
              <see langword="true" /> if the server has been authenticated; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-759">服务器想客户端提供一个证书进行身份验证时，将服务器指定相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="c4145-759">Mutual authentication is specified by the server when the server wants the client to provide a certificate for authentication.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-760">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="c4145-760">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" />
        <altmember cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />
      </Docs>
    </Member>
    <Member MemberName="IsServer">
      <MemberSignature Language="C#" Value="public override bool IsServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsServer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsServer { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsServer</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-761">获取一个 <see cref="T:System.Boolean" /> 值，该值指示此 <see cref="T:System.Net.Security.SslStream" /> 使用的连接的本地端是否作为服务器进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-761">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.SslStream" /> was authenticated as the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4145-762">如果本地终结点作为经过身份验证的连接的服务器端成功地进行了身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-762">
              <see langword="true" /> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-763">如果身份验证失败，或者没有出现，则此属性返回`false`。</span><span class="sxs-lookup"><span data-stu-id="c4145-763">If authentication failed or did not occur, this property returns `false`.</span></span>  
  
 <span data-ttu-id="c4145-764">若要与服务器进行身份验证，调用<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>或<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-764">To authenticate as the server, call the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-765">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="c4145-765">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public override bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSigned { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsSigned</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-766">获取一个 <see cref="T:System.Boolean" /> 值，该值指示使用此流发送的数据是否进行签名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-766">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4145-767">如果在传输数据前对其签名，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-767">
              <see langword="true" /> if the data is signed before being transmitted; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-768">数据签名有助于保护数据的完整性，即它可以帮助收件人确定是否数据已被篡改在传输过程中。</span><span class="sxs-lookup"><span data-stu-id="c4145-768">Data signing helps to protect the integrity of the data, namely it helps the recipient determine whether the data has been tampered with while in transit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-769">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="c4145-769">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeAlgorithm">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.KeyExchangeAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyExchangeAlgorithm As ExchangeAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::ExchangeAlgorithmType KeyExchangeAlgorithm { System::Security::Authentication::ExchangeAlgorithmType get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.KeyExchangeAlgorithm</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExchangeAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-770">获取此 <see cref="T:System.Net.Security.SslStream" /> 使用的密钥交换算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-770">Gets the key exchange algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4145-771">一个 <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-771">An <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-772">此属性的值是<xref:System.Security.Authentication.ExchangeAlgorithmType.None>之前进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="c4145-772">The value of this property is <xref:System.Security.Authentication.ExchangeAlgorithmType.None> until the authentication occurs.</span></span>  
  
 <span data-ttu-id="c4145-773">密钥交换算法可保护用来生成共享的密钥的信息。</span><span class="sxs-lookup"><span data-stu-id="c4145-773">The key exchange algorithm protects information used to generate shared keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-774">下面的代码示例显示为指定的流的加密设置。</span><span class="sxs-lookup"><span data-stu-id="c4145-774">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeStrength">
      <MemberSignature Language="C#" Value="public virtual int KeyExchangeStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyExchangeStrength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.KeyExchangeStrength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyExchangeStrength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeyExchangeStrength { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.KeyExchangeStrength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-775">获取一个值，该值指示此实例使用的密钥交换算法的强度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-775">Gets a value that identifies the strength of the key exchange algorithm used by this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4145-776">一个 <see cref="T:System.Int32" /> 值，指定 <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> 算法的强度（以位为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-776">An <see cref="T:System.Int32" /> value that specifies the strength of the <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> algorithm, in bits.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-777">身份验证之前，此属性的值为零。</span><span class="sxs-lookup"><span data-stu-id="c4145-777">The value of this property is zero until the authentication occurs.</span></span>  
  
 <span data-ttu-id="c4145-778">通常情况下，此属性的值是以下项之一：</span><span class="sxs-lookup"><span data-stu-id="c4145-778">In common scenarios, the value of this property is one of the following:</span></span>  
  
-   <span data-ttu-id="c4145-779">512</span><span class="sxs-lookup"><span data-stu-id="c4145-779">512</span></span>  
  
-   <span data-ttu-id="c4145-780">768</span><span class="sxs-lookup"><span data-stu-id="c4145-780">768</span></span>  
  
-   <span data-ttu-id="c4145-781">1024</span><span class="sxs-lookup"><span data-stu-id="c4145-781">1024</span></span>  
  
-   <span data-ttu-id="c4145-782">2048</span><span class="sxs-lookup"><span data-stu-id="c4145-782">2048</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-783">下面的代码示例显示为指定的流的加密设置。</span><span class="sxs-lookup"><span data-stu-id="c4145-783">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-784">获取基础流的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-784">Gets the length of the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4145-785">
            <see cref="T:System.Int64" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-785">A <see cref="T:System.Int64" />.</span>
          </span>
          <span data-ttu-id="c4145-786">基础流的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-786">The length of the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-787">此属性返回通过调用返回的值<xref:System.IO.Stream.Length%2A>对基础流。</span><span class="sxs-lookup"><span data-stu-id="c4145-787">This property returns the value returned by invoking <xref:System.IO.Stream.Length%2A> on the underlying stream.</span></span> <span data-ttu-id="c4145-788">如果基础流是不可查找的此方法通常会引发异常。</span><span class="sxs-lookup"><span data-stu-id="c4145-788">If the underlying stream is not seekable, this method typically throws an exception.</span></span> <span data-ttu-id="c4145-789">基础流的运行时类型确定引发的异常的运行时类型。</span><span class="sxs-lookup"><span data-stu-id="c4145-789">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c4145-790">当基础流为 <see cref="T:System.Net.Sockets.NetworkStream" /> 时，不支持获取此属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-790">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LocalCertificate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.LocalCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LocalCertificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::X509Certificates::X509Certificate ^ LocalCertificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.LocalCertificate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-791">获取用于对本地终结点进行身份验证的证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-791">Gets the certificate used to authenticate the local endpoint.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4145-792">一个 X509Certificate 对象，它表示为身份验证提供的证书；或者，如果没有提供证书，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-792">An X509Certificate object that represents the certificate supplied for authentication or <see langword="null" /> if no certificate was supplied.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4145-793">下面的代码示例演示如何显示此属性返回的证书。</span><span class="sxs-lookup"><span data-stu-id="c4145-793">The following code example demonstrates displaying the certificate returned by this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#6)]
 [!code-csharp[NclSslServerSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c4145-794">身份验证失败或没有进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-794">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NegotiatedApplicationProtocol">
      <MemberSignature Language="C#" Value="public System.Net.Security.SslApplicationProtocol NegotiatedApplicationProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.SslApplicationProtocol NegotiatedApplicationProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.NegotiatedApplicationProtocol" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NegotiatedApplicationProtocol As SslApplicationProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::SslApplicationProtocol NegotiatedApplicationProtocol { System::Net::Security::SslApplicationProtocol get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.SslApplicationProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-795">获取或设置基础流中的当前位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-795">Gets or sets the current position in the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4145-796">
            <see cref="T:System.Int64" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-796">A <see cref="T:System.Int64" />.</span>
          </span>
          <span data-ttu-id="c4145-797">基础流中的当前位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-797">The current position in the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-798">此属性返回通过调用返回的值<xref:System.IO.Stream.Position%2A>对基础流。</span><span class="sxs-lookup"><span data-stu-id="c4145-798">This property returns the value returned by invoking <xref:System.IO.Stream.Position%2A> on the underlying stream.</span></span> <span data-ttu-id="c4145-799">如果基础流是不可查找的此方法通常会引发异常。</span><span class="sxs-lookup"><span data-stu-id="c4145-799">If the underlying stream is not seekable, this method typically throws an exception.</span></span> <span data-ttu-id="c4145-800">基础流的运行时类型确定引发的异常的运行时类型。</span><span class="sxs-lookup"><span data-stu-id="c4145-800">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c4145-801">不支持设置此属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-801">Setting this property is not supported.</span>
          </span>
          <span data-ttu-id="c4145-802">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-802">-or-</span>
          </span>
          <span data-ttu-id="c4145-803">当基础流为 <see cref="T:System.Net.Sockets.NetworkStream" /> 时，不支持获取此属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-803">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Read(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c4145-804">一个 <see cref="T:System.Byte" /> 数组，该数组接收从此流读取的字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-804">A <see cref="T:System.Byte" /> array that receives the bytes read from this stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="c4145-805">
            <see cref="T:System.Int32" />，它包含 <c>buffer</c> 中从零开始的位置，从该位置开始存储从此流读取的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-805">A <see cref="T:System.Int32" /> that contains the zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c4145-806">
            <see cref="T:System.Int32" />，包含要从此流读取的最大字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-806">A <see cref="T:System.Int32" /> that contains the maximum number of bytes to read from this stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-807">读取此流中的数据并将其存储在指定的数组中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-807">Reads data from this stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4145-808">
            <see cref="T:System.Int32" /> 值，该值指定读取的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-808">A <see cref="T:System.Int32" /> value that specifies the number of bytes read.</span>
          </span>
          <span data-ttu-id="c4145-809">如果再也没有要读取的数据，将返回 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-809">When there is no more data to be read, returns 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-810">该方法读取的最多`count`字节从流并将它们存储在`buffer`开始`offset`。</span><span class="sxs-lookup"><span data-stu-id="c4145-810">The method reads a maximum of `count` bytes from the stream and stores them in `buffer` beginning at `offset`.</span></span> <span data-ttu-id="c4145-811">无法执行多个同时进行的读取的操作。</span><span class="sxs-lookup"><span data-stu-id="c4145-811">You cannot perform multiple simultaneous read operations.</span></span>  
  
 <span data-ttu-id="c4145-812">你已成功通过身份验证之前，不能调用此方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-812">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="c4145-813">进行身份验证的调用一个<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>，或<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>，<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-813">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="c4145-814">若要以异步方式执行此操作，使用<xref:System.Net.Security.SslStream.BeginRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-814">To perform this operation asynchronously, use the <xref:System.Net.Security.SslStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-815">下面的代码示例演示从读取<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="c4145-815">The following code example demonstrates reading from an <xref:System.Net.Security.SslStream>.</span></span>  
  
 [!code-cpp[NclSslClientSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#6)]
 [!code-csharp[NclSslClientSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4145-816">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-816">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4145-817">
            <paramref name="offset" />
            <paramref name="&lt;" />
            <paramref name="0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-817">
              <paramref name="offset" />
              <paramref name="&lt;" />
              <paramref name="0" />.</span>
          </span>
          <span data-ttu-id="c4145-818">
            <paramref name="-or-" />
            <paramref name="offset" /> &gt; <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-818">
              <paramref name="-or-" />
              <paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="c4145-819">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-819">-or-</span>
          </span>
          <span data-ttu-id="c4145-820">
            <paramref name="offset" /> + count &gt; <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-820">
              <paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c4145-821">读操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-821">The read operation failed.</span>
          </span>
          <span data-ttu-id="c4145-822">检查内部异常（如果存在）以确定失败的原因。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-822">Check the inner exception, if present to determine the cause of the failure.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c4145-823">已存在一个正在执行的读取操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-823">There is already a read operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c4145-824">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-824">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c4145-825">未进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-825">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.ReadTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-826">获取或设置读操作阻止等待数据的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-826">Gets or sets the amount of time a read operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4145-827">
            <see cref="T:System.Int32" />，指定同步读操作失败前经过的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-827">A <see cref="T:System.Int32" /> that specifies the amount of time that elapses before a synchronous read operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-828">此属性返回通过调用返回的值<xref:System.IO.Stream.ReadTimeout%2A>对基础流。</span><span class="sxs-lookup"><span data-stu-id="c4145-828">This property returns the value returned by invoking <xref:System.IO.Stream.ReadTimeout%2A> on the underlying stream.</span></span> <span data-ttu-id="c4145-829">当设置此属性，<xref:System.IO.Stream.ReadTimeout%2A>对基础流的值设置为指定的值。</span><span class="sxs-lookup"><span data-stu-id="c4145-829">When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.</span></span>  
  
 <span data-ttu-id="c4145-830">如果基础流已<xref:System.Net.Sockets.NetworkStream>，<xref:System.Net.Security.SslStream.ReadTimeout%2A>以毫秒为单位并将设置为<xref:System.Threading.Timeout.Infinite>默认情况下，这样一来，读取操作就不会超时。</span><span class="sxs-lookup"><span data-stu-id="c4145-830">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.SslStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not timeout.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-831">下面的代码示例演示如何设置此属性的值。</span><span class="sxs-lookup"><span data-stu-id="c4145-831">The following code example demonstrates setting the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
 [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteCertificate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.RemoteCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RemoteCertificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::X509Certificates::X509Certificate ^ RemoteCertificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.RemoteCertificate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-832">获取用于对远程终结点进行身份验证的证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-832">Gets the certificate used to authenticate the remote endpoint.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4145-833">一个 X509Certificate 对象，它表示为身份验证提供的证书；或者，如果没有提供证书，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-833">An X509Certificate object that represents the certificate supplied for authentication or <see langword="null" /> if no certificate was supplied.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4145-834">下面的代码示例演示如何显示此属性返回的证书。</span><span class="sxs-lookup"><span data-stu-id="c4145-834">The following code example demonstrates displaying the certificate returned by this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#6)]
 [!code-csharp[NclSslServerSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c4145-835">身份验证失败或没有进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-835">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="c4145-836">忽略此值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-836">This value is ignored.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="c4145-837">忽略此值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-837">This value is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-838">引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-838">Throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4145-839">总是引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-839">Always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-840">请勿调用此方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-840">Do not call this method.</span></span> <span data-ttu-id="c4145-841">它继承的但不是支持<xref:System.Net.Security.SslStream>类。</span><span class="sxs-lookup"><span data-stu-id="c4145-841">It is inherited, but is not supported by the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c4145-842">
            <see cref="T:System.Net.Security.SslStream" /> 对象不支持查找。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-842">Seeking is not supported by <see cref="T:System.Net.Security.SslStream" /> objects.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.SetLength(System.Int64)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c4145-843">
            <see cref="T:System.Int64" /> 值，该值指定流的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-843">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-844">设置基础流的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-844">Sets the length of the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-845">此方法调用<xref:System.IO.Stream.SetLength%2A?displayProperty=nameWithType>时，指定对基础流这<xref:System.Net.Security.SslStream>已创建。</span><span class="sxs-lookup"><span data-stu-id="c4145-845">This method invokes <xref:System.IO.Stream.SetLength%2A?displayProperty=nameWithType> on the underlying stream specified when this <xref:System.Net.Security.SslStream> was created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ShutdownAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ShutdownAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.ShutdownAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShutdownAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ ShutdownAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4145-846">关闭此 SslStream。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-846">Shuts down this SslStream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4145-847">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-847">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SslProtocol">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.SslProtocols SslProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.SslProtocols SslProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.SslProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SslProtocol As SslProtocols" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::SslProtocols SslProtocol { System::Security::Authentication::SslProtocols get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.SslProtocol</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.SslProtocols</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-848">获取一个值，该值指示用于对此连接进行身份验证的安全协议。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-848">Gets a value that indicates the security protocol used to authenticate this connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4145-849">代表用于身份验证的协议的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-849">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-850">指定的受支持的安全协议时<xref:System.Net.Security.SslStream>创建。</span><span class="sxs-lookup"><span data-stu-id="c4145-850">The supported security protocols are specified when the <xref:System.Net.Security.SslStream> is created.</span></span> <span data-ttu-id="c4145-851">如果没有安全协议已传递给构造函数中，使用创建实例<xref:System.Security.Authentication.SslProtocols.Default>。</span><span class="sxs-lookup"><span data-stu-id="c4145-851">If no security protocol was passed to the constructor, the instance is created using <xref:System.Security.Authentication.SslProtocols.Default>.</span></span> <span data-ttu-id="c4145-852">根据客户端和服务器支持的协议，用于身份验证的实际协议处于选中状态。</span><span class="sxs-lookup"><span data-stu-id="c4145-852">The actual protocol used for authentication is selected based on the protocols supported by the client and server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-853">下面的示例显示了指定的流的安全属性。</span><span class="sxs-lookup"><span data-stu-id="c4145-853">The following example displays the security properties of the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransportContext">
      <MemberSignature Language="C#" Value="public System.Net.TransportContext TransportContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.TransportContext TransportContext" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.TransportContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransportContext As TransportContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::TransportContext ^ TransportContext { System::Net::TransportContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.TransportContext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.TransportContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-854">获取用于采用扩展保护的身份验证的 <see cref="T:System.Net.TransportContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-854">Gets the <see cref="T:System.Net.TransportContext" /> used for authentication using extended protection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4145-855">一个 <see cref="T:System.Net.TransportContext" /> 对象，它包含用于扩展保护的通道绑定令牌 (CBT)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-855">The <see cref="T:System.Net.TransportContext" /> object that contains the channel binding token (CBT) used for extended protection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-856">将数据写入此流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-856">Writes data to this stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Write(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Write(System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c4145-857">一个 <see cref="T:System.Byte" /> 数组，该数组提供要写入流中的字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-857">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-858">将指定的数据写入此流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-858">Writes the specified data to this stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-859">当在操作完成时，将阻止此方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-859">This method blocks while the operation completes.</span></span> <span data-ttu-id="c4145-860">若要防止阻塞操作完成时，使用<xref:System.Net.Security.SslStream.BeginWrite%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-860">To prevent blocking while the operation completes, use the <xref:System.Net.Security.SslStream.BeginWrite%2A> method.</span></span>  
  
 <span data-ttu-id="c4145-861">你已成功通过身份验证之前，不能调用此方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-861">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="c4145-862">进行身份验证的调用一个<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>，或<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>，<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-862">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="c4145-863"><xref:System.Net.Security.SslStream>类不支持多个同时进行的写入操作。</span><span class="sxs-lookup"><span data-stu-id="c4145-863">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-864">下面的代码示例演示如何写入经过身份验证的<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="c4145-864">The following code example demonstrates writing to an authenticated <xref:System.Net.Security.SslStream>.</span></span>  
  
 [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
 [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4145-865">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-865">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c4145-866">写操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-866">The write operation failed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c4145-867">已存在一个正在执行的写操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-867">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c4145-868">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-868">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c4145-869">未进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-869">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Write(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c4145-870">一个 <see cref="T:System.Byte" /> 数组，该数组提供要写入流中的字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-870">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="c4145-871">
            <see cref="T:System.Int32" />，它包含 <c>buffer</c> 中从零开始的位置，从该位置开始读取要写入流中的字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-871">A <see cref="T:System.Int32" /> that contains the zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c4145-872">
            <see cref="T:System.Int32" />，包含要从 <c>buffer</c> 中读取的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-872">A <see cref="T:System.Int32" /> that contains the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4145-873">使用指定的缓冲区和偏移将指定数目的 <see cref="T:System.Byte" /> 写入基础流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-873">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-874">当在操作完成时，将阻止此方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-874">This method blocks while the operation completes.</span></span> <span data-ttu-id="c4145-875">若要防止在操作完成的操作完成后，使用<xref:System.Net.Security.SslStream.BeginWrite%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-875">To prevent blocking while the operation completes the operation completes, use the <xref:System.Net.Security.SslStream.BeginWrite%2A> method.</span></span>  
  
 <span data-ttu-id="c4145-876">你已成功通过身份验证之前，不能调用此方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-876">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="c4145-877">进行身份验证的调用一个<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>，或<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>，<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c4145-877">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="c4145-878"><xref:System.Net.Security.SslStream>类不支持多个同时进行的写入操作。</span><span class="sxs-lookup"><span data-stu-id="c4145-878">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4145-879">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-879">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4145-880">
            <paramref name="offset" />
            <paramref name="&lt;" />
            <paramref name="0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-880">
              <paramref name="offset" />
              <paramref name="&lt;" />
              <paramref name="0" />.</span>
          </span>
          <span data-ttu-id="c4145-881">
            <paramref name="-or-" />
            <paramref name="offset" /> &gt; <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-881">
              <paramref name="-or-" />
              <paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="c4145-882">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-882">-or-</span>
          </span>
          <span data-ttu-id="c4145-883">
            <paramref name="offset" /> + count &gt; <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-883">
              <paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c4145-884">写操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-884">The write operation failed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c4145-885">已存在一个正在执行的写操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-885">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c4145-886">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-886">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c4145-887">未进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-887">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.WriteTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4145-888">获取或设置写操作阻止等待数据的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-888">Gets or sets the amount of time a write operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4145-889">
            <see cref="T:System.Int32" />，指定同步写操作失败前经过的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4145-889">A <see cref="T:System.Int32" /> that specifies the amount of time that elapses before a synchronous write operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4145-890">此属性返回通过调用返回的值<xref:System.IO.Stream.WriteTimeout%2A>对基础流。</span><span class="sxs-lookup"><span data-stu-id="c4145-890">This property returns the value returned by invoking <xref:System.IO.Stream.WriteTimeout%2A> on the underlying stream.</span></span> <span data-ttu-id="c4145-891">对于集合运算指定的值设置<xref:System.IO.Stream.WriteTimeout%2A>对基础流的值。</span><span class="sxs-lookup"><span data-stu-id="c4145-891">For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.</span></span>  
  
 <span data-ttu-id="c4145-892">如果基础流已<xref:System.Net.Sockets.NetworkStream>，<xref:System.Net.Security.SslStream.WriteTimeout%2A>以毫秒为单位并将设置为<xref:System.Threading.Timeout.Infinite>默认情况下，因此，编写操作就不会超时。</span><span class="sxs-lookup"><span data-stu-id="c4145-892">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.SslStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not timeout.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4145-893">下面的代码示例演示如何设置此属性的值。</span><span class="sxs-lookup"><span data-stu-id="c4145-893">The following code example demonstrates setting the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
 [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>